,language,title,original,cleaned,stemmed,lemmatized
0,Python,GitHub - donnemartin/system-design-primer: Learn how to design large-scale systems. Prep for the system design interview.  Includes Anki flashcards.,"English ‚àô Êó•Êú¨Ë™û ‚àô ÁÆÄ‰Ωì‰∏≠Êñá ‚àô ÁπÅÈ´î‰∏≠Êñá | ÿßŸÑÿπŸéÿ±Ÿéÿ®ŸêŸäŸéŸëÿ©‚Äé ‚àô ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‚àô Portugu√™s do Brasil ‚àô Deutsch ‚àô ŒµŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ ‚àô ◊¢◊ë◊®◊ô◊™ ‚àô Italiano ‚àô ÈüìÂúãË™û ‚àô ŸÅÿßÿ±ÿ≥€å ‚àô Polski ‚àô —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ ‚àô Espa√±ol ‚àô ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‚àô T√ºrk√ße ‚àô ti·∫øng Vi·ªát ‚àô Fran√ßais | Add Translation
The System Design Primer




Motivation

Learn how to design large-scale systems.
Prep for the system design interview.

Learn how to design large-scale systems
Learning how to design scalable systems will help you become a better engineer.
System design is a broad topic.  There is a vast amount of resources scattered throughout the web on system design principles.
This repo is an organized collection of resources to help you learn how to build systems at scale.
Learn from the open source community
This is a continually updated, open source project.
Contributions are welcome!
Prep for the system design interview
In addition to coding interviews, system design is a required component of the technical interview process at many tech companies.
Practice common system design interview questions and compare your results with sample solutions: discussions, code, and diagrams.
Additional topics for interview prep:

Study guide
How to approach a system design interview question
System design interview questions, with solutions
Object-oriented design interview questions, with solutions
Additional system design interview questions

Anki flashcards




The provided Anki flashcard decks use spaced repetition to help you retain key system design concepts.

System design deck
System design exercises deck
Object oriented design exercises deck

Great for use while on-the-go.
Coding Resource: Interactive Coding Challenges
Looking for resources to help you prep for the Coding Interview?




Check out the sister repo Interactive Coding Challenges, which contains an additional Anki deck:

Coding deck

Contributing

Learn from the community.

Feel free to submit pull requests to help:

Fix errors
Improve sections
Add new sections
Translate

Content that needs some polishing is placed under development.
Review the Contributing Guidelines.
Index of system design topics

Summaries of various system design topics, including pros and cons.  Everything is a trade-off.
Each section contains links to more in-depth resources.






System design topics: start here

Step 1: Review the scalability video lecture
Step 2: Review the scalability article
Next steps


Performance vs scalability
Latency vs throughput
Availability vs consistency

CAP theorem

CP - consistency and partition tolerance
AP - availability and partition tolerance




Consistency patterns

Weak consistency
Eventual consistency
Strong consistency


Availability patterns

Fail-over
Replication
Availability in numbers


Domain name system
Content delivery network

Push CDNs
Pull CDNs


Load balancer

Active-passive
Active-active
Layer 4 load balancing
Layer 7 load balancing
Horizontal scaling


Reverse proxy (web server)

Load balancer vs reverse proxy


Application layer

Microservices
Service discovery


Database

Relational database management system (RDBMS)

Master-slave replication
Master-master replication
Federation
Sharding
Denormalization
SQL tuning


NoSQL

Key-value store
Document store
Wide column store
Graph Database


SQL or NoSQL


Cache

Client caching
CDN caching
Web server caching
Database caching
Application caching
Caching at the database query level
Caching at the object level
When to update the cache

Cache-aside
Write-through
Write-behind (write-back)
Refresh-ahead




Asynchronism

Message queues
Task queues
Back pressure


Communication

Transmission control protocol (TCP)
User datagram protocol (UDP)
Remote procedure call (RPC)
Representational state transfer (REST)


Security
Appendix

Powers of two table
Latency numbers every programmer should know
Additional system design interview questions
Real world architectures
Company architectures
Company engineering blogs


Under development
Credits
Contact info
License

Study guide

Suggested topics to review based on your interview timeline (short, medium, long).


Q: For interviews, do I need to know everything here?
A: No, you don't need to know everything here to prepare for the interview.
What you are asked in an interview depends on variables such as:

How much experience you have
What your technical background is
What positions you are interviewing for
Which companies you are interviewing with
Luck

More experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.
Start broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.

Short timeline - Aim for breadth with system design topics.  Practice by solving some interview questions.
Medium timeline - Aim for breadth and some depth with system design topics.  Practice by solving many interview questions.
Long timeline - Aim for breadth and more depth with system design topics.  Practice by solving most interview questions.





Short
Medium
Long




Read through the System design topics to get a broad understanding of how systems work
üëç
üëç
üëç


Read through a few articles in the Company engineering blogs for the companies you are interviewing with
üëç
üëç
üëç


Read through a few Real world architectures
üëç
üëç
üëç


Review How to approach a system design interview question
üëç
üëç
üëç


Work through System design interview questions with solutions
Some
Many
Most


Work through Object-oriented design interview questions with solutions
Some
Many
Most


Review Additional system design interview questions
Some
Many
Most



How to approach a system design interview question

How to tackle a system design interview question.

The system design interview is an open-ended conversation.  You are expected to lead it.
You can use the following steps to guide the discussion.  To help solidify this process, work through the System design interview questions with solutions section using the following steps.
Step 1: Outline use cases, constraints, and assumptions
Gather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.

Who is going to use it?
How are they going to use it?
How many users are there?
What does the system do?
What are the inputs and outputs of the system?
How much data do we expect to handle?
How many requests per second do we expect?
What is the expected read to write ratio?

Step 2: Create a high level design
Outline a high level design with all important components.

Sketch the main components and connections
Justify your ideas

Step 3: Design core components
Dive into details for each core component.  For example, if you were asked to design a url shortening service, discuss:

Generating and storing a hash of the full url

MD5 and Base62
Hash collisions
SQL or NoSQL
Database schema


Translating a hashed url to the full url

Database lookup


API and object-oriented design

Step 4: Scale the design
Identify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?

Load balancer
Horizontal scaling
Caching
Database sharding

Discuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using principles of scalable system design.
Back-of-the-envelope calculations
You might be asked to do some estimates by hand.  Refer to the Appendix for the following resources:

Use back of the envelope calculations
Powers of two table
Latency numbers every programmer should know

Source(s) and further reading
Check out the following links to get a better idea of what to expect:

How to ace a systems design interview
The system design interview
Intro to Architecture and Systems Design Interviews

System design interview questions with solutions

Common system design interview questions with sample discussions, code, and diagrams.
Solutions linked to content in the solutions/ folder.




Question





Design Pastebin.com (or Bit.ly)
Solution


Design the Twitter timeline and search (or Facebook feed and search)
Solution


Design a web crawler
Solution


Design Mint.com
Solution


Design the data structures for a social network
Solution


Design a key-value store for a search engine
Solution


Design Amazon's sales ranking by category feature
Solution


Design a system that scales to millions of users on AWS
Solution


Add a system design question
Contribute



Design Pastebin.com (or Bit.ly)
View exercise and solution

Design the Twitter timeline and search (or Facebook feed and search)
View exercise and solution

Design a web crawler
View exercise and solution

Design Mint.com
View exercise and solution

Design the data structures for a social network
View exercise and solution

Design a key-value store for a search engine
View exercise and solution

Design Amazon's sales ranking by category feature
View exercise and solution

Design a system that scales to millions of users on AWS
View exercise and solution

Object-oriented design interview questions with solutions

Common object-oriented design interview questions with sample discussions, code, and diagrams.
Solutions linked to content in the solutions/ folder.


Note: This section is under development




Question





Design a hash map
Solution


Design a least recently used cache
Solution


Design a call center
Solution


Design a deck of cards
Solution


Design a parking lot
Solution


Design a chat server
Solution


Design a circular array
Contribute


Add an object-oriented design question
Contribute



System design topics: start here
New to system design?
First, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.
Step 1: Review the scalability video lecture
Scalability Lecture at Harvard

Topics covered:

Vertical scaling
Horizontal scaling
Caching
Load balancing
Database replication
Database partitioning



Step 2: Review the scalability article
Scalability

Topics covered:

Clones
Databases
Caches
Asynchronism



Next steps
Next, we'll look at high-level trade-offs:

Performance vs scalability
Latency vs throughput
Availability vs consistency

Keep in mind that everything is a trade-off.
Then we'll dive into more specific topics such as DNS, CDNs, and load balancers.
Performance vs scalability
A service is scalable if it results in increased performance in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.1
Another way to look at performance vs scalability:

If you have a performance problem, your system is slow for a single user.
If you have a scalability problem, your system is fast for a single user but slow under heavy load.

Source(s) and further reading

A word on scalability
Scalability, availability, stability, patterns

Latency vs throughput
Latency is the time to perform some action or to produce some result.
Throughput is the number of such actions or results per unit of time.
Generally, you should aim for maximal throughput with acceptable latency.
Source(s) and further reading

Understanding latency vs throughput

Availability vs consistency
CAP theorem



Source: CAP theorem revisited

In a distributed computer system, you can only support two of the following guarantees:

Consistency - Every read receives the most recent write or an error
Availability - Every request receives a response, without guarantee that it contains the most recent version of the information
Partition Tolerance - The system continues to operate despite arbitrary partitioning due to network failures

Networks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.
CP - consistency and partition tolerance
Waiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.
AP - availability and partition tolerance
Responses return the most recent version of the data available on a node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.
AP is a good choice if the business needs allow for eventual consistency or when the system needs to continue working despite external errors.
Source(s) and further reading

CAP theorem revisited
A plain english introduction to CAP theorem
CAP FAQ

Consistency patterns
With multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the CAP theorem - Every read receives the most recent write or an error.
Weak consistency
After a write, reads may or may not see it.  A best effort approach is taken.
This approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.
Eventual consistency
After a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.
This approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.
Strong consistency
After a write, reads will see it.  Data is replicated synchronously.
This approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.
Source(s) and further reading

Transactions across data centers

Availability patterns
There are two main patterns to support high availability: fail-over and replication.
Fail-over
Active-passive
With active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.
The length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.
Active-passive failover can also be referred to as master-slave failover.
Active-active
In active-active, both servers are managing traffic, spreading the load between them.
If the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.
Active-active failover can also be referred to as master-master failover.
Disadvantage(s): failover

Fail-over adds more hardware and additional complexity.
There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.

Replication
Master-slave and master-master
This topic is further discussed in the Database section:

Master-slave replication
Master-master replication

Availability in numbers
Availability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.
99.9% availability - three 9s



Duration
Acceptable downtime




Downtime per year
8h 45min 57s


Downtime per month
43m 49.7s


Downtime per week
10m 4.8s


Downtime per day
1m 26.4s



99.99% availability - four 9s



Duration
Acceptable downtime




Downtime per year
52min 35.7s


Downtime per month
4m 23s


Downtime per week
1m 5s


Downtime per day
8.6s



Availability in parallel vs in sequence
If a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.
In sequence
Overall availability decreases when two components with availability < 100% are in sequence:
Availability (Total) = Availability (Foo) * Availability (Bar)

If both Foo and Bar each had 99.9% availability, their total availability in sequence would be 99.8%.
In parallel
Overall availability increases when two components with availability < 100% are in parallel:
Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))

If both Foo and Bar each had 99.9% availability, their total availability in parallel would be 99.9999%.
Domain name system



Source: DNS security presentation

A Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.
DNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the time to live (TTL).

NS record (name server) - Specifies the DNS servers for your domain/subdomain.
MX record (mail exchange) - Specifies the mail servers for accepting messages.
A record (address) - Points a name to an IP address.
CNAME (canonical) - Points a name to another name or CNAME (example.com to www.example.com) or to an A record.

Services such as CloudFlare and Route 53 provide managed DNS services.  Some DNS services can route traffic through various methods:

Weighted round robin

Prevent traffic from going to servers under maintenance
Balance between varying cluster sizes
A/B testing


Latency-based
Geolocation-based

Disadvantage(s): DNS

Accessing a DNS server introduces a slight delay, although mitigated by caching described above.
DNS server management could be complex and is generally managed by governments, ISPs, and large companies.
DNS services have recently come under DDoS attack, preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).

Source(s) and further reading

DNS architecture
Wikipedia
DNS articles

Content delivery network



Source: Why use a CDN

A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.
Serving content from CDNs can significantly improve performance in two ways:

Users receive content at data centers close to them
Your servers do not have to serve requests that the CDN fulfills

Push CDNs
Push CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.
Sites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.
Pull CDNs
Pull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.
A time-to-live (TTL) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.
Sites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.
Disadvantage(s): CDN

CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.
Content might be stale if it is updated before the TTL expires it.
CDNs require changing URLs for static content to point to the CDN.

Source(s) and further reading

Globally distributed content delivery
The differences between push and pull CDNs
Wikipedia

Load balancer



Source: Scalable system design patterns

Load balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:

Preventing requests from going to unhealthy servers
Preventing overloading resources
Helping eliminate single points of failure

Load balancers can be implemented with hardware (expensive) or with software such as HAProxy.
Additional benefits include:

SSL termination - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations

Removes the need to install X.509 certificates on each server


Session persistence - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions

To protect against failures, it's common to set up multiple load balancers, either in active-passive or active-active mode.
Load balancers can route traffic based on various metrics, including:

Random
Least loaded
Session/cookies
Round robin or weighted round robin
Layer 4
Layer 7

Layer 4 load balancing
Layer 4 load balancers look at info at the transport layer to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing Network Address Translation (NAT).
Layer 7 load balancing
Layer 7 load balancers look at the application layer to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminates network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.
At the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.
Horizontal scaling
Load balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called Vertical Scaling.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.
Disadvantage(s): horizontal scaling

Scaling horizontally introduces complexity and involves cloning servers

Servers should be stateless: they should not contain any user-related data like sessions or profile pictures
Sessions can be stored in a centralized data store such as a database (SQL, NoSQL) or a persistent cache (Redis, Memcached)


Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out

Disadvantage(s): load balancer

The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.
Introducing a load balancer to help eliminate single points of failure results in increased complexity.
A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.

Source(s) and further reading

NGINX architecture
HAProxy architecture guide
Scalability
Wikipedia
Layer 4 load balancing
Layer 7 load balancing
ELB listener config

Reverse proxy (web server)



Source: Wikipedia


A reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.
Additional benefits include:

Increased security - Hide information about backend servers, blacklist IPs, limit number of connections per client
Increased scalability and flexibility - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration
SSL termination - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations

Removes the need to install X.509 certificates on each server


Compression - Compress server responses
Caching - Return the response for cached requests
Static content - Serve static content directly

HTML/CSS/JS
Photos
Videos
Etc



Load balancer vs reverse proxy

Deploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.
Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.
Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.

Disadvantage(s): reverse proxy

Introducing a reverse proxy results in increased complexity.
A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a failover) further increases complexity.

Source(s) and further reading

Reverse proxy vs load balancer
NGINX architecture
HAProxy architecture guide
Wikipedia

Application layer



Source: Intro to architecting systems for scale

Separating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The single responsibility principle advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.
Workers in the application layer also help enable asynchronism.
Microservices
Related to this discussion are microservices, which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. 1
Pinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.
Service Discovery
Systems such as Consul, Etcd, and Zookeeper can help services find each other by keeping track of registered names, addresses, and ports.  Health checks help verify service integrity and are often done using an HTTP endpoint.  Both Consul and Etcd have a built in key-value store that can be useful for storing config values and other shared data.
Disadvantage(s): application layer

Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).
Microservices can add complexity in terms of deployments and operations.

Source(s) and further reading

Intro to architecting systems for scale
Crack the system design interview
Service oriented architecture
Introduction to Zookeeper
Here's what you need to know about building microservices

Database



Source: Scaling up to your first 10 million users

Relational database management system (RDBMS)
A relational database like SQL is a collection of data items organized in tables.
ACID is a set of properties of relational database transactions.

Atomicity - Each transaction is all or nothing
Consistency - Any transaction will bring the database from one valid state to another
Isolation - Executing transactions concurrently has the same results as if the transactions were executed serially
Durability - Once a transaction has been committed, it will remain so

There are many techniques to scale a relational database: master-slave replication, master-master replication, federation, sharding, denormalization, and SQL tuning.
Master-slave replication
The master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.



Source: Scalability, availability, stability, patterns

Disadvantage(s): master-slave replication

Additional logic is needed to promote a slave to a master.
See Disadvantage(s): replication for points related to both master-slave and master-master.

Master-master replication
Both masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.



Source: Scalability, availability, stability, patterns

Disadvantage(s): master-master replication

You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.
Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.
Conflict resolution comes more into play as more write nodes are added and as latency increases.
See Disadvantage(s): replication for points related to both master-slave and master-master.

Disadvantage(s): replication

There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.
Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.
The more read slaves, the more you have to replicate, which leads to greater replication lag.
On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.
Replication adds more hardware and additional complexity.

Source(s) and further reading: replication

Scalability, availability, stability, patterns
Multi-master replication

Federation



Source: Scaling up to your first 10 million users

Federation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: forums, users, and products, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.
Disadvantage(s): federation

Federation is not effective if your schema requires huge functions or tables.
You'll need to update your application logic to determine which database to read and write.
Joining data from two databases is more complex with a server link.
Federation adds more hardware and additional complexity.

Source(s) and further reading: federation

Scaling up to your first 10 million users

Sharding



Source: Scalability, availability, stability, patterns

Sharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.
Similar to the advantages of federation, sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.
Common ways to shard a table of users is either through the user's last name initial or the user's geographic location.
Disadvantage(s): sharding

You'll need to update your application logic to work with shards, which could result in complex SQL queries.
Data distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.

Rebalancing adds additional complexity.  A sharding function based on consistent hashing can reduce the amount of transferred data.


Joining data from multiple shards is more complex.
Sharding adds more hardware and additional complexity.

Source(s) and further reading: sharding

The coming of the shard
Shard database architecture
Consistent hashing

Denormalization
Denormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as PostgreSQL and Oracle support materialized views which handle the work of storing redundant information and keeping redundant copies consistent.
Once data becomes distributed with techniques such as federation and sharding, managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.
In most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.
Disadvantage(s): denormalization

Data is duplicated.
Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.
A denormalized database under heavy write load might perform worse than its normalized counterpart.

Source(s) and further reading: denormalization

Denormalization

SQL tuning
SQL tuning is a broad topic and many books have been written as reference.
It's important to benchmark and profile to simulate and uncover bottlenecks.

Benchmark - Simulate high-load situations with tools such as ab.
Profile - Enable tools such as the slow query log to help track performance issues.

Benchmarking and profiling might point you to the following optimizations.
Tighten up the schema

MySQL dumps to disk in contiguous blocks for fast access.
Use CHAR instead of VARCHAR for fixed-length fields.

CHAR effectively allows for fast, random access, whereas with VARCHAR, you must find the end of a string before moving onto the next one.


Use TEXT for large blocks of text such as blog posts.  TEXT also allows for boolean searches.  Using a TEXT field results in storing a pointer on disk that is used to locate the text block.
Use INT for larger numbers up to 2^32 or 4 billion.
Use DECIMAL for currency to avoid floating point representation errors.
Avoid storing large BLOBS, store the location of where to get the object instead.
VARCHAR(255) is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.
Set the NOT NULL constraint where applicable to improve search performance.

Use good indices

Columns that you are querying (SELECT, GROUP BY, ORDER BY, JOIN) could be faster with indices.
Indices are usually represented as self-balancing B-tree that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.
Placing an index can keep the data in memory, requiring more space.
Writes could also be slower since the index also needs to be updated.
When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.

Avoid expensive joins

Denormalize where performance demands it.

Partition tables

Break up a table by putting hot spots in a separate table to help keep it in memory.

Tune the query cache

In some cases, the query cache could lead to performance issues.

Source(s) and further reading: SQL tuning

Tips for optimizing MySQL queries
Is there a good reason i see VARCHAR(255) used so often?
How do null values affect performance?
Slow query log

NoSQL
NoSQL is a collection of data items represented in a key-value store, document store, wide column store, or a graph database.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor eventual consistency.
BASE is often used to describe the properties of NoSQL databases.  In comparison with the CAP Theorem, BASE chooses availability over consistency.

Basically available - the system guarantees availability.
Soft state - the state of the system may change over time, even without input.
Eventual consistency - the system will become consistent over a period of time, given that the system doesn't receive input during that period.

In addition to choosing between SQL or NoSQL, it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review key-value stores, document stores, wide column stores, and graph databases in the next section.
Key-value store

Abstraction: hash table

A key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in lexicographic order, allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.
Key-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.
A key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.
Source(s) and further reading: key-value store

Key-value database
Disadvantages of key-value stores
Redis architecture
Memcached architecture

Document store

Abstraction: key-value store with documents stored as values

A document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.
Based on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.
Some document stores like MongoDB and CouchDB also provide a SQL-like language to perform complex queries.  DynamoDB supports both key-values and documents.
Document stores provide high flexibility and are often used for working with occasionally changing data.
Source(s) and further reading: document store

Document-oriented database
MongoDB architecture
CouchDB architecture
Elasticsearch architecture

Wide column store



Source: SQL & NoSQL, a brief history


Abstraction: nested map ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>

A wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.
Google introduced Bigtable as the first wide column store, which influenced the open-source HBase often-used in the Hadoop ecosystem, and Cassandra from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.
Wide column stores offer high availability and high scalability.  They are often used for very large data sets.
Source(s) and further reading: wide column store

SQL & NoSQL, a brief history
Bigtable architecture
HBase architecture
Cassandra architecture

Graph database



Source: Graph database


Abstraction: graph

In a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.
Graphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with REST APIs.
Source(s) and further reading: graph

Graph database
Neo4j
FlockDB

Source(s) and further reading: NoSQL

Explanation of base terminology
NoSQL databases a survey and decision guidance
Scalability
Introduction to NoSQL
NoSQL patterns

SQL or NoSQL



Source: Transitioning from RDBMS to NoSQL

Reasons for SQL:

Structured data
Strict schema
Relational data
Need for complex joins
Transactions
Clear patterns for scaling
More established: developers, community, code, tools, etc
Lookups by index are very fast

Reasons for NoSQL:

Semi-structured data
Dynamic or flexible schema
Non-relational data
No need for complex joins
Store many TB (or PB) of data
Very data intensive workload
Very high throughput for IOPS

Sample data well-suited for NoSQL:

Rapid ingest of clickstream and log data
Leaderboard or scoring data
Temporary data, such as a shopping cart
Frequently accessed ('hot') tables
Metadata/lookup tables

Source(s) and further reading: SQL or NoSQL

Scaling up to your first 10 million users
SQL vs NoSQL differences

Cache



Source: Scalable system design patterns

Caching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.
Databases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.
Client caching
Caches can be located on the client side (OS or browser), server side, or in a distinct cache layer.
CDN caching
CDNs are considered a type of cache.
Web server caching
Reverse proxies and caches such as Varnish can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.
Database caching
Your database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.
Application caching
In-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so cache invalidation algorithms such as least recently used (LRU) can help invalidate 'cold' entries and keep 'hot' data in RAM.
Redis has the following additional features:

Persistence option
Built-in data structures such as sorted sets and lists

There are multiple levels you can cache that fall into two general categories: database queries and objects:

Row level
Query-level
Fully-formed serializable objects
Fully-rendered HTML

Generally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.
Caching at the database query level
Whenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:

Hard to delete a cached result with complex queries
If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell

Caching at the object level
See your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):

Remove the object from cache if its underlying data has changed
Allows for asynchronous processing: workers assemble objects by consuming the latest cached object

Suggestions of what to cache:

User sessions
Fully rendered web pages
Activity streams
User graph data

When to update the cache
Since you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.
Cache-aside



Source: From cache to in-memory data grid

The application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:

Look for entry in cache, resulting in a cache miss
Load entry from the database
Add entry to cache
Return entry

def get_user(self, user_id):
    user = cache.get(""user.{0}"", user_id)
    if user is None:
        user = db.query(""SELECT * FROM users WHERE user_id = {0}"", user_id)
        if user is not None:
            key = ""user.{0}"".format(user_id)
            cache.set(key, json.dumps(user))
    return user
Memcached is generally used in this manner.
Subsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.
Disadvantage(s): cache-aside

Each cache miss results in three trips, which can cause a noticeable delay.
Data can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.
When a node fails, it is replaced by a new, empty node, increasing latency.

Write-through



Source: Scalability, availability, stability, patterns

The application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:

Application adds/updates entry in cache
Cache synchronously writes entry to data store
Return

Application code:
set_user(12345, {""foo"":""bar""})
Cache code:
def set_user(user_id, values):
    user = db.query(""UPDATE Users WHERE id = {0}"", user_id, values)
    cache.set(user_id, user)
Write-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.
Disadvantage(s): write through

When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.
Most data written might never be read, which can be minimized with a TTL.

Write-behind (write-back)



Source: Scalability, availability, stability, patterns

In write-behind, the application does the following:

Add/update entry in cache
Asynchronously write entry to the data store, improving write performance

Disadvantage(s): write-behind

There could be data loss if the cache goes down prior to its contents hitting the data store.
It is more complex to implement write-behind than it is to implement cache-aside or write-through.

Refresh-ahead



Source: From cache to in-memory data grid

You can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.
Refresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.
Disadvantage(s): refresh-ahead

Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.

Disadvantage(s): cache

Need to maintain consistency between caches and the source of truth such as the database through cache invalidation.
Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.
Need to make application changes such as adding Redis or memcached.

Source(s) and further reading

From cache to in-memory data grid
Scalable system design patterns
Introduction to architecting systems for scale
Scalability, availability, stability, patterns
Scalability
AWS ElastiCache strategies
Wikipedia

Asynchronism



Source: Intro to architecting systems for scale

Asynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.
Message queues
Message queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:

An application publishes a job to the queue, then notifies the user of job status
A worker picks up the job from the queue, processes it, then signals the job is complete

The user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.
Redis is useful as a simple message broker but messages can be lost.
RabbitMQ is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.
Amazon SQS is hosted but can have high latency and has the possibility of messages being delivered twice.
Task queues
Tasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.
Celery has support for scheduling and primarily has python support.
Back pressure
If queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  Back pressure can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with exponential backoff.
Disadvantage(s): asynchronism

Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.

Source(s) and further reading

It's all a numbers game
Applying back pressure when overloaded
Little's law
What is the difference between a message queue and a task queue?

Communication



Source: OSI 7 layer model

Hypertext transfer protocol (HTTP)
HTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.
A basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:



Verb
Description
Idempotent*
Safe
Cacheable




GET
Reads a resource
Yes
Yes
Yes


POST
Creates a resource or trigger a process that handles data
No
No
Yes if response contains freshness info


PUT
Creates or replace a resource
Yes
No
No


PATCH
Partially updates a resource
No
No
Yes if response contains freshness info


DELETE
Deletes a resource
Yes
No
No



*Can be called many times without different outcomes.
HTTP is an application layer protocol relying on lower-level protocols such as TCP and UDP.
Source(s) and further reading: HTTP

What is HTTP?
Difference between HTTP and TCP
Difference between PUT and PATCH

Transmission control protocol (TCP)



Source: How to make a multiplayer game

TCP is a connection-oriented protocol over an IP network.  Connection is established and terminated using a handshake.  All packets sent are guaranteed to reach the destination in the original order and without corruption through:

Sequence numbers and checksum fields for each packet
Acknowledgement packets and automatic retransmission

If the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements flow control and congestion control.  These guarantees cause delays and generally result in less efficient transmission than UDP.
To ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a memcached server.  Connection pooling can help in addition to switching to UDP where applicable.
TCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.
Use TCP over UDP when:

You need all of the data to arrive intact
You want to automatically make a best estimate use of the network throughput

User datagram protocol (UDP)



Source: How to make a multiplayer game

UDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.
UDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with DHCP because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.
UDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.
Use UDP over TCP when:

You need the lowest latency
Late data is worse than loss of data
You want to implement your own error correction

Source(s) and further reading: TCP and UDP

Networking for game programming
Key differences between TCP and UDP protocols
Difference between TCP and UDP
Transmission control protocol
User datagram protocol
Scaling memcache at Facebook

Remote procedure call (RPC)



Source: Crack the system design interview

In an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include Protobuf, Thrift, and Avro.
RPC is a request-response protocol:

Client program - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.
Client stub procedure - Marshals (packs) procedure id and arguments into a request message.
Client communication module - OS sends the message from the client to the server.
Server communication module - OS passes the incoming packets to the server stub procedure.
Server stub procedure -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.
The server response repeats the steps above in reverse order.

Sample RPC calls:
GET /someoperation?data=anId

POST /anotheroperation
{
  ""data"":""anId"";
  ""anotherdata"": ""another value""
}

RPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.
Choose a native library (aka SDK) when:

You know your target platform.
You want to control how your ""logic"" is accessed.
You want to control how error control happens off your library.
Performance and end user experience is your primary concern.

HTTP APIs following REST tend to be used more often for public APIs.
Disadvantage(s): RPC

RPC clients become tightly coupled to the service implementation.
A new API must be defined for every new operation or use case.
It can be difficult to debug RPC.
You might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure RPC calls are properly cached on caching servers such as Squid.

Representational state transfer (REST)
REST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.
There are four qualities of a RESTful interface:

Identify resources (URI in HTTP) - use the same URI regardless of any operation.
Change with representations (Verbs in HTTP) - use verbs, headers, and body.
Self-descriptive error message (status response in HTTP) - Use status codes, don't reinvent the wheel.
HATEOAS (HTML interface for HTTP) - your web service should be fully accessible in a browser.

Sample REST calls:
GET /someresources/anId

PUT /someresources/anId
{""anotherdata"": ""another value""}

REST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, representation through headers, and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.
Disadvantage(s): REST

With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.
REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.
Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.
Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.

RPC and REST calls comparison



Operation
RPC
REST




Signup
POST /signup
POST /persons


Resign
POST /resign{""personid"": ""1234""}
DELETE /persons/1234


Read a person
GET /readPerson?personid=1234
GET /persons/1234


Read a person‚Äôs items list
GET /readUsersItemsList?personid=1234
GET /persons/1234/items


Add an item to a person‚Äôs items
POST /addItemToUsersItemsList{""personid"": ""1234"";""itemid"": ""456""}
POST /persons/1234/items{""itemid"": ""456""}


Update an item
POST /modifyItem{""itemid"": ""456"";""key"": ""value""}
PUT /items/456{""key"": ""value""}


Delete an item
POST /removeItem{""itemid"": ""456""}
DELETE /items/456




Source: Do you really know why you prefer REST over RPC

Source(s) and further reading: REST and RPC

Do you really know why you prefer REST over RPC
When are RPC-ish approaches more appropriate than REST?
REST vs JSON-RPC
Debunking the myths of RPC and REST
What are the drawbacks of using REST
Crack the system design interview
Thrift
Why REST for internal use and not RPC

Security
This section could use some updates.  Consider contributing!
Security is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:

Encrypt in transit and at rest.
Sanitize all user inputs or any input parameters exposed to user to prevent XSS and SQL injection.
Use parameterized queries to prevent SQL injection.
Use the principle of least privilege.

Source(s) and further reading

API security checklist
Security guide for developers
OWASP top ten

Appendix
You'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The Powers of two table and Latency numbers every programmer should know are handy references.
Powers of two table
Power           Exact Value         Approx Value        Bytes
---------------------------------------------------------------
7                             128
8                             256
10                           1024   1 thousand           1 KB
16                         65,536                       64 KB
20                      1,048,576   1 million            1 MB
30                  1,073,741,824   1 billion            1 GB
32                  4,294,967,296                        4 GB
40              1,099,511,627,776   1 trillion           1 TB

Source(s) and further reading

Powers of two

Latency numbers every programmer should know
Latency Comparison Numbers
--------------------------
L1 cache reference                           0.5 ns
Branch mispredict                            5   ns
L2 cache reference                           7   ns                      14x L1 cache
Mutex lock/unlock                           25   ns
Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache
Compress 1K bytes with Zippy            10,000   ns       10 us
Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us
Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD
Read 1 MB sequentially from memory     250,000   ns      250 us
Round trip within same datacenter      500,000   ns      500 us
Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory
Disk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip
Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD
Read 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD
Send packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms

Notes
-----
1 ns = 10^-9 seconds
1 us = 10^-6 seconds = 1,000 ns
1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns

Handy metrics based on numbers above:

Read sequentially from disk at 30 MB/s
Read sequentially from 1 Gbps Ethernet at 100 MB/s
Read sequentially from SSD at 1 GB/s
Read sequentially from main memory at 4 GB/s
6-7 world-wide round trips per second
2,000 round trips per second within a data center

Latency numbers visualized

Source(s) and further reading

Latency numbers every programmer should know - 1
Latency numbers every programmer should know - 2
Designs, lessons, and advice from building large distributed systems
Software Engineering Advice from Building Large-Scale Distributed Systems

Additional system design interview questions

Common system design interview questions, with links to resources on how to solve each.




Question
Reference(s)




Design a file sync service like Dropbox
youtube.com


Design a search engine like Google
queue.acm.orgstackexchange.comardendertat.comstanford.edu


Design a scalable web crawler like Google
quora.com


Design Google docs
code.google.comneil.fraser.name


Design a key-value store like Redis
slideshare.net


Design a cache system like Memcached
slideshare.net


Design a recommendation system like Amazon's
hulu.comijcai13.org


Design a tinyurl system like Bitly
n00tc0d3r.blogspot.com


Design a chat app like WhatsApp
highscalability.com


Design a picture sharing system like Instagram
highscalability.comhighscalability.com


Design the Facebook news feed function
quora.comquora.comslideshare.net


Design the Facebook timeline function
facebook.comhighscalability.com


Design the Facebook chat function
erlang-factory.comfacebook.com


Design a graph search function like Facebook's
facebook.comfacebook.comfacebook.com


Design a content delivery network like CloudFlare
figshare.com


Design a trending topic system like Twitter's
michael-noll.comsnikolov .wordpress.com


Design a random ID generation system
blog.twitter.comgithub.com


Return the top k requests during a time interval
cs.ucsb.eduwpi.edu


Design a system that serves data from multiple data centers
highscalability.com


Design an online multiplayer card game
indieflashblog.combuildnewgames.com


Design a garbage collection system
stuffwithstuff.comwashington.edu


Design an API rate limiter
https://stripe.com/blog/


Add a system design question
Contribute



Real world architectures

Articles on how real world systems are designed.




Source: Twitter timelines at scale

Don't focus on nitty gritty details for the following articles, instead:

Identify shared principles, common technologies, and patterns within these articles
Study what problems are solved by each component, where it works, where it doesn't
Review the lessons learned




Type
System
Reference(s)




Data processing
MapReduce - Distributed data processing from Google
research.google.com


Data processing
Spark - Distributed data processing from Databricks
slideshare.net


Data processing
Storm - Distributed data processing from Twitter
slideshare.net







Data store
Bigtable - Distributed column-oriented database from Google
harvard.edu


Data store
HBase - Open source implementation of Bigtable
slideshare.net


Data store
Cassandra - Distributed column-oriented database from Facebook
slideshare.net


Data store
DynamoDB - Document-oriented database from Amazon
harvard.edu


Data store
MongoDB - Document-oriented database
slideshare.net


Data store
Spanner - Globally-distributed database from Google
research.google.com


Data store
Memcached - Distributed memory caching system
slideshare.net


Data store
Redis - Distributed memory caching system with persistence and value types
slideshare.net







File system
Google File System (GFS) - Distributed file system
research.google.com


File system
Hadoop File System (HDFS) - Open source implementation of GFS
apache.org







Misc
Chubby - Lock service for loosely-coupled distributed systems from Google
research.google.com


Misc
Dapper - Distributed systems tracing infrastructure
research.google.com


Misc
Kafka - Pub/sub message queue from LinkedIn
slideshare.net


Misc
Zookeeper - Centralized infrastructure and services enabling synchronization
slideshare.net



Add an architecture
Contribute



Company architectures



Company
Reference(s)




Amazon
Amazon architecture


Cinchcast
Producing 1,500 hours of audio every day


DataSift
Realtime datamining At 120,000 tweets per second


DropBox
How we've scaled Dropbox


ESPN
Operating At 100,000 duh nuh nuhs per second


Google
Google architecture


Instagram
14 million users, terabytes of photosWhat powers Instagram


Justin.tv
Justin.Tv's live video broadcasting architecture


Facebook
Scaling memcached at FacebookTAO: Facebook‚Äôs distributed data store for the social graphFacebook‚Äôs photo storageHow Facebook Live Streams To 800,000 Simultaneous Viewers


Flickr
Flickr architecture


Mailbox
From 0 to one million users in 6 weeks


Netflix
A 360 Degree View Of The Entire Netflix StackNetflix: What Happens When You Press Play?


Pinterest
From 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employees


Playfish
50 million monthly users and growing


PlentyOfFish
PlentyOfFish architecture


Salesforce
How they handle 1.3 billion transactions a day


Stack Overflow
Stack Overflow architecture


TripAdvisor
40M visitors, 200M dynamic page views, 30TB data


Tumblr
15 billion page views a month


Twitter
Making Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersHow Twitter Handles 3,000 Images Per Second


Uber
How Uber scales their real-time market platformLessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories


WhatsApp
The WhatsApp architecture Facebook bought for $19 billion


YouTube
YouTube scalabilityYouTube architecture



Company engineering blogs

Architectures for companies you are interviewing with.
Questions you encounter might be from the same domain.


Airbnb Engineering
Atlassian Developers
AWS Blog
Bitly Engineering Blog
Box Blogs
Cloudera Developer Blog
Dropbox Tech Blog
Engineering at Quora
Ebay Tech Blog
Evernote Tech Blog
Etsy Code as Craft
Facebook Engineering
Flickr Code
Foursquare Engineering Blog
GitHub Engineering Blog
Google Research Blog
Groupon Engineering Blog
Heroku Engineering Blog
Hubspot Engineering Blog
High Scalability
Instagram Engineering
Intel Software Blog
Jane Street Tech Blog
LinkedIn Engineering
Microsoft Engineering
Microsoft Python Engineering
Netflix Tech Blog
Paypal Developer Blog
Pinterest Engineering Blog
Quora Engineering
Reddit Blog
Salesforce Engineering Blog
Slack Engineering Blog
Spotify Labs
Twilio Engineering Blog
Twitter Engineering
Uber Engineering Blog
Yahoo Engineering Blog
Yelp Engineering Blog
Zynga Engineering Blog

Source(s) and further reading
Looking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:

kilimchoi/engineering-blogs

Under development
Interested in adding a section or helping complete one in-progress?  Contribute!

Distributed computing with MapReduce
Consistent hashing
Scatter gather
Contribute

Credits
Credits and sources are provided throughout this repo.
Special thanks to:

Hired in tech
Cracking the coding interview
High scalability
checkcheckzz/system-design-interview
shashank88/system_design
mmcgrana/services-engineering
System design cheat sheet
A distributed systems reading list
Cracking the system design interview

Contact info
Feel free to contact me to discuss any issues, questions, or comments.
My contact info can be found on my GitHub page.
License
I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).
Copyright 2017 Donne Martin

Creative Commons Attribution 4.0 International License (CC BY 4.0)

http://creativecommons.org/licenses/by/4.0/

",english portugues brasil deutsch italiano polski espanol turkce tieng viet francais add translation system design primer motivation learn design largescale systems prep system design interview learn design largescale systems learning design scalable systems help become better engineer system design broad topic vast amount resources scattered throughout web system design principles repo organized collection resources help learn build systems scale learn open source community continually updated open source project contributions welcome prep system design interview addition coding interviews system design required component technical interview process many tech companies practice common system design interview questions compare results sample solutions discussions code diagrams additional topics interview prep study guide approach system design interview question system design interview questions solutions objectoriented design interview questions solutions additional system design interview questions anki flashcards provided anki flashcard decks use spaced repetition help retain key system design concepts system design deck system design exercises deck object oriented design exercises deck great use onthego coding resource interactive coding challenges looking resources help prep coding interview check sister repo interactive coding challenges contains additional anki deck coding deck contributing learn community feel free submit pull requests help fix errors improve sections add new sections translate content needs polishing placed development review contributing guidelines index system design topics summaries various system design topics including pros cons everything tradeoff section contains links indepth resources system design topics start step review scalability video lecture step review scalability article next steps performance vs scalability latency vs throughput availability vs consistency cap theorem cp consistency partition tolerance ap availability partition tolerance consistency patterns weak consistency eventual consistency strong consistency availability patterns failover replication availability numbers domain name system content delivery network push cdns pull cdns load balancer activepassive activeactive layer load balancing layer load balancing horizontal scaling reverse proxy web server load balancer vs reverse proxy application layer microservices service discovery database relational database management system rdbms masterslave replication mastermaster replication federation sharding denormalization sql tuning nosql keyvalue store document store wide column store graph database sql nosql cache client caching cdn caching web server caching database caching application caching caching database query level caching object level update cache cacheaside writethrough writebehind writeback refreshahead asynchronism message queues task queues back pressure communication transmission control protocol tcp user datagram protocol udp remote procedure call rpc representational state transfer rest security appendix powers two table latency numbers every programmer know additional system design interview questions real world architectures company architectures company engineering blogs development credits contact info license study guide suggested topics review based interview timeline short medium long q interviews need know everything dont need know everything prepare interview asked interview depends variables much experience technical background positions interviewing companies interviewing luck experienced candidates generally expected know system design architects team leads might expected know individual contributors top tech companies likely one design interview rounds start broad go deeper areas helps know little various key system design topics adjust following guide based timeline experience positions interviewing companies interviewing short timeline aim breadth system design topics practice solving interview questions medium timeline aim breadth depth system design topics practice solving many interview questions long timeline aim breadth depth system design topics practice solving interview questions short medium long read system design topics get broad understanding systems work read articles company engineering blogs companies interviewing read real world architectures review approach system design interview question work system design interview questions solutions many work objectoriented design interview questions solutions many review additional system design interview questions many approach system design interview question tackle system design interview question system design interview openended conversation expected lead use following steps guide discussion help solidify process work system design interview questions solutions section using following steps step outline use cases constraints assumptions gather requirements scope problem ask questions clarify use cases constraints discuss assumptions going use going use many users system inputs outputs system much data expect handle many requests per second expect expected read write ratio step create high level design outline high level design important components sketch main components connections justify ideas step design core components dive details core component example asked design url shortening service discuss generating storing hash full url md base hash collisions sql nosql database schema translating hashed url full url database lookup api objectoriented design step scale design identify address bottlenecks given constraints example need following address scalability issues load balancer horizontal scaling caching database sharding discuss potential solutions tradeoffs everything tradeoff address bottlenecks using principles scalable system design backoftheenvelope calculations might asked estimates hand refer appendix following resources use back envelope calculations powers two table latency numbers every programmer know sources reading check following links get better idea expect ace systems design interview system design interview intro architecture systems design interviews system design interview questions solutions common system design interview questions sample discussions code diagrams solutions linked content solutions folder question design pastebincom bitly solution design twitter timeline search facebook feed search solution design web crawler solution design mintcom solution design data structures social network solution design keyvalue store search engine solution design amazons sales ranking category feature solution design system scales millions users aws solution add system design question contribute design pastebincom bitly view exercise solution design twitter timeline search facebook feed search view exercise solution design web crawler view exercise solution design mintcom view exercise solution design data structures social network view exercise solution design keyvalue store search engine view exercise solution design amazons sales ranking category feature view exercise solution design system scales millions users aws view exercise solution objectoriented design interview questions solutions common objectoriented design interview questions sample discussions code diagrams solutions linked content solutions folder note section development question design hash map solution design least recently used cache solution design call center solution design deck cards solution design parking lot solution design chat server solution design circular array contribute add objectoriented design question contribute system design topics start new system design first youll need basic understanding common principles learning used pros cons step review scalability video lecture scalability lecture harvard topics covered vertical scaling horizontal scaling caching load balancing database replication database partitioning step review scalability article scalability topics covered clones databases caches asynchronism next steps next well look highlevel tradeoffs performance vs scalability latency vs throughput availability vs consistency keep mind everything tradeoff well dive specific topics dns cdns load balancers performance vs scalability service scalable results increased performance manner proportional resources added generally increasing performance means serving units work also handle larger units work datasets grow another way look performance vs scalability performance problem system slow single user scalability problem system fast single user slow heavy load sources reading word scalability scalability availability stability patterns latency vs throughput latency time perform action produce result throughput number actions results per unit time generally aim maximal throughput acceptable latency sources reading understanding latency vs throughput availability vs consistency cap theorem source cap theorem revisited distributed computer system support two following guarantees consistency every read receives recent write error availability every request receives response without guarantee contains recent version information partition tolerance system continues operate despite arbitrary partitioning due network failures networks arent reliable youll need support partition tolerance youll need make software tradeoff consistency availability cp consistency partition tolerance waiting response partitioned node might result timeout error cp good choice business needs require atomic reads writes ap availability partition tolerance responses return recent version data available node might latest writes might take time propagate partition resolved ap good choice business needs allow eventual consistency system needs continue working despite external errors sources reading cap theorem revisited plain english introduction cap theorem cap faq consistency patterns multiple copies data faced options synchronize clients consistent view data recall definition consistency cap theorem every read receives recent write error weak consistency write reads may may see best effort approach taken approach seen systems memcached weak consistency works well real time use cases voip video chat realtime multiplayer games example phone call lose reception seconds regain connection hear spoken connection loss eventual consistency write reads eventually see typically within milliseconds data replicated asynchronously approach seen systems dns email eventual consistency works well highly available systems strong consistency write reads see data replicated synchronously approach seen file systems rdbmses strong consistency works well systems need transactions sources reading transactions across data centers availability patterns two main patterns support high availability failover replication failover activepassive activepassive failover heartbeats sent active passive server standby heartbeat interrupted passive server takes actives ip address resumes service length downtime determined whether passive server already running hot standby whether needs start cold standby active server handles traffic activepassive failover also referred masterslave failover activeactive activeactive servers managing traffic spreading load servers publicfacing dns would need know public ips servers servers internalfacing application logic would need know servers activeactive failover also referred mastermaster failover disadvantages failover failover adds hardware additional complexity potential loss data active system fails newly written data replicated passive replication masterslave mastermaster topic discussed database section masterslave replication mastermaster replication availability numbers availability often quantified uptime downtime percentage time service available availability generally measured number sa service availability described four availability three duration acceptable downtime downtime per year h min downtime per month downtime per week downtime per day availability four duration acceptable downtime downtime per year min downtime per month downtime per week downtime per day availability parallel vs sequence service consists multiple components prone failure services overall availability depends whether components sequence parallel sequence overall availability decreases two components availability sequence availability total availability foo availability bar foo bar availability total availability sequence would parallel overall availability increases two components availability parallel availability total availability foo availability bar foo bar availability total availability parallel would domain name system source dns security presentation domain name system dns translates domain name wwwexamplecom ip address dns hierarchical authoritative servers top level router isp provides information dns servers contact lookup lower level dns servers cache mappings could become stale due dns propagation delays dns results also cached browser os certain period time determined time live ttl ns record name server specifies dns servers domainsubdomain mx record mail exchange specifies mail servers accepting messages record address points name ip address cname canonical points name another name cname examplecom wwwexamplecom record services cloudflare route provide managed dns services dns services route traffic various methods weighted round robin prevent traffic going servers maintenance balance varying cluster sizes ab testing latencybased geolocationbased disadvantages dns accessing dns server introduces slight delay although mitigated caching described dns server management could complex generally managed governments isps large companies dns services recently come ddos attack preventing users accessing websites twitter without knowing twitters ip addresses sources reading dns architecture wikipedia dns articles content delivery network source use cdn content delivery network cdn globally distributed network proxy servers serving content locations closer user generally static files htmlcssjs photos videos served cdn although cdns amazons cloudfront support dynamic content sites dns resolution tell clients server contact serving content cdns significantly improve performance two ways users receive content data centers close servers serve requests cdn fulfills push cdns push cdns receive new content whenever changes occur server take full responsibility providing content uploading directly cdn rewriting urls point cdn configure content expires updated content uploaded new changed minimizing traffic maximizing storage sites small amount traffic sites content isnt often updated work well push cdns content placed cdns instead repulled regular intervals pull cdns pull cdns grab new content server first user requests content leave content server rewrite urls point cdn results slower request content cached cdn timetolive ttl determines long content cached pull cdns minimize storage space cdn create redundant traffic files expire pulled actually changed sites heavy traffic work well pull cdns traffic spread evenly recentlyrequested content remaining cdn disadvantages cdn cdn costs could significant depending traffic although weighed additional costs would incur using cdn content might stale updated ttl expires cdns require changing urls static content point cdn sources reading globally distributed content delivery differences push pull cdns wikipedia load balancer source scalable system design patterns load balancers distribute incoming client requests computing resources application servers databases case load balancer returns response computing resource appropriate client load balancers effective preventing requests going unhealthy servers preventing overloading resources helping eliminate single points failure load balancers implemented hardware expensive software haproxy additional benefits include ssl termination decrypt incoming requests encrypt server responses backend servers perform potentially expensive operations removes need install x certificates server session persistence issue cookies route specific clients requests instance web apps keep track sessions protect failures common set multiple load balancers either activepassive activeactive mode load balancers route traffic based various metrics including random least loaded sessioncookies round robin weighted round robin layer layer layer load balancing layer load balancers look info transport layer decide distribute requests generally involves source destination ip addresses ports header contents packet layer load balancers forward network packets upstream server performing network address translation nat layer load balancing layer load balancers look application layer decide distribute requests involve contents header message cookies layer load balancers terminates network traffic reads message makes loadbalancing decision opens connection selected server example layer load balancer direct video traffic servers host videos directing sensitive user billing traffic securityhardened servers cost flexibility layer load balancing requires less time computing resources layer although performance impact minimal modern commodity hardware horizontal scaling load balancers also help horizontal scaling improving performance availability scaling using commodity machines cost efficient results higher availability scaling single server expensive hardware called vertical scaling also easier hire talent working commodity hardware specialized enterprise systems disadvantages horizontal scaling scaling horizontally introduces complexity involves cloning servers servers stateless contain userrelated data like sessions profile pictures sessions stored centralized data store database sql nosql persistent cache redis memcached downstream servers caches databases need handle simultaneous connections upstream servers scale disadvantages load balancer load balancer become performance bottleneck enough resources configured properly introducing load balancer help eliminate single points failure results increased complexity single load balancer single point failure configuring multiple load balancers increases complexity sources reading nginx architecture haproxy architecture guide scalability wikipedia layer load balancing layer load balancing elb listener config reverse proxy web server source wikipedia reverse proxy web server centralizes internal services provides unified interfaces public requests clients forwarded server fulfill reverse proxy returns servers response client additional benefits include increased security hide information backend servers blacklist ips limit number connections per client increased scalability flexibility clients see reverse proxys ip allowing scale servers change configuration ssl termination decrypt incoming requests encrypt server responses backend servers perform potentially expensive operations removes need install x certificates server compression compress server responses caching return response cached requests static content serve static content directly htmlcssjs photos videos etc load balancer vs reverse proxy deploying load balancer useful multiple servers often load balancers route traffic set servers serving function reverse proxies useful even one web server application server opening benefits described previous section solutions nginx haproxy support layer reverse proxying load balancing disadvantages reverse proxy introducing reverse proxy results increased complexity single reverse proxy single point failure configuring multiple reverse proxies ie failover increases complexity sources reading reverse proxy vs load balancer nginx architecture haproxy architecture guide wikipedia application layer source intro architecting systems scale separating web layer application layer also known platform layer allows scale configure layers independently adding new api results adding application servers without necessarily adding additional web servers single responsibility principle advocates small autonomous services work together small teams small services plan aggressively rapid growth workers application layer also help enable asynchronism microservices related discussion microservices described suite independently deployable small modular services service runs unique process communicates welldefined lightweight mechanism serve business goal pinterest example could following microservices user profile follower feed search photo upload etc service discovery systems consul etcd zookeeper help services find keeping track registered names addresses ports health checks help verify service integrity often done using http endpoint consul etcd built keyvalue store useful storing config values shared data disadvantages application layer adding application layer loosely coupled services requires different approach architectural operations process viewpoint vs monolithic system microservices add complexity terms deployments operations sources reading intro architecting systems scale crack system design interview service oriented architecture introduction zookeeper heres need know building microservices database source scaling first million users relational database management system rdbms relational database like sql collection data items organized tables acid set properties relational database transactions atomicity transaction nothing consistency transaction bring database one valid state another isolation executing transactions concurrently results transactions executed serially durability transaction committed remain many techniques scale relational database masterslave replication mastermaster replication federation sharding denormalization sql tuning masterslave replication master serves reads writes replicating writes one slaves serve reads slaves also replicate additional slaves treelike fashion master goes offline system continue operate readonly mode slave promoted master new master provisioned source scalability availability stability patterns disadvantages masterslave replication additional logic needed promote slave master see disadvantages replication points related masterslave mastermaster mastermaster replication masters serve reads writes coordinate writes either master goes system continue operate reads writes source scalability availability stability patterns disadvantages mastermaster replication youll need load balancer youll need make changes application logic determine write mastermaster systems either loosely consistent violating acid increased write latency due synchronization conflict resolution comes play write nodes added latency increases see disadvantages replication points related masterslave mastermaster disadvantages replication potential loss data master fails newly written data replicated nodes writes replayed read replicas lot writes read replicas get bogged replaying writes cant many reads read slaves replicate leads greater replication lag systems writing master spawn multiple threads write parallel whereas read replicas support writing sequentially single thread replication adds hardware additional complexity sources reading replication scalability availability stability patterns multimaster replication federation source scaling first million users federation functional partitioning splits databases function example instead single monolithic database could three databases forums users products resulting less read write traffic database therefore less replication lag smaller databases result data fit memory turn results cache hits due improved cache locality single central master serializing writes write parallel increasing throughput disadvantages federation federation effective schema requires huge functions tables youll need update application logic determine database read write joining data two databases complex server link federation adds hardware additional complexity sources reading federation scaling first million users sharding source scalability availability stability patterns sharding distributes data across different databases database manage subset data taking users database example number users increases shards added cluster similar advantages federation sharding results less read write traffic less replication cache hits index size also reduced generally improves performance faster queries one shard goes shards still operational although youll want add form replication avoid data loss like federation single central master serializing writes allowing write parallel increased throughput common ways shard table users either users last name initial users geographic location disadvantages sharding youll need update application logic work shards could result complex sql queries data distribution become lopsided shard example set power users shard could result increased load shard compared others rebalancing adds additional complexity sharding function based consistent hashing reduce amount transferred data joining data multiple shards complex sharding adds hardware additional complexity sources reading sharding coming shard shard database architecture consistent hashing denormalization denormalization attempts improve read performance expense write performance redundant copies data written multiple tables avoid expensive joins rdbms postgresql oracle support materialized views handle work storing redundant information keeping redundant copies consistent data becomes distributed techniques federation sharding managing joins across data centers increases complexity denormalization might circumvent need complex joins systems reads heavily outnumber writes even read resulting complex database join expensive spending significant amount time disk operations disadvantages denormalization data duplicated constraints help redundant copies information stay sync increases complexity database design denormalized database heavy write load might perform worse normalized counterpart sources reading denormalization denormalization sql tuning sql tuning broad topic many books written reference important benchmark profile simulate uncover bottlenecks benchmark simulate highload situations tools ab profile enable tools slow query log help track performance issues benchmarking profiling might point following optimizations tighten schema mysql dumps disk contiguous blocks fast access use char instead varchar fixedlength fields char effectively allows fast random access whereas varchar must find end string moving onto next one use text large blocks text blog posts text also allows boolean searches using text field results storing pointer disk used locate text block use int larger numbers billion use decimal currency avoid floating point representation errors avoid storing large blobs store location get object instead varchar largest number characters counted bit number often maximizing use byte rdbms set null constraint applicable improve search performance use good indices columns querying select group order join could faster indices indices usually represented selfbalancing btree keeps data sorted allows searches sequential access insertions deletions logarithmic time placing index keep data memory requiring space writes could also slower since index also needs updated loading large amounts data might faster disable indices load data rebuild indices avoid expensive joins denormalize performance demands partition tables break table putting hot spots separate table help keep memory tune query cache cases query cache could lead performance issues sources reading sql tuning tips optimizing mysql queries good reason see varchar used often null values affect performance slow query log nosql nosql collection data items represented keyvalue store document store wide column store graph database data denormalized joins generally done application code nosql stores lack true acid transactions favor eventual consistency base often used describe properties nosql databases comparison cap theorem base chooses availability consistency basically available system guarantees availability soft state state system may change time even without input eventual consistency system become consistent period time given system doesnt receive input period addition choosing sql nosql helpful understand type nosql database best fits use cases well review keyvalue stores document stores wide column stores graph databases next section keyvalue store abstraction hash table keyvalue store generally allows reads writes often backed memory ssd data stores maintain keys lexicographic order allowing efficient retrieval key ranges keyvalue stores allow storing metadata value keyvalue stores provide high performance often used simple data models rapidlychanging data inmemory cache layer since offer limited set operations complexity shifted application layer additional operations needed keyvalue store basis complex systems document store cases graph database sources reading keyvalue store keyvalue database disadvantages keyvalue stores redis architecture memcached architecture document store abstraction keyvalue store documents stored values document store centered around documents xml json binary etc document stores information given object document stores provide apis query language query based internal structure document note many keyvalue stores include features working values metadata blurring lines two storage types based underlying implementation documents organized collections tags metadata directories although documents organized grouped together documents may fields completely different document stores like mongodb couchdb also provide sqllike language perform complex queries dynamodb supports keyvalues documents document stores provide high flexibility often used working occasionally changing data sources reading document store documentoriented database mongodb architecture couchdb architecture elasticsearch architecture wide column store source sql nosql brief history abstraction nested map columnfamilyrowkey columnscolkey value timestamp wide column stores basic unit data column namevalue pair column grouped column families analogous sql table super column families group column families access column independently row key columns row key form row value contains timestamp versioning conflict resolution google introduced bigtable first wide column store influenced opensource hbase oftenused hadoop ecosystem cassandra facebook stores bigtable hbase cassandra maintain keys lexicographic order allowing efficient retrieval selective key ranges wide column stores offer high availability high scalability often used large data sets sources reading wide column store sql nosql brief history bigtable architecture hbase architecture cassandra architecture graph database source graph database abstraction graph graph database node record arc relationship two nodes graph databases optimized represent complex relationships many foreign keys manytomany relationships graphs databases offer high performance data models complex relationships social network relatively new yet widelyused might difficult find development tools resources many graphs accessed rest apis sources reading graph graph database neoj flockdb sources reading nosql explanation base terminology nosql databases survey decision guidance scalability introduction nosql nosql patterns sql nosql source transitioning rdbms nosql reasons sql structured data strict schema relational data need complex joins transactions clear patterns scaling established developers community code tools etc lookups index fast reasons nosql semistructured data dynamic flexible schema nonrelational data need complex joins store many tb pb data data intensive workload high throughput iops sample data wellsuited nosql rapid ingest clickstream log data leaderboard scoring data temporary data shopping cart frequently accessed hot tables metadatalookup tables sources reading sql nosql scaling first million users sql vs nosql differences cache source scalable system design patterns caching improves page load times reduce load servers databases model dispatcher first lookup request made try find previous result return order save actual execution databases often benefit uniform distribution reads writes across partitions popular items skew distribution causing bottlenecks putting cache front database help absorb uneven loads spikes traffic client caching caches located client side os browser server side distinct cache layer cdn caching cdns considered type cache web server caching reverse proxies caches varnish serve static dynamic content directly web servers also cache requests returning responses without contact application servers database caching database usually includes level caching default configuration optimized generic use case tweaking settings specific usage patterns boost performance application caching inmemory caches memcached redis keyvalue stores application data storage since data held ram much faster typical databases data stored disk ram limited disk cache invalidation algorithms least recently used lru help invalidate cold entries keep hot data ram redis following additional features persistence option builtin data structures sorted sets lists multiple levels cache fall two general categories database queries objects row level querylevel fullyformed serializable objects fullyrendered html generally try avoid filebased caching makes cloning autoscaling difficult caching database query level whenever query database hash query key store result cache approach suffers expiration issues hard delete cached result complex queries one piece data changes table cell need delete cached queries might include changed cell caching object level see data object similar application code application assemble dataset database class instance data structures remove object cache underlying data changed allows asynchronous processing workers assemble objects consuming latest cached object suggestions cache user sessions fully rendered web pages activity streams user graph data update cache since store limited amount data cache youll need determine cache update strategy works best use case cacheaside source cache inmemory data grid application responsible reading writing storage cache interact storage directly application following look entry cache resulting cache miss load entry database add entry cache return entry def getuserself userid user cachegetuser userid user none user dbqueryselect users userid userid user none key userformatuserid cachesetkey jsondumpsuser return user memcached generally used manner subsequent reads data added cache fast cacheaside also referred lazy loading requested data cached avoids filling cache data isnt requested disadvantages cacheaside cache miss results three trips cause noticeable delay data become stale updated database issue mitigated setting timetolive ttl forces update cache entry using writethrough node fails replaced new empty node increasing latency writethrough source scalability availability stability patterns application uses cache main data store reading writing data cache responsible reading writing database application addsupdates entry cache cache synchronously writes entry data store return application code setuser foobar cache code def setuseruserid values user dbqueryupdate users id userid values cachesetuserid user writethrough slow overall operation due write operation subsequent reads written data fast users generally tolerant latency updating data reading data data cache stale disadvantages write new node created due failure scaling new node cache entries entry updated database cacheaside conjunction write mitigate issue data written might never read minimized ttl writebehind writeback source scalability availability stability patterns writebehind application following addupdate entry cache asynchronously write entry data store improving write performance disadvantages writebehind could data loss cache goes prior contents hitting data store complex implement writebehind implement cacheaside writethrough refreshahead source cache inmemory data grid configure cache automatically refresh recently accessed cache entry prior expiration refreshahead result reduced latency vs readthrough cache accurately predict items likely needed future disadvantages refreshahead accurately predicting items likely needed future result reduced performance without refreshahead disadvantages cache need maintain consistency caches source truth database cache invalidation cache invalidation difficult problem additional complexity associated update cache need make application changes adding redis memcached sources reading cache inmemory data grid scalable system design patterns introduction architecting systems scale scalability availability stability patterns scalability aws elasticache strategies wikipedia asynchronism source intro architecting systems scale asynchronous workflows help reduce request times expensive operations would otherwise performed inline also help timeconsuming work advance periodic aggregation data message queues message queues receive hold deliver messages operation slow perform inline use message queue following workflow application publishes job queue notifies user job status worker picks job queue processes signals job complete user blocked job processed background time client might optionally small amount processing make seem like task completed example posting tweet tweet could instantly posted timeline could take time tweet actually delivered followers redis useful simple message broker messages lost rabbitmq popular requires adapt amqp protocol manage nodes amazon sqs hosted high latency possibility messages delivered twice task queues tasks queues receive tasks related data runs delivers results support scheduling used run computationallyintensive jobs background celery support scheduling primarily python support back pressure queues start grow significantly queue size become larger memory resulting cache misses disk reads even slower performance back pressure help limiting queue size thereby maintaining high throughput rate good response times jobs already queue queue fills clients get server busy http status code try later clients retry request later time perhaps exponential backoff disadvantages asynchronism use cases inexpensive calculations realtime workflows might better suited synchronous operations introducing queues add delays complexity sources reading numbers game applying back pressure overloaded littles law difference message queue task queue communication source osi layer model hypertext transfer protocol http http method encoding transporting data client server requestresponse protocol clients issue requests servers issue responses relevant content completion status info request http selfcontained allowing requests responses flow many intermediate routers servers perform load balancing caching encryption compression basic http request consists verb method resource endpoint common http verbs verb description idempotent safe cacheable get reads resource yes yes yes post creates resource trigger process handles data yes response contains freshness info put creates replace resource yes patch partially updates resource yes response contains freshness info delete deletes resource yes called many times without different outcomes http application layer protocol relying lowerlevel protocols tcp udp sources reading http http difference http tcp difference put patch transmission control protocol tcp source make multiplayer game tcp connectionoriented protocol ip network connection established terminated using handshake packets sent guaranteed reach destination original order without corruption sequence numbers checksum fields packet acknowledgement packets automatic retransmission sender receive correct response resend packets multiple timeouts connection dropped tcp also implements flow control congestion control guarantees cause delays generally result less efficient transmission udp ensure high throughput web servers keep large number tcp connections open resulting high memory usage expensive large number open connections web server threads say memcached server connection pooling help addition switching udp applicable tcp useful applications require high reliability less time critical examples include web servers database info smtp ftp ssh use tcp udp need data arrive intact want automatically make best estimate use network throughput user datagram protocol udp source make multiplayer game udp connectionless datagrams analogous packets guaranteed datagram level datagrams might reach destination order udp support congestion control without guarantees tcp support udp generally efficient udp broadcast sending datagrams devices subnet useful dhcp client yet received ip address thus preventing way tcp stream without ip address udp less reliable works well real time use cases voip video chat streaming realtime multiplayer games use udp tcp need lowest latency late data worse loss data want implement error correction sources reading tcp udp networking game programming key differences tcp udp protocols difference tcp udp transmission control protocol user datagram protocol scaling memcache facebook remote procedure call rpc source crack system design interview rpc client causes procedure execute different address space usually remote server procedure coded local procedure call abstracting away details communicate server client program remote calls usually slower less reliable local calls helpful distinguish rpc calls local calls popular rpc frameworks include protobuf thrift avro rpc requestresponse protocol client program calls client stub procedure parameters pushed onto stack like local procedure call client stub procedure marshals packs procedure id arguments request message client communication module os sends message client server server communication module os passes incoming packets server stub procedure server stub procedure unmarshalls results calls server procedure matching procedure id passes given arguments server response repeats steps reverse order sample rpc calls get someoperationdataanid post anotheroperation dataanid anotherdata another value rpc focused exposing behaviors rpcs often used performance reasons internal communications handcraft native calls better fit use cases choose native library aka sdk know target platform want control logic accessed want control error control happens library performance end user experience primary concern http apis following rest tend used often public apis disadvantages rpc rpc clients become tightly coupled service implementation new api must defined every new operation use case difficult debug rpc might able leverage existing technologies box example might require additional effort ensure rpc calls properly cached caching servers squid representational state transfer rest rest architectural style enforcing clientserver model client acts set resources managed server server provides representation resources actions either manipulate get new representation resources communication must stateless cacheable four qualities restful interface identify resources uri http use uri regardless operation change representations verbs http use verbs headers body selfdescriptive error message status response http use status codes dont reinvent wheel hateoas html interface http web service fully accessible browser sample rest calls get someresourcesanid put someresourcesanid anotherdata another value rest focused exposing data minimizes coupling clientserver often used public http apis rest uses generic uniform method exposing resources uris representation headers actions verbs get post put delete patch stateless rest great horizontal scaling partitioning disadvantages rest rest focused exposing data might good fit resources naturally organized accessed simple hierarchy example returning updated records past hour matching particular set events easily expressed path rest likely implemented combination uri path query parameters possibly request body rest typically relies verbs get post put delete patch sometimes doesnt fit use case example moving expired documents archive folder might cleanly fit within verbs fetching complicated resources nested hierarchies requires multiple round trips client server render single views eg fetching content blog entry comments entry mobile applications operating variable network conditions multiple roundtrips highly undesirable time fields might added api response older clients receive new data fields even need result bloats payload size leads larger latencies rpc rest calls comparison operation rpc rest signup post signup post persons resign post resignpersonid delete persons read person get readpersonpersonid get persons read persons items list get readusersitemslistpersonid get personsitems add item persons items post additemtousersitemslistpersonid itemid post personsitemsitemid update item post modifyitemitemid key value put itemskey value delete item post removeitemitemid delete items source really know prefer rest rpc sources reading rest rpc really know prefer rest rpc rpcish approaches appropriate rest rest vs jsonrpc debunking myths rpc rest drawbacks using rest crack system design interview thrift rest internal use rpc security section could use updates consider contributing security broad topic unless considerable experience security background applying position requires knowledge security probably wont need know basics encrypt transit rest sanitize user inputs input parameters exposed user prevent xss sql injection use parameterized queries prevent sql injection use principle least privilege sources reading api security checklist security guide developers owasp top ten appendix youll sometimes asked backoftheenvelope estimates example might need determine long take generate image thumbnails disk much memory data structure take powers two table latency numbers every programmer know handy references powers two table power exact value approx value bytes thousand kb kb million mb billion gb gb trillion tb sources reading powers two latency numbers every programmer know latency comparison numbers l cache reference ns branch mispredict ns l cache reference ns x l cache mutex lockunlock ns main memory reference ns x l cache x l cache compress k bytes zippy ns us send kb bytes gbps network ns us read kb randomly ssd ns us gbsec ssd read mb sequentially memory ns us round trip within datacenter ns us read mb sequentially ssd ns us ms gbsec ssd x memory disk seek ns us ms x datacenter roundtrip read mb sequentially gbps ns us ms x memory x ssd read mb sequentially disk ns us ms x memory x ssd send packet canetherlandsca ns us ms notes ns seconds us seconds ns ms seconds us ns handy metrics based numbers read sequentially disk mbs read sequentially gbps ethernet mbs read sequentially ssd gbs read sequentially main memory gbs worldwide round trips per second round trips per second within data center latency numbers visualized sources reading latency numbers every programmer know latency numbers every programmer know designs lessons advice building large distributed systems software engineering advice building largescale distributed systems additional system design interview questions common system design interview questions links resources solve question references design file sync service like dropbox youtubecom design search engine like google queueacmorgstackexchangecomardendertatcomstanfordedu design scalable web crawler like google quoracom design google docs codegooglecomneilfrasername design keyvalue store like redis slidesharenet design cache system like memcached slidesharenet design recommendation system like amazons hulucomijcaiorg design tinyurl system like bitly ntcdrblogspotcom design chat app like whatsapp highscalabilitycom design picture sharing system like instagram highscalabilitycomhighscalabilitycom design facebook news feed function quoracomquoracomslidesharenet design facebook timeline function facebookcomhighscalabilitycom design facebook chat function erlangfactorycomfacebookcom design graph search function like facebooks facebookcomfacebookcomfacebookcom design content delivery network like cloudflare figsharecom design trending topic system like twitters michaelnollcomsnikolov wordpresscom design random id generation system blogtwittercomgithubcom return top k requests time interval csucsbeduwpiedu design system serves data multiple data centers highscalabilitycom design online multiplayer card game indieflashblogcombuildnewgamescom design garbage collection system stuffwithstuffcomwashingtonedu design api rate limiter httpsstripecomblog add system design question contribute real world architectures articles real world systems designed source twitter timelines scale dont focus nitty gritty details following articles instead identify shared principles common technologies patterns within articles study problems solved component works doesnt review lessons learned type system references data processing mapreduce distributed data processing google researchgooglecom data processing spark distributed data processing databricks slidesharenet data processing storm distributed data processing twitter slidesharenet data store bigtable distributed columnoriented database google harvardedu data store hbase open source implementation bigtable slidesharenet data store cassandra distributed columnoriented database facebook slidesharenet data store dynamodb documentoriented database amazon harvardedu data store mongodb documentoriented database slidesharenet data store spanner globallydistributed database google researchgooglecom data store memcached distributed memory caching system slidesharenet data store redis distributed memory caching system persistence value types slidesharenet file system google file system gfs distributed file system researchgooglecom file system hadoop file system hdfs open source implementation gfs apacheorg misc chubby lock service looselycoupled distributed systems google researchgooglecom misc dapper distributed systems tracing infrastructure researchgooglecom misc kafka pubsub message queue linkedin slidesharenet misc zookeeper centralized infrastructure services enabling synchronization slidesharenet add architecture contribute company architectures company references amazon amazon architecture cinchcast producing hours audio every day datasift realtime datamining tweets per second dropbox weve scaled dropbox espn operating duh nuh nuhs per second google google architecture instagram million users terabytes photoswhat powers instagram justintv justintvs live video broadcasting architecture facebook scaling memcached facebooktao facebooks distributed data store social graphfacebooks photo storagehow facebook live streams simultaneous viewers flickr flickr architecture mailbox one million users weeks netflix degree view entire netflix stacknetflix happens press play pinterest billions page views month million visitors x growth employees playfish million monthly users growing plentyoffish plentyoffish architecture salesforce handle billion transactions day stack overflow stack overflow architecture tripadvisor visitors dynamic page views tb data tumblr billion page views month twitter making twitter percent fasterstoring million tweets day using mysqlm active users k qps mbs firehosetimelines scalebig small data twitteroperations twitter scaling beyond million usershow twitter handles images per second uber uber scales realtime market platformlessons learned scaling uber engineers services git repositories whatsapp whatsapp architecture facebook bought billion youtube youtube scalabilityyoutube architecture company engineering blogs architectures companies interviewing questions encounter might domain airbnb engineering atlassian developers aws blog bitly engineering blog box blogs cloudera developer blog dropbox tech blog engineering quora ebay tech blog evernote tech blog etsy code craft facebook engineering flickr code foursquare engineering blog github engineering blog google research blog groupon engineering blog heroku engineering blog hubspot engineering blog high scalability instagram engineering intel software blog jane street tech blog linkedin engineering microsoft engineering microsoft python engineering netflix tech blog paypal developer blog pinterest engineering blog quora engineering reddit blog salesforce engineering blog slack engineering blog spotify labs twilio engineering blog twitter engineering uber engineering blog yahoo engineering blog yelp engineering blog zynga engineering blog sources reading looking add blog avoid duplicating work consider adding company blog following repo kilimchoiengineeringblogs development interested adding section helping complete one inprogress contribute distributed computing mapreduce consistent hashing scatter gather contribute credits credits sources provided throughout repo special thanks hired tech cracking coding interview high scalability checkcheckzzsystemdesigninterview shashanksystemdesign mmcgranaservicesengineering system design cheat sheet distributed systems reading list cracking system design interview contact info feel free contact discuss issues questions comments contact info found github page license providing code resources repository open source license personal repository license receive code resources employer facebook copyright donne martin creative commons attribution international license cc httpcreativecommonsorglicensesby,english portugu brasil deutsch italiano polski espanol turkc tieng viet francai add translat system design primer motiv learn design largescal system prep system design interview learn design largescal system learn design scalabl system help becom better engin system design broad topic vast amount resourc scatter throughout web system design principl repo organ collect resourc help learn build system scale learn open sourc commun continu updat open sourc project contribut welcom prep system design interview addit code interview system design requir compon technic interview process mani tech compani practic common system design interview question compar result sampl solut discuss code diagram addit topic interview prep studi guid approach system design interview question system design interview question solut objectori design interview question solut addit system design interview question anki flashcard provid anki flashcard deck use space repetit help retain key system design concept system design deck system design exercis deck object orient design exercis deck great use onthego code resourc interact code challeng look resourc help prep code interview check sister repo interact code challeng contain addit anki deck code deck contribut learn commun feel free submit pull request help fix error improv section add new section translat content need polish place develop review contribut guidelin index system design topic summari variou system design topic includ pro con everyth tradeoff section contain link indepth resourc system design topic start step review scalabl video lectur step review scalabl articl next step perform vs scalabl latenc vs throughput avail vs consist cap theorem cp consist partit toler ap avail partit toler consist pattern weak consist eventu consist strong consist avail pattern failov replic avail number domain name system content deliveri network push cdn pull cdn load balanc activepass activeact layer load balanc layer load balanc horizont scale revers proxi web server load balanc vs revers proxi applic layer microservic servic discoveri databas relat databas manag system rdbm masterslav replic mastermast replic feder shard denorm sql tune nosql keyvalu store document store wide column store graph databas sql nosql cach client cach cdn cach web server cach databas cach applic cach cach databas queri level cach object level updat cach cacheasid writethrough writebehind writeback refreshahead asynchron messag queue task queue back pressur commun transmiss control protocol tcp user datagram protocol udp remot procedur call rpc represent state transfer rest secur appendix power two tabl latenc number everi programm know addit system design interview question real world architectur compani architectur compani engin blog develop credit contact info licens studi guid suggest topic review base interview timelin short medium long q interview need know everyth dont need know everyth prepar interview ask interview depend variabl much experi technic background posit interview compani interview luck experienc candid gener expect know system design architect team lead might expect know individu contributor top tech compani like one design interview round start broad go deeper area help know littl variou key system design topic adjust follow guid base timelin experi posit interview compani interview short timelin aim breadth system design topic practic solv interview question medium timelin aim breadth depth system design topic practic solv mani interview question long timelin aim breadth depth system design topic practic solv interview question short medium long read system design topic get broad understand system work read articl compani engin blog compani interview read real world architectur review approach system design interview question work system design interview question solut mani work objectori design interview question solut mani review addit system design interview question mani approach system design interview question tackl system design interview question system design interview openend convers expect lead use follow step guid discuss help solidifi process work system design interview question solut section use follow step step outlin use case constraint assumpt gather requir scope problem ask question clarifi use case constraint discuss assumpt go use go use mani user system input output system much data expect handl mani request per second expect expect read write ratio step creat high level design outlin high level design import compon sketch main compon connect justifi idea step design core compon dive detail core compon exampl ask design url shorten servic discuss gener store hash full url md base hash collis sql nosql databas schema translat hash url full url databas lookup api objectori design step scale design identifi address bottleneck given constraint exampl need follow address scalabl issu load balanc horizont scale cach databas shard discuss potenti solut tradeoff everyth tradeoff address bottleneck use principl scalabl system design backoftheenvelop calcul might ask estim hand refer appendix follow resourc use back envelop calcul power two tabl latenc number everi programm know sourc read check follow link get better idea expect ace system design interview system design interview intro architectur system design interview system design interview question solut common system design interview question sampl discuss code diagram solut link content solut folder question design pastebincom bitli solut design twitter timelin search facebook feed search solut design web crawler solut design mintcom solut design data structur social network solut design keyvalu store search engin solut design amazon sale rank categori featur solut design system scale million user aw solut add system design question contribut design pastebincom bitli view exercis solut design twitter timelin search facebook feed search view exercis solut design web crawler view exercis solut design mintcom view exercis solut design data structur social network view exercis solut design keyvalu store search engin view exercis solut design amazon sale rank categori featur view exercis solut design system scale million user aw view exercis solut objectori design interview question solut common objectori design interview question sampl discuss code diagram solut link content solut folder note section develop question design hash map solut design least recent use cach solut design call center solut design deck card solut design park lot solut design chat server solut design circular array contribut add objectori design question contribut system design topic start new system design first youll need basic understand common principl learn use pro con step review scalabl video lectur scalabl lectur harvard topic cover vertic scale horizont scale cach load balanc databas replic databas partit step review scalabl articl scalabl topic cover clone databas cach asynchron next step next well look highlevel tradeoff perform vs scalabl latenc vs throughput avail vs consist keep mind everyth tradeoff well dive specif topic dn cdn load balanc perform vs scalabl servic scalabl result increas perform manner proport resourc ad gener increas perform mean serv unit work also handl larger unit work dataset grow anoth way look perform vs scalabl perform problem system slow singl user scalabl problem system fast singl user slow heavi load sourc read word scalabl scalabl avail stabil pattern latenc vs throughput latenc time perform action produc result throughput number action result per unit time gener aim maxim throughput accept latenc sourc read understand latenc vs throughput avail vs consist cap theorem sourc cap theorem revisit distribut comput system support two follow guarante consist everi read receiv recent write error avail everi request receiv respons without guarante contain recent version inform partit toler system continu oper despit arbitrari partit due network failur network arent reliabl youll need support partit toler youll need make softwar tradeoff consist avail cp consist partit toler wait respons partit node might result timeout error cp good choic busi need requir atom read write ap avail partit toler respons return recent version data avail node might latest write might take time propag partit resolv ap good choic busi need allow eventu consist system need continu work despit extern error sourc read cap theorem revisit plain english introduct cap theorem cap faq consist pattern multipl copi data face option synchron client consist view data recal definit consist cap theorem everi read receiv recent write error weak consist write read may may see best effort approach taken approach seen system memcach weak consist work well real time use case voip video chat realtim multiplay game exampl phone call lose recept second regain connect hear spoken connect loss eventu consist write read eventu see typic within millisecond data replic asynchron approach seen system dn email eventu consist work well highli avail system strong consist write read see data replic synchron approach seen file system rdbmse strong consist work well system need transact sourc read transact across data center avail pattern two main pattern support high avail failov replic failov activepass activepass failov heartbeat sent activ passiv server standbi heartbeat interrupt passiv server take activ ip address resum servic length downtim determin whether passiv server alreadi run hot standbi whether need start cold standbi activ server handl traffic activepass failov also refer masterslav failov activeact activeact server manag traffic spread load server publicfac dn would need know public ip server server internalfac applic logic would need know server activeact failov also refer mastermast failov disadvantag failov failov add hardwar addit complex potenti loss data activ system fail newli written data replic passiv replic masterslav mastermast topic discuss databas section masterslav replic mastermast replic avail number avail often quantifi uptim downtim percentag time servic avail avail gener measur number sa servic avail describ four avail three durat accept downtim downtim per year h min downtim per month downtim per week downtim per day avail four durat accept downtim downtim per year min downtim per month downtim per week downtim per day avail parallel vs sequenc servic consist multipl compon prone failur servic overal avail depend whether compon sequenc parallel sequenc overal avail decreas two compon avail sequenc avail total avail foo avail bar foo bar avail total avail sequenc would parallel overal avail increas two compon avail parallel avail total avail foo avail bar foo bar avail total avail parallel would domain name system sourc dn secur present domain name system dn translat domain name wwwexamplecom ip address dn hierarch authorit server top level router isp provid inform dn server contact lookup lower level dn server cach map could becom stale due dn propag delay dn result also cach browser os certain period time determin time live ttl ns record name server specifi dn server domainsubdomain mx record mail exchang specifi mail server accept messag record address point name ip address cname canon point name anoth name cname examplecom wwwexamplecom record servic cloudflar rout provid manag dn servic dn servic rout traffic variou method weight round robin prevent traffic go server mainten balanc vari cluster size ab test latencybas geolocationbas disadvantag dn access dn server introduc slight delay although mitig cach describ dn server manag could complex gener manag govern isp larg compani dn servic recent come ddo attack prevent user access websit twitter without know twitter ip address sourc read dn architectur wikipedia dn articl content deliveri network sourc use cdn content deliveri network cdn global distribut network proxi server serv content locat closer user gener static file htmlcssj photo video serv cdn although cdn amazon cloudfront support dynam content site dn resolut tell client server contact serv content cdn significantli improv perform two way user receiv content data center close server serv request cdn fulfil push cdn push cdn receiv new content whenev chang occur server take full respons provid content upload directli cdn rewrit url point cdn configur content expir updat content upload new chang minim traffic maxim storag site small amount traffic site content isnt often updat work well push cdn content place cdn instead repul regular interv pull cdn pull cdn grab new content server first user request content leav content server rewrit url point cdn result slower request content cach cdn timetol ttl determin long content cach pull cdn minim storag space cdn creat redund traffic file expir pull actual chang site heavi traffic work well pull cdn traffic spread evenli recentlyrequest content remain cdn disadvantag cdn cdn cost could signific depend traffic although weigh addit cost would incur use cdn content might stale updat ttl expir cdn requir chang url static content point cdn sourc read global distribut content deliveri differ push pull cdn wikipedia load balanc sourc scalabl system design pattern load balanc distribut incom client request comput resourc applic server databas case load balanc return respons comput resourc appropri client load balanc effect prevent request go unhealthi server prevent overload resourc help elimin singl point failur load balanc implement hardwar expens softwar haproxi addit benefit includ ssl termin decrypt incom request encrypt server respons backend server perform potenti expens oper remov need instal x certif server session persist issu cooki rout specif client request instanc web app keep track session protect failur common set multipl load balanc either activepass activeact mode load balanc rout traffic base variou metric includ random least load sessioncooki round robin weight round robin layer layer layer load balanc layer load balanc look info transport layer decid distribut request gener involv sourc destin ip address port header content packet layer load balanc forward network packet upstream server perform network address translat nat layer load balanc layer load balanc look applic layer decid distribut request involv content header messag cooki layer load balanc termin network traffic read messag make loadbalanc decis open connect select server exampl layer load balanc direct video traffic server host video direct sensit user bill traffic securityharden server cost flexibl layer load balanc requir less time comput resourc layer although perform impact minim modern commod hardwar horizont scale load balanc also help horizont scale improv perform avail scale use commod machin cost effici result higher avail scale singl server expens hardwar call vertic scale also easier hire talent work commod hardwar special enterpris system disadvantag horizont scale scale horizont introduc complex involv clone server server stateless contain userrel data like session profil pictur session store central data store databas sql nosql persist cach redi memcach downstream server cach databas need handl simultan connect upstream server scale disadvantag load balanc load balanc becom perform bottleneck enough resourc configur properli introduc load balanc help elimin singl point failur result increas complex singl load balanc singl point failur configur multipl load balanc increas complex sourc read nginx architectur haproxi architectur guid scalabl wikipedia layer load balanc layer load balanc elb listen config revers proxi web server sourc wikipedia revers proxi web server central intern servic provid unifi interfac public request client forward server fulfil revers proxi return server respons client addit benefit includ increas secur hide inform backend server blacklist ip limit number connect per client increas scalabl flexibl client see revers proxi ip allow scale server chang configur ssl termin decrypt incom request encrypt server respons backend server perform potenti expens oper remov need instal x certif server compress compress server respons cach return respons cach request static content serv static content directli htmlcssj photo video etc load balanc vs revers proxi deploy load balanc use multipl server often load balanc rout traffic set server serv function revers proxi use even one web server applic server open benefit describ previou section solut nginx haproxi support layer revers proxi load balanc disadvantag revers proxi introduc revers proxi result increas complex singl revers proxi singl point failur configur multipl revers proxi ie failov increas complex sourc read revers proxi vs load balanc nginx architectur haproxi architectur guid wikipedia applic layer sourc intro architect system scale separ web layer applic layer also known platform layer allow scale configur layer independ ad new api result ad applic server without necessarili ad addit web server singl respons principl advoc small autonom servic work togeth small team small servic plan aggress rapid growth worker applic layer also help enabl asynchron microservic relat discuss microservic describ suit independ deploy small modular servic servic run uniqu process commun welldefin lightweight mechan serv busi goal pinterest exampl could follow microservic user profil follow feed search photo upload etc servic discoveri system consul etcd zookeep help servic find keep track regist name address port health check help verifi servic integr often done use http endpoint consul etcd built keyvalu store use store config valu share data disadvantag applic layer ad applic layer loos coupl servic requir differ approach architectur oper process viewpoint vs monolith system microservic add complex term deploy oper sourc read intro architect system scale crack system design interview servic orient architectur introduct zookeep here need know build microservic databas sourc scale first million user relat databas manag system rdbm relat databas like sql collect data item organ tabl acid set properti relat databas transact atom transact noth consist transact bring databas one valid state anoth isol execut transact concurr result transact execut serial durabl transact commit remain mani techniqu scale relat databas masterslav replic mastermast replic feder shard denorm sql tune masterslav replic master serv read write replic write one slave serv read slave also replic addit slave treelik fashion master goe offlin system continu oper readonli mode slave promot master new master provis sourc scalabl avail stabil pattern disadvantag masterslav replic addit logic need promot slave master see disadvantag replic point relat masterslav mastermast mastermast replic master serv read write coordin write either master goe system continu oper read write sourc scalabl avail stabil pattern disadvantag mastermast replic youll need load balanc youll need make chang applic logic determin write mastermast system either loos consist violat acid increas write latenc due synchron conflict resolut come play write node ad latenc increas see disadvantag replic point relat masterslav mastermast disadvantag replic potenti loss data master fail newli written data replic node write replay read replica lot write read replica get bog replay write cant mani read read slave replic lead greater replic lag system write master spawn multipl thread write parallel wherea read replica support write sequenti singl thread replic add hardwar addit complex sourc read replic scalabl avail stabil pattern multimast replic feder sourc scale first million user feder function partit split databas function exampl instead singl monolith databas could three databas forum user product result less read write traffic databas therefor less replic lag smaller databas result data fit memori turn result cach hit due improv cach local singl central master serial write write parallel increas throughput disadvantag feder feder effect schema requir huge function tabl youll need updat applic logic determin databas read write join data two databas complex server link feder add hardwar addit complex sourc read feder scale first million user shard sourc scalabl avail stabil pattern shard distribut data across differ databas databas manag subset data take user databas exampl number user increas shard ad cluster similar advantag feder shard result less read write traffic less replic cach hit index size also reduc gener improv perform faster queri one shard goe shard still oper although youll want add form replic avoid data loss like feder singl central master serial write allow write parallel increas throughput common way shard tabl user either user last name initi user geograph locat disadvantag shard youll need updat applic logic work shard could result complex sql queri data distribut becom lopsid shard exampl set power user shard could result increas load shard compar other rebalanc add addit complex shard function base consist hash reduc amount transfer data join data multipl shard complex shard add hardwar addit complex sourc read shard come shard shard databas architectur consist hash denorm denorm attempt improv read perform expens write perform redund copi data written multipl tabl avoid expens join rdbm postgresql oracl support materi view handl work store redund inform keep redund copi consist data becom distribut techniqu feder shard manag join across data center increas complex denorm might circumv need complex join system read heavili outnumb write even read result complex databas join expens spend signific amount time disk oper disadvantag denorm data duplic constraint help redund copi inform stay sync increas complex databas design denorm databas heavi write load might perform wors normal counterpart sourc read denorm denorm sql tune sql tune broad topic mani book written refer import benchmark profil simul uncov bottleneck benchmark simul highload situat tool ab profil enabl tool slow queri log help track perform issu benchmark profil might point follow optim tighten schema mysql dump disk contigu block fast access use char instead varchar fixedlength field char effect allow fast random access wherea varchar must find end string move onto next one use text larg block text blog post text also allow boolean search use text field result store pointer disk use locat text block use int larger number billion use decim currenc avoid float point represent error avoid store larg blob store locat get object instead varchar largest number charact count bit number often maxim use byte rdbm set null constraint applic improv search perform use good indic column queri select group order join could faster indic indic usual repres selfbalanc btree keep data sort allow search sequenti access insert delet logarithm time place index keep data memori requir space write could also slower sinc index also need updat load larg amount data might faster disabl indic load data rebuild indic avoid expens join denorm perform demand partit tabl break tabl put hot spot separ tabl help keep memori tune queri cach case queri cach could lead perform issu sourc read sql tune tip optim mysql queri good reason see varchar use often null valu affect perform slow queri log nosql nosql collect data item repres keyvalu store document store wide column store graph databas data denorm join gener done applic code nosql store lack true acid transact favor eventu consist base often use describ properti nosql databas comparison cap theorem base choos avail consist basic avail system guarante avail soft state state system may chang time even without input eventu consist system becom consist period time given system doesnt receiv input period addit choos sql nosql help understand type nosql databas best fit use case well review keyvalu store document store wide column store graph databas next section keyvalu store abstract hash tabl keyvalu store gener allow read write often back memori ssd data store maintain key lexicograph order allow effici retriev key rang keyvalu store allow store metadata valu keyvalu store provid high perform often use simpl data model rapidlychang data inmemori cach layer sinc offer limit set oper complex shift applic layer addit oper need keyvalu store basi complex system document store case graph databas sourc read keyvalu store keyvalu databas disadvantag keyvalu store redi architectur memcach architectur document store abstract keyvalu store document store valu document store center around document xml json binari etc document store inform given object document store provid api queri languag queri base intern structur document note mani keyvalu store includ featur work valu metadata blur line two storag type base underli implement document organ collect tag metadata directori although document organ group togeth document may field complet differ document store like mongodb couchdb also provid sqllike languag perform complex queri dynamodb support keyvalu document document store provid high flexibl often use work occasion chang data sourc read document store documentori databas mongodb architectur couchdb architectur elasticsearch architectur wide column store sourc sql nosql brief histori abstract nest map columnfamilyrowkey columnscolkey valu timestamp wide column store basic unit data column namevalu pair column group column famili analog sql tabl super column famili group column famili access column independ row key column row key form row valu contain timestamp version conflict resolut googl introduc bigtabl first wide column store influenc opensourc hbase oftenus hadoop ecosystem cassandra facebook store bigtabl hbase cassandra maintain key lexicograph order allow effici retriev select key rang wide column store offer high avail high scalabl often use larg data set sourc read wide column store sql nosql brief histori bigtabl architectur hbase architectur cassandra architectur graph databas sourc graph databas abstract graph graph databas node record arc relationship two node graph databas optim repres complex relationship mani foreign key manytomani relationship graph databas offer high perform data model complex relationship social network rel new yet widelyus might difficult find develop tool resourc mani graph access rest api sourc read graph graph databas neoj flockdb sourc read nosql explan base terminolog nosql databas survey decis guidanc scalabl introduct nosql nosql pattern sql nosql sourc transit rdbm nosql reason sql structur data strict schema relat data need complex join transact clear pattern scale establish develop commun code tool etc lookup index fast reason nosql semistructur data dynam flexibl schema nonrel data need complex join store mani tb pb data data intens workload high throughput iop sampl data wellsuit nosql rapid ingest clickstream log data leaderboard score data temporari data shop cart frequent access hot tabl metadatalookup tabl sourc read sql nosql scale first million user sql vs nosql differ cach sourc scalabl system design pattern cach improv page load time reduc load server databas model dispatch first lookup request made tri find previou result return order save actual execut databas often benefit uniform distribut read write across partit popular item skew distribut caus bottleneck put cach front databas help absorb uneven load spike traffic client cach cach locat client side os browser server side distinct cach layer cdn cach cdn consid type cach web server cach revers proxi cach varnish serv static dynam content directli web server also cach request return respons without contact applic server databas cach databas usual includ level cach default configur optim gener use case tweak set specif usag pattern boost perform applic cach inmemori cach memcach redi keyvalu store applic data storag sinc data held ram much faster typic databas data store disk ram limit disk cach invalid algorithm least recent use lru help invalid cold entri keep hot data ram redi follow addit featur persist option builtin data structur sort set list multipl level cach fall two gener categori databas queri object row level querylevel fullyform serializ object fullyrend html gener tri avoid filebas cach make clone autosc difficult cach databas queri level whenev queri databas hash queri key store result cach approach suffer expir issu hard delet cach result complex queri one piec data chang tabl cell need delet cach queri might includ chang cell cach object level see data object similar applic code applic assembl dataset databas class instanc data structur remov object cach underli data chang allow asynchron process worker assembl object consum latest cach object suggest cach user session fulli render web page activ stream user graph data updat cach sinc store limit amount data cach youll need determin cach updat strategi work best use case cacheasid sourc cach inmemori data grid applic respons read write storag cach interact storag directli applic follow look entri cach result cach miss load entri databas add entri cach return entri def getuserself userid user cachegetus userid user none user dbqueryselect user userid userid user none key userformatuserid cachesetkey jsondumpsus return user memcach gener use manner subsequ read data ad cach fast cacheasid also refer lazi load request data cach avoid fill cach data isnt request disadvantag cacheasid cach miss result three trip caus notic delay data becom stale updat databas issu mitig set timetol ttl forc updat cach entri use writethrough node fail replac new empti node increas latenc writethrough sourc scalabl avail stabil pattern applic use cach main data store read write data cach respons read write databas applic addsupd entri cach cach synchron write entri data store return applic code setus foobar cach code def setuseruserid valu user dbqueryupd user id userid valu cachesetuserid user writethrough slow overal oper due write oper subsequ read written data fast user gener toler latenc updat data read data data cach stale disadvantag write new node creat due failur scale new node cach entri entri updat databas cacheasid conjunct write mitig issu data written might never read minim ttl writebehind writeback sourc scalabl avail stabil pattern writebehind applic follow addupd entri cach asynchron write entri data store improv write perform disadvantag writebehind could data loss cach goe prior content hit data store complex implement writebehind implement cacheasid writethrough refreshahead sourc cach inmemori data grid configur cach automat refresh recent access cach entri prior expir refreshahead result reduc latenc vs readthrough cach accur predict item like need futur disadvantag refreshahead accur predict item like need futur result reduc perform without refreshahead disadvantag cach need maintain consist cach sourc truth databas cach invalid cach invalid difficult problem addit complex associ updat cach need make applic chang ad redi memcach sourc read cach inmemori data grid scalabl system design pattern introduct architect system scale scalabl avail stabil pattern scalabl aw elasticach strategi wikipedia asynchron sourc intro architect system scale asynchron workflow help reduc request time expens oper would otherwis perform inlin also help timeconsum work advanc period aggreg data messag queue messag queue receiv hold deliv messag oper slow perform inlin use messag queue follow workflow applic publish job queue notifi user job statu worker pick job queue process signal job complet user block job process background time client might option small amount process make seem like task complet exampl post tweet tweet could instantli post timelin could take time tweet actual deliv follow redi use simpl messag broker messag lost rabbitmq popular requir adapt amqp protocol manag node amazon sq host high latenc possibl messag deliv twice task queue task queue receiv task relat data run deliv result support schedul use run computationallyintens job background celeri support schedul primarili python support back pressur queue start grow significantli queue size becom larger memori result cach miss disk read even slower perform back pressur help limit queue size therebi maintain high throughput rate good respons time job alreadi queue queue fill client get server busi http statu code tri later client retri request later time perhap exponenti backoff disadvantag asynchron use case inexpens calcul realtim workflow might better suit synchron oper introduc queue add delay complex sourc read number game appli back pressur overload littl law differ messag queue task queue commun sourc osi layer model hypertext transfer protocol http http method encod transport data client server requestrespons protocol client issu request server issu respons relev content complet statu info request http selfcontain allow request respons flow mani intermedi router server perform load balanc cach encrypt compress basic http request consist verb method resourc endpoint common http verb verb descript idempot safe cacheabl get read resourc ye ye ye post creat resourc trigger process handl data ye respons contain fresh info put creat replac resourc ye patch partial updat resourc ye respons contain fresh info delet delet resourc ye call mani time without differ outcom http applic layer protocol reli lowerlevel protocol tcp udp sourc read http http differ http tcp differ put patch transmiss control protocol tcp sourc make multiplay game tcp connectionori protocol ip network connect establish termin use handshak packet sent guarante reach destin origin order without corrupt sequenc number checksum field packet acknowledg packet automat retransmiss sender receiv correct respons resend packet multipl timeout connect drop tcp also implement flow control congest control guarante caus delay gener result less effici transmiss udp ensur high throughput web server keep larg number tcp connect open result high memori usag expens larg number open connect web server thread say memcach server connect pool help addit switch udp applic tcp use applic requir high reliabl less time critic exampl includ web server databas info smtp ftp ssh use tcp udp need data arriv intact want automat make best estim use network throughput user datagram protocol udp sourc make multiplay game udp connectionless datagram analog packet guarante datagram level datagram might reach destin order udp support congest control without guarante tcp support udp gener effici udp broadcast send datagram devic subnet use dhcp client yet receiv ip address thu prevent way tcp stream without ip address udp less reliabl work well real time use case voip video chat stream realtim multiplay game use udp tcp need lowest latenc late data wors loss data want implement error correct sourc read tcp udp network game program key differ tcp udp protocol differ tcp udp transmiss control protocol user datagram protocol scale memcach facebook remot procedur call rpc sourc crack system design interview rpc client caus procedur execut differ address space usual remot server procedur code local procedur call abstract away detail commun server client program remot call usual slower less reliabl local call help distinguish rpc call local call popular rpc framework includ protobuf thrift avro rpc requestrespons protocol client program call client stub procedur paramet push onto stack like local procedur call client stub procedur marshal pack procedur id argument request messag client commun modul os send messag client server server commun modul os pass incom packet server stub procedur server stub procedur unmarshal result call server procedur match procedur id pass given argument server respons repeat step revers order sampl rpc call get someoperationdataanid post anotheroper dataanid anotherdata anoth valu rpc focus expos behavior rpc often use perform reason intern commun handcraft nativ call better fit use case choos nativ librari aka sdk know target platform want control logic access want control error control happen librari perform end user experi primari concern http api follow rest tend use often public api disadvantag rpc rpc client becom tightli coupl servic implement new api must defin everi new oper use case difficult debug rpc might abl leverag exist technolog box exampl might requir addit effort ensur rpc call properli cach cach server squid represent state transfer rest rest architectur style enforc clientserv model client act set resourc manag server server provid represent resourc action either manipul get new represent resourc commun must stateless cacheabl four qualiti rest interfac identifi resourc uri http use uri regardless oper chang represent verb http use verb header bodi selfdescript error messag statu respons http use statu code dont reinvent wheel hateoa html interfac http web servic fulli access browser sampl rest call get someresourcesanid put someresourcesanid anotherdata anoth valu rest focus expos data minim coupl clientserv often use public http api rest use gener uniform method expos resourc uri represent header action verb get post put delet patch stateless rest great horizont scale partit disadvantag rest rest focus expos data might good fit resourc natur organ access simpl hierarchi exampl return updat record past hour match particular set event easili express path rest like implement combin uri path queri paramet possibl request bodi rest typic reli verb get post put delet patch sometim doesnt fit use case exampl move expir document archiv folder might cleanli fit within verb fetch complic resourc nest hierarchi requir multipl round trip client server render singl view eg fetch content blog entri comment entri mobil applic oper variabl network condit multipl roundtrip highli undesir time field might ad api respons older client receiv new data field even need result bloat payload size lead larger latenc rpc rest call comparison oper rpc rest signup post signup post person resign post resignpersonid delet person read person get readpersonpersonid get person read person item list get readusersitemslistpersonid get personsitem add item person item post additemtousersitemslistpersonid itemid post personsitemsitemid updat item post modifyitemitemid key valu put itemskey valu delet item post removeitemitemid delet item sourc realli know prefer rest rpc sourc read rest rpc realli know prefer rest rpc rpcish approach appropri rest rest vs jsonrpc debunk myth rpc rest drawback use rest crack system design interview thrift rest intern use rpc secur section could use updat consid contribut secur broad topic unless consider experi secur background appli posit requir knowledg secur probabl wont need know basic encrypt transit rest sanit user input input paramet expos user prevent xss sql inject use parameter queri prevent sql inject use principl least privileg sourc read api secur checklist secur guid develop owasp top ten appendix youll sometim ask backoftheenvelop estim exampl might need determin long take gener imag thumbnail disk much memori data structur take power two tabl latenc number everi programm know handi refer power two tabl power exact valu approx valu byte thousand kb kb million mb billion gb gb trillion tb sourc read power two latenc number everi programm know latenc comparison number l cach refer ns branch mispredict ns l cach refer ns x l cach mutex lockunlock ns main memori refer ns x l cach x l cach compress k byte zippi ns us send kb byte gbp network ns us read kb randomli ssd ns us gbsec ssd read mb sequenti memori ns us round trip within datacent ns us read mb sequenti ssd ns us ms gbsec ssd x memori disk seek ns us ms x datacent roundtrip read mb sequenti gbp ns us ms x memori x ssd read mb sequenti disk ns us ms x memori x ssd send packet canetherlandsca ns us ms note ns second us second ns ms second us ns handi metric base number read sequenti disk mb read sequenti gbp ethernet mb read sequenti ssd gb read sequenti main memori gb worldwid round trip per second round trip per second within data center latenc number visual sourc read latenc number everi programm know latenc number everi programm know design lesson advic build larg distribut system softwar engin advic build largescal distribut system addit system design interview question common system design interview question link resourc solv question refer design file sync servic like dropbox youtubecom design search engin like googl queueacmorgstackexchangecomardendertatcomstanfordedu design scalabl web crawler like googl quoracom design googl doc codegooglecomneilfrasernam design keyvalu store like redi slidesharenet design cach system like memcach slidesharenet design recommend system like amazon hulucomijcaiorg design tinyurl system like bitli ntcdrblogspotcom design chat app like whatsapp highscalabilitycom design pictur share system like instagram highscalabilitycomhighscalabilitycom design facebook news feed function quoracomquoracomslidesharenet design facebook timelin function facebookcomhighscalabilitycom design facebook chat function erlangfactorycomfacebookcom design graph search function like facebook facebookcomfacebookcomfacebookcom design content deliveri network like cloudflar figsharecom design trend topic system like twitter michaelnollcomsnikolov wordpresscom design random id gener system blogtwittercomgithubcom return top k request time interv csucsbeduwpiedu design system serv data multipl data center highscalabilitycom design onlin multiplay card game indieflashblogcombuildnewgamescom design garbag collect system stuffwithstuffcomwashingtonedu design api rate limit httpsstripecomblog add system design question contribut real world architectur articl real world system design sourc twitter timelin scale dont focu nitti gritti detail follow articl instead identifi share principl common technolog pattern within articl studi problem solv compon work doesnt review lesson learn type system refer data process mapreduc distribut data process googl researchgooglecom data process spark distribut data process databrick slidesharenet data process storm distribut data process twitter slidesharenet data store bigtabl distribut columnori databas googl harvardedu data store hbase open sourc implement bigtabl slidesharenet data store cassandra distribut columnori databas facebook slidesharenet data store dynamodb documentori databas amazon harvardedu data store mongodb documentori databas slidesharenet data store spanner globallydistribut databas googl researchgooglecom data store memcach distribut memori cach system slidesharenet data store redi distribut memori cach system persist valu type slidesharenet file system googl file system gf distribut file system researchgooglecom file system hadoop file system hdf open sourc implement gf apacheorg misc chubbi lock servic looselycoupl distribut system googl researchgooglecom misc dapper distribut system trace infrastructur researchgooglecom misc kafka pubsub messag queue linkedin slidesharenet misc zookeep central infrastructur servic enabl synchron slidesharenet add architectur contribut compani architectur compani refer amazon amazon architectur cinchcast produc hour audio everi day datasift realtim datamin tweet per second dropbox weve scale dropbox espn oper duh nuh nuh per second googl googl architectur instagram million user terabyt photoswhat power instagram justintv justintv live video broadcast architectur facebook scale memcach facebooktao facebook distribut data store social graphfacebook photo storagehow facebook live stream simultan viewer flickr flickr architectur mailbox one million user week netflix degre view entir netflix stacknetflix happen press play pinterest billion page view month million visitor x growth employe playfish million monthli user grow plentyoffish plentyoffish architectur salesforc handl billion transact day stack overflow stack overflow architectur tripadvisor visitor dynam page view tb data tumblr billion page view month twitter make twitter percent fasterstor million tweet day use mysqlm activ user k qp mb firehosetimelin scalebig small data twitteroper twitter scale beyond million usershow twitter handl imag per second uber uber scale realtim market platformlesson learn scale uber engin servic git repositori whatsapp whatsapp architectur facebook bought billion youtub youtub scalabilityyoutub architectur compani engin blog architectur compani interview question encount might domain airbnb engin atlassian develop aw blog bitli engin blog box blog cloudera develop blog dropbox tech blog engin quora ebay tech blog evernot tech blog etsi code craft facebook engin flickr code foursquar engin blog github engin blog googl research blog groupon engin blog heroku engin blog hubspot engin blog high scalabl instagram engin intel softwar blog jane street tech blog linkedin engin microsoft engin microsoft python engin netflix tech blog paypal develop blog pinterest engin blog quora engin reddit blog salesforc engin blog slack engin blog spotifi lab twilio engin blog twitter engin uber engin blog yahoo engin blog yelp engin blog zynga engin blog sourc read look add blog avoid duplic work consid ad compani blog follow repo kilimchoiengineeringblog develop interest ad section help complet one inprogress contribut distribut comput mapreduc consist hash scatter gather contribut credit credit sourc provid throughout repo special thank hire tech crack code interview high scalabl checkcheckzzsystemdesigninterview shashanksystemdesign mmcgranaservicesengin system design cheat sheet distribut system read list crack system design interview contact info feel free contact discuss issu question comment contact info found github page licens provid code resourc repositori open sourc licens person repositori licens receiv code resourc employ facebook copyright donn martin creativ common attribut intern licens cc httpcreativecommonsorglicensesbi,english portugues brasil deutsch italiano polski espanol turkce tieng viet francais add translation system design primer motivation learn design largescale system prep system design interview learn design largescale system learning design scalable system help become better engineer system design broad topic vast amount resource scattered throughout web system design principle repo organized collection resource help learn build system scale learn open source community continually updated open source project contribution welcome prep system design interview addition coding interview system design required component technical interview process many tech company practice common system design interview question compare result sample solution discussion code diagram additional topic interview prep study guide approach system design interview question system design interview question solution objectoriented design interview question solution additional system design interview question anki flashcard provided anki flashcard deck use spaced repetition help retain key system design concept system design deck system design exercise deck object oriented design exercise deck great use onthego coding resource interactive coding challenge looking resource help prep coding interview check sister repo interactive coding challenge contains additional anki deck coding deck contributing learn community feel free submit pull request help fix error improve section add new section translate content need polishing placed development review contributing guideline index system design topic summary various system design topic including pro con everything tradeoff section contains link indepth resource system design topic start step review scalability video lecture step review scalability article next step performance v scalability latency v throughput availability v consistency cap theorem cp consistency partition tolerance ap availability partition tolerance consistency pattern weak consistency eventual consistency strong consistency availability pattern failover replication availability number domain name system content delivery network push cdns pull cdns load balancer activepassive activeactive layer load balancing layer load balancing horizontal scaling reverse proxy web server load balancer v reverse proxy application layer microservices service discovery database relational database management system rdbms masterslave replication mastermaster replication federation sharding denormalization sql tuning nosql keyvalue store document store wide column store graph database sql nosql cache client caching cdn caching web server caching database caching application caching caching database query level caching object level update cache cacheaside writethrough writebehind writeback refreshahead asynchronism message queue task queue back pressure communication transmission control protocol tcp user datagram protocol udp remote procedure call rpc representational state transfer rest security appendix power two table latency number every programmer know additional system design interview question real world architecture company architecture company engineering blog development credit contact info license study guide suggested topic review based interview timeline short medium long q interview need know everything dont need know everything prepare interview asked interview depends variable much experience technical background position interviewing company interviewing luck experienced candidate generally expected know system design architect team lead might expected know individual contributor top tech company likely one design interview round start broad go deeper area help know little various key system design topic adjust following guide based timeline experience position interviewing company interviewing short timeline aim breadth system design topic practice solving interview question medium timeline aim breadth depth system design topic practice solving many interview question long timeline aim breadth depth system design topic practice solving interview question short medium long read system design topic get broad understanding system work read article company engineering blog company interviewing read real world architecture review approach system design interview question work system design interview question solution many work objectoriented design interview question solution many review additional system design interview question many approach system design interview question tackle system design interview question system design interview openended conversation expected lead use following step guide discussion help solidify process work system design interview question solution section using following step step outline use case constraint assumption gather requirement scope problem ask question clarify use case constraint discus assumption going use going use many user system input output system much data expect handle many request per second expect expected read write ratio step create high level design outline high level design important component sketch main component connection justify idea step design core component dive detail core component example asked design url shortening service discus generating storing hash full url md base hash collision sql nosql database schema translating hashed url full url database lookup api objectoriented design step scale design identify address bottleneck given constraint example need following address scalability issue load balancer horizontal scaling caching database sharding discus potential solution tradeoff everything tradeoff address bottleneck using principle scalable system design backoftheenvelope calculation might asked estimate hand refer appendix following resource use back envelope calculation power two table latency number every programmer know source reading check following link get better idea expect ace system design interview system design interview intro architecture system design interview system design interview question solution common system design interview question sample discussion code diagram solution linked content solution folder question design pastebincom bitly solution design twitter timeline search facebook feed search solution design web crawler solution design mintcom solution design data structure social network solution design keyvalue store search engine solution design amazon sale ranking category feature solution design system scale million user aws solution add system design question contribute design pastebincom bitly view exercise solution design twitter timeline search facebook feed search view exercise solution design web crawler view exercise solution design mintcom view exercise solution design data structure social network view exercise solution design keyvalue store search engine view exercise solution design amazon sale ranking category feature view exercise solution design system scale million user aws view exercise solution objectoriented design interview question solution common objectoriented design interview question sample discussion code diagram solution linked content solution folder note section development question design hash map solution design least recently used cache solution design call center solution design deck card solution design parking lot solution design chat server solution design circular array contribute add objectoriented design question contribute system design topic start new system design first youll need basic understanding common principle learning used pro con step review scalability video lecture scalability lecture harvard topic covered vertical scaling horizontal scaling caching load balancing database replication database partitioning step review scalability article scalability topic covered clone database cache asynchronism next step next well look highlevel tradeoff performance v scalability latency v throughput availability v consistency keep mind everything tradeoff well dive specific topic dns cdns load balancer performance v scalability service scalable result increased performance manner proportional resource added generally increasing performance mean serving unit work also handle larger unit work datasets grow another way look performance v scalability performance problem system slow single user scalability problem system fast single user slow heavy load source reading word scalability scalability availability stability pattern latency v throughput latency time perform action produce result throughput number action result per unit time generally aim maximal throughput acceptable latency source reading understanding latency v throughput availability v consistency cap theorem source cap theorem revisited distributed computer system support two following guarantee consistency every read receives recent write error availability every request receives response without guarantee contains recent version information partition tolerance system continues operate despite arbitrary partitioning due network failure network arent reliable youll need support partition tolerance youll need make software tradeoff consistency availability cp consistency partition tolerance waiting response partitioned node might result timeout error cp good choice business need require atomic read writes ap availability partition tolerance response return recent version data available node might latest writes might take time propagate partition resolved ap good choice business need allow eventual consistency system need continue working despite external error source reading cap theorem revisited plain english introduction cap theorem cap faq consistency pattern multiple copy data faced option synchronize client consistent view data recall definition consistency cap theorem every read receives recent write error weak consistency write read may may see best effort approach taken approach seen system memcached weak consistency work well real time use case voip video chat realtime multiplayer game example phone call lose reception second regain connection hear spoken connection loss eventual consistency write read eventually see typically within millisecond data replicated asynchronously approach seen system dns email eventual consistency work well highly available system strong consistency write read see data replicated synchronously approach seen file system rdbmses strong consistency work well system need transaction source reading transaction across data center availability pattern two main pattern support high availability failover replication failover activepassive activepassive failover heartbeat sent active passive server standby heartbeat interrupted passive server take active ip address resume service length downtime determined whether passive server already running hot standby whether need start cold standby active server handle traffic activepassive failover also referred masterslave failover activeactive activeactive server managing traffic spreading load server publicfacing dns would need know public ip server server internalfacing application logic would need know server activeactive failover also referred mastermaster failover disadvantage failover failover add hardware additional complexity potential loss data active system fails newly written data replicated passive replication masterslave mastermaster topic discussed database section masterslave replication mastermaster replication availability number availability often quantified uptime downtime percentage time service available availability generally measured number sa service availability described four availability three duration acceptable downtime downtime per year h min downtime per month downtime per week downtime per day availability four duration acceptable downtime downtime per year min downtime per month downtime per week downtime per day availability parallel v sequence service consists multiple component prone failure service overall availability depends whether component sequence parallel sequence overall availability decrease two component availability sequence availability total availability foo availability bar foo bar availability total availability sequence would parallel overall availability increase two component availability parallel availability total availability foo availability bar foo bar availability total availability parallel would domain name system source dns security presentation domain name system dns translates domain name wwwexamplecom ip address dns hierarchical authoritative server top level router isp provides information dns server contact lookup lower level dns server cache mapping could become stale due dns propagation delay dns result also cached browser o certain period time determined time live ttl n record name server specifies dns server domainsubdomain mx record mail exchange specifies mail server accepting message record address point name ip address cname canonical point name another name cname examplecom wwwexamplecom record service cloudflare route provide managed dns service dns service route traffic various method weighted round robin prevent traffic going server maintenance balance varying cluster size ab testing latencybased geolocationbased disadvantage dns accessing dns server introduces slight delay although mitigated caching described dns server management could complex generally managed government isps large company dns service recently come ddos attack preventing user accessing website twitter without knowing twitter ip address source reading dns architecture wikipedia dns article content delivery network source use cdn content delivery network cdn globally distributed network proxy server serving content location closer user generally static file htmlcssjs photo video served cdn although cdns amazon cloudfront support dynamic content site dns resolution tell client server contact serving content cdns significantly improve performance two way user receive content data center close server serve request cdn fulfills push cdns push cdns receive new content whenever change occur server take full responsibility providing content uploading directly cdn rewriting url point cdn configure content expires updated content uploaded new changed minimizing traffic maximizing storage site small amount traffic site content isnt often updated work well push cdns content placed cdns instead repulled regular interval pull cdns pull cdns grab new content server first user request content leave content server rewrite url point cdn result slower request content cached cdn timetolive ttl determines long content cached pull cdns minimize storage space cdn create redundant traffic file expire pulled actually changed site heavy traffic work well pull cdns traffic spread evenly recentlyrequested content remaining cdn disadvantage cdn cdn cost could significant depending traffic although weighed additional cost would incur using cdn content might stale updated ttl expires cdns require changing url static content point cdn source reading globally distributed content delivery difference push pull cdns wikipedia load balancer source scalable system design pattern load balancer distribute incoming client request computing resource application server database case load balancer return response computing resource appropriate client load balancer effective preventing request going unhealthy server preventing overloading resource helping eliminate single point failure load balancer implemented hardware expensive software haproxy additional benefit include ssl termination decrypt incoming request encrypt server response backend server perform potentially expensive operation remove need install x certificate server session persistence issue cooky route specific client request instance web apps keep track session protect failure common set multiple load balancer either activepassive activeactive mode load balancer route traffic based various metric including random least loaded sessioncookies round robin weighted round robin layer layer layer load balancing layer load balancer look info transport layer decide distribute request generally involves source destination ip address port header content packet layer load balancer forward network packet upstream server performing network address translation nat layer load balancing layer load balancer look application layer decide distribute request involve content header message cooky layer load balancer terminates network traffic read message make loadbalancing decision open connection selected server example layer load balancer direct video traffic server host video directing sensitive user billing traffic securityhardened server cost flexibility layer load balancing requires le time computing resource layer although performance impact minimal modern commodity hardware horizontal scaling load balancer also help horizontal scaling improving performance availability scaling using commodity machine cost efficient result higher availability scaling single server expensive hardware called vertical scaling also easier hire talent working commodity hardware specialized enterprise system disadvantage horizontal scaling scaling horizontally introduces complexity involves cloning server server stateless contain userrelated data like session profile picture session stored centralized data store database sql nosql persistent cache redis memcached downstream server cache database need handle simultaneous connection upstream server scale disadvantage load balancer load balancer become performance bottleneck enough resource configured properly introducing load balancer help eliminate single point failure result increased complexity single load balancer single point failure configuring multiple load balancer increase complexity source reading nginx architecture haproxy architecture guide scalability wikipedia layer load balancing layer load balancing elb listener config reverse proxy web server source wikipedia reverse proxy web server centralizes internal service provides unified interface public request client forwarded server fulfill reverse proxy return server response client additional benefit include increased security hide information backend server blacklist ip limit number connection per client increased scalability flexibility client see reverse proxy ip allowing scale server change configuration ssl termination decrypt incoming request encrypt server response backend server perform potentially expensive operation remove need install x certificate server compression compress server response caching return response cached request static content serve static content directly htmlcssjs photo video etc load balancer v reverse proxy deploying load balancer useful multiple server often load balancer route traffic set server serving function reverse proxy useful even one web server application server opening benefit described previous section solution nginx haproxy support layer reverse proxying load balancing disadvantage reverse proxy introducing reverse proxy result increased complexity single reverse proxy single point failure configuring multiple reverse proxy ie failover increase complexity source reading reverse proxy v load balancer nginx architecture haproxy architecture guide wikipedia application layer source intro architecting system scale separating web layer application layer also known platform layer allows scale configure layer independently adding new api result adding application server without necessarily adding additional web server single responsibility principle advocate small autonomous service work together small team small service plan aggressively rapid growth worker application layer also help enable asynchronism microservices related discussion microservices described suite independently deployable small modular service service run unique process communicates welldefined lightweight mechanism serve business goal pinterest example could following microservices user profile follower feed search photo upload etc service discovery system consul etcd zookeeper help service find keeping track registered name address port health check help verify service integrity often done using http endpoint consul etcd built keyvalue store useful storing config value shared data disadvantage application layer adding application layer loosely coupled service requires different approach architectural operation process viewpoint v monolithic system microservices add complexity term deployment operation source reading intro architecting system scale crack system design interview service oriented architecture introduction zookeeper here need know building microservices database source scaling first million user relational database management system rdbms relational database like sql collection data item organized table acid set property relational database transaction atomicity transaction nothing consistency transaction bring database one valid state another isolation executing transaction concurrently result transaction executed serially durability transaction committed remain many technique scale relational database masterslave replication mastermaster replication federation sharding denormalization sql tuning masterslave replication master serf read writes replicating writes one slave serve read slave also replicate additional slave treelike fashion master go offline system continue operate readonly mode slave promoted master new master provisioned source scalability availability stability pattern disadvantage masterslave replication additional logic needed promote slave master see disadvantage replication point related masterslave mastermaster mastermaster replication master serve read writes coordinate writes either master go system continue operate read writes source scalability availability stability pattern disadvantage mastermaster replication youll need load balancer youll need make change application logic determine write mastermaster system either loosely consistent violating acid increased write latency due synchronization conflict resolution come play write node added latency increase see disadvantage replication point related masterslave mastermaster disadvantage replication potential loss data master fails newly written data replicated node writes replayed read replica lot writes read replica get bogged replaying writes cant many read read slave replicate lead greater replication lag system writing master spawn multiple thread write parallel whereas read replica support writing sequentially single thread replication add hardware additional complexity source reading replication scalability availability stability pattern multimaster replication federation source scaling first million user federation functional partitioning split database function example instead single monolithic database could three database forum user product resulting le read write traffic database therefore le replication lag smaller database result data fit memory turn result cache hit due improved cache locality single central master serializing writes write parallel increasing throughput disadvantage federation federation effective schema requires huge function table youll need update application logic determine database read write joining data two database complex server link federation add hardware additional complexity source reading federation scaling first million user sharding source scalability availability stability pattern sharding distributes data across different database database manage subset data taking user database example number user increase shard added cluster similar advantage federation sharding result le read write traffic le replication cache hit index size also reduced generally improves performance faster query one shard go shard still operational although youll want add form replication avoid data loss like federation single central master serializing writes allowing write parallel increased throughput common way shard table user either user last name initial user geographic location disadvantage sharding youll need update application logic work shard could result complex sql query data distribution become lopsided shard example set power user shard could result increased load shard compared others rebalancing add additional complexity sharding function based consistent hashing reduce amount transferred data joining data multiple shard complex sharding add hardware additional complexity source reading sharding coming shard shard database architecture consistent hashing denormalization denormalization attempt improve read performance expense write performance redundant copy data written multiple table avoid expensive join rdbms postgresql oracle support materialized view handle work storing redundant information keeping redundant copy consistent data becomes distributed technique federation sharding managing join across data center increase complexity denormalization might circumvent need complex join system read heavily outnumber writes even read resulting complex database join expensive spending significant amount time disk operation disadvantage denormalization data duplicated constraint help redundant copy information stay sync increase complexity database design denormalized database heavy write load might perform worse normalized counterpart source reading denormalization denormalization sql tuning sql tuning broad topic many book written reference important benchmark profile simulate uncover bottleneck benchmark simulate highload situation tool ab profile enable tool slow query log help track performance issue benchmarking profiling might point following optimization tighten schema mysql dump disk contiguous block fast access use char instead varchar fixedlength field char effectively allows fast random access whereas varchar must find end string moving onto next one use text large block text blog post text also allows boolean search using text field result storing pointer disk used locate text block use int larger number billion use decimal currency avoid floating point representation error avoid storing large blob store location get object instead varchar largest number character counted bit number often maximizing use byte rdbms set null constraint applicable improve search performance use good index column querying select group order join could faster index index usually represented selfbalancing btree keep data sorted allows search sequential access insertion deletion logarithmic time placing index keep data memory requiring space writes could also slower since index also need updated loading large amount data might faster disable index load data rebuild index avoid expensive join denormalize performance demand partition table break table putting hot spot separate table help keep memory tune query cache case query cache could lead performance issue source reading sql tuning tip optimizing mysql query good reason see varchar used often null value affect performance slow query log nosql nosql collection data item represented keyvalue store document store wide column store graph database data denormalized join generally done application code nosql store lack true acid transaction favor eventual consistency base often used describe property nosql database comparison cap theorem base chooses availability consistency basically available system guarantee availability soft state state system may change time even without input eventual consistency system become consistent period time given system doesnt receive input period addition choosing sql nosql helpful understand type nosql database best fit use case well review keyvalue store document store wide column store graph database next section keyvalue store abstraction hash table keyvalue store generally allows read writes often backed memory ssd data store maintain key lexicographic order allowing efficient retrieval key range keyvalue store allow storing metadata value keyvalue store provide high performance often used simple data model rapidlychanging data inmemory cache layer since offer limited set operation complexity shifted application layer additional operation needed keyvalue store basis complex system document store case graph database source reading keyvalue store keyvalue database disadvantage keyvalue store redis architecture memcached architecture document store abstraction keyvalue store document stored value document store centered around document xml json binary etc document store information given object document store provide apis query language query based internal structure document note many keyvalue store include feature working value metadata blurring line two storage type based underlying implementation document organized collection tag metadata directory although document organized grouped together document may field completely different document store like mongodb couchdb also provide sqllike language perform complex query dynamodb support keyvalues document document store provide high flexibility often used working occasionally changing data source reading document store documentoriented database mongodb architecture couchdb architecture elasticsearch architecture wide column store source sql nosql brief history abstraction nested map columnfamilyrowkey columnscolkey value timestamp wide column store basic unit data column namevalue pair column grouped column family analogous sql table super column family group column family access column independently row key column row key form row value contains timestamp versioning conflict resolution google introduced bigtable first wide column store influenced opensource hbase oftenused hadoop ecosystem cassandra facebook store bigtable hbase cassandra maintain key lexicographic order allowing efficient retrieval selective key range wide column store offer high availability high scalability often used large data set source reading wide column store sql nosql brief history bigtable architecture hbase architecture cassandra architecture graph database source graph database abstraction graph graph database node record arc relationship two node graph database optimized represent complex relationship many foreign key manytomany relationship graph database offer high performance data model complex relationship social network relatively new yet widelyused might difficult find development tool resource many graph accessed rest apis source reading graph graph database neoj flockdb source reading nosql explanation base terminology nosql database survey decision guidance scalability introduction nosql nosql pattern sql nosql source transitioning rdbms nosql reason sql structured data strict schema relational data need complex join transaction clear pattern scaling established developer community code tool etc lookup index fast reason nosql semistructured data dynamic flexible schema nonrelational data need complex join store many tb pb data data intensive workload high throughput iop sample data wellsuited nosql rapid ingest clickstream log data leaderboard scoring data temporary data shopping cart frequently accessed hot table metadatalookup table source reading sql nosql scaling first million user sql v nosql difference cache source scalable system design pattern caching improves page load time reduce load server database model dispatcher first lookup request made try find previous result return order save actual execution database often benefit uniform distribution read writes across partition popular item skew distribution causing bottleneck putting cache front database help absorb uneven load spike traffic client caching cache located client side o browser server side distinct cache layer cdn caching cdns considered type cache web server caching reverse proxy cache varnish serve static dynamic content directly web server also cache request returning response without contact application server database caching database usually includes level caching default configuration optimized generic use case tweaking setting specific usage pattern boost performance application caching inmemory cache memcached redis keyvalue store application data storage since data held ram much faster typical database data stored disk ram limited disk cache invalidation algorithm least recently used lru help invalidate cold entry keep hot data ram redis following additional feature persistence option builtin data structure sorted set list multiple level cache fall two general category database query object row level querylevel fullyformed serializable object fullyrendered html generally try avoid filebased caching make cloning autoscaling difficult caching database query level whenever query database hash query key store result cache approach suffers expiration issue hard delete cached result complex query one piece data change table cell need delete cached query might include changed cell caching object level see data object similar application code application assemble dataset database class instance data structure remove object cache underlying data changed allows asynchronous processing worker assemble object consuming latest cached object suggestion cache user session fully rendered web page activity stream user graph data update cache since store limited amount data cache youll need determine cache update strategy work best use case cacheaside source cache inmemory data grid application responsible reading writing storage cache interact storage directly application following look entry cache resulting cache miss load entry database add entry cache return entry def getuserself userid user cachegetuser userid user none user dbqueryselect user userid userid user none key userformatuserid cachesetkey jsondumpsuser return user memcached generally used manner subsequent read data added cache fast cacheaside also referred lazy loading requested data cached avoids filling cache data isnt requested disadvantage cacheaside cache miss result three trip cause noticeable delay data become stale updated database issue mitigated setting timetolive ttl force update cache entry using writethrough node fails replaced new empty node increasing latency writethrough source scalability availability stability pattern application us cache main data store reading writing data cache responsible reading writing database application addsupdates entry cache cache synchronously writes entry data store return application code setuser foobar cache code def setuseruserid value user dbqueryupdate user id userid value cachesetuserid user writethrough slow overall operation due write operation subsequent read written data fast user generally tolerant latency updating data reading data data cache stale disadvantage write new node created due failure scaling new node cache entry entry updated database cacheaside conjunction write mitigate issue data written might never read minimized ttl writebehind writeback source scalability availability stability pattern writebehind application following addupdate entry cache asynchronously write entry data store improving write performance disadvantage writebehind could data loss cache go prior content hitting data store complex implement writebehind implement cacheaside writethrough refreshahead source cache inmemory data grid configure cache automatically refresh recently accessed cache entry prior expiration refreshahead result reduced latency v readthrough cache accurately predict item likely needed future disadvantage refreshahead accurately predicting item likely needed future result reduced performance without refreshahead disadvantage cache need maintain consistency cache source truth database cache invalidation cache invalidation difficult problem additional complexity associated update cache need make application change adding redis memcached source reading cache inmemory data grid scalable system design pattern introduction architecting system scale scalability availability stability pattern scalability aws elasticache strategy wikipedia asynchronism source intro architecting system scale asynchronous workflow help reduce request time expensive operation would otherwise performed inline also help timeconsuming work advance periodic aggregation data message queue message queue receive hold deliver message operation slow perform inline use message queue following workflow application publishes job queue notifies user job status worker pick job queue process signal job complete user blocked job processed background time client might optionally small amount processing make seem like task completed example posting tweet tweet could instantly posted timeline could take time tweet actually delivered follower redis useful simple message broker message lost rabbitmq popular requires adapt amqp protocol manage node amazon sqs hosted high latency possibility message delivered twice task queue task queue receive task related data run delivers result support scheduling used run computationallyintensive job background celery support scheduling primarily python support back pressure queue start grow significantly queue size become larger memory resulting cache miss disk read even slower performance back pressure help limiting queue size thereby maintaining high throughput rate good response time job already queue queue fill client get server busy http status code try later client retry request later time perhaps exponential backoff disadvantage asynchronism use case inexpensive calculation realtime workflow might better suited synchronous operation introducing queue add delay complexity source reading number game applying back pressure overloaded little law difference message queue task queue communication source osi layer model hypertext transfer protocol http http method encoding transporting data client server requestresponse protocol client issue request server issue response relevant content completion status info request http selfcontained allowing request response flow many intermediate router server perform load balancing caching encryption compression basic http request consists verb method resource endpoint common http verb verb description idempotent safe cacheable get read resource yes yes yes post creates resource trigger process handle data yes response contains freshness info put creates replace resource yes patch partially update resource yes response contains freshness info delete deletes resource yes called many time without different outcome http application layer protocol relying lowerlevel protocol tcp udp source reading http http difference http tcp difference put patch transmission control protocol tcp source make multiplayer game tcp connectionoriented protocol ip network connection established terminated using handshake packet sent guaranteed reach destination original order without corruption sequence number checksum field packet acknowledgement packet automatic retransmission sender receive correct response resend packet multiple timeouts connection dropped tcp also implement flow control congestion control guarantee cause delay generally result le efficient transmission udp ensure high throughput web server keep large number tcp connection open resulting high memory usage expensive large number open connection web server thread say memcached server connection pooling help addition switching udp applicable tcp useful application require high reliability le time critical example include web server database info smtp ftp ssh use tcp udp need data arrive intact want automatically make best estimate use network throughput user datagram protocol udp source make multiplayer game udp connectionless datagrams analogous packet guaranteed datagram level datagrams might reach destination order udp support congestion control without guarantee tcp support udp generally efficient udp broadcast sending datagrams device subnet useful dhcp client yet received ip address thus preventing way tcp stream without ip address udp le reliable work well real time use case voip video chat streaming realtime multiplayer game use udp tcp need lowest latency late data worse loss data want implement error correction source reading tcp udp networking game programming key difference tcp udp protocol difference tcp udp transmission control protocol user datagram protocol scaling memcache facebook remote procedure call rpc source crack system design interview rpc client cause procedure execute different address space usually remote server procedure coded local procedure call abstracting away detail communicate server client program remote call usually slower le reliable local call helpful distinguish rpc call local call popular rpc framework include protobuf thrift avro rpc requestresponse protocol client program call client stub procedure parameter pushed onto stack like local procedure call client stub procedure marshal pack procedure id argument request message client communication module o sends message client server server communication module o pass incoming packet server stub procedure server stub procedure unmarshalls result call server procedure matching procedure id pass given argument server response repeat step reverse order sample rpc call get someoperationdataanid post anotheroperation dataanid anotherdata another value rpc focused exposing behavior rpcs often used performance reason internal communication handcraft native call better fit use case choose native library aka sdk know target platform want control logic accessed want control error control happens library performance end user experience primary concern http apis following rest tend used often public apis disadvantage rpc rpc client become tightly coupled service implementation new api must defined every new operation use case difficult debug rpc might able leverage existing technology box example might require additional effort ensure rpc call properly cached caching server squid representational state transfer rest rest architectural style enforcing clientserver model client act set resource managed server server provides representation resource action either manipulate get new representation resource communication must stateless cacheable four quality restful interface identify resource uri http use uri regardless operation change representation verb http use verb header body selfdescriptive error message status response http use status code dont reinvent wheel hateoas html interface http web service fully accessible browser sample rest call get someresourcesanid put someresourcesanid anotherdata another value rest focused exposing data minimizes coupling clientserver often used public http apis rest us generic uniform method exposing resource uris representation header action verb get post put delete patch stateless rest great horizontal scaling partitioning disadvantage rest rest focused exposing data might good fit resource naturally organized accessed simple hierarchy example returning updated record past hour matching particular set event easily expressed path rest likely implemented combination uri path query parameter possibly request body rest typically relies verb get post put delete patch sometimes doesnt fit use case example moving expired document archive folder might cleanly fit within verb fetching complicated resource nested hierarchy requires multiple round trip client server render single view eg fetching content blog entry comment entry mobile application operating variable network condition multiple roundtrips highly undesirable time field might added api response older client receive new data field even need result bloat payload size lead larger latency rpc rest call comparison operation rpc rest signup post signup post person resign post resignpersonid delete person read person get readpersonpersonid get person read person item list get readusersitemslistpersonid get personsitems add item person item post additemtousersitemslistpersonid itemid post personsitemsitemid update item post modifyitemitemid key value put itemskey value delete item post removeitemitemid delete item source really know prefer rest rpc source reading rest rpc really know prefer rest rpc rpcish approach appropriate rest rest v jsonrpc debunking myth rpc rest drawback using rest crack system design interview thrift rest internal use rpc security section could use update consider contributing security broad topic unless considerable experience security background applying position requires knowledge security probably wont need know basic encrypt transit rest sanitize user input input parameter exposed user prevent x sql injection use parameterized query prevent sql injection use principle least privilege source reading api security checklist security guide developer owasp top ten appendix youll sometimes asked backoftheenvelope estimate example might need determine long take generate image thumbnail disk much memory data structure take power two table latency number every programmer know handy reference power two table power exact value approx value byte thousand kb kb million mb billion gb gb trillion tb source reading power two latency number every programmer know latency comparison number l cache reference n branch mispredict n l cache reference n x l cache mutex lockunlock n main memory reference n x l cache x l cache compress k byte zippy n u send kb byte gbps network n u read kb randomly ssd n u gbsec ssd read mb sequentially memory n u round trip within datacenter n u read mb sequentially ssd n u m gbsec ssd x memory disk seek n u m x datacenter roundtrip read mb sequentially gbps n u m x memory x ssd read mb sequentially disk n u m x memory x ssd send packet canetherlandsca n u m note n second u second n m second u n handy metric based number read sequentially disk mb read sequentially gbps ethernet mb read sequentially ssd gb read sequentially main memory gb worldwide round trip per second round trip per second within data center latency number visualized source reading latency number every programmer know latency number every programmer know design lesson advice building large distributed system software engineering advice building largescale distributed system additional system design interview question common system design interview question link resource solve question reference design file sync service like dropbox youtubecom design search engine like google queueacmorgstackexchangecomardendertatcomstanfordedu design scalable web crawler like google quoracom design google doc codegooglecomneilfrasername design keyvalue store like redis slidesharenet design cache system like memcached slidesharenet design recommendation system like amazon hulucomijcaiorg design tinyurl system like bitly ntcdrblogspotcom design chat app like whatsapp highscalabilitycom design picture sharing system like instagram highscalabilitycomhighscalabilitycom design facebook news feed function quoracomquoracomslidesharenet design facebook timeline function facebookcomhighscalabilitycom design facebook chat function erlangfactorycomfacebookcom design graph search function like facebooks facebookcomfacebookcomfacebookcom design content delivery network like cloudflare figsharecom design trending topic system like twitter michaelnollcomsnikolov wordpresscom design random id generation system blogtwittercomgithubcom return top k request time interval csucsbeduwpiedu design system serf data multiple data center highscalabilitycom design online multiplayer card game indieflashblogcombuildnewgamescom design garbage collection system stuffwithstuffcomwashingtonedu design api rate limiter httpsstripecomblog add system design question contribute real world architecture article real world system designed source twitter timeline scale dont focus nitty gritty detail following article instead identify shared principle common technology pattern within article study problem solved component work doesnt review lesson learned type system reference data processing mapreduce distributed data processing google researchgooglecom data processing spark distributed data processing databricks slidesharenet data processing storm distributed data processing twitter slidesharenet data store bigtable distributed columnoriented database google harvardedu data store hbase open source implementation bigtable slidesharenet data store cassandra distributed columnoriented database facebook slidesharenet data store dynamodb documentoriented database amazon harvardedu data store mongodb documentoriented database slidesharenet data store spanner globallydistributed database google researchgooglecom data store memcached distributed memory caching system slidesharenet data store redis distributed memory caching system persistence value type slidesharenet file system google file system gfs distributed file system researchgooglecom file system hadoop file system hdfs open source implementation gfs apacheorg misc chubby lock service looselycoupled distributed system google researchgooglecom misc dapper distributed system tracing infrastructure researchgooglecom misc kafka pubsub message queue linkedin slidesharenet misc zookeeper centralized infrastructure service enabling synchronization slidesharenet add architecture contribute company architecture company reference amazon amazon architecture cinchcast producing hour audio every day datasift realtime datamining tweet per second dropbox weve scaled dropbox espn operating duh nuh nuhs per second google google architecture instagram million user terabyte photoswhat power instagram justintv justintvs live video broadcasting architecture facebook scaling memcached facebooktao facebooks distributed data store social graphfacebooks photo storagehow facebook live stream simultaneous viewer flickr flickr architecture mailbox one million user week netflix degree view entire netflix stacknetflix happens press play pinterest billion page view month million visitor x growth employee playfish million monthly user growing plentyoffish plentyoffish architecture salesforce handle billion transaction day stack overflow stack overflow architecture tripadvisor visitor dynamic page view tb data tumblr billion page view month twitter making twitter percent fasterstoring million tweet day using mysqlm active user k qps mb firehosetimelines scalebig small data twitteroperations twitter scaling beyond million usershow twitter handle image per second uber uber scale realtime market platformlessons learned scaling uber engineer service git repository whatsapp whatsapp architecture facebook bought billion youtube youtube scalabilityyoutube architecture company engineering blog architecture company interviewing question encounter might domain airbnb engineering atlassian developer aws blog bitly engineering blog box blog cloudera developer blog dropbox tech blog engineering quora ebay tech blog evernote tech blog etsy code craft facebook engineering flickr code foursquare engineering blog github engineering blog google research blog groupon engineering blog heroku engineering blog hubspot engineering blog high scalability instagram engineering intel software blog jane street tech blog linkedin engineering microsoft engineering microsoft python engineering netflix tech blog paypal developer blog pinterest engineering blog quora engineering reddit blog salesforce engineering blog slack engineering blog spotify lab twilio engineering blog twitter engineering uber engineering blog yahoo engineering blog yelp engineering blog zynga engineering blog source reading looking add blog avoid duplicating work consider adding company blog following repo kilimchoiengineeringblogs development interested adding section helping complete one inprogress contribute distributed computing mapreduce consistent hashing scatter gather contribute credit credit source provided throughout repo special thanks hired tech cracking coding interview high scalability checkcheckzzsystemdesigninterview shashanksystemdesign mmcgranaservicesengineering system design cheat sheet distributed system reading list cracking system design interview contact info feel free contact discus issue question comment contact info found github page license providing code resource repository open source license personal repository license receive code resource employer facebook copyright donne martin creative common attribution international license cc httpcreativecommonsorglicensesby
1,Python,"GitHub - vinta/awesome-python: A curated list of awesome Python frameworks, libraries, software and resources","Awesome Python 
A curated list of awesome Python frameworks, libraries, software and resources.
Inspired by awesome-php.

Awesome Python

Admin Panels
Algorithms and Design Patterns
Asynchronous Programming
Audio
Authentication
Build Tools
Built-in Classes Enhancement
Caching
ChatOps Tools
CMS
Code Analysis
Command-line Interface Development
Command-line Tools
Compatibility
Computer Vision
Concurrency and Parallelism
Configuration
Cryptography
Data Analysis
Data Validation
Data Visualization
Database Drivers
Database
Date and Time
Debugging Tools
Deep Learning
DevOps Tools
Distributed Computing
Distribution
Documentation
Downloader
E-commerce
Editor Plugins and IDEs
Email
Environment Management
Files
Foreign Function Interface
Forms
Functional Programming
Game Development
Geolocation
GUI Development
Hardware
HTML Manipulation
HTTP Clients
Image Processing
Implementations
Interactive Interpreter
Internationalization
Job Scheduler
Logging
Machine Learning
Miscellaneous
Natural Language Processing
Network Virtualization
News Feed
ORM
Package Management
Package Repositories
Permissions
Processes
Recommender Systems
RESTful API
Robotics
RPC Servers
Science
Search
Serialization
Serverless Frameworks
Specific Formats Processing
Static Site Generator
Tagging
Task Queues
Template Engine
Testing
Text Processing
Third-party APIs
URL Manipulation
Video
Web Asset Management
Web Content Extracting
Web Crawling
Web Frameworks
WebSocket
WSGI Servers


Resources

Podcasts
Twitter
Websites
Weekly


Contributing


Admin Panels
Libraries for administrative interfaces.

ajenti - The admin panel your servers deserve.
django-grappelli - A jazzy skin for the Django Admin-Interface.
django-jet - Modern responsive template for the Django admin interface with improved functionality.
django-suit - Alternative Django Admin-Interface (free only for Non-commercial use).
django-xadmin - Drop-in replacement of Django admin comes with lots of goodies.
jet-bridge - Admin panel framework for any application with nice UI (ex Jet Django)
flask-admin - Simple and extensible administrative interface framework for Flask.
flower - Real-time monitor and web admin for Celery.
wooey - A Django app which creates automatic web UIs for Python scripts.

Algorithms and Design Patterns
Python implementation of algorithms and design patterns.

algorithms - Minimal examples of data structures and algorithms in Python.
PyPattyrn - A simple yet effective library for implementing common design patterns.
python-patterns - A collection of design patterns in Python.
sortedcontainers - Fast, pure-Python implementation of SortedList, SortedDict, and SortedSet types.

Asynchronous Programming

asyncio - (Python standard library) Asynchronous I/O, event loop, coroutines and tasks.

awesome-asyncio


uvloop - Ultra fast asyncio event loop.
Twisted - An event-driven networking engine.

Audio
Libraries for manipulating audio and its metadata.

Audio

audioread - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.
dejavu - Audio fingerprinting and recognition.
mingus - An advanced music theory and notation package with MIDI file and playback support.
pyAudioAnalysis - Audio feature extraction, classification, segmentation and applications.
pydub - Manipulate audio with a simple and easy high level interface.
TimeSide - Open web audio processing framework.


Metadata

beets - A music library manager and MusicBrainz tagger.
eyeD3 - A tool for working with audio files, specifically MP3 files containing ID3 metadata.
mutagen - A Python module to handle audio metadata.
tinytag - A library for reading music meta data of MP3, OGG, FLAC and Wave files.



Authentication
Libraries for implementing authentications schemes.

OAuth

authlib - JavaScript Object Signing and Encryption draft implementation.
django-allauth - Authentication app for Django that ""just works.""
django-oauth-toolkit - OAuth 2 goodies for Django.
oauthlib - A generic and thorough implementation of the OAuth request-signing logic.
python-oauth2 - A fully tested, abstract interface to creating OAuth clients and servers.
python-social-auth - An easy-to-setup social authentication mechanism.


JWT

pyjwt - JSON Web Token implementation in Python.
python-jose - A JOSE implementation in Python.
python-jwt - A module for generating and verifying JSON Web Tokens.



Build Tools
Compile software from source code.

BitBake - A make-like build tool for embedded Linux.
buildout - A build system for creating, assembling and deploying applications from multiple parts.
PlatformIO - A console tool to build code with different development platforms.
pybuilder - A continuous build tool written in pure Python.
SCons - A software construction tool.

Built-in Classes Enhancement
Libraries for enhancing Python built-in classes.

dataclasses - (Python standard library) Data classes.
attrs - Replacement for __init__, __eq__, __repr__, etc. boilerplate in class definitions.
bidict - Efficient, Pythonic bidirectional map data structures and related functionality..
Box - Python dictionaries with advanced dot notation access.
DottedDict - A library that provides a method of accessing lists and dicts with a dotted path notation.

CMS
Content Management Systems.

wagtail - A Django content management system.
django-cms - An Open source enterprise CMS based on the Django.
feincms - One of the most advanced Content Management Systems built on Django.
Kotti - A high-level, Pythonic web application framework built on Pyramid.
mezzanine - A powerful, consistent, and flexible content management platform.
plone - A CMS built on top of the open source application server Zope.
quokka - Flexible, extensible, small CMS powered by Flask and MongoDB.

Caching
Libraries for caching data.

beaker - A WSGI middleware for sessions and caching.
django-cache-machine - Automatic caching and invalidation for Django models.
django-cacheops - A slick ORM cache with automatic granular event-driven invalidation.
dogpile.cache - dogpile.cache is next generation replacement for Beaker made by same authors.
HermesCache - Python caching library with tag-based invalidation and dogpile effect prevention.
pylibmc - A Python wrapper around the libmemcached interface.
python-diskcache - SQLite and file backed cache backend with faster lookups than memcached and redis.

ChatOps Tools
Libraries for chatbot development.

errbot - The easiest and most popular chatbot to implement ChatOps.

Code Analysis
Tools of static analysis, linters and code quality checkers. Also see awesome-static-analysis.

Code Analysis

coala - Language independent and easily extendable code analysis application.
code2flow - Turn your Python and JavaScript code into DOT flowcharts.
prospector - A tool to analyse Python code.
pycallgraph - A library that visualises the flow (call graph) of your Python application.


Code Linters

flake8 - A wrapper around pycodestyle, pyflakes and McCabe.

awesome-flake8-extensions


pylint - A fully customizable source code analyzer.
pylama - A code audit tool for Python and JavaScript.
wemake-python-styleguide - The strictest and most opinionated python linter ever.


Code Formatters

black - The uncompromising Python code formatter.
yapf - Yet another Python code formatter from Google.


Static Type Checkers, also see awesome-python-typing

mypy - Check variable types during compile time.
pyre-check - Performant type checking.


Static Type Annotations Generators

MonkeyType - A system for Python that generates static type annotations by collecting runtime types



Command-line Interface Development
Libraries for building command-line applications.

Command-line Application Development

cement - CLI Application Framework for Python.
click - A package for creating beautiful command line interfaces in a composable way.
cliff - A framework for creating command-line programs with multi-level commands.
clint - Python Command-line Application Tools.
docopt - Pythonic command line arguments parser.
python-fire - A library for creating command line interfaces from absolutely any Python object.
python-prompt-toolkit - A library for building powerful interactive command lines.


Terminal Rendering

asciimatics - A package to create full-screen text UIs (from interactive forms to ASCII animations).
bashplotlib - Making basic plots in the terminal.
colorama - Cross-platform colored terminal text.
tqdm - Fast, extensible progress bar for loops and CLI.



Command-line Tools
Useful CLI-based tools for productivity.

Productivity Tools

cookiecutter - A command-line utility that creates projects from cookiecutters (project templates).
doitlive - A tool for live presentations in the terminal.
howdoi - Instant coding answers via the command line.
PathPicker - Select files out of bash output.
percol - Adds flavor of interactive selection to the traditional pipe concept on UNIX.
thefuck - Correcting your previous console command.
tmuxp - A tmux session manager.
try - A dead simple CLI to try out python packages - it's never been easier.


CLI Enhancements

httpie - A command line HTTP client, a user-friendly cURL replacement.
kube-shell - An integrated shell for working with the Kubernetes CLI.
mycli - A Terminal Client for MySQL with AutoCompletion and Syntax Highlighting.
pgcli - Postgres CLI with autocompletion and syntax highlighting.
saws - A Supercharged aws-cli.



Compatibility
Libraries for migrating from Python 2 to 3.

python-future - The missing compatibility layer between Python 2 and Python 3.
python-modernize - Modernizes Python code for eventual Python 3 migration.
six - Python 2 and 3 compatibility utilities.

Computer Vision
Libraries for computer vision.

OpenCV - Open Source Computer Vision Library.
pytesseract - Another wrapper for Google Tesseract OCR.
SimpleCV - An open source framework for building computer vision applications.

Concurrency and Parallelism
Libraries for concurrent and parallel execution. Also see awesome-asyncio.

concurrent.futures - (Python standard library) A high-level interface for asynchronously executing callables.
multiprocessing - (Python standard library) Process-based parallelism.
eventlet - Asynchronous framework with WSGI support.
gevent - A coroutine-based Python networking library that uses greenlet.
uvloop - Ultra fast implementation of asyncio event loop on top of libuv.
scoop - Scalable Concurrent Operations in Python.

Configuration
Libraries for storing and parsing configuration options.

configobj - INI file parser with validation.
configparser - (Python standard library) INI file parser.
profig - Config from multiple formats with value conversion.
python-decouple - Strict separation of settings from code.

Cryptography

cryptography - A package designed to expose cryptographic primitives and recipes to Python developers.
paramiko - The leading native Python SSHv2 protocol library.
passlib - Secure password storage/hashing library, very high level.
pynacl - Python binding to the Networking and Cryptography (NaCl) library.

Data Analysis
Libraries for data analyzing.

Blaze - NumPy and Pandas interface to Big Data.
Open Mining - Business Intelligence (BI) in Pandas interface.
Orange - Data mining, data visualization, analysis and machine learning through visual programming or scripts.
Pandas - A library providing high-performance, easy-to-use data structures and data analysis tools.
Optimus - Agile Data Science Workflows made easy with PySpark.

Data Validation
Libraries for validating data. Used for forms in many cases.

Cerberus - A lightweight and extensible data validation library.
colander - Validating and deserializing data obtained via XML, JSON, an HTML form post.
jsonschema - An implementation of JSON Schema for Python.
schema - A library for validating Python data structures.
Schematics - Data Structure Validation.
valideer - Lightweight extensible data validation and adaptation library.
voluptuous - A Python data validation library.

Data Visualization
Libraries for visualizing data. Also see awesome-javascript.

Altair - Declarative statistical visualization library for Python.
Bokeh - Interactive Web Plotting for Python.
bqplot - Interactive Plotting Library for the Jupyter Notebook
Dash - Built on top of Flask, React and Plotly aimed at analytical web applications.

awesome-dash


plotnine - A grammar of graphics for Python based on ggplot2.
Matplotlib - A Python 2D plotting library.
Pygal - A Python SVG Charts Creator.
PyGraphviz - Python interface to Graphviz.
PyQtGraph - Interactive and realtime 2D/3D/Image plotting and science/engineering widgets.
Seaborn - Statistical data visualization using Matplotlib.
VisPy - High-performance scientific visualization based on OpenGL.

Database
Databases implemented in Python.

pickleDB - A simple and lightweight key-value store for Python.
tinydb - A tiny, document-oriented database.
ZODB - A native object database for Python. A key-value and object graph database.

Database Drivers
Libraries for connecting and operating databases.

MySQL - awesome-mysql

mysqlclient - MySQL connector with Python 3 support (mysql-python fork).
PyMySQL - A pure Python MySQL driver compatible to mysql-python.


PostgreSQL - awesome-postgres

psycopg2 - The most popular PostgreSQL adapter for Python.
queries - A wrapper of the psycopg2 library for interacting with PostgreSQL.


Other Relational Databases

pymssql - A simple database interface to Microsoft SQL Server.
SuperSQLite - A supercharged SQLite library built on top of apsw.


NoSQL Databases

cassandra-driver - The Python Driver for Apache Cassandra.
happybase - A developer-friendly library for Apache HBase.
kafka-python - The Python client for Apache Kafka.
py2neo - A client library and toolkit for working with Neo4j.
pymongo - The official Python client for MongoDB.
redis-py - The Python client for Redis.


Asynchronous Clients

motor - The async Python driver for MongoDB.



Date and Time
Libraries for working with dates and times.

Chronyk - A Python 3 library for parsing human-written times and dates.
dateutil - Extensions to the standard Python datetime module.
delorean - A library for clearing up the inconvenient truths that arise dealing with datetimes.
moment - A Python library for dealing with dates/times. Inspired by Moment.js.
Pendulum - Python datetimes made easy.
PyTime - An easy-to-use Python module which aims to operate date/time/datetime by string.
pytz - World timezone definitions, modern and historical. Brings the tz database into Python.
when.py - Providing user-friendly functions to help perform common date and time actions.
maya - Datetimes for Humans.

Debugging Tools
Libraries for debugging code.

pdb-like Debugger

ipdb - IPython-enabled pdb.
pdb++ - Another drop-in replacement for pdb.
pudb - A full-screen, console-based Python debugger.
wdb - An improbable web debugger through WebSockets.


Tracing

lptrace - strace for Python programs.
manhole - Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.
pyringe - Debugger capable of attaching to and injecting code into Python processes.
python-hunter - A flexible code tracing toolkit.


Profiler

line_profiler - Line-by-line profiling.
memory_profiler - Monitor Memory usage of Python code.
profiling - An interactive Python profiler.
py-spy - A sampling profiler for Python programs. Written in Rust.
pyflame - A ptracing profiler For Python.
vprof - Visual Python profiler.


Others

icecream - Inspect variables, expressions, and program execution with a single, simple function call.
django-debug-toolbar - Display various debug information for Django.
django-devserver - A drop-in replacement for Django's runserver.
flask-debugtoolbar - A port of the django-debug-toolbar to flask.
pyelftools - Parsing and analyzing ELF files and DWARF debugging information.



Deep Learning
Frameworks for Neural Networks and Deep Learning. Also see awesome-deep-learning.

caffe - A fast open framework for deep learning..
keras - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.
mxnet - A deep learning framework designed for both efficiency and flexibility.
pytorch - Tensors and Dynamic neural networks in Python with strong GPU acceleration.
SerpentAI - Game agent framework. Use any video game as a deep learning sandbox.
tensorflow - The most popular Deep Learning framework created by Google.
Theano - A library for fast numerical computation.

DevOps Tools
Software and libraries for DevOps.

ansible - A radically simple IT automation platform.
cloudinit - A multi-distribution package that handles early initialization of a cloud instance.
cuisine - Chef-like functionality for Fabric.
docker-compose - Fast, isolated development environments using Docker.
fabric - A simple, Pythonic tool for remote execution and deployment.
fabtools - Tools for writing awesome Fabric files.
honcho - A Python clone of Foreman, for managing Procfile-based applications.
OpenStack - Open source software for building private and public clouds.
pexpect - Controlling interactive programs in a pseudo-terminal like GNU expect.
psutil - A cross-platform process and system utilities module.
saltstack - Infrastructure automation and management system.
supervisor - Supervisor process control system for UNIX.

Distributed Computing
Frameworks and libraries for Distributed Computing.

Batch Processing

PySpark - Apache Spark Python API.
dask - A flexible parallel computing library for analytic computing.
luigi - A module that helps you build complex pipelines of batch jobs.
mrjob - Run MapReduce jobs on Hadoop or Amazon Web Services.
Ray - A system for parallel and distributed Python that unifies the machine learning ecosystem.


Stream Processing

faust - A stream processing library, porting the ideas from Kafka Streams to Python.
streamparse - Run Python code against real-time streams of data via Apache Storm.



Distribution
Libraries to create packaged executables for release distribution.

dh-virtualenv - Build and distribute a virtualenv as a Debian package.
Nuitka - Compile scripts, modules, packages to an executable or extension module.
py2app - Freezes Python scripts (Mac OS X).
py2exe - Freezes Python scripts (Windows).
PyInstaller - Converts Python programs into stand-alone executables (cross-platform).
pynsist - A tool to build Windows installers, installers bundle Python itself.

Documentation
Libraries for generating project documentation.

sphinx - Python Documentation generator.

awesome-sphinxdoc


pdoc - Epydoc replacement to auto generate API documentation for Python libraries.
pycco - The literate-programming-style documentation generator.

Downloader
Libraries for downloading.

s3cmd - A command line tool for managing Amazon S3 and CloudFront.
s4cmd - Super S3 command line tool, good for higher performance.
you-get - A YouTube/Youku/Niconico video downloader written in Python 3.
youtube-dl - A small command-line program to download videos from YouTube.

E-commerce
Frameworks and libraries for e-commerce and payments.

alipay - Unofficial Alipay API for Python.
Cartridge - A shopping cart app built using the Mezzanine.
django-oscar - An open-source e-commerce framework for Django.
django-shop - A Django based shop system.
merchant - A Django app to accept payments from various payment processors.
money - Money class with optional CLDR-backed locale-aware formatting and an extensible currency exchange.
python-currencies - Display money format and its filthy currencies.
forex-python - Foreign exchange rates, Bitcoin price index and currency conversion.
saleor - An e-commerce storefront for Django.
shoop - An open source E-Commerce platform based on Django.

Editor Plugins and IDEs

Emacs

elpy - Emacs Python Development Environment.


Sublime Text

anaconda - Anaconda turns your Sublime Text 3 in a full featured Python development IDE.
SublimeJEDI - A Sublime Text plugin to the awesome auto-complete library Jedi.


Vim

jedi-vim - Vim bindings for the Jedi auto-completion library for Python.
python-mode - An all in one plugin for turning Vim into a Python IDE.
YouCompleteMe - Includes Jedi-based completion engine for Python.


Visual Studio

PTVS - Python Tools for Visual Studio.


Visual Studio Code

Python - The official VSCode extension with rich support for Python.


IDE

PyCharm - Commercial Python IDE by JetBrains. Has free community edition available.
spyder - Open Source Python IDE.



Email
Libraries for sending and parsing email.

envelopes - Mailing for human beings.
flanker - An email address and Mime parsing library.
imbox - Python IMAP for Humans.
inbox.py - Python SMTP Server for Humans.
lamson - Pythonic SMTP Application Server.
Marrow Mailer - High-performance extensible mail delivery framework.
modoboa - A mail hosting and management platform including a modern and simplified Web UI.
Nylas Sync Engine - Providing a RESTful API on top of a powerful email sync platform.
yagmail - Yet another Gmail/SMTP client.

Environment Management
Libraries for Python version and virtual environment management.

pyenv - Simple Python version management.
pipenv - Python Development Workflow for Humans.
poetry - Python dependency management and packaging made easy.
virtualenv - A tool to create isolated Python environments.

Files
Libraries for file manipulation and MIME type detection.

mimetypes - (Python standard library) Map filenames to MIME types.
path.py - A module wrapper for os.path.
pathlib - (Python standard library) An cross-platform, object-oriented path library.
PyFilesystem2 - Python's filesystem abstraction layer.
python-magic - A Python interface to the libmagic file type identification library.
Unipath - An object-oriented approach to file/directory operations.
watchdog - API and shell utilities to monitor file system events.

Foreign Function Interface
Libraries for providing foreign function interface.

cffi - Foreign Function Interface for Python calling C code.
ctypes - (Python standard library) Foreign Function Interface for Python calling C code.
PyCUDA - A Python wrapper for Nvidia's CUDA API.
SWIG - Simplified Wrapper and Interface Generator.

Forms
Libraries for working with forms.

Deform - Python HTML form generation library influenced by the formish form generation library.
django-bootstrap3 - Bootstrap 3 integration with Django.
django-bootstrap4 - Bootstrap 4 integration with Django.
django-crispy-forms - A Django app which lets you create beautiful forms in a very elegant and DRY way.
django-remote-forms - A platform independent Django form serializer.
WTForms - A flexible forms validation and rendering library.

Functional Programming
Functional Programming with Python.

Coconut - Coconut is a variant of Python built for simple, elegant, Pythonic functional programming.
CyToolz - Cython implementation of Toolz: High performance functional utilities.
fn.py - Functional programming in Python: implementation of missing features to enjoy FP.
funcy - A fancy and practical functional tools.
Toolz - A collection of functional utilities for iterators, functions, and dictionaries.

GUI Development
Libraries for working with graphical user interface applications.

curses - Built-in wrapper for ncurses used to create terminal GUI applications.
Eel - A library for making simple Electron-like offline HTML/JS GUI apps.
enaml - Creating beautiful user-interfaces with Declarative Syntax like QML.
Flexx - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.
Gooey - Turn command line programs into a full GUI application with one line.
kivy - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.
pyglet - A cross-platform windowing and multimedia library for Python.
PyGObject - Python Bindings for GLib/GObject/GIO/GTK+ (GTK+3).
PyQt - Python bindings for the Qt cross-platform application and UI framework.
PySimpleGUI - Wrapper for tkinter, Qt, WxPython and Remi.
pywebview - A lightweight cross-platform native wrapper around a webview component.
Tkinter - Tkinter is Python's de-facto standard GUI package.
Toga - A Python native, OS native GUI toolkit.
urwid - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.
wxPython - A blending of the wxWidgets C++ class library with the Python.

Game Development
Awesome game development libraries.

Cocos2d - cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications.
Harfang3D - Python framework for 3D, VR and game development.
Panda3D - 3D game engine developed by Disney.
Pygame - Pygame is a set of Python modules designed for writing games.
PyOgre - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.
PyOpenGL - Python ctypes bindings for OpenGL and it's related APIs.
PySDL2 - A ctypes based wrapper for the SDL2 library.
RenPy - A Visual Novel engine.

Geolocation
Libraries for geocoding addresses and working with latitudes and longitudes.

django-countries - A Django app that provides a country field for models and forms.
GeoDjango - A world-class geographic web framework.
GeoIP - Python API for MaxMind GeoIP Legacy Database.
geojson - Python bindings and utilities for GeoJSON.
geopy - Python Geocoding Toolbox.
pygeoip - Pure Python GeoIP API.

HTML Manipulation
Libraries for working with HTML and XML.

BeautifulSoup - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.
bleach - A whitelist-based HTML sanitization and text linkification library.
cssutils - A CSS library for Python.
html5lib - A standards-compliant library for parsing and serializing HTML documents and fragments.
lxml - A very fast, easy-to-use and versatile library for handling HTML and XML.
MarkupSafe - Implements a XML/HTML/XHTML Markup safe string for Python.
pyquery - A jQuery-like library for parsing HTML.
untangle - Converts XML documents to Python objects for easy access.
WeasyPrint - A visual rendering engine for HTML and CSS that can export to PDF.
xmldataset - Simple XML Parsing.
xmltodict - Working with XML feel like you are working with JSON.

HTTP Clients
Libraries for working with HTTP.

grequests - requests + gevent for asynchronous HTTP requests.
httplib2 - Comprehensive HTTP client library.
requests - HTTP Requests for Humans.
treq - Python requests like API built on top of Twisted's HTTP client.
urllib3 - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.

Hardware
Libraries for programming with hardware.

ino - Command line toolkit for working with Arduino.
keyboard - Hook and simulate global keyboard events on Windows and Linux.
mouse - Hook and simulate global mouse events on Windows and Linux.
Pingo - Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo, etc.
PyUserInput - A module for cross-platform control of the mouse and keyboard.
scapy - A brilliant packet manipulation library.
wifi - A Python library and command line tool for working with WiFi on Linux.

Image Processing
Libraries for manipulating images.

hmap - Image histogram remapping.
imgSeek - A project for searching a collection of images using visual similarity.
nude.py - Nudity detection.
pagan - Retro identicon (Avatar) generation based on input string and hash.
pillow - Pillow is the friendly PIL fork.
pyBarcode - Create barcodes in Python without needing PIL.
pygram - Instagram-like image filters.
python-qrcode - A pure Python QR Code generator.
Quads - Computer art based on quadtrees.
scikit-image - A Python library for (scientific) image processing.
thumbor - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.
wand - Python bindings for MagickWand, C API for ImageMagick.

Implementations
Implementations of Python.

CPython - Default, most widely used implementation of the Python programming language written in C.
Cython - Optimizing Static Compiler for Python.
CLPython - Implementation of the Python programming language written in Common Lisp.
Grumpy - More compiler than interpreter as more powerful CPython2.7 replacement (alpha).
IronPython - Implementation of the Python programming language written in C#.
Jython - Implementation of Python programming language written in Java for the JVM.
MicroPython - A lean and efficient Python programming language implementation.
Numba - Python JIT compiler to LLVM aimed at scientific Python.
PeachPy - x86-64 assembler embedded in Python.
Pyjion - A JIT for Python based upon CoreCLR.
PyPy - A very fast and compliant implementation of the Python language.
Pyston - A Python implementation using JIT techniques.
Stackless Python - An enhanced version of the Python programming language.

Interactive Interpreter
Interactive Python interpreters (REPL).

bpython - A fancy interface to the Python interpreter.
Jupyter Notebook (IPython) - A rich toolkit to help you make the most out of using Python interactively.

awesome-jupyter


ptpython - Advanced Python REPL built on top of the python-prompt-toolkit.

Internationalization
Libraries for working with i18n.

Babel - An internationalization library for Python.
PyICU - A wrapper of International Components for Unicode C++ library (ICU).

Job Scheduler
Libraries for scheduling jobs.

APScheduler - A light but powerful in-process task scheduler that lets you schedule functions.
django-schedule - A calendaring app for Django.
doit - A task runner and build tool.
gunnery - Multipurpose task execution tool for distributed systems with web-based interface.
Joblib - A set of tools to provide lightweight pipelining in Python.
Plan - Writing crontab file in Python like a charm.
schedule - Python job scheduling for humans.
Spiff - A powerful workflow engine implemented in pure Python.
TaskFlow - A Python library that helps to make task execution easy, consistent and reliable.
Airflow - Airflow is a platform to programmatically author, schedule and monitor workflows.

Logging
Libraries for generating and working with logs.

Eliot - Logging for complex & distributed systems.
logbook - Logging replacement for Python.
logging - (Python standard library) Logging facility for Python.
raven - Python client for Sentry, a log/error tracking, crash reporting and aggregation platform for web applications.

Machine Learning
Libraries for Machine Learning. Also see awesome-machine-learning.

H2O - Open Source Fast Scalable Machine Learning Platform.
Metrics - Machine learning evaluation metrics.
NuPIC - Numenta Platform for Intelligent Computing.
scikit-learn - The most popular Python library for Machine Learning.
Spark ML - Apache Spark's scalable Machine Learning library.
vowpal_porpoise - A lightweight Python wrapper for Vowpal Wabbit.
xgboost - A scalable, portable, and distributed gradient boosting library.

Microsoft Windows
Python programming on Microsoft Windows.

Python(x,y) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.
pythonlibs - Unofficial Windows binaries for Python extension packages.
PythonNet - Python Integration with the .NET Common Language Runtime (CLR).
PyWin32 - Python Extensions for Windows.
WinPython - Portable development environment for Windows 7/8.

Miscellaneous
Useful libraries or tools that don't fit in the categories above.

blinker - A fast Python in-process signal/event dispatching system.
boltons - A set of pure-Python utilities.
itsdangerous - Various helpers to pass trusted data to untrusted environments.
pluginbase - A simple but flexible plugin system for Python.
tryton - A general purpose business framework.

Natural Language Processing
Libraries for working with human languages.

General

gensim - Topic Modeling for Humans.
langid.py - Stand-alone language identification system.
nltk - A leading platform for building Python programs to work with human language data.
pattern - A web mining module for the Python.
polyglot - Natural language pipeline supporting hundreds of languages.
pytext - A natural language modeling framework based on PyTorch.
PyTorch-NLP - A toolkit enabling rapid deep learning NLP prototyping for research.
spacy - A library for industrial-strength natural language processing in Python and Cython.
stanfordnlp - The Stanford NLP Group's official Python library, supporting 50+ languages.


Chinese

jieba - The most popular Chinese text segmentation library.
pkuseg-python - A toolkit for Chinese word segmentation in various domains.
snownlp - A library for processing Chinese text.
funNLP - A collection of tools and datasets for Chinese NLP.



Network Virtualization
Tools and libraries for Virtual Networking and SDN (Software Defined Networking).

mininet - A popular network emulator and API written in Python.
napalm - Cross-vendor API to manipulate network devices.
pox - A Python-based SDN control applications, such as OpenFlow SDN controllers.

News Feed
Libraries for building user's activities.

django-activity-stream - Generating generic activity streams from the actions on your site.
Stream Framework - Building news feed and notification systems using Cassandra and Redis.

ORM
Libraries that implement Object-Relational Mapping or data mapping techniques.

Relational Databases

Django Models - The Django ORM.
SQLAlchemy - The Python SQL Toolkit and Object Relational Mapper.

awesome-sqlalchemy


dataset - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.
orator -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.
orm - An async ORM.
peewee - A small, expressive ORM.
pony - ORM that provides a generator-oriented interface to SQL.
pydal - A pure Python Database Abstraction Layer.


NoSQL Databases

hot-redis - Rich Python data types for Redis.
mongoengine - A Python Object-Document-Mapper for working with MongoDB.
PynamoDB - A Pythonic interface for Amazon DynamoDB.
redisco - A Python Library for Simple Models and Containers Persisted in Redis.



Package Management
Libraries for package and dependency management.

pip - The Python package and dependency manager.

PyPI
pip-tools - A set of tools to keep your pinned Python dependencies fresh.


conda - Cross-platform, Python-agnostic binary package manager.

Package Repositories
Local PyPI repository server and proxies.

warehouse - Next generation Python Package Repository (PyPI).
bandersnatch - PyPI mirroring tool provided by Python Packaging Authority (PyPA).
devpi - PyPI server and packaging/testing/release tool.
localshop - Local PyPI server (custom packages and auto-mirroring of pypi).

Permissions
Libraries that allow or deny users access to data or functionality.

django-guardian - Implementation of per object permissions for Django 1.2+
django-rules - A tiny but powerful app providing object-level permissions to Django, without requiring a database.

Processes
Libraries for starting and communicating with OS processes.

delegator.py - Subprocesses for Humans 2.0.
sarge - Yet another wrapper for subprocess.
sh - A full-fledged subprocess replacement for Python.

Recommender Systems
Libraries for building recommender systems.

annoy - Approximate Nearest Neighbors in C++/Python optimized for memory usage.
fastFM - A library for Factorization Machines.
implicit - A fast Python implementation of collaborative filtering for implicit datasets.
libffm - A library for Field-aware Factorization Machine (FFM).
lightfm - A Python implementation of a number of popular recommendation algorithms.
spotlight - Deep recommender models using PyTorch.
Surprise - A scikit for building and analyzing recommender systems.
tensorrec - A Recommendation Engine Framework in TensorFlow.

RESTful API
Libraries for building RESTful APIs.

Django

django-rest-framework - A powerful and flexible toolkit to build web APIs.
django-tastypie - Creating delicious APIs for Django apps.


Flask

eve - REST API framework powered by Flask, MongoDB and good intentions.
flask-api - Browsable Web APIs for Flask.
flask-restful - Quickly building REST APIs for Flask.


Pyramid

cornice - A RESTful framework for Pyramid.


Framework agnostic

apistar - A smart Web API framework, designed for Python 3.
falcon - A high-performance framework for building cloud APIs and web app backends.
fastapi - A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.
hug - A Python 3 framework for cleanly exposing APIs.
sandman2 - Automated REST APIs for existing database-driven systems.
sanic - A Python 3.6+ web server and web framework that's written to go fast.
vibora - Fast, efficient and asynchronous Web framework inspired by Flask.



Robotics
Libraries for robotics.

PythonRobotics - This is a compilation of various robotics algorithms with visualizations.
rospy - This is a library for ROS (Robot Operating System).

RPC Servers
RPC-compatible servers.

zeroRPC - zerorpc is a flexible RPC implementation based on ZeroMQ and MessagePack.

Science
Libraries for scientific computing. Also see Python-for-Scientists

astropy - A community Python library for Astronomy.
bcbio-nextgen - Providing best-practice pipelines for fully automated high throughput sequencing analysis.
bccb - Collection of useful code related to biological analysis.
Biopython - Biopython is a set of freely available tools for biological computation.
cclib - A library for parsing and interpreting the results of computational chemistry packages.
Colour - Implementing a comprehensive number of colour theory transformations and algorithms.
NetworkX - A high-productivity software for complex networks.
NIPY - A collection of neuroimaging toolkits.
NumPy - A fundamental package for scientific computing with Python.
Open Babel - A chemical toolbox designed to speak the many languages of chemical data.
ObsPy - A Python toolbox for seismology.
PyDy - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.
PyMC - Markov Chain Monte Carlo sampling toolkit.
QuTiP - Quantum Toolbox in Python.
RDKit - Cheminformatics and Machine Learning Software.
SciPy - A Python-based ecosystem of open-source software for mathematics, science, and engineering.
statsmodels - Statistical modeling and econometrics in Python.
SymPy - A Python library for symbolic mathematics.
Zipline - A Pythonic algorithmic trading library.
SimPy -  A process-based discrete-event simulation framework.

Search
Libraries and software for indexing and performing search queries on data.

elasticsearch-py - The official low-level Python client for Elasticsearch.
elasticsearch-dsl-py - The official high-level Python client for Elasticsearch.
django-haystack - Modular search for Django.
pysolr - A lightweight Python wrapper for Apache Solr.
whoosh - A fast, pure Python search engine library.

Serialization
Libraries for serializing complex data types

marshmallow - A lightweight library for converting complex objects to and from simple Python datatypes.
pysimdjson - A Python bindings for simdjson.
python-rapidjson - A Python wrapper around RapidJSON.
ultrajson - A fast JSON decoder and encoder written in C with Python bindings.

Serverless Frameworks
Frameworks for developing serverless Python code.

python-lambda - A toolkit for developing and deploying Python code in AWS Lambda.
Zappa - A tool for deploying WSGI applications on AWS Lambda and API Gateway.

Specific Formats Processing
Libraries for parsing and manipulating specific text formats.

General

tablib - A module for Tabular Datasets in XLS, CSV, JSON, YAML.


Office

openpyxl - A library for reading and writing Excel 2010 xlsx/xlsm/xltx/xltm files.
pyexcel - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.
python-docx - Reads, queries and modifies Microsoft Word 2007/2008 docx files.
python-pptx - Python library for creating and updating PowerPoint (.pptx) files.
unoconv - Convert between any document format supported by LibreOffice/OpenOffice.
XlsxWriter - A Python module for creating Excel .xlsx files.
xlwings - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.
xlwt / xlrd - Writing and reading data and formatting information from Excel files.


PDF

PDFMiner - A tool for extracting information from PDF documents.
PyPDF2 - A library capable of splitting, merging and transforming PDF pages.
ReportLab - Allowing Rapid creation of rich PDF documents.


Markdown

Mistune - Fastest and full featured pure Python parsers of Markdown.
Python-Markdown - A Python implementation of John Gruber‚Äôs Markdown.


YAML

PyYAML - YAML implementations for Python.


CSV

csvkit - Utilities for converting to and working with CSV.


Archive

unp - A command line tool that can unpack archives easily.



Static Site Generator
Static site generator is a software that takes some text + templates as input and produces HTML files on the output.

mkdocs - Markdown friendly documentation generator.
pelican - Static site generator that supports Markdown and reST syntax.
lektor - An easy to use static CMS and blog engine.
nikola - A static website and blog generator.

Tagging
Libraries for tagging items.

django-taggit - Simple tagging for Django.

Task Queues
Libraries for working with task queues.

celery - An asynchronous task queue/job queue based on distributed message passing.
huey - Little multi-threaded task queue.
mrq - A distributed worker task queue in Python using Redis & gevent.
rq - Simple job queues for Python.

Template Engine
Libraries and tools for templating and lexing.

Jinja2 - A modern and designer friendly templating language.
Genshi - Python templating toolkit for generation of web-aware output.
Mako - Hyperfast and lightweight templating for the Python platform.

Testing
Libraries for testing codebases and generating test data.

Testing Frameworks

pytest - A mature full-featured Python testing tool.
hypothesis - Hypothesis is an advanced Quickcheck style property based testing library.
nose2 - The successor to nose, based on `unittest2.
Robot Framework - A generic test automation framework.
unittest - (Python standard library) Unit testing framework.


Test Runners

green - A clean, colorful test runner.
mamba - The definitive testing tool for Python. Born under the banner of BDD.
tox - Auto builds and tests distributions in multiple Python versions


GUI / Web Testing

locust - Scalable user load testing tool written in Python.
PyAutoGUI - PyAutoGUI is a cross-platform GUI automation Python module for human beings.
Selenium - Python bindings for Selenium WebDriver.
sixpack - A language-agnostic A/B Testing framework.
splinter - Open source tool for testing web applications.


Mock

mock - (Python standard library) A mocking and patching library.
doublex - Powerful test doubles framework for Python.
freezegun - Travel through time by mocking the datetime module.
httmock - A mocking library for requests for Python 2.6+ and 3.2+.
httpretty - HTTP request mock tool for Python.
mocket - A socket mock framework with gevent/asyncio/SSL support.
responses - A utility library for mocking out the requests Python library.
VCR.py - Record and replay HTTP interactions on your tests.


Object Factories

factory_boy - A test fixtures replacement for Python.
mixer - Another fixtures replacement. Supported Django, Flask, SQLAlchemy, Peewee and etc.
model_mommy - Creating random fixtures for testing in Django.


Code Coverage

coverage - Code coverage measurement.


Fake Data

mimesis - is a Python library that help you generate fake data.
fake2db - Fake database generator.
faker - A Python package that generates fake data.
radar - Generate random datetime / time.



Text Processing
Libraries for parsing and manipulating plain texts.

General

chardet - Python 2/3 compatible character encoding detector.
difflib - (Python standard library) Helpers for computing deltas.
ftfy - Makes Unicode text less broken and more consistent automagically.
fuzzywuzzy - Fuzzy String Matching.
Levenshtein - Fast computation of Levenshtein distance and string similarity.
pangu.py - Paranoid text spacing.
pyfiglet - An implementation of figlet written in Python.
pypinyin - Convert Chinese hanzi (Êº¢Â≠ó) to pinyin (ÊãºÈü≥).
textdistance - Compute distance between sequences with 30+ algorithms.
unidecode - ASCII transliterations of Unicode text.


Slugify

awesome-slugify - A Python slugify library that can preserve unicode.
python-slugify - A Python slugify library that translates unicode to ASCII.
unicode-slugify - A slugifier that generates unicode slugs with Django as a dependency.


Unique identifiers

hashids - Implementation of hashids in Python.
shortuuid - A generator library for concise, unambiguous and URL-safe UUIDs.


Parser

ply - Implementation of lex and yacc parsing tools for Python.
pygments - A generic syntax highlighter.
pyparsing - A general purpose framework for generating parsers.
python-nameparser - Parsing human names into their individual components.
python-phonenumbers - Parsing, formatting, storing and validating international phone numbers.
python-user-agents - Browser user agent parser.
sqlparse - A non-validating SQL parser.



Third-party APIs
Libraries for accessing third party services APIs. Also see List of Python API Wrappers and Libraries.

apache-libcloud - One Python library for all clouds.
boto3 - Python interface to Amazon Web Services.
django-wordpress - WordPress models and views for Django.
facebook-sdk - Facebook Platform Python SDK.
google-api-python-client - Google APIs Client Library for Python.
gspread - Google Spreadsheets Python API.
twython - A Python wrapper for the Twitter API.

URL Manipulation
Libraries for parsing URLs.

furl - A small Python library that makes parsing and manipulating URLs easy.
purl - A simple, immutable URL class with a clean API for interrogation and manipulation.
pyshorteners - A pure Python URL shortening lib.
webargs - A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.

Video
Libraries for manipulating video and GIFs.

moviepy - A module for script-based movie editing with many formats, including animated GIFs.
scikit-video - Video processing routines for SciPy.

Web Asset Management
Tools for managing, compressing and minifying website assets.

django-compressor - Compresses linked and inline JavaScript or CSS into a single cached file.
django-pipeline - An asset packaging library for Django.
django-storages - A collection of custom storage back ends for Django.
fanstatic - Packages, optimizes, and serves static file dependencies as Python packages.
fileconveyor - A daemon to detect and sync files to CDNs, S3 and FTP.
flask-assets - Helps you integrate webassets into your Flask app.
webassets - Bundles, optimizes, and manages unique cache-busting URLs for static resources.

Web Content Extracting
Libraries for extracting web contents.

html2text - Convert HTML to Markdown-formatted text.
lassie - Web Content Retrieval for Humans.
micawber - A small library for extracting rich content from URLs.
newspaper - News extraction, article extraction and content curation in Python.
python-readability - Fast Python port of arc90's readability tool.
requests-html - Pythonic HTML Parsing for Humans.
sumy - A module for automatic summarization of text documents and HTML pages.
textract - Extract text from any document, Word, PowerPoint, PDFs, etc.
toapi - Every web site provides APIs.

Web Crawling
Libraries to automate web scraping.

cola - A distributed crawling framework.
feedparser - Universal feed parser.
grab - Site scraping framework.
MechanicalSoup - A Python library for automating interaction with websites.
pyspider - A powerful spider system.
robobrowser - A simple, Pythonic library for browsing the web without a standalone web browser.
scrapy - A fast high-level screen scraping and web crawling framework.
portia - Visual scraping for Scrapy.

Web Frameworks
Traditional full stack web frameworks. Also see RESTful API

Synchronous

Django - The most popular web framework in Python.

awesome-django


Flask - A microframework for Python.

awesome-flask


Pyramid - A small, fast, down-to-earth, open source Python web framework.

awesome-pyramid


Masonite - The modern and developer centric Python web framework.


Asynchronous

Tornado - A web framework and asynchronous networking library.



WebSocket
Libraries for working with WebSocket.

autobahn-python - WebSocket & WAMP for Python on Twisted and asyncio.
channels - Developer-friendly asynchrony for Django.
websockets - A library for building WebSocket servers and clients with a focus on correctness and simplicity.

WSGI Servers
WSGI-compatible web servers.

bjoern - Asynchronous, very fast and written in C.
gunicorn - Pre-forked, partly written in C.
uWSGI - A project aims at developing a full stack for building hosting services, written in C.
waitress - Multi-threaded, powers Pyramid.
werkzeug - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.

Resources
Where to discover new Python libraries.
Podcasts

From Python Import Podcast
Podcast.init
Python Bytes
Python Testing
Radio Free Python
Talk Python To Me
Test and Code

Twitter

@codetengu
@getpy
@importpython
@planetpython
@pycoders
@pypi
@pythontrending
@PythonWeekly
@TalkPython
@realpython

Websites

/r/CoolGithubProjects
/r/Python
Awesome Python @LibHunt
Django Packages
Full Stack Python
Python Cheatsheet
Python ZEEF
Python ÂºÄÂèëÁ§æÂå∫
Real Python
Trending Python repositories on GitHub today
–°–æ–æ–±—â–µ—Å—Ç–≤–æ Python –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤

Weekly

CodeTengu Weekly Á¢ºÂ§©ÁãóÈÄ±Âàä
Import Python Newsletter
Pycoder's Weekly
Python Weekly
Python Tricks

Contributing
Your contributions are always welcome! Please take a look at the contribution guidelines first.
I will keep some pull requests open if I'm not sure whether those libraries are awesome, you could vote for them by adding üëç to them. Pull requests will be merged when their votes reach 20.

If you have any question about this opinionated list, do not hesitate to contact me @vinta on Twitter or open an issue on GitHub.
",awesome python curated list awesome python frameworks libraries software resources inspired awesomephp awesome python admin panels algorithms design patterns asynchronous programming audio authentication build tools builtin classes enhancement caching chatops tools cms code analysis commandline interface development commandline tools compatibility computer vision concurrency parallelism configuration cryptography data analysis data validation data visualization database drivers database date time debugging tools deep learning devops tools distributed computing distribution documentation downloader ecommerce editor plugins ides email environment management files foreign function interface forms functional programming game development geolocation gui development hardware html manipulation http clients image processing implementations interactive interpreter internationalization job scheduler logging machine learning miscellaneous natural language processing network virtualization news feed orm package management package repositories permissions processes recommender systems restful api robotics rpc servers science search serialization serverless frameworks specific formats processing static site generator tagging task queues template engine testing text processing thirdparty apis url manipulation video web asset management web content extracting web crawling web frameworks websocket wsgi servers resources podcasts twitter websites weekly contributing admin panels libraries administrative interfaces ajenti admin panel servers deserve djangograppelli jazzy skin django admininterface djangojet modern responsive template django admin interface improved functionality djangosuit alternative django admininterface free noncommercial use djangoxadmin dropin replacement django admin comes lots goodies jetbridge admin panel framework application nice ui ex jet django flaskadmin simple extensible administrative interface framework flask flower realtime monitor web admin celery wooey django app creates automatic web uis python scripts algorithms design patterns python implementation algorithms design patterns algorithms minimal examples data structures algorithms python pypattyrn simple yet effective library implementing common design patterns pythonpatterns collection design patterns python sortedcontainers fast purepython implementation sortedlist sorteddict sortedset types asynchronous programming asyncio python standard library asynchronous io event loop coroutines tasks awesomeasyncio uvloop ultra fast asyncio event loop twisted eventdriven networking engine audio libraries manipulating audio metadata audio audioread crosslibrary gstreamer core audio mad ffmpeg audio decoding dejavu audio fingerprinting recognition mingus advanced music theory notation package midi file playback support pyaudioanalysis audio feature extraction classification segmentation applications pydub manipulate audio simple easy high level interface timeside open web audio processing framework metadata beets music library manager musicbrainz tagger eyed tool working audio files specifically mp files containing id metadata mutagen python module handle audio metadata tinytag library reading music meta data mp ogg flac wave files authentication libraries implementing authentications schemes oauth authlib javascript object signing encryption draft implementation djangoallauth authentication app django works djangooauthtoolkit oauth goodies django oauthlib generic thorough implementation oauth requestsigning logic pythonoauth fully tested abstract interface creating oauth clients servers pythonsocialauth easytosetup social authentication mechanism jwt pyjwt json web token implementation python pythonjose jose implementation python pythonjwt module generating verifying json web tokens build tools compile software source code bitbake makelike build tool embedded linux buildout build system creating assembling deploying applications multiple parts platformio console tool build code different development platforms pybuilder continuous build tool written pure python scons software construction tool builtin classes enhancement libraries enhancing python builtin classes dataclasses python standard library data classes attrs replacement init eq repr etc boilerplate class definitions bidict efficient pythonic bidirectional map data structures related functionality box python dictionaries advanced dot notation access dotteddict library provides method accessing lists dicts dotted path notation cms content management systems wagtail django content management system djangocms open source enterprise cms based django feincms one advanced content management systems built django kotti highlevel pythonic web application framework built pyramid mezzanine powerful consistent flexible content management platform plone cms built top open source application server zope quokka flexible extensible small cms powered flask mongodb caching libraries caching data beaker wsgi middleware sessions caching djangocachemachine automatic caching invalidation django models djangocacheops slick orm cache automatic granular eventdriven invalidation dogpilecache dogpilecache next generation replacement beaker made authors hermescache python caching library tagbased invalidation dogpile effect prevention pylibmc python wrapper around libmemcached interface pythondiskcache sqlite file backed cache backend faster lookups memcached redis chatops tools libraries chatbot development errbot easiest popular chatbot implement chatops code analysis tools static analysis linters code quality checkers also see awesomestaticanalysis code analysis coala language independent easily extendable code analysis application codeflow turn python javascript code dot flowcharts prospector tool analyse python code pycallgraph library visualises flow call graph python application code linters flake wrapper around pycodestyle pyflakes mccabe awesomeflakeextensions pylint fully customizable source code analyzer pylama code audit tool python javascript wemakepythonstyleguide strictest opinionated python linter ever code formatters black uncompromising python code formatter yapf yet another python code formatter google static type checkers also see awesomepythontyping mypy check variable types compile time pyrecheck performant type checking static type annotations generators monkeytype system python generates static type annotations collecting runtime types commandline interface development libraries building commandline applications commandline application development cement cli application framework python click package creating beautiful command line interfaces composable way cliff framework creating commandline programs multilevel commands clint python commandline application tools docopt pythonic command line arguments parser pythonfire library creating command line interfaces absolutely python object pythonprompttoolkit library building powerful interactive command lines terminal rendering asciimatics package create fullscreen text uis interactive forms ascii animations bashplotlib making basic plots terminal colorama crossplatform colored terminal text tqdm fast extensible progress bar loops cli commandline tools useful clibased tools productivity productivity tools cookiecutter commandline utility creates projects cookiecutters project templates doitlive tool live presentations terminal howdoi instant coding answers via command line pathpicker select files bash output percol adds flavor interactive selection traditional pipe concept unix thefuck correcting previous console command tmuxp tmux session manager try dead simple cli try python packages never easier cli enhancements httpie command line http client userfriendly curl replacement kubeshell integrated shell working kubernetes cli mycli terminal client mysql autocompletion syntax highlighting pgcli postgres cli autocompletion syntax highlighting saws supercharged awscli compatibility libraries migrating python pythonfuture missing compatibility layer python python pythonmodernize modernizes python code eventual python migration six python compatibility utilities computer vision libraries computer vision opencv open source computer vision library pytesseract another wrapper google tesseract ocr simplecv open source framework building computer vision applications concurrency parallelism libraries concurrent parallel execution also see awesomeasyncio concurrentfutures python standard library highlevel interface asynchronously executing callables multiprocessing python standard library processbased parallelism eventlet asynchronous framework wsgi support gevent coroutinebased python networking library uses greenlet uvloop ultra fast implementation asyncio event loop top libuv scoop scalable concurrent operations python configuration libraries storing parsing configuration options configobj ini file parser validation configparser python standard library ini file parser profig config multiple formats value conversion pythondecouple strict separation settings code cryptography cryptography package designed expose cryptographic primitives recipes python developers paramiko leading native python sshv protocol library passlib secure password storagehashing library high level pynacl python binding networking cryptography nacl library data analysis libraries data analyzing blaze numpy pandas interface big data open mining business intelligence bi pandas interface orange data mining data visualization analysis machine learning visual programming scripts pandas library providing highperformance easytouse data structures data analysis tools optimus agile data science workflows made easy pyspark data validation libraries validating data used forms many cases cerberus lightweight extensible data validation library colander validating deserializing data obtained via xml json html form post jsonschema implementation json schema python schema library validating python data structures schematics data structure validation valideer lightweight extensible data validation adaptation library voluptuous python data validation library data visualization libraries visualizing data also see awesomejavascript altair declarative statistical visualization library python bokeh interactive web plotting python bqplot interactive plotting library jupyter notebook dash built top flask react plotly aimed analytical web applications awesomedash plotnine grammar graphics python based ggplot matplotlib python plotting library pygal python svg charts creator pygraphviz python interface graphviz pyqtgraph interactive realtime ddimage plotting scienceengineering widgets seaborn statistical data visualization using matplotlib vispy highperformance scientific visualization based opengl database databases implemented python pickledb simple lightweight keyvalue store python tinydb tiny documentoriented database zodb native object database python keyvalue object graph database database drivers libraries connecting operating databases mysql awesomemysql mysqlclient mysql connector python support mysqlpython fork pymysql pure python mysql driver compatible mysqlpython postgresql awesomepostgres psycopg popular postgresql adapter python queries wrapper psycopg library interacting postgresql relational databases pymssql simple database interface microsoft sql server supersqlite supercharged sqlite library built top apsw nosql databases cassandradriver python driver apache cassandra happybase developerfriendly library apache hbase kafkapython python client apache kafka pyneo client library toolkit working neoj pymongo official python client mongodb redispy python client redis asynchronous clients motor async python driver mongodb date time libraries working dates times chronyk python library parsing humanwritten times dates dateutil extensions standard python datetime module delorean library clearing inconvenient truths arise dealing datetimes moment python library dealing datestimes inspired momentjs pendulum python datetimes made easy pytime easytouse python module aims operate datetimedatetime string pytz world timezone definitions modern historical brings tz database python whenpy providing userfriendly functions help perform common date time actions maya datetimes humans debugging tools libraries debugging code pdblike debugger ipdb ipythonenabled pdb pdb another dropin replacement pdb pudb fullscreen consolebased python debugger wdb improbable web debugger websockets tracing lptrace strace python programs manhole debugging unix socket connections present stacktraces threads interactive prompt pyringe debugger capable attaching injecting code python processes pythonhunter flexible code tracing toolkit profiler lineprofiler linebyline profiling memoryprofiler monitor memory usage python code profiling interactive python profiler pyspy sampling profiler python programs written rust pyflame ptracing profiler python vprof visual python profiler others icecream inspect variables expressions program execution single simple function call djangodebugtoolbar display various debug information django djangodevserver dropin replacement djangos runserver flaskdebugtoolbar port djangodebugtoolbar flask pyelftools parsing analyzing elf files dwarf debugging information deep learning frameworks neural networks deep learning also see awesomedeeplearning caffe fast open framework deep learning keras highlevel neural networks library capable running top either tensorflow theano mxnet deep learning framework designed efficiency flexibility pytorch tensors dynamic neural networks python strong gpu acceleration serpentai game agent framework use video game deep learning sandbox tensorflow popular deep learning framework created google theano library fast numerical computation devops tools software libraries devops ansible radically simple automation platform cloudinit multidistribution package handles early initialization cloud instance cuisine cheflike functionality fabric dockercompose fast isolated development environments using docker fabric simple pythonic tool remote execution deployment fabtools tools writing awesome fabric files honcho python clone foreman managing procfilebased applications openstack open source software building private public clouds pexpect controlling interactive programs pseudoterminal like gnu expect psutil crossplatform process system utilities module saltstack infrastructure automation management system supervisor supervisor process control system unix distributed computing frameworks libraries distributed computing batch processing pyspark apache spark python api dask flexible parallel computing library analytic computing luigi module helps build complex pipelines batch jobs mrjob run mapreduce jobs hadoop amazon web services ray system parallel distributed python unifies machine learning ecosystem stream processing faust stream processing library porting ideas kafka streams python streamparse run python code realtime streams data via apache storm distribution libraries create packaged executables release distribution dhvirtualenv build distribute virtualenv debian package nuitka compile scripts modules packages executable extension module pyapp freezes python scripts mac os x pyexe freezes python scripts windows pyinstaller converts python programs standalone executables crossplatform pynsist tool build windows installers installers bundle python documentation libraries generating project documentation sphinx python documentation generator awesomesphinxdoc pdoc epydoc replacement auto generate api documentation python libraries pycco literateprogrammingstyle documentation generator downloader libraries downloading scmd command line tool managing amazon cloudfront scmd super command line tool good higher performance youget youtubeyoukuniconico video downloader written python youtubedl small commandline program download videos youtube ecommerce frameworks libraries ecommerce payments alipay unofficial alipay api python cartridge shopping cart app built using mezzanine djangooscar opensource ecommerce framework django djangoshop django based shop system merchant django app accept payments various payment processors money money class optional cldrbacked localeaware formatting extensible currency exchange pythoncurrencies display money format filthy currencies forexpython foreign exchange rates bitcoin price index currency conversion saleor ecommerce storefront django shoop open source ecommerce platform based django editor plugins ides emacs elpy emacs python development environment sublime text anaconda anaconda turns sublime text full featured python development ide sublimejedi sublime text plugin awesome autocomplete library jedi vim jedivim vim bindings jedi autocompletion library python pythonmode one plugin turning vim python ide youcompleteme includes jedibased completion engine python visual studio ptvs python tools visual studio visual studio code python official vscode extension rich support python ide pycharm commercial python ide jetbrains free community edition available spyder open source python ide email libraries sending parsing email envelopes mailing human beings flanker email address mime parsing library imbox python imap humans inboxpy python smtp server humans lamson pythonic smtp application server marrow mailer highperformance extensible mail delivery framework modoboa mail hosting management platform including modern simplified web ui nylas sync engine providing restful api top powerful email sync platform yagmail yet another gmailsmtp client environment management libraries python version virtual environment management pyenv simple python version management pipenv python development workflow humans poetry python dependency management packaging made easy virtualenv tool create isolated python environments files libraries file manipulation mime type detection mimetypes python standard library map filenames mime types pathpy module wrapper ospath pathlib python standard library crossplatform objectoriented path library pyfilesystem pythons filesystem abstraction layer pythonmagic python interface libmagic file type identification library unipath objectoriented approach filedirectory operations watchdog api shell utilities monitor file system events foreign function interface libraries providing foreign function interface cffi foreign function interface python calling c code ctypes python standard library foreign function interface python calling c code pycuda python wrapper nvidias cuda api swig simplified wrapper interface generator forms libraries working forms deform python html form generation library influenced formish form generation library djangobootstrap bootstrap integration django djangobootstrap bootstrap integration django djangocrispyforms django app lets create beautiful forms elegant dry way djangoremoteforms platform independent django form serializer wtforms flexible forms validation rendering library functional programming functional programming python coconut coconut variant python built simple elegant pythonic functional programming cytoolz cython implementation toolz high performance functional utilities fnpy functional programming python implementation missing features enjoy fp funcy fancy practical functional tools toolz collection functional utilities iterators functions dictionaries gui development libraries working graphical user interface applications curses builtin wrapper ncurses used create terminal gui applications eel library making simple electronlike offline htmljs gui apps enaml creating beautiful userinterfaces declarative syntax like qml flexx flexx pure python toolkit creating guis uses web technology rendering gooey turn command line programs full gui application one line kivy library creating nui applications running windows linux mac os x android ios pyglet crossplatform windowing multimedia library python pygobject python bindings glibgobjectgiogtk gtk pyqt python bindings qt crossplatform application ui framework pysimplegui wrapper tkinter qt wxpython remi pywebview lightweight crossplatform native wrapper around webview component tkinter tkinter pythons defacto standard gui package toga python native os native gui toolkit urwid library creating terminal gui applications strong support widgets events rich colors etc wxpython blending wxwidgets c class library python game development awesome game development libraries cocosd cocosd framework building games demos graphicalinteractive applications harfangd python framework vr game development pandad game engine developed disney pygame pygame set python modules designed writing games pyogre python bindings ogre render engine used games simulations anything pyopengl python ctypes bindings opengl related apis pysdl ctypes based wrapper sdl library renpy visual novel engine geolocation libraries geocoding addresses working latitudes longitudes djangocountries django app provides country field models forms geodjango worldclass geographic web framework geoip python api maxmind geoip legacy database geojson python bindings utilities geojson geopy python geocoding toolbox pygeoip pure python geoip api html manipulation libraries working html xml beautifulsoup providing pythonic idioms iterating searching modifying html xml bleach whitelistbased html sanitization text linkification library cssutils css library python htmllib standardscompliant library parsing serializing html documents fragments lxml fast easytouse versatile library handling html xml markupsafe implements xmlhtmlxhtml markup safe string python pyquery jquerylike library parsing html untangle converts xml documents python objects easy access weasyprint visual rendering engine html css export pdf xmldataset simple xml parsing xmltodict working xml feel like working json http clients libraries working http grequests requests gevent asynchronous http requests httplib comprehensive http client library requests http requests humans treq python requests like api built top twisteds http client urllib http library threadsafe connection pooling file post support sanity friendly hardware libraries programming hardware ino command line toolkit working arduino keyboard hook simulate global keyboard events windows linux mouse hook simulate global mouse events windows linux pingo pingo provides uniform api program devices like raspberry pi pcduino intel galileo etc pyuserinput module crossplatform control mouse keyboard scapy brilliant packet manipulation library wifi python library command line tool working wifi linux image processing libraries manipulating images hmap image histogram remapping imgseek project searching collection images using visual similarity nudepy nudity detection pagan retro identicon avatar generation based input string hash pillow pillow friendly pil fork pybarcode create barcodes python without needing pil pygram instagramlike image filters pythonqrcode pure python qr code generator quads computer art based quadtrees scikitimage python library scientific image processing thumbor smart imaging service enables ondemand crop resizing flipping images wand python bindings magickwand c api imagemagick implementations implementations python cpython default widely used implementation python programming language written c cython optimizing static compiler python clpython implementation python programming language written common lisp grumpy compiler interpreter powerful cpython replacement alpha ironpython implementation python programming language written c jython implementation python programming language written java jvm micropython lean efficient python programming language implementation numba python jit compiler llvm aimed scientific python peachpy x assembler embedded python pyjion jit python based upon coreclr pypy fast compliant implementation python language pyston python implementation using jit techniques stackless python enhanced version python programming language interactive interpreter interactive python interpreters repl bpython fancy interface python interpreter jupyter notebook ipython rich toolkit help make using python interactively awesomejupyter ptpython advanced python repl built top pythonprompttoolkit internationalization libraries working babel internationalization library python pyicu wrapper international components unicode c library icu job scheduler libraries scheduling jobs apscheduler light powerful inprocess task scheduler lets schedule functions djangoschedule calendaring app django doit task runner build tool gunnery multipurpose task execution tool distributed systems webbased interface joblib set tools provide lightweight pipelining python plan writing crontab file python like charm schedule python job scheduling humans spiff powerful workflow engine implemented pure python taskflow python library helps make task execution easy consistent reliable airflow airflow platform programmatically author schedule monitor workflows logging libraries generating working logs eliot logging complex distributed systems logbook logging replacement python logging python standard library logging facility python raven python client sentry logerror tracking crash reporting aggregation platform web applications machine learning libraries machine learning also see awesomemachinelearning ho open source fast scalable machine learning platform metrics machine learning evaluation metrics nupic numenta platform intelligent computing scikitlearn popular python library machine learning spark ml apache sparks scalable machine learning library vowpalporpoise lightweight python wrapper vowpal wabbit xgboost scalable portable distributed gradient boosting library microsoft windows python programming microsoft windows pythonxy scientificapplicationsoriented python distribution based qt spyder pythonlibs unofficial windows binaries python extension packages pythonnet python integration net common language runtime clr pywin python extensions windows winpython portable development environment windows miscellaneous useful libraries tools dont fit categories blinker fast python inprocess signalevent dispatching system boltons set purepython utilities itsdangerous various helpers pass trusted data untrusted environments pluginbase simple flexible plugin system python tryton general purpose business framework natural language processing libraries working human languages general gensim topic modeling humans langidpy standalone language identification system nltk leading platform building python programs work human language data pattern web mining module python polyglot natural language pipeline supporting hundreds languages pytext natural language modeling framework based pytorch pytorchnlp toolkit enabling rapid deep learning nlp prototyping research spacy library industrialstrength natural language processing python cython stanfordnlp stanford nlp groups official python library supporting languages chinese jieba popular chinese text segmentation library pkusegpython toolkit chinese word segmentation various domains snownlp library processing chinese text funnlp collection tools datasets chinese nlp network virtualization tools libraries virtual networking sdn software defined networking mininet popular network emulator api written python napalm crossvendor api manipulate network devices pox pythonbased sdn control applications openflow sdn controllers news feed libraries building users activities djangoactivitystream generating generic activity streams actions site stream framework building news feed notification systems using cassandra redis orm libraries implement objectrelational mapping data mapping techniques relational databases django models django orm sqlalchemy python sql toolkit object relational mapper awesomesqlalchemy dataset store python dicts database works sqlite mysql postgresql orator orator orm provides simple yet beautiful activerecord implementation orm async orm peewee small expressive orm pony orm provides generatororiented interface sql pydal pure python database abstraction layer nosql databases hotredis rich python data types redis mongoengine python objectdocumentmapper working mongodb pynamodb pythonic interface amazon dynamodb redisco python library simple models containers persisted redis package management libraries package dependency management pip python package dependency manager pypi piptools set tools keep pinned python dependencies fresh conda crossplatform pythonagnostic binary package manager package repositories local pypi repository server proxies warehouse next generation python package repository pypi bandersnatch pypi mirroring tool provided python packaging authority pypa devpi pypi server packagingtestingrelease tool localshop local pypi server custom packages automirroring pypi permissions libraries allow deny users access data functionality djangoguardian implementation per object permissions django djangorules tiny powerful app providing objectlevel permissions django without requiring database processes libraries starting communicating os processes delegatorpy subprocesses humans sarge yet another wrapper subprocess sh fullfledged subprocess replacement python recommender systems libraries building recommender systems annoy approximate nearest neighbors cpython optimized memory usage fastfm library factorization machines implicit fast python implementation collaborative filtering implicit datasets libffm library fieldaware factorization machine ffm lightfm python implementation number popular recommendation algorithms spotlight deep recommender models using pytorch surprise scikit building analyzing recommender systems tensorrec recommendation engine framework tensorflow restful api libraries building restful apis django djangorestframework powerful flexible toolkit build web apis djangotastypie creating delicious apis django apps flask eve rest api framework powered flask mongodb good intentions flaskapi browsable web apis flask flaskrestful quickly building rest apis flask pyramid cornice restful framework pyramid framework agnostic apistar smart web api framework designed python falcon highperformance framework building cloud apis web app backends fastapi modern fast web framework building apis python based standard python type hints hug python framework cleanly exposing apis sandman automated rest apis existing databasedriven systems sanic python web server web framework thats written go fast vibora fast efficient asynchronous web framework inspired flask robotics libraries robotics pythonrobotics compilation various robotics algorithms visualizations rospy library ros robot operating system rpc servers rpccompatible servers zerorpc zerorpc flexible rpc implementation based zeromq messagepack science libraries scientific computing also see pythonforscientists astropy community python library astronomy bcbionextgen providing bestpractice pipelines fully automated high throughput sequencing analysis bccb collection useful code related biological analysis biopython biopython set freely available tools biological computation cclib library parsing interpreting results computational chemistry packages colour implementing comprehensive number colour theory transformations algorithms networkx highproductivity software complex networks nipy collection neuroimaging toolkits numpy fundamental package scientific computing python open babel chemical toolbox designed speak many languages chemical data obspy python toolbox seismology pydy short python dynamics used assist workflow modeling dynamic motion pymc markov chain monte carlo sampling toolkit qutip quantum toolbox python rdkit cheminformatics machine learning software scipy pythonbased ecosystem opensource software mathematics science engineering statsmodels statistical modeling econometrics python sympy python library symbolic mathematics zipline pythonic algorithmic trading library simpy processbased discreteevent simulation framework search libraries software indexing performing search queries data elasticsearchpy official lowlevel python client elasticsearch elasticsearchdslpy official highlevel python client elasticsearch djangohaystack modular search django pysolr lightweight python wrapper apache solr whoosh fast pure python search engine library serialization libraries serializing complex data types marshmallow lightweight library converting complex objects simple python datatypes pysimdjson python bindings simdjson pythonrapidjson python wrapper around rapidjson ultrajson fast json decoder encoder written c python bindings serverless frameworks frameworks developing serverless python code pythonlambda toolkit developing deploying python code aws lambda zappa tool deploying wsgi applications aws lambda api gateway specific formats processing libraries parsing manipulating specific text formats general tablib module tabular datasets xls csv json yaml office openpyxl library reading writing excel xlsxxlsmxltxxltm files pyexcel providing one api reading manipulating writing csv ods xls xlsx xlsm files pythondocx reads queries modifies microsoft word docx files pythonpptx python library creating updating powerpoint pptx files unoconv convert document format supported libreofficeopenoffice xlsxwriter python module creating excel xlsx files xlwings bsdlicensed library makes easy call python excel vice versa xlwt xlrd writing reading data formatting information excel files pdf pdfminer tool extracting information pdf documents pypdf library capable splitting merging transforming pdf pages reportlab allowing rapid creation rich pdf documents markdown mistune fastest full featured pure python parsers markdown pythonmarkdown python implementation john grubers markdown yaml pyyaml yaml implementations python csv csvkit utilities converting working csv archive unp command line tool unpack archives easily static site generator static site generator software takes text templates input produces html files output mkdocs markdown friendly documentation generator pelican static site generator supports markdown rest syntax lektor easy use static cms blog engine nikola static website blog generator tagging libraries tagging items djangotaggit simple tagging django task queues libraries working task queues celery asynchronous task queuejob queue based distributed message passing huey little multithreaded task queue mrq distributed worker task queue python using redis gevent rq simple job queues python template engine libraries tools templating lexing jinja modern designer friendly templating language genshi python templating toolkit generation webaware output mako hyperfast lightweight templating python platform testing libraries testing codebases generating test data testing frameworks pytest mature fullfeatured python testing tool hypothesis hypothesis advanced quickcheck style property based testing library nose successor nose based unittest robot framework generic test automation framework unittest python standard library unit testing framework test runners green clean colorful test runner mamba definitive testing tool python born banner bdd tox auto builds tests distributions multiple python versions gui web testing locust scalable user load testing tool written python pyautogui pyautogui crossplatform gui automation python module human beings selenium python bindings selenium webdriver sixpack languageagnostic ab testing framework splinter open source tool testing web applications mock mock python standard library mocking patching library doublex powerful test doubles framework python freezegun travel time mocking datetime module httmock mocking library requests python httpretty http request mock tool python mocket socket mock framework geventasynciossl support responses utility library mocking requests python library vcrpy record replay http interactions tests object factories factoryboy test fixtures replacement python mixer another fixtures replacement supported django flask sqlalchemy peewee etc modelmommy creating random fixtures testing django code coverage coverage code coverage measurement fake data mimesis python library help generate fake data fakedb fake database generator faker python package generates fake data radar generate random datetime time text processing libraries parsing manipulating plain texts general chardet python compatible character encoding detector difflib python standard library helpers computing deltas ftfy makes unicode text less broken consistent automagically fuzzywuzzy fuzzy string matching levenshtein fast computation levenshtein distance string similarity pangupy paranoid text spacing pyfiglet implementation figlet written python pypinyin convert chinese hanzi pinyin textdistance compute distance sequences algorithms unidecode ascii transliterations unicode text slugify awesomeslugify python slugify library preserve unicode pythonslugify python slugify library translates unicode ascii unicodeslugify slugifier generates unicode slugs django dependency unique identifiers hashids implementation hashids python shortuuid generator library concise unambiguous urlsafe uuids parser ply implementation lex yacc parsing tools python pygments generic syntax highlighter pyparsing general purpose framework generating parsers pythonnameparser parsing human names individual components pythonphonenumbers parsing formatting storing validating international phone numbers pythonuseragents browser user agent parser sqlparse nonvalidating sql parser thirdparty apis libraries accessing third party services apis also see list python api wrappers libraries apachelibcloud one python library clouds boto python interface amazon web services djangowordpress wordpress models views django facebooksdk facebook platform python sdk googleapipythonclient google apis client library python gspread google spreadsheets python api twython python wrapper twitter api url manipulation libraries parsing urls furl small python library makes parsing manipulating urls easy purl simple immutable url class clean api interrogation manipulation pyshorteners pure python url shortening lib webargs friendly library parsing http request arguments builtin support popular web frameworks video libraries manipulating video gifs moviepy module scriptbased movie editing many formats including animated gifs scikitvideo video processing routines scipy web asset management tools managing compressing minifying website assets djangocompressor compresses linked inline javascript css single cached file djangopipeline asset packaging library django djangostorages collection custom storage back ends django fanstatic packages optimizes serves static file dependencies python packages fileconveyor daemon detect sync files cdns ftp flaskassets helps integrate webassets flask app webassets bundles optimizes manages unique cachebusting urls static resources web content extracting libraries extracting web contents htmltext convert html markdownformatted text lassie web content retrieval humans micawber small library extracting rich content urls newspaper news extraction article extraction content curation python pythonreadability fast python port arcs readability tool requestshtml pythonic html parsing humans sumy module automatic summarization text documents html pages textract extract text document word powerpoint pdfs etc toapi every web site provides apis web crawling libraries automate web scraping cola distributed crawling framework feedparser universal feed parser grab site scraping framework mechanicalsoup python library automating interaction websites pyspider powerful spider system robobrowser simple pythonic library browsing web without standalone web browser scrapy fast highlevel screen scraping web crawling framework portia visual scraping scrapy web frameworks traditional full stack web frameworks also see restful api synchronous django popular web framework python awesomedjango flask microframework python awesomeflask pyramid small fast downtoearth open source python web framework awesomepyramid masonite modern developer centric python web framework asynchronous tornado web framework asynchronous networking library websocket libraries working websocket autobahnpython websocket wamp python twisted asyncio channels developerfriendly asynchrony django websockets library building websocket servers clients focus correctness simplicity wsgi servers wsgicompatible web servers bjoern asynchronous fast written c gunicorn preforked partly written c uwsgi project aims developing full stack building hosting services written c waitress multithreaded powers pyramid werkzeug wsgi utility library python powers flask easily embedded projects resources discover new python libraries podcasts python import podcast podcastinit python bytes python testing radio free python talk python test code twitter codetengu getpy importpython planetpython pycoders pypi pythontrending pythonweekly talkpython realpython websites rcoolgithubprojects rpython awesome python libhunt django packages full stack python python cheatsheet python zeef python real python trending python repositories github today python weekly codetengu weekly import python newsletter pycoders weekly python weekly python tricks contributing contributions always welcome please take look contribution guidelines first keep pull requests open im sure whether libraries awesome could vote adding pull requests merged votes reach question opinionated list hesitate contact vinta twitter open issue github,awesom python curat list awesom python framework librari softwar resourc inspir awesomephp awesom python admin panel algorithm design pattern asynchron program audio authent build tool builtin class enhanc cach chatop tool cm code analysi commandlin interfac develop commandlin tool compat comput vision concurr parallel configur cryptographi data analysi data valid data visual databas driver databas date time debug tool deep learn devop tool distribut comput distribut document download ecommerc editor plugin ide email environ manag file foreign function interfac form function program game develop geoloc gui develop hardwar html manipul http client imag process implement interact interpret internation job schedul log machin learn miscellan natur languag process network virtual news feed orm packag manag packag repositori permiss process recommend system rest api robot rpc server scienc search serial serverless framework specif format process static site gener tag task queue templat engin test text process thirdparti api url manipul video web asset manag web content extract web crawl web framework websocket wsgi server resourc podcast twitter websit weekli contribut admin panel librari administr interfac ajenti admin panel server deserv djangograppelli jazzi skin django admininterfac djangojet modern respons templat django admin interfac improv function djangosuit altern django admininterfac free noncommerci use djangoxadmin dropin replac django admin come lot goodi jetbridg admin panel framework applic nice ui ex jet django flaskadmin simpl extens administr interfac framework flask flower realtim monitor web admin celeri wooey django app creat automat web ui python script algorithm design pattern python implement algorithm design pattern algorithm minim exampl data structur algorithm python pypattyrn simpl yet effect librari implement common design pattern pythonpattern collect design pattern python sortedcontain fast purepython implement sortedlist sorteddict sortedset type asynchron program asyncio python standard librari asynchron io event loop coroutin task awesomeasyncio uvloop ultra fast asyncio event loop twist eventdriven network engin audio librari manipul audio metadata audio audioread crosslibrari gstreamer core audio mad ffmpeg audio decod dejavu audio fingerprint recognit mingu advanc music theori notat packag midi file playback support pyaudioanalysi audio featur extract classif segment applic pydub manipul audio simpl easi high level interfac timesid open web audio process framework metadata beet music librari manag musicbrainz tagger eye tool work audio file specif mp file contain id metadata mutagen python modul handl audio metadata tinytag librari read music meta data mp ogg flac wave file authent librari implement authent scheme oauth authlib javascript object sign encrypt draft implement djangoallauth authent app django work djangooauthtoolkit oauth goodi django oauthlib gener thorough implement oauth requestsign logic pythonoauth fulli test abstract interfac creat oauth client server pythonsocialauth easytosetup social authent mechan jwt pyjwt json web token implement python pythonjos jose implement python pythonjwt modul gener verifi json web token build tool compil softwar sourc code bitbak makelik build tool embed linux buildout build system creat assembl deploy applic multipl part platformio consol tool build code differ develop platform pybuild continu build tool written pure python scon softwar construct tool builtin class enhanc librari enhanc python builtin class dataclass python standard librari data class attr replac init eq repr etc boilerpl class definit bidict effici python bidirect map data structur relat function box python dictionari advanc dot notat access dotteddict librari provid method access list dict dot path notat cm content manag system wagtail django content manag system djangocm open sourc enterpris cm base django feincm one advanc content manag system built django kotti highlevel python web applic framework built pyramid mezzanin power consist flexibl content manag platform plone cm built top open sourc applic server zope quokka flexibl extens small cm power flask mongodb cach librari cach data beaker wsgi middlewar session cach djangocachemachin automat cach invalid django model djangocacheop slick orm cach automat granular eventdriven invalid dogpilecach dogpilecach next gener replac beaker made author hermescach python cach librari tagbas invalid dogpil effect prevent pylibmc python wrapper around libmemcach interfac pythondiskcach sqlite file back cach backend faster lookup memcach redi chatop tool librari chatbot develop errbot easiest popular chatbot implement chatop code analysi tool static analysi linter code qualiti checker also see awesomestaticanalysi code analysi coala languag independ easili extend code analysi applic codeflow turn python javascript code dot flowchart prospector tool analys python code pycallgraph librari visualis flow call graph python applic code linter flake wrapper around pycodestyl pyflak mccabe awesomeflakeextens pylint fulli customiz sourc code analyz pylama code audit tool python javascript wemakepythonstyleguid strictest opinion python linter ever code formatt black uncompromis python code formatt yapf yet anoth python code formatt googl static type checker also see awesomepythontyp mypi check variabl type compil time pyrecheck perform type check static type annot gener monkeytyp system python gener static type annot collect runtim type commandlin interfac develop librari build commandlin applic commandlin applic develop cement cli applic framework python click packag creat beauti command line interfac compos way cliff framework creat commandlin program multilevel command clint python commandlin applic tool docopt python command line argument parser pythonfir librari creat command line interfac absolut python object pythonprompttoolkit librari build power interact command line termin render asciimat packag creat fullscreen text ui interact form ascii anim bashplotlib make basic plot termin colorama crossplatform color termin text tqdm fast extens progress bar loop cli commandlin tool use clibas tool product product tool cookiecutt commandlin util creat project cookiecutt project templat doitliv tool live present termin howdoi instant code answer via command line pathpick select file bash output percol add flavor interact select tradit pipe concept unix thefuck correct previou consol command tmuxp tmux session manag tri dead simpl cli tri python packag never easier cli enhanc httpie command line http client userfriendli curl replac kubeshel integr shell work kubernet cli mycli termin client mysql autocomplet syntax highlight pgcli postgr cli autocomplet syntax highlight saw supercharg awscli compat librari migrat python pythonfutur miss compat layer python python pythonmodern modern python code eventu python migrat six python compat util comput vision librari comput vision opencv open sourc comput vision librari pytesseract anoth wrapper googl tesseract ocr simplecv open sourc framework build comput vision applic concurr parallel librari concurr parallel execut also see awesomeasyncio concurrentfutur python standard librari highlevel interfac asynchron execut callabl multiprocess python standard librari processbas parallel eventlet asynchron framework wsgi support gevent coroutinebas python network librari use greenlet uvloop ultra fast implement asyncio event loop top libuv scoop scalabl concurr oper python configur librari store pars configur option configobj ini file parser valid configpars python standard librari ini file parser profig config multipl format valu convers pythondecoupl strict separ set code cryptographi cryptographi packag design expos cryptograph primit recip python develop paramiko lead nativ python sshv protocol librari passlib secur password storagehash librari high level pynacl python bind network cryptographi nacl librari data analysi librari data analyz blaze numpi panda interfac big data open mine busi intellig bi panda interfac orang data mine data visual analysi machin learn visual program script panda librari provid highperform easytous data structur data analysi tool optimu agil data scienc workflow made easi pyspark data valid librari valid data use form mani case cerberu lightweight extens data valid librari coland valid deseri data obtain via xml json html form post jsonschema implement json schema python schema librari valid python data structur schemat data structur valid valid lightweight extens data valid adapt librari voluptu python data valid librari data visual librari visual data also see awesomejavascript altair declar statist visual librari python bokeh interact web plot python bqplot interact plot librari jupyt notebook dash built top flask react plotli aim analyt web applic awesomedash plotnin grammar graphic python base ggplot matplotlib python plot librari pygal python svg chart creator pygraphviz python interfac graphviz pyqtgraph interact realtim ddimag plot scienceengin widget seaborn statist data visual use matplotlib vispi highperform scientif visual base opengl databas databas implement python pickledb simpl lightweight keyvalu store python tinydb tini documentori databas zodb nativ object databas python keyvalu object graph databas databas driver librari connect oper databas mysql awesomemysql mysqlclient mysql connector python support mysqlpython fork pymysql pure python mysql driver compat mysqlpython postgresql awesomepostgr psycopg popular postgresql adapt python queri wrapper psycopg librari interact postgresql relat databas pymssql simpl databas interfac microsoft sql server supersqlit supercharg sqlite librari built top apsw nosql databas cassandradriv python driver apach cassandra happybas developerfriendli librari apach hbase kafkapython python client apach kafka pyneo client librari toolkit work neoj pymongo offici python client mongodb redispi python client redi asynchron client motor async python driver mongodb date time librari work date time chronyk python librari pars humanwritten time date dateutil extens standard python datetim modul delorean librari clear inconveni truth aris deal datetim moment python librari deal datestim inspir momentj pendulum python datetim made easi pytim easytous python modul aim oper datetimedatetim string pytz world timezon definit modern histor bring tz databas python whenpi provid userfriendli function help perform common date time action maya datetim human debug tool librari debug code pdblike debugg ipdb ipythonen pdb pdb anoth dropin replac pdb pudb fullscreen consolebas python debugg wdb improb web debugg websocket trace lptrace strace python program manhol debug unix socket connect present stacktrac thread interact prompt pyring debugg capabl attach inject code python process pythonhunt flexibl code trace toolkit profil lineprofil linebylin profil memoryprofil monitor memori usag python code profil interact python profil pyspi sampl profil python program written rust pyflam ptrace profil python vprof visual python profil other icecream inspect variabl express program execut singl simpl function call djangodebugtoolbar display variou debug inform django djangodevserv dropin replac django runserv flaskdebugtoolbar port djangodebugtoolbar flask pyelftool pars analyz elf file dwarf debug inform deep learn framework neural network deep learn also see awesomedeeplearn caff fast open framework deep learn kera highlevel neural network librari capabl run top either tensorflow theano mxnet deep learn framework design effici flexibl pytorch tensor dynam neural network python strong gpu acceler serpentai game agent framework use video game deep learn sandbox tensorflow popular deep learn framework creat googl theano librari fast numer comput devop tool softwar librari devop ansibl radic simpl autom platform cloudinit multidistribut packag handl earli initi cloud instanc cuisin cheflik function fabric dockercompos fast isol develop environ use docker fabric simpl python tool remot execut deploy fabtool tool write awesom fabric file honcho python clone foreman manag procfilebas applic openstack open sourc softwar build privat public cloud pexpect control interact program pseudotermin like gnu expect psutil crossplatform process system util modul saltstack infrastructur autom manag system supervisor supervisor process control system unix distribut comput framework librari distribut comput batch process pyspark apach spark python api dask flexibl parallel comput librari analyt comput luigi modul help build complex pipelin batch job mrjob run mapreduc job hadoop amazon web servic ray system parallel distribut python unifi machin learn ecosystem stream process faust stream process librari port idea kafka stream python streampars run python code realtim stream data via apach storm distribut librari creat packag execut releas distribut dhvirtualenv build distribut virtualenv debian packag nuitka compil script modul packag execut extens modul pyapp freez python script mac os x pyex freez python script window pyinstal convert python program standalon execut crossplatform pynsist tool build window instal instal bundl python document librari gener project document sphinx python document gener awesomesphinxdoc pdoc epydoc replac auto gener api document python librari pycco literateprogrammingstyl document gener download librari download scmd command line tool manag amazon cloudfront scmd super command line tool good higher perform youget youtubeyoukuniconico video download written python youtubedl small commandlin program download video youtub ecommerc framework librari ecommerc payment alipay unoffici alipay api python cartridg shop cart app built use mezzanin djangooscar opensourc ecommerc framework django djangoshop django base shop system merchant django app accept payment variou payment processor money money class option cldrback localeawar format extens currenc exchang pythoncurr display money format filthi currenc forexpython foreign exchang rate bitcoin price index currenc convers saleor ecommerc storefront django shoop open sourc ecommerc platform base django editor plugin ide emac elpi emac python develop environ sublim text anaconda anaconda turn sublim text full featur python develop ide sublimejedi sublim text plugin awesom autocomplet librari jedi vim jedivim vim bind jedi autocomplet librari python pythonmod one plugin turn vim python ide youcompletem includ jedibas complet engin python visual studio ptv python tool visual studio visual studio code python offici vscode extens rich support python ide pycharm commerci python ide jetbrain free commun edit avail spyder open sourc python ide email librari send pars email envelop mail human be flanker email address mime pars librari imbox python imap human inboxpi python smtp server human lamson python smtp applic server marrow mailer highperform extens mail deliveri framework modoboa mail host manag platform includ modern simplifi web ui nyla sync engin provid rest api top power email sync platform yagmail yet anoth gmailsmtp client environ manag librari python version virtual environ manag pyenv simpl python version manag pipenv python develop workflow human poetri python depend manag packag made easi virtualenv tool creat isol python environ file librari file manipul mime type detect mimetyp python standard librari map filenam mime type pathpi modul wrapper ospath pathlib python standard librari crossplatform objectori path librari pyfilesystem python filesystem abstract layer pythonmag python interfac libmag file type identif librari unipath objectori approach filedirectori oper watchdog api shell util monitor file system event foreign function interfac librari provid foreign function interfac cffi foreign function interfac python call c code ctype python standard librari foreign function interfac python call c code pycuda python wrapper nvidia cuda api swig simplifi wrapper interfac gener form librari work form deform python html form gener librari influenc formish form gener librari djangobootstrap bootstrap integr django djangobootstrap bootstrap integr django djangocrispyform django app let creat beauti form eleg dri way djangoremoteform platform independ django form serial wtform flexibl form valid render librari function program function program python coconut coconut variant python built simpl eleg python function program cytoolz cython implement toolz high perform function util fnpi function program python implement miss featur enjoy fp funci fanci practic function tool toolz collect function util iter function dictionari gui develop librari work graphic user interfac applic curs builtin wrapper ncurs use creat termin gui applic eel librari make simpl electronlik offlin htmlj gui app enaml creat beauti userinterfac declar syntax like qml flexx flexx pure python toolkit creat gui use web technolog render gooey turn command line program full gui applic one line kivi librari creat nui applic run window linux mac os x android io pyglet crossplatform window multimedia librari python pygobject python bind glibgobjectgiogtk gtk pyqt python bind qt crossplatform applic ui framework pysimplegui wrapper tkinter qt wxpython remi pywebview lightweight crossplatform nativ wrapper around webview compon tkinter tkinter python defacto standard gui packag toga python nativ os nativ gui toolkit urwid librari creat termin gui applic strong support widget event rich color etc wxpython blend wxwidget c class librari python game develop awesom game develop librari cocosd cocosd framework build game demo graphicalinteract applic harfangd python framework vr game develop pandad game engin develop disney pygam pygam set python modul design write game pyogr python bind ogr render engin use game simul anyth pyopengl python ctype bind opengl relat api pysdl ctype base wrapper sdl librari renpi visual novel engin geoloc librari geocod address work latitud longitud djangocountri django app provid countri field model form geodjango worldclass geograph web framework geoip python api maxmind geoip legaci databas geojson python bind util geojson geopi python geocod toolbox pygeoip pure python geoip api html manipul librari work html xml beautifulsoup provid python idiom iter search modifi html xml bleach whitelistbas html sanit text linkif librari cssutil css librari python htmllib standardscompli librari pars serial html document fragment lxml fast easytous versatil librari handl html xml markupsaf implement xmlhtmlxhtml markup safe string python pyqueri jquerylik librari pars html untangl convert xml document python object easi access weasyprint visual render engin html css export pdf xmldataset simpl xml pars xmltodict work xml feel like work json http client librari work http grequest request gevent asynchron http request httplib comprehens http client librari request http request human treq python request like api built top twist http client urllib http librari threadsaf connect pool file post support saniti friendli hardwar librari program hardwar ino command line toolkit work arduino keyboard hook simul global keyboard event window linux mous hook simul global mous event window linux pingo pingo provid uniform api program devic like raspberri pi pcduino intel galileo etc pyuserinput modul crossplatform control mous keyboard scapi brilliant packet manipul librari wifi python librari command line tool work wifi linux imag process librari manipul imag hmap imag histogram remap imgseek project search collect imag use visual similar nudepi nuditi detect pagan retro identicon avatar gener base input string hash pillow pillow friendli pil fork pybarcod creat barcod python without need pil pygram instagramlik imag filter pythonqrcod pure python qr code gener quad comput art base quadtre scikitimag python librari scientif imag process thumbor smart imag servic enabl ondemand crop resiz flip imag wand python bind magickwand c api imagemagick implement implement python cpython default wide use implement python program languag written c cython optim static compil python clpython implement python program languag written common lisp grumpi compil interpret power cpython replac alpha ironpython implement python program languag written c jython implement python program languag written java jvm micropython lean effici python program languag implement numba python jit compil llvm aim scientif python peachpi x assembl embed python pyjion jit python base upon coreclr pypi fast compliant implement python languag pyston python implement use jit techniqu stackless python enhanc version python program languag interact interpret interact python interpret repl bpython fanci interfac python interpret jupyt notebook ipython rich toolkit help make use python interact awesomejupyt ptpython advanc python repl built top pythonprompttoolkit internation librari work babel internation librari python pyicu wrapper intern compon unicod c librari icu job schedul librari schedul job apschedul light power inprocess task schedul let schedul function djangoschedul calendar app django doit task runner build tool gunneri multipurpos task execut tool distribut system webbas interfac joblib set tool provid lightweight pipelin python plan write crontab file python like charm schedul python job schedul human spiff power workflow engin implement pure python taskflow python librari help make task execut easi consist reliabl airflow airflow platform programmat author schedul monitor workflow log librari gener work log eliot log complex distribut system logbook log replac python log python standard librari log facil python raven python client sentri logerror track crash report aggreg platform web applic machin learn librari machin learn also see awesomemachinelearn ho open sourc fast scalabl machin learn platform metric machin learn evalu metric nupic numenta platform intellig comput scikitlearn popular python librari machin learn spark ml apach spark scalabl machin learn librari vowpalporpois lightweight python wrapper vowpal wabbit xgboost scalabl portabl distribut gradient boost librari microsoft window python program microsoft window pythonxi scientificapplicationsori python distribut base qt spyder pythonlib unoffici window binari python extens packag pythonnet python integr net common languag runtim clr pywin python extens window winpython portabl develop environ window miscellan use librari tool dont fit categori blinker fast python inprocess signalev dispatch system bolton set purepython util itsdanger variou helper pass trust data untrust environ pluginbas simpl flexibl plugin system python tryton gener purpos busi framework natur languag process librari work human languag gener gensim topic model human langidpi standalon languag identif system nltk lead platform build python program work human languag data pattern web mine modul python polyglot natur languag pipelin support hundr languag pytext natur languag model framework base pytorch pytorchnlp toolkit enabl rapid deep learn nlp prototyp research spaci librari industrialstrength natur languag process python cython stanfordnlp stanford nlp group offici python librari support languag chines jieba popular chines text segment librari pkusegpython toolkit chines word segment variou domain snownlp librari process chines text funnlp collect tool dataset chines nlp network virtual tool librari virtual network sdn softwar defin network mininet popular network emul api written python napalm crossvendor api manipul network devic pox pythonbas sdn control applic openflow sdn control news feed librari build user activ djangoactivitystream gener gener activ stream action site stream framework build news feed notif system use cassandra redi orm librari implement objectrel map data map techniqu relat databas django model django orm sqlalchemi python sql toolkit object relat mapper awesomesqlalchemi dataset store python dict databas work sqlite mysql postgresql orat orat orm provid simpl yet beauti activerecord implement orm async orm peewe small express orm poni orm provid generatorori interfac sql pydal pure python databas abstract layer nosql databas hotredi rich python data type redi mongoengin python objectdocumentmapp work mongodb pynamodb python interfac amazon dynamodb redisco python librari simpl model contain persist redi packag manag librari packag depend manag pip python packag depend manag pypi piptool set tool keep pin python depend fresh conda crossplatform pythonagnost binari packag manag packag repositori local pypi repositori server proxi warehous next gener python packag repositori pypi bandersnatch pypi mirror tool provid python packag author pypa devpi pypi server packagingtestingreleas tool localshop local pypi server custom packag automirror pypi permiss librari allow deni user access data function djangoguardian implement per object permiss django djangorul tini power app provid objectlevel permiss django without requir databas process librari start commun os process delegatorpi subprocess human sarg yet anoth wrapper subprocess sh fullfledg subprocess replac python recommend system librari build recommend system annoy approxim nearest neighbor cpython optim memori usag fastfm librari factor machin implicit fast python implement collabor filter implicit dataset libffm librari fieldawar factor machin ffm lightfm python implement number popular recommend algorithm spotlight deep recommend model use pytorch surpris scikit build analyz recommend system tensorrec recommend engin framework tensorflow rest api librari build rest api django djangorestframework power flexibl toolkit build web api djangotastypi creat delici api django app flask eve rest api framework power flask mongodb good intent flaskapi browsabl web api flask flaskrest quickli build rest api flask pyramid cornic rest framework pyramid framework agnost apistar smart web api framework design python falcon highperform framework build cloud api web app backend fastapi modern fast web framework build api python base standard python type hint hug python framework cleanli expos api sandman autom rest api exist databasedriven system sanic python web server web framework that written go fast vibora fast effici asynchron web framework inspir flask robot librari robot pythonrobot compil variou robot algorithm visual rospi librari ro robot oper system rpc server rpccompat server zerorpc zerorpc flexibl rpc implement base zeromq messagepack scienc librari scientif comput also see pythonforscientist astropi commun python librari astronomi bcbionextgen provid bestpractic pipelin fulli autom high throughput sequenc analysi bccb collect use code relat biolog analysi biopython biopython set freeli avail tool biolog comput cclib librari pars interpret result comput chemistri packag colour implement comprehens number colour theori transform algorithm networkx highproduct softwar complex network nipi collect neuroimag toolkit numpi fundament packag scientif comput python open babel chemic toolbox design speak mani languag chemic data obspi python toolbox seismolog pydi short python dynam use assist workflow model dynam motion pymc markov chain mont carlo sampl toolkit qutip quantum toolbox python rdkit cheminformat machin learn softwar scipi pythonbas ecosystem opensourc softwar mathemat scienc engin statsmodel statist model econometr python sympi python librari symbol mathemat ziplin python algorithm trade librari simpi processbas discreteev simul framework search librari softwar index perform search queri data elasticsearchpi offici lowlevel python client elasticsearch elasticsearchdslpi offici highlevel python client elasticsearch djangohaystack modular search django pysolr lightweight python wrapper apach solr whoosh fast pure python search engin librari serial librari serial complex data type marshmallow lightweight librari convert complex object simpl python datatyp pysimdjson python bind simdjson pythonrapidjson python wrapper around rapidjson ultrajson fast json decod encod written c python bind serverless framework framework develop serverless python code pythonlambda toolkit develop deploy python code aw lambda zappa tool deploy wsgi applic aw lambda api gateway specif format process librari pars manipul specif text format gener tablib modul tabular dataset xl csv json yaml offic openpyxl librari read write excel xlsxxlsmxltxxltm file pyexcel provid one api read manipul write csv od xl xlsx xlsm file pythondocx read queri modifi microsoft word docx file pythonpptx python librari creat updat powerpoint pptx file unoconv convert document format support libreofficeopenoffic xlsxwriter python modul creat excel xlsx file xlwing bsdlicens librari make easi call python excel vice versa xlwt xlrd write read data format inform excel file pdf pdfminer tool extract inform pdf document pypdf librari capabl split merg transform pdf page reportlab allow rapid creation rich pdf document markdown mistun fastest full featur pure python parser markdown pythonmarkdown python implement john gruber markdown yaml pyyaml yaml implement python csv csvkit util convert work csv archiv unp command line tool unpack archiv easili static site gener static site gener softwar take text templat input produc html file output mkdoc markdown friendli document gener pelican static site gener support markdown rest syntax lektor easi use static cm blog engin nikola static websit blog gener tag librari tag item djangotaggit simpl tag django task queue librari work task queue celeri asynchron task queuejob queue base distribut messag pass huey littl multithread task queue mrq distribut worker task queue python use redi gevent rq simpl job queue python templat engin librari tool templat lex jinja modern design friendli templat languag genshi python templat toolkit gener webawar output mako hyperfast lightweight templat python platform test librari test codebas gener test data test framework pytest matur fullfeatur python test tool hypothesi hypothesi advanc quickcheck style properti base test librari nose successor nose base unittest robot framework gener test autom framework unittest python standard librari unit test framework test runner green clean color test runner mamba definit test tool python born banner bdd tox auto build test distribut multipl python version gui web test locust scalabl user load test tool written python pyautogui pyautogui crossplatform gui autom python modul human be selenium python bind selenium webdriv sixpack languageagnost ab test framework splinter open sourc tool test web applic mock mock python standard librari mock patch librari doublex power test doubl framework python freezegun travel time mock datetim modul httmock mock librari request python httpretti http request mock tool python mocket socket mock framework geventasynciossl support respons util librari mock request python librari vcrpi record replay http interact test object factori factoryboy test fixtur replac python mixer anoth fixtur replac support django flask sqlalchemi peewe etc modelmommi creat random fixtur test django code coverag coverag code coverag measur fake data mimesi python librari help gener fake data fakedb fake databas gener faker python packag gener fake data radar gener random datetim time text process librari pars manipul plain text gener chardet python compat charact encod detector difflib python standard librari helper comput delta ftfi make unicod text less broken consist automag fuzzywuzzi fuzzi string match levenshtein fast comput levenshtein distanc string similar pangupi paranoid text space pyfiglet implement figlet written python pypinyin convert chines hanzi pinyin textdist comput distanc sequenc algorithm unidecod ascii transliter unicod text slugifi awesomeslugifi python slugifi librari preserv unicod pythonslugifi python slugifi librari translat unicod ascii unicodeslugifi slugifi gener unicod slug django depend uniqu identifi hashid implement hashid python shortuuid gener librari concis unambigu urlsaf uuid parser pli implement lex yacc pars tool python pygment gener syntax highlight pypars gener purpos framework gener parser pythonnamepars pars human name individu compon pythonphonenumb pars format store valid intern phone number pythonuserag browser user agent parser sqlpars nonvalid sql parser thirdparti api librari access third parti servic api also see list python api wrapper librari apachelibcloud one python librari cloud boto python interfac amazon web servic djangowordpress wordpress model view django facebooksdk facebook platform python sdk googleapipythoncli googl api client librari python gspread googl spreadsheet python api twython python wrapper twitter api url manipul librari pars url furl small python librari make pars manipul url easi purl simpl immut url class clean api interrog manipul pyshorten pure python url shorten lib webarg friendli librari pars http request argument builtin support popular web framework video librari manipul video gif moviepi modul scriptbas movi edit mani format includ anim gif scikitvideo video process routin scipi web asset manag tool manag compress minifi websit asset djangocompressor compress link inlin javascript css singl cach file djangopipelin asset packag librari django djangostorag collect custom storag back end django fanstat packag optim serv static file depend python packag fileconveyor daemon detect sync file cdn ftp flaskasset help integr webasset flask app webasset bundl optim manag uniqu cachebust url static resourc web content extract librari extract web content htmltext convert html markdownformat text lassi web content retriev human micawb small librari extract rich content url newspap news extract articl extract content curat python pythonread fast python port arc readabl tool requestshtml python html pars human sumi modul automat summar text document html page textract extract text document word powerpoint pdf etc toapi everi web site provid api web crawl librari autom web scrape cola distribut crawl framework feedpars univers feed parser grab site scrape framework mechanicalsoup python librari autom interact websit pyspid power spider system robobrows simpl python librari brows web without standalon web browser scrapi fast highlevel screen scrape web crawl framework portia visual scrape scrapi web framework tradit full stack web framework also see rest api synchron django popular web framework python awesomedjango flask microframework python awesomeflask pyramid small fast downtoearth open sourc python web framework awesomepyramid masonit modern develop centric python web framework asynchron tornado web framework asynchron network librari websocket librari work websocket autobahnpython websocket wamp python twist asyncio channel developerfriendli asynchroni django websocket librari build websocket server client focu correct simplic wsgi server wsgicompat web server bjoern asynchron fast written c gunicorn prefork partli written c uwsgi project aim develop full stack build host servic written c waitress multithread power pyramid werkzeug wsgi util librari python power flask easili embed project resourc discov new python librari podcast python import podcast podcastinit python byte python test radio free python talk python test code twitter codetengu getpi importpython planetpython pycod pypi pythontrend pythonweekli talkpython realpython websit rcoolgithubproject rpython awesom python libhunt django packag full stack python python cheatsheet python zeef python real python trend python repositori github today python weekli codetengu weekli import python newslett pycod weekli python weekli python trick contribut contribut alway welcom pleas take look contribut guidelin first keep pull request open im sure whether librari awesom could vote ad pull request merg vote reach question opinion list hesit contact vinta twitter open issu github,awesome python curated list awesome python framework library software resource inspired awesomephp awesome python admin panel algorithm design pattern asynchronous programming audio authentication build tool builtin class enhancement caching chatops tool cm code analysis commandline interface development commandline tool compatibility computer vision concurrency parallelism configuration cryptography data analysis data validation data visualization database driver database date time debugging tool deep learning devops tool distributed computing distribution documentation downloader ecommerce editor plugins ides email environment management file foreign function interface form functional programming game development geolocation gui development hardware html manipulation http client image processing implementation interactive interpreter internationalization job scheduler logging machine learning miscellaneous natural language processing network virtualization news feed orm package management package repository permission process recommender system restful api robotics rpc server science search serialization serverless framework specific format processing static site generator tagging task queue template engine testing text processing thirdparty apis url manipulation video web asset management web content extracting web crawling web framework websocket wsgi server resource podcasts twitter website weekly contributing admin panel library administrative interface ajenti admin panel server deserve djangograppelli jazzy skin django admininterface djangojet modern responsive template django admin interface improved functionality djangosuit alternative django admininterface free noncommercial use djangoxadmin dropin replacement django admin come lot goody jetbridge admin panel framework application nice ui ex jet django flaskadmin simple extensible administrative interface framework flask flower realtime monitor web admin celery wooey django app creates automatic web uis python script algorithm design pattern python implementation algorithm design pattern algorithm minimal example data structure algorithm python pypattyrn simple yet effective library implementing common design pattern pythonpatterns collection design pattern python sortedcontainers fast purepython implementation sortedlist sorteddict sortedset type asynchronous programming asyncio python standard library asynchronous io event loop coroutines task awesomeasyncio uvloop ultra fast asyncio event loop twisted eventdriven networking engine audio library manipulating audio metadata audio audioread crosslibrary gstreamer core audio mad ffmpeg audio decoding dejavu audio fingerprinting recognition mingus advanced music theory notation package midi file playback support pyaudioanalysis audio feature extraction classification segmentation application pydub manipulate audio simple easy high level interface timeside open web audio processing framework metadata beet music library manager musicbrainz tagger eyed tool working audio file specifically mp file containing id metadata mutagen python module handle audio metadata tinytag library reading music meta data mp ogg flac wave file authentication library implementing authentication scheme oauth authlib javascript object signing encryption draft implementation djangoallauth authentication app django work djangooauthtoolkit oauth goody django oauthlib generic thorough implementation oauth requestsigning logic pythonoauth fully tested abstract interface creating oauth client server pythonsocialauth easytosetup social authentication mechanism jwt pyjwt json web token implementation python pythonjose jose implementation python pythonjwt module generating verifying json web token build tool compile software source code bitbake makelike build tool embedded linux buildout build system creating assembling deploying application multiple part platformio console tool build code different development platform pybuilder continuous build tool written pure python scons software construction tool builtin class enhancement library enhancing python builtin class dataclasses python standard library data class attrs replacement init eq repr etc boilerplate class definition bidict efficient pythonic bidirectional map data structure related functionality box python dictionary advanced dot notation access dotteddict library provides method accessing list dicts dotted path notation cm content management system wagtail django content management system djangocms open source enterprise cm based django feincms one advanced content management system built django kotti highlevel pythonic web application framework built pyramid mezzanine powerful consistent flexible content management platform plone cm built top open source application server zope quokka flexible extensible small cm powered flask mongodb caching library caching data beaker wsgi middleware session caching djangocachemachine automatic caching invalidation django model djangocacheops slick orm cache automatic granular eventdriven invalidation dogpilecache dogpilecache next generation replacement beaker made author hermescache python caching library tagbased invalidation dogpile effect prevention pylibmc python wrapper around libmemcached interface pythondiskcache sqlite file backed cache backend faster lookup memcached redis chatops tool library chatbot development errbot easiest popular chatbot implement chatops code analysis tool static analysis linters code quality checker also see awesomestaticanalysis code analysis coala language independent easily extendable code analysis application codeflow turn python javascript code dot flowchart prospector tool analyse python code pycallgraph library visualises flow call graph python application code linters flake wrapper around pycodestyle pyflakes mccabe awesomeflakeextensions pylint fully customizable source code analyzer pylama code audit tool python javascript wemakepythonstyleguide strictest opinionated python linter ever code formatters black uncompromising python code formatter yapf yet another python code formatter google static type checker also see awesomepythontyping mypy check variable type compile time pyrecheck performant type checking static type annotation generator monkeytype system python generates static type annotation collecting runtime type commandline interface development library building commandline application commandline application development cement cli application framework python click package creating beautiful command line interface composable way cliff framework creating commandline program multilevel command clint python commandline application tool docopt pythonic command line argument parser pythonfire library creating command line interface absolutely python object pythonprompttoolkit library building powerful interactive command line terminal rendering asciimatics package create fullscreen text uis interactive form ascii animation bashplotlib making basic plot terminal colorama crossplatform colored terminal text tqdm fast extensible progress bar loop cli commandline tool useful clibased tool productivity productivity tool cookiecutter commandline utility creates project cookiecutters project template doitlive tool live presentation terminal howdoi instant coding answer via command line pathpicker select file bash output percol add flavor interactive selection traditional pipe concept unix thefuck correcting previous console command tmuxp tmux session manager try dead simple cli try python package never easier cli enhancement httpie command line http client userfriendly curl replacement kubeshell integrated shell working kubernetes cli mycli terminal client mysql autocompletion syntax highlighting pgcli postgres cli autocompletion syntax highlighting saw supercharged awscli compatibility library migrating python pythonfuture missing compatibility layer python python pythonmodernize modernizes python code eventual python migration six python compatibility utility computer vision library computer vision opencv open source computer vision library pytesseract another wrapper google tesseract ocr simplecv open source framework building computer vision application concurrency parallelism library concurrent parallel execution also see awesomeasyncio concurrentfutures python standard library highlevel interface asynchronously executing callables multiprocessing python standard library processbased parallelism eventlet asynchronous framework wsgi support gevent coroutinebased python networking library us greenlet uvloop ultra fast implementation asyncio event loop top libuv scoop scalable concurrent operation python configuration library storing parsing configuration option configobj ini file parser validation configparser python standard library ini file parser profig config multiple format value conversion pythondecouple strict separation setting code cryptography cryptography package designed expose cryptographic primitive recipe python developer paramiko leading native python sshv protocol library passlib secure password storagehashing library high level pynacl python binding networking cryptography nacl library data analysis library data analyzing blaze numpy panda interface big data open mining business intelligence bi panda interface orange data mining data visualization analysis machine learning visual programming script panda library providing highperformance easytouse data structure data analysis tool optimus agile data science workflow made easy pyspark data validation library validating data used form many case cerberus lightweight extensible data validation library colander validating deserializing data obtained via xml json html form post jsonschema implementation json schema python schema library validating python data structure schematic data structure validation valideer lightweight extensible data validation adaptation library voluptuous python data validation library data visualization library visualizing data also see awesomejavascript altair declarative statistical visualization library python bokeh interactive web plotting python bqplot interactive plotting library jupyter notebook dash built top flask react plotly aimed analytical web application awesomedash plotnine grammar graphic python based ggplot matplotlib python plotting library pygal python svg chart creator pygraphviz python interface graphviz pyqtgraph interactive realtime ddimage plotting scienceengineering widget seaborn statistical data visualization using matplotlib vispy highperformance scientific visualization based opengl database database implemented python pickledb simple lightweight keyvalue store python tinydb tiny documentoriented database zodb native object database python keyvalue object graph database database driver library connecting operating database mysql awesomemysql mysqlclient mysql connector python support mysqlpython fork pymysql pure python mysql driver compatible mysqlpython postgresql awesomepostgres psycopg popular postgresql adapter python query wrapper psycopg library interacting postgresql relational database pymssql simple database interface microsoft sql server supersqlite supercharged sqlite library built top apsw nosql database cassandradriver python driver apache cassandra happybase developerfriendly library apache hbase kafkapython python client apache kafka pyneo client library toolkit working neoj pymongo official python client mongodb redispy python client redis asynchronous client motor async python driver mongodb date time library working date time chronyk python library parsing humanwritten time date dateutil extension standard python datetime module delorean library clearing inconvenient truth arise dealing datetimes moment python library dealing datestimes inspired momentjs pendulum python datetimes made easy pytime easytouse python module aim operate datetimedatetime string pytz world timezone definition modern historical brings tz database python whenpy providing userfriendly function help perform common date time action maya datetimes human debugging tool library debugging code pdblike debugger ipdb ipythonenabled pdb pdb another dropin replacement pdb pudb fullscreen consolebased python debugger wdb improbable web debugger websockets tracing lptrace strace python program manhole debugging unix socket connection present stacktraces thread interactive prompt pyringe debugger capable attaching injecting code python process pythonhunter flexible code tracing toolkit profiler lineprofiler linebyline profiling memoryprofiler monitor memory usage python code profiling interactive python profiler pyspy sampling profiler python program written rust pyflame ptracing profiler python vprof visual python profiler others icecream inspect variable expression program execution single simple function call djangodebugtoolbar display various debug information django djangodevserver dropin replacement djangos runserver flaskdebugtoolbar port djangodebugtoolbar flask pyelftools parsing analyzing elf file dwarf debugging information deep learning framework neural network deep learning also see awesomedeeplearning caffe fast open framework deep learning kera highlevel neural network library capable running top either tensorflow theano mxnet deep learning framework designed efficiency flexibility pytorch tensor dynamic neural network python strong gpu acceleration serpentai game agent framework use video game deep learning sandbox tensorflow popular deep learning framework created google theano library fast numerical computation devops tool software library devops ansible radically simple automation platform cloudinit multidistribution package handle early initialization cloud instance cuisine cheflike functionality fabric dockercompose fast isolated development environment using docker fabric simple pythonic tool remote execution deployment fabtools tool writing awesome fabric file honcho python clone foreman managing procfilebased application openstack open source software building private public cloud pexpect controlling interactive program pseudoterminal like gnu expect psutil crossplatform process system utility module saltstack infrastructure automation management system supervisor supervisor process control system unix distributed computing framework library distributed computing batch processing pyspark apache spark python api dask flexible parallel computing library analytic computing luigi module help build complex pipeline batch job mrjob run mapreduce job hadoop amazon web service ray system parallel distributed python unifies machine learning ecosystem stream processing faust stream processing library porting idea kafka stream python streamparse run python code realtime stream data via apache storm distribution library create packaged executables release distribution dhvirtualenv build distribute virtualenv debian package nuitka compile script module package executable extension module pyapp freeze python script mac o x pyexe freeze python script window pyinstaller convert python program standalone executables crossplatform pynsist tool build window installers installers bundle python documentation library generating project documentation sphinx python documentation generator awesomesphinxdoc pdoc epydoc replacement auto generate api documentation python library pycco literateprogrammingstyle documentation generator downloader library downloading scmd command line tool managing amazon cloudfront scmd super command line tool good higher performance youget youtubeyoukuniconico video downloader written python youtubedl small commandline program download video youtube ecommerce framework library ecommerce payment alipay unofficial alipay api python cartridge shopping cart app built using mezzanine djangooscar opensource ecommerce framework django djangoshop django based shop system merchant django app accept payment various payment processor money money class optional cldrbacked localeaware formatting extensible currency exchange pythoncurrencies display money format filthy currency forexpython foreign exchange rate bitcoin price index currency conversion saleor ecommerce storefront django shoop open source ecommerce platform based django editor plugins ides emacs elpy emacs python development environment sublime text anaconda anaconda turn sublime text full featured python development ide sublimejedi sublime text plugin awesome autocomplete library jedi vim jedivim vim binding jedi autocompletion library python pythonmode one plugin turning vim python ide youcompleteme includes jedibased completion engine python visual studio ptvs python tool visual studio visual studio code python official vscode extension rich support python ide pycharm commercial python ide jetbrains free community edition available spyder open source python ide email library sending parsing email envelope mailing human being flanker email address mime parsing library imbox python imap human inboxpy python smtp server human lamson pythonic smtp application server marrow mailer highperformance extensible mail delivery framework modoboa mail hosting management platform including modern simplified web ui nylas sync engine providing restful api top powerful email sync platform yagmail yet another gmailsmtp client environment management library python version virtual environment management pyenv simple python version management pipenv python development workflow human poetry python dependency management packaging made easy virtualenv tool create isolated python environment file library file manipulation mime type detection mimetypes python standard library map filename mime type pathpy module wrapper ospath pathlib python standard library crossplatform objectoriented path library pyfilesystem python filesystem abstraction layer pythonmagic python interface libmagic file type identification library unipath objectoriented approach filedirectory operation watchdog api shell utility monitor file system event foreign function interface library providing foreign function interface cffi foreign function interface python calling c code ctypes python standard library foreign function interface python calling c code pycuda python wrapper nvidias cuda api swig simplified wrapper interface generator form library working form deform python html form generation library influenced formish form generation library djangobootstrap bootstrap integration django djangobootstrap bootstrap integration django djangocrispyforms django app let create beautiful form elegant dry way djangoremoteforms platform independent django form serializer wtforms flexible form validation rendering library functional programming functional programming python coconut coconut variant python built simple elegant pythonic functional programming cytoolz cython implementation toolz high performance functional utility fnpy functional programming python implementation missing feature enjoy fp funcy fancy practical functional tool toolz collection functional utility iterators function dictionary gui development library working graphical user interface application curse builtin wrapper ncurses used create terminal gui application eel library making simple electronlike offline htmljs gui apps enaml creating beautiful userinterfaces declarative syntax like qml flexx flexx pure python toolkit creating gui us web technology rendering gooey turn command line program full gui application one line kivy library creating nui application running window linux mac o x android io pyglet crossplatform windowing multimedia library python pygobject python binding glibgobjectgiogtk gtk pyqt python binding qt crossplatform application ui framework pysimplegui wrapper tkinter qt wxpython remi pywebview lightweight crossplatform native wrapper around webview component tkinter tkinter python defacto standard gui package toga python native o native gui toolkit urwid library creating terminal gui application strong support widget event rich color etc wxpython blending wxwidgets c class library python game development awesome game development library cocosd cocosd framework building game demo graphicalinteractive application harfangd python framework vr game development pandad game engine developed disney pygame pygame set python module designed writing game pyogre python binding ogre render engine used game simulation anything pyopengl python ctypes binding opengl related apis pysdl ctypes based wrapper sdl library renpy visual novel engine geolocation library geocoding address working latitude longitude djangocountries django app provides country field model form geodjango worldclass geographic web framework geoip python api maxmind geoip legacy database geojson python binding utility geojson geopy python geocoding toolbox pygeoip pure python geoip api html manipulation library working html xml beautifulsoup providing pythonic idiom iterating searching modifying html xml bleach whitelistbased html sanitization text linkification library cssutils cs library python htmllib standardscompliant library parsing serializing html document fragment lxml fast easytouse versatile library handling html xml markupsafe implement xmlhtmlxhtml markup safe string python pyquery jquerylike library parsing html untangle convert xml document python object easy access weasyprint visual rendering engine html cs export pdf xmldataset simple xml parsing xmltodict working xml feel like working json http client library working http grequests request gevent asynchronous http request httplib comprehensive http client library request http request human treq python request like api built top twisteds http client urllib http library threadsafe connection pooling file post support sanity friendly hardware library programming hardware ino command line toolkit working arduino keyboard hook simulate global keyboard event window linux mouse hook simulate global mouse event window linux pingo pingo provides uniform api program device like raspberry pi pcduino intel galileo etc pyuserinput module crossplatform control mouse keyboard scapy brilliant packet manipulation library wifi python library command line tool working wifi linux image processing library manipulating image hmap image histogram remapping imgseek project searching collection image using visual similarity nudepy nudity detection pagan retro identicon avatar generation based input string hash pillow pillow friendly pil fork pybarcode create barcodes python without needing pil pygram instagramlike image filter pythonqrcode pure python qr code generator quad computer art based quadtrees scikitimage python library scientific image processing thumbor smart imaging service enables ondemand crop resizing flipping image wand python binding magickwand c api imagemagick implementation implementation python cpython default widely used implementation python programming language written c cython optimizing static compiler python clpython implementation python programming language written common lisp grumpy compiler interpreter powerful cpython replacement alpha ironpython implementation python programming language written c jython implementation python programming language written java jvm micropython lean efficient python programming language implementation numba python jit compiler llvm aimed scientific python peachpy x assembler embedded python pyjion jit python based upon coreclr pypy fast compliant implementation python language pyston python implementation using jit technique stackless python enhanced version python programming language interactive interpreter interactive python interpreter repl bpython fancy interface python interpreter jupyter notebook ipython rich toolkit help make using python interactively awesomejupyter ptpython advanced python repl built top pythonprompttoolkit internationalization library working babel internationalization library python pyicu wrapper international component unicode c library icu job scheduler library scheduling job apscheduler light powerful inprocess task scheduler let schedule function djangoschedule calendaring app django doit task runner build tool gunnery multipurpose task execution tool distributed system webbased interface joblib set tool provide lightweight pipelining python plan writing crontab file python like charm schedule python job scheduling human spiff powerful workflow engine implemented pure python taskflow python library help make task execution easy consistent reliable airflow airflow platform programmatically author schedule monitor workflow logging library generating working log eliot logging complex distributed system logbook logging replacement python logging python standard library logging facility python raven python client sentry logerror tracking crash reporting aggregation platform web application machine learning library machine learning also see awesomemachinelearning ho open source fast scalable machine learning platform metric machine learning evaluation metric nupic numenta platform intelligent computing scikitlearn popular python library machine learning spark ml apache spark scalable machine learning library vowpalporpoise lightweight python wrapper vowpal wabbit xgboost scalable portable distributed gradient boosting library microsoft window python programming microsoft window pythonxy scientificapplicationsoriented python distribution based qt spyder pythonlibs unofficial window binary python extension package pythonnet python integration net common language runtime clr pywin python extension window winpython portable development environment window miscellaneous useful library tool dont fit category blinker fast python inprocess signalevent dispatching system boltons set purepython utility itsdangerous various helper pas trusted data untrusted environment pluginbase simple flexible plugin system python tryton general purpose business framework natural language processing library working human language general gensim topic modeling human langidpy standalone language identification system nltk leading platform building python program work human language data pattern web mining module python polyglot natural language pipeline supporting hundred language pytext natural language modeling framework based pytorch pytorchnlp toolkit enabling rapid deep learning nlp prototyping research spacy library industrialstrength natural language processing python cython stanfordnlp stanford nlp group official python library supporting language chinese jieba popular chinese text segmentation library pkusegpython toolkit chinese word segmentation various domain snownlp library processing chinese text funnlp collection tool datasets chinese nlp network virtualization tool library virtual networking sdn software defined networking mininet popular network emulator api written python napalm crossvendor api manipulate network device pox pythonbased sdn control application openflow sdn controller news feed library building user activity djangoactivitystream generating generic activity stream action site stream framework building news feed notification system using cassandra redis orm library implement objectrelational mapping data mapping technique relational database django model django orm sqlalchemy python sql toolkit object relational mapper awesomesqlalchemy dataset store python dicts database work sqlite mysql postgresql orator orator orm provides simple yet beautiful activerecord implementation orm async orm peewee small expressive orm pony orm provides generatororiented interface sql pydal pure python database abstraction layer nosql database hotredis rich python data type redis mongoengine python objectdocumentmapper working mongodb pynamodb pythonic interface amazon dynamodb redisco python library simple model container persisted redis package management library package dependency management pip python package dependency manager pypi piptools set tool keep pinned python dependency fresh conda crossplatform pythonagnostic binary package manager package repository local pypi repository server proxy warehouse next generation python package repository pypi bandersnatch pypi mirroring tool provided python packaging authority pypa devpi pypi server packagingtestingrelease tool localshop local pypi server custom package automirroring pypi permission library allow deny user access data functionality djangoguardian implementation per object permission django djangorules tiny powerful app providing objectlevel permission django without requiring database process library starting communicating o process delegatorpy subprocesses human sarge yet another wrapper subprocess sh fullfledged subprocess replacement python recommender system library building recommender system annoy approximate nearest neighbor cpython optimized memory usage fastfm library factorization machine implicit fast python implementation collaborative filtering implicit datasets libffm library fieldaware factorization machine ffm lightfm python implementation number popular recommendation algorithm spotlight deep recommender model using pytorch surprise scikit building analyzing recommender system tensorrec recommendation engine framework tensorflow restful api library building restful apis django djangorestframework powerful flexible toolkit build web apis djangotastypie creating delicious apis django apps flask eve rest api framework powered flask mongodb good intention flaskapi browsable web apis flask flaskrestful quickly building rest apis flask pyramid cornice restful framework pyramid framework agnostic apistar smart web api framework designed python falcon highperformance framework building cloud apis web app backends fastapi modern fast web framework building apis python based standard python type hint hug python framework cleanly exposing apis sandman automated rest apis existing databasedriven system sanic python web server web framework thats written go fast vibora fast efficient asynchronous web framework inspired flask robotics library robotics pythonrobotics compilation various robotics algorithm visualization rospy library ro robot operating system rpc server rpccompatible server zerorpc zerorpc flexible rpc implementation based zeromq messagepack science library scientific computing also see pythonforscientists astropy community python library astronomy bcbionextgen providing bestpractice pipeline fully automated high throughput sequencing analysis bccb collection useful code related biological analysis biopython biopython set freely available tool biological computation cclib library parsing interpreting result computational chemistry package colour implementing comprehensive number colour theory transformation algorithm networkx highproductivity software complex network nipy collection neuroimaging toolkits numpy fundamental package scientific computing python open babel chemical toolbox designed speak many language chemical data obspy python toolbox seismology pydy short python dynamic used assist workflow modeling dynamic motion pymc markov chain monte carlo sampling toolkit qutip quantum toolbox python rdkit cheminformatics machine learning software scipy pythonbased ecosystem opensource software mathematics science engineering statsmodels statistical modeling econometrics python sympy python library symbolic mathematics zipline pythonic algorithmic trading library simpy processbased discreteevent simulation framework search library software indexing performing search query data elasticsearchpy official lowlevel python client elasticsearch elasticsearchdslpy official highlevel python client elasticsearch djangohaystack modular search django pysolr lightweight python wrapper apache solr whoosh fast pure python search engine library serialization library serializing complex data type marshmallow lightweight library converting complex object simple python datatypes pysimdjson python binding simdjson pythonrapidjson python wrapper around rapidjson ultrajson fast json decoder encoder written c python binding serverless framework framework developing serverless python code pythonlambda toolkit developing deploying python code aws lambda zappa tool deploying wsgi application aws lambda api gateway specific format processing library parsing manipulating specific text format general tablib module tabular datasets xl csv json yaml office openpyxl library reading writing excel xlsxxlsmxltxxltm file pyexcel providing one api reading manipulating writing csv od xl xlsx xlsm file pythondocx read query modifies microsoft word docx file pythonpptx python library creating updating powerpoint pptx file unoconv convert document format supported libreofficeopenoffice xlsxwriter python module creating excel xlsx file xlwings bsdlicensed library make easy call python excel vice versa xlwt xlrd writing reading data formatting information excel file pdf pdfminer tool extracting information pdf document pypdf library capable splitting merging transforming pdf page reportlab allowing rapid creation rich pdf document markdown mistune fastest full featured pure python parser markdown pythonmarkdown python implementation john grubers markdown yaml pyyaml yaml implementation python csv csvkit utility converting working csv archive unp command line tool unpack archive easily static site generator static site generator software take text template input produce html file output mkdocs markdown friendly documentation generator pelican static site generator support markdown rest syntax lektor easy use static cm blog engine nikola static website blog generator tagging library tagging item djangotaggit simple tagging django task queue library working task queue celery asynchronous task queuejob queue based distributed message passing huey little multithreaded task queue mrq distributed worker task queue python using redis gevent rq simple job queue python template engine library tool templating lexing jinja modern designer friendly templating language genshi python templating toolkit generation webaware output mako hyperfast lightweight templating python platform testing library testing codebases generating test data testing framework pytest mature fullfeatured python testing tool hypothesis hypothesis advanced quickcheck style property based testing library nose successor nose based unittest robot framework generic test automation framework unittest python standard library unit testing framework test runner green clean colorful test runner mamba definitive testing tool python born banner bdd tox auto build test distribution multiple python version gui web testing locust scalable user load testing tool written python pyautogui pyautogui crossplatform gui automation python module human being selenium python binding selenium webdriver sixpack languageagnostic ab testing framework splinter open source tool testing web application mock mock python standard library mocking patching library doublex powerful test double framework python freezegun travel time mocking datetime module httmock mocking library request python httpretty http request mock tool python mocket socket mock framework geventasynciossl support response utility library mocking request python library vcrpy record replay http interaction test object factory factoryboy test fixture replacement python mixer another fixture replacement supported django flask sqlalchemy peewee etc modelmommy creating random fixture testing django code coverage coverage code coverage measurement fake data mimesis python library help generate fake data fakedb fake database generator faker python package generates fake data radar generate random datetime time text processing library parsing manipulating plain text general chardet python compatible character encoding detector difflib python standard library helper computing delta ftfy make unicode text le broken consistent automagically fuzzywuzzy fuzzy string matching levenshtein fast computation levenshtein distance string similarity pangupy paranoid text spacing pyfiglet implementation figlet written python pypinyin convert chinese hanzi pinyin textdistance compute distance sequence algorithm unidecode ascii transliteration unicode text slugify awesomeslugify python slugify library preserve unicode pythonslugify python slugify library translates unicode ascii unicodeslugify slugifier generates unicode slug django dependency unique identifier hashids implementation hashids python shortuuid generator library concise unambiguous urlsafe uuids parser ply implementation lex yacc parsing tool python pygments generic syntax highlighter pyparsing general purpose framework generating parser pythonnameparser parsing human name individual component pythonphonenumbers parsing formatting storing validating international phone number pythonuseragents browser user agent parser sqlparse nonvalidating sql parser thirdparty apis library accessing third party service apis also see list python api wrapper library apachelibcloud one python library cloud boto python interface amazon web service djangowordpress wordpress model view django facebooksdk facebook platform python sdk googleapipythonclient google apis client library python gspread google spreadsheet python api twython python wrapper twitter api url manipulation library parsing url furl small python library make parsing manipulating url easy purl simple immutable url class clean api interrogation manipulation pyshorteners pure python url shortening lib webargs friendly library parsing http request argument builtin support popular web framework video library manipulating video gifs moviepy module scriptbased movie editing many format including animated gifs scikitvideo video processing routine scipy web asset management tool managing compressing minifying website asset djangocompressor compress linked inline javascript cs single cached file djangopipeline asset packaging library django djangostorages collection custom storage back end django fanstatic package optimizes serf static file dependency python package fileconveyor daemon detect sync file cdns ftp flaskassets help integrate webassets flask app webassets bundle optimizes manages unique cachebusting url static resource web content extracting library extracting web content htmltext convert html markdownformatted text lassie web content retrieval human micawber small library extracting rich content url newspaper news extraction article extraction content curation python pythonreadability fast python port arc readability tool requestshtml pythonic html parsing human sumy module automatic summarization text document html page textract extract text document word powerpoint pdfs etc toapi every web site provides apis web crawling library automate web scraping cola distributed crawling framework feedparser universal feed parser grab site scraping framework mechanicalsoup python library automating interaction website pyspider powerful spider system robobrowser simple pythonic library browsing web without standalone web browser scrapy fast highlevel screen scraping web crawling framework portia visual scraping scrapy web framework traditional full stack web framework also see restful api synchronous django popular web framework python awesomedjango flask microframework python awesomeflask pyramid small fast downtoearth open source python web framework awesomepyramid masonite modern developer centric python web framework asynchronous tornado web framework asynchronous networking library websocket library working websocket autobahnpython websocket wamp python twisted asyncio channel developerfriendly asynchrony django websockets library building websocket server client focus correctness simplicity wsgi server wsgicompatible web server bjoern asynchronous fast written c gunicorn preforked partly written c uwsgi project aim developing full stack building hosting service written c waitress multithreaded power pyramid werkzeug wsgi utility library python power flask easily embedded project resource discover new python library podcasts python import podcast podcastinit python byte python testing radio free python talk python test code twitter codetengu getpy importpython planetpython pycoders pypi pythontrending pythonweekly talkpython realpython website rcoolgithubprojects rpython awesome python libhunt django package full stack python python cheatsheet python zeef python real python trending python repository github today python weekly codetengu weekly import python newsletter pycoders weekly python weekly python trick contributing contribution always welcome please take look contribution guideline first keep pull request open im sure whether library awesome could vote adding pull request merged vote reach question opinionated list hesitate contact vinta twitter open issue github
2,Python,GitHub - public-apis/public-apis: A collective list of free APIs for use in software and web development.,"Public APIs 
A collective list of free APIs for use in software and web development.
Sponsor:

A public API for this project can be found here - thanks to DigitalOcean for helping us provide this service!
For information on contributing to this project, please see the contributing guide.
Please note a passing build status indicates all listed APIs are available since the last update. A failing build status indicates that 1 or more services may be unavailable at the moment.
Index

Animals
Anime
Anti-Malware
Art & Design
Books
Business
Calendar
Cloud Storage & File Sharing
Continuous Integration
Cryptocurrency
Currency Exchange
Data Validation
Development
Dictionaries
Documents & Productivity
Environment
Events
Finance
Food & Drink
Fraud Prevention
Games & Comics
Geocoding
Government
Health
Jobs
Machine Learning
Music
News
Open Data
Open Source Projects
Patent
Personality
Photography
Science & Math
Security
Shopping
Social
Sports & Fitness
Test Data
Text Analysis
Tracking
Transportation
URL Shorteners
Vehicle
Video
Weather

Animals



API
Description
Auth
HTTPS
CORS




Cat Facts
Daily cat facts
No
Yes
No


Cats
Pictures of cats from Tumblr
apiKey
Yes
Unknown


Dogs
Based on the Stanford Dogs Dataset
No
Yes
Yes


HTTPCat
Cat for every HTTP Status
No
Yes
Unknown


IUCN
IUCN Red List of Threatened Species
apiKey
No
Unknown


Movebank
Movement and Migration data of animals
No
Yes
Unknown


Petfinder
Adoption
OAuth
Yes
Yes


PlaceGOAT
Placeholder goat images
No
Yes
Unknown


RandomCat
Random pictures of cats
No
Yes
Yes


RandomDog
Random pictures of dogs
No
Yes
Yes


RandomFox
Random pictures of foxes
No
Yes
No


RescueGroups
Adoption
No
Yes
Unknown


Shibe.Online
Random pictures of Shibu Inu, cats or birds
No
No
No



‚¨Ü Back to Index
Anime



API
Description
Auth
HTTPS
CORS




AniList
Anime discovery & tracking
OAuth
Yes
Unknown


AnimeNewsNetwork
Anime industry news
No
Yes
Yes


Jikan
Unofficial MyAnimeList API
No
Yes
Yes


Kitsu
Anime discovery platform
OAuth
Yes
Unknown


Studio Ghibli
Resources from Studio Ghibli films
No
Yes
Unknown



‚¨Ü Back to Index
Anti-Malware



API
Description
Auth
HTTPS
CORS




AbuseIPDB
IP/domain/URL reputation
apiKey
Yes
Unknown


AlienVault Open Threat Exchange (OTX)
IP/domain/URL reputation
apiKey
Yes
Unknown


Google Safe Browsing
Google Link/Domain Flagging
apiKey
Yes
Unknown


Metacert
Metacert Link Flagging
apiKey
Yes
Unknown


VirusTotal
VirusTotal File/URL Analysis
apiKey
Yes
Unknown


Web Of Trust (WOT)
Website reputation
apiKey
Yes
Unknown



‚¨Ü Back to Index
Art & Design



API
Description
Auth
HTTPS
CORS




Behance
Design
apiKey
Yes
Unknown


Cooper Hewitt
Smithsonian Design Museum
apiKey
Yes
Unknown


Dribbble
Design
OAuth
No
Unknown


Harvard Art Museums
Art
apiKey
No
Unknown


Iconfinder
Icons
apiKey
Yes
Unknown


Icons8
Icons
OAuth
Yes
Unknown


Noun Project
Icons
OAuth
No
Unknown


Rijksmuseum
Art
apiKey
Yes
Unknown



‚¨Ü Back to Index
Books



API
Description
Auth
HTTPS
CORS




Bhagavad Gita
Bhagavad Gita text
OAuth
Yes
Yes


BookNomads
Books published in the Netherlands and Flanders (about 2.5 million), book covers and related data
No
Yes
Unknown


British National Bibliography
Books
No
No
Unknown


Goodreads
Books
apiKey
Yes
Unknown


Google Books
Books
OAuth
Yes
Unknown


LibGen
Library Genesis search engine
No
No
Unknown


Open Library
Books, book covers and related data
No
Yes
Unknown


Penguin Publishing
Books, book covers and related data
No
Yes
Unknown



‚¨Ü Back to Index
Business



API
Description
Auth
HTTPS
CORS




Charity Search
Non-profit charity data
apiKey
No
Unknown


Clearbit Logo
Search for company logos and embed them in your projects
apiKey
Yes
Unknown


Domainsdb.info
Registered Domain Names Search
No
Yes
Unknown


Freelancer
Hire freelancers to get work done
OAuth
Yes
Unknown


Gmail
Flexible, RESTful access to the user's inbox
OAuth
Yes
Unknown


Google Analytics
Collect, configure and analyze your data to reach the right audience
OAuth
Yes
Unknown


MailboxValidator
Validate email address to improve deliverability
apiKey
Yes
Unknown


mailgun
Email Service
apiKey
Yes
Unknown


markerapi
Trademark Search
No
No
Unknown


Ticksel
Friendly website analytics made for humans
No
Yes
Unknown


Trello
Boards, lists and cards to help you organize and prioritize your projects
OAuth
Yes
Unknown



‚¨Ü Back to Index
Calendar



API
Description
Auth
HTTPS
CORS




Calendar Index
Worldwide Holidays and Working Days
apiKey
Yes
Yes


Church Calendar
Catholic liturgical calendar
No
No
Unknown


Czech Namedays Calendar
Lookup for a name and returns nameday date
No
No
Unknown


Google Calendar
Display, create and modify Google calendar events
OAuth
Yes
Unknown


Hebrew Calendar
Convert between Gregorian and Hebrew, fetch Shabbat and Holiday times, etc
No
No
Unknown


Holidays
Historical data regarding holidays
apiKey
Yes
Unknown


LectServe
Protestant liturgical calendar
No
No
Unknown


Nager.Date
Public holidays for more than 90 countries
No
Yes
No


Namedays Calendar
Provides namedays for multiple countries
No
Yes
Yes


Non-Working Days
Database of ICS files for non working days
No
Yes
Unknown


Russian Calendar
Check if a date is a Russian holiday or not
No
Yes
No



‚¨Ü Back to Index
Cloud Storage & File Sharing



API
Description
Auth
HTTPS
CORS




Box
File Sharing and Storage
OAuth
Yes
Unknown


Dropbox
File Sharing and Storage
OAuth
Yes
Unknown


Google Drive
File Sharing and Storage
OAuth
Yes
Unknown


OneDrive
File Sharing and Storage
OAuth
Yes
Unknown


Pastebin
Plain Text Storage
apiKey
Yes
Unknown


Temporal
IPFS based file storage and sharing with optional IPNS naming
apiKey
Yes
No


WeTransfer
File Sharing
apiKey
Yes
Yes



‚¨Ü Back to Index
Continuous Integration



API
Description
Auth
HTTPS
CORS




CircleCI
Automate the software development process using continuous integration and continuous delivery
apiKey
Yes
Unknown


Codeship
Codeship is a Continuous Integration Platform in the cloud
apiKey
Yes
Unknown


Travis CI
Sync your GitHub projects with Travis CI to test your code in minutes
apiKey
Yes
Unknown



‚¨Ü Back to Index
Cryptocurrency



API
Description
Auth
HTTPS
CORS




Binance
Exchange for Trading Cryptocurrencies based in China
apiKey
Yes
Unknown


BitcoinAverage
Digital Asset Price Data for the blockchain industry
apiKey
Yes
Unknown


BitcoinCharts
Financial and Technical Data related to the Bitcoin Network
No
Yes
Unknown


Bitfinex
Cryptocurrency Trading Platform
apiKey
Yes
Unknown


Bitmex
Real-Time Cryptocurrency derivatives trading platform based in Hong Kong
apiKey
Yes
Unknown


Bittrex
Next Generation Crypto Trading Platform
apiKey
Yes
Unknown


Block
Bitcoin Payment, Wallet & Transaction Data
apiKey
Yes
Unknown


Blockchain
Bitcoin Payment, Wallet & Transaction Data
No
Yes
Unknown


CoinAPI
All Currency Exchanges integrate under a single api
apiKey
Yes
No


Coinbase
Bitcoin, Bitcoin Cash, Litecoin and Ethereum Prices
apiKey
Yes
Unknown


Coinbase Pro
Cryptocurrency Trading Platform
apiKey
Yes
Unknown


CoinDesk
Bitcoin Price Index
No
No
Unknown


CoinGecko
Cryptocurrency Price, Market, and Developer/Social Data
No
Yes
Yes


Coinigy
Interacting with Coinigy Accounts and Exchange Directly
apiKey
Yes
Unknown


CoinLayer
Real-time Crypto Currency Exchange Rates
apiKey
Yes
Unknown


Coinlib
Crypto Currency Prices
apiKey
Yes
Unknown


Coinlore
Cryptocurrencies prices, volume and more
No
Yes
Unknown


CoinMarketCap
Cryptocurrencies Prices
apiKey
Yes
Unknown


Coinpaprika
Cryptocurrencies prices, volume and more
No
Yes
Yes


CoinRanking
Live Cryptocurrency data
No
Yes
Unknown


CryptoCompare
Cryptocurrencies Comparison
No
Yes
Unknown


Cryptonator
Cryptocurrencies Exchange Rates
No
Yes
Unknown


Gemini
Cryptocurrencies Exchange
No
Yes
Unknown


ICObench
Various information on listing, ratings, stats, and more
apiKey
Yes
Unknown


Livecoin
Cryptocurrency Exchange
No
Yes
Unknown


MercadoBitcoin
Brazilian Cryptocurrency Information
No
Yes
Unknown


Nexchange
Automated cryptocurrency exchange service
No
No
Yes


NiceHash
Largest Crypto Mining Marketplace
apiKey
Yes
Unknown


Poloniex
US based digital asset exchange
apiKey
Yes
Unknown


WorldCoinIndex
Cryptocurrencies Prices
apiKey
Yes
Unknown



‚¨Ü Back to Index
Currency Exchange



API
Description
Auth
HTTPS
CORS




1Forge
Forex currency market data
apiKey
Yes
Unknown


Currencylayer
Exchange rates and currency conversion
apiKey
Yes
Unknown


Czech National Bank
A collection of exchange rates
No
Yes
Unknown


ExchangeRate-API
Free currency conversion
No
Yes
Yes


Exchangeratesapi.io
Exchange rates with currency conversion
No
Yes
Yes


Fixer.io
Exchange rates and currency conversion
apiKey
Yes
Unknown


Frankfurter
Exchange rates, currency conversion and time series
No
Yes
Yes


ratesapi
Free exchange rates and historical rates
No
Yes
Unknown



‚¨Ü Back to Index
Data Validation



API
Description
Auth
HTTPS
CORS




Cloudmersive Validate
Validate email addresses, phone numbers, VAT numbers and domain names
apiKey
Yes
Yes


languagelayer
Language detection
No
Yes
Unknown


Lob.com
US Address Verification
apiKey
Yes
Unknown


mailboxlayer
Email address validation
No
Yes
Unknown


NumValidate
Open Source phone number validation
No
Yes
Unknown


numverify
Phone number validation
No
Yes
Unknown


PurgoMalum
Content validator against profanity & obscenity
No
No
Unknown


US Autocomplete
Enter address data quickly with real-time address suggestions
apiKey
Yes
Yes


US Extract
Extract postal addresses from any text including emails
apiKey
Yes
Yes


US Street Address
Validate and append data for any US postal address
apiKey
Yes
Yes


vatlayer
VAT number validation
No
Yes
Unknown



‚¨Ü Back to Index
Development



API
Description
Auth
HTTPS
CORS




24 Pull Requests
Project to promote open source collaboration during December
No
Yes
Yes


Agify.io
Estimates the age from a first name
No
Yes
Yes


ApiFlash
Chrome based screenshot API for developers
apiKey
Yes
Unknown


Apility.io
IP, Domains and Emails anti-abuse API blocklist
No
Yes
Yes


APIs.guru
Wikipedia for Web APIs, OpenAPI/Swagger specs for public APIs
No
Yes
Unknown


BetterMeta
Return a site's meta tags in JSON format
X-Mashape-Key
Yes
Unknown


Bitbucket
Pull public information for a Bitbucket account
No
Yes
Unknown


Bored
Find random activities to fight boredom
No
Yes
Unknown


Browshot
Easily make screenshots of web pages in any screen size, as any device
apiKey
Yes
Unknown


CDNJS
Library info on CDNJS
No
Yes
Unknown


Changelogs.md
Structured changelog metadata from open source projects
No
Yes
Unknown


CountAPI
Free and simple counting service. You can use it to track page hits and specific events
No
Yes
Yes


DigitalOcean Status
Status of all DigitalOcean services
No
Yes
Unknown


DomainDb Info
Domain name search to find all domains containing particular words/phrases/etc
No
Yes
Unknown


Faceplusplus
A tool to detect face
OAuth
Yes
Unknown


Genderize.io
Estimates a gender from a first name
No
Yes
Yes


GitHub
Make use of GitHub repositories, code and user info programmatically
OAuth
Yes
Yes


Gitlab
Automate GitLab interaction programmatically
OAuth
Yes
Unknown


Gitter
Chat for GitHub
OAuth
Yes
Unknown


HTTP2.Pro
Test endpoints for client and server HTTP/2 protocol support
No
Yes
Unknown


IBM Text to Speech
Convert text to speech
apiKey
Yes
Yes


import.io
Retrieve structured data from a website or RSS feed
apiKey
Yes
Unknown


IPify
A simple IP Address API
No
Yes
Unknown


IPinfo
Another simple IP Address API
No
Yes
Unknown


JSON 2 JSONP
Convert JSON to JSONP (on-the-fly) for easy cross-domain data requests using client-side JavaScript
No
Yes
Unknown


JSONbin.io
Free JSON storage service. Ideal for small scale Web apps, Websites and Mobile apps
apiKey
Yes
Yes


Judge0
Compile and run source code
No
Yes
Unknown


Let's Validate
Uncovers the technologies used on websites and URL to thumbnail
No
Yes
Unknown


License-API
Unofficial REST API for choosealicense.com
No
Yes
No


LiveEdu
Live Coding Streaming
OAuth
Yes
Unknown


MAC address vendor lookup
Retrieve vendor details and other information regarding a given MAC address or an OUI
apiKey
Yes
Yes


Myjson
A simple JSON store for your web or mobile app
No
No
Unknown


Nationalize.io
Estimate the nationality of a first name
No
Yes
Yes


OOPSpam
Multiple spam filtering service
No
Yes
Yes


Plino
Spam filtering system
No
Yes
Unknown


Postman
Tool for testing APIs
apiKey
Yes
Unknown


ProxyCrawl
Scraping and crawling anticaptcha service
apiKey
Yes
Unknown


Public APIs
A collective list of free JSON APIs for use in web development
No
Yes
Unknown


Pusher Beams
Push notifications for Android & iOS
apiKey
Yes
Unknown


QR code
Create an easy to read QR code and URL shortener
No
Yes
Yes


QR code
Generate and decode / read QR code graphics
No
Yes
Unknown


QuickChart
Generate chart and graph images
No
Yes
Yes


ReqRes
A hosted REST-API ready to respond to your AJAX requests
No
Yes
Unknown


Scrape Website Email
Grabs email addresses from a URL
X-Mashape-Key
Yes
Unknown


ScraperApi
Easily build scalable web scrapers
apiKey
Yes
Unknown


ScreenshotAPI.net
Create pixel-perfect website screenshots
apiKey
Yes
Yes


SHOUTCLOUD
ALL-CAPS AS A SERVICE
No
No
Unknown


StackExchange
Q&A forum for developers
OAuth
Yes
Unknown


Verse
Check what's the latest version of your favorite open-source project
No
Yes
Unknown


XML to JSON
Integration developer utility APIs
No
Yes
Unknown



‚¨Ü Back to Index
Dictionaries



API
Description
Auth
HTTPS
CORS




Lingua Robot
Word definitions, pronunciations, synonyms, antonyms and others
apiKey
Yes
Yes


Merriam-Webster
Dictionary and Thesaurus Data
apiKey
Yes
Unknown


OwlBot
Definitions with example sentence and photo if available
apiKey
Yes
Yes


Oxford
Dictionary Data
apiKey
Yes
No


Wordnik
Dictionary Data
apiKey
No
Unknown


Words
Definitions and synonyms for more than 150,000 words
apiKey
Yes
Unknown



‚¨Ü Back to Index
Documents & Productivity



API
Description
Auth
HTTPS
CORS




Cloudmersive Document and Data Conversion
HTML/URL to PDF/PNG, Office documents to PDF, image conversion
apiKey
Yes
Yes


File.io
File Sharing
No
Yes
Unknown


Mercury
Web parser
apiKey
Yes
Unknown


pdflayer
HTML/URL to PDF
apiKey
Yes
Unknown


Pocket
Bookmarking service
OAuth
Yes
Unknown


PrexView
Data from XML or JSON to PDF, HTML or Image
apiKey
Yes
Unknown


Restpack
Provides screenshot, HTML to PDF and content extraction APIs
apiKey
Yes
Unknown


Todoist
Todo Lists
OAuth
Yes
Unknown


Vector Express
Free vector file converting API
No
No
Yes


WakaTime
Automated time tracking leaderboards for programmers
No
Yes
Unknown


Wunderlist
Todo Lists
OAuth
Yes
Unknown



‚¨Ü Back to Index
Environment



API
Description
Auth
HTTPS
CORS




AirVisual
Air quality and weather data
apiKey
Yes
Unknown


Gr√ºnstromIndex
Green Power Index for Germany (Gr√ºnstromindex/GSI)
No
No
Yes


OpenAQ
Open air quality data
apiKey
Yes
Unknown


PM25.in
Air quality of China
apiKey
No
Unknown


PVWatts
Energy production photovoltaic (PV) energy systems
apiKey
Yes
Unknown


UK Carbon Intensity
The Official Carbon Intensity API for Great Britain developed by National Grid
No
Yes
Unknown



‚¨Ü Back to Index
Events



API
Description
Auth
HTTPS
CORS




Eventbrite
Find events
OAuth
Yes
Unknown


Picatic
Sell tickets anywhere
apiKey
Yes
Unknown


Ticketmaster
Search events, attractions, or venues
apiKey
Yes
Unknown



‚¨Ü Back to Index
Finance



API
Description
Auth
HTTPS
CORS




Alpha Vantage
Realtime and historical stock data
apiKey
Yes
Unknown


Barchart OnDemand
Stock, Futures and Forex Market Data
apiKey
Yes
Unknown


Consumer Financial Protection Bureau
Financial services consumer complaint data
apiKey
Yes
Unknown


Financial Modeling Prep
Stock information and data
No
Yes
Unknown


IEX
Realtime stock data
No
Yes
Yes


IEX Cloud
Realtime & Historical Stock and Market Data
apiKey
Yes
Yes


IG
Spreadbetting and CFD Market Data
apiKey
Yes
Unknown


Plaid
Connect with users‚Äô bank accounts and access transaction data
apiKey
Yes
Unknown


Razorpay IFSC
Indian Financial Systems Code (Bank Branch Codes)
No
Yes
Unknown


RoutingNumbers.info
ACH/NACHA Bank Routing Numbers
No
Yes
Unknown


Tradier
US equity/option market data (delayed, intraday, historical)
OAuth
Yes
Yes


VAT Rates
A collection of all VAT rates for EU countries
No
Yes
Unknown


YNAB
Budgeting & Planning
OAuth
Yes
Yes



‚¨Ü Back to Index
Food & Drink



API
Description
Auth
HTTPS
CORS




Edamam
Recipe Search
apiKey
Yes
Unknown


LCBO
Alcohol
apiKey
Yes
Unknown


Open Brewery DB
Breweries, Cideries and Craft Beer Bottle Shops
No
Yes
Yes


Open Food Facts
Food Products Database
No
Yes
Unknown


PunkAPI
Brewdog Beer Recipes
No
Yes
Unknown


Recipe Puppy
Food
No
No
Unknown


TacoFancy
Community-driven taco database
No
No
Unknown


The Report of the Week
Food & Drink Reviews
No
Yes
Unknown


TheCocktailDB
Cocktail Recipes
apiKey
Yes
Yes


TheMealDB
Meal Recipes
apiKey
Yes
Yes


What's on the menu?
NYPL human-transcribed historical menu collection
apiKey
No
Unknown


Zomato
Discover restaurants
apiKey
Yes
Unknown



‚¨Ü Back to Index
Fraud Prevention



API
Description
Auth
HTTPS
CORS




FraudLabs Pro
Screen order information using AI to detect frauds
apiKey
Yes
Unknown


Whitepages Pro
Global identity verification with phone, address, email and IP
apiKey
Yes
Unknown


Whitepages Pro
Phone reputation to detect spammy phones
apiKey
Yes
Unknown


Whitepages Pro
Get an owner‚Äôs name, address, demographics based on the phone number
apiKey
Yes
Unknown


Whitepages Pro
Phone number validation, line_type, carrier append
apiKey
Yes
Unknown


Whitepages Pro
Get normalized physical address, residents, address type and validity
apiKey
Yes
Unknown



‚¨Ü Back to Index
Games & Comics



API
Description
Auth
HTTPS
CORS




Age of Empires II
Get information about Age of Empires II resources
No
Yes
Unknown


AmiiboAPI
Amiibo Information
No
No
Yes


Battle.net
Blizzard Entertainment
apiKey
Yes
Unknown


Chuck Norris Database
Jokes
No
No
Unknown


Clash of Clans
Clash of Clans Game Information
apiKey
Yes
Unknown


Clash Royale
Clash Royale Game Information
apiKey
Yes
Unknown


Comic Vine
Comics
No
Yes
Unknown


Deck of Cards
Deck of Cards
No
No
Unknown


Destiny The Game
Bungie Platform API
apiKey
Yes
Unknown


Dota 2
Provides information about Player stats , Match stats, Rankings for Dota 2
No
Yes
Unknown


Dungeons and Dragons
Reference for 5th edition spells, classes, monsters, and more
No
No
No


Eve Online
Third-Party Developer Documentation
OAuth
Yes
Unknown


Final Fantasy XIV
Final Fantasy XIV Game data API
No
Yes
Yes


Fortnite
Fortnite Stats & Cosmetics
apiKey
Yes
Yes


Fortnite
Fortnite Stats
apiKey
Yes
Unknown


Giant Bomb
Video Games
No
Yes
Unknown


Guild Wars 2
Guild Wars 2 Game Information
apiKey
Yes
Unknown


Halo
Halo 5 and Halo Wars 2 Information
apiKey
Yes
Unknown


Hearthstone
Hearthstone Cards Information
X-Mashape-Key
Yes
Unknown


Hypixel
Hypixel player stats
apiKey
Yes
Unknown


IGDB.com
Video Game Database
apiKey
Yes
Unknown


JokeAPI
Programming, Miscellaneous and Dark Jokes
No
Yes
Yes


Jokes
Programming and general jokes
No
Yes
Unknown


Jservice
Jeopardy Question Database
No
No
Unknown


Magic The Gathering
Magic The Gathering Game Information
No
No
Unknown


Marvel
Marvel Comics
apiKey
No
Unknown


mod.io
Cross Platform Mod API
apiKey
Yes
Unknown


Open Trivia
Trivia Questions
No
Yes
Unknown


PandaScore
E-sports games and results
apiKey
Yes
Unknown


PlayerUnknown's Battlegrounds
PUBG Stats
apiKey
Yes
Unknown


Pok√©api
Pok√©mon Information
No
Yes
Unknown


Pok√©mon TCG
Pok√©mon TCG Information
No
Yes
Unknown


Rick and Morty
All the Rick and Morty information, including images
No
Yes
Yes


Riot Games
League of Legends Game Information
apiKey
Yes
Unknown


Scryfall
Magic: The Gathering database
No
Yes
Yes


Steam
Steam Client Interaction
OAuth
Yes
Unknown


SuperHeroes
All SuperHeroes and Villains data from all universes under a single API
apiKey
Yes
Unknown


Tronald Dump
The dumbest things Donald Trump has ever said
No
Yes
Unknown


Vainglory
Vainglory Players, Matches and Telemetry
apiKey
Yes
Yes


Wargaming.net
Wargaming.net info and stats
apiKey
Yes
No


xkcd
Retrieve xkcd comics as JSON
No
Yes
No



‚¨Ü Back to Index
Geocoding



API
Description
Auth
HTTPS
CORS




adresse.data.gouv.fr
Address database of France, geocoding and reverse
No
Yes
Unknown


Battuta
A (country/region/city) in-cascade location API
apiKey
No
Unknown


Bing Maps
Create/customize digital maps based on Bing Maps data
apiKey
Yes
Unknown


bng2latlong
Convert British OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude
No
Yes
Yes


CitySDK
Open APIs for select European cities
No
Yes
Unknown


Daum Maps
Daum Maps provide multiple APIs for Korean maps
apiKey
No
Unknown


FreeGeoIP
Free geo ip information, no registration required. 15k/hour rate limit
No
Yes
Yes


GeoApi
French geographical data
No
Yes
Unknown


Geocod.io
Address geocoding / reverse geocoding in bulk
apiKey
Yes
Unknown


Geocode.xyz
Provides worldwide forward/reverse geocoding, batch geocoding and geoparsing
No
Yes
Unknown


GeoDataSource
Geocoding of city name by using latitude and longitude coordinates
apiKey
Yes
Unknown


GeoJS
IP geolocation with ChatOps integration
No
Yes
Yes


GeoNames
Place names and other geographical data
No
No
Unknown


geoPlugin
IP geolocation and currency conversion
No
Yes
Yes


Google Earth Engine
A cloud-based platform for planetary-scale environmental data analysis
apiKey
Yes
Unknown


Google Maps
Create/customize digital maps based on Google Maps data
apiKey
Yes
Unknown


HelloSalut
Get hello translation following user language
No
Yes
Unknown


HERE Maps
Create/customize digital maps based on HERE Maps data
apiKey
Yes
Unknown


Indian Cities
Get all Indian cities in a clean JSON Format
No
Yes
Yes


IP 2 Country
Map an IP to a country
No
Yes
Unknown


IP Address Details
Find geolocation with ip address
No
Yes
Unknown


IP Location
Find location with ip address
No
No
Unknown


IP Location
Find IP address location information
No
Yes
Unknown


IP Sidekick
Geolocation API that returns extra information about an IP address
apiKey
Yes
Unknown


IP Vigilante
Free IP Geolocation API
No
Yes
Unknown


IP2Location
IP geolocation web service to get more than 55 parameters
apiKey
Yes
Unknown


IP2Proxy
Detect proxy and VPN using IP address
apiKey
Yes
Unknown


IPGeolocationAPI.com
Locate your visitors by IP with country details
No
Yes
Yes


IPInfoDB
Free Geolocation tools and APIs for country, region, city and time zone lookup by IP address
apiKey
Yes
Unknown


ipstack
Locate and identify website visitors by IP address
apiKey
Yes
Unknown


Kwelo Network
Locate and get detailed information on IP address
No
Yes
Yes


LocationIQ
Provides forward/reverse geocoding and batch geocoding
apiKey
Yes
Yes


Mapbox
Create/customize beautiful digital maps
apiKey
Yes
Unknown


Mexico
Mexico RESTful zip codes API
No
Yes
Unknown


One Map, Singapore
Singapore Land Authority REST API services for Singapore addresses
apiKey
Yes
Unknown


OnWater
Determine if a lat/lon is on water or land
No
Yes
Unknown


OpenCage
Forward and reverse geocoding using open data
apiKey
Yes
Yes


OpenStreetMap
Navigation, geolocation and geographical data
OAuth
No
Unknown


PostcodeData.nl
Provide geolocation data based on postcode for Dutch addresses
No
No
Unknown


Postcodes.io
Postcode lookup & Geolocation for the UK
No
Yes
Yes


REST Countries
Get information about countries via a RESTful API
No
Yes
Unknown


SmartIP.io
IP Geolocation and Threat Intelligence API
apiKey
Yes
Yes


Uebermaps
Discover and share maps with friends
apiKey
Yes
Unknown


US ZipCode
Validate and append data for any US ZipCode
apiKey
Yes
Yes


Utah AGRC
Utah Web API for geocoding Utah addresses
apiKey
Yes
Unknown


ViaCep
Brazil RESTful zip codes API
No
Yes
Unknown


ZipCodeAPI
US zip code distance, radius and location API
apiKey
Yes
Unknown


Zippopotam
Get information about place such as country, city, state, etc
No
No
Unknown



‚¨Ü Back to Index
Government



API
Description
Auth
HTTPS
CORS




BCLaws
Access to the laws of British Columbia
No
No
Unknown


BusinessUSA
Authoritative information on U.S. programs, events, services and more
apiKey
Yes
Unknown


Census.gov
The US Census Bureau provides various APIs and data sets on demographics and businesses
No
Yes
Unknown


City, Lyon Opendata
Lyon(FR) City Open Data
apiKey
Yes
Unknown


City, Nantes Opendata
Nantes(FR) City Open Data
apiKey
Yes
Unknown


City, Prague Opendata
Prague(CZ) City Open Data
No
No
Unknown


Code.gov
The primary platform for Open Source and code sharing for the U.S. Federal Government
apiKey
Yes
Unknown


Colorado Data Engine
Formatted and geolocated Colorado public data
No
Yes
Unknown


Colorado Information Marketplace
Colorado State Government Open Data
No
Yes
Unknown


Data USA
US Public Data
No
Yes
Unknown


Data.gov
US Government Data
apiKey
Yes
Unknown


Data.parliament.uk
Contains live datasets including information about petitions, bills, MP votes, attendance and more
No
No
Unknown


District of Columbia Open Data
Contains D.C. government public datasets, including crime, GIS, financial data, and so on
No
Yes
Unknown


EPA
Web services and data sets from the US Environmental Protection Agency
No
Yes
Unknown


FEC
Information on campaign donations in federal elections
apiKey
Yes
Unknown


Federal Register
The Daily Journal of the United States Government
No
Yes
Unknown


Food Standards Agency
UK food hygiene rating data API
No
No
Unknown


Open Government, Australia
Australian Government Open Data
No
Yes
Unknown


Open Government, Belgium
Belgium Government Open Data
No
Yes
Unknown


Open Government, Canada
Canadian Government Open Data
No
No
Unknown


Open Government, France
French Government Open Data
apiKey
Yes
Unknown


Open Government, India
Indian Government Open Data
apiKey
Yes
Unknown


Open Government, Italy
Italy Government Open Data
No
Yes
Unknown


Open Government, New Zealand
New Zealand Government Open Data
No
Yes
Unknown


Open Government, Romania
Romania Government Open Data
No
No
Unknown


Open Government, Taiwan
Taiwan Government Open Data
No
Yes
Unknown


Open Government, USA
United States Government Open Data
No
Yes
Unknown


Regulations.gov
Federal regulatory materials to increase understanding of the Federal rule making process
apiKey
Yes
Unknown


Represent by Open North
Find Canadian Government Representatives
No
Yes
Unknown


USAspending.gov
US federal spending data
No
Yes
Unknown



‚¨Ü Back to Index
Health



API
Description
Auth
HTTPS
CORS




BetterDoctor
Detailed information about doctors in your area
apiKey
Yes
Unknown


Diabetes
Logging and retrieving diabetes information
No
No
Unknown


Flutrack
Influenza-like symptoms with geotracking
No
No
Unknown


Healthcare.gov
Educational content about the US Health Insurance Marketplace
No
Yes
Unknown


Lexigram
NLP that extracts mentions of clinical concepts from text, gives access to clinical ontology
apiKey
Yes
Unknown


Makeup
Makeup Information
No
No
Unknown


Medicare
Access to the data from the CMS - medicare.gov
No
Yes
Unknown


NPPES
National Plan & Provider Enumeration System, info on healthcare providers registered in US
No
Yes
Unknown


Nutritionix
Worlds largest verified nutrition database
apiKey
Yes
Unknown


openFDA
Public FDA data about drugs, devices and foods
No
Yes
Unknown


USDA Nutrients
National Nutrient Database for Standard Reference
No
Yes
Unknown



‚¨Ü Back to Index
Jobs



API
Description
Auth
HTTPS
CORS




Adzuna
Job board aggregator
apiKey
Yes
Unknown


Authentic Jobs
Job board for designers, hackers and creative pros
apiKey
Yes
Unknown


Careerjet
Job search engine
apiKey
No
Unknown


Github Jobs
Jobs for software developers
No
Yes
Yes


GraphQL Jobs
Jobs with GraphQL
No
Yes
Yes


Indeed
Job board aggregator
apiKey
Yes
Unknown


Jobs2Careers
Job aggregator
apiKey
Yes
Unknown


Jooble
Job search engine
apiKey
Yes
Unknown


Juju
Job search engine
apiKey
No
Unknown


Open Skills
Job titles, skills and related jobs data
No
No
Unknown


Reed
Job board aggregator
apiKey
Yes
Unknown


Search.gov Jobs
Tap into a list of current jobs openings with the United States government
No
Yes
Unknown


The Muse
Job board and company profiles
apiKey
Yes
Unknown


Upwork
Freelance job board and management system
OAuth
Yes
Unknown


USAJOBS
US government job board
apiKey
Yes
Unknown


ZipRecruiter
Job search app and website
apiKey
Yes
Unknown



‚¨Ü Back to Index
Machine Learning



API
Description
Auth
HTTPS
CORS




Clarifai
Computer Vision
OAuth
Yes
Unknown


Cloudmersive
Image captioning, face recognition, NSFW classification
apiKey
Yes
Yes


Deepcode
AI for code review
No
Yes
Unknown


Dialogflow
Natural Language Processing
apiKey
Yes
Unknown


Keen IO
Data Analytics
apiKey
Yes
Unknown


Time Door
A time series analysis API
apiKey
Yes
Yes


Unplugg
Forecasting API for timeseries data
apiKey
Yes
Unknown


Wit.ai
Natural Language Processing
OAuth
Yes
Unknown



‚¨Ü Back to Index
Music



API
Description
Auth
HTTPS
CORS




AI Mastering
Automated Music Mastering
apiKey
Yes
Yes


Bandsintown
Music Events
No
Yes
Unknown


Deezer
Music
OAuth
Yes
Unknown


Discogs
Music
OAuth
Yes
Unknown


Genius
Crowdsourced lyrics and music knowledge
OAuth
Yes
Unknown


Genrenator
Music genre generator
No
Yes
Unknown


iTunes Search
Software products
No
Yes
Unknown


Jamendo
Music
OAuth
Yes
Unknown


KKBOX
Get music libraries, playlists, charts, and perform out of KKBOX's platform
OAuth
Yes
Unknown


LastFm
Music
apiKey
Yes
Unknown


Lyrics.ovh
Simple API to retrieve the lyrics of a song
No
Yes
Unknown


Mixcloud
Music
OAuth
Yes
Yes


MusicBrainz
Music
No
Yes
Unknown


Musikki
Music
apiKey
Yes
Unknown


Musixmatch
Music
apiKey
Yes
Unknown


Openwhyd
Download curated playlists of streaming tracks (YouTube, SoundCloud, etc...)
No
Yes
No


Songkick
Music Events
OAuth
Yes
Unknown


Songsterr
Provides guitar, bass and drums tabs and chords
No
Yes
Unknown


SoundCloud
Allow users to upload and share sounds
OAuth
Yes
Unknown


Spotify
View Spotify music catalog, manage users' libraries, get recommendations and more
OAuth
Yes
Unknown


TasteDive
Similar artist API (also works for movies and TV shows)
apiKey
Yes
Unknown


TheAudioDB
Music
apiKey
Yes
Unknown


Vagalume
Crowdsourced lyrics and music knowledge
apiKey
Yes
Unknown



‚¨Ü Back to Index
News



API
Description
Auth
HTTPS
CORS




Associated Press
Search for news and metadata from Associated Press
apiKey
Yes
Unknown


Chronicling America
Provides access to millions of pages of historic US newspapers from the Library of Congress
No
No
Unknown


Currents
Latest news published in various news sources, blogs and forums
apiKey
Yes
Yes


Feedbin
RSS reader
OAuth
Yes
Unknown


Feedster
Searchable and categorized collections of RSS feeds
apiKey
Yes
Unknown


New York Times
Provides news
apiKey
Yes
Unknown


News
Headlines currently published on a range of news sources and blogs
apiKey
Yes
Unknown


NPR One
Personalized news listening experience from NPR
OAuth
Yes
Unknown


The Guardian
Access all the content the Guardian creates, categorised by tags and section
apiKey
Yes
Unknown


The Old Reader
RSS reader
apiKey
Yes
Unknown



‚¨Ü Back to Index
Open Data



API
Description
Auth
HTTPS
CORS




18F
Unofficial US Federal Government API Development
No
No
Unknown


Abbreviation
Get abbreviations and meanings
X-Mashape-Key
Yes
Unknown


Archive.org
The Internet Archive
No
Yes
Unknown


ARSAT
ARSAT public data
apiKey
Yes
Unknown


Callook.info
United States ham radio callsigns
No
Yes
Unknown


CARTO
Location Information Prediction
apiKey
Yes
Unknown


Celebinfo
Celebrity information
X-Mashape-Key
Yes
Unknown


CivicFeed
News articles and public datasets
apiKey
Yes
Unknown


Datakick
The open product database
apiKey
Yes
Unknown


Enigma Public
Broadest collection of public data
apiKey
Yes
Yes


fonoApi
Mobile Device Description
No
Yes
Unknown


French Address Search
Address search via the French Government
No
Yes
Unknown


LinkPreview
Get JSON formatted summary with title, description and preview image for any requested URL
apiKey
Yes
Yes


Marijuana Strains
Marijuana strains, races, flavors and effects
apiKey
No
Unknown


Microlink.io
Extract structured data from any website
No
Yes
Yes


OpenCorporates
Data on corporate entities and directors in many countries
apiKey
Yes
Unknown


Qmeta
Global Search Engine
apiKey
Yes
Unknown


Quandl
Stock Market Data
No
Yes
Unknown


Recreation Information Database
Recreational areas, federal lands, historic sites, museums, and other attractions/resources(US)
apiKey
Yes
Unknown


Scoop.it
Content Curation Service
apiKey
No
Unknown


Teleport
Quality of Life Data
No
Yes
Unknown


Universities List
University names, countries and domains
No
Yes
Unknown


University of Oslo
Courses, lecture videos, detailed information for courses etc. for the University of Oslo (Norway)
No
Yes
Unknown


UPC database
More than 1.5 million barcode numbers from all around the world
apiKey
Yes
Unknown


Wikidata
Collaboratively edited knowledge base operated by the Wikimedia Foundation
OAuth
Yes
Unknown


Wikipedia
Mediawiki Encyclopedia
No
Yes
Unknown


Yelp
Find Local Business
OAuth
Yes
Unknown



‚¨Ü Back to Index
Open Source Projects



API
Description
Auth
HTTPS
CORS




Countly
Countly web analytics
No
No
Unknown


Drupal.org
Drupal.org
No
Yes
Unknown


Evil Insult Generator
Evil Insults
No
Yes
Yes


Libraries.io
Open source software libraries
apiKey
Yes
Unknown



‚¨Ü Back to Index
Patent



API
Description
Auth
HTTPS
CORS




EPO
European patent search system api
OAuth
Yes
Unknown


TIPO
Taiwan patent search system api
apiKey
Yes
Unknown


USPTO
USA patent api services
No
Yes
Unknown



‚¨Ü Back to Index
Personality



API
Description
Auth
HTTPS
CORS




Advice Slip
Generate random advice slips
No
Yes
Unknown


chucknorris.io
JSON API for hand curated Chuck Norris jokes
No
Yes
Unknown


FavQs.com
FavQs allows you to collect, discover and share your favorite quotes
apiKey
Yes
Unknown


FOAAS
Fuck Off As A Service
No
No
Unknown


Forismatic
Inspirational Quotes
No
No
Unknown


icanhazdadjoke
The largest selection of dad jokes on the internet
No
Yes
Unknown


kanye.rest
REST API for random Kanye West quotes
No
Yes
Yes


Medium
Community of readers and writers offering unique perspectives on ideas
OAuth
Yes
Unknown


NaMoMemes
Memes on Narendra Modi
No
Yes
Unknown


Programming Quotes
Programming Quotes API for open source projects
No
Yes
Unknown


Quote Garden
REST API for more than 5000 famous quotes
No
Yes
Unknown


Quotes on Design
Inspirational Quotes
No
Yes
Unknown


Traitify
Assess, collect and analyze Personality
No
Yes
Unknown


tronalddump.io
Api & web archive for the things Donald Trump has said
No
Yes
Unknown



‚¨Ü Back to Index
Photography



API
Description
Auth
HTTPS
CORS




Flickr
Flickr Services
OAuth
Yes
Unknown


Getty Images
Build applications using the world's most powerful imagery
OAuth
Yes
Unknown


Gfycat
Jiffier GIFs
OAuth
Yes
Unknown


Giphy
Get all your gifs
apiKey
Yes
Unknown


Gyazo
Upload images
apiKey
Yes
Unknown


Imgur
Images
OAuth
Yes
Unknown


Lorem Picsum
Images from Unsplash
No
Yes
Unknown


Pexels
Free Stock Photos and Videos
apiKey
Yes
Yes


Pixabay
Photography
apiKey
Yes
Unknown


Pixhost
Upload images, photos, galleries
No
Yes
Unknown


PlaceKitten
Resizable kitten placeholder images
No
Yes
Unknown


ScreenShotLayer
URL 2 Image
No
Yes
Unknown


Unsplash
Photography
OAuth
Yes
Unknown


Wallhaven
Wallpapers
apiKey
Yes
Unknown



‚¨Ü Back to Index
Science & Math



API
Description
Auth
HTTPS
CORS




arcsecond.io
Multiple astronomy data sources
No
Yes
Unknown


CORE
Access the world's Open Access research papers
apiKey
Yes
Unknown


GBIF
Global Biodiversity Information Facility
No
Yes
Yes


iDigBio
Access millions of museum specimens from organizations around the world
No
Yes
Unknown


inspirehep.net
High Energy Physics info. system
No
Yes
Unknown


ITIS
Integrated Taxonomic Information System
No
Yes
Unknown


Launch Library
Upcoming Space Launches
No
Yes
Unknown


Minor Planet Center
Asterank.com Information
No
No
Unknown


NASA
NASA data, including imagery
No
Yes
Unknown


NASA APOD (unofficial API)
API for getting APOD (Astronomy Image of the Day) images along with metadata
No
Yes
Yes


Newton
Symbolic and Arithmetic Math Calculator
No
Yes
Unknown


Numbers
Facts about numbers
No
No
Unknown


Open Notify
ISS astronauts, current location, etc
No
No
Unknown


Open Science Framework
Repository and archive for study designs, research materials, data, manuscripts, etc
No
Yes
Unknown


SHARE
A free, open, dataset about research and scholarly activities
No
Yes
Unknown


SpaceX
Company, vehicle, launchpad and launch data
No
Yes
Unknown


Sunrise and Sunset
Sunset and sunrise times for a given latitude and longitude
No
Yes
Unknown


Trefle
Botanical data for plant species
apiKey
Yes
Unknown


USGS Earthquake Hazards Program
Earthquakes data real-time
No
Yes
Unknown


USGS Water Services
Water quality and level info for rivers and lakes
No
Yes
Unknown


World Bank
World Data
No
No
Unknown



‚¨Ü Back to Index
Security



API
Description
Auth
HTTPS
CORS




Censys.io
Search engine for Internet connected host and devices
apiKey
Yes
No


CRXcavator
Chrome extension risk scoring
apiKey
Yes
Unknown


FilterLists
Lists of filters for adblockers and firewalls
No
Yes
Unknown


HaveIBeenPwned
Passwords which have previously been exposed in data breaches
apiKey
Yes
Unknown


National Vulnerability Database
U.S. National Vulnerability Database
No
Yes
Unknown


SecurityTrails
Domain and IP related information such as current and historical WHOIS and DNS records
apiKey
Yes
Unknown


Shodan
Search engine for Internet connected devices
apiKey
Yes
Unknown


UK Police
UK Police data
No
Yes
Unknown



‚¨Ü Back to Index
Shopping



API
Description
Auth
HTTPS
CORS




Best Buy
Products, Buying Options, Categories, Recommendations, Stores and Commerce
apiKey
Yes
Unknown


Bratabase
Database of different types of Bra Sizes
OAuth
Yes
Unknown


eBay
Sell and Buy on eBay
OAuth
Yes
Unknown


Wal-Mart
Item price and availability
apiKey
Yes
Unknown


Wegmans
Wegmans Food Markets
apiKey
Yes
Unknown



‚¨Ü Back to Index
Social



API
Description
Auth
HTTPS
CORS




Buffer
Access to pending and sent updates in Buffer
OAuth
Yes
Unknown


Cisco Spark
Team Collaboration Software
OAuth
Yes
Unknown


Discord
Make bots for Discord, integrate Discord onto an external platform
OAuth
Yes
Unknown


Disqus
Communicate with Disqus data
OAuth
Yes
Unknown


Facebook
Facebook Login, Share on FB, Social Plugins, Analytics and more
OAuth
Yes
Unknown


Foursquare
Interact with Foursquare users and places (geolocation-based checkins, photos, tips, events, etc)
OAuth
Yes
Unknown


Fuck Off as a Service
Asks someone to fuck off
No
Yes
Unknown


Full Contact
Get Social Media profiles and contact Information
OAuth
Yes
Unknown


HackerNews
Social news for CS and entrepreneurship
No
Yes
Unknown


Instagram
Instagram Login, Share on Instagram, Social Plugins and more
OAuth
Yes
Unknown


LinkedIn
The foundation of all digital integrations with LinkedIn
OAuth
Yes
Unknown


Meetup.com
Data about Meetups from Meetup.com
apiKey
Yes
Unknown


Mixer
Game Streaming API
OAuth
Yes
Unknown


MySocialApp
Seamless Social Networking features, API, SDK to any app
apiKey
Yes
Unknown


Open Collective
Get Open Collective data
No
Yes
Unknown


Pinterest
The world's catalog of ideas
OAuth
Yes
Unknown


PWRTelegram bot
Boosted version of the Telegram bot API
OAuth
Yes
Unknown


Reddit
Homepage of the internet
OAuth
Yes
Unknown


SharedCount
Social media like and share data for any URL
apiKey
Yes
Unknown


Slack
Team Instant Messaging
OAuth
Yes
Unknown


Telegram Bot
Simplified HTTP version of the MTProto API for bots
OAuth
Yes
Unknown


Telegram MTProto
Read and write Telegram data
OAuth
Yes
Unknown


Trash Nothing
A freecycling community with thousands of free items posted every day
OAuth
Yes
Yes


Tumblr
Read and write Tumblr Data
OAuth
Yes
Unknown


Twitch
Game Streaming API
OAuth
Yes
Unknown


Twitter
Read and write Twitter data
OAuth
Yes
No


vk
Read and write vk data
OAuth
Yes
Unknown



‚¨Ü Back to Index
Sports & Fitness



API
Description
Auth
HTTPS
CORS




balldontlie
Ballldontlie provides access to stats data from the NBA
No
Yes
Yes


BikeWise
Bikewise is a place to learn about and report bike crashes, hazards and thefts
No
Yes
Unknown


Canadian Football League (CFL)
Official JSON API providing real-time league, team and player statistics about the CFL
apiKey
Yes
No


Cartola FC
The Cartola FC API serves to check the partial points of your team
No
Yes
Unknown


City Bikes
City Bikes around the world
No
No
Unknown


Cricket Live Scores
Live cricket scores
X-Mashape-Key
Yes
Unknown


Ergast F1
F1 data from the beginning of the world championships in 1950
No
Yes
Unknown


Fitbit
Fitbit Information
OAuth
Yes
Unknown


Football (Soccer) Videos
Embed codes for goals and highlights from Premier League, Bundesliga, Serie A and many more
No
Yes
Yes


Football Prediction
Predictions for upcoming football matches, odds, results and stats
X-Mashape-Key
Yes
Unknown


Football-Data.org
Football Data
No
No
Unknown


JCDecaux Bike
JCDecaux's self-service bicycles
apiKey
Yes
Unknown


NBA Stats
Current and historical NBA Statistics
No
Yes
Unknown


NFL Arrests
NFL Arrest Data
No
No
Unknown


NHL Records and Stats
NHL historical data and statistics
No
Yes
Unknown


Pro Motocross
The RESTful AMA Pro Motocross lap times for every racer on the start gate
No
No
Unknown


Strava
Connect with athletes, activities and more
OAuth
Yes
Unknown


SuredBits
Query sports data, including teams, players, games, scores and statistics
No
No
No


TheSportsDB
Crowd-Sourced Sports Data and Artwork
apiKey
Yes
Yes


Wger
Workout manager data as exercises, muscles or equipment
apiKey
Yes
Unknown



‚¨Ü Back to Index
Test Data



API
Description
Auth
HTTPS
CORS




Adorable Avatars
Generate random cartoon avatars
No
Yes
Unknown


Bacon Ipsum
A Meatier Lorem Ipsum Generator
No
Yes
Unknown


Dicebear Avatars
Generate random pixel-art avatars
No
Yes
No


FakeJSON
Service to generate test and fake data
apiKey
Yes
Yes


FHIR
Fast Healthcare Interoperability Resources test data
No
Yes
Unknown


Hipster Ipsum
Generates Hipster Ipsum text
No
No
Unknown


Identicon
Generates abstract avatar image
No
Yes
Yes


JSONPlaceholder
Fake data for testing and prototyping
No
No
Unknown


Lorem Text
Generates Lorem Ipsum text
X-Mashape-Key
Yes
Unknown


LoremPicsum
Generate placeholder pictures
No
No
Unknown


Loripsum
The ""lorem ipsum"" generator that doesn't suck
No
No
Unknown


RandomUser
Generates random user data
No
Yes
Unknown


RoboHash
Generate random robot/alien avatars
No
Yes
Unknown


This Person Does not Exist
Generates real-life faces of people who do not exist
No
Yes
Unknown


UI Names
Generate random fake names
No
Yes
Unknown


Yes No
Generate yes or no randomly
No
Yes
Unknown



‚¨Ü Back to Index
Text Analysis



API
Description
Auth
HTTPS
CORS




Aylien Text Analysis
A collection of information retrieval and natural language APIs
apiKey
Yes
Unknown


Cloudmersive Natural Language Processing
Natural language processing and text analysis
apiKey
Yes
Yes


Detect Language
Detects text language
apiKey
Yes
Unknown


Google Cloud Natural
Natural language understanding technology, including sentiment, entity and syntax analysis
apiKey
Yes
Unknown


Language Identification
Automatic language detection for any texts, supports over 175 languages
X-Mashape-Key
Yes
Unknown


Semantira
Text Analytics with sentiment analysis, categorization & named entity extraction
OAuth
Yes
Unknown


Watson Natural Language Understanding
Natural language processing for advanced text analysis
OAuth
Yes
Unknown



‚¨Ü Back to Index
Tracking



API
Description
Auth
HTTPS
CORS




Postmon
An API to query Brazilian ZIP codes and orders easily, quickly and free
No
No
Unknown


Sweden
Provides information about parcels in transport
apiKey
No
Unknown


UPS
Shipment and Address information
apiKey
Yes
Unknown


WhatPulse
Small application that measures your keyboard/mouse usage
No
Yes
Unknown



‚¨Ü Back to Index
Transportation



API
Description
Auth
HTTPS
CORS




ADS-B Exchange
Access real-time and historical data of any and all airborne aircraft
No
Yes
Unknown


AIS Hub
Real-time data of any marine and inland vessel equipped with AIS tracking system
apiKey
No
Unknown


AIS Web
Aeronautical information in digital media produced by the Department of Airspace Control (DECEA)
apiKey
No
Unknown


Amadeus Travel Innovation Sandbox
Travel Search - Limited usage
apiKey
Yes
Unknown


Bay Area Rapid Transit
Stations and predicted arrivals for BART
apiKey
No
Unknown


BlaBlaCar
Search car sharing trips
apiKey
Yes
Unknown


Community Transit
Transitland API
No
Yes
Unknown


Goibibo
API for travel search
apiKey
Yes
Unknown


GraphHopper
A-to-B routing with turn-by-turn instructions
apiKey
Yes
Unknown


Icelandic APIs
Open APIs that deliver services in or regarding Iceland
No
Yes
Unknown


Indian Railways
Indian Railways Information
apiKey
No
Unknown


Izi
Audio guide for travellers
apiKey
Yes
Unknown


Metro Lisboa
Delays in subway lines
No
No
No


Navitia
The open API for building cool stuff with transport data
apiKey
Yes
Unknown


REFUGE Restrooms
Provides safe restroom access for transgender, intersex and gender nonconforming individuals
No
Yes
Unknown


Schiphol Airport
Schiphol
apiKey
Yes
Unknown


TransitLand
Transit Aggregation
No
Yes
Unknown


Transport for Atlanta, US
Marta
No
No
Unknown


Transport for Auckland, New Zealand
Auckland Transport
No
Yes
Unknown


Transport for Belgium
Belgian transport API
No
Yes
Unknown


Transport for Berlin, Germany
Third-party VBB API
No
Yes
Unknown


Transport for Bordeaux, France
Bordeaux M√©tropole public transport and more (France)
apiKey
Yes
Unknown


Transport for Boston, US
MBTA API
No
No
Unknown


Transport for Budapest, Hungary
Budapest public transport API
No
Yes
Unknown


Transport for Chicago, US
CTA
No
No
Unknown


Transport for Czech Republic
Czech transport API
No
Yes
Unknown


Transport for Denver, US
RTD
No
No
Unknown


Transport for Finland
Finnish transport API
No
Yes
Unknown


Transport for Germany
Deutsche Bahn (DB) API
apiKey
No
Unknown


Transport for Grenoble, France
Grenoble public transport
No
No
No


Transport for Honolulu, US
Honolulu Transportation Information
apiKey
No
Unknown


Transport for India
India Public Transport API
apiKey
Yes
Unknown


Transport for Lisbon, Portugal
Data about buses routes, parking and traffic
apiKey
Yes
Unknown


Transport for London, England
TfL API
No
Yes
Unknown


Transport for Madrid, Spain
Madrid BUS transport API
apiKey
No
Unknown


Transport for Manchester, England
TfGM transport network data
apiKey
Yes
No


Transport for Minneapolis, US
NexTrip API
OAuth
No
Unknown


Transport for New York City, US
MTA
apiKey
No
Unknown


Transport for Norway
Norwegian transport API
No
No
Unknown


Transport for Ottawa, Canada
OC Transpo next bus arrival API
No
No
Unknown


Transport for Paris, France
Live schedules made simple
No
No
Unknown


Transport for Paris, France
RATP Open Data API
No
No
Unknown


Transport for Philadelphia, US
SEPTA APIs
No
No
Unknown


Transport for Sao Paulo, Brazil
SPTrans
OAuth
No
Unknown


Transport for Sweden
Public Transport consumer
OAuth
Yes
Unknown


Transport for Switzerland
Official Swiss Public Transport Open Data
apiKey
Yes
Unknown


Transport for Switzerland
Swiss public transport API
No
Yes
Unknown


Transport for The Netherlands
NS, only trains
apiKey
No
Unknown


Transport for The Netherlands
OVAPI, country-wide public transport
No
Yes
Unknown


Transport for Toronto, Canada
TTC
No
Yes
Unknown


Transport for United States
NextBus API
No
No
Unknown


Transport for Vancouver, Canada
TransLink
OAuth
Yes
Unknown


Transport for Victoria, AU
PTV API
apiKey
Yes
Unknown


Transport for Washington, US
Washington Metro transport API
OAuth
Yes
Unknown


Uber
Uber ride requests and price estimation
OAuth
Yes
Yes


WhereIsMyTransport
Platform for public transport data in emerging cities
OAuth
Yes
Unknown



‚¨Ü Back to Index
URL Shorteners



API
Description
Auth
HTTPS
CORS




Bitly
URL shortener and link management
OAuth
Yes
Unknown


CleanURI
URL shortener service
No
Yes
Yes


ClickMeter
Monitor, compare and optimize your marketing links
apiKey
Yes
Unknown


Rebrandly
Custom URL shortener for sharing branded links
apiKey
Yes
Unknown


Relink
Free and secure URL shortener
No
Yes
Yes



‚¨Ü Back to Index
Vehicle



API
Description
Auth
HTTPS
CORS




Brazilian Vehicles and Prices
Vehicles information from Funda√ß√£o Instituto de Pesquisas Econ√¥micas - Fipe
No
Yes
Unknown


Kelley Blue Book
Vehicle info, pricing, configuration, plus much more
apiKey
Yes
No


Mercedes-Benz
Telematics data, remotely access vehicle functions, car configurator, locate service dealers
apiKey
Yes
No


NHTSA
NHTSA Product Information Catalog and Vehicle Listing
No
Yes
Unknown


Smartcar
Lock and unlock vehicles and get data like odometer reading and location. Works on most new cars
OAuth
Yes
Yes



‚¨Ü Back to Index
Video



API
Description
Auth
HTTPS
CORS




An API of Ice And Fire
Game Of Thrones API
No
Yes
Unknown


Breaking Bad
Breaking Bad API
No
Yes
Unknown


Breaking Bad Quotes
Some Breaking Bad quotes
No
Yes
Unknown


Czech Television
TV programme of Czech TV
No
No
Unknown


Dailymotion
Dailymotion Developer API
OAuth
Yes
Unknown


Harry Potter
Harry Potter API
apiKey
Yes
Yes


Open Movie Database
Movie information
apiKey
Yes
Unknown


Ron Swanson Quotes
Television
No
Yes
Unknown


STAPI
Information on all things Star Trek
No
No
No


SWAPI
Star Wars Information
No
Yes
Unknown


The Lord of the Rings
The Lord of the Rings API
apiKey
Yes
Unknown


TMDb
Community-based movie data
apiKey
Yes
Unknown


Trakt
Movie and TV Data
apiKey
Yes
Yes


TVDB
Television data
apiKey
Yes
Unknown


TVMaze
TV Show Data
No
No
Unknown


Utelly
Check where a tv show or movie is available
X-Mashape-Key
Yes
Unknown


Vimeo
Vimeo Developer API
OAuth
Yes
Unknown


YouTube
Add YouTube functionality to your sites and apps
OAuth
Yes
Unknown



‚¨Ü Back to Index
Weather



API
Description
Auth
HTTPS
CORS




7Timer!
Weather, especially for Astroweather
No
No
Unknown


APIXU
Weather
apiKey
Yes
Unknown


Dark Sky
Weather
apiKey
Yes
No


MetaWeather
Weather
No
Yes
No


Meteorologisk Institutt
Weather and climate data
No
Yes
Unknown


NOAA Climate Data
Weather and climate data
apiKey
Yes
Unknown


ODWeather
Weather and weather webcams
No
No
Unknown


OpenUV
Real-time UV Index Forecast
apiKey
Yes
Unknown


OpenWeatherMap
Weather
apiKey
No
Unknown


Storm Glass
Global marine weather from multiple sources
apiKey
Yes
Yes


Weatherbit
Weather
apiKey
Yes
Unknown


Yahoo! Weather
Weather
apiKey
Yes
Unknown



‚¨Ü Back to Index
",public apis collective list free apis use software web development sponsor public api project found thanks digitalocean helping us provide service information contributing project please see contributing guide please note passing build status indicates listed apis available since last update failing build status indicates services may unavailable moment index animals anime antimalware art design books business calendar cloud storage file sharing continuous integration cryptocurrency currency exchange data validation development dictionaries documents productivity environment events finance food drink fraud prevention games comics geocoding government health jobs machine learning music news open data open source projects patent personality photography science math security shopping social sports fitness test data text analysis tracking transportation url shorteners vehicle video weather animals api description auth https cors cat facts daily cat facts yes cats pictures cats tumblr apikey yes unknown dogs based stanford dogs dataset yes yes httpcat cat every http status yes unknown iucn iucn red list threatened species apikey unknown movebank movement migration data animals yes unknown petfinder adoption oauth yes yes placegoat placeholder goat images yes unknown randomcat random pictures cats yes yes randomdog random pictures dogs yes yes randomfox random pictures foxes yes rescuegroups adoption yes unknown shibeonline random pictures shibu inu cats birds back index anime api description auth https cors anilist anime discovery tracking oauth yes unknown animenewsnetwork anime industry news yes yes jikan unofficial myanimelist api yes yes kitsu anime discovery platform oauth yes unknown studio ghibli resources studio ghibli films yes unknown back index antimalware api description auth https cors abuseipdb ipdomainurl reputation apikey yes unknown alienvault open threat exchange otx ipdomainurl reputation apikey yes unknown google safe browsing google linkdomain flagging apikey yes unknown metacert metacert link flagging apikey yes unknown virustotal virustotal fileurl analysis apikey yes unknown web trust wot website reputation apikey yes unknown back index art design api description auth https cors behance design apikey yes unknown cooper hewitt smithsonian design museum apikey yes unknown dribbble design oauth unknown harvard art museums art apikey unknown iconfinder icons apikey yes unknown icons icons oauth yes unknown noun project icons oauth unknown rijksmuseum art apikey yes unknown back index books api description auth https cors bhagavad gita bhagavad gita text oauth yes yes booknomads books published netherlands flanders million book covers related data yes unknown british national bibliography books unknown goodreads books apikey yes unknown google books books oauth yes unknown libgen library genesis search engine unknown open library books book covers related data yes unknown penguin publishing books book covers related data yes unknown back index business api description auth https cors charity search nonprofit charity data apikey unknown clearbit logo search company logos embed projects apikey yes unknown domainsdbinfo registered domain names search yes unknown freelancer hire freelancers get work done oauth yes unknown gmail flexible restful access users inbox oauth yes unknown google analytics collect configure analyze data reach right audience oauth yes unknown mailboxvalidator validate email address improve deliverability apikey yes unknown mailgun email service apikey yes unknown markerapi trademark search unknown ticksel friendly website analytics made humans yes unknown trello boards lists cards help organize prioritize projects oauth yes unknown back index calendar api description auth https cors calendar index worldwide holidays working days apikey yes yes church calendar catholic liturgical calendar unknown czech namedays calendar lookup name returns nameday date unknown google calendar display create modify google calendar events oauth yes unknown hebrew calendar convert gregorian hebrew fetch shabbat holiday times etc unknown holidays historical data regarding holidays apikey yes unknown lectserve protestant liturgical calendar unknown nagerdate public holidays countries yes namedays calendar provides namedays multiple countries yes yes nonworking days database ics files non working days yes unknown russian calendar check date russian holiday yes back index cloud storage file sharing api description auth https cors box file sharing storage oauth yes unknown dropbox file sharing storage oauth yes unknown google drive file sharing storage oauth yes unknown onedrive file sharing storage oauth yes unknown pastebin plain text storage apikey yes unknown temporal ipfs based file storage sharing optional ipns naming apikey yes wetransfer file sharing apikey yes yes back index continuous integration api description auth https cors circleci automate software development process using continuous integration continuous delivery apikey yes unknown codeship codeship continuous integration platform cloud apikey yes unknown travis ci sync github projects travis ci test code minutes apikey yes unknown back index cryptocurrency api description auth https cors binance exchange trading cryptocurrencies based china apikey yes unknown bitcoinaverage digital asset price data blockchain industry apikey yes unknown bitcoincharts financial technical data related bitcoin network yes unknown bitfinex cryptocurrency trading platform apikey yes unknown bitmex realtime cryptocurrency derivatives trading platform based hong kong apikey yes unknown bittrex next generation crypto trading platform apikey yes unknown block bitcoin payment wallet transaction data apikey yes unknown blockchain bitcoin payment wallet transaction data yes unknown coinapi currency exchanges integrate single api apikey yes coinbase bitcoin bitcoin cash litecoin ethereum prices apikey yes unknown coinbase pro cryptocurrency trading platform apikey yes unknown coindesk bitcoin price index unknown coingecko cryptocurrency price market developersocial data yes yes coinigy interacting coinigy accounts exchange directly apikey yes unknown coinlayer realtime crypto currency exchange rates apikey yes unknown coinlib crypto currency prices apikey yes unknown coinlore cryptocurrencies prices volume yes unknown coinmarketcap cryptocurrencies prices apikey yes unknown coinpaprika cryptocurrencies prices volume yes yes coinranking live cryptocurrency data yes unknown cryptocompare cryptocurrencies comparison yes unknown cryptonator cryptocurrencies exchange rates yes unknown gemini cryptocurrencies exchange yes unknown icobench various information listing ratings stats apikey yes unknown livecoin cryptocurrency exchange yes unknown mercadobitcoin brazilian cryptocurrency information yes unknown nexchange automated cryptocurrency exchange service yes nicehash largest crypto mining marketplace apikey yes unknown poloniex us based digital asset exchange apikey yes unknown worldcoinindex cryptocurrencies prices apikey yes unknown back index currency exchange api description auth https cors forge forex currency market data apikey yes unknown currencylayer exchange rates currency conversion apikey yes unknown czech national bank collection exchange rates yes unknown exchangerateapi free currency conversion yes yes exchangeratesapiio exchange rates currency conversion yes yes fixerio exchange rates currency conversion apikey yes unknown frankfurter exchange rates currency conversion time series yes yes ratesapi free exchange rates historical rates yes unknown back index data validation api description auth https cors cloudmersive validate validate email addresses phone numbers vat numbers domain names apikey yes yes languagelayer language detection yes unknown lobcom us address verification apikey yes unknown mailboxlayer email address validation yes unknown numvalidate open source phone number validation yes unknown numverify phone number validation yes unknown purgomalum content validator profanity obscenity unknown us autocomplete enter address data quickly realtime address suggestions apikey yes yes us extract extract postal addresses text including emails apikey yes yes us street address validate append data us postal address apikey yes yes vatlayer vat number validation yes unknown back index development api description auth https cors pull requests project promote open source collaboration december yes yes agifyio estimates age first name yes yes apiflash chrome based screenshot api developers apikey yes unknown apilityio ip domains emails antiabuse api blocklist yes yes apisguru wikipedia web apis openapiswagger specs public apis yes unknown bettermeta return sites meta tags json format xmashapekey yes unknown bitbucket pull public information bitbucket account yes unknown bored find random activities fight boredom yes unknown browshot easily make screenshots web pages screen size device apikey yes unknown cdnjs library info cdnjs yes unknown changelogsmd structured changelog metadata open source projects yes unknown countapi free simple counting service use track page hits specific events yes yes digitalocean status status digitalocean services yes unknown domaindb info domain name search find domains containing particular wordsphrasesetc yes unknown faceplusplus tool detect face oauth yes unknown genderizeio estimates gender first name yes yes github make use github repositories code user info programmatically oauth yes yes gitlab automate gitlab interaction programmatically oauth yes unknown gitter chat github oauth yes unknown httppro test endpoints client server http protocol support yes unknown ibm text speech convert text speech apikey yes yes importio retrieve structured data website rss feed apikey yes unknown ipify simple ip address api yes unknown ipinfo another simple ip address api yes unknown json jsonp convert json jsonp onthefly easy crossdomain data requests using clientside javascript yes unknown jsonbinio free json storage service ideal small scale web apps websites mobile apps apikey yes yes judge compile run source code yes unknown lets validate uncovers technologies used websites url thumbnail yes unknown licenseapi unofficial rest api choosealicensecom yes liveedu live coding streaming oauth yes unknown mac address vendor lookup retrieve vendor details information regarding given mac address oui apikey yes yes myjson simple json store web mobile app unknown nationalizeio estimate nationality first name yes yes oopspam multiple spam filtering service yes yes plino spam filtering system yes unknown postman tool testing apis apikey yes unknown proxycrawl scraping crawling anticaptcha service apikey yes unknown public apis collective list free json apis use web development yes unknown pusher beams push notifications android ios apikey yes unknown qr code create easy read qr code url shortener yes yes qr code generate decode read qr code graphics yes unknown quickchart generate chart graph images yes yes reqres hosted restapi ready respond ajax requests yes unknown scrape website email grabs email addresses url xmashapekey yes unknown scraperapi easily build scalable web scrapers apikey yes unknown screenshotapinet create pixelperfect website screenshots apikey yes yes shoutcloud allcaps service unknown stackexchange qa forum developers oauth yes unknown verse check whats latest version favorite opensource project yes unknown xml json integration developer utility apis yes unknown back index dictionaries api description auth https cors lingua robot word definitions pronunciations synonyms antonyms others apikey yes yes merriamwebster dictionary thesaurus data apikey yes unknown owlbot definitions example sentence photo available apikey yes yes oxford dictionary data apikey yes wordnik dictionary data apikey unknown words definitions synonyms words apikey yes unknown back index documents productivity api description auth https cors cloudmersive document data conversion htmlurl pdfpng office documents pdf image conversion apikey yes yes fileio file sharing yes unknown mercury web parser apikey yes unknown pdflayer htmlurl pdf apikey yes unknown pocket bookmarking service oauth yes unknown prexview data xml json pdf html image apikey yes unknown restpack provides screenshot html pdf content extraction apis apikey yes unknown todoist todo lists oauth yes unknown vector express free vector file converting api yes wakatime automated time tracking leaderboards programmers yes unknown wunderlist todo lists oauth yes unknown back index environment api description auth https cors airvisual air quality weather data apikey yes unknown grunstromindex green power index germany grunstromindexgsi yes openaq open air quality data apikey yes unknown pmin air quality china apikey unknown pvwatts energy production photovoltaic pv energy systems apikey yes unknown uk carbon intensity official carbon intensity api great britain developed national grid yes unknown back index events api description auth https cors eventbrite find events oauth yes unknown picatic sell tickets anywhere apikey yes unknown ticketmaster search events attractions venues apikey yes unknown back index finance api description auth https cors alpha vantage realtime historical stock data apikey yes unknown barchart ondemand stock futures forex market data apikey yes unknown consumer financial protection bureau financial services consumer complaint data apikey yes unknown financial modeling prep stock information data yes unknown iex realtime stock data yes yes iex cloud realtime historical stock market data apikey yes yes ig spreadbetting cfd market data apikey yes unknown plaid connect users bank accounts access transaction data apikey yes unknown razorpay ifsc indian financial systems code bank branch codes yes unknown routingnumbersinfo achnacha bank routing numbers yes unknown tradier us equityoption market data delayed intraday historical oauth yes yes vat rates collection vat rates eu countries yes unknown ynab budgeting planning oauth yes yes back index food drink api description auth https cors edamam recipe search apikey yes unknown lcbo alcohol apikey yes unknown open brewery db breweries cideries craft beer bottle shops yes yes open food facts food products database yes unknown punkapi brewdog beer recipes yes unknown recipe puppy food unknown tacofancy communitydriven taco database unknown report week food drink reviews yes unknown thecocktaildb cocktail recipes apikey yes yes themealdb meal recipes apikey yes yes whats menu nypl humantranscribed historical menu collection apikey unknown zomato discover restaurants apikey yes unknown back index fraud prevention api description auth https cors fraudlabs pro screen order information using ai detect frauds apikey yes unknown whitepages pro global identity verification phone address email ip apikey yes unknown whitepages pro phone reputation detect spammy phones apikey yes unknown whitepages pro get owners name address demographics based phone number apikey yes unknown whitepages pro phone number validation linetype carrier append apikey yes unknown whitepages pro get normalized physical address residents address type validity apikey yes unknown back index games comics api description auth https cors age empires ii get information age empires ii resources yes unknown amiiboapi amiibo information yes battlenet blizzard entertainment apikey yes unknown chuck norris database jokes unknown clash clans clash clans game information apikey yes unknown clash royale clash royale game information apikey yes unknown comic vine comics yes unknown deck cards deck cards unknown destiny game bungie platform api apikey yes unknown dota provides information player stats match stats rankings dota yes unknown dungeons dragons reference th edition spells classes monsters eve online thirdparty developer documentation oauth yes unknown final fantasy xiv final fantasy xiv game data api yes yes fortnite fortnite stats cosmetics apikey yes yes fortnite fortnite stats apikey yes unknown giant bomb video games yes unknown guild wars guild wars game information apikey yes unknown halo halo halo wars information apikey yes unknown hearthstone hearthstone cards information xmashapekey yes unknown hypixel hypixel player stats apikey yes unknown igdbcom video game database apikey yes unknown jokeapi programming miscellaneous dark jokes yes yes jokes programming general jokes yes unknown jservice jeopardy question database unknown magic gathering magic gathering game information unknown marvel marvel comics apikey unknown modio cross platform mod api apikey yes unknown open trivia trivia questions yes unknown pandascore esports games results apikey yes unknown playerunknowns battlegrounds pubg stats apikey yes unknown pokeapi pokemon information yes unknown pokemon tcg pokemon tcg information yes unknown rick morty rick morty information including images yes yes riot games league legends game information apikey yes unknown scryfall magic gathering database yes yes steam steam client interaction oauth yes unknown superheroes superheroes villains data universes single api apikey yes unknown tronald dump dumbest things donald trump ever said yes unknown vainglory vainglory players matches telemetry apikey yes yes wargamingnet wargamingnet info stats apikey yes xkcd retrieve xkcd comics json yes back index geocoding api description auth https cors adressedatagouvfr address database france geocoding reverse yes unknown battuta countryregioncity incascade location api apikey unknown bing maps createcustomize digital maps based bing maps data apikey yes unknown bnglatlong convert british osgb easting northing british national grid wgs latitude longitude yes yes citysdk open apis select european cities yes unknown daum maps daum maps provide multiple apis korean maps apikey unknown freegeoip free geo ip information registration required khour rate limit yes yes geoapi french geographical data yes unknown geocodio address geocoding reverse geocoding bulk apikey yes unknown geocodexyz provides worldwide forwardreverse geocoding batch geocoding geoparsing yes unknown geodatasource geocoding city name using latitude longitude coordinates apikey yes unknown geojs ip geolocation chatops integration yes yes geonames place names geographical data unknown geoplugin ip geolocation currency conversion yes yes google earth engine cloudbased platform planetaryscale environmental data analysis apikey yes unknown google maps createcustomize digital maps based google maps data apikey yes unknown hellosalut get hello translation following user language yes unknown maps createcustomize digital maps based maps data apikey yes unknown indian cities get indian cities clean json format yes yes ip country map ip country yes unknown ip address details find geolocation ip address yes unknown ip location find location ip address unknown ip location find ip address location information yes unknown ip sidekick geolocation api returns extra information ip address apikey yes unknown ip vigilante free ip geolocation api yes unknown iplocation ip geolocation web service get parameters apikey yes unknown ipproxy detect proxy vpn using ip address apikey yes unknown ipgeolocationapicom locate visitors ip country details yes yes ipinfodb free geolocation tools apis country region city time zone lookup ip address apikey yes unknown ipstack locate identify website visitors ip address apikey yes unknown kwelo network locate get detailed information ip address yes yes locationiq provides forwardreverse geocoding batch geocoding apikey yes yes mapbox createcustomize beautiful digital maps apikey yes unknown mexico mexico restful zip codes api yes unknown one map singapore singapore land authority rest api services singapore addresses apikey yes unknown onwater determine latlon water land yes unknown opencage forward reverse geocoding using open data apikey yes yes openstreetmap navigation geolocation geographical data oauth unknown postcodedatanl provide geolocation data based postcode dutch addresses unknown postcodesio postcode lookup geolocation uk yes yes rest countries get information countries via restful api yes unknown smartipio ip geolocation threat intelligence api apikey yes yes uebermaps discover share maps friends apikey yes unknown us zipcode validate append data us zipcode apikey yes yes utah agrc utah web api geocoding utah addresses apikey yes unknown viacep brazil restful zip codes api yes unknown zipcodeapi us zip code distance radius location api apikey yes unknown zippopotam get information place country city state etc unknown back index government api description auth https cors bclaws access laws british columbia unknown businessusa authoritative information us programs events services apikey yes unknown censusgov us census bureau provides various apis data sets demographics businesses yes unknown city lyon opendata lyonfr city open data apikey yes unknown city nantes opendata nantesfr city open data apikey yes unknown city prague opendata praguecz city open data unknown codegov primary platform open source code sharing us federal government apikey yes unknown colorado data engine formatted geolocated colorado public data yes unknown colorado information marketplace colorado state government open data yes unknown data usa us public data yes unknown datagov us government data apikey yes unknown dataparliamentuk contains live datasets including information petitions bills mp votes attendance unknown district columbia open data contains dc government public datasets including crime gis financial data yes unknown epa web services data sets us environmental protection agency yes unknown fec information campaign donations federal elections apikey yes unknown federal register daily journal united states government yes unknown food standards agency uk food hygiene rating data api unknown open government australia australian government open data yes unknown open government belgium belgium government open data yes unknown open government canada canadian government open data unknown open government france french government open data apikey yes unknown open government india indian government open data apikey yes unknown open government italy italy government open data yes unknown open government new zealand new zealand government open data yes unknown open government romania romania government open data unknown open government taiwan taiwan government open data yes unknown open government usa united states government open data yes unknown regulationsgov federal regulatory materials increase understanding federal rule making process apikey yes unknown represent open north find canadian government representatives yes unknown usaspendinggov us federal spending data yes unknown back index health api description auth https cors betterdoctor detailed information doctors area apikey yes unknown diabetes logging retrieving diabetes information unknown flutrack influenzalike symptoms geotracking unknown healthcaregov educational content us health insurance marketplace yes unknown lexigram nlp extracts mentions clinical concepts text gives access clinical ontology apikey yes unknown makeup makeup information unknown medicare access data cms medicaregov yes unknown nppes national plan provider enumeration system info healthcare providers registered us yes unknown nutritionix worlds largest verified nutrition database apikey yes unknown openfda public fda data drugs devices foods yes unknown usda nutrients national nutrient database standard reference yes unknown back index jobs api description auth https cors adzuna job board aggregator apikey yes unknown authentic jobs job board designers hackers creative pros apikey yes unknown careerjet job search engine apikey unknown github jobs jobs software developers yes yes graphql jobs jobs graphql yes yes indeed job board aggregator apikey yes unknown jobscareers job aggregator apikey yes unknown jooble job search engine apikey yes unknown juju job search engine apikey unknown open skills job titles skills related jobs data unknown reed job board aggregator apikey yes unknown searchgov jobs tap list current jobs openings united states government yes unknown muse job board company profiles apikey yes unknown upwork freelance job board management system oauth yes unknown usajobs us government job board apikey yes unknown ziprecruiter job search app website apikey yes unknown back index machine learning api description auth https cors clarifai computer vision oauth yes unknown cloudmersive image captioning face recognition nsfw classification apikey yes yes deepcode ai code review yes unknown dialogflow natural language processing apikey yes unknown keen io data analytics apikey yes unknown time door time series analysis api apikey yes yes unplugg forecasting api timeseries data apikey yes unknown witai natural language processing oauth yes unknown back index music api description auth https cors ai mastering automated music mastering apikey yes yes bandsintown music events yes unknown deezer music oauth yes unknown discogs music oauth yes unknown genius crowdsourced lyrics music knowledge oauth yes unknown genrenator music genre generator yes unknown itunes search software products yes unknown jamendo music oauth yes unknown kkbox get music libraries playlists charts perform kkboxs platform oauth yes unknown lastfm music apikey yes unknown lyricsovh simple api retrieve lyrics song yes unknown mixcloud music oauth yes yes musicbrainz music yes unknown musikki music apikey yes unknown musixmatch music apikey yes unknown openwhyd download curated playlists streaming tracks youtube soundcloud etc yes songkick music events oauth yes unknown songsterr provides guitar bass drums tabs chords yes unknown soundcloud allow users upload share sounds oauth yes unknown spotify view spotify music catalog manage users libraries get recommendations oauth yes unknown tastedive similar artist api also works movies tv shows apikey yes unknown theaudiodb music apikey yes unknown vagalume crowdsourced lyrics music knowledge apikey yes unknown back index news api description auth https cors associated press search news metadata associated press apikey yes unknown chronicling america provides access millions pages historic us newspapers library congress unknown currents latest news published various news sources blogs forums apikey yes yes feedbin rss reader oauth yes unknown feedster searchable categorized collections rss feeds apikey yes unknown new york times provides news apikey yes unknown news headlines currently published range news sources blogs apikey yes unknown npr one personalized news listening experience npr oauth yes unknown guardian access content guardian creates categorised tags section apikey yes unknown old reader rss reader apikey yes unknown back index open data api description auth https cors f unofficial us federal government api development unknown abbreviation get abbreviations meanings xmashapekey yes unknown archiveorg internet archive yes unknown arsat arsat public data apikey yes unknown callookinfo united states ham radio callsigns yes unknown carto location information prediction apikey yes unknown celebinfo celebrity information xmashapekey yes unknown civicfeed news articles public datasets apikey yes unknown datakick open product database apikey yes unknown enigma public broadest collection public data apikey yes yes fonoapi mobile device description yes unknown french address search address search via french government yes unknown linkpreview get json formatted summary title description preview image requested url apikey yes yes marijuana strains marijuana strains races flavors effects apikey unknown microlinkio extract structured data website yes yes opencorporates data corporate entities directors many countries apikey yes unknown qmeta global search engine apikey yes unknown quandl stock market data yes unknown recreation information database recreational areas federal lands historic sites museums attractionsresourcesus apikey yes unknown scoopit content curation service apikey unknown teleport quality life data yes unknown universities list university names countries domains yes unknown university oslo courses lecture videos detailed information courses etc university oslo norway yes unknown upc database million barcode numbers around world apikey yes unknown wikidata collaboratively edited knowledge base operated wikimedia foundation oauth yes unknown wikipedia mediawiki encyclopedia yes unknown yelp find local business oauth yes unknown back index open source projects api description auth https cors countly countly web analytics unknown drupalorg drupalorg yes unknown evil insult generator evil insults yes yes librariesio open source software libraries apikey yes unknown back index patent api description auth https cors epo european patent search system api oauth yes unknown tipo taiwan patent search system api apikey yes unknown uspto usa patent api services yes unknown back index personality api description auth https cors advice slip generate random advice slips yes unknown chucknorrisio json api hand curated chuck norris jokes yes unknown favqscom favqs allows collect discover share favorite quotes apikey yes unknown foaas fuck service unknown forismatic inspirational quotes unknown icanhazdadjoke largest selection dad jokes internet yes unknown kanyerest rest api random kanye west quotes yes yes medium community readers writers offering unique perspectives ideas oauth yes unknown namomemes memes narendra modi yes unknown programming quotes programming quotes api open source projects yes unknown quote garden rest api famous quotes yes unknown quotes design inspirational quotes yes unknown traitify assess collect analyze personality yes unknown tronalddumpio api web archive things donald trump said yes unknown back index photography api description auth https cors flickr flickr services oauth yes unknown getty images build applications using worlds powerful imagery oauth yes unknown gfycat jiffier gifs oauth yes unknown giphy get gifs apikey yes unknown gyazo upload images apikey yes unknown imgur images oauth yes unknown lorem picsum images unsplash yes unknown pexels free stock photos videos apikey yes yes pixabay photography apikey yes unknown pixhost upload images photos galleries yes unknown placekitten resizable kitten placeholder images yes unknown screenshotlayer url image yes unknown unsplash photography oauth yes unknown wallhaven wallpapers apikey yes unknown back index science math api description auth https cors arcsecondio multiple astronomy data sources yes unknown core access worlds open access research papers apikey yes unknown gbif global biodiversity information facility yes yes idigbio access millions museum specimens organizations around world yes unknown inspirehepnet high energy physics info system yes unknown itis integrated taxonomic information system yes unknown launch library upcoming space launches yes unknown minor planet center asterankcom information unknown nasa nasa data including imagery yes unknown nasa apod unofficial api api getting apod astronomy image day images along metadata yes yes newton symbolic arithmetic math calculator yes unknown numbers facts numbers unknown open notify iss astronauts current location etc unknown open science framework repository archive study designs research materials data manuscripts etc yes unknown share free open dataset research scholarly activities yes unknown spacex company vehicle launchpad launch data yes unknown sunrise sunset sunset sunrise times given latitude longitude yes unknown trefle botanical data plant species apikey yes unknown usgs earthquake hazards program earthquakes data realtime yes unknown usgs water services water quality level info rivers lakes yes unknown world bank world data unknown back index security api description auth https cors censysio search engine internet connected host devices apikey yes crxcavator chrome extension risk scoring apikey yes unknown filterlists lists filters adblockers firewalls yes unknown haveibeenpwned passwords previously exposed data breaches apikey yes unknown national vulnerability database us national vulnerability database yes unknown securitytrails domain ip related information current historical whois dns records apikey yes unknown shodan search engine internet connected devices apikey yes unknown uk police uk police data yes unknown back index shopping api description auth https cors best buy products buying options categories recommendations stores commerce apikey yes unknown bratabase database different types bra sizes oauth yes unknown ebay sell buy ebay oauth yes unknown walmart item price availability apikey yes unknown wegmans wegmans food markets apikey yes unknown back index social api description auth https cors buffer access pending sent updates buffer oauth yes unknown cisco spark team collaboration software oauth yes unknown discord make bots discord integrate discord onto external platform oauth yes unknown disqus communicate disqus data oauth yes unknown facebook facebook login share fb social plugins analytics oauth yes unknown foursquare interact foursquare users places geolocationbased checkins photos tips events etc oauth yes unknown fuck service asks someone fuck yes unknown full contact get social media profiles contact information oauth yes unknown hackernews social news cs entrepreneurship yes unknown instagram instagram login share instagram social plugins oauth yes unknown linkedin foundation digital integrations linkedin oauth yes unknown meetupcom data meetups meetupcom apikey yes unknown mixer game streaming api oauth yes unknown mysocialapp seamless social networking features api sdk app apikey yes unknown open collective get open collective data yes unknown pinterest worlds catalog ideas oauth yes unknown pwrtelegram bot boosted version telegram bot api oauth yes unknown reddit homepage internet oauth yes unknown sharedcount social media like share data url apikey yes unknown slack team instant messaging oauth yes unknown telegram bot simplified http version mtproto api bots oauth yes unknown telegram mtproto read write telegram data oauth yes unknown trash nothing freecycling community thousands free items posted every day oauth yes yes tumblr read write tumblr data oauth yes unknown twitch game streaming api oauth yes unknown twitter read write twitter data oauth yes vk read write vk data oauth yes unknown back index sports fitness api description auth https cors balldontlie ballldontlie provides access stats data nba yes yes bikewise bikewise place learn report bike crashes hazards thefts yes unknown canadian football league cfl official json api providing realtime league team player statistics cfl apikey yes cartola fc cartola fc api serves check partial points team yes unknown city bikes city bikes around world unknown cricket live scores live cricket scores xmashapekey yes unknown ergast f f data beginning world championships yes unknown fitbit fitbit information oauth yes unknown football soccer videos embed codes goals highlights premier league bundesliga serie many yes yes football prediction predictions upcoming football matches odds results stats xmashapekey yes unknown footballdataorg football data unknown jcdecaux bike jcdecauxs selfservice bicycles apikey yes unknown nba stats current historical nba statistics yes unknown nfl arrests nfl arrest data unknown nhl records stats nhl historical data statistics yes unknown pro motocross restful ama pro motocross lap times every racer start gate unknown strava connect athletes activities oauth yes unknown suredbits query sports data including teams players games scores statistics thesportsdb crowdsourced sports data artwork apikey yes yes wger workout manager data exercises muscles equipment apikey yes unknown back index test data api description auth https cors adorable avatars generate random cartoon avatars yes unknown bacon ipsum meatier lorem ipsum generator yes unknown dicebear avatars generate random pixelart avatars yes fakejson service generate test fake data apikey yes yes fhir fast healthcare interoperability resources test data yes unknown hipster ipsum generates hipster ipsum text unknown identicon generates abstract avatar image yes yes jsonplaceholder fake data testing prototyping unknown lorem text generates lorem ipsum text xmashapekey yes unknown lorempicsum generate placeholder pictures unknown loripsum lorem ipsum generator doesnt suck unknown randomuser generates random user data yes unknown robohash generate random robotalien avatars yes unknown person exist generates reallife faces people exist yes unknown ui names generate random fake names yes unknown yes generate yes randomly yes unknown back index text analysis api description auth https cors aylien text analysis collection information retrieval natural language apis apikey yes unknown cloudmersive natural language processing natural language processing text analysis apikey yes yes detect language detects text language apikey yes unknown google cloud natural natural language understanding technology including sentiment entity syntax analysis apikey yes unknown language identification automatic language detection texts supports languages xmashapekey yes unknown semantira text analytics sentiment analysis categorization named entity extraction oauth yes unknown watson natural language understanding natural language processing advanced text analysis oauth yes unknown back index tracking api description auth https cors postmon api query brazilian zip codes orders easily quickly free unknown sweden provides information parcels transport apikey unknown ups shipment address information apikey yes unknown whatpulse small application measures keyboardmouse usage yes unknown back index transportation api description auth https cors adsb exchange access realtime historical data airborne aircraft yes unknown ais hub realtime data marine inland vessel equipped ais tracking system apikey unknown ais web aeronautical information digital media produced department airspace control decea apikey unknown amadeus travel innovation sandbox travel search limited usage apikey yes unknown bay area rapid transit stations predicted arrivals bart apikey unknown blablacar search car sharing trips apikey yes unknown community transit transitland api yes unknown goibibo api travel search apikey yes unknown graphhopper atob routing turnbyturn instructions apikey yes unknown icelandic apis open apis deliver services regarding iceland yes unknown indian railways indian railways information apikey unknown izi audio guide travellers apikey yes unknown metro lisboa delays subway lines navitia open api building cool stuff transport data apikey yes unknown refuge restrooms provides safe restroom access transgender intersex gender nonconforming individuals yes unknown schiphol airport schiphol apikey yes unknown transitland transit aggregation yes unknown transport atlanta us marta unknown transport auckland new zealand auckland transport yes unknown transport belgium belgian transport api yes unknown transport berlin germany thirdparty vbb api yes unknown transport bordeaux france bordeaux metropole public transport france apikey yes unknown transport boston us mbta api unknown transport budapest hungary budapest public transport api yes unknown transport chicago us cta unknown transport czech republic czech transport api yes unknown transport denver us rtd unknown transport finland finnish transport api yes unknown transport germany deutsche bahn db api apikey unknown transport grenoble france grenoble public transport transport honolulu us honolulu transportation information apikey unknown transport india india public transport api apikey yes unknown transport lisbon portugal data buses routes parking traffic apikey yes unknown transport london england tfl api yes unknown transport madrid spain madrid bus transport api apikey unknown transport manchester england tfgm transport network data apikey yes transport minneapolis us nextrip api oauth unknown transport new york city us mta apikey unknown transport norway norwegian transport api unknown transport ottawa canada oc transpo next bus arrival api unknown transport paris france live schedules made simple unknown transport paris france ratp open data api unknown transport philadelphia us septa apis unknown transport sao paulo brazil sptrans oauth unknown transport sweden public transport consumer oauth yes unknown transport switzerland official swiss public transport open data apikey yes unknown transport switzerland swiss public transport api yes unknown transport netherlands ns trains apikey unknown transport netherlands ovapi countrywide public transport yes unknown transport toronto canada ttc yes unknown transport united states nextbus api unknown transport vancouver canada translink oauth yes unknown transport victoria au ptv api apikey yes unknown transport washington us washington metro transport api oauth yes unknown uber uber ride requests price estimation oauth yes yes whereismytransport platform public transport data emerging cities oauth yes unknown back index url shorteners api description auth https cors bitly url shortener link management oauth yes unknown cleanuri url shortener service yes yes clickmeter monitor compare optimize marketing links apikey yes unknown rebrandly custom url shortener sharing branded links apikey yes unknown relink free secure url shortener yes yes back index vehicle api description auth https cors brazilian vehicles prices vehicles information fundacao instituto de pesquisas economicas fipe yes unknown kelley blue book vehicle info pricing configuration plus much apikey yes mercedesbenz telematics data remotely access vehicle functions car configurator locate service dealers apikey yes nhtsa nhtsa product information catalog vehicle listing yes unknown smartcar lock unlock vehicles get data like odometer reading location works new cars oauth yes yes back index video api description auth https cors api ice fire game thrones api yes unknown breaking bad breaking bad api yes unknown breaking bad quotes breaking bad quotes yes unknown czech television tv programme czech tv unknown dailymotion dailymotion developer api oauth yes unknown harry potter harry potter api apikey yes yes open movie database movie information apikey yes unknown ron swanson quotes television yes unknown stapi information things star trek swapi star wars information yes unknown lord rings lord rings api apikey yes unknown tmdb communitybased movie data apikey yes unknown trakt movie tv data apikey yes yes tvdb television data apikey yes unknown tvmaze tv show data unknown utelly check tv show movie available xmashapekey yes unknown vimeo vimeo developer api oauth yes unknown youtube add youtube functionality sites apps oauth yes unknown back index weather api description auth https cors timer weather especially astroweather unknown apixu weather apikey yes unknown dark sky weather apikey yes metaweather weather yes meteorologisk institutt weather climate data yes unknown noaa climate data weather climate data apikey yes unknown odweather weather weather webcams unknown openuv realtime uv index forecast apikey yes unknown openweathermap weather apikey unknown storm glass global marine weather multiple sources apikey yes yes weatherbit weather apikey yes unknown yahoo weather weather apikey yes unknown back index,public api collect list free api use softwar web develop sponsor public api project found thank digitalocean help us provid servic inform contribut project pleas see contribut guid pleas note pass build statu indic list api avail sinc last updat fail build statu indic servic may unavail moment index anim anim antimalwar art design book busi calendar cloud storag file share continu integr cryptocurr currenc exchang data valid develop dictionari document product environ event financ food drink fraud prevent game comic geocod govern health job machin learn music news open data open sourc project patent person photographi scienc math secur shop social sport fit test data text analysi track transport url shorten vehicl video weather anim api descript auth http cor cat fact daili cat fact ye cat pictur cat tumblr apikey ye unknown dog base stanford dog dataset ye ye httpcat cat everi http statu ye unknown iucn iucn red list threaten speci apikey unknown movebank movement migrat data anim ye unknown petfind adopt oauth ye ye placegoat placehold goat imag ye unknown randomcat random pictur cat ye ye randomdog random pictur dog ye ye randomfox random pictur fox ye rescuegroup adopt ye unknown shibeonlin random pictur shibu inu cat bird back index anim api descript auth http cor anilist anim discoveri track oauth ye unknown animenewsnetwork anim industri news ye ye jikan unoffici myanimelist api ye ye kitsu anim discoveri platform oauth ye unknown studio ghibli resourc studio ghibli film ye unknown back index antimalwar api descript auth http cor abuseipdb ipdomainurl reput apikey ye unknown alienvault open threat exchang otx ipdomainurl reput apikey ye unknown googl safe brows googl linkdomain flag apikey ye unknown metacert metacert link flag apikey ye unknown virustot virustot fileurl analysi apikey ye unknown web trust wot websit reput apikey ye unknown back index art design api descript auth http cor behanc design apikey ye unknown cooper hewitt smithsonian design museum apikey ye unknown dribbbl design oauth unknown harvard art museum art apikey unknown iconfind icon apikey ye unknown icon icon oauth ye unknown noun project icon oauth unknown rijksmuseum art apikey ye unknown back index book api descript auth http cor bhagavad gita bhagavad gita text oauth ye ye booknomad book publish netherland flander million book cover relat data ye unknown british nation bibliographi book unknown goodread book apikey ye unknown googl book book oauth ye unknown libgen librari genesi search engin unknown open librari book book cover relat data ye unknown penguin publish book book cover relat data ye unknown back index busi api descript auth http cor chariti search nonprofit chariti data apikey unknown clearbit logo search compani logo emb project apikey ye unknown domainsdbinfo regist domain name search ye unknown freelanc hire freelanc get work done oauth ye unknown gmail flexibl rest access user inbox oauth ye unknown googl analyt collect configur analyz data reach right audienc oauth ye unknown mailboxvalid valid email address improv deliver apikey ye unknown mailgun email servic apikey ye unknown markerapi trademark search unknown ticksel friendli websit analyt made human ye unknown trello board list card help organ priorit project oauth ye unknown back index calendar api descript auth http cor calendar index worldwid holiday work day apikey ye ye church calendar cathol liturg calendar unknown czech nameday calendar lookup name return nameday date unknown googl calendar display creat modifi googl calendar event oauth ye unknown hebrew calendar convert gregorian hebrew fetch shabbat holiday time etc unknown holiday histor data regard holiday apikey ye unknown lectserv protest liturg calendar unknown nagerd public holiday countri ye nameday calendar provid nameday multipl countri ye ye nonwork day databas ic file non work day ye unknown russian calendar check date russian holiday ye back index cloud storag file share api descript auth http cor box file share storag oauth ye unknown dropbox file share storag oauth ye unknown googl drive file share storag oauth ye unknown onedr file share storag oauth ye unknown pastebin plain text storag apikey ye unknown tempor ipf base file storag share option ipn name apikey ye wetransf file share apikey ye ye back index continu integr api descript auth http cor circleci autom softwar develop process use continu integr continu deliveri apikey ye unknown codeship codeship continu integr platform cloud apikey ye unknown travi ci sync github project travi ci test code minut apikey ye unknown back index cryptocurr api descript auth http cor binanc exchang trade cryptocurr base china apikey ye unknown bitcoinaverag digit asset price data blockchain industri apikey ye unknown bitcoinchart financi technic data relat bitcoin network ye unknown bitfinex cryptocurr trade platform apikey ye unknown bitmex realtim cryptocurr deriv trade platform base hong kong apikey ye unknown bittrex next gener crypto trade platform apikey ye unknown block bitcoin payment wallet transact data apikey ye unknown blockchain bitcoin payment wallet transact data ye unknown coinapi currenc exchang integr singl api apikey ye coinbas bitcoin bitcoin cash litecoin ethereum price apikey ye unknown coinbas pro cryptocurr trade platform apikey ye unknown coindesk bitcoin price index unknown coingecko cryptocurr price market developersoci data ye ye coinigi interact coinigi account exchang directli apikey ye unknown coinlay realtim crypto currenc exchang rate apikey ye unknown coinlib crypto currenc price apikey ye unknown coinlor cryptocurr price volum ye unknown coinmarketcap cryptocurr price apikey ye unknown coinpaprika cryptocurr price volum ye ye coinrank live cryptocurr data ye unknown cryptocompar cryptocurr comparison ye unknown crypton cryptocurr exchang rate ye unknown gemini cryptocurr exchang ye unknown icobench variou inform list rate stat apikey ye unknown livecoin cryptocurr exchang ye unknown mercadobitcoin brazilian cryptocurr inform ye unknown nexchang autom cryptocurr exchang servic ye nicehash largest crypto mine marketplac apikey ye unknown poloniex us base digit asset exchang apikey ye unknown worldcoinindex cryptocurr price apikey ye unknown back index currenc exchang api descript auth http cor forg forex currenc market data apikey ye unknown currencylay exchang rate currenc convers apikey ye unknown czech nation bank collect exchang rate ye unknown exchangerateapi free currenc convers ye ye exchangeratesapiio exchang rate currenc convers ye ye fixerio exchang rate currenc convers apikey ye unknown frankfurt exchang rate currenc convers time seri ye ye ratesapi free exchang rate histor rate ye unknown back index data valid api descript auth http cor cloudmers valid valid email address phone number vat number domain name apikey ye ye languagelay languag detect ye unknown lobcom us address verif apikey ye unknown mailboxlay email address valid ye unknown numvalid open sourc phone number valid ye unknown numverifi phone number valid ye unknown purgomalum content valid profan obscen unknown us autocomplet enter address data quickli realtim address suggest apikey ye ye us extract extract postal address text includ email apikey ye ye us street address valid append data us postal address apikey ye ye vatlay vat number valid ye unknown back index develop api descript auth http cor pull request project promot open sourc collabor decemb ye ye agifyio estim age first name ye ye apiflash chrome base screenshot api develop apikey ye unknown apilityio ip domain email antiabus api blocklist ye ye apisguru wikipedia web api openapiswagg spec public api ye unknown bettermeta return site meta tag json format xmashapekey ye unknown bitbucket pull public inform bitbucket account ye unknown bore find random activ fight boredom ye unknown browshot easili make screenshot web page screen size devic apikey ye unknown cdnj librari info cdnj ye unknown changelogsmd structur changelog metadata open sourc project ye unknown countapi free simpl count servic use track page hit specif event ye ye digitalocean statu statu digitalocean servic ye unknown domaindb info domain name search find domain contain particular wordsphrasesetc ye unknown faceplusplu tool detect face oauth ye unknown genderizeio estim gender first name ye ye github make use github repositori code user info programmat oauth ye ye gitlab autom gitlab interact programmat oauth ye unknown gitter chat github oauth ye unknown httppro test endpoint client server http protocol support ye unknown ibm text speech convert text speech apikey ye ye importio retriev structur data websit rss feed apikey ye unknown ipifi simpl ip address api ye unknown ipinfo anoth simpl ip address api ye unknown json jsonp convert json jsonp onthefli easi crossdomain data request use clientsid javascript ye unknown jsonbinio free json storag servic ideal small scale web app websit mobil app apikey ye ye judg compil run sourc code ye unknown let valid uncov technolog use websit url thumbnail ye unknown licenseapi unoffici rest api choosealicensecom ye liveedu live code stream oauth ye unknown mac address vendor lookup retriev vendor detail inform regard given mac address oui apikey ye ye myjson simpl json store web mobil app unknown nationalizeio estim nation first name ye ye oopspam multipl spam filter servic ye ye plino spam filter system ye unknown postman tool test api apikey ye unknown proxycrawl scrape crawl anticaptcha servic apikey ye unknown public api collect list free json api use web develop ye unknown pusher beam push notif android io apikey ye unknown qr code creat easi read qr code url shorten ye ye qr code gener decod read qr code graphic ye unknown quickchart gener chart graph imag ye ye reqr host restapi readi respond ajax request ye unknown scrape websit email grab email address url xmashapekey ye unknown scraperapi easili build scalabl web scraper apikey ye unknown screenshotapinet creat pixelperfect websit screenshot apikey ye ye shoutcloud allcap servic unknown stackexchang qa forum develop oauth ye unknown vers check what latest version favorit opensourc project ye unknown xml json integr develop util api ye unknown back index dictionari api descript auth http cor lingua robot word definit pronunci synonym antonym other apikey ye ye merriamwebst dictionari thesauru data apikey ye unknown owlbot definit exampl sentenc photo avail apikey ye ye oxford dictionari data apikey ye wordnik dictionari data apikey unknown word definit synonym word apikey ye unknown back index document product api descript auth http cor cloudmers document data convers htmlurl pdfpng offic document pdf imag convers apikey ye ye fileio file share ye unknown mercuri web parser apikey ye unknown pdflayer htmlurl pdf apikey ye unknown pocket bookmark servic oauth ye unknown prexview data xml json pdf html imag apikey ye unknown restpack provid screenshot html pdf content extract api apikey ye unknown todoist todo list oauth ye unknown vector express free vector file convert api ye wakatim autom time track leaderboard programm ye unknown wunderlist todo list oauth ye unknown back index environ api descript auth http cor airvisu air qualiti weather data apikey ye unknown grunstromindex green power index germani grunstromindexgsi ye openaq open air qualiti data apikey ye unknown pmin air qualiti china apikey unknown pvwatt energi product photovolta pv energi system apikey ye unknown uk carbon intens offici carbon intens api great britain develop nation grid ye unknown back index event api descript auth http cor eventbrit find event oauth ye unknown picat sell ticket anywher apikey ye unknown ticketmast search event attract venu apikey ye unknown back index financ api descript auth http cor alpha vantag realtim histor stock data apikey ye unknown barchart ondemand stock futur forex market data apikey ye unknown consum financi protect bureau financi servic consum complaint data apikey ye unknown financi model prep stock inform data ye unknown iex realtim stock data ye ye iex cloud realtim histor stock market data apikey ye ye ig spreadbet cfd market data apikey ye unknown plaid connect user bank account access transact data apikey ye unknown razorpay ifsc indian financi system code bank branch code ye unknown routingnumbersinfo achnacha bank rout number ye unknown tradier us equityopt market data delay intraday histor oauth ye ye vat rate collect vat rate eu countri ye unknown ynab budget plan oauth ye ye back index food drink api descript auth http cor edamam recip search apikey ye unknown lcbo alcohol apikey ye unknown open breweri db breweri cideri craft beer bottl shop ye ye open food fact food product databas ye unknown punkapi brewdog beer recip ye unknown recip puppi food unknown tacof communitydriven taco databas unknown report week food drink review ye unknown thecocktaildb cocktail recip apikey ye ye themealdb meal recip apikey ye ye what menu nypl humantranscrib histor menu collect apikey unknown zomato discov restaur apikey ye unknown back index fraud prevent api descript auth http cor fraudlab pro screen order inform use ai detect fraud apikey ye unknown whitepag pro global ident verif phone address email ip apikey ye unknown whitepag pro phone reput detect spammi phone apikey ye unknown whitepag pro get owner name address demograph base phone number apikey ye unknown whitepag pro phone number valid linetyp carrier append apikey ye unknown whitepag pro get normal physic address resid address type valid apikey ye unknown back index game comic api descript auth http cor age empir ii get inform age empir ii resourc ye unknown amiiboapi amiibo inform ye battlenet blizzard entertain apikey ye unknown chuck norri databas joke unknown clash clan clash clan game inform apikey ye unknown clash royal clash royal game inform apikey ye unknown comic vine comic ye unknown deck card deck card unknown destini game bungi platform api apikey ye unknown dota provid inform player stat match stat rank dota ye unknown dungeon dragon refer th edit spell class monster eve onlin thirdparti develop document oauth ye unknown final fantasi xiv final fantasi xiv game data api ye ye fortnit fortnit stat cosmet apikey ye ye fortnit fortnit stat apikey ye unknown giant bomb video game ye unknown guild war guild war game inform apikey ye unknown halo halo halo war inform apikey ye unknown hearthston hearthston card inform xmashapekey ye unknown hypixel hypixel player stat apikey ye unknown igdbcom video game databas apikey ye unknown jokeapi program miscellan dark joke ye ye joke program gener joke ye unknown jservic jeopardi question databas unknown magic gather magic gather game inform unknown marvel marvel comic apikey unknown modio cross platform mod api apikey ye unknown open trivia trivia question ye unknown pandascor esport game result apikey ye unknown playerunknown battleground pubg stat apikey ye unknown pokeapi pokemon inform ye unknown pokemon tcg pokemon tcg inform ye unknown rick morti rick morti inform includ imag ye ye riot game leagu legend game inform apikey ye unknown scryfal magic gather databas ye ye steam steam client interact oauth ye unknown superhero superhero villain data univers singl api apikey ye unknown tronald dump dumbest thing donald trump ever said ye unknown vainglori vainglori player match telemetri apikey ye ye wargamingnet wargamingnet info stat apikey ye xkcd retriev xkcd comic json ye back index geocod api descript auth http cor adressedatagouvfr address databas franc geocod revers ye unknown battuta countryregionc incascad locat api apikey unknown bing map createcustom digit map base bing map data apikey ye unknown bnglatlong convert british osgb east north british nation grid wg latitud longitud ye ye citysdk open api select european citi ye unknown daum map daum map provid multipl api korean map apikey unknown freegeoip free geo ip inform registr requir khour rate limit ye ye geoapi french geograph data ye unknown geocodio address geocod revers geocod bulk apikey ye unknown geocodexyz provid worldwid forwardrevers geocod batch geocod geopars ye unknown geodatasourc geocod citi name use latitud longitud coordin apikey ye unknown geoj ip geoloc chatop integr ye ye geonam place name geograph data unknown geoplugin ip geoloc currenc convers ye ye googl earth engin cloudbas platform planetaryscal environment data analysi apikey ye unknown googl map createcustom digit map base googl map data apikey ye unknown hellosalut get hello translat follow user languag ye unknown map createcustom digit map base map data apikey ye unknown indian citi get indian citi clean json format ye ye ip countri map ip countri ye unknown ip address detail find geoloc ip address ye unknown ip locat find locat ip address unknown ip locat find ip address locat inform ye unknown ip sidekick geoloc api return extra inform ip address apikey ye unknown ip vigilant free ip geoloc api ye unknown iploc ip geoloc web servic get paramet apikey ye unknown ipproxi detect proxi vpn use ip address apikey ye unknown ipgeolocationapicom locat visitor ip countri detail ye ye ipinfodb free geoloc tool api countri region citi time zone lookup ip address apikey ye unknown ipstack locat identifi websit visitor ip address apikey ye unknown kwelo network locat get detail inform ip address ye ye locationiq provid forwardrevers geocod batch geocod apikey ye ye mapbox createcustom beauti digit map apikey ye unknown mexico mexico rest zip code api ye unknown one map singapor singapor land author rest api servic singapor address apikey ye unknown onwat determin latlon water land ye unknown opencag forward revers geocod use open data apikey ye ye openstreetmap navig geoloc geograph data oauth unknown postcodedatanl provid geoloc data base postcod dutch address unknown postcodesio postcod lookup geoloc uk ye ye rest countri get inform countri via rest api ye unknown smartipio ip geoloc threat intellig api apikey ye ye uebermap discov share map friend apikey ye unknown us zipcod valid append data us zipcod apikey ye ye utah agrc utah web api geocod utah address apikey ye unknown viacep brazil rest zip code api ye unknown zipcodeapi us zip code distanc radiu locat api apikey ye unknown zippopotam get inform place countri citi state etc unknown back index govern api descript auth http cor bclaw access law british columbia unknown businessusa authorit inform us program event servic apikey ye unknown censusgov us censu bureau provid variou api data set demograph busi ye unknown citi lyon opendata lyonfr citi open data apikey ye unknown citi nant opendata nantesfr citi open data apikey ye unknown citi pragu opendata praguecz citi open data unknown codegov primari platform open sourc code share us feder govern apikey ye unknown colorado data engin format geoloc colorado public data ye unknown colorado inform marketplac colorado state govern open data ye unknown data usa us public data ye unknown datagov us govern data apikey ye unknown dataparliamentuk contain live dataset includ inform petit bill mp vote attend unknown district columbia open data contain dc govern public dataset includ crime gi financi data ye unknown epa web servic data set us environment protect agenc ye unknown fec inform campaign donat feder elect apikey ye unknown feder regist daili journal unit state govern ye unknown food standard agenc uk food hygien rate data api unknown open govern australia australian govern open data ye unknown open govern belgium belgium govern open data ye unknown open govern canada canadian govern open data unknown open govern franc french govern open data apikey ye unknown open govern india indian govern open data apikey ye unknown open govern itali itali govern open data ye unknown open govern new zealand new zealand govern open data ye unknown open govern romania romania govern open data unknown open govern taiwan taiwan govern open data ye unknown open govern usa unit state govern open data ye unknown regulationsgov feder regulatori materi increas understand feder rule make process apikey ye unknown repres open north find canadian govern repres ye unknown usaspendinggov us feder spend data ye unknown back index health api descript auth http cor betterdoctor detail inform doctor area apikey ye unknown diabet log retriev diabet inform unknown flutrack influenzalik symptom geotrack unknown healthcaregov educ content us health insur marketplac ye unknown lexigram nlp extract mention clinic concept text give access clinic ontolog apikey ye unknown makeup makeup inform unknown medicar access data cm medicaregov ye unknown nppe nation plan provid enumer system info healthcar provid regist us ye unknown nutritionix world largest verifi nutrit databas apikey ye unknown openfda public fda data drug devic food ye unknown usda nutrient nation nutrient databas standard refer ye unknown back index job api descript auth http cor adzuna job board aggreg apikey ye unknown authent job job board design hacker creativ pro apikey ye unknown careerjet job search engin apikey unknown github job job softwar develop ye ye graphql job job graphql ye ye inde job board aggreg apikey ye unknown jobscar job aggreg apikey ye unknown joobl job search engin apikey ye unknown juju job search engin apikey unknown open skill job titl skill relat job data unknown reed job board aggreg apikey ye unknown searchgov job tap list current job open unit state govern ye unknown muse job board compani profil apikey ye unknown upwork freelanc job board manag system oauth ye unknown usajob us govern job board apikey ye unknown ziprecruit job search app websit apikey ye unknown back index machin learn api descript auth http cor clarifai comput vision oauth ye unknown cloudmers imag caption face recognit nsfw classif apikey ye ye deepcod ai code review ye unknown dialogflow natur languag process apikey ye unknown keen io data analyt apikey ye unknown time door time seri analysi api apikey ye ye unplugg forecast api timeseri data apikey ye unknown witai natur languag process oauth ye unknown back index music api descript auth http cor ai master autom music master apikey ye ye bandsintown music event ye unknown deezer music oauth ye unknown discog music oauth ye unknown geniu crowdsourc lyric music knowledg oauth ye unknown genren music genr gener ye unknown itun search softwar product ye unknown jamendo music oauth ye unknown kkbox get music librari playlist chart perform kkbox platform oauth ye unknown lastfm music apikey ye unknown lyricsovh simpl api retriev lyric song ye unknown mixcloud music oauth ye ye musicbrainz music ye unknown musikki music apikey ye unknown musixmatch music apikey ye unknown openwhyd download curat playlist stream track youtub soundcloud etc ye songkick music event oauth ye unknown songsterr provid guitar bass drum tab chord ye unknown soundcloud allow user upload share sound oauth ye unknown spotifi view spotifi music catalog manag user librari get recommend oauth ye unknown tasted similar artist api also work movi tv show apikey ye unknown theaudiodb music apikey ye unknown vagalum crowdsourc lyric music knowledg apikey ye unknown back index news api descript auth http cor associ press search news metadata associ press apikey ye unknown chronicl america provid access million page histor us newspap librari congress unknown current latest news publish variou news sourc blog forum apikey ye ye feedbin rss reader oauth ye unknown feedster searchabl categor collect rss feed apikey ye unknown new york time provid news apikey ye unknown news headlin current publish rang news sourc blog apikey ye unknown npr one person news listen experi npr oauth ye unknown guardian access content guardian creat categoris tag section apikey ye unknown old reader rss reader apikey ye unknown back index open data api descript auth http cor f unoffici us feder govern api develop unknown abbrevi get abbrevi mean xmashapekey ye unknown archiveorg internet archiv ye unknown arsat arsat public data apikey ye unknown callookinfo unit state ham radio callsign ye unknown carto locat inform predict apikey ye unknown celebinfo celebr inform xmashapekey ye unknown civicfe news articl public dataset apikey ye unknown datakick open product databas apikey ye unknown enigma public broadest collect public data apikey ye ye fonoapi mobil devic descript ye unknown french address search address search via french govern ye unknown linkpreview get json format summari titl descript preview imag request url apikey ye ye marijuana strain marijuana strain race flavor effect apikey unknown microlinkio extract structur data websit ye ye opencorpor data corpor entiti director mani countri apikey ye unknown qmeta global search engin apikey ye unknown quandl stock market data ye unknown recreat inform databas recreat area feder land histor site museum attractionsresourcesu apikey ye unknown scoopit content curat servic apikey unknown teleport qualiti life data ye unknown univers list univers name countri domain ye unknown univers oslo cours lectur video detail inform cours etc univers oslo norway ye unknown upc databas million barcod number around world apikey ye unknown wikidata collabor edit knowledg base oper wikimedia foundat oauth ye unknown wikipedia mediawiki encyclopedia ye unknown yelp find local busi oauth ye unknown back index open sourc project api descript auth http cor countli countli web analyt unknown drupalorg drupalorg ye unknown evil insult gener evil insult ye ye librariesio open sourc softwar librari apikey ye unknown back index patent api descript auth http cor epo european patent search system api oauth ye unknown tipo taiwan patent search system api apikey ye unknown uspto usa patent api servic ye unknown back index person api descript auth http cor advic slip gener random advic slip ye unknown chucknorrisio json api hand curat chuck norri joke ye unknown favqscom favq allow collect discov share favorit quot apikey ye unknown foaa fuck servic unknown forismat inspir quot unknown icanhazdadjok largest select dad joke internet ye unknown kanyerest rest api random kany west quot ye ye medium commun reader writer offer uniqu perspect idea oauth ye unknown namomem meme narendra modi ye unknown program quot program quot api open sourc project ye unknown quot garden rest api famou quot ye unknown quot design inspir quot ye unknown traitifi assess collect analyz person ye unknown tronalddumpio api web archiv thing donald trump said ye unknown back index photographi api descript auth http cor flickr flickr servic oauth ye unknown getti imag build applic use world power imageri oauth ye unknown gfycat jiffier gif oauth ye unknown giphi get gif apikey ye unknown gyazo upload imag apikey ye unknown imgur imag oauth ye unknown lorem picsum imag unsplash ye unknown pexel free stock photo video apikey ye ye pixabay photographi apikey ye unknown pixhost upload imag photo galleri ye unknown placekitten resiz kitten placehold imag ye unknown screenshotlay url imag ye unknown unsplash photographi oauth ye unknown wallhaven wallpap apikey ye unknown back index scienc math api descript auth http cor arcsecondio multipl astronomi data sourc ye unknown core access world open access research paper apikey ye unknown gbif global biodivers inform facil ye ye idigbio access million museum specimen organ around world ye unknown inspirehepnet high energi physic info system ye unknown iti integr taxonom inform system ye unknown launch librari upcom space launch ye unknown minor planet center asterankcom inform unknown nasa nasa data includ imageri ye unknown nasa apod unoffici api api get apod astronomi imag day imag along metadata ye ye newton symbol arithmet math calcul ye unknown number fact number unknown open notifi iss astronaut current locat etc unknown open scienc framework repositori archiv studi design research materi data manuscript etc ye unknown share free open dataset research scholarli activ ye unknown spacex compani vehicl launchpad launch data ye unknown sunris sunset sunset sunris time given latitud longitud ye unknown trefl botan data plant speci apikey ye unknown usg earthquak hazard program earthquak data realtim ye unknown usg water servic water qualiti level info river lake ye unknown world bank world data unknown back index secur api descript auth http cor censysio search engin internet connect host devic apikey ye crxcavat chrome extens risk score apikey ye unknown filterlist list filter adblock firewal ye unknown haveibeenpwn password previous expos data breach apikey ye unknown nation vulner databas us nation vulner databas ye unknown securitytrail domain ip relat inform current histor whoi dn record apikey ye unknown shodan search engin internet connect devic apikey ye unknown uk polic uk polic data ye unknown back index shop api descript auth http cor best buy product buy option categori recommend store commerc apikey ye unknown bratabas databas differ type bra size oauth ye unknown ebay sell buy ebay oauth ye unknown walmart item price avail apikey ye unknown wegman wegman food market apikey ye unknown back index social api descript auth http cor buffer access pend sent updat buffer oauth ye unknown cisco spark team collabor softwar oauth ye unknown discord make bot discord integr discord onto extern platform oauth ye unknown disqu commun disqu data oauth ye unknown facebook facebook login share fb social plugin analyt oauth ye unknown foursquar interact foursquar user place geolocationbas checkin photo tip event etc oauth ye unknown fuck servic ask someon fuck ye unknown full contact get social media profil contact inform oauth ye unknown hackernew social news cs entrepreneurship ye unknown instagram instagram login share instagram social plugin oauth ye unknown linkedin foundat digit integr linkedin oauth ye unknown meetupcom data meetup meetupcom apikey ye unknown mixer game stream api oauth ye unknown mysocialapp seamless social network featur api sdk app apikey ye unknown open collect get open collect data ye unknown pinterest world catalog idea oauth ye unknown pwrtelegram bot boost version telegram bot api oauth ye unknown reddit homepag internet oauth ye unknown sharedcount social media like share data url apikey ye unknown slack team instant messag oauth ye unknown telegram bot simplifi http version mtproto api bot oauth ye unknown telegram mtproto read write telegram data oauth ye unknown trash noth freecycl commun thousand free item post everi day oauth ye ye tumblr read write tumblr data oauth ye unknown twitch game stream api oauth ye unknown twitter read write twitter data oauth ye vk read write vk data oauth ye unknown back index sport fit api descript auth http cor balldontli ballldontli provid access stat data nba ye ye bikewis bikewis place learn report bike crash hazard theft ye unknown canadian footbal leagu cfl offici json api provid realtim leagu team player statist cfl apikey ye cartola fc cartola fc api serv check partial point team ye unknown citi bike citi bike around world unknown cricket live score live cricket score xmashapekey ye unknown ergast f f data begin world championship ye unknown fitbit fitbit inform oauth ye unknown footbal soccer video emb code goal highlight premier leagu bundesliga seri mani ye ye footbal predict predict upcom footbal match odd result stat xmashapekey ye unknown footballdataorg footbal data unknown jcdecaux bike jcdecaux selfservic bicycl apikey ye unknown nba stat current histor nba statist ye unknown nfl arrest nfl arrest data unknown nhl record stat nhl histor data statist ye unknown pro motocross rest ama pro motocross lap time everi racer start gate unknown strava connect athlet activ oauth ye unknown suredbit queri sport data includ team player game score statist thesportsdb crowdsourc sport data artwork apikey ye ye wger workout manag data exercis muscl equip apikey ye unknown back index test data api descript auth http cor ador avatar gener random cartoon avatar ye unknown bacon ipsum meatier lorem ipsum gener ye unknown dicebear avatar gener random pixelart avatar ye fakejson servic gener test fake data apikey ye ye fhir fast healthcar interoper resourc test data ye unknown hipster ipsum gener hipster ipsum text unknown identicon gener abstract avatar imag ye ye jsonplacehold fake data test prototyp unknown lorem text gener lorem ipsum text xmashapekey ye unknown lorempicsum gener placehold pictur unknown loripsum lorem ipsum gener doesnt suck unknown randomus gener random user data ye unknown robohash gener random robotalien avatar ye unknown person exist gener reallif face peopl exist ye unknown ui name gener random fake name ye unknown ye gener ye randomli ye unknown back index text analysi api descript auth http cor aylien text analysi collect inform retriev natur languag api apikey ye unknown cloudmers natur languag process natur languag process text analysi apikey ye ye detect languag detect text languag apikey ye unknown googl cloud natur natur languag understand technolog includ sentiment entiti syntax analysi apikey ye unknown languag identif automat languag detect text support languag xmashapekey ye unknown semantira text analyt sentiment analysi categor name entiti extract oauth ye unknown watson natur languag understand natur languag process advanc text analysi oauth ye unknown back index track api descript auth http cor postmon api queri brazilian zip code order easili quickli free unknown sweden provid inform parcel transport apikey unknown up shipment address inform apikey ye unknown whatpuls small applic measur keyboardmous usag ye unknown back index transport api descript auth http cor adsb exchang access realtim histor data airborn aircraft ye unknown ai hub realtim data marin inland vessel equip ai track system apikey unknown ai web aeronaut inform digit media produc depart airspac control decea apikey unknown amadeu travel innov sandbox travel search limit usag apikey ye unknown bay area rapid transit station predict arriv bart apikey unknown blablacar search car share trip apikey ye unknown commun transit transitland api ye unknown goibibo api travel search apikey ye unknown graphhopp atob rout turnbyturn instruct apikey ye unknown iceland api open api deliv servic regard iceland ye unknown indian railway indian railway inform apikey unknown izi audio guid travel apikey ye unknown metro lisboa delay subway line navitia open api build cool stuff transport data apikey ye unknown refug restroom provid safe restroom access transgend intersex gender nonconform individu ye unknown schiphol airport schiphol apikey ye unknown transitland transit aggreg ye unknown transport atlanta us marta unknown transport auckland new zealand auckland transport ye unknown transport belgium belgian transport api ye unknown transport berlin germani thirdparti vbb api ye unknown transport bordeaux franc bordeaux metropol public transport franc apikey ye unknown transport boston us mbta api unknown transport budapest hungari budapest public transport api ye unknown transport chicago us cta unknown transport czech republ czech transport api ye unknown transport denver us rtd unknown transport finland finnish transport api ye unknown transport germani deutsch bahn db api apikey unknown transport grenobl franc grenobl public transport transport honolulu us honolulu transport inform apikey unknown transport india india public transport api apikey ye unknown transport lisbon portug data buse rout park traffic apikey ye unknown transport london england tfl api ye unknown transport madrid spain madrid bu transport api apikey unknown transport manchest england tfgm transport network data apikey ye transport minneapoli us nextrip api oauth unknown transport new york citi us mta apikey unknown transport norway norwegian transport api unknown transport ottawa canada oc transpo next bu arriv api unknown transport pari franc live schedul made simpl unknown transport pari franc ratp open data api unknown transport philadelphia us septa api unknown transport sao paulo brazil sptran oauth unknown transport sweden public transport consum oauth ye unknown transport switzerland offici swiss public transport open data apikey ye unknown transport switzerland swiss public transport api ye unknown transport netherland ns train apikey unknown transport netherland ovapi countrywid public transport ye unknown transport toronto canada ttc ye unknown transport unit state nextbu api unknown transport vancouv canada translink oauth ye unknown transport victoria au ptv api apikey ye unknown transport washington us washington metro transport api oauth ye unknown uber uber ride request price estim oauth ye ye whereismytransport platform public transport data emerg citi oauth ye unknown back index url shorten api descript auth http cor bitli url shorten link manag oauth ye unknown cleanuri url shorten servic ye ye clickmet monitor compar optim market link apikey ye unknown rebrandli custom url shorten share brand link apikey ye unknown relink free secur url shorten ye ye back index vehicl api descript auth http cor brazilian vehicl price vehicl inform fundacao instituto de pesquisa economica fipe ye unknown kelley blue book vehicl info price configur plu much apikey ye mercedesbenz telemat data remot access vehicl function car configur locat servic dealer apikey ye nhtsa nhtsa product inform catalog vehicl list ye unknown smartcar lock unlock vehicl get data like odomet read locat work new car oauth ye ye back index video api descript auth http cor api ice fire game throne api ye unknown break bad break bad api ye unknown break bad quot break bad quot ye unknown czech televis tv programm czech tv unknown dailymot dailymot develop api oauth ye unknown harri potter harri potter api apikey ye ye open movi databas movi inform apikey ye unknown ron swanson quot televis ye unknown stapi inform thing star trek swapi star war inform ye unknown lord ring lord ring api apikey ye unknown tmdb communitybas movi data apikey ye unknown trakt movi tv data apikey ye ye tvdb televis data apikey ye unknown tvmaze tv show data unknown utelli check tv show movi avail xmashapekey ye unknown vimeo vimeo develop api oauth ye unknown youtub add youtub function site app oauth ye unknown back index weather api descript auth http cor timer weather especi astroweath unknown apixu weather apikey ye unknown dark sky weather apikey ye metaweath weather ye meteorologisk institutt weather climat data ye unknown noaa climat data weather climat data apikey ye unknown odweath weather weather webcam unknown openuv realtim uv index forecast apikey ye unknown openweathermap weather apikey unknown storm glass global marin weather multipl sourc apikey ye ye weatherbit weather apikey ye unknown yahoo weather weather apikey ye unknown back index,public apis collective list free apis use software web development sponsor public api project found thanks digitalocean helping u provide service information contributing project please see contributing guide please note passing build status indicates listed apis available since last update failing build status indicates service may unavailable moment index animal anime antimalware art design book business calendar cloud storage file sharing continuous integration cryptocurrency currency exchange data validation development dictionary document productivity environment event finance food drink fraud prevention game comic geocoding government health job machine learning music news open data open source project patent personality photography science math security shopping social sport fitness test data text analysis tracking transportation url shortener vehicle video weather animal api description auth http cors cat fact daily cat fact yes cat picture cat tumblr apikey yes unknown dog based stanford dog dataset yes yes httpcat cat every http status yes unknown iucn iucn red list threatened specie apikey unknown movebank movement migration data animal yes unknown petfinder adoption oauth yes yes placegoat placeholder goat image yes unknown randomcat random picture cat yes yes randomdog random picture dog yes yes randomfox random picture fox yes rescuegroups adoption yes unknown shibeonline random picture shibu inu cat bird back index anime api description auth http cors anilist anime discovery tracking oauth yes unknown animenewsnetwork anime industry news yes yes jikan unofficial myanimelist api yes yes kitsu anime discovery platform oauth yes unknown studio ghibli resource studio ghibli film yes unknown back index antimalware api description auth http cors abuseipdb ipdomainurl reputation apikey yes unknown alienvault open threat exchange otx ipdomainurl reputation apikey yes unknown google safe browsing google linkdomain flagging apikey yes unknown metacert metacert link flagging apikey yes unknown virustotal virustotal fileurl analysis apikey yes unknown web trust wot website reputation apikey yes unknown back index art design api description auth http cors behance design apikey yes unknown cooper hewitt smithsonian design museum apikey yes unknown dribbble design oauth unknown harvard art museum art apikey unknown iconfinder icon apikey yes unknown icon icon oauth yes unknown noun project icon oauth unknown rijksmuseum art apikey yes unknown back index book api description auth http cors bhagavad gita bhagavad gita text oauth yes yes booknomads book published netherlands flanders million book cover related data yes unknown british national bibliography book unknown goodreads book apikey yes unknown google book book oauth yes unknown libgen library genesis search engine unknown open library book book cover related data yes unknown penguin publishing book book cover related data yes unknown back index business api description auth http cors charity search nonprofit charity data apikey unknown clearbit logo search company logo embed project apikey yes unknown domainsdbinfo registered domain name search yes unknown freelancer hire freelancer get work done oauth yes unknown gmail flexible restful access user inbox oauth yes unknown google analytics collect configure analyze data reach right audience oauth yes unknown mailboxvalidator validate email address improve deliverability apikey yes unknown mailgun email service apikey yes unknown markerapi trademark search unknown ticksel friendly website analytics made human yes unknown trello board list card help organize prioritize project oauth yes unknown back index calendar api description auth http cors calendar index worldwide holiday working day apikey yes yes church calendar catholic liturgical calendar unknown czech namedays calendar lookup name return nameday date unknown google calendar display create modify google calendar event oauth yes unknown hebrew calendar convert gregorian hebrew fetch shabbat holiday time etc unknown holiday historical data regarding holiday apikey yes unknown lectserve protestant liturgical calendar unknown nagerdate public holiday country yes namedays calendar provides namedays multiple country yes yes nonworking day database ic file non working day yes unknown russian calendar check date russian holiday yes back index cloud storage file sharing api description auth http cors box file sharing storage oauth yes unknown dropbox file sharing storage oauth yes unknown google drive file sharing storage oauth yes unknown onedrive file sharing storage oauth yes unknown pastebin plain text storage apikey yes unknown temporal ipfs based file storage sharing optional ipns naming apikey yes wetransfer file sharing apikey yes yes back index continuous integration api description auth http cors circleci automate software development process using continuous integration continuous delivery apikey yes unknown codeship codeship continuous integration platform cloud apikey yes unknown travis ci sync github project travis ci test code minute apikey yes unknown back index cryptocurrency api description auth http cors binance exchange trading cryptocurrencies based china apikey yes unknown bitcoinaverage digital asset price data blockchain industry apikey yes unknown bitcoincharts financial technical data related bitcoin network yes unknown bitfinex cryptocurrency trading platform apikey yes unknown bitmex realtime cryptocurrency derivative trading platform based hong kong apikey yes unknown bittrex next generation crypto trading platform apikey yes unknown block bitcoin payment wallet transaction data apikey yes unknown blockchain bitcoin payment wallet transaction data yes unknown coinapi currency exchange integrate single api apikey yes coinbase bitcoin bitcoin cash litecoin ethereum price apikey yes unknown coinbase pro cryptocurrency trading platform apikey yes unknown coindesk bitcoin price index unknown coingecko cryptocurrency price market developersocial data yes yes coinigy interacting coinigy account exchange directly apikey yes unknown coinlayer realtime crypto currency exchange rate apikey yes unknown coinlib crypto currency price apikey yes unknown coinlore cryptocurrencies price volume yes unknown coinmarketcap cryptocurrencies price apikey yes unknown coinpaprika cryptocurrencies price volume yes yes coinranking live cryptocurrency data yes unknown cryptocompare cryptocurrencies comparison yes unknown cryptonator cryptocurrencies exchange rate yes unknown gemini cryptocurrencies exchange yes unknown icobench various information listing rating stats apikey yes unknown livecoin cryptocurrency exchange yes unknown mercadobitcoin brazilian cryptocurrency information yes unknown nexchange automated cryptocurrency exchange service yes nicehash largest crypto mining marketplace apikey yes unknown poloniex u based digital asset exchange apikey yes unknown worldcoinindex cryptocurrencies price apikey yes unknown back index currency exchange api description auth http cors forge forex currency market data apikey yes unknown currencylayer exchange rate currency conversion apikey yes unknown czech national bank collection exchange rate yes unknown exchangerateapi free currency conversion yes yes exchangeratesapiio exchange rate currency conversion yes yes fixerio exchange rate currency conversion apikey yes unknown frankfurter exchange rate currency conversion time series yes yes ratesapi free exchange rate historical rate yes unknown back index data validation api description auth http cors cloudmersive validate validate email address phone number vat number domain name apikey yes yes languagelayer language detection yes unknown lobcom u address verification apikey yes unknown mailboxlayer email address validation yes unknown numvalidate open source phone number validation yes unknown numverify phone number validation yes unknown purgomalum content validator profanity obscenity unknown u autocomplete enter address data quickly realtime address suggestion apikey yes yes u extract extract postal address text including email apikey yes yes u street address validate append data u postal address apikey yes yes vatlayer vat number validation yes unknown back index development api description auth http cors pull request project promote open source collaboration december yes yes agifyio estimate age first name yes yes apiflash chrome based screenshot api developer apikey yes unknown apilityio ip domain email antiabuse api blocklist yes yes apisguru wikipedia web apis openapiswagger spec public apis yes unknown bettermeta return site meta tag json format xmashapekey yes unknown bitbucket pull public information bitbucket account yes unknown bored find random activity fight boredom yes unknown browshot easily make screenshots web page screen size device apikey yes unknown cdnjs library info cdnjs yes unknown changelogsmd structured changelog metadata open source project yes unknown countapi free simple counting service use track page hit specific event yes yes digitalocean status status digitalocean service yes unknown domaindb info domain name search find domain containing particular wordsphrasesetc yes unknown faceplusplus tool detect face oauth yes unknown genderizeio estimate gender first name yes yes github make use github repository code user info programmatically oauth yes yes gitlab automate gitlab interaction programmatically oauth yes unknown gitter chat github oauth yes unknown httppro test endpoint client server http protocol support yes unknown ibm text speech convert text speech apikey yes yes importio retrieve structured data website r feed apikey yes unknown ipify simple ip address api yes unknown ipinfo another simple ip address api yes unknown json jsonp convert json jsonp onthefly easy crossdomain data request using clientside javascript yes unknown jsonbinio free json storage service ideal small scale web apps website mobile apps apikey yes yes judge compile run source code yes unknown let validate uncovers technology used website url thumbnail yes unknown licenseapi unofficial rest api choosealicensecom yes liveedu live coding streaming oauth yes unknown mac address vendor lookup retrieve vendor detail information regarding given mac address oui apikey yes yes myjson simple json store web mobile app unknown nationalizeio estimate nationality first name yes yes oopspam multiple spam filtering service yes yes plino spam filtering system yes unknown postman tool testing apis apikey yes unknown proxycrawl scraping crawling anticaptcha service apikey yes unknown public apis collective list free json apis use web development yes unknown pusher beam push notification android io apikey yes unknown qr code create easy read qr code url shortener yes yes qr code generate decode read qr code graphic yes unknown quickchart generate chart graph image yes yes reqres hosted restapi ready respond ajax request yes unknown scrape website email grab email address url xmashapekey yes unknown scraperapi easily build scalable web scraper apikey yes unknown screenshotapinet create pixelperfect website screenshots apikey yes yes shoutcloud allcaps service unknown stackexchange qa forum developer oauth yes unknown verse check whats latest version favorite opensource project yes unknown xml json integration developer utility apis yes unknown back index dictionary api description auth http cors lingua robot word definition pronunciation synonym antonym others apikey yes yes merriamwebster dictionary thesaurus data apikey yes unknown owlbot definition example sentence photo available apikey yes yes oxford dictionary data apikey yes wordnik dictionary data apikey unknown word definition synonym word apikey yes unknown back index document productivity api description auth http cors cloudmersive document data conversion htmlurl pdfpng office document pdf image conversion apikey yes yes fileio file sharing yes unknown mercury web parser apikey yes unknown pdflayer htmlurl pdf apikey yes unknown pocket bookmarking service oauth yes unknown prexview data xml json pdf html image apikey yes unknown restpack provides screenshot html pdf content extraction apis apikey yes unknown todoist todo list oauth yes unknown vector express free vector file converting api yes wakatime automated time tracking leaderboards programmer yes unknown wunderlist todo list oauth yes unknown back index environment api description auth http cors airvisual air quality weather data apikey yes unknown grunstromindex green power index germany grunstromindexgsi yes openaq open air quality data apikey yes unknown pmin air quality china apikey unknown pvwatts energy production photovoltaic pv energy system apikey yes unknown uk carbon intensity official carbon intensity api great britain developed national grid yes unknown back index event api description auth http cors eventbrite find event oauth yes unknown picatic sell ticket anywhere apikey yes unknown ticketmaster search event attraction venue apikey yes unknown back index finance api description auth http cors alpha vantage realtime historical stock data apikey yes unknown barchart ondemand stock future forex market data apikey yes unknown consumer financial protection bureau financial service consumer complaint data apikey yes unknown financial modeling prep stock information data yes unknown iex realtime stock data yes yes iex cloud realtime historical stock market data apikey yes yes ig spreadbetting cfd market data apikey yes unknown plaid connect user bank account access transaction data apikey yes unknown razorpay ifsc indian financial system code bank branch code yes unknown routingnumbersinfo achnacha bank routing number yes unknown tradier u equityoption market data delayed intraday historical oauth yes yes vat rate collection vat rate eu country yes unknown ynab budgeting planning oauth yes yes back index food drink api description auth http cors edamam recipe search apikey yes unknown lcbo alcohol apikey yes unknown open brewery db brewery cideries craft beer bottle shop yes yes open food fact food product database yes unknown punkapi brewdog beer recipe yes unknown recipe puppy food unknown tacofancy communitydriven taco database unknown report week food drink review yes unknown thecocktaildb cocktail recipe apikey yes yes themealdb meal recipe apikey yes yes whats menu nypl humantranscribed historical menu collection apikey unknown zomato discover restaurant apikey yes unknown back index fraud prevention api description auth http cors fraudlabs pro screen order information using ai detect fraud apikey yes unknown whitepages pro global identity verification phone address email ip apikey yes unknown whitepages pro phone reputation detect spammy phone apikey yes unknown whitepages pro get owner name address demographic based phone number apikey yes unknown whitepages pro phone number validation linetype carrier append apikey yes unknown whitepages pro get normalized physical address resident address type validity apikey yes unknown back index game comic api description auth http cors age empire ii get information age empire ii resource yes unknown amiiboapi amiibo information yes battlenet blizzard entertainment apikey yes unknown chuck norris database joke unknown clash clan clash clan game information apikey yes unknown clash royale clash royale game information apikey yes unknown comic vine comic yes unknown deck card deck card unknown destiny game bungie platform api apikey yes unknown dota provides information player stats match stats ranking dota yes unknown dungeon dragon reference th edition spell class monster eve online thirdparty developer documentation oauth yes unknown final fantasy xiv final fantasy xiv game data api yes yes fortnite fortnite stats cosmetic apikey yes yes fortnite fortnite stats apikey yes unknown giant bomb video game yes unknown guild war guild war game information apikey yes unknown halo halo halo war information apikey yes unknown hearthstone hearthstone card information xmashapekey yes unknown hypixel hypixel player stats apikey yes unknown igdbcom video game database apikey yes unknown jokeapi programming miscellaneous dark joke yes yes joke programming general joke yes unknown jservice jeopardy question database unknown magic gathering magic gathering game information unknown marvel marvel comic apikey unknown modio cross platform mod api apikey yes unknown open trivia trivia question yes unknown pandascore esports game result apikey yes unknown playerunknowns battleground pubg stats apikey yes unknown pokeapi pokemon information yes unknown pokemon tcg pokemon tcg information yes unknown rick morty rick morty information including image yes yes riot game league legend game information apikey yes unknown scryfall magic gathering database yes yes steam steam client interaction oauth yes unknown superheroes superheroes villain data universe single api apikey yes unknown tronald dump dumbest thing donald trump ever said yes unknown vainglory vainglory player match telemetry apikey yes yes wargamingnet wargamingnet info stats apikey yes xkcd retrieve xkcd comic json yes back index geocoding api description auth http cors adressedatagouvfr address database france geocoding reverse yes unknown battuta countryregioncity incascade location api apikey unknown bing map createcustomize digital map based bing map data apikey yes unknown bnglatlong convert british osgb easting northing british national grid wgs latitude longitude yes yes citysdk open apis select european city yes unknown daum map daum map provide multiple apis korean map apikey unknown freegeoip free geo ip information registration required khour rate limit yes yes geoapi french geographical data yes unknown geocodio address geocoding reverse geocoding bulk apikey yes unknown geocodexyz provides worldwide forwardreverse geocoding batch geocoding geoparsing yes unknown geodatasource geocoding city name using latitude longitude coordinate apikey yes unknown geojs ip geolocation chatops integration yes yes geonames place name geographical data unknown geoplugin ip geolocation currency conversion yes yes google earth engine cloudbased platform planetaryscale environmental data analysis apikey yes unknown google map createcustomize digital map based google map data apikey yes unknown hellosalut get hello translation following user language yes unknown map createcustomize digital map based map data apikey yes unknown indian city get indian city clean json format yes yes ip country map ip country yes unknown ip address detail find geolocation ip address yes unknown ip location find location ip address unknown ip location find ip address location information yes unknown ip sidekick geolocation api return extra information ip address apikey yes unknown ip vigilante free ip geolocation api yes unknown iplocation ip geolocation web service get parameter apikey yes unknown ipproxy detect proxy vpn using ip address apikey yes unknown ipgeolocationapicom locate visitor ip country detail yes yes ipinfodb free geolocation tool apis country region city time zone lookup ip address apikey yes unknown ipstack locate identify website visitor ip address apikey yes unknown kwelo network locate get detailed information ip address yes yes locationiq provides forwardreverse geocoding batch geocoding apikey yes yes mapbox createcustomize beautiful digital map apikey yes unknown mexico mexico restful zip code api yes unknown one map singapore singapore land authority rest api service singapore address apikey yes unknown onwater determine latlon water land yes unknown opencage forward reverse geocoding using open data apikey yes yes openstreetmap navigation geolocation geographical data oauth unknown postcodedatanl provide geolocation data based postcode dutch address unknown postcodesio postcode lookup geolocation uk yes yes rest country get information country via restful api yes unknown smartipio ip geolocation threat intelligence api apikey yes yes uebermaps discover share map friend apikey yes unknown u zipcode validate append data u zipcode apikey yes yes utah agrc utah web api geocoding utah address apikey yes unknown viacep brazil restful zip code api yes unknown zipcodeapi u zip code distance radius location api apikey yes unknown zippopotam get information place country city state etc unknown back index government api description auth http cors bclaws access law british columbia unknown businessusa authoritative information u program event service apikey yes unknown censusgov u census bureau provides various apis data set demographic business yes unknown city lyon opendata lyonfr city open data apikey yes unknown city nantes opendata nantesfr city open data apikey yes unknown city prague opendata praguecz city open data unknown codegov primary platform open source code sharing u federal government apikey yes unknown colorado data engine formatted geolocated colorado public data yes unknown colorado information marketplace colorado state government open data yes unknown data usa u public data yes unknown datagov u government data apikey yes unknown dataparliamentuk contains live datasets including information petition bill mp vote attendance unknown district columbia open data contains dc government public datasets including crime gi financial data yes unknown epa web service data set u environmental protection agency yes unknown fec information campaign donation federal election apikey yes unknown federal register daily journal united state government yes unknown food standard agency uk food hygiene rating data api unknown open government australia australian government open data yes unknown open government belgium belgium government open data yes unknown open government canada canadian government open data unknown open government france french government open data apikey yes unknown open government india indian government open data apikey yes unknown open government italy italy government open data yes unknown open government new zealand new zealand government open data yes unknown open government romania romania government open data unknown open government taiwan taiwan government open data yes unknown open government usa united state government open data yes unknown regulationsgov federal regulatory material increase understanding federal rule making process apikey yes unknown represent open north find canadian government representative yes unknown usaspendinggov u federal spending data yes unknown back index health api description auth http cors betterdoctor detailed information doctor area apikey yes unknown diabetes logging retrieving diabetes information unknown flutrack influenzalike symptom geotracking unknown healthcaregov educational content u health insurance marketplace yes unknown lexigram nlp extract mention clinical concept text give access clinical ontology apikey yes unknown makeup makeup information unknown medicare access data cm medicaregov yes unknown nppes national plan provider enumeration system info healthcare provider registered u yes unknown nutritionix world largest verified nutrition database apikey yes unknown openfda public fda data drug device food yes unknown usda nutrient national nutrient database standard reference yes unknown back index job api description auth http cors adzuna job board aggregator apikey yes unknown authentic job job board designer hacker creative pro apikey yes unknown careerjet job search engine apikey unknown github job job software developer yes yes graphql job job graphql yes yes indeed job board aggregator apikey yes unknown jobscareers job aggregator apikey yes unknown jooble job search engine apikey yes unknown juju job search engine apikey unknown open skill job title skill related job data unknown reed job board aggregator apikey yes unknown searchgov job tap list current job opening united state government yes unknown muse job board company profile apikey yes unknown upwork freelance job board management system oauth yes unknown usajobs u government job board apikey yes unknown ziprecruiter job search app website apikey yes unknown back index machine learning api description auth http cors clarifai computer vision oauth yes unknown cloudmersive image captioning face recognition nsfw classification apikey yes yes deepcode ai code review yes unknown dialogflow natural language processing apikey yes unknown keen io data analytics apikey yes unknown time door time series analysis api apikey yes yes unplugg forecasting api timeseries data apikey yes unknown witai natural language processing oauth yes unknown back index music api description auth http cors ai mastering automated music mastering apikey yes yes bandsintown music event yes unknown deezer music oauth yes unknown discogs music oauth yes unknown genius crowdsourced lyric music knowledge oauth yes unknown genrenator music genre generator yes unknown itunes search software product yes unknown jamendo music oauth yes unknown kkbox get music library playlist chart perform kkboxs platform oauth yes unknown lastfm music apikey yes unknown lyricsovh simple api retrieve lyric song yes unknown mixcloud music oauth yes yes musicbrainz music yes unknown musikki music apikey yes unknown musixmatch music apikey yes unknown openwhyd download curated playlist streaming track youtube soundcloud etc yes songkick music event oauth yes unknown songsterr provides guitar bass drum tab chord yes unknown soundcloud allow user upload share sound oauth yes unknown spotify view spotify music catalog manage user library get recommendation oauth yes unknown tastedive similar artist api also work movie tv show apikey yes unknown theaudiodb music apikey yes unknown vagalume crowdsourced lyric music knowledge apikey yes unknown back index news api description auth http cors associated press search news metadata associated press apikey yes unknown chronicling america provides access million page historic u newspaper library congress unknown current latest news published various news source blog forum apikey yes yes feedbin r reader oauth yes unknown feedster searchable categorized collection r feed apikey yes unknown new york time provides news apikey yes unknown news headline currently published range news source blog apikey yes unknown npr one personalized news listening experience npr oauth yes unknown guardian access content guardian creates categorised tag section apikey yes unknown old reader r reader apikey yes unknown back index open data api description auth http cors f unofficial u federal government api development unknown abbreviation get abbreviation meaning xmashapekey yes unknown archiveorg internet archive yes unknown arsat arsat public data apikey yes unknown callookinfo united state ham radio callsigns yes unknown carto location information prediction apikey yes unknown celebinfo celebrity information xmashapekey yes unknown civicfeed news article public datasets apikey yes unknown datakick open product database apikey yes unknown enigma public broadest collection public data apikey yes yes fonoapi mobile device description yes unknown french address search address search via french government yes unknown linkpreview get json formatted summary title description preview image requested url apikey yes yes marijuana strain marijuana strain race flavor effect apikey unknown microlinkio extract structured data website yes yes opencorporates data corporate entity director many country apikey yes unknown qmeta global search engine apikey yes unknown quandl stock market data yes unknown recreation information database recreational area federal land historic site museum attractionsresourcesus apikey yes unknown scoopit content curation service apikey unknown teleport quality life data yes unknown university list university name country domain yes unknown university oslo course lecture video detailed information course etc university oslo norway yes unknown upc database million barcode number around world apikey yes unknown wikidata collaboratively edited knowledge base operated wikimedia foundation oauth yes unknown wikipedia mediawiki encyclopedia yes unknown yelp find local business oauth yes unknown back index open source project api description auth http cors countly countly web analytics unknown drupalorg drupalorg yes unknown evil insult generator evil insult yes yes librariesio open source software library apikey yes unknown back index patent api description auth http cors epo european patent search system api oauth yes unknown tipo taiwan patent search system api apikey yes unknown uspto usa patent api service yes unknown back index personality api description auth http cors advice slip generate random advice slip yes unknown chucknorrisio json api hand curated chuck norris joke yes unknown favqscom favqs allows collect discover share favorite quote apikey yes unknown foaas fuck service unknown forismatic inspirational quote unknown icanhazdadjoke largest selection dad joke internet yes unknown kanyerest rest api random kanye west quote yes yes medium community reader writer offering unique perspective idea oauth yes unknown namomemes meme narendra modi yes unknown programming quote programming quote api open source project yes unknown quote garden rest api famous quote yes unknown quote design inspirational quote yes unknown traitify ass collect analyze personality yes unknown tronalddumpio api web archive thing donald trump said yes unknown back index photography api description auth http cors flickr flickr service oauth yes unknown getty image build application using world powerful imagery oauth yes unknown gfycat jiffier gifs oauth yes unknown giphy get gifs apikey yes unknown gyazo upload image apikey yes unknown imgur image oauth yes unknown lorem picsum image unsplash yes unknown pexels free stock photo video apikey yes yes pixabay photography apikey yes unknown pixhost upload image photo gallery yes unknown placekitten resizable kitten placeholder image yes unknown screenshotlayer url image yes unknown unsplash photography oauth yes unknown wallhaven wallpaper apikey yes unknown back index science math api description auth http cors arcsecondio multiple astronomy data source yes unknown core access world open access research paper apikey yes unknown gbif global biodiversity information facility yes yes idigbio access million museum specimen organization around world yes unknown inspirehepnet high energy physic info system yes unknown itis integrated taxonomic information system yes unknown launch library upcoming space launch yes unknown minor planet center asterankcom information unknown nasa nasa data including imagery yes unknown nasa apod unofficial api api getting apod astronomy image day image along metadata yes yes newton symbolic arithmetic math calculator yes unknown number fact number unknown open notify i astronaut current location etc unknown open science framework repository archive study design research material data manuscript etc yes unknown share free open dataset research scholarly activity yes unknown spacex company vehicle launchpad launch data yes unknown sunrise sunset sunset sunrise time given latitude longitude yes unknown trefle botanical data plant specie apikey yes unknown usgs earthquake hazard program earthquake data realtime yes unknown usgs water service water quality level info river lake yes unknown world bank world data unknown back index security api description auth http cors censysio search engine internet connected host device apikey yes crxcavator chrome extension risk scoring apikey yes unknown filterlists list filter adblockers firewall yes unknown haveibeenpwned password previously exposed data breach apikey yes unknown national vulnerability database u national vulnerability database yes unknown securitytrails domain ip related information current historical whois dns record apikey yes unknown shodan search engine internet connected device apikey yes unknown uk police uk police data yes unknown back index shopping api description auth http cors best buy product buying option category recommendation store commerce apikey yes unknown bratabase database different type bra size oauth yes unknown ebay sell buy ebay oauth yes unknown walmart item price availability apikey yes unknown wegmans wegmans food market apikey yes unknown back index social api description auth http cors buffer access pending sent update buffer oauth yes unknown cisco spark team collaboration software oauth yes unknown discord make bot discord integrate discord onto external platform oauth yes unknown disqus communicate disqus data oauth yes unknown facebook facebook login share fb social plugins analytics oauth yes unknown foursquare interact foursquare user place geolocationbased checkins photo tip event etc oauth yes unknown fuck service asks someone fuck yes unknown full contact get social medium profile contact information oauth yes unknown hackernews social news c entrepreneurship yes unknown instagram instagram login share instagram social plugins oauth yes unknown linkedin foundation digital integration linkedin oauth yes unknown meetupcom data meetups meetupcom apikey yes unknown mixer game streaming api oauth yes unknown mysocialapp seamless social networking feature api sdk app apikey yes unknown open collective get open collective data yes unknown pinterest world catalog idea oauth yes unknown pwrtelegram bot boosted version telegram bot api oauth yes unknown reddit homepage internet oauth yes unknown sharedcount social medium like share data url apikey yes unknown slack team instant messaging oauth yes unknown telegram bot simplified http version mtproto api bot oauth yes unknown telegram mtproto read write telegram data oauth yes unknown trash nothing freecycling community thousand free item posted every day oauth yes yes tumblr read write tumblr data oauth yes unknown twitch game streaming api oauth yes unknown twitter read write twitter data oauth yes vk read write vk data oauth yes unknown back index sport fitness api description auth http cors balldontlie ballldontlie provides access stats data nba yes yes bikewise bikewise place learn report bike crash hazard theft yes unknown canadian football league cfl official json api providing realtime league team player statistic cfl apikey yes cartola fc cartola fc api serf check partial point team yes unknown city bike city bike around world unknown cricket live score live cricket score xmashapekey yes unknown ergast f f data beginning world championship yes unknown fitbit fitbit information oauth yes unknown football soccer video embed code goal highlight premier league bundesliga serie many yes yes football prediction prediction upcoming football match odds result stats xmashapekey yes unknown footballdataorg football data unknown jcdecaux bike jcdecauxs selfservice bicycle apikey yes unknown nba stats current historical nba statistic yes unknown nfl arrest nfl arrest data unknown nhl record stats nhl historical data statistic yes unknown pro motocross restful ama pro motocross lap time every racer start gate unknown strava connect athlete activity oauth yes unknown suredbits query sport data including team player game score statistic thesportsdb crowdsourced sport data artwork apikey yes yes wger workout manager data exercise muscle equipment apikey yes unknown back index test data api description auth http cors adorable avatar generate random cartoon avatar yes unknown bacon ipsum meatier lorem ipsum generator yes unknown dicebear avatar generate random pixelart avatar yes fakejson service generate test fake data apikey yes yes fhir fast healthcare interoperability resource test data yes unknown hipster ipsum generates hipster ipsum text unknown identicon generates abstract avatar image yes yes jsonplaceholder fake data testing prototyping unknown lorem text generates lorem ipsum text xmashapekey yes unknown lorempicsum generate placeholder picture unknown loripsum lorem ipsum generator doesnt suck unknown randomuser generates random user data yes unknown robohash generate random robotalien avatar yes unknown person exist generates reallife face people exist yes unknown ui name generate random fake name yes unknown yes generate yes randomly yes unknown back index text analysis api description auth http cors aylien text analysis collection information retrieval natural language apis apikey yes unknown cloudmersive natural language processing natural language processing text analysis apikey yes yes detect language detects text language apikey yes unknown google cloud natural natural language understanding technology including sentiment entity syntax analysis apikey yes unknown language identification automatic language detection text support language xmashapekey yes unknown semantira text analytics sentiment analysis categorization named entity extraction oauth yes unknown watson natural language understanding natural language processing advanced text analysis oauth yes unknown back index tracking api description auth http cors postmon api query brazilian zip code order easily quickly free unknown sweden provides information parcel transport apikey unknown ups shipment address information apikey yes unknown whatpulse small application measure keyboardmouse usage yes unknown back index transportation api description auth http cors adsb exchange access realtime historical data airborne aircraft yes unknown ai hub realtime data marine inland vessel equipped ai tracking system apikey unknown ai web aeronautical information digital medium produced department airspace control decea apikey unknown amadeus travel innovation sandbox travel search limited usage apikey yes unknown bay area rapid transit station predicted arrival bart apikey unknown blablacar search car sharing trip apikey yes unknown community transit transitland api yes unknown goibibo api travel search apikey yes unknown graphhopper atob routing turnbyturn instruction apikey yes unknown icelandic apis open apis deliver service regarding iceland yes unknown indian railway indian railway information apikey unknown izi audio guide traveller apikey yes unknown metro lisboa delay subway line navitia open api building cool stuff transport data apikey yes unknown refuge restroom provides safe restroom access transgender intersex gender nonconforming individual yes unknown schiphol airport schiphol apikey yes unknown transitland transit aggregation yes unknown transport atlanta u marta unknown transport auckland new zealand auckland transport yes unknown transport belgium belgian transport api yes unknown transport berlin germany thirdparty vbb api yes unknown transport bordeaux france bordeaux metropole public transport france apikey yes unknown transport boston u mbta api unknown transport budapest hungary budapest public transport api yes unknown transport chicago u cta unknown transport czech republic czech transport api yes unknown transport denver u rtd unknown transport finland finnish transport api yes unknown transport germany deutsche bahn db api apikey unknown transport grenoble france grenoble public transport transport honolulu u honolulu transportation information apikey unknown transport india india public transport api apikey yes unknown transport lisbon portugal data bus route parking traffic apikey yes unknown transport london england tfl api yes unknown transport madrid spain madrid bus transport api apikey unknown transport manchester england tfgm transport network data apikey yes transport minneapolis u nextrip api oauth unknown transport new york city u mta apikey unknown transport norway norwegian transport api unknown transport ottawa canada oc transpo next bus arrival api unknown transport paris france live schedule made simple unknown transport paris france ratp open data api unknown transport philadelphia u septum apis unknown transport sao paulo brazil sptrans oauth unknown transport sweden public transport consumer oauth yes unknown transport switzerland official swiss public transport open data apikey yes unknown transport switzerland swiss public transport api yes unknown transport netherlands n train apikey unknown transport netherlands ovapi countrywide public transport yes unknown transport toronto canada ttc yes unknown transport united state nextbus api unknown transport vancouver canada translink oauth yes unknown transport victoria au ptv api apikey yes unknown transport washington u washington metro transport api oauth yes unknown uber uber ride request price estimation oauth yes yes whereismytransport platform public transport data emerging city oauth yes unknown back index url shortener api description auth http cors bitly url shortener link management oauth yes unknown cleanuri url shortener service yes yes clickmeter monitor compare optimize marketing link apikey yes unknown rebrandly custom url shortener sharing branded link apikey yes unknown relink free secure url shortener yes yes back index vehicle api description auth http cors brazilian vehicle price vehicle information fundacao instituto de pesquisas economicas fipe yes unknown kelley blue book vehicle info pricing configuration plus much apikey yes mercedesbenz telematics data remotely access vehicle function car configurator locate service dealer apikey yes nhtsa nhtsa product information catalog vehicle listing yes unknown smartcar lock unlock vehicle get data like odometer reading location work new car oauth yes yes back index video api description auth http cors api ice fire game throne api yes unknown breaking bad breaking bad api yes unknown breaking bad quote breaking bad quote yes unknown czech television tv programme czech tv unknown dailymotion dailymotion developer api oauth yes unknown harry potter harry potter api apikey yes yes open movie database movie information apikey yes unknown ron swanson quote television yes unknown stapi information thing star trek swapi star war information yes unknown lord ring lord ring api apikey yes unknown tmdb communitybased movie data apikey yes unknown trakt movie tv data apikey yes yes tvdb television data apikey yes unknown tvmaze tv show data unknown utelly check tv show movie available xmashapekey yes unknown vimeo vimeo developer api oauth yes unknown youtube add youtube functionality site apps oauth yes unknown back index weather api description auth http cors timer weather especially astroweather unknown apixu weather apikey yes unknown dark sky weather apikey yes metaweather weather yes meteorologisk institutt weather climate data yes unknown noaa climate data weather climate data apikey yes unknown odweather weather weather webcam unknown openuv realtime uv index forecast apikey yes unknown openweathermap weather apikey unknown storm glass global marine weather multiple source apikey yes yes weatherbit weather apikey yes unknown yahoo weather weather apikey yes unknown back index
3,Python,GitHub - TheAlgorithms/Python: All Algorithms implemented in Python,"The Algorithms - Python
¬†
¬†
¬†
¬†
¬†
¬†
All algorithms implemented in Python (for education)
These implementations are for learning purposes. They may be less efficient than the implementations in the Python standard library.
Contribution Guidelines
Read our Contribution Guidelines before you contribute.
Community Channel
We're on Gitter! Please join us.
List of Algorithms
See our directory.

",algorithms python algorithms implemented python education implementations learning purposes may less efficient implementations python standard library contribution guidelines read contribution guidelines contribute community channel gitter please join us list algorithms see directory,algorithm python algorithm implement python educ implement learn purpos may less effici implement python standard librari contribut guidelin read contribut guidelin contribut commun channel gitter pleas join us list algorithm see directori,algorithm python algorithm implemented python education implementation learning purpose may le efficient implementation python standard library contribution guideline read contribution guideline contribute community channel gitter please join u list algorithm see directory
4,Python,GitHub - tensorflow/models: Models and examples built with TensorFlow,"TensorFlow Models
This repository contains a number of different models implemented in TensorFlow:
The official models are a collection of example models that use TensorFlow's high-level APIs. They are intended to be well-maintained, tested, and kept up to date with the latest stable TensorFlow API. They should also be reasonably optimized for fast performance while still being easy to read. We especially recommend newer TensorFlow users to start here.
The research models are a large collection of models implemented in TensorFlow by researchers. They are not officially supported or available in release branches; it is up to the individual researchers to maintain the models and/or provide support on issues and pull requests.
The samples folder contains code snippets and smaller models that demonstrate features of TensorFlow, including code presented in various blog posts.
The tutorials folder is a collection of models described in the TensorFlow tutorials.
Contribution guidelines
If you want to contribute to models, be sure to review the contribution guidelines.
License
Apache License 2.0
",tensorflow models repository contains number different models implemented tensorflow official models collection example models use tensorflows highlevel apis intended wellmaintained tested kept date latest stable tensorflow api also reasonably optimized fast performance still easy read especially recommend newer tensorflow users start research models large collection models implemented tensorflow researchers officially supported available release branches individual researchers maintain models andor provide support issues pull requests samples folder contains code snippets smaller models demonstrate features tensorflow including code presented various blog posts tutorials folder collection models described tensorflow tutorials contribution guidelines want contribute models sure review contribution guidelines license apache license,tensorflow model repositori contain number differ model implement tensorflow offici model collect exampl model use tensorflow highlevel api intend wellmaintain test kept date latest stabl tensorflow api also reason optim fast perform still easi read especi recommend newer tensorflow user start research model larg collect model implement tensorflow research offici support avail releas branch individu research maintain model andor provid support issu pull request sampl folder contain code snippet smaller model demonstr featur tensorflow includ code present variou blog post tutori folder collect model describ tensorflow tutori contribut guidelin want contribut model sure review contribut guidelin licens apach licens,tensorflow model repository contains number different model implemented tensorflow official model collection example model use tensorflows highlevel apis intended wellmaintained tested kept date latest stable tensorflow api also reasonably optimized fast performance still easy read especially recommend newer tensorflow user start research model large collection model implemented tensorflow researcher officially supported available release branch individual researcher maintain model andor provide support issue pull request sample folder contains code snippet smaller model demonstrate feature tensorflow including code presented various blog post tutorial folder collection model described tensorflow tutorial contribution guideline want contribute model sure review contribution guideline license apache license
5,Python,GitHub - ytdl-org/youtube-dl: Command-line program to download videos from YouTube.com and other video sites,"
youtube-dl - download videos from youtube.com or other video platforms

INSTALLATION
DESCRIPTION
OPTIONS
CONFIGURATION
OUTPUT TEMPLATE
FORMAT SELECTION
VIDEO SELECTION
FAQ
DEVELOPER INSTRUCTIONS
EMBEDDING YOUTUBE-DL
BUGS
COPYRIGHT

INSTALLATION
To install it right away for all UNIX users (Linux, macOS, etc.), type:
sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
sudo chmod a+rx /usr/local/bin/youtube-dl

If you do not have curl, you can alternatively use a recent wget:
sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl
sudo chmod a+rx /usr/local/bin/youtube-dl

Windows users can download an .exe file and place it in any location on their PATH except for %SYSTEMROOT%\System32 (e.g. do not put in C:\Windows\System32).
You can also use pip:
sudo -H pip install --upgrade youtube-dl

This command will update youtube-dl if you have already installed it. See the pypi page for more information.
macOS users can install youtube-dl with Homebrew:
brew install youtube-dl

Or with MacPorts:
sudo port install youtube-dl

Alternatively, refer to the developer instructions for how to check out and work with the git repository. For further options, including PGP signatures, see the youtube-dl Download Page.
DESCRIPTION
youtube-dl is a command-line program to download videos from YouTube.com and a few more sites. It requires the Python interpreter, version 2.6, 2.7, or 3.2+, and it is not platform specific. It should work on your Unix box, on Windows or on macOS. It is released to the public domain, which means you can modify it, redistribute it or use it however you like.
youtube-dl [OPTIONS] URL [URL...]

OPTIONS
-h, --help                       Print this help text and exit
--version                        Print program version and exit
-U, --update                     Update this program to latest version. Make
                                 sure that you have sufficient permissions
                                 (run with sudo if needed)
-i, --ignore-errors              Continue on download errors, for example to
                                 skip unavailable videos in a playlist
--abort-on-error                 Abort downloading of further videos (in the
                                 playlist or the command line) if an error
                                 occurs
--dump-user-agent                Display the current browser identification
--list-extractors                List all supported extractors
--extractor-descriptions         Output descriptions of all supported
                                 extractors
--force-generic-extractor        Force extraction to use the generic
                                 extractor
--default-search PREFIX          Use this prefix for unqualified URLs. For
                                 example ""gvsearch2:"" downloads two videos
                                 from google videos for youtube-dl ""large
                                 apple"". Use the value ""auto"" to let
                                 youtube-dl guess (""auto_warning"" to emit a
                                 warning when guessing). ""error"" just throws
                                 an error. The default value ""fixup_error""
                                 repairs broken URLs, but emits an error if
                                 this is not possible instead of searching.
--ignore-config                  Do not read configuration files. When given
                                 in the global configuration file
                                 /etc/youtube-dl.conf: Do not read the user
                                 configuration in ~/.config/youtube-
                                 dl/config (%APPDATA%/youtube-dl/config.txt
                                 on Windows)
--config-location PATH           Location of the configuration file; either
                                 the path to the config or its containing
                                 directory.
--flat-playlist                  Do not extract the videos of a playlist,
                                 only list them.
--mark-watched                   Mark videos watched (YouTube only)
--no-mark-watched                Do not mark videos watched (YouTube only)
--no-color                       Do not emit color codes in output

Network Options:
--proxy URL                      Use the specified HTTP/HTTPS/SOCKS proxy.
                                 To enable SOCKS proxy, specify a proper
                                 scheme. For example
                                 socks5://127.0.0.1:1080/. Pass in an empty
                                 string (--proxy """") for direct connection
--socket-timeout SECONDS         Time to wait before giving up, in seconds
--source-address IP              Client-side IP address to bind to
-4, --force-ipv4                 Make all connections via IPv4
-6, --force-ipv6                 Make all connections via IPv6

Geo Restriction:
--geo-verification-proxy URL     Use this proxy to verify the IP address for
                                 some geo-restricted sites. The default
                                 proxy specified by --proxy (or none, if the
                                 option is not present) is used for the
                                 actual downloading.
--geo-bypass                     Bypass geographic restriction via faking
                                 X-Forwarded-For HTTP header
--no-geo-bypass                  Do not bypass geographic restriction via
                                 faking X-Forwarded-For HTTP header
--geo-bypass-country CODE        Force bypass geographic restriction with
                                 explicitly provided two-letter ISO 3166-2
                                 country code
--geo-bypass-ip-block IP_BLOCK   Force bypass geographic restriction with
                                 explicitly provided IP block in CIDR
                                 notation

Video Selection:
--playlist-start NUMBER          Playlist video to start at (default is 1)
--playlist-end NUMBER            Playlist video to end at (default is last)
--playlist-items ITEM_SPEC       Playlist video items to download. Specify
                                 indices of the videos in the playlist
                                 separated by commas like: ""--playlist-items
                                 1,2,5,8"" if you want to download videos
                                 indexed 1, 2, 5, 8 in the playlist. You can
                                 specify range: ""--playlist-items
                                 1-3,7,10-13"", it will download the videos
                                 at index 1, 2, 3, 7, 10, 11, 12 and 13.
--match-title REGEX              Download only matching titles (regex or
                                 caseless sub-string)
--reject-title REGEX             Skip download for matching titles (regex or
                                 caseless sub-string)
--max-downloads NUMBER           Abort after downloading NUMBER files
--min-filesize SIZE              Do not download any videos smaller than
                                 SIZE (e.g. 50k or 44.6m)
--max-filesize SIZE              Do not download any videos larger than SIZE
                                 (e.g. 50k or 44.6m)
--date DATE                      Download only videos uploaded in this date
--datebefore DATE                Download only videos uploaded on or before
                                 this date (i.e. inclusive)
--dateafter DATE                 Download only videos uploaded on or after
                                 this date (i.e. inclusive)
--min-views COUNT                Do not download any videos with less than
                                 COUNT views
--max-views COUNT                Do not download any videos with more than
                                 COUNT views
--match-filter FILTER            Generic video filter. Specify any key (see
                                 the ""OUTPUT TEMPLATE"" for a list of
                                 available keys) to match if the key is
                                 present, !key to check if the key is not
                                 present, key > NUMBER (like ""comment_count
                                 > 12"", also works with >=, <, <=, !=, =) to
                                 compare against a number, key = 'LITERAL'
                                 (like ""uploader = 'Mike Smith'"", also works
                                 with !=) to match against a string literal
                                 and & to require multiple matches. Values
                                 which are not known are excluded unless you
                                 put a question mark (?) after the operator.
                                 For example, to only match videos that have
                                 been liked more than 100 times and disliked
                                 less than 50 times (or the dislike
                                 functionality is not available at the given
                                 service), but who also have a description,
                                 use --match-filter ""like_count > 100 &
                                 dislike_count <? 50 & description"" .
--no-playlist                    Download only the video, if the URL refers
                                 to a video and a playlist.
--yes-playlist                   Download the playlist, if the URL refers to
                                 a video and a playlist.
--age-limit YEARS                Download only videos suitable for the given
                                 age
--download-archive FILE          Download only videos not listed in the
                                 archive file. Record the IDs of all
                                 downloaded videos in it.
--include-ads                    Download advertisements as well
                                 (experimental)

Download Options:
-r, --limit-rate RATE            Maximum download rate in bytes per second
                                 (e.g. 50K or 4.2M)
-R, --retries RETRIES            Number of retries (default is 10), or
                                 ""infinite"".
--fragment-retries RETRIES       Number of retries for a fragment (default
                                 is 10), or ""infinite"" (DASH, hlsnative and
                                 ISM)
--skip-unavailable-fragments     Skip unavailable fragments (DASH, hlsnative
                                 and ISM)
--abort-on-unavailable-fragment  Abort downloading when some fragment is not
                                 available
--keep-fragments                 Keep downloaded fragments on disk after
                                 downloading is finished; fragments are
                                 erased by default
--buffer-size SIZE               Size of download buffer (e.g. 1024 or 16K)
                                 (default is 1024)
--no-resize-buffer               Do not automatically adjust the buffer
                                 size. By default, the buffer size is
                                 automatically resized from an initial value
                                 of SIZE.
--http-chunk-size SIZE           Size of a chunk for chunk-based HTTP
                                 downloading (e.g. 10485760 or 10M) (default
                                 is disabled). May be useful for bypassing
                                 bandwidth throttling imposed by a webserver
                                 (experimental)
--playlist-reverse               Download playlist videos in reverse order
--playlist-random                Download playlist videos in random order
--xattr-set-filesize             Set file xattribute ytdl.filesize with
                                 expected file size
--hls-prefer-native              Use the native HLS downloader instead of
                                 ffmpeg
--hls-prefer-ffmpeg              Use ffmpeg instead of the native HLS
                                 downloader
--hls-use-mpegts                 Use the mpegts container for HLS videos,
                                 allowing to play the video while
                                 downloading (some players may not be able
                                 to play it)
--external-downloader COMMAND    Use the specified external downloader.
                                 Currently supports
                                 aria2c,avconv,axel,curl,ffmpeg,httpie,wget
--external-downloader-args ARGS  Give these arguments to the external
                                 downloader

Filesystem Options:
-a, --batch-file FILE            File containing URLs to download ('-' for
                                 stdin), one URL per line. Lines starting
                                 with '#', ';' or ']' are considered as
                                 comments and ignored.
--id                             Use only video ID in file name
-o, --output TEMPLATE            Output filename template, see the ""OUTPUT
                                 TEMPLATE"" for all the info
--autonumber-start NUMBER        Specify the start value for %(autonumber)s
                                 (default is 1)
--restrict-filenames             Restrict filenames to only ASCII
                                 characters, and avoid ""&"" and spaces in
                                 filenames
-w, --no-overwrites              Do not overwrite files
-c, --continue                   Force resume of partially downloaded files.
                                 By default, youtube-dl will resume
                                 downloads if possible.
--no-continue                    Do not resume partially downloaded files
                                 (restart from beginning)
--no-part                        Do not use .part files - write directly
                                 into output file
--no-mtime                       Do not use the Last-modified header to set
                                 the file modification time
--write-description              Write video description to a .description
                                 file
--write-info-json                Write video metadata to a .info.json file
--write-annotations              Write video annotations to a
                                 .annotations.xml file
--load-info-json FILE            JSON file containing the video information
                                 (created with the ""--write-info-json""
                                 option)
--cookies FILE                   File to read cookies from and dump cookie
                                 jar in
--cache-dir DIR                  Location in the filesystem where youtube-dl
                                 can store some downloaded information
                                 permanently. By default
                                 $XDG_CACHE_HOME/youtube-dl or
                                 ~/.cache/youtube-dl . At the moment, only
                                 YouTube player files (for videos with
                                 obfuscated signatures) are cached, but that
                                 may change.
--no-cache-dir                   Disable filesystem caching
--rm-cache-dir                   Delete all filesystem cache files

Thumbnail images:
--write-thumbnail                Write thumbnail image to disk
--write-all-thumbnails           Write all thumbnail image formats to disk
--list-thumbnails                Simulate and list all available thumbnail
                                 formats

Verbosity / Simulation Options:
-q, --quiet                      Activate quiet mode
--no-warnings                    Ignore warnings
-s, --simulate                   Do not download the video and do not write
                                 anything to disk
--skip-download                  Do not download the video
-g, --get-url                    Simulate, quiet but print URL
-e, --get-title                  Simulate, quiet but print title
--get-id                         Simulate, quiet but print id
--get-thumbnail                  Simulate, quiet but print thumbnail URL
--get-description                Simulate, quiet but print video description
--get-duration                   Simulate, quiet but print video length
--get-filename                   Simulate, quiet but print output filename
--get-format                     Simulate, quiet but print output format
-j, --dump-json                  Simulate, quiet but print JSON information.
                                 See the ""OUTPUT TEMPLATE"" for a description
                                 of available keys.
-J, --dump-single-json           Simulate, quiet but print JSON information
                                 for each command-line argument. If the URL
                                 refers to a playlist, dump the whole
                                 playlist information in a single line.
--print-json                     Be quiet and print the video information as
                                 JSON (video is still being downloaded).
--newline                        Output progress bar as new lines
--no-progress                    Do not print progress bar
--console-title                  Display progress in console titlebar
-v, --verbose                    Print various debugging information
--dump-pages                     Print downloaded pages encoded using base64
                                 to debug problems (very verbose)
--write-pages                    Write downloaded intermediary pages to
                                 files in the current directory to debug
                                 problems
--print-traffic                  Display sent and read HTTP traffic
-C, --call-home                  Contact the youtube-dl server for debugging
--no-call-home                   Do NOT contact the youtube-dl server for
                                 debugging

Workarounds:
--encoding ENCODING              Force the specified encoding (experimental)
--no-check-certificate           Suppress HTTPS certificate validation
--prefer-insecure                Use an unencrypted connection to retrieve
                                 information about the video. (Currently
                                 supported only for YouTube)
--user-agent UA                  Specify a custom user agent
--referer URL                    Specify a custom referer, use if the video
                                 access is restricted to one domain
--add-header FIELD:VALUE         Specify a custom HTTP header and its value,
                                 separated by a colon ':'. You can use this
                                 option multiple times
--bidi-workaround                Work around terminals that lack
                                 bidirectional text support. Requires bidiv
                                 or fribidi executable in PATH
--sleep-interval SECONDS         Number of seconds to sleep before each
                                 download when used alone or a lower bound
                                 of a range for randomized sleep before each
                                 download (minimum possible number of
                                 seconds to sleep) when used along with
                                 --max-sleep-interval.
--max-sleep-interval SECONDS     Upper bound of a range for randomized sleep
                                 before each download (maximum possible
                                 number of seconds to sleep). Must only be
                                 used along with --min-sleep-interval.

Video Format Options:
-f, --format FORMAT              Video format code, see the ""FORMAT
                                 SELECTION"" for all the info
--all-formats                    Download all available video formats
--prefer-free-formats            Prefer free video formats unless a specific
                                 one is requested
-F, --list-formats               List all available formats of requested
                                 videos
--youtube-skip-dash-manifest     Do not download the DASH manifests and
                                 related data on YouTube videos
--merge-output-format FORMAT     If a merge is required (e.g.
                                 bestvideo+bestaudio), output to given
                                 container format. One of mkv, mp4, ogg,
                                 webm, flv. Ignored if no merge is required

Subtitle Options:
--write-sub                      Write subtitle file
--write-auto-sub                 Write automatically generated subtitle file
                                 (YouTube only)
--all-subs                       Download all the available subtitles of the
                                 video
--list-subs                      List all available subtitles for the video
--sub-format FORMAT              Subtitle format, accepts formats
                                 preference, for example: ""srt"" or
                                 ""ass/srt/best""
--sub-lang LANGS                 Languages of the subtitles to download
                                 (optional) separated by commas, use --list-
                                 subs for available language tags

Authentication Options:
-u, --username USERNAME          Login with this account ID
-p, --password PASSWORD          Account password. If this option is left
                                 out, youtube-dl will ask interactively.
-2, --twofactor TWOFACTOR        Two-factor authentication code
-n, --netrc                      Use .netrc authentication data
--video-password PASSWORD        Video password (vimeo, smotri, youku)

Adobe Pass Options:
--ap-mso MSO                     Adobe Pass multiple-system operator (TV
                                 provider) identifier, use --ap-list-mso for
                                 a list of available MSOs
--ap-username USERNAME           Multiple-system operator account login
--ap-password PASSWORD           Multiple-system operator account password.
                                 If this option is left out, youtube-dl will
                                 ask interactively.
--ap-list-mso                    List all supported multiple-system
                                 operators

Post-processing Options:
-x, --extract-audio              Convert video files to audio-only files
                                 (requires ffmpeg or avconv and ffprobe or
                                 avprobe)
--audio-format FORMAT            Specify audio format: ""best"", ""aac"",
                                 ""flac"", ""mp3"", ""m4a"", ""opus"", ""vorbis"", or
                                 ""wav""; ""best"" by default; No effect without
                                 -x
--audio-quality QUALITY          Specify ffmpeg/avconv audio quality, insert
                                 a value between 0 (better) and 9 (worse)
                                 for VBR or a specific bitrate like 128K
                                 (default 5)
--recode-video FORMAT            Encode the video to another format if
                                 necessary (currently supported:
                                 mp4|flv|ogg|webm|mkv|avi)
--postprocessor-args ARGS        Give these arguments to the postprocessor
-k, --keep-video                 Keep the video file on disk after the post-
                                 processing; the video is erased by default
--no-post-overwrites             Do not overwrite post-processed files; the
                                 post-processed files are overwritten by
                                 default
--embed-subs                     Embed subtitles in the video (only for mp4,
                                 webm and mkv videos)
--embed-thumbnail                Embed thumbnail in the audio as cover art
--add-metadata                   Write metadata to the video file
--metadata-from-title FORMAT     Parse additional metadata like song title /
                                 artist from the video title. The format
                                 syntax is the same as --output. Regular
                                 expression with named capture groups may
                                 also be used. The parsed parameters replace
                                 existing values. Example: --metadata-from-
                                 title ""%(artist)s - %(title)s"" matches a
                                 title like ""Coldplay - Paradise"". Example
                                 (regex): --metadata-from-title
                                 ""(?P<artist>.+?) - (?P<title>.+)""
--xattrs                         Write metadata to the video file's xattrs
                                 (using dublin core and xdg standards)
--fixup POLICY                   Automatically correct known faults of the
                                 file. One of never (do nothing), warn (only
                                 emit a warning), detect_or_warn (the
                                 default; fix file if we can, warn
                                 otherwise)
--prefer-avconv                  Prefer avconv over ffmpeg for running the
                                 postprocessors
--prefer-ffmpeg                  Prefer ffmpeg over avconv for running the
                                 postprocessors (default)
--ffmpeg-location PATH           Location of the ffmpeg/avconv binary;
                                 either the path to the binary or its
                                 containing directory.
--exec CMD                       Execute a command on the file after
                                 downloading, similar to find's -exec
                                 syntax. Example: --exec 'adb push {}
                                 /sdcard/Music/ && rm {}'
--convert-subs FORMAT            Convert the subtitles to other format
                                 (currently supported: srt|ass|vtt|lrc)

CONFIGURATION
You can configure youtube-dl by placing any supported command line option to a configuration file. On Linux and macOS, the system wide configuration file is located at /etc/youtube-dl.conf and the user wide configuration file at ~/.config/youtube-dl/config. On Windows, the user wide configuration file locations are %APPDATA%\youtube-dl\config.txt or C:\Users\<user name>\youtube-dl.conf. Note that by default configuration file may not exist so you may need to create it yourself.
For example, with the following configuration file youtube-dl will always extract the audio, not copy the mtime, use a proxy and save all videos under Movies directory in your home directory:
# Lines starting with # are comments

# Always extract audio
-x

# Do not copy the mtime
--no-mtime

# Use this proxy
--proxy 127.0.0.1:3128

# Save all videos under Movies directory in your home directory
-o ~/Movies/%(title)s.%(ext)s

Note that options in configuration file are just the same options aka switches used in regular command line calls thus there must be no whitespace after - or --, e.g. -o or --proxy but not - o or -- proxy.
You can use --ignore-config if you want to disable the configuration file for a particular youtube-dl run.
You can also use --config-location if you want to use custom configuration file for a particular youtube-dl run.
Authentication with .netrc file
You may also want to configure automatic credentials storage for extractors that support authentication (by providing login and password with --username and --password) in order not to pass credentials as command line arguments on every youtube-dl execution and prevent tracking plain text passwords in the shell command history. You can achieve this using a .netrc file on a per extractor basis. For that you will need to create a .netrc file in your $HOME and restrict permissions to read/write by only you:
touch $HOME/.netrc
chmod a-rwx,u+rw $HOME/.netrc

After that you can add credentials for an extractor in the following format, where extractor is the name of the extractor in lowercase:
machine <extractor> login <login> password <password>

For example:
machine youtube login myaccount@gmail.com password my_youtube_password
machine twitch login my_twitch_account_name password my_twitch_password

To activate authentication with the .netrc file you should pass --netrc to youtube-dl or place it in the configuration file.
On Windows you may also need to setup the %HOME% environment variable manually. For example:
set HOME=%USERPROFILE%

OUTPUT TEMPLATE
The -o option allows users to indicate a template for the output file names.
tl;dr: navigate me to examples.
The basic usage is not to set any template arguments when downloading a single file, like in youtube-dl -o funny_video.flv ""https://some/video"". However, it may contain special sequences that will be replaced when downloading each video. The special sequences may be formatted according to python string formatting operations. For example, %(NAME)s or %(NAME)05d. To clarify, that is a percent symbol followed by a name in parentheses, followed by formatting operations. Allowed names along with sequence type are:

id (string): Video identifier
title (string): Video title
url (string): Video URL
ext (string): Video filename extension
alt_title (string): A secondary title of the video
display_id (string): An alternative identifier for the video
uploader (string): Full name of the video uploader
license (string): License name the video is licensed under
creator (string): The creator of the video
release_date (string): The date (YYYYMMDD) when the video was released
timestamp (numeric): UNIX timestamp of the moment the video became available
upload_date (string): Video upload date (YYYYMMDD)
uploader_id (string): Nickname or id of the video uploader
channel (string): Full name of the channel the video is uploaded on
channel_id (string): Id of the channel
location (string): Physical location where the video was filmed
duration (numeric): Length of the video in seconds
view_count (numeric): How many users have watched the video on the platform
like_count (numeric): Number of positive ratings of the video
dislike_count (numeric): Number of negative ratings of the video
repost_count (numeric): Number of reposts of the video
average_rating (numeric): Average rating give by users, the scale used depends on the webpage
comment_count (numeric): Number of comments on the video
age_limit (numeric): Age restriction for the video (years)
is_live (boolean): Whether this video is a live stream or a fixed-length video
start_time (numeric): Time in seconds where the reproduction should start, as specified in the URL
end_time (numeric): Time in seconds where the reproduction should end, as specified in the URL
format (string): A human-readable description of the format
format_id (string): Format code specified by --format
format_note (string): Additional info about the format
width (numeric): Width of the video
height (numeric): Height of the video
resolution (string): Textual description of width and height
tbr (numeric): Average bitrate of audio and video in KBit/s
abr (numeric): Average audio bitrate in KBit/s
acodec (string): Name of the audio codec in use
asr (numeric): Audio sampling rate in Hertz
vbr (numeric): Average video bitrate in KBit/s
fps (numeric): Frame rate
vcodec (string): Name of the video codec in use
container (string): Name of the container format
filesize (numeric): The number of bytes, if known in advance
filesize_approx (numeric): An estimate for the number of bytes
protocol (string): The protocol that will be used for the actual download
extractor (string): Name of the extractor
extractor_key (string): Key name of the extractor
epoch (numeric): Unix epoch when creating the file
autonumber (numeric): Five-digit number that will be increased with each download, starting at zero
playlist (string): Name or id of the playlist that contains the video
playlist_index (numeric): Index of the video in the playlist padded with leading zeros according to the total length of the playlist
playlist_id (string): Playlist identifier
playlist_title (string): Playlist title
playlist_uploader (string): Full name of the playlist uploader
playlist_uploader_id (string): Nickname or id of the playlist uploader

Available for the video that belongs to some logical chapter or section:

chapter (string): Name or title of the chapter the video belongs to
chapter_number (numeric): Number of the chapter the video belongs to
chapter_id (string): Id of the chapter the video belongs to

Available for the video that is an episode of some series or programme:

series (string): Title of the series or programme the video episode belongs to
season (string): Title of the season the video episode belongs to
season_number (numeric): Number of the season the video episode belongs to
season_id (string): Id of the season the video episode belongs to
episode (string): Title of the video episode
episode_number (numeric): Number of the video episode within a season
episode_id (string): Id of the video episode

Available for the media that is a track or a part of a music album:

track (string): Title of the track
track_number (numeric): Number of the track within an album or a disc
track_id (string): Id of the track
artist (string): Artist(s) of the track
genre (string): Genre(s) of the track
album (string): Title of the album the track belongs to
album_type (string): Type of the album
album_artist (string): List of all artists appeared on the album
disc_number (numeric): Number of the disc or other physical medium the track belongs to
release_year (numeric): Year (YYYY) when the album was released

Each aforementioned sequence when referenced in an output template will be replaced by the actual value corresponding to the sequence name. Note that some of the sequences are not guaranteed to be present since they depend on the metadata obtained by a particular extractor. Such sequences will be replaced with NA.
For example for -o %(title)s-%(id)s.%(ext)s and an mp4 video with title youtube-dl test video and id BaW_jenozKcj, this will result in a youtube-dl test video-BaW_jenozKcj.mp4 file created in the current directory.
For numeric sequences you can use numeric related formatting, for example, %(view_count)05d will result in a string with view count padded with zeros up to 5 characters, like in 00042.
Output templates can also contain arbitrary hierarchical path, e.g. -o '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' which will result in downloading each video in a directory corresponding to this path template. Any missing directory will be automatically created for you.
To use percent literals in an output template use %%. To output to stdout use -o -.
The current default template is %(title)s-%(id)s.%(ext)s.
In some cases, you don't want special characters such as ‰∏≠, spaces, or &, such as when transferring the downloaded filename to a Windows system or the filename through an 8bit-unsafe channel. In these cases, add the --restrict-filenames flag to get a shorter title:
Output template and Windows batch files
If you are using an output template inside a Windows batch file then you must escape plain percent characters (%) by doubling, so that -o ""%(title)s-%(id)s.%(ext)s"" should become -o ""%%(title)s-%%(id)s.%%(ext)s"". However you should not touch %'s that are not plain characters, e.g. environment variables for expansion should stay intact: -o ""C:\%HOMEPATH%\Desktop\%%(title)s.%%(ext)s"".
Output template examples
Note that on Windows you may need to use double quotes instead of single.
$ youtube-dl --get-filename -o '%(title)s.%(ext)s' BaW_jenozKc
youtube-dl test video ''_√§‚Ü≠ùïê.mp4    # All kinds of weird characters

$ youtube-dl --get-filename -o '%(title)s.%(ext)s' BaW_jenozKc --restrict-filenames
youtube-dl_test_video_.mp4          # A simple file name

# Download YouTube playlist videos in separate directory indexed by video order in a playlist
$ youtube-dl -o '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re

# Download all playlists of YouTube channel/user keeping each playlist in separate directory:
$ youtube-dl -o '%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' https://www.youtube.com/user/TheLinuxFoundation/playlists

# Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home
$ youtube-dl -u user -p password -o '~/MyVideos/%(playlist)s/%(chapter_number)s - %(chapter)s/%(title)s.%(ext)s' https://www.udemy.com/java-tutorial/

# Download entire series season keeping each series and each season in separate directory under C:/MyVideos
$ youtube-dl -o ""C:/MyVideos/%(series)s/%(season_number)s - %(season)s/%(episode_number)s - %(episode)s.%(ext)s"" https://videomore.ru/kino_v_detalayah/5_sezon/367617

# Stream the video being downloaded to stdout
$ youtube-dl -o - BaW_jenozKc
FORMAT SELECTION
By default youtube-dl tries to download the best available quality, i.e. if you want the best quality you don't need to pass any special options, youtube-dl will guess it for you by default.
But sometimes you may want to download in a different format, for example when you are on a slow or intermittent connection. The key mechanism for achieving this is so-called format selection based on which you can explicitly specify desired format, select formats based on some criterion or criteria, setup precedence and much more.
The general syntax for format selection is --format FORMAT or shorter -f FORMAT where FORMAT is a selector expression, i.e. an expression that describes format or formats you would like to download.
tl;dr: navigate me to examples.
The simplest case is requesting a specific format, for example with -f 22 you can download the format with format code equal to 22. You can get the list of available format codes for particular video using --list-formats or -F. Note that these format codes are extractor specific.
You can also use a file extension (currently 3gp, aac, flv, m4a, mp3, mp4, ogg, wav, webm are supported) to download the best quality format of a particular file extension served as a single file, e.g. -f webm will download the best quality format with the webm extension served as a single file.
You can also use special names to select particular edge case formats:

best: Select the best quality format represented by a single file with video and audio.
worst: Select the worst quality format represented by a single file with video and audio.
bestvideo: Select the best quality video-only format (e.g. DASH video). May not be available.
worstvideo: Select the worst quality video-only format. May not be available.
bestaudio: Select the best quality audio only-format. May not be available.
worstaudio: Select the worst quality audio only-format. May not be available.

For example, to download the worst quality video-only format you can use -f worstvideo.
If you want to download multiple videos and they don't have the same formats available, you can specify the order of preference using slashes. Note that slash is left-associative, i.e. formats on the left hand side are preferred, for example -f 22/17/18 will download format 22 if it's available, otherwise it will download format 17 if it's available, otherwise it will download format 18 if it's available, otherwise it will complain that no suitable formats are available for download.
If you want to download several formats of the same video use a comma as a separator, e.g. -f 22,17,18 will download all these three formats, of course if they are available. Or a more sophisticated example combined with the precedence feature: -f 136/137/mp4/bestvideo,140/m4a/bestaudio.
You can also filter the video formats by putting a condition in brackets, as in -f ""best[height=720]"" (or -f ""[filesize>10M]"").
The following numeric meta fields can be used with comparisons <, <=, >, >=, = (equals), != (not equals):

filesize: The number of bytes, if known in advance
width: Width of the video, if known
height: Height of the video, if known
tbr: Average bitrate of audio and video in KBit/s
abr: Average audio bitrate in KBit/s
vbr: Average video bitrate in KBit/s
asr: Audio sampling rate in Hertz
fps: Frame rate

Also filtering work for comparisons = (equals), ^= (starts with), $= (ends with), *= (contains) and following string meta fields:

ext: File extension
acodec: Name of the audio codec in use
vcodec: Name of the video codec in use
container: Name of the container format
protocol: The protocol that will be used for the actual download, lower-case (http, https, rtsp, rtmp, rtmpe, mms, f4m, ism, http_dash_segments, m3u8, or m3u8_native)
format_id: A short description of the format

Any string comparison may be prefixed with negation ! in order to produce an opposite comparison, e.g. !*= (does not contain).
Note that none of the aforementioned meta fields are guaranteed to be present since this solely depends on the metadata obtained by particular extractor, i.e. the metadata offered by the video hoster.
Formats for which the value is not known are excluded unless you put a question mark (?) after the operator. You can combine format filters, so -f ""[height <=? 720][tbr>500]"" selects up to 720p videos (or videos where the height is not known) with a bitrate of at least 500 KBit/s.
You can merge the video and audio of two formats into a single file using -f <video-format>+<audio-format> (requires ffmpeg or avconv installed), for example -f bestvideo+bestaudio will download the best video-only format, the best audio-only format and mux them together with ffmpeg/avconv.
Format selectors can also be grouped using parentheses, for example if you want to download the best mp4 and webm formats with a height lower than 480 you can use -f '(mp4,webm)[height<480]'.
Since the end of April 2015 and version 2015.04.26, youtube-dl uses -f bestvideo+bestaudio/best as the default format selection (see #5447, #5456). If ffmpeg or avconv are installed this results in downloading bestvideo and bestaudio separately and muxing them together into a single file giving the best overall quality available. Otherwise it falls back to best and results in downloading the best available quality served as a single file. best is also needed for videos that don't come from YouTube because they don't provide the audio and video in two different files. If you want to only download some DASH formats (for example if you are not interested in getting videos with a resolution higher than 1080p), you can add -f bestvideo[height<=?1080]+bestaudio/best to your configuration file. Note that if you use youtube-dl to stream to stdout (and most likely to pipe it to your media player then), i.e. you explicitly specify output template as -o -, youtube-dl still uses -f best format selection in order to start content delivery immediately to your player and not to wait until bestvideo and bestaudio are downloaded and muxed.
If you want to preserve the old format selection behavior (prior to youtube-dl 2015.04.26), i.e. you want to download the best available quality media served as a single file, you should explicitly specify your choice with -f best. You may want to add it to the configuration file in order not to type it every time you run youtube-dl.
Format selection examples
Note that on Windows you may need to use double quotes instead of single.
# Download best mp4 format available or any other best if no mp4 available
$ youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best'

# Download best format available but no better than 480p
$ youtube-dl -f 'bestvideo[height<=480]+bestaudio/best[height<=480]'

# Download best video only format but no bigger than 50 MB
$ youtube-dl -f 'best[filesize<50M]'

# Download best format available via direct link over HTTP/HTTPS protocol
$ youtube-dl -f '(bestvideo+bestaudio/best)[protocol^=http]'

# Download the best video format and the best audio format without merging them
$ youtube-dl -f 'bestvideo,bestaudio' -o '%(title)s.f%(format_id)s.%(ext)s'
Note that in the last example, an output template is recommended as bestvideo and bestaudio may have the same file name.
VIDEO SELECTION
Videos can be filtered by their upload date using the options --date, --datebefore or --dateafter. They accept dates in two formats:

Absolute dates: Dates in the format YYYYMMDD.
Relative dates: Dates in the format (now|today)[+-][0-9](day|week|month|year)(s)?

Examples:
# Download only the videos uploaded in the last 6 months
$ youtube-dl --dateafter now-6months

# Download only the videos uploaded on January 1, 1970
$ youtube-dl --date 19700101

$ # Download only the videos uploaded in the 200x decade
$ youtube-dl --dateafter 20000101 --datebefore 20091231
FAQ
How do I update youtube-dl?
If you've followed our manual installation instructions, you can simply run youtube-dl -U (or, on Linux, sudo youtube-dl -U).
If you have used pip, a simple sudo pip install -U youtube-dl is sufficient to update.
If you have installed youtube-dl using a package manager like apt-get or yum, use the standard system update mechanism to update. Note that distribution packages are often outdated. As a rule of thumb, youtube-dl releases at least once a month, and often weekly or even daily. Simply go to https://yt-dl.org to find out the current version. Unfortunately, there is nothing we youtube-dl developers can do if your distribution serves a really outdated version. You can (and should) complain to your distribution in their bugtracker or support forum.
As a last resort, you can also uninstall the version installed by your package manager and follow our manual installation instructions. For that, remove the distribution's package, with a line like
sudo apt-get remove -y youtube-dl

Afterwards, simply follow our manual installation instructions:
sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl
sudo chmod a+rx /usr/local/bin/youtube-dl
hash -r

Again, from then on you'll be able to update with sudo youtube-dl -U.
youtube-dl is extremely slow to start on Windows
Add a file exclusion for youtube-dl.exe in Windows Defender settings.
I'm getting an error Unable to extract OpenGraph title on YouTube playlists
YouTube changed their playlist format in March 2014 and later on, so you'll need at least youtube-dl 2014.07.25 to download all YouTube videos.
If you have installed youtube-dl with a package manager, pip, setup.py or a tarball, please use that to update. Note that Ubuntu packages do not seem to get updated anymore. Since we are not affiliated with Ubuntu, there is little we can do. Feel free to report bugs to the Ubuntu packaging people - all they have to do is update the package to a somewhat recent version. See above for a way to update.
I'm getting an error when trying to use output template: error: using output template conflicts with using title, video ID or auto number
Make sure you are not using -o with any of these options -t, --title, --id, -A or --auto-number set in command line or in a configuration file. Remove the latter if any.
Do I always have to pass -citw?
By default, youtube-dl intends to have the best options (incidentally, if you have a convincing case that these should be different, please file an issue where you explain that). Therefore, it is unnecessary and sometimes harmful to copy long option strings from webpages. In particular, the only option out of -citw that is regularly useful is -i.
Can you please put the -b option back?
Most people asking this question are not aware that youtube-dl now defaults to downloading the highest available quality as reported by YouTube, which will be 1080p or 720p in some cases, so you no longer need the -b option. For some specific videos, maybe YouTube does not report them to be available in a specific high quality format you're interested in. In that case, simply request it with the -f option and youtube-dl will try to download it.
I get HTTP error 402 when trying to download a video. What's this?
Apparently YouTube requires you to pass a CAPTCHA test if you download too much. We're considering to provide a way to let you solve the CAPTCHA, but at the moment, your best course of action is pointing a web browser to the youtube URL, solving the CAPTCHA, and restart youtube-dl.
Do I need any other programs?
youtube-dl works fine on its own on most sites. However, if you want to convert video/audio, you'll need avconv or ffmpeg. On some sites - most notably YouTube - videos can be retrieved in a higher quality format without sound. youtube-dl will detect whether avconv/ffmpeg is present and automatically pick the best option.
Videos or video formats streamed via RTMP protocol can only be downloaded when rtmpdump is installed. Downloading MMS and RTSP videos requires either mplayer or mpv to be installed.
I have downloaded a video but how can I play it?
Once the video is fully downloaded, use any video player, such as mpv, vlc or mplayer.
I extracted a video URL with -g, but it does not play on another machine / in my web browser.
It depends a lot on the service. In many cases, requests for the video (to download/play it) must come from the same IP address and with the same cookies and/or HTTP headers. Use the --cookies option to write the required cookies into a file, and advise your downloader to read cookies from that file. Some sites also require a common user agent to be used, use --dump-user-agent to see the one in use by youtube-dl. You can also get necessary cookies and HTTP headers from JSON output obtained with --dump-json.
It may be beneficial to use IPv6; in some cases, the restrictions are only applied to IPv4. Some services (sometimes only for a subset of videos) do not restrict the video URL by IP address, cookie, or user-agent, but these are the exception rather than the rule.
Please bear in mind that some URL protocols are not supported by browsers out of the box, including RTMP. If you are using -g, your own downloader must support these as well.
If you want to play the video on a machine that is not running youtube-dl, you can relay the video content from the machine that runs youtube-dl. You can use -o - to let youtube-dl stream a video to stdout, or simply allow the player to download the files written by youtube-dl in turn.
ERROR: no fmt_url_map or conn information found in video info
YouTube has switched to a new video info format in July 2011 which is not supported by old versions of youtube-dl. See above for how to update youtube-dl.
ERROR: unable to download video
YouTube requires an additional signature since September 2012 which is not supported by old versions of youtube-dl. See above for how to update youtube-dl.
Video URL contains an ampersand and I'm getting some strange output [1] 2839 or 'v' is not recognized as an internal or external command
That's actually the output from your shell. Since ampersand is one of the special shell characters it's interpreted by the shell preventing you from passing the whole URL to youtube-dl. To disable your shell from interpreting the ampersands (or any other special characters) you have to either put the whole URL in quotes or escape them with a backslash (which approach will work depends on your shell).
For example if your URL is https://www.youtube.com/watch?t=4&v=BaW_jenozKc you should end up with following command:
youtube-dl 'https://www.youtube.com/watch?t=4&v=BaW_jenozKc'
or
youtube-dl https://www.youtube.com/watch?t=4\&v=BaW_jenozKc
For Windows you have to use the double quotes:
youtube-dl ""https://www.youtube.com/watch?t=4&v=BaW_jenozKc""
ExtractorError: Could not find JS function u'OF'
In February 2015, the new YouTube player contained a character sequence in a string that was misinterpreted by old versions of youtube-dl. See above for how to update youtube-dl.
HTTP Error 429: Too Many Requests or 402: Payment Required
These two error codes indicate that the service is blocking your IP address because of overuse. Contact the service and ask them to unblock your IP address, or - if you have acquired a whitelisted IP address already - use the --proxy or --source-address options to select another IP address.
SyntaxError: Non-ASCII character
The error
File ""youtube-dl"", line 2
SyntaxError: Non-ASCII character '\x93' ...

means you're using an outdated version of Python. Please update to Python 2.6 or 2.7.
What is this binary file? Where has the code gone?
Since June 2012 (#342) youtube-dl is packed as an executable zipfile, simply unzip it (might need renaming to youtube-dl.zip first on some systems) or clone the git repository, as laid out above. If you modify the code, you can run it by executing the __main__.py file. To recompile the executable, run make youtube-dl.
The exe throws an error due to missing MSVCR100.dll
To run the exe you need to install first the Microsoft Visual C++ 2010 Redistributable Package (x86).
On Windows, how should I set up ffmpeg and youtube-dl? Where should I put the exe files?
If you put youtube-dl and ffmpeg in the same directory that you're running the command from, it will work, but that's rather cumbersome.
To make a different directory work - either for ffmpeg, or for youtube-dl, or for both - simply create the directory (say, C:\bin, or C:\Users\<User name>\bin), put all the executables directly in there, and then set your PATH environment variable to include that directory.
From then on, after restarting your shell, you will be able to access both youtube-dl and ffmpeg (and youtube-dl will be able to find ffmpeg) by simply typing youtube-dl or ffmpeg, no matter what directory you're in.
How do I put downloads into a specific folder?
Use the -o to specify an output template, for example -o ""/home/user/videos/%(title)s-%(id)s.%(ext)s"". If you want this for all of your downloads, put the option into your configuration file.
How do I download a video starting with a -?
Either prepend https://www.youtube.com/watch?v= or separate the ID from the options with --:
youtube-dl -- -wNyEUrxzFU
youtube-dl ""https://www.youtube.com/watch?v=-wNyEUrxzFU""

How do I pass cookies to youtube-dl?
Use the --cookies option, for example --cookies /path/to/cookies/file.txt.
In order to extract cookies from browser use any conforming browser extension for exporting cookies. For example, cookies.txt (for Chrome) or cookies.txt (for Firefox).
Note that the cookies file must be in Mozilla/Netscape format and the first line of the cookies file must be either # HTTP Cookie File or # Netscape HTTP Cookie File. Make sure you have correct newline format in the cookies file and convert newlines if necessary to correspond with your OS, namely CRLF (\r\n) for Windows and LF (\n) for Unix and Unix-like systems (Linux, macOS, etc.). HTTP Error 400: Bad Request when using --cookies is a good sign of invalid newline format.
Passing cookies to youtube-dl is a good way to workaround login when a particular extractor does not implement it explicitly. Another use case is working around CAPTCHA some websites require you to solve in particular cases in order to get access (e.g. YouTube, CloudFlare).
How do I stream directly to media player?
You will first need to tell youtube-dl to stream media to stdout with -o -, and also tell your media player to read from stdin (it must be capable of this for streaming) and then pipe former to latter. For example, streaming to vlc can be achieved with:
youtube-dl -o - ""https://www.youtube.com/watch?v=BaW_jenozKcj"" | vlc -

How do I download only new videos from a playlist?
Use download-archive feature. With this feature you should initially download the complete playlist with --download-archive /path/to/download/archive/file.txt that will record identifiers of all the videos in a special file. Each subsequent run with the same --download-archive will download only new videos and skip all videos that have been downloaded before. Note that only successful downloads are recorded in the file.
For example, at first,
youtube-dl --download-archive archive.txt ""https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re""

will download the complete PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re playlist and create a file archive.txt. Each subsequent run will only download new videos if any:
youtube-dl --download-archive archive.txt ""https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re""

Should I add --hls-prefer-native into my config?
When youtube-dl detects an HLS video, it can download it either with the built-in downloader or ffmpeg. Since many HLS streams are slightly invalid and ffmpeg/youtube-dl each handle some invalid cases better than the other, there is an option to switch the downloader if needed.
When youtube-dl knows that one particular downloader works better for a given website, that downloader will be picked. Otherwise, youtube-dl will pick the best downloader for general compatibility, which at the moment happens to be ffmpeg. This choice may change in future versions of youtube-dl, with improvements of the built-in downloader and/or ffmpeg.
In particular, the generic extractor (used when your website is not in the list of supported sites by youtube-dl cannot mandate one specific downloader.
If you put either --hls-prefer-native or --hls-prefer-ffmpeg into your configuration, a different subset of videos will fail to download correctly. Instead, it is much better to file an issue or a pull request which details why the native or the ffmpeg HLS downloader is a better choice for your use case.
Can you add support for this anime video site, or site which shows current movies for free?
As a matter of policy (as well as legality), youtube-dl does not include support for services that specialize in infringing copyright. As a rule of thumb, if you cannot easily find a video that the service is quite obviously allowed to distribute (i.e. that has been uploaded by the creator, the creator's distributor, or is published under a free license), the service is probably unfit for inclusion to youtube-dl.
A note on the service that they don't host the infringing content, but just link to those who do, is evidence that the service should not be included into youtube-dl. The same goes for any DMCA note when the whole front page of the service is filled with videos they are not allowed to distribute. A ""fair use"" note is equally unconvincing if the service shows copyright-protected videos in full without authorization.
Support requests for services that do purchase the rights to distribute their content are perfectly fine though. If in doubt, you can simply include a source that mentions the legitimate purchase of content.
How can I speed up work on my issue?
(Also known as: Help, my important issue not being solved!) The youtube-dl core developer team is quite small. While we do our best to solve as many issues as possible, sometimes that can take quite a while. To speed up your issue, here's what you can do:
First of all, please do report the issue at our issue tracker. That allows us to coordinate all efforts by users and developers, and serves as a unified point. Unfortunately, the youtube-dl project has grown too large to use personal email as an effective communication channel.
Please read the bug reporting instructions below. A lot of bugs lack all the necessary information. If you can, offer proxy, VPN, or shell access to the youtube-dl developers. If you are able to, test the issue from multiple computers in multiple countries to exclude local censorship or misconfiguration issues.
If nobody is interested in solving your issue, you are welcome to take matters into your own hands and submit a pull request (or coerce/pay somebody else to do so).
Feel free to bump the issue from time to time by writing a small comment (""Issue is still present in youtube-dl version ...from France, but fixed from Belgium""), but please not more than once a month. Please do not declare your issue as important or urgent.
How can I detect whether a given URL is supported by youtube-dl?
For one, have a look at the list of supported sites. Note that it can sometimes happen that the site changes its URL scheme (say, from https://example.com/video/1234567 to https://example.com/v/1234567 ) and youtube-dl reports an URL of a service in that list as unsupported. In that case, simply report a bug.
It is not possible to detect whether a URL is supported or not. That's because youtube-dl contains a generic extractor which matches all URLs. You may be tempted to disable, exclude, or remove the generic extractor, but the generic extractor not only allows users to extract videos from lots of websites that embed a video from another service, but may also be used to extract video from a service that it's hosting itself. Therefore, we neither recommend nor support disabling, excluding, or removing the generic extractor.
If you want to find out whether a given URL is supported, simply call youtube-dl with it. If you get no videos back, chances are the URL is either not referring to a video or unsupported. You can find out which by examining the output (if you run youtube-dl on the console) or catching an UnsupportedError exception if you run it from a Python program.
Why do I need to go through that much red tape when filing bugs?
Before we had the issue template, despite our extensive bug reporting instructions, about 80% of the issue reports we got were useless, for instance because people used ancient versions hundreds of releases old, because of simple syntactic errors (not in youtube-dl but in general shell usage), because the problem was already reported multiple times before, because people did not actually read an error message, even if it said ""please install ffmpeg"", because people did not mention the URL they were trying to download and many more simple, easy-to-avoid problems, many of whom were totally unrelated to youtube-dl.
youtube-dl is an open-source project manned by too few volunteers, so we'd rather spend time fixing bugs where we are certain none of those simple problems apply, and where we can be reasonably confident to be able to reproduce the issue without asking the reporter repeatedly. As such, the output of youtube-dl -v YOUR_URL_HERE is really all that's required to file an issue. The issue template also guides you through some basic steps you can do, such as checking that your version of youtube-dl is current.
DEVELOPER INSTRUCTIONS
Most users do not need to build youtube-dl and can download the builds or get them from their distribution.
To run youtube-dl as a developer, you don't need to build anything either. Simply execute
python -m youtube_dl

To run the test, simply invoke your favorite test runner, or execute a test file directly; any of the following work:
python -m unittest discover
python test/test_download.py
nosetests

See item 6 of new extractor tutorial for how to run extractor specific test cases.
If you want to create a build of youtube-dl yourself, you'll need

python
make (only GNU make is supported)
pandoc
zip
nosetests

Adding support for a new site
If you want to add support for a new site, first of all make sure this site is not dedicated to copyright infringement. youtube-dl does not support such sites thus pull requests adding support for them will be rejected.
After you have ensured this site is distributing its content legally, you can follow this quick list (assuming your service is called yourextractor):


Fork this repository


Check out the source code with:
 git clone git@github.com:YOUR_GITHUB_USERNAME/youtube-dl.git



Start a new git branch with
 cd youtube-dl
 git checkout -b yourextractor



Start with this simple template and save it to youtube_dl/extractor/yourextractor.py:
# coding: utf-8
from __future__ import unicode_literals

from .common import InfoExtractor


class YourExtractorIE(InfoExtractor):
    _VALID_URL = r'https?://(?:www\.)?yourextractor\.com/watch/(?P<id>[0-9]+)'
    _TEST = {
        'url': 'https://yourextractor.com/watch/42',
        'md5': 'TODO: md5 sum of the first 10241 bytes of the video file (use --test)',
        'info_dict': {
            'id': '42',
            'ext': 'mp4',
            'title': 'Video title goes here',
            'thumbnail': r're:^https?://.*\.jpg$',
            # TODO more properties, either as:
            # * A value
            # * MD5 checksum; start the string with md5:
            # * A regular expression; start the string with re:
            # * Any Python type (for example int or float)
        }
    }

    def _real_extract(self, url):
        video_id = self._match_id(url)
        webpage = self._download_webpage(url, video_id)

        # TODO more code goes here, for example ...
        title = self._html_search_regex(r'<h1>(.+?)</h1>', webpage, 'title')

        return {
            'id': video_id,
            'title': title,
            'description': self._og_search_description(webpage),
            'uploader': self._search_regex(r'<div[^>]+id=""uploader""[^>]*>([^<]+)<', webpage, 'uploader', fatal=False),
            # TODO more properties (see youtube_dl/extractor/common.py)
        }


Add an import in youtube_dl/extractor/extractors.py.


Run python test/test_download.py TestDownload.test_YourExtractor. This should fail at first, but you can continually re-run it until you're done. If you decide to add more than one test, then rename _TEST to _TESTS and make it into a list of dictionaries. The tests will then be named TestDownload.test_YourExtractor, TestDownload.test_YourExtractor_1, TestDownload.test_YourExtractor_2, etc. Note that tests with only_matching key in test's dict are not counted in.


Have a look at youtube_dl/extractor/common.py for possible helper methods and a detailed description of what your extractor should and may return. Add tests and code for as many as you want.


Make sure your code follows youtube-dl coding conventions and check the code with flake8:
 $ flake8 youtube_dl/extractor/yourextractor.py



Make sure your code works under all Python versions claimed supported by youtube-dl, namely 2.6, 2.7, and 3.2+.


When the tests pass, add the new files and commit them and push the result, like this:
$ git add youtube_dl/extractor/extractors.py
$ git add youtube_dl/extractor/yourextractor.py
$ git commit -m '[yourextractor] Add new extractor'
$ git push origin yourextractor



Finally, create a pull request. We'll then review and merge it.


In any case, thank you very much for your contributions!
youtube-dl coding conventions
This section introduces a guide lines for writing idiomatic, robust and future-proof extractor code.
Extractors are very fragile by nature since they depend on the layout of the source data provided by 3rd party media hosters out of your control and this layout tends to change. As an extractor implementer your task is not only to write code that will extract media links and metadata correctly but also to minimize dependency on the source's layout and even to make the code foresee potential future changes and be ready for that. This is important because it will allow the extractor not to break on minor layout changes thus keeping old youtube-dl versions working. Even though this breakage issue is easily fixed by emitting a new version of youtube-dl with a fix incorporated, all the previous versions become broken in all repositories and distros' packages that may not be so prompt in fetching the update from us. Needless to say, some non rolling release distros may never receive an update at all.
Mandatory and optional metafields
For extraction to work youtube-dl relies on metadata your extractor extracts and provides to youtube-dl expressed by an information dictionary or simply info dict. Only the following meta fields in the info dict are considered mandatory for a successful extraction process by youtube-dl:

id (media identifier)
title (media title)
url (media download URL) or formats

In fact only the last option is technically mandatory (i.e. if you can't figure out the download location of the media the extraction does not make any sense). But by convention youtube-dl also treats id and title as mandatory. Thus the aforementioned metafields are the critical data that the extraction does not make any sense without and if any of them fail to be extracted then the extractor is considered completely broken.
Any field apart from the aforementioned ones are considered optional. That means that extraction should be tolerant to situations when sources for these fields can potentially be unavailable (even if they are always available at the moment) and future-proof in order not to break the extraction of general purpose mandatory fields.
Example
Say you have some source dictionary meta that you've fetched as JSON with HTTP request and it has a key summary:
meta = self._download_json(url, video_id)
Assume at this point meta's layout is:
{
    ...
    ""summary"": ""some fancy summary text"",
    ...
}
Assume you want to extract summary and put it into the resulting info dict as description. Since description is an optional meta field you should be ready that this key may be missing from the meta dict, so that you should extract it like:
description = meta.get('summary')  # correct
and not like:
description = meta['summary']  # incorrect
The latter will break extraction process with KeyError if summary disappears from meta at some later time but with the former approach extraction will just go ahead with description set to None which is perfectly fine (remember None is equivalent to the absence of data).
Similarly, you should pass fatal=False when extracting optional data from a webpage with _search_regex, _html_search_regex or similar methods, for instance:
description = self._search_regex(
    r'<span[^>]+id=""title""[^>]*>([^<]+)<',
    webpage, 'description', fatal=False)
With fatal set to False if _search_regex fails to extract description it will emit a warning and continue extraction.
You can also pass default=<some fallback value>, for example:
description = self._search_regex(
    r'<span[^>]+id=""title""[^>]*>([^<]+)<',
    webpage, 'description', default=None)
On failure this code will silently continue the extraction with description set to None. That is useful for metafields that may or may not be present.
Provide fallbacks
When extracting metadata try to do so from multiple sources. For example if title is present in several places, try extracting from at least some of them. This makes it more future-proof in case some of the sources become unavailable.
Example
Say meta from the previous example has a title and you are about to extract it. Since title is a mandatory meta field you should end up with something like:
title = meta['title']
If title disappears from meta in future due to some changes on the hoster's side the extraction would fail since title is mandatory. That's expected.
Assume that you have some another source you can extract title from, for example og:title HTML meta of a webpage. In this case you can provide a fallback scenario:
title = meta.get('title') or self._og_search_title(webpage)
This code will try to extract from meta first and if it fails it will try extracting og:title from a webpage.
Regular expressions
Don't capture groups you don't use
Capturing group must be an indication that it's used somewhere in the code. Any group that is not used must be non capturing.
Example
Don't capture id attribute name here since you can't use it for anything anyway.
Correct:
r'(?:id|ID)=(?P<id>\d+)'
Incorrect:
r'(id|ID)=(?P<id>\d+)'
Make regular expressions relaxed and flexible
When using regular expressions try to write them fuzzy, relaxed and flexible, skipping insignificant parts that are more likely to change, allowing both single and double quotes for quoted values and so on.
Example
Say you need to extract title from the following HTML code:
<span style=""position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;"" class=""title"">some fancy title</span>
The code for that task should look similar to:
title = self._search_regex(
    r'<span[^>]+class=""title""[^>]*>([^<]+)', webpage, 'title')
Or even better:
title = self._search_regex(
    r'<span[^>]+class=([""\'])title\1[^>]*>(?P<title>[^<]+)',
    webpage, 'title', group='title')
Note how you tolerate potential changes in the style attribute's value or switch from using double quotes to single for class attribute:
The code definitely should not look like:
title = self._search_regex(
    r'<span style=""position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;"" class=""title"">(.*?)</span>',
    webpage, 'title', group='title')
Long lines policy
There is a soft limit to keep lines of code under 80 characters long. This means it should be respected if possible and if it does not make readability and code maintenance worse.
For example, you should never split long string literals like URLs or some other often copied entities over multiple lines to fit this limit:
Correct:
'https://www.youtube.com/watch?v=FqZTN594JQw&list=PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'
Incorrect:
'https://www.youtube.com/watch?v=FqZTN594JQw&list='
'PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'
Inline values
Extracting variables is acceptable for reducing code duplication and improving readability of complex expressions. However, you should avoid extracting variables used only once and moving them to opposite parts of the extractor file, which makes reading the linear flow difficult.
Example
Correct:
title = self._html_search_regex(r'<title>([^<]+)</title>', webpage, 'title')
Incorrect:
TITLE_RE = r'<title>([^<]+)</title>'
# ...some lines of code...
title = self._html_search_regex(TITLE_RE, webpage, 'title')
Collapse fallbacks
Multiple fallback values can quickly become unwieldy. Collapse multiple fallback values into a single expression via a list of patterns.
Example
Good:
description = self._html_search_meta(
    ['og:description', 'description', 'twitter:description'],
    webpage, 'description', default=None)
Unwieldy:
description = (
    self._og_search_description(webpage, default=None)
    or self._html_search_meta('description', webpage, default=None)
    or self._html_search_meta('twitter:description', webpage, default=None))
Methods supporting list of patterns are: _search_regex, _html_search_regex, _og_search_property, _html_search_meta.
Trailing parentheses
Always move trailing parentheses after the last argument.
Example
Correct:
    lambda x: x['ResultSet']['Result'][0]['VideoUrlSet']['VideoUrl'],
    list)
Incorrect:
    lambda x: x['ResultSet']['Result'][0]['VideoUrlSet']['VideoUrl'],
    list,
)
Use convenience conversion and parsing functions
Wrap all extracted numeric data into safe functions from youtube_dl/utils.py: int_or_none, float_or_none. Use them for string to number conversions as well.
Use url_or_none for safe URL processing.
Use try_get for safe metadata extraction from parsed JSON.
Use unified_strdate for uniform upload_date or any YYYYMMDD meta field extraction, unified_timestamp for uniform timestamp extraction, parse_filesize for filesize extraction, parse_count for count meta fields extraction, parse_resolution, parse_duration for duration extraction, parse_age_limit for age_limit extraction.
Explore youtube_dl/utils.py for more useful convenience functions.
More examples
Safely extract optional description from parsed JSON
description = try_get(response, lambda x: x['result']['video'][0]['summary'], compat_str)
Safely extract more optional metadata
video = try_get(response, lambda x: x['result']['video'][0], dict) or {}
description = video.get('summary')
duration = float_or_none(video.get('durationMs'), scale=1000)
view_count = int_or_none(video.get('views'))
EMBEDDING YOUTUBE-DL
youtube-dl makes the best effort to be a good command-line program, and thus should be callable from any programming language. If you encounter any problems parsing its output, feel free to create a report.
From a Python program, you can embed youtube-dl in a more powerful fashion, like this:
from __future__ import unicode_literals
import youtube_dl

ydl_opts = {}
with youtube_dl.YoutubeDL(ydl_opts) as ydl:
    ydl.download(['https://www.youtube.com/watch?v=BaW_jenozKc'])
Most likely, you'll want to use various options. For a list of options available, have a look at youtube_dl/YoutubeDL.py. For a start, if you want to intercept youtube-dl's output, set a logger object.
Here's a more complete example of a program that outputs only errors (and a short message after the download is finished), and downloads/converts the video to an mp3 file:
from __future__ import unicode_literals
import youtube_dl


class MyLogger(object):
    def debug(self, msg):
        pass

    def warning(self, msg):
        pass

    def error(self, msg):
        print(msg)


def my_hook(d):
    if d['status'] == 'finished':
        print('Done downloading, now converting ...')


ydl_opts = {
    'format': 'bestaudio/best',
    'postprocessors': [{
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'mp3',
        'preferredquality': '192',
    }],
    'logger': MyLogger(),
    'progress_hooks': [my_hook],
}
with youtube_dl.YoutubeDL(ydl_opts) as ydl:
    ydl.download(['https://www.youtube.com/watch?v=BaW_jenozKc'])
BUGS
Bugs and suggestions should be reported at: https://github.com/ytdl-org/youtube-dl/issues. Unless you were prompted to or there is another pertinent reason (e.g. GitHub fails to accept the bug report), please do not send bug reports via personal email. For discussions, join us in the IRC channel #youtube-dl on freenode (webchat).
Please include the full output of youtube-dl when run with -v, i.e. add -v flag to your command line, copy the whole output and post it in the issue body wrapped in ``` for better formatting. It should look similar to this:
$ youtube-dl -v <your command line>
[debug] System config: []
[debug] User config: []
[debug] Command-line args: [u'-v', u'https://www.youtube.com/watch?v=BaW_jenozKcj']
[debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251
[debug] youtube-dl version 2015.12.06
[debug] Git HEAD: 135392e
[debug] Python version 2.6.6 - Windows-2003Server-5.2.3790-SP2
[debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4
[debug] Proxy map: {}
...

Do not post screenshots of verbose logs; only plain text is acceptable.
The output (including the first lines) contains important debugging information. Issues without the full output are often not reproducible and therefore do not get solved in short order, if ever.
Please re-read your issue once again to avoid a couple of common mistakes (you can and should use this as a checklist):
Is the description of the issue itself sufficient?
We often get issue reports that we cannot really decipher. While in most cases we eventually get the required information after asking back multiple times, this poses an unnecessary drain on our resources. Many contributors, including myself, are also not native speakers, so we may misread some parts.
So please elaborate on what feature you are requesting, or what bug you want to be fixed. Make sure that it's obvious

What the problem is
How it could be fixed
How your proposed solution would look like

If your report is shorter than two lines, it is almost certainly missing some of these, which makes it hard for us to respond to it. We're often too polite to close the issue outright, but the missing info makes misinterpretation likely. As a committer myself, I often get frustrated by these issues, since the only possible way for me to move forward on them is to ask for clarification over and over.
For bug reports, this means that your report should contain the complete output of youtube-dl when called with the -v flag. The error message you get for (most) bugs even says so, but you would not believe how many of our bug reports do not contain this information.
If your server has multiple IPs or you suspect censorship, adding --call-home may be a good idea to get more diagnostics. If the error is ERROR: Unable to extract ... and you cannot reproduce it from multiple countries, add --dump-pages (warning: this will yield a rather large output, redirect it to the file log.txt by adding >log.txt 2>&1 to your command-line) or upload the .dump files you get when you add --write-pages somewhere.
Site support requests must contain an example URL. An example URL is a URL you might want to download, like https://www.youtube.com/watch?v=BaW_jenozKc. There should be an obvious video present. Except under very special circumstances, the main page of a video service (e.g. https://www.youtube.com/) is not an example URL.
Are you using the latest version?
Before reporting any issue, type youtube-dl -U. This should report that you're up-to-date. About 20% of the reports we receive are already fixed, but people are using outdated versions. This goes for feature requests as well.
Is the issue already documented?
Make sure that someone has not already opened the issue you're trying to open. Search at the top of the window or browse the GitHub Issues of this repository. If there is an issue, feel free to write something along the lines of ""This affects me as well, with version 2015.01.01. Here is some more information on the issue: ..."". While some issues may be old, a new post into them often spurs rapid activity.
Why are existing options not enough?
Before requesting a new feature, please have a quick peek at the list of supported options. Many feature requests are for features that actually exist already! Please, absolutely do show off your work in the issue report and detail how the existing similar options do not solve your problem.
Is there enough context in your bug report?
People want to solve problems, and often think they do us a favor by breaking down their larger problems (e.g. wanting to skip already downloaded files) to a specific request (e.g. requesting us to look whether the file exists before downloading the info page). However, what often happens is that they break down the problem into two steps: One simple, and one impossible (or extremely complicated one).
We are then presented with a very complicated request when the original problem could be solved far easier, e.g. by recording the downloaded video IDs in a separate file. To avoid this, you must include the greater context where it is non-obvious. In particular, every feature request that does not consist of adding support for a new site should contain a use case scenario that explains in what situation the missing feature would be useful.
Does the issue involve one problem, and one problem only?
Some of our users seem to think there is a limit of issues they can or should open. There is no limit of issues they can or should open. While it may seem appealing to be able to dump all your issues into one ticket, that means that someone who solves one of your issues cannot mark the issue as closed. Typically, reporting a bunch of issues leads to the ticket lingering since nobody wants to attack that behemoth, until someone mercifully splits the issue into multiple ones.
In particular, every site support request issue should only pertain to services at one site (generally under a common domain, but always using the same backend technology). Do not request support for vimeo user videos, White house podcasts, and Google Plus pages in the same issue. Also, make sure that you don't post bug reports alongside feature requests. As a rule of thumb, a feature request does not include outputs of youtube-dl that are not immediately related to the feature at hand. Do not post reports of a network error alongside the request for a new video service.
Is anyone going to need the feature?
Only post features that you (or an incapacitated friend you can personally talk to) require. Do not post features because they seem like a good idea. If they are really useful, they will be requested by someone who requires them.
Is your question about youtube-dl?
It may sound strange, but some bug reports we receive are completely unrelated to youtube-dl and relate to a different, or even the reporter's own, application. Please make sure that you are actually using youtube-dl. If you are using a UI for youtube-dl, report the bug to the maintainer of the actual application providing the UI. On the other hand, if your UI for youtube-dl fails in some way you believe is related to youtube-dl, by all means, go ahead and report the bug.
COPYRIGHT
youtube-dl is released into the public domain by the copyright holders.
This README file was originally written by Daniel Bolton and is likewise released into the public domain.
",youtubedl download videos youtubecom video platforms installation description options configuration output template format selection video selection faq developer instructions embedding youtubedl bugs copyright installation install right away unix users linux macos etc type sudo curl l httpsytdlorgdownloadslatestyoutubedl usrlocalbinyoutubedl sudo chmod arx usrlocalbinyoutubedl curl alternatively use recent wget sudo wget httpsytdlorgdownloadslatestyoutubedl usrlocalbinyoutubedl sudo chmod arx usrlocalbinyoutubedl windows users download exe file place location path except systemrootsystem eg put cwindowssystem also use pip sudo h pip install upgrade youtubedl command update youtubedl already installed see pypi page information macos users install youtubedl homebrew brew install youtubedl macports sudo port install youtubedl alternatively refer developer instructions check work git repository options including pgp signatures see youtubedl download page description youtubedl commandline program download videos youtubecom sites requires python interpreter version platform specific work unix box windows macos released public domain means modify redistribute use however like youtubedl options url url options h help print help text exit version print program version exit u update update program latest version make sure sufficient permissions run sudo needed ignoreerrors continue download errors example skip unavailable videos playlist abortonerror abort downloading videos playlist command line error occurs dumpuseragent display current browser identification listextractors list supported extractors extractordescriptions output descriptions supported extractors forcegenericextractor force extraction use generic extractor defaultsearch prefix use prefix unqualified urls example gvsearch downloads two videos google videos youtubedl large apple use value auto let youtubedl guess autowarning emit warning guessing error throws error default value fixuperror repairs broken urls emits error possible instead searching ignoreconfig read configuration files given global configuration file etcyoutubedlconf read user configuration configyoutube dlconfig appdatayoutubedlconfigtxt windows configlocation path location configuration file either path config containing directory flatplaylist extract videos playlist list markwatched mark videos watched youtube nomarkwatched mark videos watched youtube nocolor emit color codes output network options proxy url use specified httphttpssocks proxy enable socks proxy specify proper scheme example socks pass empty string proxy direct connection sockettimeout seconds time wait giving seconds sourceaddress ip clientside ip address bind forceipv make connections via ipv forceipv make connections via ipv geo restriction geoverificationproxy url use proxy verify ip address georestricted sites default proxy specified proxy none option present used actual downloading geobypass bypass geographic restriction via faking xforwardedfor http header nogeobypass bypass geographic restriction via faking xforwardedfor http header geobypasscountry code force bypass geographic restriction explicitly provided twoletter iso country code geobypassipblock ipblock force bypass geographic restriction explicitly provided ip block cidr notation video selection playliststart number playlist video start default playlistend number playlist video end default last playlistitems itemspec playlist video items download specify indices videos playlist separated commas like playlistitems want download videos indexed playlist specify range playlistitems download videos index matchtitle regex download matching titles regex caseless substring rejecttitle regex skip download matching titles regex caseless substring maxdownloads number abort downloading number files minfilesize size download videos smaller size eg k maxfilesize size download videos larger size eg k date date download videos uploaded date datebefore date download videos uploaded date ie inclusive dateafter date download videos uploaded date ie inclusive minviews count download videos less count views maxviews count download videos count views matchfilter filter generic video filter specify key see output template list available keys match key present key check key present key number like commentcount also works compare number key literal like uploader mike smith also works match string literal require multiple matches values known excluded unless put question mark operator example match videos liked times disliked less times dislike functionality available given service also description use matchfilter likecount dislikecount description noplaylist download video url refers video playlist yesplaylist download playlist url refers video playlist agelimit years download videos suitable given age downloadarchive file download videos listed archive file record ids downloaded videos includeads download advertisements well experimental download options r limitrate rate maximum download rate bytes per second eg k r retries retries number retries default infinite fragmentretries retries number retries fragment default infinite dash hlsnative ism skipunavailablefragments skip unavailable fragments dash hlsnative ism abortonunavailablefragment abort downloading fragment available keepfragments keep downloaded fragments disk downloading finished fragments erased default buffersize size size download buffer eg k default noresizebuffer automatically adjust buffer size default buffer size automatically resized initial value size httpchunksize size size chunk chunkbased http downloading eg default disabled may useful bypassing bandwidth throttling imposed webserver experimental playlistreverse download playlist videos reverse order playlistrandom download playlist videos random order xattrsetfilesize set file xattribute ytdlfilesize expected file size hlsprefernative use native hls downloader instead ffmpeg hlspreferffmpeg use ffmpeg instead native hls downloader hlsusempegts use mpegts container hls videos allowing play video downloading players may able play externaldownloader command use specified external downloader currently supports ariacavconvaxelcurlffmpeghttpiewget externaldownloaderargs args give arguments external downloader filesystem options batchfile file file containing urls download stdin one url per line lines starting considered comments ignored id use video id file name output template output filename template see output template info autonumberstart number specify start value autonumbers default restrictfilenames restrict filenames ascii characters avoid spaces filenames w nooverwrites overwrite files c continue force resume partially downloaded files default youtubedl resume downloads possible nocontinue resume partially downloaded files restart beginning nopart use part files write directly output file nomtime use lastmodified header set file modification time writedescription write video description description file writeinfojson write video metadata infojson file writeannotations write video annotations annotationsxml file loadinfojson file json file containing video information created writeinfojson option cookies file file read cookies dump cookie jar cachedir dir location filesystem youtubedl store downloaded information permanently default xdgcachehomeyoutubedl cacheyoutubedl moment youtube player files videos obfuscated signatures cached may change nocachedir disable filesystem caching rmcachedir delete filesystem cache files thumbnail images writethumbnail write thumbnail image disk writeallthumbnails write thumbnail image formats disk listthumbnails simulate list available thumbnail formats verbosity simulation options q quiet activate quiet mode nowarnings ignore warnings simulate download video write anything disk skipdownload download video g geturl simulate quiet print url e gettitle simulate quiet print title getid simulate quiet print id getthumbnail simulate quiet print thumbnail url getdescription simulate quiet print video description getduration simulate quiet print video length getfilename simulate quiet print output filename getformat simulate quiet print output format j dumpjson simulate quiet print json information see output template description available keys j dumpsinglejson simulate quiet print json information commandline argument url refers playlist dump whole playlist information single line printjson quiet print video information json video still downloaded newline output progress bar new lines noprogress print progress bar consoletitle display progress console titlebar v verbose print various debugging information dumppages print downloaded pages encoded using base debug problems verbose writepages write downloaded intermediary pages files current directory debug problems printtraffic display sent read http traffic c callhome contact youtubedl server debugging nocallhome contact youtubedl server debugging workarounds encoding encoding force specified encoding experimental nocheckcertificate suppress https certificate validation preferinsecure use unencrypted connection retrieve information video currently supported youtube useragent ua specify custom user agent referer url specify custom referer use video access restricted one domain addheader fieldvalue specify custom http header value separated colon use option multiple times bidiworkaround work around terminals lack bidirectional text support requires bidiv fribidi executable path sleepinterval seconds number seconds sleep download used alone lower bound range randomized sleep download minimum possible number seconds sleep used along maxsleepinterval maxsleepinterval seconds upper bound range randomized sleep download maximum possible number seconds sleep must used along minsleepinterval video format options f format format video format code see format selection info allformats download available video formats preferfreeformats prefer free video formats unless specific one requested f listformats list available formats requested videos youtubeskipdashmanifest download dash manifests related data youtube videos mergeoutputformat format merge required eg bestvideobestaudio output given container format one mkv mp ogg webm flv ignored merge required subtitle options writesub write subtitle file writeautosub write automatically generated subtitle file youtube allsubs download available subtitles video listsubs list available subtitles video subformat format subtitle format accepts formats preference example srt asssrtbest sublang langs languages subtitles download optional separated commas use list subs available language tags authentication options u username username login account id p password password account password option left youtubedl ask interactively twofactor twofactor twofactor authentication code n netrc use netrc authentication data videopassword password video password vimeo smotri youku adobe pass options apmso mso adobe pass multiplesystem operator tv provider identifier use aplistmso list available msos apusername username multiplesystem operator account login appassword password multiplesystem operator account password option left youtubedl ask interactively aplistmso list supported multiplesystem operators postprocessing options x extractaudio convert video files audioonly files requires ffmpeg avconv ffprobe avprobe audioformat format specify audio format best aac flac mp opus vorbis wav best default effect without x audioquality quality specify ffmpegavconv audio quality insert value better worse vbr specific bitrate like k default recodevideo format encode video another format necessary currently supported mpflvoggwebmmkvavi postprocessorargs args give arguments postprocessor k keepvideo keep video file disk post processing video erased default nopostoverwrites overwrite postprocessed files postprocessed files overwritten default embedsubs embed subtitles video mp webm mkv videos embedthumbnail embed thumbnail audio cover art addmetadata write metadata video file metadatafromtitle format parse additional metadata like song title artist video title format syntax output regular expression named capture groups may also used parsed parameters replace existing values example metadatafrom title artists titles matches title like coldplay paradise example regex metadatafromtitle partist ptitle xattrs write metadata video files xattrs using dublin core xdg standards fixup policy automatically correct known faults file one never nothing warn emit warning detectorwarn default fix file warn otherwise preferavconv prefer avconv ffmpeg running postprocessors preferffmpeg prefer ffmpeg avconv running postprocessors default ffmpeglocation path location ffmpegavconv binary either path binary containing directory exec cmd execute command file downloading similar finds exec syntax example exec adb push sdcardmusic rm convertsubs format convert subtitles format currently supported srtassvttlrc configuration configure youtubedl placing supported command line option configuration file linux macos system wide configuration file located etcyoutubedlconf user wide configuration file configyoutubedlconfig windows user wide configuration file locations appdatayoutubedlconfigtxt cusersuser nameyoutubedlconf note default configuration file may exist may need create example following configuration file youtubedl always extract audio copy mtime use proxy save videos movies directory home directory lines starting comments always extract audio x copy mtime nomtime use proxy proxy save videos movies directory home directory moviestitlesexts note options configuration file options aka switches used regular command line calls thus must whitespace eg proxy proxy use ignoreconfig want disable configuration file particular youtubedl run also use configlocation want use custom configuration file particular youtubedl run authentication netrc file may also want configure automatic credentials storage extractors support authentication providing login password username password order pass credentials command line arguments every youtubedl execution prevent tracking plain text passwords shell command history achieve using netrc file per extractor basis need create netrc file home restrict permissions readwrite touch homenetrc chmod arwxurw homenetrc add credentials extractor following format extractor name extractor lowercase machine extractor login login password password example machine youtube login myaccountgmailcom password myyoutubepassword machine twitch login mytwitchaccountname password mytwitchpassword activate authentication netrc file pass netrc youtubedl place configuration file windows may also need setup home environment variable manually example set homeuserprofile output template option allows users indicate template output file names tldr navigate examples basic usage set template arguments downloading single file like youtubedl funnyvideoflv httpssomevideo however may contain special sequences replaced downloading video special sequences may formatted according python string formatting operations example names named clarify percent symbol followed name parentheses followed formatting operations allowed names along sequence type id string video identifier title string video title url string video url ext string video filename extension alttitle string secondary title video displayid string alternative identifier video uploader string full name video uploader license string license name video licensed creator string creator video releasedate string date yyyymmdd video released timestamp numeric unix timestamp moment video became available uploaddate string video upload date yyyymmdd uploaderid string nickname id video uploader channel string full name channel video uploaded channelid string id channel location string physical location video filmed duration numeric length video seconds viewcount numeric many users watched video platform likecount numeric number positive ratings video dislikecount numeric number negative ratings video repostcount numeric number reposts video averagerating numeric average rating give users scale used depends webpage commentcount numeric number comments video agelimit numeric age restriction video years islive boolean whether video live stream fixedlength video starttime numeric time seconds reproduction start specified url endtime numeric time seconds reproduction end specified url format string humanreadable description format formatid string format code specified format formatnote string additional info format width numeric width video height numeric height video resolution string textual description width height tbr numeric average bitrate audio video kbits abr numeric average audio bitrate kbits acodec string name audio codec use asr numeric audio sampling rate hertz vbr numeric average video bitrate kbits fps numeric frame rate vcodec string name video codec use container string name container format filesize numeric number bytes known advance filesizeapprox numeric estimate number bytes protocol string protocol used actual download extractor string name extractor extractorkey string key name extractor epoch numeric unix epoch creating file autonumber numeric fivedigit number increased download starting zero playlist string name id playlist contains video playlistindex numeric index video playlist padded leading zeros according total length playlist playlistid string playlist identifier playlisttitle string playlist title playlistuploader string full name playlist uploader playlistuploaderid string nickname id playlist uploader available video belongs logical chapter section chapter string name title chapter video belongs chapternumber numeric number chapter video belongs chapterid string id chapter video belongs available video episode series programme series string title series programme video episode belongs season string title season video episode belongs seasonnumber numeric number season video episode belongs seasonid string id season video episode belongs episode string title video episode episodenumber numeric number video episode within season episodeid string id video episode available media track part music album track string title track tracknumber numeric number track within album disc trackid string id track artist string artists track genre string genres track album string title album track belongs albumtype string type album albumartist string list artists appeared album discnumber numeric number disc physical medium track belongs releaseyear numeric year yyyy album released aforementioned sequence referenced output template replaced actual value corresponding sequence name note sequences guaranteed present since depend metadata obtained particular extractor sequences replaced na example titlesidsexts mp video title youtubedl test video id bawjenozkcj result youtubedl test videobawjenozkcjmp file created current directory numeric sequences use numeric related formatting example viewcountd result string view count padded zeros characters like output templates also contain arbitrary hierarchical path eg playlistsplaylistindexs titlesexts result downloading video directory corresponding path template missing directory automatically created use percent literals output template use output stdout use current default template titlesidsexts cases dont want special characters spaces transferring downloaded filename windows system filename bitunsafe channel cases add restrictfilenames flag get shorter title output template windows batch files using output template inside windows batch file must escape plain percent characters doubling titlesidsexts become titlesidsexts however touch plain characters eg environment variables expansion stay intact chomepathdesktoptitlesexts output template examples note windows may need use double quotes instead single youtubedl getfilename titlesexts bawjenozkc youtubedl test video amp kinds weird characters youtubedl getfilename titlesexts bawjenozkc restrictfilenames youtubedltestvideomp simple file name download youtube playlist videos separate directory indexed video order playlist youtubedl playlistsplaylistindexs titlesexts httpswwwyoutubecomplaylistlistplwiyxdcpjrngqaqnbcvlslapre download playlists youtube channeluser keeping playlist separate directory youtubedl uploadersplaylistsplaylistindexs titlesexts httpswwwyoutubecomuserthelinuxfoundationplaylists download udemy course keeping chapter separate directory myvideos directory home youtubedl u user p password myvideosplaylistschapternumbers chapterstitlesexts httpswwwudemycomjavatutorial download entire series season keeping series season separate directory cmyvideos youtubedl cmyvideosseriessseasonnumbers seasonsepisodenumbers episodesexts httpsvideomorerukinovdetalayahsezon stream video downloaded stdout youtubedl bawjenozkc format selection default youtubedl tries download best available quality ie want best quality dont need pass special options youtubedl guess default sometimes may want download different format example slow intermittent connection key mechanism achieving socalled format selection based explicitly specify desired format select formats based criterion criteria setup precedence much general syntax format selection format format shorter f format format selector expression ie expression describes format formats would like download tldr navigate examples simplest case requesting specific format example f download format format code equal get list available format codes particular video using listformats f note format codes extractor specific also use file extension currently gp aac flv mp mp ogg wav webm supported download best quality format particular file extension served single file eg f webm download best quality format webm extension served single file also use special names select particular edge case formats best select best quality format represented single file video audio worst select worst quality format represented single file video audio bestvideo select best quality videoonly format eg dash video may available worstvideo select worst quality videoonly format may available bestaudio select best quality audio onlyformat may available worstaudio select worst quality audio onlyformat may available example download worst quality videoonly format use f worstvideo want download multiple videos dont formats available specify order preference using slashes note slash leftassociative ie formats left hand side preferred example f download format available otherwise download format available otherwise download format available otherwise complain suitable formats available download want download several formats video use comma separator eg f download three formats course available sophisticated example combined precedence feature f mpbestvideomabestaudio also filter video formats putting condition brackets f bestheight f filesizem following numeric meta fields used comparisons equals equals filesize number bytes known advance width width video known height height video known tbr average bitrate audio video kbits abr average audio bitrate kbits vbr average video bitrate kbits asr audio sampling rate hertz fps frame rate also filtering work comparisons equals starts ends contains following string meta fields ext file extension acodec name audio codec use vcodec name video codec use container name container format protocol protocol used actual download lowercase http https rtsp rtmp rtmpe mms fm ism httpdashsegments mu munative formatid short description format string comparison may prefixed negation order produce opposite comparison eg contain note none aforementioned meta fields guaranteed present since solely depends metadata obtained particular extractor ie metadata offered video hoster formats value known excluded unless put question mark operator combine format filters f height tbr selects p videos videos height known bitrate least kbits merge video audio two formats single file using f videoformataudioformat requires ffmpeg avconv installed example f bestvideobestaudio download best videoonly format best audioonly format mux together ffmpegavconv format selectors also grouped using parentheses example want download best mp webm formats height lower use f mpwebmheight since end april version youtubedl uses f bestvideobestaudiobest default format selection see ffmpeg avconv installed results downloading bestvideo bestaudio separately muxing together single file giving best overall quality available otherwise falls back best results downloading best available quality served single file best also needed videos dont come youtube dont provide audio video two different files want download dash formats example interested getting videos resolution higher p add f bestvideoheightbestaudiobest configuration file note use youtubedl stream stdout likely pipe media player ie explicitly specify output template youtubedl still uses f best format selection order start content delivery immediately player wait bestvideo bestaudio downloaded muxed want preserve old format selection behavior prior youtubedl ie want download best available quality media served single file explicitly specify choice f best may want add configuration file order type every time run youtubedl format selection examples note windows may need use double quotes instead single download best mp format available best mp available youtubedl f bestvideoextmpbestaudioextmabestextmpbest download best format available better p youtubedl f bestvideoheightbestaudiobestheight download best video format bigger mb youtubedl f bestfilesizem download best format available via direct link httphttps protocol youtubedl f bestvideobestaudiobestprotocolhttp download best video format best audio format without merging youtubedl f bestvideobestaudio titlesfformatidsexts note last example output template recommended bestvideo bestaudio may file name video selection videos filtered upload date using options date datebefore dateafter accept dates two formats absolute dates dates format yyyymmdd relative dates dates format nowtodaydayweekmonthyears examples download videos uploaded last months youtubedl dateafter nowmonths download videos uploaded january youtubedl date download videos uploaded x decade youtubedl dateafter datebefore faq update youtubedl youve followed manual installation instructions simply run youtubedl u linux sudo youtubedl u used pip simple sudo pip install u youtubedl sufficient update installed youtubedl using package manager like aptget yum use standard system update mechanism update note distribution packages often outdated rule thumb youtubedl releases least month often weekly even daily simply go httpsytdlorg find current version unfortunately nothing youtubedl developers distribution serves really outdated version complain distribution bugtracker support forum last resort also uninstall version installed package manager follow manual installation instructions remove distributions package line like sudo aptget remove youtubedl afterwards simply follow manual installation instructions sudo wget httpsytdlorgdownloadslatestyoutubedl usrlocalbinyoutubedl sudo chmod arx usrlocalbinyoutubedl hash r youll able update sudo youtubedl u youtubedl extremely slow start windows add file exclusion youtubedlexe windows defender settings im getting error unable extract opengraph title youtube playlists youtube changed playlist format march later youll need least youtubedl download youtube videos installed youtubedl package manager pip setuppy tarball please use update note ubuntu packages seem get updated anymore since affiliated ubuntu little feel free report bugs ubuntu packaging people update package somewhat recent version see way update im getting error trying use output template error using output template conflicts using title video id auto number make sure using options title id autonumber set command line configuration file remove latter always pass citw default youtubedl intends best options incidentally convincing case different please file issue explain therefore unnecessary sometimes harmful copy long option strings webpages particular option citw regularly useful please put b option back people asking question aware youtubedl defaults downloading highest available quality reported youtube p p cases longer need b option specific videos maybe youtube report available specific high quality format youre interested case simply request f option youtubedl try download get http error trying download video whats apparently youtube requires pass captcha test download much considering provide way let solve captcha moment best course action pointing web browser youtube url solving captcha restart youtubedl need programs youtubedl works fine sites however want convert videoaudio youll need avconv ffmpeg sites notably youtube videos retrieved higher quality format without sound youtubedl detect whether avconvffmpeg present automatically pick best option videos video formats streamed via rtmp protocol downloaded rtmpdump installed downloading mms rtsp videos requires either mplayer mpv installed downloaded video play video fully downloaded use video player mpv vlc mplayer extracted video url g play another machine web browser depends lot service many cases requests video downloadplay must come ip address cookies andor http headers use cookies option write required cookies file advise downloader read cookies file sites also require common user agent used use dumpuseragent see one use youtubedl also get necessary cookies http headers json output obtained dumpjson may beneficial use ipv cases restrictions applied ipv services sometimes subset videos restrict video url ip address cookie useragent exception rather rule please bear mind url protocols supported browsers box including rtmp using g downloader must support well want play video machine running youtubedl relay video content machine runs youtubedl use let youtubedl stream video stdout simply allow player download files written youtubedl turn error fmturlmap conn information found video info youtube switched new video info format july supported old versions youtubedl see update youtubedl error unable download video youtube requires additional signature since september supported old versions youtubedl see update youtubedl video url contains ampersand im getting strange output v recognized internal external command thats actually output shell since ampersand one special shell characters interpreted shell preventing passing whole url youtubedl disable shell interpreting ampersands special characters either put whole url quotes escape backslash approach work depends shell example url httpswwwyoutubecomwatchtvbawjenozkc end following command youtubedl httpswwwyoutubecomwatchtvbawjenozkc youtubedl httpswwwyoutubecomwatchtvbawjenozkc windows use double quotes youtubedl httpswwwyoutubecomwatchtvbawjenozkc extractorerror could find js function uof february new youtube player contained character sequence string misinterpreted old versions youtubedl see update youtubedl http error many requests payment required two error codes indicate service blocking ip address overuse contact service ask unblock ip address acquired whitelisted ip address already use proxy sourceaddress options select another ip address syntaxerror nonascii character error file youtubedl line syntaxerror nonascii character x means youre using outdated version python please update python binary file code gone since june youtubedl packed executable zipfile simply unzip might need renaming youtubedlzip first systems clone git repository laid modify code run executing mainpy file recompile executable run make youtubedl exe throws error due missing msvcrdll run exe need install first microsoft visual c redistributable package x windows set ffmpeg youtubedl put exe files put youtubedl ffmpeg directory youre running command work thats rather cumbersome make different directory work either ffmpeg youtubedl simply create directory say cbin cusersuser namebin put executables directly set path environment variable include directory restarting shell able access youtubedl ffmpeg youtubedl able find ffmpeg simply typing youtubedl ffmpeg matter directory youre put downloads specific folder use specify output template example homeuservideostitlesidsexts want downloads put option configuration file download video starting either prepend httpswwwyoutubecomwatchv separate id options youtubedl wnyeurxzfu youtubedl httpswwwyoutubecomwatchvwnyeurxzfu pass cookies youtubedl use cookies option example cookies pathtocookiesfiletxt order extract cookies browser use conforming browser extension exporting cookies example cookiestxt chrome cookiestxt firefox note cookies file must mozillanetscape format first line cookies file must either http cookie file netscape http cookie file make sure correct newline format cookies file convert newlines necessary correspond os namely crlf rn windows lf n unix unixlike systems linux macos etc http error bad request using cookies good sign invalid newline format passing cookies youtubedl good way workaround login particular extractor implement explicitly another use case working around captcha websites require solve particular cases order get access eg youtube cloudflare stream directly media player first need tell youtubedl stream media stdout also tell media player read stdin must capable streaming pipe former latter example streaming vlc achieved youtubedl httpswwwyoutubecomwatchvbawjenozkcj vlc download new videos playlist use downloadarchive feature feature initially download complete playlist downloadarchive pathtodownloadarchivefiletxt record identifiers videos special file subsequent run downloadarchive download new videos skip videos downloaded note successful downloads recorded file example first youtubedl downloadarchive archivetxt httpswwwyoutubecomplaylistlistplwiyxdcpjrngqaqnbcvlslapre download complete plwiyxdcpjrngqaqnbcvlslapre playlist create file archivetxt subsequent run download new videos youtubedl downloadarchive archivetxt httpswwwyoutubecomplaylistlistplwiyxdcpjrngqaqnbcvlslapre add hlsprefernative config youtubedl detects hls video download either builtin downloader ffmpeg since many hls streams slightly invalid ffmpegyoutubedl handle invalid cases better option switch downloader needed youtubedl knows one particular downloader works better given website downloader picked otherwise youtubedl pick best downloader general compatibility moment happens ffmpeg choice may change future versions youtubedl improvements builtin downloader andor ffmpeg particular generic extractor used website list supported sites youtubedl cannot mandate one specific downloader put either hlsprefernative hlspreferffmpeg configuration different subset videos fail download correctly instead much better file issue pull request details native ffmpeg hls downloader better choice use case add support anime video site site shows current movies free matter policy well legality youtubedl include support services specialize infringing copyright rule thumb cannot easily find video service quite obviously allowed distribute ie uploaded creator creators distributor published free license service probably unfit inclusion youtubedl note service dont host infringing content link evidence service included youtubedl goes dmca note whole front page service filled videos allowed distribute fair use note equally unconvincing service shows copyrightprotected videos full without authorization support requests services purchase rights distribute content perfectly fine though doubt simply include source mentions legitimate purchase content speed work issue also known help important issue solved youtubedl core developer team quite small best solve many issues possible sometimes take quite speed issue heres first please report issue issue tracker allows us coordinate efforts users developers serves unified point unfortunately youtubedl project grown large use personal email effective communication channel please read bug reporting instructions lot bugs lack necessary information offer proxy vpn shell access youtubedl developers able test issue multiple computers multiple countries exclude local censorship misconfiguration issues nobody interested solving issue welcome take matters hands submit pull request coercepay somebody else feel free bump issue time time writing small comment issue still present youtubedl version france fixed belgium please month please declare issue important urgent detect whether given url supported youtubedl one look list supported sites note sometimes happen site changes url scheme say httpsexamplecomvideo httpsexamplecomv youtubedl reports url service list unsupported case simply report bug possible detect whether url supported thats youtubedl contains generic extractor matches urls may tempted disable exclude remove generic extractor generic extractor allows users extract videos lots websites embed video another service may also used extract video service hosting therefore neither recommend support disabling excluding removing generic extractor want find whether given url supported simply call youtubedl get videos back chances url either referring video unsupported find examining output run youtubedl console catching unsupportederror exception run python program need go much red tape filing bugs issue template despite extensive bug reporting instructions issue reports got useless instance people used ancient versions hundreds releases old simple syntactic errors youtubedl general shell usage problem already reported multiple times people actually read error message even said please install ffmpeg people mention url trying download many simple easytoavoid problems many totally unrelated youtubedl youtubedl opensource project manned volunteers wed rather spend time fixing bugs certain none simple problems apply reasonably confident able reproduce issue without asking reporter repeatedly output youtubedl v yoururlhere really thats required file issue issue template also guides basic steps checking version youtubedl current developer instructions users need build youtubedl download builds get distribution run youtubedl developer dont need build anything either simply execute python youtubedl run test simply invoke favorite test runner execute test file directly following work python unittest discover python testtestdownloadpy nosetests see item new extractor tutorial run extractor specific test cases want create build youtubedl youll need python make gnu make supported pandoc zip nosetests adding support new site want add support new site first make sure site dedicated copyright infringement youtubedl support sites thus pull requests adding support rejected ensured site distributing content legally follow quick list assuming service called yourextractor fork repository check source code git clone gitgithubcomyourgithubusernameyoutubedlgit start new git branch cd youtubedl git checkout b yourextractor start simple template save youtubedlextractoryourextractorpy coding utf future import unicodeliterals common import infoextractor class yourextractorieinfoextractor validurl rhttpswwwyourextractorcomwatchpid test url httpsyourextractorcomwatch md todo md sum first bytes video file use test infodict id ext mp title video title goes thumbnail rrehttpsjpg todo properties either value md checksum start string md regular expression start string python type example int float def realextractself url videoid selfmatchidurl webpage selfdownloadwebpageurl videoid todo code goes example title selfhtmlsearchregexrhh webpage title return id videoid title title description selfogsearchdescriptionwebpage uploader selfsearchregexrdividuploader webpage uploader fatalfalse todo properties see youtubedlextractorcommonpy add import youtubedlextractorextractorspy run python testtestdownloadpy testdownloadtestyourextractor fail first continually rerun youre done decide add one test rename test tests make list dictionaries tests named testdownloadtestyourextractor testdownloadtestyourextractor testdownloadtestyourextractor etc note tests onlymatching key tests dict counted look youtubedlextractorcommonpy possible helper methods detailed description extractor may return add tests code many want make sure code follows youtubedl coding conventions check code flake flake youtubedlextractoryourextractorpy make sure code works python versions claimed supported youtubedl namely tests pass add new files commit push result like git add youtubedlextractorextractorspy git add youtubedlextractoryourextractorpy git commit yourextractor add new extractor git push origin yourextractor finally create pull request well review merge case thank much contributions youtubedl coding conventions section introduces guide lines writing idiomatic robust futureproof extractor code extractors fragile nature since depend layout source data provided rd party media hosters control layout tends change extractor implementer task write code extract media links metadata correctly also minimize dependency sources layout even make code foresee potential future changes ready important allow extractor break minor layout changes thus keeping old youtubedl versions working even though breakage issue easily fixed emitting new version youtubedl fix incorporated previous versions become broken repositories distros packages may prompt fetching update us needless say non rolling release distros may never receive update mandatory optional metafields extraction work youtubedl relies metadata extractor extracts provides youtubedl expressed information dictionary simply info dict following meta fields info dict considered mandatory successful extraction process youtubedl id media identifier title media title url media download url formats fact last option technically mandatory ie cant figure download location media extraction make sense convention youtubedl also treats id title mandatory thus aforementioned metafields critical data extraction make sense without fail extracted extractor considered completely broken field apart aforementioned ones considered optional means extraction tolerant situations sources fields potentially unavailable even always available moment futureproof order break extraction general purpose mandatory fields example say source dictionary meta youve fetched json http request key summary meta selfdownloadjsonurl videoid assume point metas layout summary fancy summary text assume want extract summary put resulting info dict description since description optional meta field ready key may missing meta dict extract like description metagetsummary correct like description metasummary incorrect latter break extraction process keyerror summary disappears meta later time former approach extraction go ahead description set none perfectly fine remember none equivalent absence data similarly pass fatalfalse extracting optional data webpage searchregex htmlsearchregex similar methods instance description selfsearchregex rspanidtitle webpage description fatalfalse fatal set false searchregex fails extract description emit warning continue extraction also pass defaultsome fallback value example description selfsearchregex rspanidtitle webpage description defaultnone failure code silently continue extraction description set none useful metafields may may present provide fallbacks extracting metadata try multiple sources example title present several places try extracting least makes futureproof case sources become unavailable example say meta previous example title extract since title mandatory meta field end something like title metatitle title disappears meta future due changes hosters side extraction would fail since title mandatory thats expected assume another source extract title example ogtitle html meta webpage case provide fallback scenario title metagettitle selfogsearchtitlewebpage code try extract meta first fails try extracting ogtitle webpage regular expressions dont capture groups dont use capturing group must indication used somewhere code group used must non capturing example dont capture id attribute name since cant use anything anyway correct rididpidd incorrect rididpidd make regular expressions relaxed flexible using regular expressions try write fuzzy relaxed flexible skipping insignificant parts likely change allowing single double quotes quoted values example say need extract title following html code span styleposition absolute left px width px float right zindex classtitlesome fancy titlespan code task look similar title selfsearchregex rspanclasstitle webpage title even better title selfsearchregex rspanclasstitleptitle webpage title grouptitle note tolerate potential changes style attributes value switch using double quotes single class attribute code definitely look like title selfsearchregex rspan styleposition absolute left px width px float right zindex classtitlespan webpage title grouptitle long lines policy soft limit keep lines code characters long means respected possible make readability code maintenance worse example never split long string literals like urls often copied entities multiple lines fit limit correct httpswwwyoutubecomwatchvfqztnjqwlistplmyetvrpaqyvwcwmzpnvzqfukd incorrect httpswwwyoutubecomwatchvfqztnjqwlist plmyetvrpaqyvwcwmzpnvzqfukd inline values extracting variables acceptable reducing code duplication improving readability complex expressions however avoid extracting variables used moving opposite parts extractor file makes reading linear flow difficult example correct title selfhtmlsearchregexrtitletitle webpage title incorrect titlere rtitletitle lines code title selfhtmlsearchregextitlere webpage title collapse fallbacks multiple fallback values quickly become unwieldy collapse multiple fallback values single expression via list patterns example good description selfhtmlsearchmeta ogdescription description twitterdescription webpage description defaultnone unwieldy description selfogsearchdescriptionwebpage defaultnone selfhtmlsearchmetadescription webpage defaultnone selfhtmlsearchmetatwitterdescription webpage defaultnone methods supporting list patterns searchregex htmlsearchregex ogsearchproperty htmlsearchmeta trailing parentheses always move trailing parentheses last argument example correct lambda x xresultsetresultvideourlsetvideourl list incorrect lambda x xresultsetresultvideourlsetvideourl list use convenience conversion parsing functions wrap extracted numeric data safe functions youtubedlutilspy intornone floatornone use string number conversions well use urlornone safe url processing use tryget safe metadata extraction parsed json use unifiedstrdate uniform uploaddate yyyymmdd meta field extraction unifiedtimestamp uniform timestamp extraction parsefilesize filesize extraction parsecount count meta fields extraction parseresolution parseduration duration extraction parseagelimit agelimit extraction explore youtubedlutilspy useful convenience functions examples safely extract optional description parsed json description trygetresponse lambda x xresultvideosummary compatstr safely extract optional metadata video trygetresponse lambda x xresultvideo dict description videogetsummary duration floatornonevideogetdurationms scale viewcount intornonevideogetviews embedding youtubedl youtubedl makes best effort good commandline program thus callable programming language encounter problems parsing output feel free create report python program embed youtubedl powerful fashion like future import unicodeliterals import youtubedl ydlopts youtubedlyoutubedlydlopts ydl ydldownloadhttpswwwyoutubecomwatchvbawjenozkc likely youll want use various options list options available look youtubedlyoutubedlpy start want intercept youtubedls output set logger object heres complete example program outputs errors short message download finished downloadsconverts video mp file future import unicodeliterals import youtubedl class myloggerobject def debugself msg pass def warningself msg pass def errorself msg printmsg def myhookd dstatus finished printdone downloading converting ydlopts format bestaudiobest postprocessors key ffmpegextractaudio preferredcodec mp preferredquality logger mylogger progresshooks myhook youtubedlyoutubedlydlopts ydl ydldownloadhttpswwwyoutubecomwatchvbawjenozkc bugs bugs suggestions reported httpsgithubcomytdlorgyoutubedlissues unless prompted another pertinent reason eg github fails accept bug report please send bug reports via personal email discussions join us irc channel youtubedl freenode webchat please include full output youtubedl run v ie add v flag command line copy whole output post issue body wrapped better formatting look similar youtubedl v command line debug system config debug user config debug commandline args uv uhttpswwwyoutubecomwatchvbawjenozkcj debug encodings locale cp fs mbcs cp pref cp debug youtubedl version debug git head e debug python version windowsserversp debug exe versions ffmpeg ngdf ffprobe ngdf rtmpdump debug proxy map post screenshots verbose logs plain text acceptable output including first lines contains important debugging information issues without full output often reproducible therefore get solved short order ever please reread issue avoid couple common mistakes use checklist description issue sufficient often get issue reports cannot really decipher cases eventually get required information asking back multiple times poses unnecessary drain resources many contributors including also native speakers may misread parts please elaborate feature requesting bug want fixed make sure obvious problem could fixed proposed solution would look like report shorter two lines almost certainly missing makes hard us respond often polite close issue outright missing info makes misinterpretation likely committer often get frustrated issues since possible way move forward ask clarification bug reports means report contain complete output youtubedl called v flag error message get bugs even says would believe many bug reports contain information server multiple ips suspect censorship adding callhome may good idea get diagnostics error error unable extract cannot reproduce multiple countries add dumppages warning yield rather large output redirect file logtxt adding logtxt commandline upload dump files get add writepages somewhere site support requests must contain example url example url url might want download like httpswwwyoutubecomwatchvbawjenozkc obvious video present except special circumstances main page video service eg httpswwwyoutubecom example url using latest version reporting issue type youtubedl u report youre uptodate reports receive already fixed people using outdated versions goes feature requests well issue already documented make sure someone already opened issue youre trying open search top window browse github issues repository issue feel free write something along lines affects well version information issue issues may old new post often spurs rapid activity existing options enough requesting new feature please quick peek list supported options many feature requests features actually exist already please absolutely show work issue report detail existing similar options solve problem enough context bug report people want solve problems often think us favor breaking larger problems eg wanting skip already downloaded files specific request eg requesting us look whether file exists downloading info page however often happens break problem two steps one simple one impossible extremely complicated one presented complicated request original problem could solved far easier eg recording downloaded video ids separate file avoid must include greater context nonobvious particular every feature request consist adding support new site contain use case scenario explains situation missing feature would useful issue involve one problem one problem users seem think limit issues open limit issues open may seem appealing able dump issues one ticket means someone solves one issues cannot mark issue closed typically reporting bunch issues leads ticket lingering since nobody wants attack behemoth someone mercifully splits issue multiple ones particular every site support request issue pertain services one site generally common domain always using backend technology request support vimeo user videos white house podcasts google plus pages issue also make sure dont post bug reports alongside feature requests rule thumb feature request include outputs youtubedl immediately related feature hand post reports network error alongside request new video service anyone going need feature post features incapacitated friend personally talk require post features seem like good idea really useful requested someone requires question youtubedl may sound strange bug reports receive completely unrelated youtubedl relate different even reporters application please make sure actually using youtubedl using ui youtubedl report bug maintainer actual application providing ui hand ui youtubedl fails way believe related youtubedl means go ahead report bug copyright youtubedl released public domain copyright holders readme file originally written daniel bolton likewise released public domain,youtubedl download video youtubecom video platform instal descript option configur output templat format select video select faq develop instruct embed youtubedl bug copyright instal instal right away unix user linux maco etc type sudo curl l httpsytdlorgdownloadslatestyoutubedl usrlocalbinyoutubedl sudo chmod arx usrlocalbinyoutubedl curl altern use recent wget sudo wget httpsytdlorgdownloadslatestyoutubedl usrlocalbinyoutubedl sudo chmod arx usrlocalbinyoutubedl window user download exe file place locat path except systemrootsystem eg put cwindowssystem also use pip sudo h pip instal upgrad youtubedl command updat youtubedl alreadi instal see pypi page inform maco user instal youtubedl homebrew brew instal youtubedl macport sudo port instal youtubedl altern refer develop instruct check work git repositori option includ pgp signatur see youtubedl download page descript youtubedl commandlin program download video youtubecom site requir python interpret version platform specif work unix box window maco releas public domain mean modifi redistribut use howev like youtubedl option url url option h help print help text exit version print program version exit u updat updat program latest version make sure suffici permiss run sudo need ignoreerror continu download error exampl skip unavail video playlist abortonerror abort download video playlist command line error occur dumpuserag display current browser identif listextractor list support extractor extractordescript output descript support extractor forcegenericextractor forc extract use gener extractor defaultsearch prefix use prefix unqualifi url exampl gvsearch download two video googl video youtubedl larg appl use valu auto let youtubedl guess autowarn emit warn guess error throw error default valu fixuperror repair broken url emit error possibl instead search ignoreconfig read configur file given global configur file etcyoutubedlconf read user configur configyoutub dlconfig appdatayoutubedlconfigtxt window configloc path locat configur file either path config contain directori flatplaylist extract video playlist list markwatch mark video watch youtub nomarkwatch mark video watch youtub nocolor emit color code output network option proxi url use specifi httphttpssock proxi enabl sock proxi specifi proper scheme exampl sock pass empti string proxi direct connect sockettimeout second time wait give second sourceaddress ip clientsid ip address bind forceipv make connect via ipv forceipv make connect via ipv geo restrict geoverificationproxi url use proxi verifi ip address georestrict site default proxi specifi proxi none option present use actual download geobypass bypass geograph restrict via fake xforwardedfor http header nogeobypass bypass geograph restrict via fake xforwardedfor http header geobypasscountri code forc bypass geograph restrict explicitli provid twolett iso countri code geobypassipblock ipblock forc bypass geograph restrict explicitli provid ip block cidr notat video select playliststart number playlist video start default playlistend number playlist video end default last playlistitem itemspec playlist video item download specifi indic video playlist separ comma like playlistitem want download video index playlist specifi rang playlistitem download video index matchtitl regex download match titl regex caseless substr rejecttitl regex skip download match titl regex caseless substr maxdownload number abort download number file minfiles size download video smaller size eg k maxfiles size download video larger size eg k date date download video upload date datebefor date download video upload date ie inclus dateaft date download video upload date ie inclus minview count download video less count view maxview count download video count view matchfilt filter gener video filter specifi key see output templat list avail key match key present key check key present key number like commentcount also work compar number key liter like upload mike smith also work match string liter requir multipl match valu known exclud unless put question mark oper exampl match video like time dislik less time dislik function avail given servic also descript use matchfilt likecount dislikecount descript noplaylist download video url refer video playlist yesplaylist download playlist url refer video playlist agelimit year download video suitabl given age downloadarch file download video list archiv file record id download video includead download advertis well experiment download option r limitr rate maximum download rate byte per second eg k r retri retri number retri default infinit fragmentretri retri number retri fragment default infinit dash hlsnativ ism skipunavailablefrag skip unavail fragment dash hlsnativ ism abortonunavailablefrag abort download fragment avail keepfrag keep download fragment disk download finish fragment eras default buffers size size download buffer eg k default noresizebuff automat adjust buffer size default buffer size automat resiz initi valu size httpchunksiz size size chunk chunkbas http download eg default disabl may use bypass bandwidth throttl impos webserv experiment playlistrevers download playlist video revers order playlistrandom download playlist video random order xattrsetfiles set file xattribut ytdlfiles expect file size hlsprefern use nativ hl download instead ffmpeg hlspreferffmpeg use ffmpeg instead nativ hl download hlsusempegt use mpegt contain hl video allow play video download player may abl play externaldownload command use specifi extern download current support ariacavconvaxelcurlffmpeghttpiewget externaldownloaderarg arg give argument extern download filesystem option batchfil file file contain url download stdin one url per line line start consid comment ignor id use video id file name output templat output filenam templat see output templat info autonumberstart number specifi start valu autonumb default restrictfilenam restrict filenam ascii charact avoid space filenam w nooverwrit overwrit file c continu forc resum partial download file default youtubedl resum download possibl nocontinu resum partial download file restart begin nopart use part file write directli output file nomtim use lastmodifi header set file modif time writedescript write video descript descript file writeinfojson write video metadata infojson file writeannot write video annot annotationsxml file loadinfojson file json file contain video inform creat writeinfojson option cooki file file read cooki dump cooki jar cachedir dir locat filesystem youtubedl store download inform perman default xdgcachehomeyoutubedl cacheyoutubedl moment youtub player file video obfusc signatur cach may chang nocachedir disabl filesystem cach rmcachedir delet filesystem cach file thumbnail imag writethumbnail write thumbnail imag disk writeallthumbnail write thumbnail imag format disk listthumbnail simul list avail thumbnail format verbos simul option q quiet activ quiet mode nowarn ignor warn simul download video write anyth disk skipdownload download video g geturl simul quiet print url e gettitl simul quiet print titl getid simul quiet print id getthumbnail simul quiet print thumbnail url getdescript simul quiet print video descript getdur simul quiet print video length getfilenam simul quiet print output filenam getformat simul quiet print output format j dumpjson simul quiet print json inform see output templat descript avail key j dumpsinglejson simul quiet print json inform commandlin argument url refer playlist dump whole playlist inform singl line printjson quiet print video inform json video still download newlin output progress bar new line noprogress print progress bar consoletitl display progress consol titlebar v verbos print variou debug inform dumppag print download page encod use base debug problem verbos writepag write download intermediari page file current directori debug problem printtraff display sent read http traffic c callhom contact youtubedl server debug nocallhom contact youtubedl server debug workaround encod encod forc specifi encod experiment nocheckcertif suppress http certif valid preferinsecur use unencrypt connect retriev inform video current support youtub userag ua specifi custom user agent refer url specifi custom refer use video access restrict one domain addhead fieldvalu specifi custom http header valu separ colon use option multipl time bidiworkaround work around termin lack bidirect text support requir bidiv fribidi execut path sleepinterv second number second sleep download use alon lower bound rang random sleep download minimum possibl number second sleep use along maxsleepinterv maxsleepinterv second upper bound rang random sleep download maximum possibl number second sleep must use along minsleepinterv video format option f format format video format code see format select info allformat download avail video format preferfreeformat prefer free video format unless specif one request f listformat list avail format request video youtubeskipdashmanifest download dash manifest relat data youtub video mergeoutputformat format merg requir eg bestvideobestaudio output given contain format one mkv mp ogg webm flv ignor merg requir subtitl option writesub write subtitl file writeautosub write automat gener subtitl file youtub allsub download avail subtitl video listsub list avail subtitl video subformat format subtitl format accept format prefer exampl srt asssrtbest sublang lang languag subtitl download option separ comma use list sub avail languag tag authent option u usernam usernam login account id p password password account password option left youtubedl ask interact twofactor twofactor twofactor authent code n netrc use netrc authent data videopassword password video password vimeo smotri youku adob pass option apmso mso adob pass multiplesystem oper tv provid identifi use aplistmso list avail mso apusernam usernam multiplesystem oper account login appassword password multiplesystem oper account password option left youtubedl ask interact aplistmso list support multiplesystem oper postprocess option x extractaudio convert video file audioonli file requir ffmpeg avconv ffprobe avprob audioformat format specifi audio format best aac flac mp opu vorbi wav best default effect without x audioqu qualiti specifi ffmpegavconv audio qualiti insert valu better wors vbr specif bitrat like k default recodevideo format encod video anoth format necessari current support mpflvoggwebmmkvavi postprocessorarg arg give argument postprocessor k keepvideo keep video file disk post process video eras default nopostoverwrit overwrit postprocess file postprocess file overwritten default embedsub emb subtitl video mp webm mkv video embedthumbnail emb thumbnail audio cover art addmetadata write metadata video file metadatafromtitl format pars addit metadata like song titl artist video titl format syntax output regular express name captur group may also use pars paramet replac exist valu exampl metadatafrom titl artist titl match titl like coldplay paradis exampl regex metadatafromtitl partist ptitl xattr write metadata video file xattr use dublin core xdg standard fixup polici automat correct known fault file one never noth warn emit warn detectorwarn default fix file warn otherwis preferavconv prefer avconv ffmpeg run postprocessor preferffmpeg prefer ffmpeg avconv run postprocessor default ffmpegloc path locat ffmpegavconv binari either path binari contain directori exec cmd execut command file download similar find exec syntax exampl exec adb push sdcardmus rm convertsub format convert subtitl format current support srtassvttlrc configur configur youtubedl place support command line option configur file linux maco system wide configur file locat etcyoutubedlconf user wide configur file configyoutubedlconfig window user wide configur file locat appdatayoutubedlconfigtxt cusersus nameyoutubedlconf note default configur file may exist may need creat exampl follow configur file youtubedl alway extract audio copi mtime use proxi save video movi directori home directori line start comment alway extract audio x copi mtime nomtim use proxi proxi save video movi directori home directori moviestitlesext note option configur file option aka switch use regular command line call thu must whitespac eg proxi proxi use ignoreconfig want disabl configur file particular youtubedl run also use configloc want use custom configur file particular youtubedl run authent netrc file may also want configur automat credenti storag extractor support authent provid login password usernam password order pass credenti command line argument everi youtubedl execut prevent track plain text password shell command histori achiev use netrc file per extractor basi need creat netrc file home restrict permiss readwrit touch homenetrc chmod arwxurw homenetrc add credenti extractor follow format extractor name extractor lowercas machin extractor login login password password exampl machin youtub login myaccountgmailcom password myyoutubepassword machin twitch login mytwitchaccountnam password mytwitchpassword activ authent netrc file pass netrc youtubedl place configur file window may also need setup home environ variabl manual exampl set homeuserprofil output templat option allow user indic templat output file name tldr navig exampl basic usag set templat argument download singl file like youtubedl funnyvideoflv httpssomevideo howev may contain special sequenc replac download video special sequenc may format accord python string format oper exampl name name clarifi percent symbol follow name parenthes follow format oper allow name along sequenc type id string video identifi titl string video titl url string video url ext string video filenam extens alttitl string secondari titl video displayid string altern identifi video upload string full name video upload licens string licens name video licens creator string creator video released string date yyyymmdd video releas timestamp numer unix timestamp moment video becam avail uploadd string video upload date yyyymmdd uploaderid string nicknam id video upload channel string full name channel video upload channelid string id channel locat string physic locat video film durat numer length video second viewcount numer mani user watch video platform likecount numer number posit rate video dislikecount numer number neg rate video repostcount numer number repost video averager numer averag rate give user scale use depend webpag commentcount numer number comment video agelimit numer age restrict video year isliv boolean whether video live stream fixedlength video starttim numer time second reproduct start specifi url endtim numer time second reproduct end specifi url format string humanread descript format formatid string format code specifi format formatnot string addit info format width numer width video height numer height video resolut string textual descript width height tbr numer averag bitrat audio video kbit abr numer averag audio bitrat kbit acodec string name audio codec use asr numer audio sampl rate hertz vbr numer averag video bitrat kbit fp numer frame rate vcodec string name video codec use contain string name contain format files numer number byte known advanc filesizeapprox numer estim number byte protocol string protocol use actual download extractor string name extractor extractorkey string key name extractor epoch numer unix epoch creat file autonumb numer fivedigit number increas download start zero playlist string name id playlist contain video playlistindex numer index video playlist pad lead zero accord total length playlist playlistid string playlist identifi playlisttitl string playlist titl playlistupload string full name playlist upload playlistuploaderid string nicknam id playlist upload avail video belong logic chapter section chapter string name titl chapter video belong chapternumb numer number chapter video belong chapterid string id chapter video belong avail video episod seri programm seri string titl seri programm video episod belong season string titl season video episod belong seasonnumb numer number season video episod belong seasonid string id season video episod belong episod string titl video episod episodenumb numer number video episod within season episodeid string id video episod avail media track part music album track string titl track tracknumb numer number track within album disc trackid string id track artist string artist track genr string genr track album string titl album track belong albumtyp string type album albumartist string list artist appear album discnumb numer number disc physic medium track belong releaseyear numer year yyyi album releas aforement sequenc referenc output templat replac actual valu correspond sequenc name note sequenc guarante present sinc depend metadata obtain particular extractor sequenc replac na exampl titlesidsext mp video titl youtubedl test video id bawjenozkcj result youtubedl test videobawjenozkcjmp file creat current directori numer sequenc use numer relat format exampl viewcountd result string view count pad zero charact like output templat also contain arbitrari hierarch path eg playlistsplaylistindex titlesext result download video directori correspond path templat miss directori automat creat use percent liter output templat use output stdout use current default templat titlesidsext case dont want special charact space transfer download filenam window system filenam bitunsaf channel case add restrictfilenam flag get shorter titl output templat window batch file use output templat insid window batch file must escap plain percent charact doubl titlesidsext becom titlesidsext howev touch plain charact eg environ variabl expans stay intact chomepathdesktoptitlesext output templat exampl note window may need use doubl quot instead singl youtubedl getfilenam titlesext bawjenozkc youtubedl test video amp kind weird charact youtubedl getfilenam titlesext bawjenozkc restrictfilenam youtubedltestvideomp simpl file name download youtub playlist video separ directori index video order playlist youtubedl playlistsplaylistindex titlesext httpswwwyoutubecomplaylistlistplwiyxdcpjrngqaqnbcvlslapr download playlist youtub channelus keep playlist separ directori youtubedl uploadersplaylistsplaylistindex titlesext httpswwwyoutubecomuserthelinuxfoundationplaylist download udemi cours keep chapter separ directori myvideo directori home youtubedl u user p password myvideosplaylistschapternumb chapterstitlesext httpswwwudemycomjavatutori download entir seri season keep seri season separ directori cmyvideo youtubedl cmyvideosseriessseasonnumb seasonsepisodenumb episodesext httpsvideomorerukinovdetalayahsezon stream video download stdout youtubedl bawjenozkc format select default youtubedl tri download best avail qualiti ie want best qualiti dont need pass special option youtubedl guess default sometim may want download differ format exampl slow intermitt connect key mechan achiev socal format select base explicitli specifi desir format select format base criterion criteria setup preced much gener syntax format select format format shorter f format format selector express ie express describ format format would like download tldr navig exampl simplest case request specif format exampl f download format format code equal get list avail format code particular video use listformat f note format code extractor specif also use file extens current gp aac flv mp mp ogg wav webm support download best qualiti format particular file extens serv singl file eg f webm download best qualiti format webm extens serv singl file also use special name select particular edg case format best select best qualiti format repres singl file video audio worst select worst qualiti format repres singl file video audio bestvideo select best qualiti videoonli format eg dash video may avail worstvideo select worst qualiti videoonli format may avail bestaudio select best qualiti audio onlyformat may avail worstaudio select worst qualiti audio onlyformat may avail exampl download worst qualiti videoonli format use f worstvideo want download multipl video dont format avail specifi order prefer use slash note slash leftassoci ie format left hand side prefer exampl f download format avail otherwis download format avail otherwis download format avail otherwis complain suitabl format avail download want download sever format video use comma separ eg f download three format cours avail sophist exampl combin preced featur f mpbestvideomabestaudio also filter video format put condit bracket f bestheight f filesizem follow numer meta field use comparison equal equal files number byte known advanc width width video known height height video known tbr averag bitrat audio video kbit abr averag audio bitrat kbit vbr averag video bitrat kbit asr audio sampl rate hertz fp frame rate also filter work comparison equal start end contain follow string meta field ext file extens acodec name audio codec use vcodec name video codec use contain name contain format protocol protocol use actual download lowercas http http rtsp rtmp rtmpe mm fm ism httpdashseg mu mun formatid short descript format string comparison may prefix negat order produc opposit comparison eg contain note none aforement meta field guarante present sinc sole depend metadata obtain particular extractor ie metadata offer video hoster format valu known exclud unless put question mark oper combin format filter f height tbr select p video video height known bitrat least kbit merg video audio two format singl file use f videoformataudioformat requir ffmpeg avconv instal exampl f bestvideobestaudio download best videoonli format best audioonli format mux togeth ffmpegavconv format selector also group use parenthes exampl want download best mp webm format height lower use f mpwebmheight sinc end april version youtubedl use f bestvideobestaudiobest default format select see ffmpeg avconv instal result download bestvideo bestaudio separ mux togeth singl file give best overal qualiti avail otherwis fall back best result download best avail qualiti serv singl file best also need video dont come youtub dont provid audio video two differ file want download dash format exampl interest get video resolut higher p add f bestvideoheightbestaudiobest configur file note use youtubedl stream stdout like pipe media player ie explicitli specifi output templat youtubedl still use f best format select order start content deliveri immedi player wait bestvideo bestaudio download mux want preserv old format select behavior prior youtubedl ie want download best avail qualiti media serv singl file explicitli specifi choic f best may want add configur file order type everi time run youtubedl format select exampl note window may need use doubl quot instead singl download best mp format avail best mp avail youtubedl f bestvideoextmpbestaudioextmabestextmpbest download best format avail better p youtubedl f bestvideoheightbestaudiobestheight download best video format bigger mb youtubedl f bestfilesizem download best format avail via direct link httphttp protocol youtubedl f bestvideobestaudiobestprotocolhttp download best video format best audio format without merg youtubedl f bestvideobestaudio titlesfformatidsext note last exampl output templat recommend bestvideo bestaudio may file name video select video filter upload date use option date datebefor dateaft accept date two format absolut date date format yyyymmdd rel date date format nowtodaydayweekmonthyear exampl download video upload last month youtubedl dateaft nowmonth download video upload januari youtubedl date download video upload x decad youtubedl dateaft datebefor faq updat youtubedl youv follow manual instal instruct simpli run youtubedl u linux sudo youtubedl u use pip simpl sudo pip instal u youtubedl suffici updat instal youtubedl use packag manag like aptget yum use standard system updat mechan updat note distribut packag often outdat rule thumb youtubedl releas least month often weekli even daili simpli go httpsytdlorg find current version unfortun noth youtubedl develop distribut serv realli outdat version complain distribut bugtrack support forum last resort also uninstal version instal packag manag follow manual instal instruct remov distribut packag line like sudo aptget remov youtubedl afterward simpli follow manual instal instruct sudo wget httpsytdlorgdownloadslatestyoutubedl usrlocalbinyoutubedl sudo chmod arx usrlocalbinyoutubedl hash r youll abl updat sudo youtubedl u youtubedl extrem slow start window add file exclus youtubedlex window defend set im get error unabl extract opengraph titl youtub playlist youtub chang playlist format march later youll need least youtubedl download youtub video instal youtubedl packag manag pip setuppi tarbal pleas use updat note ubuntu packag seem get updat anymor sinc affili ubuntu littl feel free report bug ubuntu packag peopl updat packag somewhat recent version see way updat im get error tri use output templat error use output templat conflict use titl video id auto number make sure use option titl id autonumb set command line configur file remov latter alway pass citw default youtubedl intend best option incident convinc case differ pleas file issu explain therefor unnecessari sometim harm copi long option string webpag particular option citw regularli use pleas put b option back peopl ask question awar youtubedl default download highest avail qualiti report youtub p p case longer need b option specif video mayb youtub report avail specif high qualiti format your interest case simpli request f option youtubedl tri download get http error tri download video what appar youtub requir pass captcha test download much consid provid way let solv captcha moment best cours action point web browser youtub url solv captcha restart youtubedl need program youtubedl work fine site howev want convert videoaudio youll need avconv ffmpeg site notabl youtub video retriev higher qualiti format without sound youtubedl detect whether avconvffmpeg present automat pick best option video video format stream via rtmp protocol download rtmpdump instal download mm rtsp video requir either mplayer mpv instal download video play video fulli download use video player mpv vlc mplayer extract video url g play anoth machin web browser depend lot servic mani case request video downloadplay must come ip address cooki andor http header use cooki option write requir cooki file advis download read cooki file site also requir common user agent use use dumpuserag see one use youtubedl also get necessari cooki http header json output obtain dumpjson may benefici use ipv case restrict appli ipv servic sometim subset video restrict video url ip address cooki userag except rather rule pleas bear mind url protocol support browser box includ rtmp use g download must support well want play video machin run youtubedl relay video content machin run youtubedl use let youtubedl stream video stdout simpli allow player download file written youtubedl turn error fmturlmap conn inform found video info youtub switch new video info format juli support old version youtubedl see updat youtubedl error unabl download video youtub requir addit signatur sinc septemb support old version youtubedl see updat youtubedl video url contain ampersand im get strang output v recogn intern extern command that actual output shell sinc ampersand one special shell charact interpret shell prevent pass whole url youtubedl disabl shell interpret ampersand special charact either put whole url quot escap backslash approach work depend shell exampl url httpswwwyoutubecomwatchtvbawjenozkc end follow command youtubedl httpswwwyoutubecomwatchtvbawjenozkc youtubedl httpswwwyoutubecomwatchtvbawjenozkc window use doubl quot youtubedl httpswwwyoutubecomwatchtvbawjenozkc extractorerror could find js function uof februari new youtub player contain charact sequenc string misinterpret old version youtubedl see updat youtubedl http error mani request payment requir two error code indic servic block ip address overus contact servic ask unblock ip address acquir whitelist ip address alreadi use proxi sourceaddress option select anoth ip address syntaxerror nonascii charact error file youtubedl line syntaxerror nonascii charact x mean your use outdat version python pleas updat python binari file code gone sinc june youtubedl pack execut zipfil simpli unzip might need renam youtubedlzip first system clone git repositori laid modifi code run execut mainpi file recompil execut run make youtubedl exe throw error due miss msvcrdll run exe need instal first microsoft visual c redistribut packag x window set ffmpeg youtubedl put exe file put youtubedl ffmpeg directori your run command work that rather cumbersom make differ directori work either ffmpeg youtubedl simpli creat directori say cbin cusersus namebin put execut directli set path environ variabl includ directori restart shell abl access youtubedl ffmpeg youtubedl abl find ffmpeg simpli type youtubedl ffmpeg matter directori your put download specif folder use specifi output templat exampl homeuservideostitlesidsext want download put option configur file download video start either prepend httpswwwyoutubecomwatchv separ id option youtubedl wnyeurxzfu youtubedl httpswwwyoutubecomwatchvwnyeurxzfu pass cooki youtubedl use cooki option exampl cooki pathtocookiesfiletxt order extract cooki browser use conform browser extens export cooki exampl cookiestxt chrome cookiestxt firefox note cooki file must mozillanetscap format first line cooki file must either http cooki file netscap http cooki file make sure correct newlin format cooki file convert newlin necessari correspond os name crlf rn window lf n unix unixlik system linux maco etc http error bad request use cooki good sign invalid newlin format pass cooki youtubedl good way workaround login particular extractor implement explicitli anoth use case work around captcha websit requir solv particular case order get access eg youtub cloudflar stream directli media player first need tell youtubedl stream media stdout also tell media player read stdin must capabl stream pipe former latter exampl stream vlc achiev youtubedl httpswwwyoutubecomwatchvbawjenozkcj vlc download new video playlist use downloadarch featur featur initi download complet playlist downloadarch pathtodownloadarchivefiletxt record identifi video special file subsequ run downloadarch download new video skip video download note success download record file exampl first youtubedl downloadarch archivetxt httpswwwyoutubecomplaylistlistplwiyxdcpjrngqaqnbcvlslapr download complet plwiyxdcpjrngqaqnbcvlslapr playlist creat file archivetxt subsequ run download new video youtubedl downloadarch archivetxt httpswwwyoutubecomplaylistlistplwiyxdcpjrngqaqnbcvlslapr add hlsprefern config youtubedl detect hl video download either builtin download ffmpeg sinc mani hl stream slightli invalid ffmpegyoutubedl handl invalid case better option switch download need youtubedl know one particular download work better given websit download pick otherwis youtubedl pick best download gener compat moment happen ffmpeg choic may chang futur version youtubedl improv builtin download andor ffmpeg particular gener extractor use websit list support site youtubedl cannot mandat one specif download put either hlsprefern hlspreferffmpeg configur differ subset video fail download correctli instead much better file issu pull request detail nativ ffmpeg hl download better choic use case add support anim video site site show current movi free matter polici well legal youtubedl includ support servic special infring copyright rule thumb cannot easili find video servic quit obvious allow distribut ie upload creator creator distributor publish free licens servic probabl unfit inclus youtubedl note servic dont host infring content link evid servic includ youtubedl goe dmca note whole front page servic fill video allow distribut fair use note equal unconvinc servic show copyrightprotect video full without author support request servic purchas right distribut content perfectli fine though doubt simpli includ sourc mention legitim purchas content speed work issu also known help import issu solv youtubedl core develop team quit small best solv mani issu possibl sometim take quit speed issu here first pleas report issu issu tracker allow us coordin effort user develop serv unifi point unfortun youtubedl project grown larg use person email effect commun channel pleas read bug report instruct lot bug lack necessari inform offer proxi vpn shell access youtubedl develop abl test issu multipl comput multipl countri exclud local censorship misconfigur issu nobodi interest solv issu welcom take matter hand submit pull request coercepay somebodi els feel free bump issu time time write small comment issu still present youtubedl version franc fix belgium pleas month pleas declar issu import urgent detect whether given url support youtubedl one look list support site note sometim happen site chang url scheme say httpsexamplecomvideo httpsexamplecomv youtubedl report url servic list unsupport case simpli report bug possibl detect whether url support that youtubedl contain gener extractor match url may tempt disabl exclud remov gener extractor gener extractor allow user extract video lot websit emb video anoth servic may also use extract video servic host therefor neither recommend support disabl exclud remov gener extractor want find whether given url support simpli call youtubedl get video back chanc url either refer video unsupport find examin output run youtubedl consol catch unsupportederror except run python program need go much red tape file bug issu templat despit extens bug report instruct issu report got useless instanc peopl use ancient version hundr releas old simpl syntact error youtubedl gener shell usag problem alreadi report multipl time peopl actual read error messag even said pleas instal ffmpeg peopl mention url tri download mani simpl easytoavoid problem mani total unrel youtubedl youtubedl opensourc project man volunt wed rather spend time fix bug certain none simpl problem appli reason confid abl reproduc issu without ask report repeatedli output youtubedl v yoururlher realli that requir file issu issu templat also guid basic step check version youtubedl current develop instruct user need build youtubedl download build get distribut run youtubedl develop dont need build anyth either simpli execut python youtubedl run test simpli invok favorit test runner execut test file directli follow work python unittest discov python testtestdownloadpi nosetest see item new extractor tutori run extractor specif test case want creat build youtubedl youll need python make gnu make support pandoc zip nosetest ad support new site want add support new site first make sure site dedic copyright infring youtubedl support site thu pull request ad support reject ensur site distribut content legal follow quick list assum servic call yourextractor fork repositori check sourc code git clone gitgithubcomyourgithubusernameyoutubedlgit start new git branch cd youtubedl git checkout b yourextractor start simpl templat save youtubedlextractoryourextractorpi code utf futur import unicodeliter common import infoextractor class yourextractorieinfoextractor validurl rhttpswwwyourextractorcomwatchpid test url httpsyourextractorcomwatch md todo md sum first byte video file use test infodict id ext mp titl video titl goe thumbnail rrehttpsjpg todo properti either valu md checksum start string md regular express start string python type exampl int float def realextractself url videoid selfmatchidurl webpag selfdownloadwebpageurl videoid todo code goe exampl titl selfhtmlsearchregexrhh webpag titl return id videoid titl titl descript selfogsearchdescriptionwebpag upload selfsearchregexrdividupload webpag upload fatalfals todo properti see youtubedlextractorcommonpi add import youtubedlextractorextractorspi run python testtestdownloadpi testdownloadtestyourextractor fail first continu rerun your done decid add one test renam test test make list dictionari test name testdownloadtestyourextractor testdownloadtestyourextractor testdownloadtestyourextractor etc note test onlymatch key test dict count look youtubedlextractorcommonpi possibl helper method detail descript extractor may return add test code mani want make sure code follow youtubedl code convent check code flake flake youtubedlextractoryourextractorpi make sure code work python version claim support youtubedl name test pass add new file commit push result like git add youtubedlextractorextractorspi git add youtubedlextractoryourextractorpi git commit yourextractor add new extractor git push origin yourextractor final creat pull request well review merg case thank much contribut youtubedl code convent section introduc guid line write idiomat robust futureproof extractor code extractor fragil natur sinc depend layout sourc data provid rd parti media hoster control layout tend chang extractor implement task write code extract media link metadata correctli also minim depend sourc layout even make code forese potenti futur chang readi import allow extractor break minor layout chang thu keep old youtubedl version work even though breakag issu easili fix emit new version youtubedl fix incorpor previou version becom broken repositori distro packag may prompt fetch updat us needless say non roll releas distro may never receiv updat mandatori option metafield extract work youtubedl reli metadata extractor extract provid youtubedl express inform dictionari simpli info dict follow meta field info dict consid mandatori success extract process youtubedl id media identifi titl media titl url media download url format fact last option technic mandatori ie cant figur download locat media extract make sens convent youtubedl also treat id titl mandatori thu aforement metafield critic data extract make sens without fail extract extractor consid complet broken field apart aforement one consid option mean extract toler situat sourc field potenti unavail even alway avail moment futureproof order break extract gener purpos mandatori field exampl say sourc dictionari meta youv fetch json http request key summari meta selfdownloadjsonurl videoid assum point meta layout summari fanci summari text assum want extract summari put result info dict descript sinc descript option meta field readi key may miss meta dict extract like descript metagetsummari correct like descript metasummari incorrect latter break extract process keyerror summari disappear meta later time former approach extract go ahead descript set none perfectli fine rememb none equival absenc data similarli pass fatalfals extract option data webpag searchregex htmlsearchregex similar method instanc descript selfsearchregex rspanidtitl webpag descript fatalfals fatal set fals searchregex fail extract descript emit warn continu extract also pass defaultsom fallback valu exampl descript selfsearchregex rspanidtitl webpag descript defaultnon failur code silent continu extract descript set none use metafield may may present provid fallback extract metadata tri multipl sourc exampl titl present sever place tri extract least make futureproof case sourc becom unavail exampl say meta previou exampl titl extract sinc titl mandatori meta field end someth like titl metatitl titl disappear meta futur due chang hoster side extract would fail sinc titl mandatori that expect assum anoth sourc extract titl exampl ogtitl html meta webpag case provid fallback scenario titl metagettitl selfogsearchtitlewebpag code tri extract meta first fail tri extract ogtitl webpag regular express dont captur group dont use captur group must indic use somewher code group use must non captur exampl dont captur id attribut name sinc cant use anyth anyway correct rididpidd incorrect rididpidd make regular express relax flexibl use regular express tri write fuzzi relax flexibl skip insignific part like chang allow singl doubl quot quot valu exampl say need extract titl follow html code span styleposit absolut left px width px float right zindex classtitlesom fanci titlespan code task look similar titl selfsearchregex rspanclasstitl webpag titl even better titl selfsearchregex rspanclasstitleptitl webpag titl grouptitl note toler potenti chang style attribut valu switch use doubl quot singl class attribut code definit look like titl selfsearchregex rspan styleposit absolut left px width px float right zindex classtitlespan webpag titl grouptitl long line polici soft limit keep line code charact long mean respect possibl make readabl code mainten wors exampl never split long string liter like url often copi entiti multipl line fit limit correct httpswwwyoutubecomwatchvfqztnjqwlistplmyetvrpaqyvwcwmzpnvzqfukd incorrect httpswwwyoutubecomwatchvfqztnjqwlist plmyetvrpaqyvwcwmzpnvzqfukd inlin valu extract variabl accept reduc code duplic improv readabl complex express howev avoid extract variabl use move opposit part extractor file make read linear flow difficult exampl correct titl selfhtmlsearchregexrtitletitl webpag titl incorrect titler rtitletitl line code titl selfhtmlsearchregextitler webpag titl collaps fallback multipl fallback valu quickli becom unwieldi collaps multipl fallback valu singl express via list pattern exampl good descript selfhtmlsearchmeta ogdescript descript twitterdescript webpag descript defaultnon unwieldi descript selfogsearchdescriptionwebpag defaultnon selfhtmlsearchmetadescript webpag defaultnon selfhtmlsearchmetatwitterdescript webpag defaultnon method support list pattern searchregex htmlsearchregex ogsearchproperti htmlsearchmeta trail parenthes alway move trail parenthes last argument exampl correct lambda x xresultsetresultvideourlsetvideourl list incorrect lambda x xresultsetresultvideourlsetvideourl list use conveni convers pars function wrap extract numer data safe function youtubedlutilspi intornon floatornon use string number convers well use urlornon safe url process use tryget safe metadata extract pars json use unifiedstrd uniform uploadd yyyymmdd meta field extract unifiedtimestamp uniform timestamp extract parsefiles files extract parsecount count meta field extract parseresolut parsedur durat extract parseagelimit agelimit extract explor youtubedlutilspi use conveni function exampl safe extract option descript pars json descript trygetrespons lambda x xresultvideosummari compatstr safe extract option metadata video trygetrespons lambda x xresultvideo dict descript videogetsummari durat floatornonevideogetdurationm scale viewcount intornonevideogetview embed youtubedl youtubedl make best effort good commandlin program thu callabl program languag encount problem pars output feel free creat report python program emb youtubedl power fashion like futur import unicodeliter import youtubedl ydlopt youtubedlyoutubedlydlopt ydl ydldownloadhttpswwwyoutubecomwatchvbawjenozkc like youll want use variou option list option avail look youtubedlyoutubedlpi start want intercept youtubedl output set logger object here complet exampl program output error short messag download finish downloadsconvert video mp file futur import unicodeliter import youtubedl class myloggerobject def debugself msg pass def warningself msg pass def errorself msg printmsg def myhookd dstatu finish printdon download convert ydlopt format bestaudiobest postprocessor key ffmpegextractaudio preferredcodec mp preferredqu logger mylogg progresshook myhook youtubedlyoutubedlydlopt ydl ydldownloadhttpswwwyoutubecomwatchvbawjenozkc bug bug suggest report httpsgithubcomytdlorgyoutubedlissu unless prompt anoth pertin reason eg github fail accept bug report pleas send bug report via person email discuss join us irc channel youtubedl freenod webchat pleas includ full output youtubedl run v ie add v flag command line copi whole output post issu bodi wrap better format look similar youtubedl v command line debug system config debug user config debug commandlin arg uv uhttpswwwyoutubecomwatchvbawjenozkcj debug encod local cp fs mbc cp pref cp debug youtubedl version debug git head e debug python version windowsserversp debug exe version ffmpeg ngdf ffprobe ngdf rtmpdump debug proxi map post screenshot verbos log plain text accept output includ first line contain import debug inform issu without full output often reproduc therefor get solv short order ever pleas reread issu avoid coupl common mistak use checklist descript issu suffici often get issu report cannot realli deciph case eventu get requir inform ask back multipl time pose unnecessari drain resourc mani contributor includ also nativ speaker may misread part pleas elabor featur request bug want fix make sure obviou problem could fix propos solut would look like report shorter two line almost certainli miss make hard us respond often polit close issu outright miss info make misinterpret like committ often get frustrat issu sinc possibl way move forward ask clarif bug report mean report contain complet output youtubedl call v flag error messag get bug even say would believ mani bug report contain inform server multipl ip suspect censorship ad callhom may good idea get diagnost error error unabl extract cannot reproduc multipl countri add dumppag warn yield rather larg output redirect file logtxt ad logtxt commandlin upload dump file get add writepag somewher site support request must contain exampl url exampl url url might want download like httpswwwyoutubecomwatchvbawjenozkc obviou video present except special circumst main page video servic eg httpswwwyoutubecom exampl url use latest version report issu type youtubedl u report your uptod report receiv alreadi fix peopl use outdat version goe featur request well issu alreadi document make sure someon alreadi open issu your tri open search top window brows github issu repositori issu feel free write someth along line affect well version inform issu issu may old new post often spur rapid activ exist option enough request new featur pleas quick peek list support option mani featur request featur actual exist alreadi pleas absolut show work issu report detail exist similar option solv problem enough context bug report peopl want solv problem often think us favor break larger problem eg want skip alreadi download file specif request eg request us look whether file exist download info page howev often happen break problem two step one simpl one imposs extrem complic one present complic request origin problem could solv far easier eg record download video id separ file avoid must includ greater context nonobvi particular everi featur request consist ad support new site contain use case scenario explain situat miss featur would use issu involv one problem one problem user seem think limit issu open limit issu open may seem appeal abl dump issu one ticket mean someon solv one issu cannot mark issu close typic report bunch issu lead ticket linger sinc nobodi want attack behemoth someon merci split issu multipl one particular everi site support request issu pertain servic one site gener common domain alway use backend technolog request support vimeo user video white hous podcast googl plu page issu also make sure dont post bug report alongsid featur request rule thumb featur request includ output youtubedl immedi relat featur hand post report network error alongsid request new video servic anyon go need featur post featur incapacit friend person talk requir post featur seem like good idea realli use request someon requir question youtubedl may sound strang bug report receiv complet unrel youtubedl relat differ even report applic pleas make sure actual use youtubedl use ui youtubedl report bug maintain actual applic provid ui hand ui youtubedl fail way believ relat youtubedl mean go ahead report bug copyright youtubedl releas public domain copyright holder readm file origin written daniel bolton likewis releas public domain,youtubedl download video youtubecom video platform installation description option configuration output template format selection video selection faq developer instruction embedding youtubedl bug copyright installation install right away unix user linux macos etc type sudo curl l httpsytdlorgdownloadslatestyoutubedl usrlocalbinyoutubedl sudo chmod arx usrlocalbinyoutubedl curl alternatively use recent wget sudo wget httpsytdlorgdownloadslatestyoutubedl usrlocalbinyoutubedl sudo chmod arx usrlocalbinyoutubedl window user download exe file place location path except systemrootsystem eg put cwindowssystem also use pip sudo h pip install upgrade youtubedl command update youtubedl already installed see pypi page information macos user install youtubedl homebrew brew install youtubedl macports sudo port install youtubedl alternatively refer developer instruction check work git repository option including pgp signature see youtubedl download page description youtubedl commandline program download video youtubecom site requires python interpreter version platform specific work unix box window macos released public domain mean modify redistribute use however like youtubedl option url url option h help print help text exit version print program version exit u update update program latest version make sure sufficient permission run sudo needed ignoreerrors continue download error example skip unavailable video playlist abortonerror abort downloading video playlist command line error occurs dumpuseragent display current browser identification listextractors list supported extractor extractordescriptions output description supported extractor forcegenericextractor force extraction use generic extractor defaultsearch prefix use prefix unqualified url example gvsearch downloads two video google video youtubedl large apple use value auto let youtubedl guess autowarning emit warning guessing error throw error default value fixuperror repair broken url emits error possible instead searching ignoreconfig read configuration file given global configuration file etcyoutubedlconf read user configuration configyoutube dlconfig appdatayoutubedlconfigtxt window configlocation path location configuration file either path config containing directory flatplaylist extract video playlist list markwatched mark video watched youtube nomarkwatched mark video watched youtube nocolor emit color code output network option proxy url use specified httphttpssocks proxy enable sock proxy specify proper scheme example sock pas empty string proxy direct connection sockettimeout second time wait giving second sourceaddress ip clientside ip address bind forceipv make connection via ipv forceipv make connection via ipv geo restriction geoverificationproxy url use proxy verify ip address georestricted site default proxy specified proxy none option present used actual downloading geobypass bypass geographic restriction via faking xforwardedfor http header nogeobypass bypass geographic restriction via faking xforwardedfor http header geobypasscountry code force bypass geographic restriction explicitly provided twoletter iso country code geobypassipblock ipblock force bypass geographic restriction explicitly provided ip block cidr notation video selection playliststart number playlist video start default playlistend number playlist video end default last playlistitems itemspec playlist video item download specify index video playlist separated comma like playlistitems want download video indexed playlist specify range playlistitems download video index matchtitle regex download matching title regex caseless substring rejecttitle regex skip download matching title regex caseless substring maxdownloads number abort downloading number file minfilesize size download video smaller size eg k maxfilesize size download video larger size eg k date date download video uploaded date datebefore date download video uploaded date ie inclusive dateafter date download video uploaded date ie inclusive minviews count download video le count view maxviews count download video count view matchfilter filter generic video filter specify key see output template list available key match key present key check key present key number like commentcount also work compare number key literal like uploader mike smith also work match string literal require multiple match value known excluded unless put question mark operator example match video liked time disliked le time dislike functionality available given service also description use matchfilter likecount dislikecount description noplaylist download video url refers video playlist yesplaylist download playlist url refers video playlist agelimit year download video suitable given age downloadarchive file download video listed archive file record id downloaded video includeads download advertisement well experimental download option r limitrate rate maximum download rate byte per second eg k r retries retries number retries default infinite fragmentretries retries number retries fragment default infinite dash hlsnative ism skipunavailablefragments skip unavailable fragment dash hlsnative ism abortonunavailablefragment abort downloading fragment available keepfragments keep downloaded fragment disk downloading finished fragment erased default buffersize size size download buffer eg k default noresizebuffer automatically adjust buffer size default buffer size automatically resized initial value size httpchunksize size size chunk chunkbased http downloading eg default disabled may useful bypassing bandwidth throttling imposed webserver experimental playlistreverse download playlist video reverse order playlistrandom download playlist video random order xattrsetfilesize set file xattribute ytdlfilesize expected file size hlsprefernative use native hl downloader instead ffmpeg hlspreferffmpeg use ffmpeg instead native hl downloader hlsusempegts use mpegts container hl video allowing play video downloading player may able play externaldownloader command use specified external downloader currently support ariacavconvaxelcurlffmpeghttpiewget externaldownloaderargs args give argument external downloader filesystem option batchfile file file containing url download stdin one url per line line starting considered comment ignored id use video id file name output template output filename template see output template info autonumberstart number specify start value autonumbers default restrictfilenames restrict filename ascii character avoid space filename w nooverwrites overwrite file c continue force resume partially downloaded file default youtubedl resume downloads possible nocontinue resume partially downloaded file restart beginning nopart use part file write directly output file nomtime use lastmodified header set file modification time writedescription write video description description file writeinfojson write video metadata infojson file writeannotations write video annotation annotationsxml file loadinfojson file json file containing video information created writeinfojson option cooky file file read cooky dump cookie jar cachedir dir location filesystem youtubedl store downloaded information permanently default xdgcachehomeyoutubedl cacheyoutubedl moment youtube player file video obfuscated signature cached may change nocachedir disable filesystem caching rmcachedir delete filesystem cache file thumbnail image writethumbnail write thumbnail image disk writeallthumbnails write thumbnail image format disk listthumbnails simulate list available thumbnail format verbosity simulation option q quiet activate quiet mode nowarnings ignore warning simulate download video write anything disk skipdownload download video g geturl simulate quiet print url e gettitle simulate quiet print title getid simulate quiet print id getthumbnail simulate quiet print thumbnail url getdescription simulate quiet print video description getduration simulate quiet print video length getfilename simulate quiet print output filename getformat simulate quiet print output format j dumpjson simulate quiet print json information see output template description available key j dumpsinglejson simulate quiet print json information commandline argument url refers playlist dump whole playlist information single line printjson quiet print video information json video still downloaded newline output progress bar new line noprogress print progress bar consoletitle display progress console titlebar v verbose print various debugging information dumppages print downloaded page encoded using base debug problem verbose writepages write downloaded intermediary page file current directory debug problem printtraffic display sent read http traffic c callhome contact youtubedl server debugging nocallhome contact youtubedl server debugging workarounds encoding encoding force specified encoding experimental nocheckcertificate suppress http certificate validation preferinsecure use unencrypted connection retrieve information video currently supported youtube useragent ua specify custom user agent referer url specify custom referer use video access restricted one domain addheader fieldvalue specify custom http header value separated colon use option multiple time bidiworkaround work around terminal lack bidirectional text support requires bidiv fribidi executable path sleepinterval second number second sleep download used alone lower bound range randomized sleep download minimum possible number second sleep used along maxsleepinterval maxsleepinterval second upper bound range randomized sleep download maximum possible number second sleep must used along minsleepinterval video format option f format format video format code see format selection info allformats download available video format preferfreeformats prefer free video format unless specific one requested f listformats list available format requested video youtubeskipdashmanifest download dash manifest related data youtube video mergeoutputformat format merge required eg bestvideobestaudio output given container format one mkv mp ogg webm flv ignored merge required subtitle option writesub write subtitle file writeautosub write automatically generated subtitle file youtube allsubs download available subtitle video listsubs list available subtitle video subformat format subtitle format accepts format preference example srt asssrtbest sublang langs language subtitle download optional separated comma use list sub available language tag authentication option u username username login account id p password password account password option left youtubedl ask interactively twofactor twofactor twofactor authentication code n netrc use netrc authentication data videopassword password video password vimeo smotri youku adobe pas option apmso mso adobe pas multiplesystem operator tv provider identifier use aplistmso list available msos apusername username multiplesystem operator account login appassword password multiplesystem operator account password option left youtubedl ask interactively aplistmso list supported multiplesystem operator postprocessing option x extractaudio convert video file audioonly file requires ffmpeg avconv ffprobe avprobe audioformat format specify audio format best aac flac mp opus vorbis wav best default effect without x audioquality quality specify ffmpegavconv audio quality insert value better worse vbr specific bitrate like k default recodevideo format encode video another format necessary currently supported mpflvoggwebmmkvavi postprocessorargs args give argument postprocessor k keepvideo keep video file disk post processing video erased default nopostoverwrites overwrite postprocessed file postprocessed file overwritten default embedsubs embed subtitle video mp webm mkv video embedthumbnail embed thumbnail audio cover art addmetadata write metadata video file metadatafromtitle format parse additional metadata like song title artist video title format syntax output regular expression named capture group may also used parsed parameter replace existing value example metadatafrom title artist title match title like coldplay paradise example regex metadatafromtitle partist ptitle xattrs write metadata video file xattrs using dublin core xdg standard fixup policy automatically correct known fault file one never nothing warn emit warning detectorwarn default fix file warn otherwise preferavconv prefer avconv ffmpeg running postprocessors preferffmpeg prefer ffmpeg avconv running postprocessors default ffmpeglocation path location ffmpegavconv binary either path binary containing directory exec cmd execute command file downloading similar find exec syntax example exec adb push sdcardmusic rm convertsubs format convert subtitle format currently supported srtassvttlrc configuration configure youtubedl placing supported command line option configuration file linux macos system wide configuration file located etcyoutubedlconf user wide configuration file configyoutubedlconfig window user wide configuration file location appdatayoutubedlconfigtxt cusersuser nameyoutubedlconf note default configuration file may exist may need create example following configuration file youtubedl always extract audio copy mtime use proxy save video movie directory home directory line starting comment always extract audio x copy mtime nomtime use proxy proxy save video movie directory home directory moviestitlesexts note option configuration file option aka switch used regular command line call thus must whitespace eg proxy proxy use ignoreconfig want disable configuration file particular youtubedl run also use configlocation want use custom configuration file particular youtubedl run authentication netrc file may also want configure automatic credential storage extractor support authentication providing login password username password order pas credential command line argument every youtubedl execution prevent tracking plain text password shell command history achieve using netrc file per extractor basis need create netrc file home restrict permission readwrite touch homenetrc chmod arwxurw homenetrc add credential extractor following format extractor name extractor lowercase machine extractor login login password password example machine youtube login myaccountgmailcom password myyoutubepassword machine twitch login mytwitchaccountname password mytwitchpassword activate authentication netrc file pas netrc youtubedl place configuration file window may also need setup home environment variable manually example set homeuserprofile output template option allows user indicate template output file name tldr navigate example basic usage set template argument downloading single file like youtubedl funnyvideoflv httpssomevideo however may contain special sequence replaced downloading video special sequence may formatted according python string formatting operation example name named clarify percent symbol followed name parenthesis followed formatting operation allowed name along sequence type id string video identifier title string video title url string video url ext string video filename extension alttitle string secondary title video displayid string alternative identifier video uploader string full name video uploader license string license name video licensed creator string creator video releasedate string date yyyymmdd video released timestamp numeric unix timestamp moment video became available uploaddate string video upload date yyyymmdd uploaderid string nickname id video uploader channel string full name channel video uploaded channelid string id channel location string physical location video filmed duration numeric length video second viewcount numeric many user watched video platform likecount numeric number positive rating video dislikecount numeric number negative rating video repostcount numeric number reposts video averagerating numeric average rating give user scale used depends webpage commentcount numeric number comment video agelimit numeric age restriction video year islive boolean whether video live stream fixedlength video starttime numeric time second reproduction start specified url endtime numeric time second reproduction end specified url format string humanreadable description format formatid string format code specified format formatnote string additional info format width numeric width video height numeric height video resolution string textual description width height tbr numeric average bitrate audio video kbit abr numeric average audio bitrate kbit acodec string name audio codec use asr numeric audio sampling rate hertz vbr numeric average video bitrate kbit fps numeric frame rate vcodec string name video codec use container string name container format filesize numeric number byte known advance filesizeapprox numeric estimate number byte protocol string protocol used actual download extractor string name extractor extractorkey string key name extractor epoch numeric unix epoch creating file autonumber numeric fivedigit number increased download starting zero playlist string name id playlist contains video playlistindex numeric index video playlist padded leading zero according total length playlist playlistid string playlist identifier playlisttitle string playlist title playlistuploader string full name playlist uploader playlistuploaderid string nickname id playlist uploader available video belongs logical chapter section chapter string name title chapter video belongs chapternumber numeric number chapter video belongs chapterid string id chapter video belongs available video episode series programme series string title series programme video episode belongs season string title season video episode belongs seasonnumber numeric number season video episode belongs seasonid string id season video episode belongs episode string title video episode episodenumber numeric number video episode within season episodeid string id video episode available medium track part music album track string title track tracknumber numeric number track within album disc trackid string id track artist string artist track genre string genre track album string title album track belongs albumtype string type album albumartist string list artist appeared album discnumber numeric number disc physical medium track belongs releaseyear numeric year yyyy album released aforementioned sequence referenced output template replaced actual value corresponding sequence name note sequence guaranteed present since depend metadata obtained particular extractor sequence replaced na example titlesidsexts mp video title youtubedl test video id bawjenozkcj result youtubedl test videobawjenozkcjmp file created current directory numeric sequence use numeric related formatting example viewcountd result string view count padded zero character like output template also contain arbitrary hierarchical path eg playlistsplaylistindexs titlesexts result downloading video directory corresponding path template missing directory automatically created use percent literal output template use output stdout use current default template titlesidsexts case dont want special character space transferring downloaded filename window system filename bitunsafe channel case add restrictfilenames flag get shorter title output template window batch file using output template inside window batch file must escape plain percent character doubling titlesidsexts become titlesidsexts however touch plain character eg environment variable expansion stay intact chomepathdesktoptitlesexts output template example note window may need use double quote instead single youtubedl getfilename titlesexts bawjenozkc youtubedl test video amp kind weird character youtubedl getfilename titlesexts bawjenozkc restrictfilenames youtubedltestvideomp simple file name download youtube playlist video separate directory indexed video order playlist youtubedl playlistsplaylistindexs titlesexts httpswwwyoutubecomplaylistlistplwiyxdcpjrngqaqnbcvlslapre download playlist youtube channeluser keeping playlist separate directory youtubedl uploadersplaylistsplaylistindexs titlesexts httpswwwyoutubecomuserthelinuxfoundationplaylists download udemy course keeping chapter separate directory myvideos directory home youtubedl u user p password myvideosplaylistschapternumbers chapterstitlesexts httpswwwudemycomjavatutorial download entire series season keeping series season separate directory cmyvideos youtubedl cmyvideosseriessseasonnumbers seasonsepisodenumbers episodesexts httpsvideomorerukinovdetalayahsezon stream video downloaded stdout youtubedl bawjenozkc format selection default youtubedl try download best available quality ie want best quality dont need pas special option youtubedl guess default sometimes may want download different format example slow intermittent connection key mechanism achieving socalled format selection based explicitly specify desired format select format based criterion criterion setup precedence much general syntax format selection format format shorter f format format selector expression ie expression describes format format would like download tldr navigate example simplest case requesting specific format example f download format format code equal get list available format code particular video using listformats f note format code extractor specific also use file extension currently gp aac flv mp mp ogg wav webm supported download best quality format particular file extension served single file eg f webm download best quality format webm extension served single file also use special name select particular edge case format best select best quality format represented single file video audio worst select worst quality format represented single file video audio bestvideo select best quality videoonly format eg dash video may available worstvideo select worst quality videoonly format may available bestaudio select best quality audio onlyformat may available worstaudio select worst quality audio onlyformat may available example download worst quality videoonly format use f worstvideo want download multiple video dont format available specify order preference using slash note slash leftassociative ie format left hand side preferred example f download format available otherwise download format available otherwise download format available otherwise complain suitable format available download want download several format video use comma separator eg f download three format course available sophisticated example combined precedence feature f mpbestvideomabestaudio also filter video format putting condition bracket f bestheight f filesizem following numeric meta field used comparison equal equal filesize number byte known advance width width video known height height video known tbr average bitrate audio video kbit abr average audio bitrate kbit vbr average video bitrate kbit asr audio sampling rate hertz fps frame rate also filtering work comparison equal start end contains following string meta field ext file extension acodec name audio codec use vcodec name video codec use container name container format protocol protocol used actual download lowercase http http rtsp rtmp rtmpe mm fm ism httpdashsegments mu munative formatid short description format string comparison may prefixed negation order produce opposite comparison eg contain note none aforementioned meta field guaranteed present since solely depends metadata obtained particular extractor ie metadata offered video hoster format value known excluded unless put question mark operator combine format filter f height tbr selects p video video height known bitrate least kbit merge video audio two format single file using f videoformataudioformat requires ffmpeg avconv installed example f bestvideobestaudio download best videoonly format best audioonly format mux together ffmpegavconv format selector also grouped using parenthesis example want download best mp webm format height lower use f mpwebmheight since end april version youtubedl us f bestvideobestaudiobest default format selection see ffmpeg avconv installed result downloading bestvideo bestaudio separately muxing together single file giving best overall quality available otherwise fall back best result downloading best available quality served single file best also needed video dont come youtube dont provide audio video two different file want download dash format example interested getting video resolution higher p add f bestvideoheightbestaudiobest configuration file note use youtubedl stream stdout likely pipe medium player ie explicitly specify output template youtubedl still us f best format selection order start content delivery immediately player wait bestvideo bestaudio downloaded muxed want preserve old format selection behavior prior youtubedl ie want download best available quality medium served single file explicitly specify choice f best may want add configuration file order type every time run youtubedl format selection example note window may need use double quote instead single download best mp format available best mp available youtubedl f bestvideoextmpbestaudioextmabestextmpbest download best format available better p youtubedl f bestvideoheightbestaudiobestheight download best video format bigger mb youtubedl f bestfilesizem download best format available via direct link httphttps protocol youtubedl f bestvideobestaudiobestprotocolhttp download best video format best audio format without merging youtubedl f bestvideobestaudio titlesfformatidsexts note last example output template recommended bestvideo bestaudio may file name video selection video filtered upload date using option date datebefore dateafter accept date two format absolute date date format yyyymmdd relative date date format nowtodaydayweekmonthyears example download video uploaded last month youtubedl dateafter nowmonths download video uploaded january youtubedl date download video uploaded x decade youtubedl dateafter datebefore faq update youtubedl youve followed manual installation instruction simply run youtubedl u linux sudo youtubedl u used pip simple sudo pip install u youtubedl sufficient update installed youtubedl using package manager like aptget yum use standard system update mechanism update note distribution package often outdated rule thumb youtubedl release least month often weekly even daily simply go httpsytdlorg find current version unfortunately nothing youtubedl developer distribution serf really outdated version complain distribution bugtracker support forum last resort also uninstall version installed package manager follow manual installation instruction remove distribution package line like sudo aptget remove youtubedl afterwards simply follow manual installation instruction sudo wget httpsytdlorgdownloadslatestyoutubedl usrlocalbinyoutubedl sudo chmod arx usrlocalbinyoutubedl hash r youll able update sudo youtubedl u youtubedl extremely slow start window add file exclusion youtubedlexe window defender setting im getting error unable extract opengraph title youtube playlist youtube changed playlist format march later youll need least youtubedl download youtube video installed youtubedl package manager pip setuppy tarball please use update note ubuntu package seem get updated anymore since affiliated ubuntu little feel free report bug ubuntu packaging people update package somewhat recent version see way update im getting error trying use output template error using output template conflict using title video id auto number make sure using option title id autonumber set command line configuration file remove latter always pas citw default youtubedl intends best option incidentally convincing case different please file issue explain therefore unnecessary sometimes harmful copy long option string webpage particular option citw regularly useful please put b option back people asking question aware youtubedl default downloading highest available quality reported youtube p p case longer need b option specific video maybe youtube report available specific high quality format youre interested case simply request f option youtubedl try download get http error trying download video whats apparently youtube requires pas captcha test download much considering provide way let solve captcha moment best course action pointing web browser youtube url solving captcha restart youtubedl need program youtubedl work fine site however want convert videoaudio youll need avconv ffmpeg site notably youtube video retrieved higher quality format without sound youtubedl detect whether avconvffmpeg present automatically pick best option video video format streamed via rtmp protocol downloaded rtmpdump installed downloading mm rtsp video requires either mplayer mpv installed downloaded video play video fully downloaded use video player mpv vlc mplayer extracted video url g play another machine web browser depends lot service many case request video downloadplay must come ip address cooky andor http header use cooky option write required cooky file advise downloader read cooky file site also require common user agent used use dumpuseragent see one use youtubedl also get necessary cooky http header json output obtained dumpjson may beneficial use ipv case restriction applied ipv service sometimes subset video restrict video url ip address cookie useragent exception rather rule please bear mind url protocol supported browser box including rtmp using g downloader must support well want play video machine running youtubedl relay video content machine run youtubedl use let youtubedl stream video stdout simply allow player download file written youtubedl turn error fmturlmap conn information found video info youtube switched new video info format july supported old version youtubedl see update youtubedl error unable download video youtube requires additional signature since september supported old version youtubedl see update youtubedl video url contains ampersand im getting strange output v recognized internal external command thats actually output shell since ampersand one special shell character interpreted shell preventing passing whole url youtubedl disable shell interpreting ampersand special character either put whole url quote escape backslash approach work depends shell example url httpswwwyoutubecomwatchtvbawjenozkc end following command youtubedl httpswwwyoutubecomwatchtvbawjenozkc youtubedl httpswwwyoutubecomwatchtvbawjenozkc window use double quote youtubedl httpswwwyoutubecomwatchtvbawjenozkc extractorerror could find j function uof february new youtube player contained character sequence string misinterpreted old version youtubedl see update youtubedl http error many request payment required two error code indicate service blocking ip address overuse contact service ask unblock ip address acquired whitelisted ip address already use proxy sourceaddress option select another ip address syntaxerror nonascii character error file youtubedl line syntaxerror nonascii character x mean youre using outdated version python please update python binary file code gone since june youtubedl packed executable zipfile simply unzip might need renaming youtubedlzip first system clone git repository laid modify code run executing mainpy file recompile executable run make youtubedl exe throw error due missing msvcrdll run exe need install first microsoft visual c redistributable package x window set ffmpeg youtubedl put exe file put youtubedl ffmpeg directory youre running command work thats rather cumbersome make different directory work either ffmpeg youtubedl simply create directory say cbin cusersuser namebin put executables directly set path environment variable include directory restarting shell able access youtubedl ffmpeg youtubedl able find ffmpeg simply typing youtubedl ffmpeg matter directory youre put downloads specific folder use specify output template example homeuservideostitlesidsexts want downloads put option configuration file download video starting either prepend httpswwwyoutubecomwatchv separate id option youtubedl wnyeurxzfu youtubedl httpswwwyoutubecomwatchvwnyeurxzfu pas cooky youtubedl use cooky option example cooky pathtocookiesfiletxt order extract cooky browser use conforming browser extension exporting cooky example cookiestxt chrome cookiestxt firefox note cooky file must mozillanetscape format first line cooky file must either http cookie file netscape http cookie file make sure correct newline format cooky file convert newlines necessary correspond o namely crlf rn window lf n unix unixlike system linux macos etc http error bad request using cooky good sign invalid newline format passing cooky youtubedl good way workaround login particular extractor implement explicitly another use case working around captcha website require solve particular case order get access eg youtube cloudflare stream directly medium player first need tell youtubedl stream medium stdout also tell medium player read stdin must capable streaming pipe former latter example streaming vlc achieved youtubedl httpswwwyoutubecomwatchvbawjenozkcj vlc download new video playlist use downloadarchive feature feature initially download complete playlist downloadarchive pathtodownloadarchivefiletxt record identifier video special file subsequent run downloadarchive download new video skip video downloaded note successful downloads recorded file example first youtubedl downloadarchive archivetxt httpswwwyoutubecomplaylistlistplwiyxdcpjrngqaqnbcvlslapre download complete plwiyxdcpjrngqaqnbcvlslapre playlist create file archivetxt subsequent run download new video youtubedl downloadarchive archivetxt httpswwwyoutubecomplaylistlistplwiyxdcpjrngqaqnbcvlslapre add hlsprefernative config youtubedl detects hl video download either builtin downloader ffmpeg since many hl stream slightly invalid ffmpegyoutubedl handle invalid case better option switch downloader needed youtubedl know one particular downloader work better given website downloader picked otherwise youtubedl pick best downloader general compatibility moment happens ffmpeg choice may change future version youtubedl improvement builtin downloader andor ffmpeg particular generic extractor used website list supported site youtubedl cannot mandate one specific downloader put either hlsprefernative hlspreferffmpeg configuration different subset video fail download correctly instead much better file issue pull request detail native ffmpeg hl downloader better choice use case add support anime video site site show current movie free matter policy well legality youtubedl include support service specialize infringing copyright rule thumb cannot easily find video service quite obviously allowed distribute ie uploaded creator creator distributor published free license service probably unfit inclusion youtubedl note service dont host infringing content link evidence service included youtubedl go dmca note whole front page service filled video allowed distribute fair use note equally unconvincing service show copyrightprotected video full without authorization support request service purchase right distribute content perfectly fine though doubt simply include source mention legitimate purchase content speed work issue also known help important issue solved youtubedl core developer team quite small best solve many issue possible sometimes take quite speed issue here first please report issue issue tracker allows u coordinate effort user developer serf unified point unfortunately youtubedl project grown large use personal email effective communication channel please read bug reporting instruction lot bug lack necessary information offer proxy vpn shell access youtubedl developer able test issue multiple computer multiple country exclude local censorship misconfiguration issue nobody interested solving issue welcome take matter hand submit pull request coercepay somebody else feel free bump issue time time writing small comment issue still present youtubedl version france fixed belgium please month please declare issue important urgent detect whether given url supported youtubedl one look list supported site note sometimes happen site change url scheme say httpsexamplecomvideo httpsexamplecomv youtubedl report url service list unsupported case simply report bug possible detect whether url supported thats youtubedl contains generic extractor match url may tempted disable exclude remove generic extractor generic extractor allows user extract video lot website embed video another service may also used extract video service hosting therefore neither recommend support disabling excluding removing generic extractor want find whether given url supported simply call youtubedl get video back chance url either referring video unsupported find examining output run youtubedl console catching unsupportederror exception run python program need go much red tape filing bug issue template despite extensive bug reporting instruction issue report got useless instance people used ancient version hundred release old simple syntactic error youtubedl general shell usage problem already reported multiple time people actually read error message even said please install ffmpeg people mention url trying download many simple easytoavoid problem many totally unrelated youtubedl youtubedl opensource project manned volunteer wed rather spend time fixing bug certain none simple problem apply reasonably confident able reproduce issue without asking reporter repeatedly output youtubedl v yoururlhere really thats required file issue issue template also guide basic step checking version youtubedl current developer instruction user need build youtubedl download build get distribution run youtubedl developer dont need build anything either simply execute python youtubedl run test simply invoke favorite test runner execute test file directly following work python unittest discover python testtestdownloadpy nosetests see item new extractor tutorial run extractor specific test case want create build youtubedl youll need python make gnu make supported pandoc zip nosetests adding support new site want add support new site first make sure site dedicated copyright infringement youtubedl support site thus pull request adding support rejected ensured site distributing content legally follow quick list assuming service called yourextractor fork repository check source code git clone gitgithubcomyourgithubusernameyoutubedlgit start new git branch cd youtubedl git checkout b yourextractor start simple template save youtubedlextractoryourextractorpy coding utf future import unicodeliterals common import infoextractor class yourextractorieinfoextractor validurl rhttpswwwyourextractorcomwatchpid test url httpsyourextractorcomwatch md todo md sum first byte video file use test infodict id ext mp title video title go thumbnail rrehttpsjpg todo property either value md checksum start string md regular expression start string python type example int float def realextractself url videoid selfmatchidurl webpage selfdownloadwebpageurl videoid todo code go example title selfhtmlsearchregexrhh webpage title return id videoid title title description selfogsearchdescriptionwebpage uploader selfsearchregexrdividuploader webpage uploader fatalfalse todo property see youtubedlextractorcommonpy add import youtubedlextractorextractorspy run python testtestdownloadpy testdownloadtestyourextractor fail first continually rerun youre done decide add one test rename test test make list dictionary test named testdownloadtestyourextractor testdownloadtestyourextractor testdownloadtestyourextractor etc note test onlymatching key test dict counted look youtubedlextractorcommonpy possible helper method detailed description extractor may return add test code many want make sure code follows youtubedl coding convention check code flake flake youtubedlextractoryourextractorpy make sure code work python version claimed supported youtubedl namely test pas add new file commit push result like git add youtubedlextractorextractorspy git add youtubedlextractoryourextractorpy git commit yourextractor add new extractor git push origin yourextractor finally create pull request well review merge case thank much contribution youtubedl coding convention section introduces guide line writing idiomatic robust futureproof extractor code extractor fragile nature since depend layout source data provided rd party medium hosters control layout tends change extractor implementer task write code extract medium link metadata correctly also minimize dependency source layout even make code foresee potential future change ready important allow extractor break minor layout change thus keeping old youtubedl version working even though breakage issue easily fixed emitting new version youtubedl fix incorporated previous version become broken repository distros package may prompt fetching update u needle say non rolling release distros may never receive update mandatory optional metafields extraction work youtubedl relies metadata extractor extract provides youtubedl expressed information dictionary simply info dict following meta field info dict considered mandatory successful extraction process youtubedl id medium identifier title medium title url medium download url format fact last option technically mandatory ie cant figure download location medium extraction make sense convention youtubedl also treat id title mandatory thus aforementioned metafields critical data extraction make sense without fail extracted extractor considered completely broken field apart aforementioned one considered optional mean extraction tolerant situation source field potentially unavailable even always available moment futureproof order break extraction general purpose mandatory field example say source dictionary meta youve fetched json http request key summary meta selfdownloadjsonurl videoid assume point metas layout summary fancy summary text assume want extract summary put resulting info dict description since description optional meta field ready key may missing meta dict extract like description metagetsummary correct like description metasummary incorrect latter break extraction process keyerror summary disappears meta later time former approach extraction go ahead description set none perfectly fine remember none equivalent absence data similarly pas fatalfalse extracting optional data webpage searchregex htmlsearchregex similar method instance description selfsearchregex rspanidtitle webpage description fatalfalse fatal set false searchregex fails extract description emit warning continue extraction also pas defaultsome fallback value example description selfsearchregex rspanidtitle webpage description defaultnone failure code silently continue extraction description set none useful metafields may may present provide fallback extracting metadata try multiple source example title present several place try extracting least make futureproof case source become unavailable example say meta previous example title extract since title mandatory meta field end something like title metatitle title disappears meta future due change hosters side extraction would fail since title mandatory thats expected assume another source extract title example ogtitle html meta webpage case provide fallback scenario title metagettitle selfogsearchtitlewebpage code try extract meta first fails try extracting ogtitle webpage regular expression dont capture group dont use capturing group must indication used somewhere code group used must non capturing example dont capture id attribute name since cant use anything anyway correct rididpidd incorrect rididpidd make regular expression relaxed flexible using regular expression try write fuzzy relaxed flexible skipping insignificant part likely change allowing single double quote quoted value example say need extract title following html code span styleposition absolute left px width px float right zindex classtitlesome fancy titlespan code task look similar title selfsearchregex rspanclasstitle webpage title even better title selfsearchregex rspanclasstitleptitle webpage title grouptitle note tolerate potential change style attribute value switch using double quote single class attribute code definitely look like title selfsearchregex rspan styleposition absolute left px width px float right zindex classtitlespan webpage title grouptitle long line policy soft limit keep line code character long mean respected possible make readability code maintenance worse example never split long string literal like url often copied entity multiple line fit limit correct httpswwwyoutubecomwatchvfqztnjqwlistplmyetvrpaqyvwcwmzpnvzqfukd incorrect httpswwwyoutubecomwatchvfqztnjqwlist plmyetvrpaqyvwcwmzpnvzqfukd inline value extracting variable acceptable reducing code duplication improving readability complex expression however avoid extracting variable used moving opposite part extractor file make reading linear flow difficult example correct title selfhtmlsearchregexrtitletitle webpage title incorrect titlere rtitletitle line code title selfhtmlsearchregextitlere webpage title collapse fallback multiple fallback value quickly become unwieldy collapse multiple fallback value single expression via list pattern example good description selfhtmlsearchmeta ogdescription description twitterdescription webpage description defaultnone unwieldy description selfogsearchdescriptionwebpage defaultnone selfhtmlsearchmetadescription webpage defaultnone selfhtmlsearchmetatwitterdescription webpage defaultnone method supporting list pattern searchregex htmlsearchregex ogsearchproperty htmlsearchmeta trailing parenthesis always move trailing parenthesis last argument example correct lambda x xresultsetresultvideourlsetvideourl list incorrect lambda x xresultsetresultvideourlsetvideourl list use convenience conversion parsing function wrap extracted numeric data safe function youtubedlutilspy intornone floatornone use string number conversion well use urlornone safe url processing use tryget safe metadata extraction parsed json use unifiedstrdate uniform uploaddate yyyymmdd meta field extraction unifiedtimestamp uniform timestamp extraction parsefilesize filesize extraction parsecount count meta field extraction parseresolution parseduration duration extraction parseagelimit agelimit extraction explore youtubedlutilspy useful convenience function example safely extract optional description parsed json description trygetresponse lambda x xresultvideosummary compatstr safely extract optional metadata video trygetresponse lambda x xresultvideo dict description videogetsummary duration floatornonevideogetdurationms scale viewcount intornonevideogetviews embedding youtubedl youtubedl make best effort good commandline program thus callable programming language encounter problem parsing output feel free create report python program embed youtubedl powerful fashion like future import unicodeliterals import youtubedl ydlopts youtubedlyoutubedlydlopts ydl ydldownloadhttpswwwyoutubecomwatchvbawjenozkc likely youll want use various option list option available look youtubedlyoutubedlpy start want intercept youtubedls output set logger object here complete example program output error short message download finished downloadsconverts video mp file future import unicodeliterals import youtubedl class myloggerobject def debugself msg pas def warningself msg pas def errorself msg printmsg def myhookd dstatus finished printdone downloading converting ydlopts format bestaudiobest postprocessors key ffmpegextractaudio preferredcodec mp preferredquality logger mylogger progresshooks myhook youtubedlyoutubedlydlopts ydl ydldownloadhttpswwwyoutubecomwatchvbawjenozkc bug bug suggestion reported httpsgithubcomytdlorgyoutubedlissues unless prompted another pertinent reason eg github fails accept bug report please send bug report via personal email discussion join u irc channel youtubedl freenode webchat please include full output youtubedl run v ie add v flag command line copy whole output post issue body wrapped better formatting look similar youtubedl v command line debug system config debug user config debug commandline args uv uhttpswwwyoutubecomwatchvbawjenozkcj debug encoding locale cp f mbcs cp pref cp debug youtubedl version debug git head e debug python version windowsserversp debug exe version ffmpeg ngdf ffprobe ngdf rtmpdump debug proxy map post screenshots verbose log plain text acceptable output including first line contains important debugging information issue without full output often reproducible therefore get solved short order ever please reread issue avoid couple common mistake use checklist description issue sufficient often get issue report cannot really decipher case eventually get required information asking back multiple time pose unnecessary drain resource many contributor including also native speaker may misread part please elaborate feature requesting bug want fixed make sure obvious problem could fixed proposed solution would look like report shorter two line almost certainly missing make hard u respond often polite close issue outright missing info make misinterpretation likely committer often get frustrated issue since possible way move forward ask clarification bug report mean report contain complete output youtubedl called v flag error message get bug even say would believe many bug report contain information server multiple ip suspect censorship adding callhome may good idea get diagnostics error error unable extract cannot reproduce multiple country add dumppages warning yield rather large output redirect file logtxt adding logtxt commandline upload dump file get add writepages somewhere site support request must contain example url example url url might want download like httpswwwyoutubecomwatchvbawjenozkc obvious video present except special circumstance main page video service eg httpswwwyoutubecom example url using latest version reporting issue type youtubedl u report youre uptodate report receive already fixed people using outdated version go feature request well issue already documented make sure someone already opened issue youre trying open search top window browse github issue repository issue feel free write something along line affect well version information issue issue may old new post often spur rapid activity existing option enough requesting new feature please quick peek list supported option many feature request feature actually exist already please absolutely show work issue report detail existing similar option solve problem enough context bug report people want solve problem often think u favor breaking larger problem eg wanting skip already downloaded file specific request eg requesting u look whether file exists downloading info page however often happens break problem two step one simple one impossible extremely complicated one presented complicated request original problem could solved far easier eg recording downloaded video id separate file avoid must include greater context nonobvious particular every feature request consist adding support new site contain use case scenario explains situation missing feature would useful issue involve one problem one problem user seem think limit issue open limit issue open may seem appealing able dump issue one ticket mean someone solves one issue cannot mark issue closed typically reporting bunch issue lead ticket lingering since nobody want attack behemoth someone mercifully split issue multiple one particular every site support request issue pertain service one site generally common domain always using backend technology request support vimeo user video white house podcasts google plus page issue also make sure dont post bug report alongside feature request rule thumb feature request include output youtubedl immediately related feature hand post report network error alongside request new video service anyone going need feature post feature incapacitated friend personally talk require post feature seem like good idea really useful requested someone requires question youtubedl may sound strange bug report receive completely unrelated youtubedl relate different even reporter application please make sure actually using youtubedl using ui youtubedl report bug maintainer actual application providing ui hand ui youtubedl fails way believe related youtubedl mean go ahead report bug copyright youtubedl released public domain copyright holder readme file originally written daniel bolton likewise released public domain
6,Python,GitHub - nvbn/thefuck: Magnificent app which corrects your previous console command.,"The Fuck     
The Fuck is a magnificent app, inspired by a @liamosaur
tweet,
that corrects errors in previous console commands.
Is The Fuck too slow? Try the experimental instant mode!

More examples:
‚ûú apt-get install vim
E: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)
E: Unable to lock the administration directory (/var/lib/dpkg/), are you root?

‚ûú fuck
sudo apt-get install vim [enter/‚Üë/‚Üì/ctrl+c]
[sudo] password for nvbn:
Reading package lists... Done
...
‚ûú git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master


‚ûú fuck
git push --set-upstream origin master [enter/‚Üë/‚Üì/ctrl+c]
Counting objects: 9, done.
...
‚ûú puthon
No command 'puthon' found, did you mean:
 Command 'python' from package 'python-minimal' (main)
 Command 'python' from package 'python3' (main)
zsh: command not found: puthon

‚ûú fuck
python [enter/‚Üë/‚Üì/ctrl+c]
Python 3.4.2 (default, Oct  8 2014, 13:08:17)
...
‚ûú git brnch
git: 'brnch' is not a git command. See 'git --help'.

Did you mean this?
    branch

‚ûú fuck
git branch [enter/‚Üë/‚Üì/ctrl+c]
* master
‚ûú lein rpl
'rpl' is not a task. See 'lein help'.

Did you mean this?
         repl

‚ûú fuck
lein repl [enter/‚Üë/‚Üì/ctrl+c]
nREPL server started on port 54848 on host 127.0.0.1 - nrepl://127.0.0.1:54848
REPL-y 0.3.1
...
If you're not afraid of blindly running corrected commands, the
require_confirmation settings option can be disabled:
‚ûú apt-get install vim
E: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)
E: Unable to lock the administration directory (/var/lib/dpkg/), are you root?

‚ûú fuck
sudo apt-get install vim
[sudo] password for nvbn:
Reading package lists... Done
...
Requirements

python (3.4+)
pip
python-dev

Installation
On OS X, you can install The Fuck via Homebrew (or via Linuxbrew on Linux):
brew install thefuck
On Ubuntu / Mint, install The Fuck with the following commands:
sudo apt update
sudo apt install python3-dev python3-pip python3-setuptools
sudo pip3 install thefuck
On FreeBSD, install The Fuck with the following commands:
pkg install thefuck
On ChromeOS, install The Fuck using chromebrew with the following command:
crew install thefuck
On other systems, install The Fuck  by using pip:
pip install thefuck
Alternatively, you may use an OS package manager (OS X, Ubuntu, Arch).
#
It is recommended that you place this command in your .bash_profile,
.bashrc, .zshrc or other startup script:
eval $(thefuck --alias)
# You can use whatever you want as an alias, like for Mondays:
eval $(thefuck --alias FUCK)
Or in your shell config (Bash, Zsh, Fish, Powershell, tcsh).
Changes are only available in a new shell session. To make changes immediately
available, run source ~/.bashrc (or your shell config file like .zshrc).
To run fixed commands without confirmation, use the --yeah option (or just -y for short, or --hard if you're especially frustrated):
fuck --yeah
To fix commands recursively until succeeding, use the -r option:
fuck -r
Updating
pip3 install thefuck --upgrade
Note: Alias functionality was changed in v1.34 of The Fuck
How it works
The Fuck attempts to match the previous command with a rule. If a match is
found, a new command is created using the matched rule and executed. The
following rules are enabled by default:

adb_unknown_command ‚Äì fixes misspelled commands like adb logcta;
ag_literal ‚Äì adds -Q to ag when suggested;
aws_cli ‚Äì fixes misspelled commands like aws dynamdb scan;
az_cli ‚Äì fixes misspelled commands like az providers;
cargo ‚Äì runs cargo build instead of cargo;
cargo_no_command ‚Äì fixes wrongs commands like cargo buid;
cat_dir ‚Äì replaces cat with ls when you try to cat a directory;
cd_correction ‚Äì spellchecks and correct failed cd commands;
cd_mkdir ‚Äì creates directories before cd'ing into them;
cd_parent ‚Äì changes cd.. to cd ..;
chmod_x ‚Äì add execution bit;
choco_install ‚Äì append common suffixes for chocolatey packages;
composer_not_command ‚Äì fixes composer command name;
cp_omitting_directory ‚Äì adds -a when you cp directory;
cpp11 ‚Äì adds missing -std=c++11 to g++ or clang++;
dirty_untar ‚Äì fixes tar x command that untarred in the current directory;
dirty_unzip ‚Äì fixes unzip command that unzipped in the current directory;
django_south_ghost ‚Äì adds --delete-ghost-migrations to failed because ghosts django south migration;
django_south_merge ‚Äì adds --merge to inconsistent django south migration;
docker_login ‚Äì executes a docker login and repeats the previous command;
docker_not_command ‚Äì fixes wrong docker commands like docker tags;
docker_image_being_used_by_container ‚Äê removes the container that is using the image before removing the image;
dry ‚Äì fixes repetitions like git git push;
fab_command_not_found ‚Äì fix misspelled fabric commands;
fix_alt_space ‚Äì replaces Alt+Space with Space character;
fix_file ‚Äì opens a file with an error in your $EDITOR;
gem_unknown_command ‚Äì fixes wrong gem commands;
git_add ‚Äì fixes ""pathspec 'foo' did not match any file(s) known to git."";
git_add_force ‚Äì adds --force to git add <pathspec>... when paths are .gitignore'd;
git_bisect_usage ‚Äì fixes git bisect strt, git bisect goood, git bisect rset, etc. when bisecting;
git_branch_delete ‚Äì changes git branch -d to git branch -D;
git_branch_delete_checked_out ‚Äì changes git branch -d to git checkout master && git branch -D when trying to delete a checked out branch;
git_branch_exists ‚Äì offers git branch -d foo, git branch -D foo or git checkout foo when creating a branch that already exists;
git_branch_list ‚Äì catches git branch list in place of git branch and removes created branch;
git_checkout ‚Äì fixes branch name or creates new branch;
git_commit_amend ‚Äì offers git commit --amend after previous commit;
git_commit_reset ‚Äì offers git reset HEAD~ after previous commit;
git_diff_no_index ‚Äì adds --no-index to previous git diff on untracked files;
git_diff_staged ‚Äì adds --staged to previous git diff with unexpected output;
git_fix_stash ‚Äì fixes git stash commands (misspelled subcommand and missing save);
git_flag_after_filename ‚Äì fixes fatal: bad flag '...' after filename
git_help_aliased ‚Äì fixes git help <alias> commands replacing  with the aliased command;
git_merge ‚Äì adds remote to branch names;
git_merge_unrelated ‚Äì adds --allow-unrelated-histories when required
git_not_command ‚Äì fixes wrong git commands like git brnch;
git_pull ‚Äì sets upstream before executing previous git pull;
git_pull_clone ‚Äì clones instead of pulling when the repo does not exist;
git_pull_uncommitted_changes ‚Äì stashes changes before pulling and pops them afterwards;
git_push ‚Äì adds --set-upstream origin $branch to previous failed git push;
git_push_different_branch_names ‚Äì fixes pushes when local brach name does not match remote branch name;
git_push_pull ‚Äì runs git pull when push was rejected;
git_push_without_commits ‚Äì Creates an initial commit if you forget and only git add ., when setting up a new project;
git_rebase_no_changes ‚Äì runs git rebase --skip instead of git rebase --continue when there are no changes;
git_remote_delete ‚Äì replaces git remote delete remote_name with git remote remove remote_name;
git_rm_local_modifications ‚Äì  adds -f or --cached when you try to rm a locally modified file;
git_rm_recursive ‚Äì adds -r when you try to rm a directory;
git_rm_staged ‚Äì  adds -f or --cached when you try to rm a file with staged changes
git_rebase_merge_dir ‚Äì offers git rebase (--continue | --abort | --skip) or removing the .git/rebase-merge dir when a rebase is in progress;
git_remote_seturl_add ‚Äì runs git remote add when git remote set_url on nonexistent remote;
git_stash ‚Äì stashes your local modifications before rebasing or switching branch;
git_stash_pop ‚Äì adds your local modifications before popping stash, then resets;
git_tag_force ‚Äì adds --force to git tag <tagname> when the tag already exists;
git_two_dashes ‚Äì adds a missing dash to commands like git commit -amend or git rebase -continue;
go_run ‚Äì appends .go extension when compiling/running Go programs;
go_unknown_command ‚Äì fixes wrong go commands, for example go bulid;
gradle_no_task ‚Äì fixes not found or ambiguous gradle task;
gradle_wrapper ‚Äì replaces gradle with ./gradlew;
grep_arguments_order ‚Äì fixes grep arguments order for situations like grep -lir . test;
grep_recursive ‚Äì adds -r when you try to grep directory;
grunt_task_not_found ‚Äì fixes misspelled grunt commands;
gulp_not_task ‚Äì fixes misspelled gulp tasks;
has_exists_script ‚Äì prepends ./ when script/binary exists;
heroku_multiple_apps ‚Äì add --app <app> to heroku commands like heroku pg;
heroku_not_command ‚Äì fixes wrong heroku commands like heroku log;
history ‚Äì tries to replace command with most similar command from history;
hostscli ‚Äì tries to fix hostscli usage;
ifconfig_device_not_found ‚Äì fixes wrong device names like wlan0 to wlp2s0;
java ‚Äì removes .java extension when running Java programs;
javac ‚Äì appends missing .java when compiling Java files;
lein_not_task ‚Äì fixes wrong lein tasks like lein rpl;
long_form_help ‚Äì changes -h to --help when the short form version is not supported
ln_no_hard_link ‚Äì catches hard link creation on directories, suggest symbolic link;
ln_s_order ‚Äì fixes ln -s arguments order;
ls_all ‚Äì adds -A to ls when output is empty;
ls_lah ‚Äì adds -lah to ls;
man ‚Äì changes manual section;
man_no_space ‚Äì fixes man commands without spaces, for example mandiff;
mercurial ‚Äì fixes wrong hg commands;
missing_space_before_subcommand ‚Äì fixes command with missing space like npminstall;
mkdir_p ‚Äì adds -p when you try to create a directory without parent;
mvn_no_command ‚Äì adds clean package to mvn;
mvn_unknown_lifecycle_phase ‚Äì fixes misspelled life cycle phases with mvn;
npm_missing_script ‚Äì fixes npm custom script name in npm run-script <script>;
npm_run_script ‚Äì adds missing run-script for custom npm scripts;
npm_wrong_command ‚Äì fixes wrong npm commands like npm urgrade;
no_command ‚Äì fixes wrong console commands, for example vom/vim;
no_such_file ‚Äì creates missing directories with mv and cp commands;
open ‚Äì either prepends http:// to address passed to open or create a new file or directory and passes it to open;
pip_install ‚Äì fixes permission issues with pip install commands by adding --user or prepending sudo if necessary;
pip_unknown_command ‚Äì fixes wrong pip commands, for example pip instatl/pip install;
php_s ‚Äì replaces -s by -S when trying to run a local php server;
port_already_in_use ‚Äì kills process that bound port;
prove_recursively ‚Äì adds -r when called with directory;
pyenv_no_such_command ‚Äì fixes wrong pyenv commands like pyenv isntall or pyenv list;
python_command ‚Äì prepends python when you try to run non-executable/without ./ python script;
python_execute ‚Äì appends missing .py when executing Python files;
quotation_marks ‚Äì fixes uneven usage of ' and "" when containing args';
path_from_history ‚Äì replaces not found path with similar absolute path from history;
react_native_command_unrecognized ‚Äì fixes unrecognized react-native commands;
remove_shell_prompt_literal ‚Äì remove leading shell prompt symbol $, common when copying commands from documentations;
remove_trailing_cedilla ‚Äì remove trailing cedillas √ß, a common typo for european keyboard layouts;
rm_dir ‚Äì adds -rf when you try to remove a directory;
scm_correction ‚Äì corrects wrong scm like hg log to git log;
sed_unterminated_s ‚Äì adds missing '/' to sed's s commands;
sl_ls ‚Äì changes sl to ls;
ssh_known_hosts ‚Äì removes host from known_hosts on warning;
sudo ‚Äì prepends sudo to previous command if it failed because of permissions;
sudo_command_from_user_path ‚Äì runs commands from users $PATH with sudo;
switch_lang ‚Äì switches command from your local layout to en;
systemctl ‚Äì correctly orders parameters of confusing systemctl;
terraform_init.py ‚Äì run terraform init before plan or apply;
test.py ‚Äì runs py.test instead of test.py;
touch ‚Äì creates missing directories before ""touching"";
tsuru_login ‚Äì runs tsuru login if not authenticated or session expired;
tsuru_not_command ‚Äì fixes wrong tsuru commands like tsuru shell;
tmux ‚Äì fixes tmux commands;
unknown_command ‚Äì fixes hadoop hdfs-style ""unknown command"", for example adds missing '-' to the command on hdfs dfs ls;
unsudo ‚Äì removes sudo from previous command if a process refuses to run on super user privilege.
vagrant_up ‚Äì starts up the vagrant instance;
whois ‚Äì fixes whois command;
workon_doesnt_exists ‚Äì fixes virtualenvwrapper env name os suggests to create new.
yarn_alias ‚Äì fixes aliased yarn commands like yarn ls;
yarn_command_not_found ‚Äì fixes misspelled yarn commands;
yarn_command_replaced ‚Äì fixes replaced yarn commands;
yarn_help ‚Äì makes it easier to open yarn documentation;

The following rules are enabled by default on specific platforms only:

apt_get ‚Äì installs app from apt if it not installed (requires python-commandnotfound / python3-commandnotfound);
apt_get_search ‚Äì changes trying to search using apt-get with searching using apt-cache;
apt_invalid_operation ‚Äì fixes invalid apt and apt-get calls, like apt-get isntall vim;
apt_list_upgradable ‚Äì helps you run apt list --upgradable after apt update;
apt_upgrade ‚Äì helps you run apt upgrade after apt list --upgradable;
brew_cask_dependency ‚Äì installs cask dependencies;
brew_install ‚Äì fixes formula name for brew install;
brew_reinstall ‚Äì turns brew install <formula> into brew reinstall <formula>;
brew_link ‚Äì adds --overwrite --dry-run if linking fails;
brew_uninstall ‚Äì adds --force to brew uninstall if multiple versions were installed;
brew_unknown_command ‚Äì fixes wrong brew commands, for example brew docto/brew doctor;
brew_update_formula ‚Äì turns brew update <formula> into brew upgrade <formula>;
dnf_no_such_command ‚Äì fixes mistyped DNF commands;
nixos_cmd_not_found ‚Äì installs apps on NixOS;
pacman ‚Äì installs app with pacman if it is not installed (uses yay or yaourt if available);
pacman_not_found ‚Äì fixes package name with pacman, yay or yaourt.
yum_invalid_operation ‚Äì fixes invalid yum calls, like yum isntall vim;

The following commands are bundled with The Fuck, but are not enabled by
default:

git_push_force ‚Äì adds --force-with-lease to a git push (may conflict with git_push_pull);
rm_root ‚Äì adds --no-preserve-root to rm -rf / command.

Creating your own rules
To add your own rule, create a file named your-rule-name.py
in ~/.config/thefuck/rules. The rule file must contain two functions:
match(command: Command) -> bool
get_new_command(command: Command) -> str | list[str]
Additionally, rules can contain optional functions:
side_effect(old_command: Command, fixed_command: str) -> None
Rules can also contain the optional variables enabled_by_default, requires_output and priority.
Command has three attributes: script, output and script_parts.
Your rule should not change Command.
Rules api changed in 3.0: To access a rule's settings, import it with
from thefuck.conf import settings
settings is a special object assembled from ~/.config/thefuck/settings.py,
and values from env (see more below).
A simple example rule for running a script with sudo:
def match(command):
    return ('permission denied' in command.output.lower()
            or 'EACCES' in command.output)


def get_new_command(command):
    return 'sudo {}'.format(command.script)

# Optional:
enabled_by_default = True

def side_effect(command, fixed_command):
    subprocess.call('chmod 777 .', shell=True)

priority = 1000  # Lower first, default is 1000

requires_output = True
More examples of rules,
utility functions for rules,
app/os-specific helpers.
Settings
Several The Fuck parameters can be changed in the file $XDG_CONFIG_HOME/thefuck/settings.py
($XDG_CONFIG_HOME defaults to ~/.config):

rules ‚Äì list of enabled rules, by default thefuck.const.DEFAULT_RULES;
exclude_rules ‚Äì list of disabled rules, by default [];
require_confirmation ‚Äì requires confirmation before running new command, by default True;
wait_command ‚Äì max amount of time in seconds for getting previous command output;
no_colors ‚Äì disable colored output;
priority ‚Äì dict with rules priorities, rule with lower priority will be matched first;
debug ‚Äì enables debug output, by default False;
history_limit ‚Äì numeric value of how many history commands will be scanned, like 2000;
alter_history ‚Äì push fixed command to history, by default True;
wait_slow_command ‚Äì max amount of time in seconds for getting previous command output if it in slow_commands list;
slow_commands ‚Äì list of slow commands;
num_close_matches ‚Äì maximum number of close matches to suggest, by default 3.

An example of settings.py:
rules = ['sudo', 'no_command']
exclude_rules = ['git_push']
require_confirmation = True
wait_command = 10
no_colors = False
priority = {'sudo': 100, 'no_command': 9999}
debug = False
history_limit = 9999
wait_slow_command = 20
slow_commands = ['react-native', 'gradle']
num_close_matches = 5
Or via environment variables:

THEFUCK_RULES ‚Äì list of enabled rules, like DEFAULT_RULES:rm_root or sudo:no_command;
THEFUCK_EXCLUDE_RULES ‚Äì list of disabled rules, like git_pull:git_push;
THEFUCK_REQUIRE_CONFIRMATION ‚Äì require confirmation before running new command, true/false;
THEFUCK_WAIT_COMMAND ‚Äì max amount of time in seconds for getting previous command output;
THEFUCK_NO_COLORS ‚Äì disable colored output, true/false;
THEFUCK_PRIORITY ‚Äì priority of the rules, like no_command=9999:apt_get=100,
rule with lower priority will be matched first;
THEFUCK_DEBUG ‚Äì enables debug output, true/false;
THEFUCK_HISTORY_LIMIT ‚Äì how many history commands will be scanned, like 2000;
THEFUCK_ALTER_HISTORY ‚Äì push fixed command to history true/false;
THEFUCK_WAIT_SLOW_COMMAND ‚Äì max amount of time in seconds for getting previous command output if it in slow_commands list;
THEFUCK_SLOW_COMMANDS ‚Äì list of slow commands, like lein:gradle;
THEFUCK_NUM_CLOSE_MATCHES ‚Äì maximum number of close matches to suggest, like 5.

For example:
export THEFUCK_RULES='sudo:no_command'
export THEFUCK_EXCLUDE_RULES='git_pull:git_push'
export THEFUCK_REQUIRE_CONFIRMATION='true'
export THEFUCK_WAIT_COMMAND=10
export THEFUCK_NO_COLORS='false'
export THEFUCK_PRIORITY='no_command=9999:apt_get=100'
export THEFUCK_HISTORY_LIMIT='2000'
export THEFUCK_NUM_CLOSE_MATCHES='5'
Third-party packages with rules
If you'd like to make a specific set of non-public rules, but would still like
to share them with others, create a package named thefuck_contrib_* with
the following structure:
thefuck_contrib_foo
  thefuck_contrib_foo
    rules
      __init__.py
      *third-party rules*
    __init__.py
    *third-party-utils*
  setup.py

The Fuck will find rules located in the rules module.
Experimental instant mode
The default behavior of The Fuck requires time to re-run previous commands.
When in instant mode, The Fuck saves time by logging output with script,
then reading the log.

Currently, instant mode only supports Python 3 with bash or zsh. zsh's autocorrect function also needs to be disabled in order for thefuck to work properly.
To enable instant mode, add --enable-experimental-instant-mode
to the alias initialization in .bashrc, .bash_profile or .zshrc.
For example:
eval $(thefuck --alias --enable-experimental-instant-mode)
Developing
See CONTRIBUTING.md
License MIT
Project License can be found here.
",fuck fuck magnificent app inspired liamosaur tweet corrects errors previous console commands fuck slow try experimental instant mode examples aptget install vim e could open lock file varlibdpkglock open permission denied e unable lock administration directory varlibdpkg root fuck sudo aptget install vim enterctrlc sudo password nvbn reading package lists done git push fatal current branch master upstream branch push current branch set remote upstream use git push setupstream origin master fuck git push setupstream origin master enterctrlc counting objects done puthon command puthon found mean command python package pythonminimal main command python package python main zsh command found puthon fuck python enterctrlc python default oct git brnch git brnch git command see git help mean branch fuck git branch enterctrlc master lein rpl rpl task see lein help mean repl fuck lein repl enterctrlc nrepl server started port host nrepl reply youre afraid blindly running corrected commands requireconfirmation settings option disabled aptget install vim e could open lock file varlibdpkglock open permission denied e unable lock administration directory varlibdpkg root fuck sudo aptget install vim sudo password nvbn reading package lists done requirements python pip pythondev installation os x install fuck via homebrew via linuxbrew linux brew install thefuck ubuntu mint install fuck following commands sudo apt update sudo apt install pythondev pythonpip pythonsetuptools sudo pip install thefuck freebsd install fuck following commands pkg install thefuck chromeos install fuck using chromebrew following command crew install thefuck systems install fuck using pip pip install thefuck alternatively may use os package manager os x ubuntu arch recommended place command bashprofile bashrc zshrc startup script eval thefuck alias use whatever want alias like mondays eval thefuck alias fuck shell config bash zsh fish powershell tcsh changes available new shell session make changes immediately available run source bashrc shell config file like zshrc run fixed commands without confirmation use yeah option short hard youre especially frustrated fuck yeah fix commands recursively succeeding use r option fuck r updating pip install thefuck upgrade note alias functionality changed v fuck works fuck attempts match previous command rule match found new command created using matched rule executed following rules enabled default adbunknowncommand fixes misspelled commands like adb logcta agliteral adds q ag suggested awscli fixes misspelled commands like aws dynamdb scan azcli fixes misspelled commands like az providers cargo runs cargo build instead cargo cargonocommand fixes wrongs commands like cargo buid catdir replaces cat ls try cat directory cdcorrection spellchecks correct failed cd commands cdmkdir creates directories cding cdparent changes cd cd chmodx add execution bit chocoinstall append common suffixes chocolatey packages composernotcommand fixes composer command name cpomittingdirectory adds cp directory cpp adds missing stdc g clang dirtyuntar fixes tar x command untarred current directory dirtyunzip fixes unzip command unzipped current directory djangosouthghost adds deleteghostmigrations failed ghosts django south migration djangosouthmerge adds merge inconsistent django south migration dockerlogin executes docker login repeats previous command dockernotcommand fixes wrong docker commands like docker tags dockerimagebeingusedbycontainer removes container using image removing image dry fixes repetitions like git git push fabcommandnotfound fix misspelled fabric commands fixaltspace replaces altspace space character fixfile opens file error editor gemunknowncommand fixes wrong gem commands gitadd fixes pathspec foo match files known git gitaddforce adds force git add pathspec paths gitignored gitbisectusage fixes git bisect strt git bisect goood git bisect rset etc bisecting gitbranchdelete changes git branch git branch gitbranchdeletecheckedout changes git branch git checkout master git branch trying delete checked branch gitbranchexists offers git branch foo git branch foo git checkout foo creating branch already exists gitbranchlist catches git branch list place git branch removes created branch gitcheckout fixes branch name creates new branch gitcommitamend offers git commit amend previous commit gitcommitreset offers git reset head previous commit gitdiffnoindex adds noindex previous git diff untracked files gitdiffstaged adds staged previous git diff unexpected output gitfixstash fixes git stash commands misspelled subcommand missing save gitflagafterfilename fixes fatal bad flag filename githelpaliased fixes git help alias commands replacing aliased command gitmerge adds remote branch names gitmergeunrelated adds allowunrelatedhistories required gitnotcommand fixes wrong git commands like git brnch gitpull sets upstream executing previous git pull gitpullclone clones instead pulling repo exist gitpulluncommittedchanges stashes changes pulling pops afterwards gitpush adds setupstream origin branch previous failed git push gitpushdifferentbranchnames fixes pushes local brach name match remote branch name gitpushpull runs git pull push rejected gitpushwithoutcommits creates initial commit forget git add setting new project gitrebasenochanges runs git rebase skip instead git rebase continue changes gitremotedelete replaces git remote delete remotename git remote remove remotename gitrmlocalmodifications adds f cached try rm locally modified file gitrmrecursive adds r try rm directory gitrmstaged adds f cached try rm file staged changes gitrebasemergedir offers git rebase continue abort skip removing gitrebasemerge dir rebase progress gitremoteseturladd runs git remote add git remote seturl nonexistent remote gitstash stashes local modifications rebasing switching branch gitstashpop adds local modifications popping stash resets gittagforce adds force git tag tagname tag already exists gittwodashes adds missing dash commands like git commit amend git rebase continue gorun appends go extension compilingrunning go programs gounknowncommand fixes wrong go commands example go bulid gradlenotask fixes found ambiguous gradle task gradlewrapper replaces gradle gradlew grepargumentsorder fixes grep arguments order situations like grep lir test greprecursive adds r try grep directory grunttasknotfound fixes misspelled grunt commands gulpnottask fixes misspelled gulp tasks hasexistsscript prepends scriptbinary exists herokumultipleapps add app app heroku commands like heroku pg herokunotcommand fixes wrong heroku commands like heroku log history tries replace command similar command history hostscli tries fix hostscli usage ifconfigdevicenotfound fixes wrong device names like wlan wlps java removes java extension running java programs javac appends missing java compiling java files leinnottask fixes wrong lein tasks like lein rpl longformhelp changes h help short form version supported lnnohardlink catches hard link creation directories suggest symbolic link lnsorder fixes ln arguments order lsall adds ls output empty lslah adds lah ls man changes manual section mannospace fixes man commands without spaces example mandiff mercurial fixes wrong hg commands missingspacebeforesubcommand fixes command missing space like npminstall mkdirp adds p try create directory without parent mvnnocommand adds clean package mvn mvnunknownlifecyclephase fixes misspelled life cycle phases mvn npmmissingscript fixes npm custom script name npm runscript script npmrunscript adds missing runscript custom npm scripts npmwrongcommand fixes wrong npm commands like npm urgrade nocommand fixes wrong console commands example vomvim nosuchfile creates missing directories mv cp commands open either prepends http address passed open create new file directory passes open pipinstall fixes permission issues pip install commands adding user prepending sudo necessary pipunknowncommand fixes wrong pip commands example pip instatlpip install phps replaces trying run local php server portalreadyinuse kills process bound port proverecursively adds r called directory pyenvnosuchcommand fixes wrong pyenv commands like pyenv isntall pyenv list pythoncommand prepends python try run nonexecutablewithout python script pythonexecute appends missing py executing python files quotationmarks fixes uneven usage containing args pathfromhistory replaces found path similar absolute path history reactnativecommandunrecognized fixes unrecognized reactnative commands removeshellpromptliteral remove leading shell prompt symbol common copying commands documentations removetrailingcedilla remove trailing cedillas c common typo european keyboard layouts rmdir adds rf try remove directory scmcorrection corrects wrong scm like hg log git log sedunterminateds adds missing seds commands slls changes sl ls sshknownhosts removes host knownhosts warning sudo prepends sudo previous command failed permissions sudocommandfromuserpath runs commands users path sudo switchlang switches command local layout en systemctl correctly orders parameters confusing systemctl terraforminitpy run terraform init plan apply testpy runs pytest instead testpy touch creates missing directories touching tsurulogin runs tsuru login authenticated session expired tsurunotcommand fixes wrong tsuru commands like tsuru shell tmux fixes tmux commands unknowncommand fixes hadoop hdfsstyle unknown command example adds missing command hdfs dfs ls unsudo removes sudo previous command process refuses run super user privilege vagrantup starts vagrant instance whois fixes whois command workondoesntexists fixes virtualenvwrapper env name os suggests create new yarnalias fixes aliased yarn commands like yarn ls yarncommandnotfound fixes misspelled yarn commands yarncommandreplaced fixes replaced yarn commands yarnhelp makes easier open yarn documentation following rules enabled default specific platforms aptget installs app apt installed requires pythoncommandnotfound pythoncommandnotfound aptgetsearch changes trying search using aptget searching using aptcache aptinvalidoperation fixes invalid apt aptget calls like aptget isntall vim aptlistupgradable helps run apt list upgradable apt update aptupgrade helps run apt upgrade apt list upgradable brewcaskdependency installs cask dependencies brewinstall fixes formula name brew install brewreinstall turns brew install formula brew reinstall formula brewlink adds overwrite dryrun linking fails brewuninstall adds force brew uninstall multiple versions installed brewunknowncommand fixes wrong brew commands example brew doctobrew doctor brewupdateformula turns brew update formula brew upgrade formula dnfnosuchcommand fixes mistyped dnf commands nixoscmdnotfound installs apps nixos pacman installs app pacman installed uses yay yaourt available pacmannotfound fixes package name pacman yay yaourt yuminvalidoperation fixes invalid yum calls like yum isntall vim following commands bundled fuck enabled default gitpushforce adds forcewithlease git push may conflict gitpushpull rmroot adds nopreserveroot rm rf command creating rules add rule create file named yourrulenamepy configthefuckrules rule file must contain two functions matchcommand command bool getnewcommandcommand command str liststr additionally rules contain optional functions sideeffectoldcommand command fixedcommand str none rules also contain optional variables enabledbydefault requiresoutput priority command three attributes script output scriptparts rule change command rules api changed access rules settings import thefuckconf import settings settings special object assembled configthefucksettingspy values env see simple example rule running script sudo def matchcommand return permission denied commandoutputlower eacces commandoutput def getnewcommandcommand return sudo formatcommandscript optional enabledbydefault true def sideeffectcommand fixedcommand subprocesscallchmod shelltrue priority lower first default requiresoutput true examples rules utility functions rules apposspecific helpers settings several fuck parameters changed file xdgconfighomethefucksettingspy xdgconfighome defaults config rules list enabled rules default thefuckconstdefaultrules excluderules list disabled rules default requireconfirmation requires confirmation running new command default true waitcommand max amount time seconds getting previous command output nocolors disable colored output priority dict rules priorities rule lower priority matched first debug enables debug output default false historylimit numeric value many history commands scanned like alterhistory push fixed command history default true waitslowcommand max amount time seconds getting previous command output slowcommands list slowcommands list slow commands numclosematches maximum number close matches suggest default example settingspy rules sudo nocommand excluderules gitpush requireconfirmation true waitcommand nocolors false priority sudo nocommand debug false historylimit waitslowcommand slowcommands reactnative gradle numclosematches via environment variables thefuckrules list enabled rules like defaultrulesrmroot sudonocommand thefuckexcluderules list disabled rules like gitpullgitpush thefuckrequireconfirmation require confirmation running new command truefalse thefuckwaitcommand max amount time seconds getting previous command output thefucknocolors disable colored output truefalse thefuckpriority priority rules like nocommandaptget rule lower priority matched first thefuckdebug enables debug output truefalse thefuckhistorylimit many history commands scanned like thefuckalterhistory push fixed command history truefalse thefuckwaitslowcommand max amount time seconds getting previous command output slowcommands list thefuckslowcommands list slow commands like leingradle thefucknumclosematches maximum number close matches suggest like example export thefuckrulessudonocommand export thefuckexcluderulesgitpullgitpush export thefuckrequireconfirmationtrue export thefuckwaitcommand export thefucknocolorsfalse export thefuckprioritynocommandaptget export thefuckhistorylimit export thefucknumclosematches thirdparty packages rules youd like make specific set nonpublic rules would still like share others create package named thefuckcontrib following structure thefuckcontribfoo thefuckcontribfoo rules initpy thirdparty rules initpy thirdpartyutils setuppy fuck find rules located rules module experimental instant mode default behavior fuck requires time rerun previous commands instant mode fuck saves time logging output script reading log currently instant mode supports python bash zsh zshs autocorrect function also needs disabled order thefuck work properly enable instant mode add enableexperimentalinstantmode alias initialization bashrc bashprofile zshrc example eval thefuck alias enableexperimentalinstantmode developing see contributingmd license mit project license found,fuck fuck magnific app inspir liamosaur tweet correct error previou consol command fuck slow tri experiment instant mode exampl aptget instal vim e could open lock file varlibdpkglock open permiss deni e unabl lock administr directori varlibdpkg root fuck sudo aptget instal vim enterctrlc sudo password nvbn read packag list done git push fatal current branch master upstream branch push current branch set remot upstream use git push setupstream origin master fuck git push setupstream origin master enterctrlc count object done puthon command puthon found mean command python packag pythonminim main command python packag python main zsh command found puthon fuck python enterctrlc python default oct git brnch git brnch git command see git help mean branch fuck git branch enterctrlc master lein rpl rpl task see lein help mean repl fuck lein repl enterctrlc nrepl server start port host nrepl repli your afraid blindli run correct command requireconfirm set option disabl aptget instal vim e could open lock file varlibdpkglock open permiss deni e unabl lock administr directori varlibdpkg root fuck sudo aptget instal vim sudo password nvbn read packag list done requir python pip pythondev instal os x instal fuck via homebrew via linuxbrew linux brew instal thefuck ubuntu mint instal fuck follow command sudo apt updat sudo apt instal pythondev pythonpip pythonsetuptool sudo pip instal thefuck freebsd instal fuck follow command pkg instal thefuck chromeo instal fuck use chromebrew follow command crew instal thefuck system instal fuck use pip pip instal thefuck altern may use os packag manag os x ubuntu arch recommend place command bashprofil bashrc zshrc startup script eval thefuck alia use whatev want alia like monday eval thefuck alia fuck shell config bash zsh fish powershel tcsh chang avail new shell session make chang immedi avail run sourc bashrc shell config file like zshrc run fix command without confirm use yeah option short hard your especi frustrat fuck yeah fix command recurs succeed use r option fuck r updat pip instal thefuck upgrad note alia function chang v fuck work fuck attempt match previou command rule match found new command creat use match rule execut follow rule enabl default adbunknowncommand fix misspel command like adb logcta agliter add q ag suggest awscli fix misspel command like aw dynamdb scan azcli fix misspel command like az provid cargo run cargo build instead cargo cargonocommand fix wrong command like cargo buid catdir replac cat ls tri cat directori cdcorrect spellcheck correct fail cd command cdmkdir creat directori cding cdparent chang cd cd chmodx add execut bit chocoinstal append common suffix chocolatey packag composernotcommand fix compos command name cpomittingdirectori add cp directori cpp add miss stdc g clang dirtyuntar fix tar x command untar current directori dirtyunzip fix unzip command unzip current directori djangosouthghost add deleteghostmigr fail ghost django south migrat djangosouthmerg add merg inconsist django south migrat dockerlogin execut docker login repeat previou command dockernotcommand fix wrong docker command like docker tag dockerimagebeingusedbycontain remov contain use imag remov imag dri fix repetit like git git push fabcommandnotfound fix misspel fabric command fixaltspac replac altspac space charact fixfil open file error editor gemunknowncommand fix wrong gem command gitadd fix pathspec foo match file known git gitaddforc add forc git add pathspec path gitignor gitbisectusag fix git bisect strt git bisect goood git bisect rset etc bisect gitbranchdelet chang git branch git branch gitbranchdeletecheckedout chang git branch git checkout master git branch tri delet check branch gitbranchexist offer git branch foo git branch foo git checkout foo creat branch alreadi exist gitbranchlist catch git branch list place git branch remov creat branch gitcheckout fix branch name creat new branch gitcommitamend offer git commit amend previou commit gitcommitreset offer git reset head previou commit gitdiffnoindex add noindex previou git diff untrack file gitdiffstag add stage previou git diff unexpect output gitfixstash fix git stash command misspel subcommand miss save gitflagafterfilenam fix fatal bad flag filenam githelpalias fix git help alia command replac alias command gitmerg add remot branch name gitmergeunrel add allowunrelatedhistori requir gitnotcommand fix wrong git command like git brnch gitpul set upstream execut previou git pull gitpullclon clone instead pull repo exist gitpulluncommittedchang stash chang pull pop afterward gitpush add setupstream origin branch previou fail git push gitpushdifferentbranchnam fix push local brach name match remot branch name gitpushpul run git pull push reject gitpushwithoutcommit creat initi commit forget git add set new project gitrebasenochang run git rebas skip instead git rebas continu chang gitremotedelet replac git remot delet remotenam git remot remov remotenam gitrmlocalmodif add f cach tri rm local modifi file gitrmrecurs add r tri rm directori gitrmstag add f cach tri rm file stage chang gitrebasemergedir offer git rebas continu abort skip remov gitrebasemerg dir rebas progress gitremoteseturladd run git remot add git remot seturl nonexist remot gitstash stash local modif rebas switch branch gitstashpop add local modif pop stash reset gittagforc add forc git tag tagnam tag alreadi exist gittwodash add miss dash command like git commit amend git rebas continu gorun append go extens compilingrun go program gounknowncommand fix wrong go command exampl go bulid gradlenotask fix found ambigu gradl task gradlewrapp replac gradl gradlew grepargumentsord fix grep argument order situat like grep lir test greprecurs add r tri grep directori grunttasknotfound fix misspel grunt command gulpnottask fix misspel gulp task hasexistsscript prepend scriptbinari exist herokumultipleapp add app app heroku command like heroku pg herokunotcommand fix wrong heroku command like heroku log histori tri replac command similar command histori hostscli tri fix hostscli usag ifconfigdevicenotfound fix wrong devic name like wlan wlp java remov java extens run java program javac append miss java compil java file leinnottask fix wrong lein task like lein rpl longformhelp chang h help short form version support lnnohardlink catch hard link creation directori suggest symbol link lnsorder fix ln argument order lsall add ls output empti lslah add lah ls man chang manual section mannospac fix man command without space exampl mandiff mercuri fix wrong hg command missingspacebeforesubcommand fix command miss space like npminstal mkdirp add p tri creat directori without parent mvnnocommand add clean packag mvn mvnunknownlifecyclephas fix misspel life cycl phase mvn npmmissingscript fix npm custom script name npm runscript script npmrunscript add miss runscript custom npm script npmwrongcommand fix wrong npm command like npm urgrad nocommand fix wrong consol command exampl vomvim nosuchfil creat miss directori mv cp command open either prepend http address pass open creat new file directori pass open pipinstal fix permiss issu pip instal command ad user prepend sudo necessari pipunknowncommand fix wrong pip command exampl pip instatlpip instal php replac tri run local php server portalreadyinus kill process bound port proverecurs add r call directori pyenvnosuchcommand fix wrong pyenv command like pyenv isntal pyenv list pythoncommand prepend python tri run nonexecutablewithout python script pythonexecut append miss py execut python file quotationmark fix uneven usag contain arg pathfromhistori replac found path similar absolut path histori reactnativecommandunrecogn fix unrecogn reactn command removeshellpromptliter remov lead shell prompt symbol common copi command document removetrailingcedilla remov trail cedilla c common typo european keyboard layout rmdir add rf tri remov directori scmcorrect correct wrong scm like hg log git log seduntermin add miss sed command sll chang sl ls sshknownhost remov host knownhost warn sudo prepend sudo previou command fail permiss sudocommandfromuserpath run command user path sudo switchlang switch command local layout en systemctl correctli order paramet confus systemctl terraforminitpi run terraform init plan appli testpi run pytest instead testpi touch creat miss directori touch tsurulogin run tsuru login authent session expir tsurunotcommand fix wrong tsuru command like tsuru shell tmux fix tmux command unknowncommand fix hadoop hdfsstyle unknown command exampl add miss command hdf df ls unsudo remov sudo previou command process refus run super user privileg vagrantup start vagrant instanc whoi fix whoi command workondoesntexist fix virtualenvwrapp env name os suggest creat new yarnalia fix alias yarn command like yarn ls yarncommandnotfound fix misspel yarn command yarncommandreplac fix replac yarn command yarnhelp make easier open yarn document follow rule enabl default specif platform aptget instal app apt instal requir pythoncommandnotfound pythoncommandnotfound aptgetsearch chang tri search use aptget search use aptcach aptinvalidoper fix invalid apt aptget call like aptget isntal vim aptlistupgrad help run apt list upgrad apt updat aptupgrad help run apt upgrad apt list upgrad brewcaskdepend instal cask depend brewinstal fix formula name brew instal brewreinstal turn brew instal formula brew reinstal formula brewlink add overwrit dryrun link fail brewuninstal add forc brew uninstal multipl version instal brewunknowncommand fix wrong brew command exampl brew doctobrew doctor brewupdateformula turn brew updat formula brew upgrad formula dnfnosuchcommand fix mistyp dnf command nixoscmdnotfound instal app nixo pacman instal app pacman instal use yay yaourt avail pacmannotfound fix packag name pacman yay yaourt yuminvalidoper fix invalid yum call like yum isntal vim follow command bundl fuck enabl default gitpushforc add forcewithleas git push may conflict gitpushpul rmroot add nopreserveroot rm rf command creat rule add rule creat file name yourrulenamepi configthefuckrul rule file must contain two function matchcommand command bool getnewcommandcommand command str liststr addit rule contain option function sideeffectoldcommand command fixedcommand str none rule also contain option variabl enabledbydefault requiresoutput prioriti command three attribut script output scriptpart rule chang command rule api chang access rule set import thefuckconf import set set special object assembl configthefucksettingspi valu env see simpl exampl rule run script sudo def matchcommand return permiss deni commandoutputlow eacc commandoutput def getnewcommandcommand return sudo formatcommandscript option enabledbydefault true def sideeffectcommand fixedcommand subprocesscallchmod shelltru prioriti lower first default requiresoutput true exampl rule util function rule apposspecif helper set sever fuck paramet chang file xdgconfighomethefucksettingspi xdgconfighom default config rule list enabl rule default thefuckconstdefaultrul excluderul list disabl rule default requireconfirm requir confirm run new command default true waitcommand max amount time second get previou command output nocolor disabl color output prioriti dict rule prioriti rule lower prioriti match first debug enabl debug output default fals historylimit numer valu mani histori command scan like alterhistori push fix command histori default true waitslowcommand max amount time second get previou command output slowcommand list slowcommand list slow command numclosematch maximum number close match suggest default exampl settingspi rule sudo nocommand excluderul gitpush requireconfirm true waitcommand nocolor fals prioriti sudo nocommand debug fals historylimit waitslowcommand slowcommand reactn gradl numclosematch via environ variabl thefuckrul list enabl rule like defaultrulesrmroot sudonocommand thefuckexcluderul list disabl rule like gitpullgitpush thefuckrequireconfirm requir confirm run new command truefals thefuckwaitcommand max amount time second get previou command output thefucknocolor disabl color output truefals thefuckprior prioriti rule like nocommandaptget rule lower prioriti match first thefuckdebug enabl debug output truefals thefuckhistorylimit mani histori command scan like thefuckalterhistori push fix command histori truefals thefuckwaitslowcommand max amount time second get previou command output slowcommand list thefuckslowcommand list slow command like leingradl thefucknumclosematch maximum number close match suggest like exampl export thefuckrulessudonocommand export thefuckexcluderulesgitpullgitpush export thefuckrequireconfirmationtru export thefuckwaitcommand export thefucknocolorsfals export thefuckprioritynocommandaptget export thefuckhistorylimit export thefucknumclosematch thirdparti packag rule youd like make specif set nonpubl rule would still like share other creat packag name thefuckcontrib follow structur thefuckcontribfoo thefuckcontribfoo rule initpi thirdparti rule initpi thirdpartyutil setuppi fuck find rule locat rule modul experiment instant mode default behavior fuck requir time rerun previou command instant mode fuck save time log output script read log current instant mode support python bash zsh zsh autocorrect function also need disabl order thefuck work properli enabl instant mode add enableexperimentalinstantmod alia initi bashrc bashprofil zshrc exampl eval thefuck alia enableexperimentalinstantmod develop see contributingmd licens mit project licens found,fuck fuck magnificent app inspired liamosaur tweet corrects error previous console command fuck slow try experimental instant mode example aptget install vim e could open lock file varlibdpkglock open permission denied e unable lock administration directory varlibdpkg root fuck sudo aptget install vim enterctrlc sudo password nvbn reading package list done git push fatal current branch master upstream branch push current branch set remote upstream use git push setupstream origin master fuck git push setupstream origin master enterctrlc counting object done puthon command puthon found mean command python package pythonminimal main command python package python main zsh command found puthon fuck python enterctrlc python default oct git brnch git brnch git command see git help mean branch fuck git branch enterctrlc master lein rpl rpl task see lein help mean repl fuck lein repl enterctrlc nrepl server started port host nrepl reply youre afraid blindly running corrected command requireconfirmation setting option disabled aptget install vim e could open lock file varlibdpkglock open permission denied e unable lock administration directory varlibdpkg root fuck sudo aptget install vim sudo password nvbn reading package list done requirement python pip pythondev installation o x install fuck via homebrew via linuxbrew linux brew install thefuck ubuntu mint install fuck following command sudo apt update sudo apt install pythondev pythonpip pythonsetuptools sudo pip install thefuck freebsd install fuck following command pkg install thefuck chromeos install fuck using chromebrew following command crew install thefuck system install fuck using pip pip install thefuck alternatively may use o package manager o x ubuntu arch recommended place command bashprofile bashrc zshrc startup script eval thefuck alias use whatever want alias like monday eval thefuck alias fuck shell config bash zsh fish powershell tcsh change available new shell session make change immediately available run source bashrc shell config file like zshrc run fixed command without confirmation use yeah option short hard youre especially frustrated fuck yeah fix command recursively succeeding use r option fuck r updating pip install thefuck upgrade note alias functionality changed v fuck work fuck attempt match previous command rule match found new command created using matched rule executed following rule enabled default adbunknowncommand fix misspelled command like adb logcta agliteral add q ag suggested awscli fix misspelled command like aws dynamdb scan azcli fix misspelled command like az provider cargo run cargo build instead cargo cargonocommand fix wrong command like cargo buid catdir replaces cat l try cat directory cdcorrection spellchecks correct failed cd command cdmkdir creates directory cding cdparent change cd cd chmodx add execution bit chocoinstall append common suffix chocolatey package composernotcommand fix composer command name cpomittingdirectory add cp directory cpp add missing stdc g clang dirtyuntar fix tar x command untarred current directory dirtyunzip fix unzip command unzipped current directory djangosouthghost add deleteghostmigrations failed ghost django south migration djangosouthmerge add merge inconsistent django south migration dockerlogin executes docker login repeat previous command dockernotcommand fix wrong docker command like docker tag dockerimagebeingusedbycontainer remove container using image removing image dry fix repetition like git git push fabcommandnotfound fix misspelled fabric command fixaltspace replaces altspace space character fixfile open file error editor gemunknowncommand fix wrong gem command gitadd fix pathspec foo match file known git gitaddforce add force git add pathspec path gitignored gitbisectusage fix git bisect strt git bisect goood git bisect rset etc bisecting gitbranchdelete change git branch git branch gitbranchdeletecheckedout change git branch git checkout master git branch trying delete checked branch gitbranchexists offer git branch foo git branch foo git checkout foo creating branch already exists gitbranchlist catch git branch list place git branch remove created branch gitcheckout fix branch name creates new branch gitcommitamend offer git commit amend previous commit gitcommitreset offer git reset head previous commit gitdiffnoindex add noindex previous git diff untracked file gitdiffstaged add staged previous git diff unexpected output gitfixstash fix git stash command misspelled subcommand missing save gitflagafterfilename fix fatal bad flag filename githelpaliased fix git help alias command replacing aliased command gitmerge add remote branch name gitmergeunrelated add allowunrelatedhistories required gitnotcommand fix wrong git command like git brnch gitpull set upstream executing previous git pull gitpullclone clone instead pulling repo exist gitpulluncommittedchanges stash change pulling pop afterwards gitpush add setupstream origin branch previous failed git push gitpushdifferentbranchnames fix push local brach name match remote branch name gitpushpull run git pull push rejected gitpushwithoutcommits creates initial commit forget git add setting new project gitrebasenochanges run git rebase skip instead git rebase continue change gitremotedelete replaces git remote delete remotename git remote remove remotename gitrmlocalmodifications add f cached try rm locally modified file gitrmrecursive add r try rm directory gitrmstaged add f cached try rm file staged change gitrebasemergedir offer git rebase continue abort skip removing gitrebasemerge dir rebase progress gitremoteseturladd run git remote add git remote seturl nonexistent remote gitstash stash local modification rebasing switching branch gitstashpop add local modification popping stash reset gittagforce add force git tag tagname tag already exists gittwodashes add missing dash command like git commit amend git rebase continue gorun appends go extension compilingrunning go program gounknowncommand fix wrong go command example go bulid gradlenotask fix found ambiguous gradle task gradlewrapper replaces gradle gradlew grepargumentsorder fix grep argument order situation like grep lir test greprecursive add r try grep directory grunttasknotfound fix misspelled grunt command gulpnottask fix misspelled gulp task hasexistsscript prepends scriptbinary exists herokumultipleapps add app app heroku command like heroku pg herokunotcommand fix wrong heroku command like heroku log history try replace command similar command history hostscli try fix hostscli usage ifconfigdevicenotfound fix wrong device name like wlan wlps java remove java extension running java program javac appends missing java compiling java file leinnottask fix wrong lein task like lein rpl longformhelp change h help short form version supported lnnohardlink catch hard link creation directory suggest symbolic link lnsorder fix ln argument order lsall add l output empty lslah add lah l man change manual section mannospace fix man command without space example mandiff mercurial fix wrong hg command missingspacebeforesubcommand fix command missing space like npminstall mkdirp add p try create directory without parent mvnnocommand add clean package mvn mvnunknownlifecyclephase fix misspelled life cycle phase mvn npmmissingscript fix npm custom script name npm runscript script npmrunscript add missing runscript custom npm script npmwrongcommand fix wrong npm command like npm urgrade nocommand fix wrong console command example vomvim nosuchfile creates missing directory mv cp command open either prepends http address passed open create new file directory pass open pipinstall fix permission issue pip install command adding user prepending sudo necessary pipunknowncommand fix wrong pip command example pip instatlpip install phps replaces trying run local php server portalreadyinuse kill process bound port proverecursively add r called directory pyenvnosuchcommand fix wrong pyenv command like pyenv isntall pyenv list pythoncommand prepends python try run nonexecutablewithout python script pythonexecute appends missing py executing python file quotationmarks fix uneven usage containing args pathfromhistory replaces found path similar absolute path history reactnativecommandunrecognized fix unrecognized reactnative command removeshellpromptliteral remove leading shell prompt symbol common copying command documentation removetrailingcedilla remove trailing cedilla c common typo european keyboard layout rmdir add rf try remove directory scmcorrection corrects wrong scm like hg log git log sedunterminateds add missing seds command slls change sl l sshknownhosts remove host knownhosts warning sudo prepends sudo previous command failed permission sudocommandfromuserpath run command user path sudo switchlang switch command local layout en systemctl correctly order parameter confusing systemctl terraforminitpy run terraform init plan apply testpy run pytest instead testpy touch creates missing directory touching tsurulogin run tsuru login authenticated session expired tsurunotcommand fix wrong tsuru command like tsuru shell tmux fix tmux command unknowncommand fix hadoop hdfsstyle unknown command example add missing command hdfs dfs l unsudo remove sudo previous command process refuse run super user privilege vagrantup start vagrant instance whois fix whois command workondoesntexists fix virtualenvwrapper env name o suggests create new yarnalias fix aliased yarn command like yarn l yarncommandnotfound fix misspelled yarn command yarncommandreplaced fix replaced yarn command yarnhelp make easier open yarn documentation following rule enabled default specific platform aptget installs app apt installed requires pythoncommandnotfound pythoncommandnotfound aptgetsearch change trying search using aptget searching using aptcache aptinvalidoperation fix invalid apt aptget call like aptget isntall vim aptlistupgradable help run apt list upgradable apt update aptupgrade help run apt upgrade apt list upgradable brewcaskdependency installs cask dependency brewinstall fix formula name brew install brewreinstall turn brew install formula brew reinstall formula brewlink add overwrite dryrun linking fails brewuninstall add force brew uninstall multiple version installed brewunknowncommand fix wrong brew command example brew doctobrew doctor brewupdateformula turn brew update formula brew upgrade formula dnfnosuchcommand fix mistyped dnf command nixoscmdnotfound installs apps nixos pacman installs app pacman installed us yay yaourt available pacmannotfound fix package name pacman yay yaourt yuminvalidoperation fix invalid yum call like yum isntall vim following command bundled fuck enabled default gitpushforce add forcewithlease git push may conflict gitpushpull rmroot add nopreserveroot rm rf command creating rule add rule create file named yourrulenamepy configthefuckrules rule file must contain two function matchcommand command bool getnewcommandcommand command str liststr additionally rule contain optional function sideeffectoldcommand command fixedcommand str none rule also contain optional variable enabledbydefault requiresoutput priority command three attribute script output scriptparts rule change command rule api changed access rule setting import thefuckconf import setting setting special object assembled configthefucksettingspy value env see simple example rule running script sudo def matchcommand return permission denied commandoutputlower eacces commandoutput def getnewcommandcommand return sudo formatcommandscript optional enabledbydefault true def sideeffectcommand fixedcommand subprocesscallchmod shelltrue priority lower first default requiresoutput true example rule utility function rule apposspecific helper setting several fuck parameter changed file xdgconfighomethefucksettingspy xdgconfighome default config rule list enabled rule default thefuckconstdefaultrules excluderules list disabled rule default requireconfirmation requires confirmation running new command default true waitcommand max amount time second getting previous command output nocolors disable colored output priority dict rule priority rule lower priority matched first debug enables debug output default false historylimit numeric value many history command scanned like alterhistory push fixed command history default true waitslowcommand max amount time second getting previous command output slowcommands list slowcommands list slow command numclosematches maximum number close match suggest default example settingspy rule sudo nocommand excluderules gitpush requireconfirmation true waitcommand nocolors false priority sudo nocommand debug false historylimit waitslowcommand slowcommands reactnative gradle numclosematches via environment variable thefuckrules list enabled rule like defaultrulesrmroot sudonocommand thefuckexcluderules list disabled rule like gitpullgitpush thefuckrequireconfirmation require confirmation running new command truefalse thefuckwaitcommand max amount time second getting previous command output thefucknocolors disable colored output truefalse thefuckpriority priority rule like nocommandaptget rule lower priority matched first thefuckdebug enables debug output truefalse thefuckhistorylimit many history command scanned like thefuckalterhistory push fixed command history truefalse thefuckwaitslowcommand max amount time second getting previous command output slowcommands list thefuckslowcommands list slow command like leingradle thefucknumclosematches maximum number close match suggest like example export thefuckrulessudonocommand export thefuckexcluderulesgitpullgitpush export thefuckrequireconfirmationtrue export thefuckwaitcommand export thefucknocolorsfalse export thefuckprioritynocommandaptget export thefuckhistorylimit export thefucknumclosematches thirdparty package rule youd like make specific set nonpublic rule would still like share others create package named thefuckcontrib following structure thefuckcontribfoo thefuckcontribfoo rule initpy thirdparty rule initpy thirdpartyutils setuppy fuck find rule located rule module experimental instant mode default behavior fuck requires time rerun previous command instant mode fuck save time logging output script reading log currently instant mode support python bash zsh zshs autocorrect function also need disabled order thefuck work properly enable instant mode add enableexperimentalinstantmode alias initialization bashrc bashprofile zshrc example eval thefuck alias enableexperimentalinstantmode developing see contributingmd license mit project license found
7,Python,GitHub - pallets/flask: The Python micro framework for building web applications.,"Flask
Flask is a lightweight WSGI web application framework. It is designed
to make getting started quick and easy, with the ability to scale up to
complex applications. It began as a simple wrapper around Werkzeug
and Jinja and has become one of the most popular Python web
application frameworks.
Flask offers suggestions, but doesn't enforce any dependencies or
project layout. It is up to the developer to choose the tools and
libraries they want to use. There are many extensions provided by the
community that make adding new functionality easy.

Installing
Install and update using pip:
pip install -U Flask


A Simple Example
from flask import Flask

app = Flask(__name__)

@app.route(""/"")
def hello():
    return ""Hello, World!""
$ env FLASK_APP=hello.py flask run
 * Serving Flask app ""hello""
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)


Contributing
For guidance on setting up a development environment and how to make a
contribution to Flask, see the contributing guidelines.

Donate
The Pallets organization develops and supports Flask and the libraries
it uses. In order to grow the community of contributors and users, and
allow the maintainers to devote more time to the projects, please
donate today.

Links

Website: https://palletsprojects.com/p/flask/
Documentation: https://flask.palletsprojects.com/
Releases: https://pypi.org/project/Flask/
Code: https://github.com/pallets/flask
Issue tracker: https://github.com/pallets/flask/issues
Test status: https://dev.azure.com/pallets/flask/_build
Official chat: https://discord.gg/t6rrQZH

",flask flask lightweight wsgi web application framework designed make getting started quick easy ability scale complex applications began simple wrapper around werkzeug jinja become one popular python web application frameworks flask offers suggestions doesnt enforce dependencies project layout developer choose tools libraries want use many extensions provided community make adding new functionality easy installing install update using pip pip install u flask simple example flask import flask app flaskname approute def hello return hello world env flaskapphellopy flask run serving flask app hello running http press ctrlc quit contributing guidance setting development environment make contribution flask see contributing guidelines donate pallets organization develops supports flask libraries uses order grow community contributors users allow maintainers devote time projects please donate today links website httpspalletsprojectscompflask documentation httpsflaskpalletsprojectscom releases httpspypiorgprojectflask code httpsgithubcompalletsflask issue tracker httpsgithubcompalletsflaskissues test status httpsdevazurecompalletsflaskbuild official chat httpsdiscordggtrrqzh,flask flask lightweight wsgi web applic framework design make get start quick easi abil scale complex applic began simpl wrapper around werkzeug jinja becom one popular python web applic framework flask offer suggest doesnt enforc depend project layout develop choos tool librari want use mani extens provid commun make ad new function easi instal instal updat use pip pip instal u flask simpl exampl flask import flask app flasknam approut def hello return hello world env flaskapphellopi flask run serv flask app hello run http press ctrlc quit contribut guidanc set develop environ make contribut flask see contribut guidelin donat pallet organ develop support flask librari use order grow commun contributor user allow maintain devot time project pleas donat today link websit httpspalletsprojectscompflask document httpsflaskpalletsprojectscom releas httpspypiorgprojectflask code httpsgithubcompalletsflask issu tracker httpsgithubcompalletsflaskissu test statu httpsdevazurecompalletsflaskbuild offici chat httpsdiscordggtrrqzh,flask flask lightweight wsgi web application framework designed make getting started quick easy ability scale complex application began simple wrapper around werkzeug jinja become one popular python web application framework flask offer suggestion doesnt enforce dependency project layout developer choose tool library want use many extension provided community make adding new functionality easy installing install update using pip pip install u flask simple example flask import flask app flaskname approute def hello return hello world env flaskapphellopy flask run serving flask app hello running http press ctrlc quit contributing guidance setting development environment make contribution flask see contributing guideline donate pallet organization develops support flask library us order grow community contributor user allow maintainer devote time project please donate today link website httpspalletsprojectscompflask documentation httpsflaskpalletsprojectscom release httpspypiorgprojectflask code httpsgithubcompalletsflask issue tracker httpsgithubcompalletsflaskissues test status httpsdevazurecompalletsflaskbuild official chat httpsdiscordggtrrqzh
8,Python,GitHub - keras-team/keras: Deep Learning for humans,"Keras: Deep Learning for humans



You have just found Keras.
Keras is a high-level neural networks API, written in Python and capable of running on top of TensorFlow, CNTK, or Theano. It was developed with a focus on enabling fast experimentation. Being able to go from idea to result with the least possible delay is key to doing good research.
Use Keras if you need a deep learning library that:

Allows for easy and fast prototyping (through user friendliness, modularity, and extensibility).
Supports both convolutional networks and recurrent networks, as well as combinations of the two.
Runs seamlessly on CPU and GPU.

Read the documentation at Keras.io.
Keras is compatible with: Python 2.7-3.6.

Multi-backend Keras and tf.keras:
At this time, we recommend that Keras users who use multi-backend Keras with the TensorFlow backend switch to tf.keras in TensorFlow 2.0. tf.keras is better maintained and has better integration with TensorFlow features (eager execution, distribution support and other).
Keras 2.2.5 was the last release of Keras implementing the 2.2.* API. It was the last release to only support TensorFlow 1 (as well as Theano and CNTK).
The current release is Keras 2.3.0, which makes significant API changes and add support for TensorFlow 2.0. The 2.3.0 release will be the last major release of multi-backend Keras. Multi-backend Keras is superseded by tf.keras.
Bugs present in multi-backend Keras will only be fixed until April 2020 (as part of minor releases).
For more information about the future of Keras, see the Keras meeting notes.

Guiding principles


User friendliness. Keras is an API designed for human beings, not machines. It puts user experience front and center. Keras follows best practices for reducing cognitive load: it offers consistent & simple APIs, it minimizes the number of user actions required for common use cases, and it provides clear and actionable feedback upon user error.


Modularity. A model is understood as a sequence or a graph of standalone, fully configurable modules that can be plugged together with as few restrictions as possible. In particular, neural layers, cost functions, optimizers, initialization schemes, activation functions and regularization schemes are all standalone modules that you can combine to create new models.


Easy extensibility. New modules are simple to add (as new classes and functions), and existing modules provide ample examples. To be able to easily create new modules allows for total expressiveness, making Keras suitable for advanced research.


Work with Python. No separate models configuration files in a declarative format. Models are described in Python code, which is compact, easier to debug, and allows for ease of extensibility.



Getting started: 30 seconds to Keras
The core data structure of Keras is a model, a way to organize layers. The simplest type of model is the Sequential model, a linear stack of layers. For more complex architectures, you should use the Keras functional API, which allows to build arbitrary graphs of layers.
Here is the Sequential model:
from keras.models import Sequential

model = Sequential()
Stacking layers is as easy as .add():
from keras.layers import Dense

model.add(Dense(units=64, activation='relu', input_dim=100))
model.add(Dense(units=10, activation='softmax'))
Once your model looks good, configure its learning process with .compile():
model.compile(loss='categorical_crossentropy',
              optimizer='sgd',
              metrics=['accuracy'])
If you need to, you can further configure your optimizer. A core principle of Keras is to make things reasonably simple, while allowing the user to be fully in control when they need to (the ultimate control being the easy extensibility of the source code).
model.compile(loss=keras.losses.categorical_crossentropy,
              optimizer=keras.optimizers.SGD(lr=0.01, momentum=0.9, nesterov=True))
You can now iterate on your training data in batches:
# x_train and y_train are Numpy arrays --just like in the Scikit-Learn API.
model.fit(x_train, y_train, epochs=5, batch_size=32)
Alternatively, you can feed batches to your model manually:
model.train_on_batch(x_batch, y_batch)
Evaluate your performance in one line:
loss_and_metrics = model.evaluate(x_test, y_test, batch_size=128)
Or generate predictions on new data:
classes = model.predict(x_test, batch_size=128)
Building a question answering system, an image classification model, a Neural Turing Machine, or any other model is just as fast. The ideas behind deep learning are simple, so why should their implementation be painful?
For a more in-depth tutorial about Keras, you can check out:

Getting started with the Sequential model
Getting started with the functional API

In the examples folder of the repository, you will find more advanced models: question-answering with memory networks, text generation with stacked LSTMs, etc.

Installation
Before installing Keras, please install one of its backend engines: TensorFlow, Theano, or CNTK. We recommend the TensorFlow backend.

TensorFlow installation instructions.
Theano installation instructions.
CNTK installation instructions.

You may also consider installing the following optional dependencies:

cuDNN (recommended if you plan on running Keras on GPU).
HDF5 and h5py (required if you plan on saving Keras models to disk).
graphviz and pydot (used by visualization utilities to plot model graphs).

Then, you can install Keras itself. There are two ways to install Keras:

Install Keras from PyPI (recommended):

Note: These installation steps assume that you are on a Linux or Mac environment.
If you are on Windows, you will need to remove sudo to run the commands below.
sudo pip install keras
If you are using a virtualenv, you may want to avoid using sudo:
pip install keras

Alternatively: install Keras from the GitHub source:

First, clone Keras using git:
git clone https://github.com/keras-team/keras.git
Then, cd to the Keras folder and run the install command:
cd keras
sudo python setup.py install

Configuring your Keras backend
By default, Keras will use TensorFlow as its tensor manipulation library. Follow these instructions to configure the Keras backend.

Support
You can ask questions and join the development discussion:

On the Keras Google group.
On the Keras Slack channel. Use this link to request an invitation to the channel.

You can also post bug reports and feature requests (only) in GitHub issues. Make sure to read our guidelines first.

Why this name, Keras?
Keras (Œ∫Œ≠œÅŒ±œÇ) means horn in Greek. It is a reference to a literary image from ancient Greek and Latin literature, first found in the Odyssey, where dream spirits (Oneiroi, singular Oneiros) are divided between those who deceive men with false visions, who arrive to Earth through a gate of ivory, and those who announce a future that will come to pass, who arrive through a gate of horn. It's a play on the words Œ∫Œ≠œÅŒ±œÇ (horn) / Œ∫œÅŒ±ŒØŒΩœâ (fulfill), and ·ºêŒªŒ≠œÜŒ±œÇ (ivory) / ·ºêŒªŒµœÜŒ±ŒØœÅŒøŒºŒ±Œπ (deceive).
Keras was initially developed as part of the research effort of project ONEIROS (Open-ended Neuro-Electronic Intelligent Robot Operating System).

""Oneiroi are beyond our unravelling --who can be sure what tale they tell? Not all that men look for comes to pass. Two gates there are that give passage to fleeting Oneiroi; one is made of horn, one of ivory. The Oneiroi that pass through sawn ivory are deceitful, bearing a message that will not be fulfilled; those that come out through polished horn have truth behind them, to be accomplished for men who see them."" Homer, Odyssey 19. 562 ff (Shewring translation).


",keras deep learning humans found keras keras highlevel neural networks api written python capable running top tensorflow cntk theano developed focus enabling fast experimentation able go idea result least possible delay key good research use keras need deep learning library allows easy fast prototyping user friendliness modularity extensibility supports convolutional networks recurrent networks well combinations two runs seamlessly cpu gpu read documentation kerasio keras compatible python multibackend keras tfkeras time recommend keras users use multibackend keras tensorflow backend switch tfkeras tensorflow tfkeras better maintained better integration tensorflow features eager execution distribution support keras last release keras implementing api last release support tensorflow well theano cntk current release keras makes significant api changes add support tensorflow release last major release multibackend keras multibackend keras superseded tfkeras bugs present multibackend keras fixed april part minor releases information future keras see keras meeting notes guiding principles user friendliness keras api designed human beings machines puts user experience front center keras follows best practices reducing cognitive load offers consistent simple apis minimizes number user actions required common use cases provides clear actionable feedback upon user error modularity model understood sequence graph standalone fully configurable modules plugged together restrictions possible particular neural layers cost functions optimizers initialization schemes activation functions regularization schemes standalone modules combine create new models easy extensibility new modules simple add new classes functions existing modules provide ample examples able easily create new modules allows total expressiveness making keras suitable advanced research work python separate models configuration files declarative format models described python code compact easier debug allows ease extensibility getting started seconds keras core data structure keras model way organize layers simplest type model sequential model linear stack layers complex architectures use keras functional api allows build arbitrary graphs layers sequential model kerasmodels import sequential model sequential stacking layers easy add keraslayers import dense modeladddenseunits activationrelu inputdim modeladddenseunits activationsoftmax model looks good configure learning process compile modelcompilelosscategoricalcrossentropy optimizersgd metricsaccuracy need configure optimizer core principle keras make things reasonably simple allowing user fully control need ultimate control easy extensibility source code modelcompilelosskeraslossescategoricalcrossentropy optimizerkerasoptimizerssgdlr momentum nesterovtrue iterate training data batches xtrain ytrain numpy arrays like scikitlearn api modelfitxtrain ytrain epochs batchsize alternatively feed batches model manually modeltrainonbatchxbatch ybatch evaluate performance one line lossandmetrics modelevaluatextest ytest batchsize generate predictions new data classes modelpredictxtest batchsize building question answering system image classification model neural turing machine model fast ideas behind deep learning simple implementation painful indepth tutorial keras check getting started sequential model getting started functional api examples folder repository find advanced models questionanswering memory networks text generation stacked lstms etc installation installing keras please install one backend engines tensorflow theano cntk recommend tensorflow backend tensorflow installation instructions theano installation instructions cntk installation instructions may also consider installing following optional dependencies cudnn recommended plan running keras gpu hdf hpy required plan saving keras models disk graphviz pydot used visualization utilities plot model graphs install keras two ways install keras install keras pypi recommended note installation steps assume linux mac environment windows need remove sudo run commands sudo pip install keras using virtualenv may want avoid using sudo pip install keras alternatively install keras github source first clone keras using git git clone httpsgithubcomkerasteamkerasgit cd keras folder run install command cd keras sudo python setuppy install configuring keras backend default keras use tensorflow tensor manipulation library follow instructions configure keras backend support ask questions join development discussion keras google group keras slack channel use link request invitation channel also post bug reports feature requests github issues make sure read guidelines first name keras keras means horn greek reference literary image ancient greek latin literature first found odyssey dream spirits oneiroi singular oneiros divided deceive men false visions arrive earth gate ivory announce future come pass arrive gate horn play words horn fulfill ivory deceive keras initially developed part research effort project oneiros openended neuroelectronic intelligent robot operating system oneiroi beyond unravelling sure tale tell men look comes pass two gates give passage fleeting oneiroi one made horn one ivory oneiroi pass sawn ivory deceitful bearing message fulfilled come polished horn truth behind accomplished men see homer odyssey ff shewring translation,kera deep learn human found kera kera highlevel neural network api written python capabl run top tensorflow cntk theano develop focu enabl fast experiment abl go idea result least possibl delay key good research use kera need deep learn librari allow easi fast prototyp user friendli modular extens support convolut network recurr network well combin two run seamlessli cpu gpu read document kerasio kera compat python multibackend kera tfkera time recommend kera user use multibackend kera tensorflow backend switch tfkera tensorflow tfkera better maintain better integr tensorflow featur eager execut distribut support kera last releas kera implement api last releas support tensorflow well theano cntk current releas kera make signific api chang add support tensorflow releas last major releas multibackend kera multibackend kera supersed tfkera bug present multibackend kera fix april part minor releas inform futur kera see kera meet note guid principl user friendli kera api design human be machin put user experi front center kera follow best practic reduc cognit load offer consist simpl api minim number user action requir common use case provid clear action feedback upon user error modular model understood sequenc graph standalon fulli configur modul plug togeth restrict possibl particular neural layer cost function optim initi scheme activ function regular scheme standalon modul combin creat new model easi extens new modul simpl add new class function exist modul provid ampl exampl abl easili creat new modul allow total express make kera suitabl advanc research work python separ model configur file declar format model describ python code compact easier debug allow eas extens get start second kera core data structur kera model way organ layer simplest type model sequenti model linear stack layer complex architectur use kera function api allow build arbitrari graph layer sequenti model kerasmodel import sequenti model sequenti stack layer easi add keraslay import dens modeladddenseunit activationrelu inputdim modeladddenseunit activationsoftmax model look good configur learn process compil modelcompilelosscategoricalcrossentropi optimizersgd metricsaccuraci need configur optim core principl kera make thing reason simpl allow user fulli control need ultim control easi extens sourc code modelcompilelosskeraslossescategoricalcrossentropi optimizerkerasoptimizerssgdlr momentum nesterovtru iter train data batch xtrain ytrain numpi array like scikitlearn api modelfitxtrain ytrain epoch batchsiz altern feed batch model manual modeltrainonbatchxbatch ybatch evalu perform one line lossandmetr modelevaluatextest ytest batchsiz gener predict new data class modelpredictxtest batchsiz build question answer system imag classif model neural ture machin model fast idea behind deep learn simpl implement pain indepth tutori kera check get start sequenti model get start function api exampl folder repositori find advanc model questionansw memori network text gener stack lstm etc instal instal kera pleas instal one backend engin tensorflow theano cntk recommend tensorflow backend tensorflow instal instruct theano instal instruct cntk instal instruct may also consid instal follow option depend cudnn recommend plan run kera gpu hdf hpi requir plan save kera model disk graphviz pydot use visual util plot model graph instal kera two way instal kera instal kera pypi recommend note instal step assum linux mac environ window need remov sudo run command sudo pip instal kera use virtualenv may want avoid use sudo pip instal kera altern instal kera github sourc first clone kera use git git clone httpsgithubcomkerasteamkerasgit cd kera folder run instal command cd kera sudo python setuppi instal configur kera backend default kera use tensorflow tensor manipul librari follow instruct configur kera backend support ask question join develop discuss kera googl group kera slack channel use link request invit channel also post bug report featur request github issu make sure read guidelin first name kera kera mean horn greek refer literari imag ancient greek latin literatur first found odyssey dream spirit oneiroi singular oneiro divid deceiv men fals vision arriv earth gate ivori announc futur come pass arriv gate horn play word horn fulfil ivori deceiv kera initi develop part research effort project oneiro openend neuroelectron intellig robot oper system oneiroi beyond unravel sure tale tell men look come pass two gate give passag fleet oneiroi one made horn one ivori oneiroi pass sawn ivori deceit bear messag fulfil come polish horn truth behind accomplish men see homer odyssey ff shewr translat,kera deep learning human found kera kera highlevel neural network api written python capable running top tensorflow cntk theano developed focus enabling fast experimentation able go idea result least possible delay key good research use kera need deep learning library allows easy fast prototyping user friendliness modularity extensibility support convolutional network recurrent network well combination two run seamlessly cpu gpu read documentation kerasio kera compatible python multibackend kera tfkeras time recommend kera user use multibackend kera tensorflow backend switch tfkeras tensorflow tfkeras better maintained better integration tensorflow feature eager execution distribution support kera last release kera implementing api last release support tensorflow well theano cntk current release kera make significant api change add support tensorflow release last major release multibackend kera multibackend kera superseded tfkeras bug present multibackend kera fixed april part minor release information future kera see kera meeting note guiding principle user friendliness kera api designed human being machine put user experience front center kera follows best practice reducing cognitive load offer consistent simple apis minimizes number user action required common use case provides clear actionable feedback upon user error modularity model understood sequence graph standalone fully configurable module plugged together restriction possible particular neural layer cost function optimizers initialization scheme activation function regularization scheme standalone module combine create new model easy extensibility new module simple add new class function existing module provide ample example able easily create new module allows total expressiveness making kera suitable advanced research work python separate model configuration file declarative format model described python code compact easier debug allows ease extensibility getting started second kera core data structure kera model way organize layer simplest type model sequential model linear stack layer complex architecture use kera functional api allows build arbitrary graph layer sequential model kerasmodels import sequential model sequential stacking layer easy add keraslayers import dense modeladddenseunits activationrelu inputdim modeladddenseunits activationsoftmax model look good configure learning process compile modelcompilelosscategoricalcrossentropy optimizersgd metricsaccuracy need configure optimizer core principle kera make thing reasonably simple allowing user fully control need ultimate control easy extensibility source code modelcompilelosskeraslossescategoricalcrossentropy optimizerkerasoptimizerssgdlr momentum nesterovtrue iterate training data batch xtrain ytrain numpy array like scikitlearn api modelfitxtrain ytrain epoch batchsize alternatively feed batch model manually modeltrainonbatchxbatch ybatch evaluate performance one line lossandmetrics modelevaluatextest ytest batchsize generate prediction new data class modelpredictxtest batchsize building question answering system image classification model neural turing machine model fast idea behind deep learning simple implementation painful indepth tutorial kera check getting started sequential model getting started functional api example folder repository find advanced model questionanswering memory network text generation stacked lstms etc installation installing kera please install one backend engine tensorflow theano cntk recommend tensorflow backend tensorflow installation instruction theano installation instruction cntk installation instruction may also consider installing following optional dependency cudnn recommended plan running kera gpu hdf hpy required plan saving kera model disk graphviz pydot used visualization utility plot model graph install kera two way install kera install kera pypi recommended note installation step assume linux mac environment window need remove sudo run command sudo pip install kera using virtualenv may want avoid using sudo pip install kera alternatively install kera github source first clone kera using git git clone httpsgithubcomkerasteamkerasgit cd kera folder run install command cd kera sudo python setuppy install configuring kera backend default kera use tensorflow tensor manipulation library follow instruction configure kera backend support ask question join development discussion kera google group kera slack channel use link request invitation channel also post bug report feature request github issue make sure read guideline first name kera kera mean horn greek reference literary image ancient greek latin literature first found odyssey dream spirit oneiroi singular oneiros divided deceive men false vision arrive earth gate ivory announce future come pas arrive gate horn play word horn fulfill ivory deceive kera initially developed part research effort project oneiros openended neuroelectronic intelligent robot operating system oneiroi beyond unravelling sure tale tell men look come pas two gate give passage fleeting oneiroi one made horn one ivory oneiroi pas sawn ivory deceitful bearing message fulfilled come polished horn truth behind accomplished men see homer odyssey ff shewring translation
9,Python,GitHub - django/django: The Web framework for perfectionists with deadlines.,"Django
Django is a high-level Python Web framework that encourages rapid development
and clean, pragmatic design. Thanks for checking it out.
All documentation is in the ""docs"" directory and online at
https://docs.djangoproject.com/en/stable/. If you're just getting started,
here's how we recommend you read the docs:

First, read docs/intro/install.txt for instructions on installing Django.
Next, work through the tutorials in order (docs/intro/tutorial01.txt,
docs/intro/tutorial02.txt, etc.).
If you want to set up an actual deployment server, read
docs/howto/deployment/index.txt for instructions.
You'll probably want to read through the topical guides (in docs/topics)
next; from there you can jump to the HOWTOs (in docs/howto) for specific
problems, and check out the reference (docs/ref) for gory details.
See docs/README for instructions on building an HTML version of the docs.

Docs are updated rigorously. If you find any problems in the docs, or think
they should be clarified in any way, please take 30 seconds to fill out a
ticket here: https://code.djangoproject.com/newticket
To get more help:

Join the #django channel on irc.freenode.net. Lots of helpful people hang
out there. See https://en.wikipedia.org/wiki/Wikipedia:IRC/Tutorial if you're
new to IRC.
Join the django-users mailing list, or read the archives, at
https://groups.google.com/group/django-users.

To contribute to Django:

Check out https://docs.djangoproject.com/en/dev/internals/contributing/ for
information about getting involved.

To run Django's test suite:

Follow the instructions in the ""Unit tests"" section of
docs/internals/contributing/writing-code/unit-tests.txt, published online at
https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/unit-tests/#running-the-unit-tests

",django django highlevel python web framework encourages rapid development clean pragmatic design thanks checking documentation docs directory online httpsdocsdjangoprojectcomenstable youre getting started heres recommend read docs first read docsintroinstalltxt instructions installing django next work tutorials order docsintrotutorialtxt docsintrotutorialtxt etc want set actual deployment server read docshowtodeploymentindextxt instructions youll probably want read topical guides docstopics next jump howtos docshowto specific problems check reference docsref gory details see docsreadme instructions building html version docs docs updated rigorously find problems docs think clarified way please take seconds fill ticket httpscodedjangoprojectcomnewticket get help join django channel ircfreenodenet lots helpful people hang see httpsenwikipediaorgwikiwikipediairctutorial youre new irc join djangousers mailing list read archives httpsgroupsgooglecomgroupdjangousers contribute django check httpsdocsdjangoprojectcomendevinternalscontributing information getting involved run djangos test suite follow instructions unit tests section docsinternalscontributingwritingcodeunitteststxt published online httpsdocsdjangoprojectcomendevinternalscontributingwritingcodeunittestsrunningtheunittests,django django highlevel python web framework encourag rapid develop clean pragmat design thank check document doc directori onlin httpsdocsdjangoprojectcomenst your get start here recommend read doc first read docsintroinstalltxt instruct instal django next work tutori order docsintrotutorialtxt docsintrotutorialtxt etc want set actual deploy server read docshowtodeploymentindextxt instruct youll probabl want read topic guid docstop next jump howto docshowto specif problem check refer docsref gori detail see docsreadm instruct build html version doc doc updat rigor find problem doc think clarifi way pleas take second fill ticket httpscodedjangoprojectcomnewticket get help join django channel ircfreenodenet lot help peopl hang see httpsenwikipediaorgwikiwikipediairctutori your new irc join djangous mail list read archiv httpsgroupsgooglecomgroupdjangous contribut django check httpsdocsdjangoprojectcomendevinternalscontribut inform get involv run django test suit follow instruct unit test section docsinternalscontributingwritingcodeunitteststxt publish onlin httpsdocsdjangoprojectcomendevinternalscontributingwritingcodeunittestsrunningtheunittest,django django highlevel python web framework encourages rapid development clean pragmatic design thanks checking documentation doc directory online httpsdocsdjangoprojectcomenstable youre getting started here recommend read doc first read docsintroinstalltxt instruction installing django next work tutorial order docsintrotutorialtxt docsintrotutorialtxt etc want set actual deployment server read docshowtodeploymentindextxt instruction youll probably want read topical guide docstopics next jump howtos docshowto specific problem check reference docsref gory detail see docsreadme instruction building html version doc doc updated rigorously find problem doc think clarified way please take second fill ticket httpscodedjangoprojectcomnewticket get help join django channel ircfreenodenet lot helpful people hang see httpsenwikipediaorgwikiwikipediairctutorial youre new irc join djangousers mailing list read archive httpsgroupsgooglecomgroupdjangousers contribute django check httpsdocsdjangoprojectcomendevinternalscontributing information getting involved run djangos test suite follow instruction unit test section docsinternalscontributingwritingcodeunitteststxt published online httpsdocsdjangoprojectcomendevinternalscontributingwritingcodeunittestsrunningtheunittests
10,Python,"GitHub - jakubroztocil/httpie: As easy as HTTPie /aitch-tee-tee-pie/  ü•ß Modern command line HTTP client ‚Äì user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc.  https://twitter.com/clihttp","HTTPie: a CLI, cURL-like tool for humans
HTTPie (pronounced aitch-tee-tee-pie) is a command line HTTP client.
Its goal is to make CLI interaction with web services as human-friendly
as possible. It provides a simple http command that allows for sending
arbitrary HTTP requests using a simple and natural syntax, and displays
colorized output. HTTPie can be used for testing, debugging, and
generally interacting with HTTP servers.
 
   


Contents

1¬†¬†¬†Main features
2¬†¬†¬†Installation
2.1¬†¬†¬†macOS
2.2¬†¬†¬†Linux
2.3¬†¬†¬†Windows, etc.
2.4¬†¬†¬†Python version
2.5¬†¬†¬†Unstable version


3¬†¬†¬†Usage
3.1¬†¬†¬†Examples


4¬†¬†¬†HTTP method
5¬†¬†¬†Request URL
5.1¬†¬†¬†Querystring parameters
5.2¬†¬†¬†URL shortcuts for localhost
5.3¬†¬†¬†Other default schemes


6¬†¬†¬†Request items
6.1¬†¬†¬†Escaping rules


7¬†¬†¬†JSON
7.1¬†¬†¬†Default behaviour
7.2¬†¬†¬†Explicit JSON
7.3¬†¬†¬†Non-string JSON fields


8¬†¬†¬†Forms
8.1¬†¬†¬†Regular forms
8.2¬†¬†¬†File upload forms


9¬†¬†¬†HTTP headers
9.1¬†¬†¬†Default request headers
9.2¬†¬†¬†Empty headers and header un-setting
9.3¬†¬†¬†Limiting response headers


10¬†¬†¬†Cookies
11¬†¬†¬†Authentication
11.1¬†¬†¬†Basic auth
11.2¬†¬†¬†Digest auth
11.3¬†¬†¬†Password prompt
11.4¬†¬†¬†.netrc
11.5¬†¬†¬†Auth plugins


12¬†¬†¬†HTTP redirects
12.1¬†¬†¬†Follow Location
12.2¬†¬†¬†Showing intermediary redirect responses
12.3¬†¬†¬†Limiting maximum redirects followed


13¬†¬†¬†Proxies
13.1¬†¬†¬†Environment variables
13.2¬†¬†¬†SOCKS


14¬†¬†¬†HTTPS
14.1¬†¬†¬†Server SSL certificate verification
14.2¬†¬†¬†Custom CA bundle
14.3¬†¬†¬†Client side SSL certificate
14.4¬†¬†¬†SSL version


15¬†¬†¬†Output options
15.1¬†¬†¬†What parts of the HTTP exchange should be printed
15.2¬†¬†¬†Viewing intermediary requests/responses
15.3¬†¬†¬†Conditional body download


16¬†¬†¬†Redirected Input
16.1¬†¬†¬†Request data from a filename


17¬†¬†¬†Terminal output
17.1¬†¬†¬†Colors and formatting
17.2¬†¬†¬†Binary data


18¬†¬†¬†Redirected output
19¬†¬†¬†Download mode
19.1¬†¬†¬†Downloaded filename
19.2¬†¬†¬†Piping while downloading
19.3¬†¬†¬†Resuming downloads
19.4¬†¬†¬†Other notes


20¬†¬†¬†Streamed responses
20.1¬†¬†¬†Disabling buffering
20.2¬†¬†¬†Examples use cases


21¬†¬†¬†Sessions
21.1¬†¬†¬†Named sessions
21.2¬†¬†¬†Anonymous sessions
21.3¬†¬†¬†Readonly session


22¬†¬†¬†Config
22.1¬†¬†¬†Config file directory
22.2¬†¬†¬†Configurable options
22.2.1¬†¬†¬†default_options


22.3¬†¬†¬†Un-setting previously specified options


23¬†¬†¬†Scripting
23.1¬†¬†¬†Best practices


24¬†¬†¬†Meta
24.1¬†¬†¬†Interface design
24.2¬†¬†¬†User support
24.3¬†¬†¬†Related projects
24.3.1¬†¬†¬†Dependencies
24.3.2¬†¬†¬†HTTPie friends
24.3.3¬†¬†¬†Alternatives


24.4¬†¬†¬†Contributing
24.5¬†¬†¬†Change log
24.6¬†¬†¬†Artwork
24.7¬†¬†¬†Licence
24.8¬†¬†¬†Authors





1¬†¬†¬†Main features

Expressive and intuitive syntax
Formatted and colorized terminal output
Built-in JSON support
Forms and file uploads
HTTPS, proxies, and authentication
Arbitrary request data
Custom headers
Persistent sessions
Wget-like downloads
Linux, macOS and Windows support
Plugins
Documentation
Test coverage



2¬†¬†¬†Installation

2.1¬†¬†¬†macOS
On macOS, HTTPie can be installed via Homebrew
(recommended):
$ brew install httpie
A MacPorts port is also available:
$ port install httpie

2.2¬†¬†¬†Linux
Most Linux distributions provide a package that can be installed using the
system package manager, for example:
# Debian, Ubuntu, etc.
$ apt-get install httpie
# Fedora
$ dnf install httpie
# CentOS, RHEL, ...
$ yum install httpie
# Arch Linux
$ pacman -S httpie

2.3¬†¬†¬†Windows, etc.
A universal installation method (that works on Windows, Mac OS X, Linux, ‚Ä¶,
and always provides the latest version) is to use pip:
# Make sure we have an up-to-date version of pip and setuptools:
$ pip install --upgrade pip setuptools

$ pip install --upgrade httpie
(If pip installation fails for some reason, you can try
easy_install httpie as a fallback.)

2.4¬†¬†¬†Python version
Starting with version 2.0.0 (currently under development) Python 3.6+ is required.

2.5¬†¬†¬†Unstable version
You can also install the latest unreleased development version directly from
the master branch on GitHub.  It is a work-in-progress of a future stable
release so the experience might be not as smooth.


On macOS you can install it with Homebrew:
$ brew install httpie --HEAD
Otherwise with pip:
$ pip install --upgrade https://github.com/jakubroztocil/httpie/archive/master.tar.gz
Verify that now we have the
current development version identifier
with the -dev suffix, for example:
$ http --version
1.0.0-dev

3¬†¬†¬†Usage
Hello World:
$ http httpie.org
Synopsis:
$ http [flags] [METHOD] URL [ITEM [ITEM]]
See also http --help.

3.1¬†¬†¬†Examples
Custom HTTP method, HTTP headers and JSON data:
$ http PUT example.org X-API-Token:123 name=John
Submitting forms:
$ http -f POST example.org hello=World
See the request that is being sent using one of the output options:
$ http -v example.org
Use Github API to post a comment on an
issue
with authentication:
$ http -a USERNAME POST https://api.github.com/repos/jakubroztocil/httpie/issues/83/comments body='HTTPie is awesome! :heart:'
Upload a file using redirected input:
$ http example.org < file.json
Download a file and save it via redirected output:
$ http example.org/file > file
Download a file wget style:
$ http --download example.org/file
Use named sessions to make certain aspects or the communication persistent
between requests to the same host:
$ http --session=logged-in -a username:password httpbin.org/get API-Key:123

$ http --session=logged-in httpbin.org/headers
Set a custom Host header to work around missing DNS records:
$ http localhost:8000 Host:example.com

4¬†¬†¬†HTTP method
The name of the HTTP method comes right before the URL argument:
$ http DELETE example.org/todos/7
Which looks similar to the actual Request-Line that is sent:
DELETE /todos/7 HTTP/1.1
When the METHOD argument is omitted from the command, HTTPie defaults to
either GET (with no request data) or POST (with request data).

5¬†¬†¬†Request URL
The only information HTTPie needs to perform a request is a URL.
The default scheme is, somewhat unsurprisingly, http://,
and can be omitted from the argument ‚Äì http example.org works just fine.

5.1¬†¬†¬†Querystring parameters
If you find yourself manually constructing URLs with querystring parameters
on the terminal, you may appreciate the param==value syntax for appending
URL parameters.
With that, you don't have to worry about escaping the &
separators for your shell. Additionally, any special characters in the
parameter name or value get automatically URL-escaped
(as opposed to parameters specified in the full URL, which HTTPie doesn‚Äôt
modify).
$ http https://api.github.com/search/repositories q==httpie per_page==1
GET /search/repositories?q=httpie&per_page=1 HTTP/1.1

5.2¬†¬†¬†URL shortcuts for localhost
Additionally, curl-like shorthand for localhost is supported.
This means that, for example :3000 would expand to http://localhost:3000
If the port is omitted, then port 80 is assumed.
$ http :/foo
GET /foo HTTP/1.1
Host: localhost
$ http :3000/bar
GET /bar HTTP/1.1
Host: localhost:3000
$ http :
GET / HTTP/1.1
Host: localhost

5.3¬†¬†¬†Other default schemes
When HTTPie is invoked as https then the default scheme is https://
($ https example.org will make a request to https://example.org).
You can also use the --default-scheme <URL_SCHEME> option to create
shortcuts for other protocols than HTTP (possibly supported via plugins).
Example for the httpie-unixsocket plugin:
# Before
$ http http+unix://%2Fvar%2Frun%2Fdocker.sock/info
# Create an alias
$ alias http-unix='http --default-scheme=""http+unix""'
# Now the scheme can be omitted
$ http-unix %2Fvar%2Frun%2Fdocker.sock/info

6¬†¬†¬†Request items
There are a few different request item types that provide a
convenient mechanism for specifying HTTP headers, simple JSON and
form data, files, and URL parameters.
They are key/value pairs specified after the URL. All have in
common that they become part of the actual request that is sent and that
their type is distinguished only by the separator used:
:, =, :=, ==, @, =@, and :=@. The ones with an
@ expect a file path as value.


Item Type
Description



HTTP Headers
Name:Value
Arbitrary HTTP header, e.g. X-API-Token:123.

URL parameters
name==value
Appends the given name/value pair as a query
string parameter to the URL.
The == separator is used.

Data Fields
field=value,
field=@file.txt
Request data fields to be serialized as a JSON
object (default), or to be form-encoded
(--form, -f).

Raw JSON fields
field:=json,
field:=@file.json
Useful when sending JSON and one or
more fields need to be a Boolean, Number,
nested Object, or an Array,  e.g.,
meals:='[""ham"",""spam""]' or pies:=[1,2,3]
(note the quotes).

Form File Fields
field@/dir/file
Only available with --form, -f.
For example screenshot@~/Pictures/img.png.
The presence of a file field results
in a multipart/form-data request.



Note that data fields aren't the only way to specify request data:
Redirected input is a mechanism for passing arbitrary request data.

6.1¬†¬†¬†Escaping rules
You can use \ to escape characters that shouldn't be used as separators
(or parts thereof). For instance, foo\==bar will become a data key/value
pair (foo= and bar) instead of a URL parameter.
Often it is necessary to quote the values, e.g. foo='bar baz'.
If any of the field names or headers starts with a minus
(e.g., -fieldname), you need to place all such items after the special
token -- to prevent confusion with --arguments:
$ http httpbin.org/post  --  -name-starting-with-dash=foo -Unusual-Header:bar
POST /post HTTP/1.1
-Unusual-Header: bar
Content-Type: application/json

{
    ""-name-starting-with-dash"": ""foo""
}

7¬†¬†¬†JSON
JSON is the lingua franca of modern web services and it is also the
implicit content type HTTPie uses by default.
Simple example:
$ http PUT example.org name=John email=john@example.org
PUT / HTTP/1.1
Accept: application/json, */*
Accept-Encoding: gzip, deflate
Content-Type: application/json
Host: example.org

{
    ""name"": ""John"",
    ""email"": ""john@example.org""
}

7.1¬†¬†¬†Default behaviour
If your command includes some data request items, they are serialized as a JSON
object by default. HTTPie also automatically sets the following headers,
both of which can be overwritten:


Content-Type
application/json

Accept
application/json, */*




7.2¬†¬†¬†Explicit JSON
You can use --json, -j to explicitly set Accept
to application/json regardless of whether you are sending data
(it's a shortcut for setting the header via the usual header notation:
http url Accept:'application/json, */*'). Additionally,
HTTPie will try to detect JSON responses even when the
Content-Type is incorrectly text/plain or unknown.

7.3¬†¬†¬†Non-string JSON fields
Non-string fields use the := separator, which allows you to embed raw JSON
into the resulting object. Text and raw JSON files can also be embedded into
fields using =@ and :=@:
$ http PUT api.example.com/person/1 \
    name=John \
    age:=29 married:=false hobbies:='[""http"", ""pies""]' \  # Raw JSON
    description=@about-john.txt \   # Embed text file
    bookmarks:=@bookmarks.json      # Embed JSON file
PUT /person/1 HTTP/1.1
Accept: application/json, */*
Content-Type: application/json
Host: api.example.com

{
    ""age"": 29,
    ""hobbies"": [
        ""http"",
        ""pies""
    ],
    ""description"": ""John is a nice guy who likes pies."",
    ""married"": false,
    ""name"": ""John"",
    ""bookmarks"": {
        ""HTTPie"": ""https://httpie.org"",
    }
}
Please note that with this syntax the command gets unwieldy when sending
complex data. In that case it's always better to use redirected input:
$ http POST api.example.com/person/1 < person.json

8¬†¬†¬†Forms
Submitting forms is very similar to sending JSON requests. Often the only
difference is in adding the --form, -f option, which ensures that
data fields are serialized as, and Content-Type is set to,
application/x-www-form-urlencoded; charset=utf-8. It is possible to make
form data the implicit content type instead of JSON
via the config file.

8.1¬†¬†¬†Regular forms
$ http --form POST api.example.org/person/1 name='John Smith'
POST /person/1 HTTP/1.1
Content-Type: application/x-www-form-urlencoded; charset=utf-8

name=John+Smith

8.2¬†¬†¬†File upload forms
If one or more file fields is present, the serialization and content type is
multipart/form-data:
$ http -f POST example.com/jobs name='John Smith' cv@~/Documents/cv.pdf
The request above is the same as if the following HTML form were
submitted:
<form enctype=""multipart/form-data"" method=""post"" action=""http://example.com/jobs"">
    <input type=""text"" name=""name"" />
    <input type=""file"" name=""cv"" />
</form>
Note that @ is used to simulate a file upload form field, whereas
=@ just embeds the file content as a regular text field value.

9¬†¬†¬†HTTP headers
To set custom headers you can use the Header:Value notation:
$ http example.org  User-Agent:Bacon/1.0  'Cookie:valued-visitor=yes;foo=bar'  \
    X-Foo:Bar  Referer:https://httpie.org/
GET / HTTP/1.1
Accept: */*
Accept-Encoding: gzip, deflate
Cookie: valued-visitor=yes;foo=bar
Host: example.org
Referer: https://httpie.org/
User-Agent: Bacon/1.0
X-Foo: Bar

9.1¬†¬†¬†Default request headers
There are a couple of default headers that HTTPie sets:
GET / HTTP/1.1
Accept: */*
Accept-Encoding: gzip, deflate
User-Agent: HTTPie/<version>
Host: <taken-from-URL>
Any of these except Host can be overwritten and some of them unset.

9.2¬†¬†¬†Empty headers and header un-setting
To unset a previously specified header
(such a one of the default headers), use Header::
$ http httpbin.org/headers Accept: User-Agent:
To send a header with an empty value, use Header;:
$ http httpbin.org/headers 'Header;'

9.3¬†¬†¬†Limiting response headers
The --max-headers=n options allows you to control the number of headers
HTTPie reads before giving up (the default 0, i.e., there‚Äôs no limit).
$ http --max-headers=100 httpbin.org/get

10¬†¬†¬†Cookies
HTTP clients send cookies to the server as regular HTTP headers. That means,
HTTPie does not offer any special syntax for specifying cookies ‚Äî the usual
Header:Value notation is used:
Send a single cookie:
$ http example.org Cookie:sessionid=foo
GET / HTTP/1.1
Accept: */*
Accept-Encoding: gzip, deflate
Connection: keep-alive
Cookie: sessionid=foo
Host: example.org
User-Agent: HTTPie/0.9.9
Send multiple cookies
(note the header is quoted to prevent the shell from interpreting the ;):
$ http example.org 'Cookie:sessionid=foo;another-cookie=bar'
GET / HTTP/1.1
Accept: */*
Accept-Encoding: gzip, deflate
Connection: keep-alive
Cookie: sessionid=foo;another-cookie=bar
Host: example.org
User-Agent: HTTPie/0.9.9
If you often deal with cookies in your requests, then chances are you'd appreciate
the sessions feature.

11¬†¬†¬†Authentication
The currently supported authentication schemes are Basic and Digest
(see auth plugins for more). There are two flags that control authentication:


--auth, -a
Pass a username:password pair as
the argument. Or, if you only specify a username
(-a username), you'll be prompted for
the password before the request is sent.
To send an empty password, pass username:.
The username:password@hostname URL syntax is
supported as well (but credentials passed via -a
have higher priority).

--auth-type, -A
Specify the auth mechanism. Possible values are
basic and digest. The default value is
basic so it can often be omitted.




11.1¬†¬†¬†Basic auth
$ http -a username:password example.org

11.2¬†¬†¬†Digest auth
$ http -A digest -a username:password example.org

11.3¬†¬†¬†Password prompt
$ http -a username example.org

11.4¬†¬†¬†.netrc
Authentication information from your ~/.netrc
file is by default honored as well.
For example:
$ cat ~/.netrc
machine httpbin.org
login httpie
password test
$ http httpbin.org/basic-auth/httpie/test
HTTP/1.1 200 OK
[...]
This can be disabled with the --ignore-netrc option:
$ http --ignore-netrc httpbin.org/basic-auth/httpie/test
HTTP/1.1 401 UNAUTHORIZED
[...]

11.5¬†¬†¬†Auth plugins
Additional authentication mechanism can be installed as plugins.
They can be found on the Python Package Index.
Here's a few picks:

httpie-api-auth: ApiAuth
httpie-aws-auth: AWS / Amazon S3
httpie-edgegrid: EdgeGrid
httpie-hmac-auth: HMAC
httpie-jwt-auth: JWTAuth (JSON Web Tokens)
httpie-negotiate: SPNEGO (GSS Negotiate)
httpie-ntlm: NTLM (NT LAN Manager)
httpie-oauth: OAuth
requests-hawk: Hawk


12¬†¬†¬†HTTP redirects
By default, HTTP redirects are not followed and only the first
response is shown:
$ http httpbin.org/redirect/3

12.1¬†¬†¬†Follow Location
To instruct HTTPie to follow the Location header of 30x responses
and show the final response instead, use the --follow, -F option:
$ http --follow httpbin.org/redirect/3

12.2¬†¬†¬†Showing intermediary redirect responses
If you additionally wish to see the intermediary requests/responses,
then use the --all option as well:
$ http --follow --all httpbin.org/redirect/3

12.3¬†¬†¬†Limiting maximum redirects followed
To change the default limit of maximum 30 redirects, use the
--max-redirects=<limit> option:
$ http --follow --all --max-redirects=5 httpbin.org/redirect/3

13¬†¬†¬†Proxies
You can specify proxies to be used through the --proxy argument for each
protocol (which is included in the value in case of redirects across protocols):
$ http --proxy=http:http://10.10.1.10:3128 --proxy=https:https://10.10.1.10:1080 example.org
With Basic authentication:
$ http --proxy=http:http://user:pass@10.10.1.10:3128 example.org

13.1¬†¬†¬†Environment variables
You can also configure proxies by environment variables ALL_PROXY,
HTTP_PROXY and HTTPS_PROXY, and the underlying Requests library will
pick them up as well. If you want to disable proxies configured through
the environment variables for certain hosts, you can specify them in NO_PROXY.
In your ~/.bash_profile:
export HTTP_PROXY=http://10.10.1.10:3128
export HTTPS_PROXY=https://10.10.1.10:1080
export NO_PROXY=localhost,example.com

13.2¬†¬†¬†SOCKS
Homebrew-installed HTTPie comes with SOCKS proxy support out of the box.
To enable SOCKS proxy support for non-Homebrew  installations, you'll
might need to install requests[socks] manually using pip:
$ pip install -U requests[socks]
Usage is the same as for other types of proxies:
$ http --proxy=http:socks5://user:pass@host:port --proxy=https:socks5://user:pass@host:port example.org

14¬†¬†¬†HTTPS

14.1¬†¬†¬†Server SSL certificate verification
To skip the host's SSL certificate verification, you can pass --verify=no
(default is yes):
$ http --verify=no https://example.org

14.2¬†¬†¬†Custom CA bundle
You can also use --verify=<CA_BUNDLE_PATH> to set a custom CA bundle path:
$ http --verify=/ssl/custom_ca_bundle https://example.org

14.3¬†¬†¬†Client side SSL certificate
To use a client side certificate for the SSL communication, you can pass
the path of the cert file with --cert:
$ http --cert=client.pem https://example.org
If the private key is not contained in the cert file you may pass the
path of the key file with --cert-key:
$ http --cert=client.crt --cert-key=client.key https://example.org

14.4¬†¬†¬†SSL version
Use the --ssl=<PROTOCOL> to specify the desired protocol version to use.
This will default to SSL v2.3 which will negotiate the highest protocol that both
the server and your installation of OpenSSL support. The available protocols
are ssl2.3, ssl3, tls1, tls1.1, tls1.2, tls1.3. (The actually
available set of protocols may vary depending on your OpenSSL installation.)
# Specify the vulnerable SSL v3 protocol to talk to an outdated server:
$ http --ssl=ssl3 https://vulnerable.example.org

15¬†¬†¬†Output options
By default, HTTPie only outputs the final response and the whole response
message is printed (headers as well as the body). You can control what should
be printed via several options:


--headers, -h
Only the response headers are printed.

--body, -b
Only the response body is printed.

--verbose, -v
Print the whole HTTP exchange (request and response).
This option also enables --all (see below).

--print, -p
Selects parts of the HTTP exchange.



--verbose can often be useful for debugging the request and generating
documentation examples:
$ http --verbose PUT httpbin.org/put hello=world
PUT /put HTTP/1.1
Accept: application/json, */*
Accept-Encoding: gzip, deflate
Content-Type: application/json
Host: httpbin.org
User-Agent: HTTPie/0.2.7dev

{
    ""hello"": ""world""
}


HTTP/1.1 200 OK
Connection: keep-alive
Content-Length: 477
Content-Type: application/json
Date: Sun, 05 Aug 2012 00:25:23 GMT
Server: gunicorn/0.13.4

{
    [‚Ä¶]
}

15.1¬†¬†¬†What parts of the HTTP exchange should be printed
All the other output options are under the hood just shortcuts for
the more powerful --print, -p. It accepts a string of characters each
of which represents a specific part of the HTTP exchange:


Character
Stands for



H
request headers

B
request body

h
response headers

b
response body



Print request and response headers:
$ http --print=Hh PUT httpbin.org/put hello=world

15.2¬†¬†¬†Viewing intermediary requests/responses
To see all the HTTP communication, i.e. the final request/response as
well as any possible  intermediary requests/responses, use the --all
option. The intermediary HTTP communication include followed redirects
(with --follow), the first unauthorized request when HTTP digest
authentication is used (--auth=digest), etc.
# Include all responses that lead to the final one:
$ http --all --follow httpbin.org/redirect/3
The intermediary requests/response are by default formatted according to
--print, -p (and its shortcuts described above). If you'd like to change
that, use the --history-print, -P option. It takes the same
arguments as --print, -p but applies to the intermediary requests only.
# Print the intermediary requests/responses differently than the final one:
$ http -A digest -a foo:bar --all -p Hh -P H httpbin.org/digest-auth/auth/foo/bar

15.3¬†¬†¬†Conditional body download
As an optimization, the response body is downloaded from the server
only if it's part of the output. This is similar to performing a HEAD
request, except that it applies to any HTTP method you use.
Let's say that there is an API that returns the whole resource when it is
updated, but you are only interested in the response headers to see the
status code after an update:
$ http --headers PATCH example.org/Really-Huge-Resource name='New Name'
Since we are only printing the HTTP headers here, the connection to the server
is closed as soon as all the response headers have been received.
Therefore, bandwidth and time isn't wasted downloading the body
which you don't care about. The response headers are downloaded always,
even if they are not part of the output

16¬†¬†¬†Redirected Input
The universal method for passing request data is through redirected stdin
(standard input)‚Äîpiping. Such data is buffered and then with no further
processing used as the request body. There are multiple useful ways to use
piping:
Redirect from a file:
$ http PUT example.com/person/1 X-API-Token:123 < person.json
Or the output of another program:
$ grep '401 Unauthorized' /var/log/httpd/error_log | http POST example.org/intruders
You can use echo for simple data:
$ echo '{""name"": ""John""}' | http PATCH example.com/person/1 X-API-Token:123
You can also use a Bash here string:
$ http example.com/ <<<'{""name"": ""John""}'
You can even pipe web services together using HTTPie:
$ http GET https://api.github.com/repos/jakubroztocil/httpie | http POST httpbin.org/post
You can use cat to enter multiline data on the terminal:
$ cat | http POST example.com
<paste>
^D
$ cat | http POST example.com/todos Content-Type:text/plain
- buy milk
- call parents
^D
On OS X, you can send the contents of the clipboard with pbpaste:
$ pbpaste | http PUT example.com
Passing data through stdin cannot be combined with data fields specified
on the command line:
$ echo 'data' | http POST example.org more=data   # This is invalid
To prevent HTTPie from reading stdin data you can use the
--ignore-stdin option.

16.1¬†¬†¬†Request data from a filename
An alternative to redirected stdin is specifying a filename (as
@/path/to/file) whose content is used as if it came from stdin.
It has the advantage that the Content-Type
header is automatically set to the appropriate value based on the
filename extension. For example, the following request sends the
verbatim contents of that XML file with Content-Type: application/xml:
$ http PUT httpbin.org/put @/data/file.xml

17¬†¬†¬†Terminal output
HTTPie does several things by default in order to make its terminal output
easy to read.

17.1¬†¬†¬†Colors and formatting
Syntax highlighting is applied to HTTP headers and bodies (where it makes
sense). You can choose your preferred color scheme via the --style option
if you don't like the default one (see $ http --help for the possible
values).
Also, the following formatting is applied:

HTTP headers are sorted by name.
JSON data is indented, sorted by keys, and unicode escapes are converted
to the characters they represent.

One of these options can be used to control output processing:


--pretty=all
Apply both colors and formatting.
Default for terminal output.

--pretty=colors
Apply colors.

--pretty=format
Apply formatting.

--pretty=none
Disables output processing.
Default for redirected output.




17.2¬†¬†¬†Binary data
Binary data is suppressed for terminal output, which makes it safe to perform
requests to URLs that send back binary data. Binary data is suppressed also in
redirected, but prettified output. The connection is closed as soon as we know
that the response body is binary,
$ http example.org/Movie.mov
You will nearly instantly see something like this:
HTTP/1.1 200 OK
Accept-Ranges: bytes
Content-Encoding: gzip
Content-Type: video/quicktime
Transfer-Encoding: chunked

+-----------------------------------------+
| NOTE: binary data not shown in terminal |
+-----------------------------------------+

18¬†¬†¬†Redirected output
HTTPie uses a different set of defaults for redirected output than for
terminal output. The differences being:

Formatting and colors aren't applied (unless --pretty is specified).
Only the response body is printed (unless one of the output options is set).
Also, binary data isn't suppressed.

The reason is to make piping HTTPie's output to another programs and
downloading files work with no extra flags. Most of the time, only the raw
response body is of an interest when the output is redirected.
Download a file:
$ http example.org/Movie.mov > Movie.mov
Download an image of Octocat, resize it using ImageMagick, upload it elsewhere:
$ http octodex.github.com/images/original.jpg | convert - -resize 25% -  | http example.org/Octocats
Force colorizing and formatting, and show both the request and the response in
less pager:
$ http --pretty=all --verbose example.org | less -R
The -R flag tells less to interpret color escape sequences included
HTTPie`s output.
You can create a shortcut for invoking HTTPie with colorized and paged output
by adding the following to your ~/.bash_profile:
function httpless {
    # `httpless example.org'
    http --pretty=all --print=hb ""$@"" | less -R;
}

19¬†¬†¬†Download mode
HTTPie features a download mode in which it acts similarly to wget.
When enabled using the --download, -d flag, response headers are printed to
the terminal (stderr), and a progress bar is shown while the response body
is being saved to a file.
$ http --download https://github.com/jakubroztocil/httpie/archive/master.tar.gz
HTTP/1.1 200 OK
Content-Disposition: attachment; filename=httpie-master.tar.gz
Content-Length: 257336
Content-Type: application/x-gzip

Downloading 251.30 kB to ""httpie-master.tar.gz""
Done. 251.30 kB in 2.73862s (91.76 kB/s)

19.1¬†¬†¬†Downloaded filename
There are three mutually exclusive ways through which HTTPie determines
the output filename (with decreasing priority):

You can explicitly provide it via --output, -o.
The file gets overwritten if it already exists
(or appended to with --continue, -c).
The server may specify the filename in the optional Content-Disposition
response header. Any leading dots are stripped from a server-provided filename.
The last resort HTTPie uses is to generate the filename from a combination
of the request URL and the response Content-Type.
The initial URL is always used as the basis for
the generated filename ‚Äî even if there has been one or more redirects.

To prevent data loss by overwriting, HTTPie adds a unique numerical suffix to the
filename when necessary (unless specified with --output, -o).

19.2¬†¬†¬†Piping while downloading
You can also redirect the response body to another program while the response
headers and progress are still shown in the terminal:
$ http -d https://github.com/jakubroztocil/httpie/archive/master.tar.gz |  tar zxf -

19.3¬†¬†¬†Resuming downloads
If --output, -o is specified, you can resume a partial download using the
--continue, -c option. This only works with servers that support
Range requests and 206 Partial Content responses. If the server doesn't
support that, the whole file will simply be downloaded:
$ http -dco file.zip example.org/file

19.4¬†¬†¬†Other notes

The --download option only changes how the response body is treated.
You can still set custom headers, use sessions, --verbose, -v, etc.
--download always implies --follow (redirects are followed).
HTTPie exits with status code 1 (error) if the body hasn't been fully
downloaded.
Accept-Encoding cannot be set with --download.


20¬†¬†¬†Streamed responses
Responses are downloaded and printed in chunks which allows for streaming
and large file downloads without using too much memory. However, when
colors and formatting is applied, the whole response is buffered and only
then processed at once.

20.1¬†¬†¬†Disabling buffering
You can use the --stream, -S flag to make two things happen:

The output is flushed in much smaller chunks without any buffering,
which makes HTTPie behave kind of like tail -f for URLs.
Streaming becomes enabled even when the output is prettified: It will be
applied to each line of the response and flushed immediately. This makes
it possible to have a nice output for long-lived requests, such as one
to the Twitter streaming API.


20.2¬†¬†¬†Examples use cases
Prettified streamed response:
$ http --stream -f -a YOUR-TWITTER-NAME https://stream.twitter.com/1/statuses/filter.json track='Justin Bieber'
Streamed output by small chunks al√° tail -f:
# Send each new tweet (JSON object) mentioning ""Apple"" to another
# server as soon as it arrives from the Twitter streaming API:
$ http --stream -f -a YOUR-TWITTER-NAME https://stream.twitter.com/1/statuses/filter.json track=Apple \
| while read tweet; do echo ""$tweet"" | http POST example.org/tweets ; done

21¬†¬†¬†Sessions
By default, every request HTTPie makes is completely independent of any
previous ones to the same host.
However, HTTPie also supports persistent
sessions via the --session=SESSION_NAME_OR_PATH option. In a session,
custom HTTP headers (except for the ones starting with Content- or If-),
authentication, and cookies
(manually specified or sent by the server) persist between requests
to the same host.
# Create a new session
$ http --session=/tmp/session.json example.org API-Token:123

# Re-use an existing session ‚Äî API-Token will be set:
$ http --session=/tmp/session.json example.org
All session data, including credentials, cookie data,
and custom headers are stored in plain text.
That means session files can also be created and edited manually in a text
editor‚Äîthey are regular JSON. It also means that they can be read by anyone
who has access to the session file.

21.1¬†¬†¬†Named sessions
You can create one or more named session per host. For example, this is how
you can create a new session named user1 for example.org:
$ http --session=user1 -a user1:password example.org X-Foo:Bar
From now on, you can refer to the session by its name. When you choose to
use the session again, any previously specified authentication or HTTP headers
will automatically be set:
$ http --session=user1 example.org
To create or reuse a different session, simple specify a different name:
$ http --session=user2 -a user2:password example.org X-Bar:Foo
Named sessions‚Äôs data is stored in JSON files in the the sessions
subdirectory of the config directory:
~/.httpie/sessions/<host>/<name>.json
(%APPDATA%\httpie\sessions\<host>\<name>.json on Windows).

21.2¬†¬†¬†Anonymous sessions
Instead of a name, you can also directly specify a path to a session file. This
allows for sessions to be re-used across multiple hosts:
$ http --session=/tmp/session.json example.org
$ http --session=/tmp/session.json admin.example.org
$ http --session=~/.httpie/sessions/another.example.org/test.json example.org
$ http --session-read-only=/tmp/session.json example.org

21.3¬†¬†¬†Readonly session
To use an existing session file without updating it from the request/response
exchange once it is created, specify the session name via
--session-read-only=SESSION_NAME_OR_PATH instead.

22¬†¬†¬†Config
HTTPie uses a simple config.json file. The file doesn‚Äôt exist by default
but you can create it manually.

22.1¬†¬†¬†Config file directory
The default location of the configuration file is ~/.httpie/config.json
(or %APPDATA%\httpie\config.json on Windows).
The config directory can be changed by setting the $HTTPIE_CONFIG_DIR
environment variable:
$ export HTTPIE_CONFIG_DIR=/tmp/httpie
$ http example.org
To view the exact location run http --debug.

22.2¬†¬†¬†Configurable options
Currently HTTPie offers a single configurable option:

22.2.1¬†¬†¬†default_options
An Array (by default empty) of default options that should be applied to
every invocation of HTTPie.
For instance, you can use this config option to change your default color theme:
$ cat ~/.httpie/config.json
{
    ""default_options"": [
      ""--style=fruity""
    ]
}
Even though it is technically possible to include there any of HTTPie‚Äôs
options, it is not recommended to modify the default behaviour in a way
that would break your compatibility with the wider world as that can
generate a lot of confusion.

22.3¬†¬†¬†Un-setting previously specified options
Default options from the config file, or specified any other way,
can be unset for a particular invocation via --no-OPTION arguments passed
on the command line (e.g., --no-style or --no-session).

23¬†¬†¬†Scripting
When using HTTPie from shell scripts, it can be handy to set the
--check-status flag. It instructs HTTPie to exit with an error if the
HTTP status is one of 3xx, 4xx, or 5xx. The exit status will
be 3 (unless --follow is set), 4, or 5,
respectively.
#!/bin/bash

if http --check-status --ignore-stdin --timeout=2.5 HEAD example.org/health &> /dev/null; then
    echo 'OK!'
else
    case $? in
        2) echo 'Request timed out!' ;;
        3) echo 'Unexpected HTTP 3xx Redirection!' ;;
        4) echo 'HTTP 4xx Client Error!' ;;
        5) echo 'HTTP 5xx Server Error!' ;;
        6) echo 'Exceeded --max-redirects=<n> redirects!' ;;
        *) echo 'Other Error!' ;;
    esac
fi

23.1¬†¬†¬†Best practices
The default behaviour of automatically reading stdin is typically not
desirable during non-interactive invocations. You most likely want to
use the --ignore-stdin option to disable it.
It is a common gotcha that without this option HTTPie seemingly hangs.
What happens is that when HTTPie is invoked for example from a cron job,
stdin is not connected to a terminal.
Therefore, rules for redirected input apply, i.e., HTTPie starts to read it
expecting that the request body will be passed through.
And since there's no data nor EOF, it will be stuck. So unless you're
piping some data to HTTPie, this flag should be used in scripts.
Also, it might be good to set a connection --timeout limit to prevent
your program from hanging if the server never responds.

24¬†¬†¬†Meta

24.1¬†¬†¬†Interface design
The syntax of the command arguments closely corresponds to the actual HTTP
requests sent over the wire. It has the advantage  that it's easy to remember
and read. It is often possible to translate an HTTP request to an HTTPie
argument list just by inlining the request elements. For example, compare this
HTTP request:
POST /collection HTTP/1.1
X-API-Key: 123
User-Agent: Bacon/1.0
Content-Type: application/x-www-form-urlencoded

name=value&name2=value2
with the HTTPie command that sends it:
$ http -f POST example.org/collection \
  X-API-Key:123 \
  User-Agent:Bacon/1.0 \
  name=value \
  name2=value2
Notice that both the order of elements and the syntax is very similar,
and that only a small portion of the command is used to control HTTPie and
doesn't directly correspond to any part of the request (here it's only -f
asking HTTPie to send a form request).
The two modes, --pretty=all (default for terminal) and --pretty=none
(default for redirected output), allow for both user-friendly interactive use
and usage from scripts, where HTTPie serves as a generic HTTP client.
As HTTPie is still under heavy development, the existing command line
syntax and some of the --OPTIONS may change slightly before
HTTPie reaches its final version 1.0. All changes are recorded in the
change log.

24.2¬†¬†¬†User support
Please use the following support channels:

GitHub issues
for bug reports and feature requests.
Our Gitter chat room
to ask questions, discuss features, and for general discussion.
StackOverflow
to ask questions (please make sure to use the
httpie tag).
Tweet directly to @clihttp.
You can also tweet directly to @jakubroztocil.


24.3¬†¬†¬†Related projects

24.3.1¬†¬†¬†Dependencies
Under the hood, HTTPie uses these two amazing libraries:

Requests
‚Äî Python HTTP library for humans
Pygments
‚Äî Python syntax highlighter


24.3.2¬†¬†¬†HTTPie friends
HTTPie plays exceptionally well with the following tools:

jq
‚Äî CLI JSON processor that
works great in conjunction with HTTPie
http-prompt
‚Äî  interactive shell for HTTPie featuring autocomplete
and command syntax highlighting


24.3.3¬†¬†¬†Alternatives

httpcat ‚Äî a lower-level sister utility
of HTTPie for constructing raw HTTP requests on the command line.
curl ‚Äî a ""Swiss knife"" command line tool and
an exceptional library for transferring data with URLs.


24.4¬†¬†¬†Contributing
See CONTRIBUTING.rst.

24.5¬†¬†¬†Change log
See CHANGELOG.

24.6¬†¬†¬†Artwork

Logo by Cl√°udia Delgado.
Animation by Allen Smith of GitHub.


24.7¬†¬†¬†Licence
BSD-3-Clause: LICENSE.

24.8¬†¬†¬†Authors
Jakub Roztocil  (@jakubroztocil) created HTTPie and these fine people
have contributed.
",httpie cli curllike tool humans httpie pronounced aitchteeteepie command line http client goal make cli interaction web services humanfriendly possible provides simple http command allows sending arbitrary http requests using simple natural syntax displays colorized output httpie used testing debugging generally interacting http servers contents main features installation macos linux windows etc python version unstable version usage examples http method request url querystring parameters url shortcuts localhost default schemes request items escaping rules json default behaviour explicit json nonstring json fields forms regular forms file upload forms http headers default request headers empty headers header unsetting limiting response headers cookies authentication basic auth digest auth password prompt netrc auth plugins http redirects follow location showing intermediary redirect responses limiting maximum redirects followed proxies environment variables socks https server ssl certificate verification custom ca bundle client side ssl certificate ssl version output options parts http exchange printed viewing intermediary requestsresponses conditional body download redirected input request data filename terminal output colors formatting binary data redirected output download mode downloaded filename piping downloading resuming downloads notes streamed responses disabling buffering examples use cases sessions named sessions anonymous sessions readonly session config config file directory configurable options defaultoptions unsetting previously specified options scripting best practices meta interface design user support related projects dependencies httpie friends alternatives contributing change log artwork licence authors main features expressive intuitive syntax formatted colorized terminal output builtin json support forms file uploads https proxies authentication arbitrary request data custom headers persistent sessions wgetlike downloads linux macos windows support plugins documentation test coverage installation macos macos httpie installed via homebrew recommended brew install httpie macports port also available port install httpie linux linux distributions provide package installed using system package manager example debian ubuntu etc aptget install httpie fedora dnf install httpie centos rhel yum install httpie arch linux pacman httpie windows etc universal installation method works windows mac os x linux always provides latest version use pip make sure uptodate version pip setuptools pip install upgrade pip setuptools pip install upgrade httpie pip installation fails reason try easyinstall httpie fallback python version starting version currently development python required unstable version also install latest unreleased development version directly master branch github workinprogress future stable release experience might smooth macos install homebrew brew install httpie head otherwise pip pip install upgrade httpsgithubcomjakubroztocilhttpiearchivemastertargz verify current development version identifier dev suffix example http version dev usage hello world http httpieorg synopsis http flags method url item item see also http help examples custom http method http headers json data http put exampleorg xapitoken namejohn submitting forms http f post exampleorg helloworld see request sent using one output options http v exampleorg use github api post comment issue authentication http username post httpsapigithubcomreposjakubroztocilhttpieissuescomments bodyhttpie awesome heart upload file using redirected input http exampleorg filejson download file save via redirected output http exampleorgfile file download file wget style http download exampleorgfile use named sessions make certain aspects communication persistent requests host http sessionloggedin usernamepassword httpbinorgget apikey http sessionloggedin httpbinorgheaders set custom host header work around missing dns records http localhost hostexamplecom http method name http method comes right url argument http delete exampleorgtodos looks similar actual requestline sent delete todos http method argument omitted command httpie defaults either get request data post request data request url information httpie needs perform request url default scheme somewhat unsurprisingly http omitted argument http exampleorg works fine querystring parameters find manually constructing urls querystring parameters terminal may appreciate paramvalue syntax appending url parameters dont worry escaping separators shell additionally special characters parameter name value get automatically urlescaped opposed parameters specified full url httpie doesnt modify http httpsapigithubcomsearchrepositories qhttpie perpage get searchrepositoriesqhttpieperpage http url shortcuts localhost additionally curllike shorthand localhost supported means example would expand httplocalhost port omitted port assumed http foo get foo http host localhost http bar get bar http host localhost http get http host localhost default schemes httpie invoked https default scheme https https exampleorg make request httpsexampleorg also use defaultscheme urlscheme option create shortcuts protocols http possibly supported via plugins example httpieunixsocket plugin http httpunixfvarfrunfdockersockinfo create alias alias httpunixhttp defaultschemehttpunix scheme omitted httpunix fvarfrunfdockersockinfo request items different request item types provide convenient mechanism specifying http headers simple json form data files url parameters keyvalue pairs specified url common become part actual request sent type distinguished separator used ones expect file path value item type description http headers namevalue arbitrary http header eg xapitoken url parameters namevalue appends given namevalue pair query string parameter url separator used data fields fieldvalue fieldfiletxt request data fields serialized json object default formencoded form f raw json fields fieldjson fieldfilejson useful sending json one fields need boolean number nested object array eg mealshamspam pies note quotes form file fields fielddirfile available form f example screenshotpicturesimgpng presence file field results multipartformdata request note data fields arent way specify request data redirected input mechanism passing arbitrary request data escaping rules use escape characters shouldnt used separators parts thereof instance foobar become data keyvalue pair foo bar instead url parameter often necessary quote values eg foobar baz field names headers starts minus eg fieldname need place items special token prevent confusion arguments http httpbinorgpost namestartingwithdashfoo unusualheaderbar post post http unusualheader bar contenttype applicationjson namestartingwithdash foo json json lingua franca modern web services also implicit content type httpie uses default simple example http put exampleorg namejohn emailjohnexampleorg put http accept applicationjson acceptencoding gzip deflate contenttype applicationjson host exampleorg name john email johnexampleorg default behaviour command includes data request items serialized json object default httpie also automatically sets following headers overwritten contenttype applicationjson accept applicationjson explicit json use json j explicitly set accept applicationjson regardless whether sending data shortcut setting header via usual header notation http url acceptapplicationjson additionally httpie try detect json responses even contenttype incorrectly textplain unknown nonstring json fields nonstring fields use separator allows embed raw json resulting object text raw json files also embedded fields using http put apiexamplecomperson namejohn age marriedfalse hobbieshttp pies raw json descriptionaboutjohntxt embed text file bookmarksbookmarksjson embed json file put person http accept applicationjson contenttype applicationjson host apiexamplecom age hobbies http pies description john nice guy likes pies married false name john bookmarks httpie httpshttpieorg please note syntax command gets unwieldy sending complex data case always better use redirected input http post apiexamplecomperson personjson forms submitting forms similar sending json requests often difference adding form f option ensures data fields serialized contenttype set applicationxwwwformurlencoded charsetutf possible make form data implicit content type instead json via config file regular forms http form post apiexampleorgperson namejohn smith post person http contenttype applicationxwwwformurlencoded charsetutf namejohnsmith file upload forms one file fields present serialization content type multipartformdata http f post examplecomjobs namejohn smith cvdocumentscvpdf request following html form submitted form enctypemultipartformdata methodpost actionhttpexamplecomjobs input typetext namename input typefile namecv form note used simulate file upload form field whereas embeds file content regular text field value http headers set custom headers use headervalue notation http exampleorg useragentbacon cookievaluedvisitoryesfoobar xfoobar refererhttpshttpieorg get http accept acceptencoding gzip deflate cookie valuedvisitoryesfoobar host exampleorg referer httpshttpieorg useragent bacon xfoo bar default request headers couple default headers httpie sets get http accept acceptencoding gzip deflate useragent httpieversion host takenfromurl except host overwritten unset empty headers header unsetting unset previously specified header one default headers use header http httpbinorgheaders accept useragent send header empty value use header http httpbinorgheaders header limiting response headers maxheadersn options allows control number headers httpie reads giving default ie theres limit http maxheaders httpbinorgget cookies http clients send cookies server regular http headers means httpie offer special syntax specifying cookies usual headervalue notation used send single cookie http exampleorg cookiesessionidfoo get http accept acceptencoding gzip deflate connection keepalive cookie sessionidfoo host exampleorg useragent httpie send multiple cookies note header quoted prevent shell interpreting http exampleorg cookiesessionidfooanothercookiebar get http accept acceptencoding gzip deflate connection keepalive cookie sessionidfooanothercookiebar host exampleorg useragent httpie often deal cookies requests chances youd appreciate sessions feature authentication currently supported authentication schemes basic digest see auth plugins two flags control authentication auth pass usernamepassword pair argument specify username username youll prompted password request sent send empty password pass username usernamepasswordhostname url syntax supported well credentials passed via higher priority authtype specify auth mechanism possible values basic digest default value basic often omitted basic auth http usernamepassword exampleorg digest auth http digest usernamepassword exampleorg password prompt http username exampleorg netrc authentication information netrc file default honored well example cat netrc machine httpbinorg login httpie password test http httpbinorgbasicauthhttpietest http ok disabled ignorenetrc option http ignorenetrc httpbinorgbasicauthhttpietest http unauthorized auth plugins additional authentication mechanism installed plugins found python package index heres picks httpieapiauth apiauth httpieawsauth aws amazon httpieedgegrid edgegrid httpiehmacauth hmac httpiejwtauth jwtauth json web tokens httpienegotiate spnego gss negotiate httpientlm ntlm nt lan manager httpieoauth oauth requestshawk hawk http redirects default http redirects followed first response shown http httpbinorgredirect follow location instruct httpie follow location header x responses show final response instead use follow f option http follow httpbinorgredirect showing intermediary redirect responses additionally wish see intermediary requestsresponses use option well http follow httpbinorgredirect limiting maximum redirects followed change default limit maximum redirects use maxredirectslimit option http follow maxredirects httpbinorgredirect proxies specify proxies used proxy argument protocol included value case redirects across protocols http proxyhttphttp proxyhttpshttps exampleorg basic authentication http proxyhttphttpuserpass exampleorg environment variables also configure proxies environment variables allproxy httpproxy httpsproxy underlying requests library pick well want disable proxies configured environment variables certain hosts specify noproxy bashprofile export httpproxyhttp export httpsproxyhttps export noproxylocalhostexamplecom socks homebrewinstalled httpie comes socks proxy support box enable socks proxy support nonhomebrew installations youll might need install requestssocks manually using pip pip install u requestssocks usage types proxies http proxyhttpsocksuserpasshostport proxyhttpssocksuserpasshostport exampleorg https server ssl certificate verification skip hosts ssl certificate verification pass verifyno default yes http verifyno httpsexampleorg custom ca bundle also use verifycabundlepath set custom ca bundle path http verifysslcustomcabundle httpsexampleorg client side ssl certificate use client side certificate ssl communication pass path cert file cert http certclientpem httpsexampleorg private key contained cert file may pass path key file certkey http certclientcrt certkeyclientkey httpsexampleorg ssl version use sslprotocol specify desired protocol version use default ssl v negotiate highest protocol server installation openssl support available protocols ssl ssl tls tls tls tls actually available set protocols may vary depending openssl installation specify vulnerable ssl v protocol talk outdated server http sslssl httpsvulnerableexampleorg output options default httpie outputs final response whole response message printed headers well body control printed via several options headers h response headers printed body b response body printed verbose v print whole http exchange request response option also enables see print p selects parts http exchange verbose often useful debugging request generating documentation examples http verbose put httpbinorgput helloworld put put http accept applicationjson acceptencoding gzip deflate contenttype applicationjson host httpbinorg useragent httpiedev hello world http ok connection keepalive contentlength contenttype applicationjson date sun aug gmt server gunicorn parts http exchange printed output options hood shortcuts powerful print p accepts string characters represents specific part http exchange character stands h request headers b request body h response headers b response body print request response headers http printhh put httpbinorgput helloworld viewing intermediary requestsresponses see http communication ie final requestresponse well possible intermediary requestsresponses use option intermediary http communication include followed redirects follow first unauthorized request http digest authentication used authdigest etc include responses lead final one http follow httpbinorgredirect intermediary requestsresponse default formatted according print p shortcuts described youd like change use historyprint p option takes arguments print p applies intermediary requests print intermediary requestsresponses differently final one http digest foobar p hh p h httpbinorgdigestauthauthfoobar conditional body download optimization response body downloaded server part output similar performing head request except applies http method use lets say api returns whole resource updated interested response headers see status code update http headers patch exampleorgreallyhugeresource namenew name since printing http headers connection server closed soon response headers received therefore bandwidth time isnt wasted downloading body dont care response headers downloaded always even part output redirected input universal method passing request data redirected stdin standard inputpiping data buffered processing used request body multiple useful ways use piping redirect file http put examplecomperson xapitoken personjson output another program grep unauthorized varloghttpderrorlog http post exampleorgintruders use echo simple data echo name john http patch examplecomperson xapitoken also use bash string http examplecom name john even pipe web services together using httpie http get httpsapigithubcomreposjakubroztocilhttpie http post httpbinorgpost use cat enter multiline data terminal cat http post examplecom paste cat http post examplecomtodos contenttypetextplain buy milk call parents os x send contents clipboard pbpaste pbpaste http put examplecom passing data stdin cannot combined data fields specified command line echo data http post exampleorg moredata invalid prevent httpie reading stdin data use ignorestdin option request data filename alternative redirected stdin specifying filename pathtofile whose content used came stdin advantage contenttype header automatically set appropriate value based filename extension example following request sends verbatim contents xml file contenttype applicationxml http put httpbinorgput datafilexml terminal output httpie several things default order make terminal output easy read colors formatting syntax highlighting applied http headers bodies makes sense choose preferred color scheme via style option dont like default one see http help possible values also following formatting applied http headers sorted name json data indented sorted keys unicode escapes converted characters represent one options used control output processing prettyall apply colors formatting default terminal output prettycolors apply colors prettyformat apply formatting prettynone disables output processing default redirected output binary data binary data suppressed terminal output makes safe perform requests urls send back binary data binary data suppressed also redirected prettified output connection closed soon know response body binary http exampleorgmoviemov nearly instantly see something like http ok acceptranges bytes contentencoding gzip contenttype videoquicktime transferencoding chunked note binary data shown terminal redirected output httpie uses different set defaults redirected output terminal output differences formatting colors arent applied unless pretty specified response body printed unless one output options set also binary data isnt suppressed reason make piping httpies output another programs downloading files work extra flags time raw response body interest output redirected download file http exampleorgmoviemov moviemov download image octocat resize using imagemagick upload elsewhere http octodexgithubcomimagesoriginaljpg convert resize http exampleorgoctocats force colorizing formatting show request response less pager http prettyall verbose exampleorg less r r flag tells less interpret color escape sequences included httpies output create shortcut invoking httpie colorized paged output adding following bashprofile function httpless httpless exampleorg http prettyall printhb less r download mode httpie features download mode acts similarly wget enabled using download flag response headers printed terminal stderr progress bar shown response body saved file http download httpsgithubcomjakubroztocilhttpiearchivemastertargz http ok contentdisposition attachment filenamehttpiemastertargz contentlength contenttype applicationxgzip downloading kb httpiemastertargz done kb kbs downloaded filename three mutually exclusive ways httpie determines output filename decreasing priority explicitly provide via output file gets overwritten already exists appended continue c server may specify filename optional contentdisposition response header leading dots stripped serverprovided filename last resort httpie uses generate filename combination request url response contenttype initial url always used basis generated filename even one redirects prevent data loss overwriting httpie adds unique numerical suffix filename necessary unless specified output piping downloading also redirect response body another program response headers progress still shown terminal http httpsgithubcomjakubroztocilhttpiearchivemastertargz tar zxf resuming downloads output specified resume partial download using continue c option works servers support range requests partial content responses server doesnt support whole file simply downloaded http dco filezip exampleorgfile notes download option changes response body treated still set custom headers use sessions verbose v etc download always implies follow redirects followed httpie exits status code error body hasnt fully downloaded acceptencoding cannot set download streamed responses responses downloaded printed chunks allows streaming large file downloads without using much memory however colors formatting applied whole response buffered processed disabling buffering use stream flag make two things happen output flushed much smaller chunks without buffering makes httpie behave kind like tail f urls streaming becomes enabled even output prettified applied line response flushed immediately makes possible nice output longlived requests one twitter streaming api examples use cases prettified streamed response http stream f yourtwittername httpsstreamtwittercomstatusesfilterjson trackjustin bieber streamed output small chunks ala tail f send new tweet json object mentioning apple another server soon arrives twitter streaming api http stream f yourtwittername httpsstreamtwittercomstatusesfilterjson trackapple read tweet echo tweet http post exampleorgtweets done sessions default every request httpie makes completely independent previous ones host however httpie also supports persistent sessions via sessionsessionnameorpath option session custom http headers except ones starting content authentication cookies manually specified sent server persist requests host create new session http sessiontmpsessionjson exampleorg apitoken reuse existing session apitoken set http sessiontmpsessionjson exampleorg session data including credentials cookie data custom headers stored plain text means session files also created edited manually text editorthey regular json also means read anyone access session file named sessions create one named session per host example create new session named user exampleorg http sessionuser userpassword exampleorg xfoobar refer session name choose use session previously specified authentication http headers automatically set http sessionuser exampleorg create reuse different session simple specify different name http sessionuser userpassword exampleorg xbarfoo named sessionss data stored json files sessions subdirectory config directory httpiesessionshostnamejson appdatahttpiesessionshostnamejson windows anonymous sessions instead name also directly specify path session file allows sessions reused across multiple hosts http sessiontmpsessionjson exampleorg http sessiontmpsessionjson adminexampleorg http sessionhttpiesessionsanotherexampleorgtestjson exampleorg http sessionreadonlytmpsessionjson exampleorg readonly session use existing session file without updating requestresponse exchange created specify session name via sessionreadonlysessionnameorpath instead config httpie uses simple configjson file file doesnt exist default create manually config file directory default location configuration file httpieconfigjson appdatahttpieconfigjson windows config directory changed setting httpieconfigdir environment variable export httpieconfigdirtmphttpie http exampleorg view exact location run http debug configurable options currently httpie offers single configurable option defaultoptions array default empty default options applied every invocation httpie instance use config option change default color theme cat httpieconfigjson defaultoptions stylefruity even though technically possible include httpies options recommended modify default behaviour way would break compatibility wider world generate lot confusion unsetting previously specified options default options config file specified way unset particular invocation via nooption arguments passed command line eg nostyle nosession scripting using httpie shell scripts handy set checkstatus flag instructs httpie exit error http status one xx xx xx exit status unless follow set respectively binbash http checkstatus ignorestdin timeout head exampleorghealth devnull echo ok else case echo request timed echo unexpected http xx redirection echo http xx client error echo http xx server error echo exceeded maxredirectsn redirects echo error esac fi best practices default behaviour automatically reading stdin typically desirable noninteractive invocations likely want use ignorestdin option disable common gotcha without option httpie seemingly hangs happens httpie invoked example cron job stdin connected terminal therefore rules redirected input apply ie httpie starts read expecting request body passed since theres data eof stuck unless youre piping data httpie flag used scripts also might good set connection timeout limit prevent program hanging server never responds meta interface design syntax command arguments closely corresponds actual http requests sent wire advantage easy remember read often possible translate http request httpie argument list inlining request elements example compare http request post collection http xapikey useragent bacon contenttype applicationxwwwformurlencoded namevaluenamevalue httpie command sends http f post exampleorgcollection xapikey useragentbacon namevalue namevalue notice order elements syntax similar small portion command used control httpie doesnt directly correspond part request f asking httpie send form request two modes prettyall default terminal prettynone default redirected output allow userfriendly interactive use usage scripts httpie serves generic http client httpie still heavy development existing command line syntax options may change slightly httpie reaches final version changes recorded change log user support please use following support channels github issues bug reports feature requests gitter chat room ask questions discuss features general discussion stackoverflow ask questions please make sure use httpie tag tweet directly clihttp also tweet directly jakubroztocil related projects dependencies hood httpie uses two amazing libraries requests python http library humans pygments python syntax highlighter httpie friends httpie plays exceptionally well following tools jq cli json processor works great conjunction httpie httpprompt interactive shell httpie featuring autocomplete command syntax highlighting alternatives httpcat lowerlevel sister utility httpie constructing raw http requests command line curl swiss knife command line tool exceptional library transferring data urls contributing see contributingrst change log see changelog artwork logo claudia delgado animation allen smith github licence bsdclause license authors jakub roztocil jakubroztocil created httpie fine people contributed,httpie cli curllik tool human httpie pronounc aitchteeteepi command line http client goal make cli interact web servic humanfriendli possibl provid simpl http command allow send arbitrari http request use simpl natur syntax display color output httpie use test debug gener interact http server content main featur instal maco linux window etc python version unstabl version usag exampl http method request url querystr paramet url shortcut localhost default scheme request item escap rule json default behaviour explicit json nonstr json field form regular form file upload form http header default request header empti header header unset limit respons header cooki authent basic auth digest auth password prompt netrc auth plugin http redirect follow locat show intermediari redirect respons limit maximum redirect follow proxi environ variabl sock http server ssl certif verif custom ca bundl client side ssl certif ssl version output option part http exchang print view intermediari requestsrespons condit bodi download redirect input request data filenam termin output color format binari data redirect output download mode download filenam pipe download resum download note stream respons disabl buffer exampl use case session name session anonym session readonli session config config file directori configur option defaultopt unset previous specifi option script best practic meta interfac design user support relat project depend httpie friend altern contribut chang log artwork licenc author main featur express intuit syntax format color termin output builtin json support form file upload http proxi authent arbitrari request data custom header persist session wgetlik download linux maco window support plugin document test coverag instal maco maco httpie instal via homebrew recommend brew instal httpie macport port also avail port instal httpie linux linux distribut provid packag instal use system packag manag exampl debian ubuntu etc aptget instal httpie fedora dnf instal httpie cento rhel yum instal httpie arch linux pacman httpie window etc univers instal method work window mac os x linux alway provid latest version use pip make sure uptod version pip setuptool pip instal upgrad pip setuptool pip instal upgrad httpie pip instal fail reason tri easyinstal httpie fallback python version start version current develop python requir unstabl version also instal latest unreleas develop version directli master branch github workinprogress futur stabl releas experi might smooth maco instal homebrew brew instal httpie head otherwis pip pip instal upgrad httpsgithubcomjakubroztocilhttpiearchivemastertargz verifi current develop version identifi dev suffix exampl http version dev usag hello world http httpieorg synopsi http flag method url item item see also http help exampl custom http method http header json data http put exampleorg xapitoken namejohn submit form http f post exampleorg helloworld see request sent use one output option http v exampleorg use github api post comment issu authent http usernam post httpsapigithubcomreposjakubroztocilhttpieissuescom bodyhttpi awesom heart upload file use redirect input http exampleorg filejson download file save via redirect output http exampleorgfil file download file wget style http download exampleorgfil use name session make certain aspect commun persist request host http sessionloggedin usernamepassword httpbinorgget apikey http sessionloggedin httpbinorghead set custom host header work around miss dn record http localhost hostexamplecom http method name http method come right url argument http delet exampleorgtodo look similar actual requestlin sent delet todo http method argument omit command httpie default either get request data post request data request url inform httpie need perform request url default scheme somewhat unsurprisingli http omit argument http exampleorg work fine querystr paramet find manual construct url querystr paramet termin may appreci paramvalu syntax append url paramet dont worri escap separ shell addit special charact paramet name valu get automat urlescap oppos paramet specifi full url httpie doesnt modifi http httpsapigithubcomsearchrepositori qhttpie perpag get searchrepositoriesqhttpieperpag http url shortcut localhost addit curllik shorthand localhost support mean exampl would expand httplocalhost port omit port assum http foo get foo http host localhost http bar get bar http host localhost http get http host localhost default scheme httpie invok http default scheme http http exampleorg make request httpsexampleorg also use defaultschem urlschem option creat shortcut protocol http possibl support via plugin exampl httpieunixsocket plugin http httpunixfvarfrunfdockersockinfo creat alia alia httpunixhttp defaultschemehttpunix scheme omit httpunix fvarfrunfdockersockinfo request item differ request item type provid conveni mechan specifi http header simpl json form data file url paramet keyvalu pair specifi url common becom part actual request sent type distinguish separ use one expect file path valu item type descript http header namevalu arbitrari http header eg xapitoken url paramet namevalu append given namevalu pair queri string paramet url separ use data field fieldvalu fieldfiletxt request data field serial json object default formencod form f raw json field fieldjson fieldfilejson use send json one field need boolean number nest object array eg mealshamspam pie note quot form file field fielddirfil avail form f exampl screenshotpicturesimgpng presenc file field result multipartformdata request note data field arent way specifi request data redirect input mechan pass arbitrari request data escap rule use escap charact shouldnt use separ part thereof instanc foobar becom data keyvalu pair foo bar instead url paramet often necessari quot valu eg foobar baz field name header start minu eg fieldnam need place item special token prevent confus argument http httpbinorgpost namestartingwithdashfoo unusualheaderbar post post http unusualhead bar contenttyp applicationjson namestartingwithdash foo json json lingua franca modern web servic also implicit content type httpie use default simpl exampl http put exampleorg namejohn emailjohnexampleorg put http accept applicationjson acceptencod gzip deflat contenttyp applicationjson host exampleorg name john email johnexampleorg default behaviour command includ data request item serial json object default httpie also automat set follow header overwritten contenttyp applicationjson accept applicationjson explicit json use json j explicitli set accept applicationjson regardless whether send data shortcut set header via usual header notat http url acceptapplicationjson addit httpie tri detect json respons even contenttyp incorrectli textplain unknown nonstr json field nonstr field use separ allow emb raw json result object text raw json file also embed field use http put apiexamplecomperson namejohn age marriedfals hobbieshttp pie raw json descriptionaboutjohntxt emb text file bookmarksbookmarksjson emb json file put person http accept applicationjson contenttyp applicationjson host apiexamplecom age hobbi http pie descript john nice guy like pie marri fals name john bookmark httpie httpshttpieorg pleas note syntax command get unwieldi send complex data case alway better use redirect input http post apiexamplecomperson personjson form submit form similar send json request often differ ad form f option ensur data field serial contenttyp set applicationxwwwformurlencod charsetutf possibl make form data implicit content type instead json via config file regular form http form post apiexampleorgperson namejohn smith post person http contenttyp applicationxwwwformurlencod charsetutf namejohnsmith file upload form one file field present serial content type multipartformdata http f post examplecomjob namejohn smith cvdocumentscvpdf request follow html form submit form enctypemultipartformdata methodpost actionhttpexamplecomjob input typetext namenam input typefil namecv form note use simul file upload form field wherea emb file content regular text field valu http header set custom header use headervalu notat http exampleorg useragentbacon cookievaluedvisitoryesfoobar xfoobar refererhttpshttpieorg get http accept acceptencod gzip deflat cooki valuedvisitoryesfoobar host exampleorg refer httpshttpieorg userag bacon xfoo bar default request header coupl default header httpie set get http accept acceptencod gzip deflat userag httpievers host takenfromurl except host overwritten unset empti header header unset unset previous specifi header one default header use header http httpbinorghead accept userag send header empti valu use header http httpbinorghead header limit respons header maxheadersn option allow control number header httpie read give default ie there limit http maxhead httpbinorgget cooki http client send cooki server regular http header mean httpie offer special syntax specifi cooki usual headervalu notat use send singl cooki http exampleorg cookiesessionidfoo get http accept acceptencod gzip deflat connect keepal cooki sessionidfoo host exampleorg userag httpie send multipl cooki note header quot prevent shell interpret http exampleorg cookiesessionidfooanothercookiebar get http accept acceptencod gzip deflat connect keepal cooki sessionidfooanothercookiebar host exampleorg userag httpie often deal cooki request chanc youd appreci session featur authent current support authent scheme basic digest see auth plugin two flag control authent auth pass usernamepassword pair argument specifi usernam usernam youll prompt password request sent send empti password pass usernam usernamepasswordhostnam url syntax support well credenti pass via higher prioriti authtyp specifi auth mechan possibl valu basic digest default valu basic often omit basic auth http usernamepassword exampleorg digest auth http digest usernamepassword exampleorg password prompt http usernam exampleorg netrc authent inform netrc file default honor well exampl cat netrc machin httpbinorg login httpie password test http httpbinorgbasicauthhttpietest http ok disabl ignorenetrc option http ignorenetrc httpbinorgbasicauthhttpietest http unauthor auth plugin addit authent mechan instal plugin found python packag index here pick httpieapiauth apiauth httpieawsauth aw amazon httpieedgegrid edgegrid httpiehmacauth hmac httpiejwtauth jwtauth json web token httpienegoti spnego gss negoti httpientlm ntlm nt lan manag httpieoauth oauth requestshawk hawk http redirect default http redirect follow first respons shown http httpbinorgredirect follow locat instruct httpie follow locat header x respons show final respons instead use follow f option http follow httpbinorgredirect show intermediari redirect respons addit wish see intermediari requestsrespons use option well http follow httpbinorgredirect limit maximum redirect follow chang default limit maximum redirect use maxredirectslimit option http follow maxredirect httpbinorgredirect proxi specifi proxi use proxi argument protocol includ valu case redirect across protocol http proxyhttphttp proxyhttpshttp exampleorg basic authent http proxyhttphttpuserpass exampleorg environ variabl also configur proxi environ variabl allproxi httpproxi httpsproxi underli request librari pick well want disabl proxi configur environ variabl certain host specifi noproxi bashprofil export httpproxyhttp export httpsproxyhttp export noproxylocalhostexamplecom sock homebrewinstal httpie come sock proxi support box enabl sock proxi support nonhomebrew instal youll might need instal requestssock manual use pip pip instal u requestssock usag type proxi http proxyhttpsocksuserpasshostport proxyhttpssocksuserpasshostport exampleorg http server ssl certif verif skip host ssl certif verif pass verifyno default ye http verifyno httpsexampleorg custom ca bundl also use verifycabundlepath set custom ca bundl path http verifysslcustomcabundl httpsexampleorg client side ssl certif use client side certif ssl commun pass path cert file cert http certclientpem httpsexampleorg privat key contain cert file may pass path key file certkey http certclientcrt certkeyclientkey httpsexampleorg ssl version use sslprotocol specifi desir protocol version use default ssl v negoti highest protocol server instal openssl support avail protocol ssl ssl tl tl tl tl actual avail set protocol may vari depend openssl instal specifi vulner ssl v protocol talk outdat server http sslssl httpsvulnerableexampleorg output option default httpie output final respons whole respons messag print header well bodi control print via sever option header h respons header print bodi b respons bodi print verbos v print whole http exchang request respons option also enabl see print p select part http exchang verbos often use debug request gener document exampl http verbos put httpbinorgput helloworld put put http accept applicationjson acceptencod gzip deflat contenttyp applicationjson host httpbinorg userag httpiedev hello world http ok connect keepal contentlength contenttyp applicationjson date sun aug gmt server gunicorn part http exchang print output option hood shortcut power print p accept string charact repres specif part http exchang charact stand h request header b request bodi h respons header b respons bodi print request respons header http printhh put httpbinorgput helloworld view intermediari requestsrespons see http commun ie final requestrespons well possibl intermediari requestsrespons use option intermediari http commun includ follow redirect follow first unauthor request http digest authent use authdigest etc includ respons lead final one http follow httpbinorgredirect intermediari requestsrespons default format accord print p shortcut describ youd like chang use historyprint p option take argument print p appli intermediari request print intermediari requestsrespons differ final one http digest foobar p hh p h httpbinorgdigestauthauthfoobar condit bodi download optim respons bodi download server part output similar perform head request except appli http method use let say api return whole resourc updat interest respons header see statu code updat http header patch exampleorgreallyhugeresourc namenew name sinc print http header connect server close soon respons header receiv therefor bandwidth time isnt wast download bodi dont care respons header download alway even part output redirect input univers method pass request data redirect stdin standard inputpip data buffer process use request bodi multipl use way use pipe redirect file http put examplecomperson xapitoken personjson output anoth program grep unauthor varloghttpderrorlog http post exampleorgintrud use echo simpl data echo name john http patch examplecomperson xapitoken also use bash string http examplecom name john even pipe web servic togeth use httpie http get httpsapigithubcomreposjakubroztocilhttpi http post httpbinorgpost use cat enter multilin data termin cat http post examplecom past cat http post examplecomtodo contenttypetextplain buy milk call parent os x send content clipboard pbpast pbpast http put examplecom pass data stdin cannot combin data field specifi command line echo data http post exampleorg moredata invalid prevent httpie read stdin data use ignorestdin option request data filenam altern redirect stdin specifi filenam pathtofil whose content use came stdin advantag contenttyp header automat set appropri valu base filenam extens exampl follow request send verbatim content xml file contenttyp applicationxml http put httpbinorgput datafilexml termin output httpie sever thing default order make termin output easi read color format syntax highlight appli http header bodi make sens choos prefer color scheme via style option dont like default one see http help possibl valu also follow format appli http header sort name json data indent sort key unicod escap convert charact repres one option use control output process prettyal appli color format default termin output prettycolor appli color prettyformat appli format prettynon disabl output process default redirect output binari data binari data suppress termin output make safe perform request url send back binari data binari data suppress also redirect prettifi output connect close soon know respons bodi binari http exampleorgmoviemov nearli instantli see someth like http ok acceptrang byte contentencod gzip contenttyp videoquicktim transferencod chunk note binari data shown termin redirect output httpie use differ set default redirect output termin output differ format color arent appli unless pretti specifi respons bodi print unless one output option set also binari data isnt suppress reason make pipe httpi output anoth program download file work extra flag time raw respons bodi interest output redirect download file http exampleorgmoviemov moviemov download imag octocat resiz use imagemagick upload elsewher http octodexgithubcomimagesoriginaljpg convert resiz http exampleorgoctocat forc color format show request respons less pager http prettyal verbos exampleorg less r r flag tell less interpret color escap sequenc includ httpi output creat shortcut invok httpie color page output ad follow bashprofil function httpless httpless exampleorg http prettyal printhb less r download mode httpie featur download mode act similarli wget enabl use download flag respons header print termin stderr progress bar shown respons bodi save file http download httpsgithubcomjakubroztocilhttpiearchivemastertargz http ok contentdisposit attach filenamehttpiemastertargz contentlength contenttyp applicationxgzip download kb httpiemastertargz done kb kb download filenam three mutual exclus way httpie determin output filenam decreas prioriti explicitli provid via output file get overwritten alreadi exist append continu c server may specifi filenam option contentdisposit respons header lead dot strip serverprovid filenam last resort httpie use gener filenam combin request url respons contenttyp initi url alway use basi gener filenam even one redirect prevent data loss overwrit httpie add uniqu numer suffix filenam necessari unless specifi output pipe download also redirect respons bodi anoth program respons header progress still shown termin http httpsgithubcomjakubroztocilhttpiearchivemastertargz tar zxf resum download output specifi resum partial download use continu c option work server support rang request partial content respons server doesnt support whole file simpli download http dco filezip exampleorgfil note download option chang respons bodi treat still set custom header use session verbos v etc download alway impli follow redirect follow httpie exit statu code error bodi hasnt fulli download acceptencod cannot set download stream respons respons download print chunk allow stream larg file download without use much memori howev color format appli whole respons buffer process disabl buffer use stream flag make two thing happen output flush much smaller chunk without buffer make httpie behav kind like tail f url stream becom enabl even output prettifi appli line respons flush immedi make possibl nice output longliv request one twitter stream api exampl use case prettifi stream respons http stream f yourtwitternam httpsstreamtwittercomstatusesfilterjson trackjustin bieber stream output small chunk ala tail f send new tweet json object mention appl anoth server soon arriv twitter stream api http stream f yourtwitternam httpsstreamtwittercomstatusesfilterjson trackappl read tweet echo tweet http post exampleorgtweet done session default everi request httpie make complet independ previou one host howev httpie also support persist session via sessionsessionnameorpath option session custom http header except one start content authent cooki manual specifi sent server persist request host creat new session http sessiontmpsessionjson exampleorg apitoken reus exist session apitoken set http sessiontmpsessionjson exampleorg session data includ credenti cooki data custom header store plain text mean session file also creat edit manual text editorthey regular json also mean read anyon access session file name session creat one name session per host exampl creat new session name user exampleorg http sessionus userpassword exampleorg xfoobar refer session name choos use session previous specifi authent http header automat set http sessionus exampleorg creat reus differ session simpl specifi differ name http sessionus userpassword exampleorg xbarfoo name sessionss data store json file session subdirectori config directori httpiesessionshostnamejson appdatahttpiesessionshostnamejson window anonym session instead name also directli specifi path session file allow session reus across multipl host http sessiontmpsessionjson exampleorg http sessiontmpsessionjson adminexampleorg http sessionhttpiesessionsanotherexampleorgtestjson exampleorg http sessionreadonlytmpsessionjson exampleorg readonli session use exist session file without updat requestrespons exchang creat specifi session name via sessionreadonlysessionnameorpath instead config httpie use simpl configjson file file doesnt exist default creat manual config file directori default locat configur file httpieconfigjson appdatahttpieconfigjson window config directori chang set httpieconfigdir environ variabl export httpieconfigdirtmphttpi http exampleorg view exact locat run http debug configur option current httpie offer singl configur option defaultopt array default empti default option appli everi invoc httpie instanc use config option chang default color theme cat httpieconfigjson defaultopt stylefru even though technic possibl includ httpi option recommend modifi default behaviour way would break compat wider world gener lot confus unset previous specifi option default option config file specifi way unset particular invoc via nooption argument pass command line eg nostyl nosess script use httpie shell script handi set checkstatu flag instruct httpie exit error http statu one xx xx xx exit statu unless follow set respect binbash http checkstatu ignorestdin timeout head exampleorghealth devnul echo ok els case echo request time echo unexpect http xx redirect echo http xx client error echo http xx server error echo exceed maxredirectsn redirect echo error esac fi best practic default behaviour automat read stdin typic desir noninteract invoc like want use ignorestdin option disabl common gotcha without option httpie seemingli hang happen httpie invok exampl cron job stdin connect termin therefor rule redirect input appli ie httpie start read expect request bodi pass sinc there data eof stuck unless your pipe data httpie flag use script also might good set connect timeout limit prevent program hang server never respond meta interfac design syntax command argument close correspond actual http request sent wire advantag easi rememb read often possibl translat http request httpie argument list inlin request element exampl compar http request post collect http xapikey userag bacon contenttyp applicationxwwwformurlencod namevaluenamevalu httpie command send http f post exampleorgcollect xapikey useragentbacon namevalu namevalu notic order element syntax similar small portion command use control httpie doesnt directli correspond part request f ask httpie send form request two mode prettyal default termin prettynon default redirect output allow userfriendli interact use usag script httpie serv gener http client httpie still heavi develop exist command line syntax option may chang slightli httpie reach final version chang record chang log user support pleas use follow support channel github issu bug report featur request gitter chat room ask question discuss featur gener discuss stackoverflow ask question pleas make sure use httpie tag tweet directli clihttp also tweet directli jakubroztocil relat project depend hood httpie use two amaz librari request python http librari human pygment python syntax highlight httpie friend httpie play except well follow tool jq cli json processor work great conjunct httpie httpprompt interact shell httpie featur autocomplet command syntax highlight altern httpcat lowerlevel sister util httpie construct raw http request command line curl swiss knife command line tool except librari transfer data url contribut see contributingrst chang log see changelog artwork logo claudia delgado anim allen smith github licenc bsdclaus licens author jakub roztocil jakubroztocil creat httpie fine peopl contribut,httpie cli curllike tool human httpie pronounced aitchteeteepie command line http client goal make cli interaction web service humanfriendly possible provides simple http command allows sending arbitrary http request using simple natural syntax display colorized output httpie used testing debugging generally interacting http server content main feature installation macos linux window etc python version unstable version usage example http method request url querystring parameter url shortcut localhost default scheme request item escaping rule json default behaviour explicit json nonstring json field form regular form file upload form http header default request header empty header header unsetting limiting response header cooky authentication basic auth digest auth password prompt netrc auth plugins http redirects follow location showing intermediary redirect response limiting maximum redirects followed proxy environment variable sock http server ssl certificate verification custom ca bundle client side ssl certificate ssl version output option part http exchange printed viewing intermediary requestsresponses conditional body download redirected input request data filename terminal output color formatting binary data redirected output download mode downloaded filename piping downloading resuming downloads note streamed response disabling buffering example use case session named session anonymous session readonly session config config file directory configurable option defaultoptions unsetting previously specified option scripting best practice meta interface design user support related project dependency httpie friend alternative contributing change log artwork licence author main feature expressive intuitive syntax formatted colorized terminal output builtin json support form file uploads http proxy authentication arbitrary request data custom header persistent session wgetlike downloads linux macos window support plugins documentation test coverage installation macos macos httpie installed via homebrew recommended brew install httpie macports port also available port install httpie linux linux distribution provide package installed using system package manager example debian ubuntu etc aptget install httpie fedora dnf install httpie centos rhel yum install httpie arch linux pacman httpie window etc universal installation method work window mac o x linux always provides latest version use pip make sure uptodate version pip setuptools pip install upgrade pip setuptools pip install upgrade httpie pip installation fails reason try easyinstall httpie fallback python version starting version currently development python required unstable version also install latest unreleased development version directly master branch github workinprogress future stable release experience might smooth macos install homebrew brew install httpie head otherwise pip pip install upgrade httpsgithubcomjakubroztocilhttpiearchivemastertargz verify current development version identifier dev suffix example http version dev usage hello world http httpieorg synopsis http flag method url item item see also http help example custom http method http header json data http put exampleorg xapitoken namejohn submitting form http f post exampleorg helloworld see request sent using one output option http v exampleorg use github api post comment issue authentication http username post httpsapigithubcomreposjakubroztocilhttpieissuescomments bodyhttpie awesome heart upload file using redirected input http exampleorg filejson download file save via redirected output http exampleorgfile file download file wget style http download exampleorgfile use named session make certain aspect communication persistent request host http sessionloggedin usernamepassword httpbinorgget apikey http sessionloggedin httpbinorgheaders set custom host header work around missing dns record http localhost hostexamplecom http method name http method come right url argument http delete exampleorgtodos look similar actual requestline sent delete todos http method argument omitted command httpie default either get request data post request data request url information httpie need perform request url default scheme somewhat unsurprisingly http omitted argument http exampleorg work fine querystring parameter find manually constructing url querystring parameter terminal may appreciate paramvalue syntax appending url parameter dont worry escaping separator shell additionally special character parameter name value get automatically urlescaped opposed parameter specified full url httpie doesnt modify http httpsapigithubcomsearchrepositories qhttpie perpage get searchrepositoriesqhttpieperpage http url shortcut localhost additionally curllike shorthand localhost supported mean example would expand httplocalhost port omitted port assumed http foo get foo http host localhost http bar get bar http host localhost http get http host localhost default scheme httpie invoked http default scheme http http exampleorg make request httpsexampleorg also use defaultscheme urlscheme option create shortcut protocol http possibly supported via plugins example httpieunixsocket plugin http httpunixfvarfrunfdockersockinfo create alias alias httpunixhttp defaultschemehttpunix scheme omitted httpunix fvarfrunfdockersockinfo request item different request item type provide convenient mechanism specifying http header simple json form data file url parameter keyvalue pair specified url common become part actual request sent type distinguished separator used one expect file path value item type description http header namevalue arbitrary http header eg xapitoken url parameter namevalue appends given namevalue pair query string parameter url separator used data field fieldvalue fieldfiletxt request data field serialized json object default formencoded form f raw json field fieldjson fieldfilejson useful sending json one field need boolean number nested object array eg mealshamspam pie note quote form file field fielddirfile available form f example screenshotpicturesimgpng presence file field result multipartformdata request note data field arent way specify request data redirected input mechanism passing arbitrary request data escaping rule use escape character shouldnt used separator part thereof instance foobar become data keyvalue pair foo bar instead url parameter often necessary quote value eg foobar baz field name header start minus eg fieldname need place item special token prevent confusion argument http httpbinorgpost namestartingwithdashfoo unusualheaderbar post post http unusualheader bar contenttype applicationjson namestartingwithdash foo json json lingua franca modern web service also implicit content type httpie us default simple example http put exampleorg namejohn emailjohnexampleorg put http accept applicationjson acceptencoding gzip deflate contenttype applicationjson host exampleorg name john email johnexampleorg default behaviour command includes data request item serialized json object default httpie also automatically set following header overwritten contenttype applicationjson accept applicationjson explicit json use json j explicitly set accept applicationjson regardless whether sending data shortcut setting header via usual header notation http url acceptapplicationjson additionally httpie try detect json response even contenttype incorrectly textplain unknown nonstring json field nonstring field use separator allows embed raw json resulting object text raw json file also embedded field using http put apiexamplecomperson namejohn age marriedfalse hobbieshttp pie raw json descriptionaboutjohntxt embed text file bookmarksbookmarksjson embed json file put person http accept applicationjson contenttype applicationjson host apiexamplecom age hobby http pie description john nice guy like pie married false name john bookmark httpie httpshttpieorg please note syntax command get unwieldy sending complex data case always better use redirected input http post apiexamplecomperson personjson form submitting form similar sending json request often difference adding form f option ensures data field serialized contenttype set applicationxwwwformurlencoded charsetutf possible make form data implicit content type instead json via config file regular form http form post apiexampleorgperson namejohn smith post person http contenttype applicationxwwwformurlencoded charsetutf namejohnsmith file upload form one file field present serialization content type multipartformdata http f post examplecomjobs namejohn smith cvdocumentscvpdf request following html form submitted form enctypemultipartformdata methodpost actionhttpexamplecomjobs input typetext namename input typefile namecv form note used simulate file upload form field whereas embeds file content regular text field value http header set custom header use headervalue notation http exampleorg useragentbacon cookievaluedvisitoryesfoobar xfoobar refererhttpshttpieorg get http accept acceptencoding gzip deflate cookie valuedvisitoryesfoobar host exampleorg referer httpshttpieorg useragent bacon xfoo bar default request header couple default header httpie set get http accept acceptencoding gzip deflate useragent httpieversion host takenfromurl except host overwritten unset empty header header unsetting unset previously specified header one default header use header http httpbinorgheaders accept useragent send header empty value use header http httpbinorgheaders header limiting response header maxheadersn option allows control number header httpie read giving default ie there limit http maxheaders httpbinorgget cooky http client send cooky server regular http header mean httpie offer special syntax specifying cooky usual headervalue notation used send single cookie http exampleorg cookiesessionidfoo get http accept acceptencoding gzip deflate connection keepalive cookie sessionidfoo host exampleorg useragent httpie send multiple cooky note header quoted prevent shell interpreting http exampleorg cookiesessionidfooanothercookiebar get http accept acceptencoding gzip deflate connection keepalive cookie sessionidfooanothercookiebar host exampleorg useragent httpie often deal cooky request chance youd appreciate session feature authentication currently supported authentication scheme basic digest see auth plugins two flag control authentication auth pas usernamepassword pair argument specify username username youll prompted password request sent send empty password pas username usernamepasswordhostname url syntax supported well credential passed via higher priority authtype specify auth mechanism possible value basic digest default value basic often omitted basic auth http usernamepassword exampleorg digest auth http digest usernamepassword exampleorg password prompt http username exampleorg netrc authentication information netrc file default honored well example cat netrc machine httpbinorg login httpie password test http httpbinorgbasicauthhttpietest http ok disabled ignorenetrc option http ignorenetrc httpbinorgbasicauthhttpietest http unauthorized auth plugins additional authentication mechanism installed plugins found python package index here pick httpieapiauth apiauth httpieawsauth aws amazon httpieedgegrid edgegrid httpiehmacauth hmac httpiejwtauth jwtauth json web token httpienegotiate spnego g negotiate httpientlm ntlm nt lan manager httpieoauth oauth requestshawk hawk http redirects default http redirects followed first response shown http httpbinorgredirect follow location instruct httpie follow location header x response show final response instead use follow f option http follow httpbinorgredirect showing intermediary redirect response additionally wish see intermediary requestsresponses use option well http follow httpbinorgredirect limiting maximum redirects followed change default limit maximum redirects use maxredirectslimit option http follow maxredirects httpbinorgredirect proxy specify proxy used proxy argument protocol included value case redirects across protocol http proxyhttphttp proxyhttpshttps exampleorg basic authentication http proxyhttphttpuserpass exampleorg environment variable also configure proxy environment variable allproxy httpproxy httpsproxy underlying request library pick well want disable proxy configured environment variable certain host specify noproxy bashprofile export httpproxyhttp export httpsproxyhttps export noproxylocalhostexamplecom sock homebrewinstalled httpie come sock proxy support box enable sock proxy support nonhomebrew installation youll might need install requestssocks manually using pip pip install u requestssocks usage type proxy http proxyhttpsocksuserpasshostport proxyhttpssocksuserpasshostport exampleorg http server ssl certificate verification skip host ssl certificate verification pas verifyno default yes http verifyno httpsexampleorg custom ca bundle also use verifycabundlepath set custom ca bundle path http verifysslcustomcabundle httpsexampleorg client side ssl certificate use client side certificate ssl communication pas path cert file cert http certclientpem httpsexampleorg private key contained cert file may pas path key file certkey http certclientcrt certkeyclientkey httpsexampleorg ssl version use sslprotocol specify desired protocol version use default ssl v negotiate highest protocol server installation openssl support available protocol ssl ssl tl tl tl tl actually available set protocol may vary depending openssl installation specify vulnerable ssl v protocol talk outdated server http sslssl httpsvulnerableexampleorg output option default httpie output final response whole response message printed header well body control printed via several option header h response header printed body b response body printed verbose v print whole http exchange request response option also enables see print p selects part http exchange verbose often useful debugging request generating documentation example http verbose put httpbinorgput helloworld put put http accept applicationjson acceptencoding gzip deflate contenttype applicationjson host httpbinorg useragent httpiedev hello world http ok connection keepalive contentlength contenttype applicationjson date sun aug gmt server gunicorn part http exchange printed output option hood shortcut powerful print p accepts string character represents specific part http exchange character stand h request header b request body h response header b response body print request response header http printhh put httpbinorgput helloworld viewing intermediary requestsresponses see http communication ie final requestresponse well possible intermediary requestsresponses use option intermediary http communication include followed redirects follow first unauthorized request http digest authentication used authdigest etc include response lead final one http follow httpbinorgredirect intermediary requestsresponse default formatted according print p shortcut described youd like change use historyprint p option take argument print p applies intermediary request print intermediary requestsresponses differently final one http digest foobar p hh p h httpbinorgdigestauthauthfoobar conditional body download optimization response body downloaded server part output similar performing head request except applies http method use let say api return whole resource updated interested response header see status code update http header patch exampleorgreallyhugeresource namenew name since printing http header connection server closed soon response header received therefore bandwidth time isnt wasted downloading body dont care response header downloaded always even part output redirected input universal method passing request data redirected stdin standard inputpiping data buffered processing used request body multiple useful way use piping redirect file http put examplecomperson xapitoken personjson output another program grep unauthorized varloghttpderrorlog http post exampleorgintruders use echo simple data echo name john http patch examplecomperson xapitoken also use bash string http examplecom name john even pipe web service together using httpie http get httpsapigithubcomreposjakubroztocilhttpie http post httpbinorgpost use cat enter multiline data terminal cat http post examplecom paste cat http post examplecomtodos contenttypetextplain buy milk call parent o x send content clipboard pbpaste pbpaste http put examplecom passing data stdin cannot combined data field specified command line echo data http post exampleorg moredata invalid prevent httpie reading stdin data use ignorestdin option request data filename alternative redirected stdin specifying filename pathtofile whose content used came stdin advantage contenttype header automatically set appropriate value based filename extension example following request sends verbatim content xml file contenttype applicationxml http put httpbinorgput datafilexml terminal output httpie several thing default order make terminal output easy read color formatting syntax highlighting applied http header body make sense choose preferred color scheme via style option dont like default one see http help possible value also following formatting applied http header sorted name json data indented sorted key unicode escape converted character represent one option used control output processing prettyall apply color formatting default terminal output prettycolors apply color prettyformat apply formatting prettynone disables output processing default redirected output binary data binary data suppressed terminal output make safe perform request url send back binary data binary data suppressed also redirected prettified output connection closed soon know response body binary http exampleorgmoviemov nearly instantly see something like http ok acceptranges byte contentencoding gzip contenttype videoquicktime transferencoding chunked note binary data shown terminal redirected output httpie us different set default redirected output terminal output difference formatting color arent applied unless pretty specified response body printed unless one output option set also binary data isnt suppressed reason make piping httpies output another program downloading file work extra flag time raw response body interest output redirected download file http exampleorgmoviemov moviemov download image octocat resize using imagemagick upload elsewhere http octodexgithubcomimagesoriginaljpg convert resize http exampleorgoctocats force colorizing formatting show request response le pager http prettyall verbose exampleorg le r r flag tell le interpret color escape sequence included httpies output create shortcut invoking httpie colorized paged output adding following bashprofile function httpless httpless exampleorg http prettyall printhb le r download mode httpie feature download mode act similarly wget enabled using download flag response header printed terminal stderr progress bar shown response body saved file http download httpsgithubcomjakubroztocilhttpiearchivemastertargz http ok contentdisposition attachment filenamehttpiemastertargz contentlength contenttype applicationxgzip downloading kb httpiemastertargz done kb kb downloaded filename three mutually exclusive way httpie determines output filename decreasing priority explicitly provide via output file get overwritten already exists appended continue c server may specify filename optional contentdisposition response header leading dot stripped serverprovided filename last resort httpie us generate filename combination request url response contenttype initial url always used basis generated filename even one redirects prevent data loss overwriting httpie add unique numerical suffix filename necessary unless specified output piping downloading also redirect response body another program response header progress still shown terminal http httpsgithubcomjakubroztocilhttpiearchivemastertargz tar zxf resuming downloads output specified resume partial download using continue c option work server support range request partial content response server doesnt support whole file simply downloaded http dco filezip exampleorgfile note download option change response body treated still set custom header use session verbose v etc download always implies follow redirects followed httpie exit status code error body hasnt fully downloaded acceptencoding cannot set download streamed response response downloaded printed chunk allows streaming large file downloads without using much memory however color formatting applied whole response buffered processed disabling buffering use stream flag make two thing happen output flushed much smaller chunk without buffering make httpie behave kind like tail f url streaming becomes enabled even output prettified applied line response flushed immediately make possible nice output longlived request one twitter streaming api example use case prettified streamed response http stream f yourtwittername httpsstreamtwittercomstatusesfilterjson trackjustin bieber streamed output small chunk ala tail f send new tweet json object mentioning apple another server soon arrives twitter streaming api http stream f yourtwittername httpsstreamtwittercomstatusesfilterjson trackapple read tweet echo tweet http post exampleorgtweets done session default every request httpie make completely independent previous one host however httpie also support persistent session via sessionsessionnameorpath option session custom http header except one starting content authentication cooky manually specified sent server persist request host create new session http sessiontmpsessionjson exampleorg apitoken reuse existing session apitoken set http sessiontmpsessionjson exampleorg session data including credential cookie data custom header stored plain text mean session file also created edited manually text editorthey regular json also mean read anyone access session file named session create one named session per host example create new session named user exampleorg http sessionuser userpassword exampleorg xfoobar refer session name choose use session previously specified authentication http header automatically set http sessionuser exampleorg create reuse different session simple specify different name http sessionuser userpassword exampleorg xbarfoo named sessions data stored json file session subdirectory config directory httpiesessionshostnamejson appdatahttpiesessionshostnamejson window anonymous session instead name also directly specify path session file allows session reused across multiple host http sessiontmpsessionjson exampleorg http sessiontmpsessionjson adminexampleorg http sessionhttpiesessionsanotherexampleorgtestjson exampleorg http sessionreadonlytmpsessionjson exampleorg readonly session use existing session file without updating requestresponse exchange created specify session name via sessionreadonlysessionnameorpath instead config httpie us simple configjson file file doesnt exist default create manually config file directory default location configuration file httpieconfigjson appdatahttpieconfigjson window config directory changed setting httpieconfigdir environment variable export httpieconfigdirtmphttpie http exampleorg view exact location run http debug configurable option currently httpie offer single configurable option defaultoptions array default empty default option applied every invocation httpie instance use config option change default color theme cat httpieconfigjson defaultoptions stylefruity even though technically possible include httpies option recommended modify default behaviour way would break compatibility wider world generate lot confusion unsetting previously specified option default option config file specified way unset particular invocation via nooption argument passed command line eg nostyle nosession scripting using httpie shell script handy set checkstatus flag instructs httpie exit error http status one xx xx xx exit status unless follow set respectively binbash http checkstatus ignorestdin timeout head exampleorghealth devnull echo ok else case echo request timed echo unexpected http xx redirection echo http xx client error echo http xx server error echo exceeded maxredirectsn redirects echo error esac fi best practice default behaviour automatically reading stdin typically desirable noninteractive invocation likely want use ignorestdin option disable common gotcha without option httpie seemingly hang happens httpie invoked example cron job stdin connected terminal therefore rule redirected input apply ie httpie start read expecting request body passed since there data eof stuck unless youre piping data httpie flag used script also might good set connection timeout limit prevent program hanging server never responds meta interface design syntax command argument closely corresponds actual http request sent wire advantage easy remember read often possible translate http request httpie argument list inlining request element example compare http request post collection http xapikey useragent bacon contenttype applicationxwwwformurlencoded namevaluenamevalue httpie command sends http f post exampleorgcollection xapikey useragentbacon namevalue namevalue notice order element syntax similar small portion command used control httpie doesnt directly correspond part request f asking httpie send form request two mode prettyall default terminal prettynone default redirected output allow userfriendly interactive use usage script httpie serf generic http client httpie still heavy development existing command line syntax option may change slightly httpie reach final version change recorded change log user support please use following support channel github issue bug report feature request gitter chat room ask question discus feature general discussion stackoverflow ask question please make sure use httpie tag tweet directly clihttp also tweet directly jakubroztocil related project dependency hood httpie us two amazing library request python http library human pygments python syntax highlighter httpie friend httpie play exceptionally well following tool jq cli json processor work great conjunction httpie httpprompt interactive shell httpie featuring autocomplete command syntax highlighting alternative httpcat lowerlevel sister utility httpie constructing raw http request command line curl swiss knife command line tool exceptional library transferring data url contributing see contributingrst change log see changelog artwork logo claudia delgado animation allen smith github licence bsdclause license author jakub roztocil jakubroztocil created httpie fine people contributed
11,Python,"GitHub - josephmisiti/awesome-machine-learning: A curated list of awesome Machine Learning frameworks, libraries and software.","Awesome Machine Learning 
A curated list of awesome machine learning frameworks, libraries and software (by language). Inspired by awesome-php.
If you want to contribute to this list (please do), send me a pull request or contact me @josephmisiti.
Also, a listed repository should be deprecated if:

Repository's owner explicitly say that ""this library is not maintained"".
Not committed for long time (2~3 years).

Further resources:


For a list of free machine learning books available for download, go here.


For a list of (mostly) free machine learning courses available online, go here.


For a list of blogs and newsletters on data science and machine learning, go here.


For a list of free-to-attend meetups and local events, go here.


Table of Contents
Frameworks and Libraries

Awesome Machine Learning 

Table of Contents

Frameworks and Libraries
Tools


APL

General-Purpose Machine Learning


C

General-Purpose Machine Learning
Computer Vision


C++

Computer Vision
General-Purpose Machine Learning
Natural Language Processing
Speech Recognition
Sequence Analysis
Gesture Detection


Common Lisp

General-Purpose Machine Learning


Clojure

Natural Language Processing
General-Purpose Machine Learning
Data Analysis / Data Visualization


Crystal

General-Purpose Machine Learning


Elixir

General-Purpose Machine Learning
Natural Language Processing


Erlang

General-Purpose Machine Learning


Go

Natural Language Processing
General-Purpose Machine Learning
Spatial analysis and geometry
Data Analysis / Data Visualization
Computer vision


Haskell

General-Purpose Machine Learning


Java

Natural Language Processing
General-Purpose Machine Learning
Speech Recognition
Data Analysis / Data Visualization
Deep Learning


Javascript

Natural Language Processing
Data Analysis / Data Visualization
General-Purpose Machine Learning
Misc
Demos and Scripts


Julia

General-Purpose Machine Learning
Natural Language Processing
Data Analysis / Data Visualization
Misc Stuff / Presentations


Lua

General-Purpose Machine Learning
Demos and Scripts


Matlab

Computer Vision
Natural Language Processing
General-Purpose Machine Learning
Data Analysis / Data Visualization


.NET

Computer Vision
Natural Language Processing
General-Purpose Machine Learning
Data Analysis / Data Visualization


Objective C

General-Purpose Machine Learning


OCaml

General-Purpose Machine Learning


Perl

Data Analysis / Data Visualization
General-Purpose Machine Learning


Perl 6

Data Analysis / Data Visualization
General-Purpose Machine Learning


PHP

Natural Language Processing
General-Purpose Machine Learning


Python

Computer Vision
Natural Language Processing
General-Purpose Machine Learning
Data Analysis / Data Visualization
Misc Scripts / iPython Notebooks / Codebases
Neural Networks
Kaggle Competition Source Code
Reinforcement Learning


Ruby

Natural Language Processing
General-Purpose Machine Learning
Data Analysis / Data Visualization
Misc


Rust

General-Purpose Machine Learning


R

General-Purpose Machine Learning
Data Analysis / Data Visualization


SAS

General-Purpose Machine Learning
Data Analysis / Data Visualization
Natural Language Processing
Demos and Scripts


Scala

Natural Language Processing
Data Analysis / Data Visualization
General-Purpose Machine Learning


Scheme

Neural Networks


Swift

General-Purpose Machine Learning


TensorFlow

General-Purpose Machine Learning


Tools

Neural Networks
Misc


Credits
ÂÜô‰∏™ËÑöÊú¨ÊääÂÆÉ‰ª¨Áà¨‰∏ãÊù• - Demos and Scripts


Scala

Natural Language Processing
Data Analysis / Data Visualization
General-Purpose Machine Learning


Scheme

Neural Networks


Swift

General-Purpose Machine Learning


TensorFlow

General-Purpose Machine Learning



Tools

Neural Networks
Misc

Credits

APL

General-Purpose Machine Learning

naive-apl - Naive Bayesian Classifier implementation in APL. [Deprecated]


C

General-Purpose Machine Learning

Darknet - Darknet is an open source neural network framework written in C and CUDA. It is fast, easy to install, and supports CPU and GPU computation.
Recommender - A C library for product recommendations/suggestions using collaborative filtering (CF).
Hybrid Recommender System - A hybrid recommender system based upon scikit-learn algorithms. [Deprecated]
neonrvm - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.


Computer Vision

CCV - C-based/Cached/Core Computer Vision Library, A Modern Computer Vision Library.
VLFeat - VLFeat is an open and portable library of computer vision algorithms, which has Matlab toolbox.


C++

Computer Vision

DLib - DLib has C++ and Python interfaces for face detection and training general object detectors.
EBLearn - Eblearn is an object-oriented C++ library that implements various machine learning models [Deprecated]
OpenCV - OpenCV has C++, C, Python, Java and MATLAB interfaces and supports Windows, Linux, Android and Mac OS.
VIGRA - VIGRA is a generic cross-platform C++ computer vision and machine learning library for volumes of arbitrary dimensionality with Python bindings.


General-Purpose Machine Learning

BanditLib - A simple Multi-armed Bandit library. [Deprecated]
Caffe - A deep learning framework developed with cleanliness, readability, and speed in mind. [DEEP LEARNING]
CatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, contains fast inference implementation and supports CPU and GPU (even multi-GPU) computation.
CNTK - The Computational Network Toolkit (CNTK) by Microsoft Research, is a unified deep-learning toolkit that describes neural networks as a series of computational steps via a directed graph.
CUDA - This is a fast C++/CUDA implementation of convolutional [DEEP LEARNING]
DeepDetect - A machine learning API and server written in C++11. It makes state of the art machine learning easy to work with and integrate into existing applications.
Distributed Machine learning Tool Kit (DMTK) - A distributed machine learning (parameter server) framework by Microsoft. Enables training models on large data sets across multiple machines. Current tools bundled with it include: LightLDA and Distributed (Multisense) Word Embedding.
DLib - A suite of ML tools designed to be easy to imbed in other applications.
DSSTNE - A software library created by Amazon for training and deploying deep neural networks using GPUs which emphasizes speed and scale over experimental flexibility.
DyNet - A dynamic neural network library working well with networks that have dynamic structures that change for every training instance. Written in C++ with bindings in Python.
Fido - A highly-modular C++ machine learning library for embedded electronics and robotics.
igraph - General purpose graph library.
Intel(R) DAAL - A high performance software library developed by Intel and optimized for Intel's architectures. Library provides algorithmic building blocks for all stages of data analytics and allows to process data in batch, online and distributed modes.
LightGBM - Microsoft's fast, distributed, high performance gradient boosting (GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks.
libfm - A generic approach that allows to mimic most factorization models by feature engineering.
MLDB - The Machine Learning Database is a database designed for machine learning. Send it commands over a RESTful API to store data, explore it using SQL, then train machine learning models and expose them as APIs.
mlpack - A scalable C++ machine learning library.
MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.
proNet-core - A general-purpose network embedding framework: pair-wise representations optimization Network Edit.
PyCUDA - Python interface to CUDA
ROOT - A modular scientific software framework. It provides all the functionalities needed to deal with big data processing, statistical analysis, visualization and storage.
shark - A fast, modular, feature-rich open-source C++ machine learning library.
Shogun - The Shogun Machine Learning Toolbox.
sofia-ml - Suite of fast incremental algorithms.
Stan - A probabilistic programming language implementing full Bayesian statistical inference with Hamiltonian Monte Carlo sampling.
Timbl - A software package/C++ library implementing several memory-based learning algorithms, among which IB1-IG, an implementation of k-nearest neighbor classification, and IGTree, a decision-tree approximation of IB1-IG. Commonly used for NLP.
Vowpal Wabbit (VW) - A fast out-of-core learning system.
Warp-CTC - A fast parallel implementation of Connectionist Temporal Classification (CTC), on both CPU and GPU.
XGBoost - A parallelized optimized general purpose gradient boosting library.
ThunderGBM - A fast library for GBDTs and Random Forests on GPUs.
ThunderSVM - A fast SVM library on GPUs and CPUs.
LKYDeepNN - A header-only C++11 Neural Network library. Low dependency, native traditional chinese document.
xLearn - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertisement and recommender systems.
Featuretools - A library for automated feature engineering. It excels at transforming transactional and relational datasets into feature matrices for machine learning using reusable feature engineering ""primitives"".
skynet - A library for learning neural network, has C-interface, net set in JSON. Written in C++ with bindings in Python, C++ and C#.
Feast - A feature store for the management, discovery, and access of machine learning features. Feast provides a consistent view of feature data for both model training and model serving.
Polyaxon - A platform for reproducible and scalable machine learning and deep learning.


Natural Language Processing

BLLIP Parser - BLLIP Natural Language Parser (also known as the Charniak-Johnson parser).
colibri-core - C++ library, command line tools, and Python binding for extracting and working with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.
CRF++ - Open source implementation of Conditional Random Fields (CRFs) for segmenting/labeling sequential data & other Natural Language Processing tasks. [Deprecated]
CRFsuite - CRFsuite is an implementation of Conditional Random Fields (CRFs) for labeling sequential data. [Deprecated]
frog - Memory-based NLP suite developed for Dutch: PoS tagger, lemmatiser, dependency parser, NER, shallow parser, morphological analyzer.
libfolia - C++ library for the FoLiA format
MeTA - MeTA : ModErn Text Analysis is a C++ Data Sciences Toolkit that facilitates mining big text data.
MIT Information Extraction Toolkit - C, C++, and Python tools for named entity recognition and relation extraction
ucto - Unicode-aware regular-expression based tokenizer for various languages. Tool and C++ library. Supports FoLiA format.


Speech Recognition

Kaldi - Kaldi is a toolkit for speech recognition written in C++ and licensed under the Apache License v2.0. Kaldi is intended for use by speech recognition researchers.


Sequence Analysis

ToPS - This is an objected-oriented framework that facilitates the integration of probabilistic models for sequences over a user defined alphabet. [Deprecated]


Gesture Detection

grt - The Gesture Recognition Toolkit (GRT) is a cross-platform, open-source, C++ machine learning library designed for real-time gesture recognition.


Common Lisp

General-Purpose Machine Learning

mgl - Neural networks (boltzmann machines, feed-forward and recurrent nets), Gaussian Processes.
mgl-gpr - Evolutionary algorithms. [Deprecated]
cl-libsvm - Wrapper for the libsvm support vector machine library. [Deprecated]
cl-online-learning - Online learning algorithms (Perceptron, AROW, SCW, Logistic Regression).
cl-random-forest - Implementation of Random Forest in Common Lisp.


Clojure

Natural Language Processing

Clojure-openNLP - Natural Language Processing in Clojure (opennlp).
Infections-clj - Rails-like inflection library for Clojure and ClojureScript.


General-Purpose Machine Learning

Touchstone - Clojure A/B testing library. [Deprecated]
Clojush - The Push programming language and the PushGP genetic programming system implemented in Clojure.
Infer - Inference and machine learning in Clojure. [Deprecated]
Clj-ML - A machine learning library for Clojure built on top of Weka and friends. [Deprecated]
DL4CLJ - Clojure wrapper for Deeplearning4j.
Encog - Clojure wrapper for Encog (v3) (Machine-Learning framework that specializes in neural-nets). [Deprecated]
Fungp - A genetic programming library for Clojure. [Deprecated]
Statistiker - Basic Machine Learning algorithms in Clojure. [Deprecated]
clortex - General Machine Learning library using Numenta‚Äôs Cortical Learning Algorithm. [Deprecated]
comportex - Functionally composable Machine Learning library using Numenta‚Äôs Cortical Learning Algorithm. [Deprecated]
cortex - Neural networks, regression and feature learning in Clojure.
lambda-ml - Simple, concise implementations of machine learning techniques and utilities in Clojure.


Data Analysis / Data Visualization

Incanter - Incanter is a Clojure-based, R-like platform for statistical computing and graphics.
PigPen - Map-Reduce for Clojure.
Envision - Clojure Data Visualisation library, based on Statistiker and D3.


Crystal

General-Purpose Machine Learning

machine - Simple machine learning algorithm.
crystal-fann - FANN (Fast Artificial Neural Network) binding.


Elixir

General-Purpose Machine Learning

Simple Bayes - A Simple Bayes / Naive Bayes implementation in Elixir.
emel - A simple and functional machine learning library written in Elixir.
Tensorflex - Tensorflow bindings for the Elixir programming language.


Natural Language Processing

Stemmer - An English (Porter2) stemming implementation in Elixir.


Erlang

General-Purpose Machine Learning

Disco - Map Reduce in Erlang. [Deprecated]
Yanni - ANN neural networks using Erlangs leightweight processes.


Go

Natural Language Processing

snowball - Snowball Stemmer for Go.
word-embedding - Word Embeddings: the full implementation of word2vec, GloVe in Go.
sentences - Golang implementation of Punkt sentence tokenizer.
go-ngram - In-memory n-gram index with compression. [Deprecated]
paicehusk - Golang implementation of the Paice/Husk Stemming Algorithm. [Deprecated]
go-porterstemmer - A native Go clean room implementation of the Porter Stemming algorithm. [Deprecated]


General-Purpose Machine Learning

birdland - A recommendation library in Go.
eaopt - An evolutionary optimization library.
leaves - A pure Go implementation of the prediction part of GBRTs, including XGBoost and LightGBM.
gobrain - Neural Networks written in Go.
go-mxnet-predictor - Go binding for MXNet c_predict_api to do inference with pre-trained model.
go-ml-transpiler - An open source Go transpiler for machine learning models.
golearn - Machine learning for Go.
goml - Machine learning library written in pure Go.
gorgonia - Deep learning in Go.
gorse - An offline recommender system backend based on collaborative filtering written in Go.
therfoo - An embedded deep learning library for Go.
neat - Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT). [Deprecated]
go-pr - Pattern recognition package in Go lang. [Deprecated]
go-ml - Linear / Logistic regression, Neural Networks, Collaborative Filtering and Gaussian Multivariate Distribution. [Deprecated]
GoNN - GoNN is an implementation of Neural Network in Go Language, which includes BPNN, RBF, PCN. [Deprecated]
bayesian - Naive Bayesian Classification for Golang. [Deprecated]
go-galib - Genetic Algorithms library written in Go / Golang. [Deprecated]
Cloudforest - Ensembles of decision trees in Go/Golang. [Deprecated]
go-dnn - Deep Neural Networks for Golang (powered by MXNet)


Spatial analysis and geometry

go-geom - Go library to handle geometries.
gogeo - Spherical geometry in Go.


Data Analysis / Data Visualization

gota - Dataframes.
gonum/mat - A linear algebra package for Go.
gonum/optimize - Implementations of optimization algorithms.
gonum/plot - A plotting library.
gonum/stat - A statistics library.
SVGo - The Go Language library for SVG generation.
glot - Glot is a plotting library for Golang built on top of gnuplot.
globe - Globe wireframe visualization.
gonum/graph - General-purpose graph library.
go-graph - Graph library for Go/Golang language. [Deprecated]
RF - Random forests implementation in Go. [Deprecated]


Computer vision

GoCV - Package for computer vision using OpenCV 4 and beyond.


Haskell

General-Purpose Machine Learning

haskell-ml - Haskell implementations of various ML algorithms. [Deprecated]
HLearn - a suite of libraries for interpreting machine learning models according to their algebraic structure. [Deprecated]
hnn - Haskell Neural Network library.
hopfield-networks - Hopfield Networks for unsupervised learning in Haskell. [Deprecated]
DNNGraph - A DSL for deep neural networks. [Deprecated]
LambdaNet - Configurable Neural Networks in Haskell. [Deprecated]


Java

Natural Language Processing

Cortical.io - Retina: an API performing complex NLP operations (disambiguation, classification, streaming text filtering, etc...) as quickly and intuitively as the brain.
IRIS - Cortical.io's FREE NLP, Retina API Analysis Tool (written in JavaFX!) - See the Tutorial Video.
CoreNLP - Stanford CoreNLP provides a set of natural language analysis tools which can take raw English language text input and give the base forms of words.
Stanford Parser - A natural language parser is a program that works out the grammatical structure of sentences.
Stanford POS Tagger - A Part-Of-Speech Tagger (POS Tagger).
Stanford Name Entity Recognizer - Stanford NER is a Java implementation of a Named Entity Recognizer.
Stanford Word Segmenter - Tokenization of raw text is a standard pre-processing step for many NLP tasks.
Tregex, Tsurgeon and Semgrex - Tregex is a utility for matching patterns in trees, based on tree relationships and regular expression matches on nodes (the name is short for ""tree regular expressions"").
Stanford Phrasal: A Phrase-Based Translation System
Stanford English Tokenizer - Stanford Phrasal is a state-of-the-art statistical phrase-based machine translation system, written in Java.
Stanford Tokens Regex - A tokenizer divides text into a sequence of tokens, which roughly correspond to ""words"".
Stanford Temporal Tagger - SUTime is a library for recognizing and normalizing time expressions.
Stanford SPIED - Learning entities from unlabeled text starting with seed sets using patterns in an iterative fashion.
Stanford Topic Modeling Toolbox - Topic modeling tools to social scientists and others who wish to perform analysis on datasets.
Twitter Text Java - A Java implementation of Twitter's text processing library.
MALLET - A Java-based package for statistical natural language processing, document classification, clustering, topic modeling, information extraction, and other machine learning applications to text.
OpenNLP - a machine learning based toolkit for the processing of natural language text.
LingPipe - A tool kit for processing text using computational linguistics.
ClearTK - ClearTK provides a framework for developing statistical natural language processing (NLP) components in Java and is built on top of Apache UIMA. [Deprecated]
Apache cTAKES - Apache clinical Text Analysis and Knowledge Extraction System (cTAKES) is an open-source natural language processing system for information extraction from electronic medical record clinical free-text.
NLP4J - The NLP4J project provides software and resources for natural language processing. The project started at the Center for Computational Language and EducAtion Research, and is currently developed by the Center for Language and Information Research at Emory University. [Deprecated]
CogcompNLP - This project collects a number of core libraries for Natural Language Processing (NLP) developed in the University of Illinois' Cognitive Computation Group, for example illinois-core-utilities which provides a set of NLP-friendly data structures and a number of NLP-related utilities that support writing NLP applications, running experiments, etc, illinois-edison a library for feature extraction from illinois-core-utilities data structures and many other packages.


General-Purpose Machine Learning

aerosolve - A machine learning library by Airbnb designed from the ground up to be human friendly.
AMIDST Toolbox - A Java Toolbox for Scalable Probabilistic Machine Learning.
Datumbox - Machine Learning framework for rapid development of Machine Learning and Statistical applications.
ELKI - Java toolkit for data mining. (unsupervised: clustering, outlier detection etc.)
Encog - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trains using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.
FlinkML in Apache Flink - Distributed machine learning library in Flink.
H2O - ML engine that supports distributed learning on Hadoop, Spark or your laptop via APIs in R, Python, Scala, REST/JSON.
htm.java - General Machine Learning library using Numenta‚Äôs Cortical Learning Algorithm.
liblinear-java - Java version of liblinear.
Mahout - Distributed machine learning.
Meka - An open source implementation of methods for multi-label classification and evaluation (extension to Weka).
MLlib in Apache Spark - Distributed machine learning library in Spark
Hydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.
Neuroph - Neuroph is lightweight Java neural network framework
ORYX - Lambda Architecture Framework using Apache Spark and Apache Kafka with a specialization for real-time large-scale machine learning.
Samoa SAMOA is a framework that includes distributed machine learning for data streams with an interface to plug-in different stream processing platforms.
RankLib - RankLib is a library of learning to rank algorithms. [Deprecated]
rapaio - statistics, data mining and machine learning toolbox in Java.
RapidMiner - RapidMiner integration into Java code.
Stanford Classifier - A classifier is a machine learning tool that will take data items and place them into one of k classes.
SmileMiner - Statistical Machine Intelligence & Learning Engine.
SystemML - flexible, scalable machine learning (ML) language.
Weka - Weka is a collection of machine learning algorithms for data mining tasks.
LBJava - Learning Based Java is a modeling language for the rapid development of software systems, offers a convenient, declarative syntax for classifier and constraint definition directly in terms of the objects in the programmer's application.


Speech Recognition

CMU Sphinx - Open Source Toolkit For Speech Recognition purely based on Java speech recognition library.


Data Analysis / Data Visualization

Flink - Open source platform for distributed stream and batch data processing.
Hadoop - Hadoop/HDFS.
Onyx - Distributed, masterless, high performance, fault tolerant data processing. Written entirely in Clojure.
Spark - Spark is a fast and general engine for large-scale data processing.
Storm - Storm is a distributed realtime computation system.
Impala - Real-time Query for Hadoop.
DataMelt - Mathematics software for numeric computation, statistics, symbolic calculations, data analysis and data visualization.
Dr. Michael Thomas Flanagan's Java Scientific Library [Deprecated]


Deep Learning

Deeplearning4j - Scalable deep learning for industry with parallel GPUs.
Keras Beginner Tutorial - Friendly guide on using Keras to implement a simple Neural Network in Python


Javascript

Natural Language Processing

Twitter-text - A JavaScript implementation of Twitter's text processing library.
natural - General natural language facilities for node.
Knwl.js - A Natural Language Processor in JS.
Retext - Extensible system for analyzing and manipulating natural language.
NLP Compromise - Natural Language processing in the browser.
nlp.js - An NLP library built in node over Natural, with entity extraction, sentiment analysis, automatic language identify, and so more


Data Analysis / Data Visualization

D3.js
High Charts
NVD3.js
dc.js
chartjs
dimple
amCharts
D3xter - Straight forward plotting built on D3. [Deprecated]
statkit - Statistics kit for JavaScript. [Deprecated]
datakit - A lightweight framework for data analysis in JavaScript
science.js - Scientific and statistical computing in JavaScript. [Deprecated]
Z3d - Easily make interactive 3d plots built on Three.js [Deprecated]
Sigma.js - JavaScript library dedicated to graph drawing.
C3.js - customizable library based on D3.js for easy chart drawing.
Datamaps - Customizable SVG map/geo visualizations using D3.js. [Deprecated]
ZingChart - library written on Vanilla JS for big data visualization.
cheminfo - Platform for data visualization and analysis, using the visualizer project.
Learn JS Data
AnyChart
FusionCharts
Nivo - built on top of the awesome d3 and Reactjs libraries


General-Purpose Machine Learning

Auto ML - Automated machine learning, data formatting, ensembling, and hyperparameter optimization for competitions and exploration- just give it a .csv file!
Convnet.js - ConvNetJS is a Javascript library for training Deep Learning models[DEEP LEARNING] [Deprecated]
Clusterfck - Agglomerative hierarchical clustering implemented in Javascript for Node.js and the browser. [Deprecated]
Clustering.js - Clustering algorithms implemented in Javascript for Node.js and the browser. [Deprecated]
Decision Trees - NodeJS Implementation of Decision Tree using ID3 Algorithm. [Deprecated]
DN2A - Digital Neural Networks Architecture. [Deprecated]
figue - K-means, fuzzy c-means and agglomerative clustering.
Gaussian Mixture Model - Unsupervised machine learning with multivariate Gaussian mixture model.
Node-fann - FANN (Fast Artificial Neural Network Library) bindings for Node.js [Deprecated]
Keras.js - Run Keras models in the browser, with GPU support provided by WebGL 2.
Kmeans.js - Simple Javascript implementation of the k-means algorithm, for node.js and the browser. [Deprecated]
LDA.js - LDA topic modeling for Node.js
Learning.js - Javascript implementation of logistic regression/c4.5 decision tree [Deprecated]
machinelearn.js - Machine Learning library for the web, Node.js and developers
mil-tokyo - List of several machine learning libraries.
Node-SVM - Support Vector Machine for Node.js
Brain - Neural networks in JavaScript [Deprecated]
Brain.js - Neural networks in JavaScript - continued community fork of Brain.
Bayesian-Bandit - Bayesian bandit implementation for Node and the browser. [Deprecated]
Synaptic - Architecture-free neural network library for Node.js and the browser.
kNear - JavaScript implementation of the k nearest neighbors algorithm for supervised learning.
NeuralN - C++ Neural Network library for Node.js. It has advantage on large dataset and multi-threaded training. [Deprecated]
kalman - Kalman filter for Javascript. [Deprecated]
shaman - Node.js library with support for both simple and multiple linear regression. [Deprecated]
ml.js - Machine learning and numerical analysis tools for Node.js and the Browser!
ml5 - Friendly machine learning for the web!
Pavlov.js - Reinforcement learning using Markov Decision Processes.
MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.
TensorFlow.js - A WebGL accelerated, browser based JavaScript library for training and deploying ML models.
JSMLT - Machine learning toolkit with classification and clustering for Node.js; supports visualization (see visualml.io).
xgboost-node - Run XGBoost model and make predictions in Node.js.
Netron - Visualizer for machine learning models.
WebDNN - Fast Deep Neural Network Javascript Framework. WebDNN uses next generation JavaScript API, WebGPU for GPU execution, and WebAssembly for CPU execution.


Misc

stdlib - A standard library for JavaScript and Node.js, with an emphasis on numeric computing. The library provides a collection of robust, high performance libraries for mathematics, statistics, streams, utilities, and more.
sylvester - Vector and Matrix math for JavaScript. [Deprecated]
simple-statistics - A JavaScript implementation of descriptive, regression, and inference statistics. Implemented in literate JavaScript with no dependencies, designed to work in all modern browsers (including IE) as well as in Node.js.
regression-js - A javascript library containing a collection of least squares fitting methods for finding a trend in a set of data.
Lyric - Linear Regression library. [Deprecated]
GreatCircle - Library for calculating great circle distance.
MLPleaseHelp - MLPleaseHelp is a simple ML resource search engine. You can use this search engine right now at https://jgreenemi.github.io/MLPleaseHelp/, provided via Github Pages.


Demos and Scripts

The Bot - Example of how the neural network learns to predict the angle between two points created with Synaptic.
Half Beer - Beer glass classifier created with Synaptic.
NSFWJS - Indecent content checker with TensorFlow.js
Rock Paper Scissors - Rock Paper Scissors trained in the browser with TensorFlow.js


Julia

General-Purpose Machine Learning

MachineLearning - Julia Machine Learning library. [Deprecated]
MLBase - A set of functions to support the development of machine learning algorithms.
PGM - A Julia framework for probabilistic graphical models.
DA - Julia package for Regularized Discriminant Analysis.
Regression - Algorithms for regression analysis (e.g. linear regression and logistic regression). [Deprecated]
Local Regression - Local regression, so smooooth!
Naive Bayes - Simple Naive Bayes implementation in Julia. [Deprecated]
Mixed Models - A Julia package for fitting (statistical) mixed-effects models.
Simple MCMC - basic mcmc sampler implemented in Julia. [Deprecated]
Distances - Julia module for Distance evaluation.
Decision Tree - Decision Tree Classifier and Regressor.
Neural - A neural network in Julia.
MCMC - MCMC tools for Julia. [Deprecated]
Mamba - Markov chain Monte Carlo (MCMC) for Bayesian analysis in Julia.
GLM - Generalized linear models in Julia.
Gaussian Processes - Julia package for Gaussian processes.
Online Learning [Deprecated]
GLMNet - Julia wrapper for fitting Lasso/ElasticNet GLM models using glmnet.
Clustering - Basic functions for clustering data: k-means, dp-means, etc.
SVM - SVM's for Julia. [Deprecated]
Kernel Density - Kernel density estimators for julia.
MultivariateStats - Methods for dimensionality reduction.
NMF - A Julia package for non-negative matrix factorization.
ANN - Julia artificial neural networks. [Deprecated]
Mocha - Deep Learning framework for Julia inspired by Caffe. [Deprecated]
XGBoost - eXtreme Gradient Boosting Package in Julia.
ManifoldLearning - A Julia package for manifold learning and nonlinear dimensionality reduction.
MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.
Merlin - Flexible Deep Learning Framework in Julia.
ROCAnalysis - Receiver Operating Characteristics and functions for evaluation probabilistic binary classifiers.
GaussianMixtures - Large scale Gaussian Mixture Models.
ScikitLearn - Julia implementation of the scikit-learn API.
Knet - Ko√ß University Deep Learning Framework.
Flux - Relax! Flux is the ML library that doesn't make you tensor


Natural Language Processing

Topic Models - TopicModels for Julia. [Deprecated]
Text Analysis - Julia package for text analysis.
Word Tokenizers - Tokenizers for Natural Language Processing in Julia
Corpus Loaders - A julia package providing a variety of loaders for various NLP corpora.
Embeddings - Functions and data dependencies for loading various word embeddings
Languages - Julia package for working with various human languages
WordNet - A Julia package for Princeton's WordNet


Data Analysis / Data Visualization

Graph Layout - Graph layout algorithms in pure Julia.
LightGraphs - Graph modeling and analysis.
Data Frames Meta - Metaprogramming tools for DataFrames.
Julia Data - library for working with tabular data in Julia. [Deprecated]
Data Read - Read files from Stata, SAS, and SPSS.
Hypothesis Tests - Hypothesis tests for Julia.
Gadfly - Crafty statistical graphics for Julia.
Stats - Statistical tests for Julia.
RDataSets - Julia package for loading many of the data sets available in R.
DataFrames - library for working with tabular data in Julia.
Distributions - A Julia package for probability distributions and associated functions.
Data Arrays - Data structures that allow missing values. [Deprecated]
Time Series - Time series toolkit for Julia.
Sampling - Basic sampling algorithms for Julia.


Misc Stuff / Presentations

DSP - Digital Signal Processing (filtering, periodograms, spectrograms, window functions).
JuliaCon Presentations - Presentations for JuliaCon.
SignalProcessing - Signal Processing tools for Julia.
Images - An image library for Julia.
DataDeps - Reproducible data setup for reproducible science.


Lua

General-Purpose Machine Learning

Torch7

cephes - Cephes mathematical functions library, wrapped for Torch. Provides and wraps the 180+ special mathematical functions from the Cephes mathematical library, developed by Stephen L. Moshier. It is used, among many other places, at the heart of SciPy. [Deprecated]
autograd - Autograd automatically differentiates native Torch code. Inspired by the original Python version.
graph - Graph package for Torch. [Deprecated]
randomkit - Numpy's randomkit, wrapped for Torch. [Deprecated]
signal - A signal processing toolbox for Torch-7. FFT, DCT, Hilbert, cepstrums, stft.
nn - Neural Network package for Torch.
torchnet - framework for torch which provides a set of abstractions aiming at encouraging code re-use as well as encouraging modular programming.
nngraph - This package provides graphical computation for nn library in Torch7.
nnx - A completely unstable and experimental package that extends Torch's builtin nn library.
rnn - A Recurrent Neural Network library that extends Torch's nn. RNNs, LSTMs, GRUs, BRNNs, BLSTMs, etc.
dpnn - Many useful features that aren't part of the main nn package.
dp - A deep learning library designed for streamlining research and development using the Torch7 distribution. It emphasizes flexibility through the elegant use of object-oriented design patterns. [Deprecated]
optim - An optimization library for Torch. SGD, Adagrad, Conjugate-Gradient, LBFGS, RProp and more.
unsup - A package for unsupervised learning in Torch. Provides modules that are compatible with nn (LinearPsd, ConvPsd, AutoEncoder, ...), and self-contained algorithms (k-means, PCA). [Deprecated]
manifold - A package to manipulate manifolds.
svm - Torch-SVM library. [Deprecated]
lbfgs - FFI Wrapper for liblbfgs. [Deprecated]
vowpalwabbit - An old vowpalwabbit interface to torch. [Deprecated]
OpenGM - OpenGM is a C++ library for graphical modeling, and inference. The Lua bindings provide a simple way of describing graphs, from Lua, and then optimizing them with OpenGM. [Deprecated]
spaghetti - Spaghetti (sparse linear) module for torch7 by @MichaelMathieu [Deprecated]
LuaSHKit - A lua wrapper around the Locality sensitive hashing library SHKit [Deprecated]
kernel smoothing - KNN, kernel-weighted average, local linear regression smoothers. [Deprecated]
cutorch - Torch CUDA Implementation.
cunn - Torch CUDA Neural Network Implementation.
imgraph - An image/graph library for Torch. This package provides routines to construct graphs on images, segment them, build trees out of them, and convert them back to images. [Deprecated]
videograph - A video/graph library for Torch. This package provides routines to construct graphs on videos, segment them, build trees out of them, and convert them back to videos. [Deprecated]
saliency - code and tools around integral images. A library for finding interest points based on fast integral histograms. [Deprecated]
stitch - allows us to use hugin to stitch images and apply same stitching to a video sequence. [Deprecated]
sfm - A bundle adjustment/structure from motion package. [Deprecated]
fex - A package for feature extraction in Torch. Provides SIFT and dSIFT modules. [Deprecated]
OverFeat - A state-of-the-art generic dense feature extractor. [Deprecated]
wav2letter - a simple and efficient end-to-end Automatic Speech Recognition (ASR) system from Facebook AI Research.


Numeric Lua
Lunatic Python
SciLua
Lua - Numerical Algorithms [Deprecated]
Lunum [Deprecated]


Demos and Scripts

Core torch7 demos repository.

linear-regression, logistic-regression
face detector (training and detection as separate demos)
mst-based-segmenter
train-a-digit-classifier
train-autoencoder
optical flow demo
train-on-housenumbers
train-on-cifar
tracking with deep nets
kinect demo
filter-bank visualization
saliency-networks


Training a Convnet for the Galaxy-Zoo Kaggle challenge(CUDA demo)
Music Tagging - Music Tagging scripts for torch7.
torch-datasets - Scripts to load several popular datasets including:

BSR 500
CIFAR-10
COIL
Street View House Numbers
MNIST
NORB


Atari2600 - Scripts to generate a dataset with static frames from the Arcade Learning Environment.


Matlab

Computer Vision

Contourlets - MATLAB source code that implements the contourlet transform and its utility functions.
Shearlets - MATLAB code for shearlet transform.
Curvelets - The Curvelet transform is a higher dimensional generalization of the Wavelet transform designed to represent images at different scales and different angles.
Bandlets - MATLAB code for bandlet transform.
mexopencv - Collection and a development kit of MATLAB mex functions for OpenCV library.


Natural Language Processing

NLP - An NLP library for Matlab.


General-Purpose Machine Learning

Training a deep autoencoder or a classifier
on MNIST digits - Training a deep autoencoder or a classifier
on MNIST digits[DEEP LEARNING].
Convolutional-Recursive Deep Learning for 3D Object Classification - Convolutional-Recursive Deep Learning for 3D Object Classification[DEEP LEARNING].
Spider - The spider is intended to be a complete object orientated environment for machine learning in Matlab.
LibSVM - A Library for Support Vector Machines.
ThunderSVM - An Open-Source SVM Library on GPUs and CPUs
LibLinear - A Library for Large Linear Classification.
Machine Learning Module - Class on machine w/ PDF, lectures, code
Caffe - A deep learning framework developed with cleanliness, readability, and speed in mind.
Pattern Recognition Toolbox - A complete object-oriented environment for machine learning in Matlab.
Pattern Recognition and Machine Learning - This package contains the matlab implementation of the algorithms described in the book Pattern Recognition and Machine Learning by C. Bishop.
Optunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly with MATLAB.
MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.
Machine Learning in MatLab/Octave - examples of popular machine learning algorithms (neural networks, linear/logistic regressions, K-Means, etc.) with code examples and mathematics behind them being explained.


Data Analysis / Data Visualization

matlab_bgl - MatlabBGL is a Matlab package for working with graphs.
gaimc - Efficient pure-Matlab implementations of graph algorithms to complement MatlabBGL's mex functions.


.NET

Computer Vision

OpenCVDotNet - A wrapper for the OpenCV project to be used with .NET applications.
Emgu CV - Cross platform wrapper of OpenCV which can be compiled in Mono to be run on Windows, Linus, Mac OS X, iOS, and Android.
AForge.NET - Open source C# framework for developers and researchers in the fields of Computer Vision and Artificial Intelligence. Development has now shifted to GitHub.
Accord.NET - Together with AForge.NET, this library can provide image processing and computer vision algorithms to Windows, Windows RT and Windows Phone. Some components are also available for Java and Android.


Natural Language Processing

Stanford.NLP for .NET - A full port of Stanford NLP packages to .NET and also available precompiled as a NuGet package.


General-Purpose Machine Learning

Accord-Framework -The Accord.NET Framework is a complete framework for building machine learning, computer vision, computer audition, signal processing and statistical applications.
Accord.MachineLearning - Support Vector Machines, Decision Trees, Naive Bayesian models, K-means, Gaussian Mixture models and general algorithms such as Ransac, Cross-validation and Grid-Search for machine-learning applications. This package is part of the Accord.NET Framework.
DiffSharp - An automatic differentiation (AD) library providing exact and efficient derivatives (gradients, Hessians, Jacobians, directional derivatives, and matrix-free Hessian- and Jacobian-vector products) for machine learning and optimization applications. Operations can be nested to any level, meaning that you can compute exact higher-order derivatives and differentiate functions that are internally making use of differentiation, for applications such as hyperparameter optimization.
Encog - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trains using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.
GeneticSharp - Multi-platform genetic algorithm library for .NET Core and .NET Framework. The library has several implementations of GA operators, like: selection, crossover, mutation, reinsertion and termination.
Infer.NET - Infer.NET is a framework for running Bayesian inference in graphical models. One can use Infer.NET to solve many different kinds of machine learning problems, from standard problems like classification, recommendation or clustering through to customised solutions to domain-specific problems. Infer.NET has been used in a wide variety of domains including information retrieval, bioinformatics, epidemiology, vision, and many others.
ML.NET - ML.NET is a cross-platform open-source machine learning framework which makes machine learning accessible to .NET developers. ML.NET was originally developed in Microsoft Research and evolved into a significant framework over the last decade and is used across many product groups in Microsoft like Windows, Bing, PowerPoint, Excel and more.
Neural Network Designer - DBMS management system and designer for neural networks. The designer application is developed using WPF, and is a user interface which allows you to design your neural network, query the network, create and configure chat bots that are capable of asking questions and learning from your feed back. The chat bots can even scrape the internet for information to return in their output as well as to use for learning.
Synapses - Neural network library in F#.
Vulpes - Deep belief and deep learning implementation written in F# and leverages CUDA GPU execution with Alea.cuBase.


Data Analysis / Data Visualization

numl - numl is a machine learning library intended to ease the use of using standard modeling techniques for both prediction and clustering.
Math.NET Numerics - Numerical foundation of the Math.NET project, aiming to provide methods and algorithms for numerical computations in science, engineering and every day use. Supports .Net 4.0, .Net 3.5 and Mono on Windows, Linux and Mac; Silverlight 5, WindowsPhone/SL 8, WindowsPhone 8.1 and Windows 8 with PCL Portable Profiles 47 and 344; Android/iOS with Xamarin.
Sho - Sho is an interactive environment for data analysis and scientific computing that lets you seamlessly connect scripts (in IronPython) with compiled code (in .NET) to enable fast and flexible prototyping. The environment includes powerful and efficient libraries for linear algebra as well as data visualization that can be used from any .NET language, as well as a feature-rich interactive shell for rapid development.


Objective C

General-Purpose Machine Learning

YCML - A Machine Learning framework for Objective-C and Swift (OS X / iOS).
MLPNeuralNet - Fast multilayer perceptron neural network library for iOS and Mac OS X. MLPNeuralNet predicts new examples by trained neural network. It is built on top of the Apple's Accelerate Framework, using vectorized operations and hardware acceleration if available. [Deprecated]
MAChineLearning - An Objective-C multilayer perceptron library, with full support for training through backpropagation. Implemented using vDSP and vecLib, it's 20 times faster than its Java equivalent. Includes sample code for use from Swift.
BPN-NeuralNetwork - It implemented 3 layers neural network ( Input Layer, Hidden Layer and Output Layer ) and it named Back Propagation Neural Network (BPN). This network can be used in products recommendation, user behavior analysis, data mining and data analysis. [Deprecated]
Multi-Perceptron-NeuralNetwork - it implemented multi-perceptrons neural network („Éã„É•„Éº„É©„É´„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ) based on Back Propagation Neural Network (BPN) and designed unlimited-hidden-layers.
KRHebbian-Algorithm - It is a non-supervisor and self-learning algorithm (adjust the weights) in neural network of Machine Learning. [Deprecated]
KRKmeans-Algorithm - It implemented K-Means the clustering and classification algorithm. It could be used in data mining and image compression. [Deprecated]
KRFuzzyCMeans-Algorithm - It implemented Fuzzy C-Means (FCM) the fuzzy clustering / classification algorithm on Machine Learning. It could be used in data mining and image compression. [Deprecated]


OCaml

General-Purpose Machine Learning

Oml - A general statistics and machine learning library.
GPR - Efficient Gaussian Process Regression in OCaml.
Libra-Tk - Algorithms for learning and inference with discrete probabilistic models.
TensorFlow - OCaml bindings for TensorFlow.


Perl

Data Analysis / Data Visualization

Perl Data Language, a pluggable architecture for data and image processing, which can
be used for machine learning.


General-Purpose Machine Learning

MXnet for Deep Learning, in Perl,
also released in CPAN.
Perl Data Language,
using AWS machine learning platform from Perl.
Algorithm::SVMLight,
implementation of Support Vector Machines with SVMLight under it. [Deprecated]
Several machine learning and artificial intelligence models are
included in the AI
namespace. For instance, you can
find Na√Øve Bayes.


Perl 6

Support Vector Machines
Na√Øve Bayes

Data Analysis / Data Visualization

Perl Data Language,
a pluggable architecture for data and image processing, which can
be
used for machine learning.

General-Purpose Machine Learning

PHP

Natural Language Processing

jieba-php - Chinese Words Segmentation Utilities.


General-Purpose Machine Learning

PHP-ML - Machine Learning library for PHP. Algorithms, Cross Validation, Neural Network, Preprocessing, Feature Extraction and much more in one library.
PredictionBuilder - A library for machine learning that builds predictions using a linear regression.
Rubix ML - A high-level machine learning (ML) library that lets you build programs that learn from data using the PHP language.
19 Questions - A machine learning / bayesian inference assigning attributes to objects.


Python

Computer Vision

Scikit-Image - A collection of algorithms for image processing in Python.
SimpleCV - An open source computer vision framework that gives access to several high-powered computer vision libraries, such as OpenCV. Written on Python and runs on Mac, Windows, and Ubuntu Linux.
Vigranumpy - Python bindings for the VIGRA C++ computer vision library.
OpenFace - Free and open source face recognition with deep neural networks.
PCV - Open source Python module for computer vision. [Deprecated]
face_recognition - Face recognition library that recognize and manipulate faces from Python or from the command line.
dockerface - Easy to install and use deep learning Faster R-CNN face detection for images and video in a docker container.
Detectron - FAIR's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework.
albumentations - –ê fast and framework agnostic image augmentation library that implements a diverse set of augmentation techniques. Supports classification, segmentation, detection out of the box. Was used to win a number of Deep Learning competitions at Kaggle, Topcoder and those that were a part of the CVPR workshops.
pytessarct - Python-tesseract is an optical character recognition (OCR) tool for python. That is, it will recognize and ""read"" the text embedded in images.Python-tesseract is a wrapper for Google's Tesseract-OCR Engine>.
imutils - A library containg Convenience functions to make basic image processing operations such as translation, rotation, resizing, skeletonization, and displaying Matplotlib images easier with OpenCV and Python.
PyTorchCV - A PyTorch-Based Framework for Deep Learning in Computer Vision.
neural-style-pt - A PyTorch implementation of Justin Johnson's neural-style (neural style transfer).


Natural Language Processing

pkuseg-python - A better version of Jieba, developed by Peking University.
NLTK - A leading platform for building Python programs to work with human language data.
Pattern - A web mining module for the Python programming language. It has tools for natural language processing, machine learning, among others.
Quepy - A python framework to transform natural language questions to queries in a database query language.
TextBlob - Providing a consistent API for diving into common natural language processing (NLP) tasks. Stands on the giant shoulders of NLTK and Pattern, and plays nicely with both.
YAlign - A sentence aligner, a friendly tool for extracting parallel sentences from comparable corpora. [Deprecated]
jieba - Chinese Words Segmentation Utilities.
SnowNLP - A library for processing Chinese text.
spammy - A library for email Spam filtering built on top of nltk
loso - Another Chinese segmentation library. [Deprecated]
genius - A Chinese segment base on Conditional Random Field.
KoNLPy - A Python package for Korean natural language processing.
nut - Natural language Understanding Toolkit. [Deprecated]
Rosetta - Text processing tools and wrappers (e.g. Vowpal Wabbit)
BLLIP Parser - Python bindings for the BLLIP Natural Language Parser (also known as the Charniak-Johnson parser). [Deprecated]
PyNLPl - Python Natural Language Processing Library. General purpose NLP library for Python. Also contains some specific modules for parsing common NLP formats, most notably for FoLiA, but also ARPA language models, Moses phrasetables, GIZA++ alignments.
python-ucto - Python binding to ucto (a unicode-aware rule-based tokenizer for various languages).
python-frog - Python binding to Frog, an NLP suite for Dutch. (pos tagging, lemmatisation, dependency parsing, NER)
python-zpar - Python bindings for ZPar, a statistical part-of-speech-tagger, constiuency parser, and dependency parser for English.
colibri-core - Python binding to C++ library for extracting and working with with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.
spaCy - Industrial strength NLP with Python and Cython.
PyStanfordDependencies - Python interface for converting Penn Treebank trees to Stanford Dependencies.
Distance - Levenshtein and Hamming distance computation. [Deprecated]
Fuzzy Wuzzy - Fuzzy String Matching in Python.
jellyfish - a python library for doing approximate and phonetic matching of strings.
editdistance - fast implementation of edit distance.
textacy - higher-level NLP built on Spacy.
stanford-corenlp-python - Python wrapper for Stanford CoreNLP [Deprecated]
CLTK - The Classical Language Toolkit.
rasa_nlu - turn natural language into structured data.
yase - Transcode sentence (or other sequence) to list of word vector .
Polyglot - Multilingual text (NLP) processing toolkit.
DrQA - Reading Wikipedia to answer open-domain questions.
Dedupe - A python library for accurate and scalable fuzzy matching, record deduplication and entity-resolution.
Snips NLU - Natural Language Understanding library for intent classification and entity extraction
NeuroNER - Named-entity recognition using neural networks providing state-of-the-art-results
DeepPavlov - conversational AI library with many pretrained Russian NLP models.
BigARTM - topic modelling platform.


General-Purpose Machine Learning

PyOD -> Python Outlier Detection, comprehensive and scalable Python toolkit for detecting outlying objects in multivariate data. Featured for Advanced models, including Neural Networks/Deep Learning and Outlier Ensembles.
steppy -> Lightweight, Python library for fast and reproducible machine learning experimentation. Introduces very simple interface that enables clean machine learning pipeline design.
steppy-toolkit -> Curated collection of the neural networks, transformers and models that make your machine learning work faster and more effective.
CNTK - Microsoft Cognitive Toolkit (CNTK), an open source deep-learning toolkit. Documentation can be found here.
auto_ml - Automated machine learning for production and analytics. Lets you focus on the fun parts of ML, while outputting production-ready code, and detailed analytics of your dataset and results. Includes support for NLP, XGBoost, CatBoost, LightGBM, and soon, deep learning.
machine learning - automated build consisting of a web-interface, and set of programmatic-interface API, for support vector machines. Corresponding dataset(s) are stored into a SQL database, then generated model(s) used for prediction(s), are stored into a NoSQL datastore.
XGBoost - Python bindings for eXtreme Gradient Boosting (Tree) Library.
Apache SINGA - An Apache Incubating project for developing an open source machine learning library.
Bayesian Methods for Hackers - Book/iPython notebooks on Probabilistic Programming in Python.
Featureforge A set of tools for creating and testing machine learning features, with a scikit-learn compatible API.
MLlib in Apache Spark - Distributed machine learning library in Spark
Hydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.
scikit-learn - A Python module for machine learning built on top of SciPy.
metric-learn - A Python module for metric learning.
SimpleAI Python implementation of many of the artificial intelligence algorithms described on the book ""Artificial Intelligence, a Modern Approach"". It focuses on providing an easy to use, well documented and tested library.
astroML - Machine Learning and Data Mining for Astronomy.
graphlab-create - A library with various machine learning models (regression, clustering, recommender systems, graph analytics, etc.) implemented on top of a disk-backed DataFrame.
BigML - A library that contacts external servers.
pattern - Web mining module for Python.
NuPIC - Numenta Platform for Intelligent Computing.
Pylearn2 - A Machine Learning library based on Theano. [Deprecated]
keras - High-level neural networks frontend for TensorFlow, CNTK and Theano.
Lasagne - Lightweight library to build and train neural networks in Theano.
hebel - GPU-Accelerated Deep Learning Library in Python. [Deprecated]
Chainer - Flexible neural network framework.
prophet - Fast and automated time series forecasting framework by Facebook.
gensim - Topic Modelling for Humans.
topik - Topic modelling toolkit. [Deprecated]
PyBrain - Another Python Machine Learning Library.
Brainstorm - Fast, flexible and fun neural networks. This is the successor of PyBrain.
Surprise - A scikit for building and analyzing recommender systems.
Crab - A flexible, fast recommender engine. [Deprecated]
python-recsys - A Python library for implementing a Recommender System.
thinking bayes - Book on Bayesian Analysis.
Image-to-Image Translation with Conditional Adversarial Networks - Implementation of image to image (pix2pix) translation from the paper by isola et al.[DEEP LEARNING]
Restricted Boltzmann Machines -Restricted Boltzmann Machines in Python. [DEEP LEARNING]
Bolt - Bolt Online Learning Toolbox. [Deprecated]
CoverTree - Python implementation of cover trees, near-drop-in replacement for scipy.spatial.kdtree [Deprecated]
nilearn - Machine learning for NeuroImaging in Python.
neuropredict - Aimed at novice machine learners and non-expert programmers, this package offers easy (no coding needed) and comprehensive machine learning (evaluation and full report of predictive performance WITHOUT requiring you to code) in Python for NeuroImaging and any other type of features. This is aimed at absorbing the much of the ML workflow, unlike other packages like nilearn and pymvpa, which require you to learn their API and code to produce anything useful.
imbalanced-learn - Python module to perform under sampling and over sampling with various techniques.
Shogun - The Shogun Machine Learning Toolbox.
Pyevolve - Genetic algorithm framework. [Deprecated]
Caffe - A deep learning framework developed with cleanliness, readability, and speed in mind.
breze - Theano based library for deep and recurrent neural networks.
Cortex - Open source platform for deploying machine learning models in production.
pyhsmm - library for approximate unsupervised inference in Bayesian Hidden Markov Models (HMMs) and explicit-duration Hidden semi-Markov Models (HSMMs), focusing on the Bayesian Nonparametric extensions, the HDP-HMM and HDP-HSMM, mostly with weak-limit approximations.
mrjob - A library to let Python program run on Hadoop.
SKLL - A wrapper around scikit-learn that makes it simpler to conduct experiments.
neurolab
Spearmint - Spearmint is a package to perform Bayesian optimization according to the algorithms outlined in the paper: Practical Bayesian Optimization of Machine Learning Algorithms. Jasper Snoek, Hugo Larochelle and Ryan P. Adams. Advances in Neural Information Processing Systems, 2012. [Deprecated]
Pebl - Python Environment for Bayesian Learning. [Deprecated]
Theano - Optimizing GPU-meta-programming code generating array oriented optimizing math compiler in Python.
TensorFlow - Open source software library for numerical computation using data flow graphs.
pomegranate - Hidden Markov Models for Python, implemented in Cython for speed and efficiency.
python-timbl - A Python extension module wrapping the full TiMBL C++ programming interface. Timbl is an elaborate k-Nearest Neighbours machine learning toolkit.
deap - Evolutionary algorithm framework.
pydeep - Deep Learning In Python. [Deprecated]
mlxtend - A library consisting of useful tools for data science and machine learning tasks.
neon - Nervana's high-performance Python-based Deep Learning framework [DEEP LEARNING].
Optunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search.
Neural Networks and Deep Learning - Code samples for my book ""Neural Networks and Deep Learning"" [DEEP LEARNING].
Annoy - Approximate nearest neighbours implementation.
TPOT - Tool that automatically creates and optimizes machine learning pipelines using genetic programming. Consider it your personal data science assistant, automating a tedious part of machine learning.
pgmpy A python library for working with Probabilistic Graphical Models.
DIGITS - The Deep Learning GPU Training System (DIGITS) is a web application for training deep learning models.
Orange - Open source data visualization and data analysis for novices and experts.
MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.
milk - Machine learning toolkit focused on supervised classification. [Deprecated]
TFLearn - Deep learning library featuring a higher-level API for TensorFlow.
REP - an IPython-based environment for conducting data-driven research in a consistent and reproducible way. REP is not trying to substitute scikit-learn, but extends it and provides better user experience. [Deprecated]
rgf_python - Python bindings for Regularized Greedy Forest (Tree) Library.
skbayes - Python package for Bayesian Machine Learning with scikit-learn API.
fuku-ml - Simple machine learning library, including Perceptron, Regression, Support Vector Machine, Decision Tree and more, it's easy to use and easy to learn for beginners.
Xcessiv - A web-based application for quick, scalable, and automated hyperparameter tuning and stacked ensembling.
PyTorch - Tensors and Dynamic neural networks in Python with strong GPU acceleration
ML-From-Scratch - Implementations of Machine Learning models from scratch in Python with a focus on transparency. Aims to showcase the nuts and bolts of ML in an accessible way.
Edward - A library for probabilistic modeling, inference, and criticism. Built on top of TensorFlow.
xRBM - A library for Restricted Boltzmann Machine (RBM) and its conditional variants in Tensorflow.
CatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, well documented and supports CPU and GPU (even multi-GPU) computation.
stacked_generalization - Implementation of machine learning stacking technic as handy library in Python.
modAL - A modular active learning framework for Python, built on top of scikit-learn.
Cogitare: A Modern, Fast, and Modular Deep Learning and Machine Learning framework for Python.
Parris - Parris, the automated infrastructure setup tool for machine learning algorithms.
neonrvm - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.
Turi Create - Machine learning from Apple. Turi Create simplifies the development of custom machine learning models. You don't have to be a machine learning expert to add recommendations, object detection, image classification, image similarity or activity classification to your app.
xLearn - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertisement and recommender systems.
mlens - A high performance, memory efficient, maximally parallelized ensemble learning, integrated with scikit-learn.
Netron - Visualizer for machine learning models.
Thampi - Machine Learning Prediction System on AWS Lambda
MindsDB - Open Source framework to streamline use of neural networks.
Microsoft Recommenders: Examples and best practices for building recommendation systems, provided as Jupyter notebooks. The repo contains some of the latest state of the art algorithms from Microsoft Research as well as from other companies and institutions.
StellarGraph: Machine Learning on Graphs, a Python library for machine learning on graph-structured (network-structured) data.
BentoML: Toolkit for package and deploy machine learning models for serving in production
MiraiML: An asynchronous engine for continuous & autonomous machine learning, built for real-time usage.
numpy-ML: Reference implementations of ML models written in numpy
creme: A framework for online machine learning.
Neuraxle: A framework providing the right abstractions to ease research, development, and deployment of your ML pipelines.
Cornac - A comparative framework for multimodal recommender systems with a focus on models leveraging auxiliary data.
JAX - JAX is Autograd and XLA, brought together for high-performance machine learning research.
fast.ai - A library simplifies training fast and accurate neural nets using modern best practices and already supports  vision, text, tabular, and collab (collaborative filtering) models ""out of the box""
Catalyst - High-level utils for PyTorch DL & RL research. It was developed with a focus on reproducibility, fast experimentation and code/ideas reusing. Being able to research/develop something new, rather than write another regular train loop.
Fastai - High-level wrapper built on the top of Pytorch which supports vision, text, tabular data and collaborative filtering.


Data Analysis / Data Visualization

SciPy - A Python-based ecosystem of open-source software for mathematics, science, and engineering.
NumPy - A fundamental package for scientific computing with Python.
Numba - Python JIT (just in time) compiler to LLVM aimed at scientific Python by the developers of Cython and NumPy.
Mars - A tensor-based framework for large-scale data computation which often regarded as a parallel and distributed version of NumPy.
NetworkX - A high-productivity software for complex networks.
igraph - binding to igraph library - General purpose graph library.
Pandas - A library providing high-performance, easy-to-use data structures and data analysis tools.
Open Mining - Business Intelligence (BI) in Python (Pandas web interface) [Deprecated]
PyMC - Markov Chain Monte Carlo sampling toolkit.
zipline - A Pythonic algorithmic trading library.
PyDy - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion based around NumPy, SciPy, IPython, and matplotlib.
SymPy - A Python library for symbolic mathematics.
statsmodels - Statistical modeling and econometrics in Python.
astropy - A community Python library for Astronomy.
matplotlib - A Python 2D plotting library.
bokeh - Interactive Web Plotting for Python.
plotly - Collaborative web plotting for Python and matplotlib.
altair - A Python to Vega translator.
d3py - A plotting library for Python, based on D3.js.
PyDexter - Simple plotting for Python. Wrapper for D3xterjs; easily render charts in-browser.
ggplot - Same API as ggplot2 for R. [Deprecated]
ggfortify - Unified interface to ggplot2 popular R packages.
Kartograph.py - Rendering beautiful SVG maps in Python.
pygal - A Python SVG Charts Creator.
PyQtGraph - A pure-python graphics and GUI library built on PyQt4 / PySide and NumPy.
pycascading [Deprecated]
Petrel - Tools for writing, submitting, debugging, and monitoring Storm topologies in pure Python.
Blaze - NumPy and Pandas interface to Big Data.
emcee - The Python ensemble sampling toolkit for affine-invariant MCMC.
windML - A Python Framework for Wind Energy Analysis and Prediction.
vispy - GPU-based high-performance interactive OpenGL 2D/3D data visualization library.
cerebro2 A web-based visualization and debugging platform for NuPIC. [Deprecated]
NuPIC Studio An all-in-one NuPIC Hierarchical Temporal Memory visualization and debugging super-tool! [Deprecated]
SparklingPandas Pandas on PySpark (POPS).
Seaborn - A python visualization library based on matplotlib.
bqplot - An API for plotting in Jupyter (IPython).
pastalog - Simple, realtime visualization of neural network training performance.
Superset - A data exploration platform designed to be visual, intuitive, and interactive.
Dora - Tools for exploratory data analysis in Python.
Ruffus - Computation Pipeline library for python.
SOMPY - Self Organizing Map written in Python (Uses neural networks for data analysis).
somoclu Massively parallel self-organizing maps: accelerate training on multicore CPUs, GPUs, and clusters, has python API.
HDBScan - implementation of the hdbscan algorithm in Python - used for clustering
visualize_ML - A python package for data exploration and data analysis. [Deprecated]
scikit-plot - A visualization library for quick and easy generation of common plots in data analysis and machine learning.
Bowtie - A dashboard library for interactive visualizations using flask socketio and react.
lime - Lime is about explaining what machine learning classifiers (or models) are doing. It is able to explain any black box classifier, with two or more classes.
PyCM - PyCM is a multi-class confusion matrix library written in Python that supports both input data vectors and direct matrix, and a proper tool for post-classification model evaluation that supports most classes and overall statistics parameters
Dash - A framework for creating analytical web applications built on top of Plotly.js, React, and Flask
Lambdo - A workflow engine for solving machine learning problems by combining in one analysis pipeline (i) feature engineering and machine learning (ii) model training and prediction (iii) table population and column evaluation via user-defined (Python) functions.
TensorWatch - Debugging and visualization tool for machine learning and data science. It extensively leverages Jupyter Notebook to show real-time visualizations of data in running processes such as machine learning training.
dowel - A little logger for machine learning research. Output any object to the terminal, CSV, TensorBoard, text logs on disk, and more with just one call to logger.log().


Misc Scripts / iPython Notebooks / Codebases

Map/Reduce implementations of common ML algorithms: Jupyter notebooks that cover how to implement from scratch different ML algorithms (ordinary least squares, gradient descent, k-means, alternating least squares), using Python NumPy, and how to then make these implementations scalable using Map/Reduce and Spark.
BioPy - Biologically-Inspired and Machine Learning Algorithms in Python. [Deprecated]
SVM Explorer - Interactive SVM Explorer, using Dash and scikit-learn
pattern_classification
thinking stats 2
hyperopt
numpic
2012-paper-diginorm
A gallery of interesting IPython notebooks
ipython-notebooks
data-science-ipython-notebooks - Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.
decision-weights
Sarah Palin LDA - Topic Modeling the Sarah Palin emails.
Diffusion Segmentation - A collection of image segmentation algorithms based on diffusion methods.
Scipy Tutorials - SciPy tutorials. This is outdated, check out scipy-lecture-notes.
Crab - A recommendation engine library for Python.
BayesPy - Bayesian Inference Tools in Python.
scikit-learn tutorials - Series of notebooks for learning scikit-learn.
sentiment-analyzer - Tweets Sentiment Analyzer
sentiment_classifier - Sentiment classifier using word sense disambiguation.
group-lasso - Some experiments with the coordinate descent algorithm used in the (Sparse) Group Lasso model.
jProcessing - Kanji / Hiragana / Katakana to Romaji Converter. Edict Dictionary & parallel sentences Search. Sentence Similarity between two JP Sentences. Sentiment Analysis of Japanese Text. Run Cabocha(ISO--8859-1 configured) in Python.
mne-python-notebooks - IPython notebooks for EEG/MEG data processing using mne-python.
Neon Course - IPython notebooks for a complete course around understanding Nervana's Neon.
pandas cookbook - Recipes for using Python's pandas library.
climin - Optimization library focused on machine learning, pythonic implementations of gradient descent, LBFGS, rmsprop, adadelta and others.
Allen Downey‚Äôs Data Science Course - Code for Data Science at Olin College, Spring 2014.
Allen Downey‚Äôs Think Bayes Code - Code repository for Think Bayes.
Allen Downey‚Äôs Think Complexity Code - Code for Allen Downey's book Think Complexity.
Allen Downey‚Äôs Think OS Code - Text and supporting code for Think OS: A Brief Introduction to Operating Systems.
Python Programming for the Humanities - Course for Python programming for the Humanities, assuming no prior knowledge. Heavy focus on text processing / NLP.
GreatCircle - Library for calculating great circle distance.
Optunity examples - Examples demonstrating how to use Optunity in synergy with machine learning libraries.
Dive into Machine Learning  with Python Jupyter notebook and scikit-learn - ""I learned Python by hacking first, and getting serious later. I wanted to do this with Machine Learning. If this is your style, join me in getting a bit ahead of yourself.""
TDB - TensorDebugger (TDB) is a visual debugger for deep learning. It features interactive, node-by-node debugging and visualization for TensorFlow.
Suiron - Machine Learning for RC Cars.
Introduction to machine learning with scikit-learn - IPython notebooks from Data School's video tutorials on scikit-learn.
Practical XGBoost in Python - comprehensive online course about using XGBoost in Python.
Introduction to Machine Learning with Python - Notebooks and code for the book ""Introduction to Machine Learning with Python""
Pydata book - Materials and IPython notebooks for ""Python for Data Analysis"" by Wes McKinney, published by O'Reilly Media
Homemade Machine Learning - Python examples of popular machine learning algorithms with interactive Jupyter demos and math being explained
Prodmodel - Build tool for data science pipelines.
the-elements-of-statistical-learning - This repository contains Jupyter notebooks implementing the algorithms found in the book and summary of the textbook.


Neural Networks

nn_builder - nn_builder is a python package that lets you build neural networks in 1 line
NeuralTalk - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences.
Neuron - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg‚ÄìMarquardt algorithm.
=======
NeuralTalk - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences. [Deprecated]
Neuron - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg‚ÄìMarquardt algorithm. [Deprecated]
Data Driven Code - Very simple implementation of neural networks for dummies in python without using any libraries, with detailed comments.
Machine Learning, Data Science and Deep Learning with Python - LiveVideo course that covers machine learning, Tensorflow, artificial intelligence, and neural networks.


Kaggle Competition Source Code

open-solution-home-credit -> source code and experiments results for Home Credit Default Risk.
open-solution-googleai-object-detection -> source code and experiments results for Google AI Open Images - Object Detection Track.
open-solution-salt-identification -> source code and experiments results for TGS Salt Identification Challenge.
open-solution-ship-detection -> source code and experiments results for Airbus Ship Detection Challenge.
open-solution-data-science-bowl-2018 -> source code and experiments results for 2018 Data Science Bowl.
open-solution-value-prediction -> source code and experiments results for Santander Value Prediction Challenge.
open-solution-toxic-comments -> source code for Toxic Comment Classification Challenge.
wiki challenge - An implementation of Dell Zhang's solution to Wikipedia's Participation Challenge on Kaggle.
kaggle insults - Kaggle Submission for ""Detecting Insults in Social Commentary"".
kaggle_acquire-valued-shoppers-challenge - Code for the Kaggle acquire valued shoppers challenge.
kaggle-cifar - Code for the CIFAR-10 competition at Kaggle, uses cuda-convnet.
kaggle-blackbox - Deep learning made easy.
kaggle-accelerometer - Code for Accelerometer Biometric Competition at Kaggle.
kaggle-advertised-salaries - Predicting job salaries from ads - a Kaggle competition.
kaggle amazon - Amazon access control challenge.
kaggle-bestbuy_big - Code for the Best Buy competition at Kaggle.
kaggle-bestbuy_small
Kaggle Dogs vs. Cats - Code for Kaggle Dogs vs. Cats competition.
Kaggle Galaxy Challenge - Winning solution for the Galaxy Challenge on Kaggle.
Kaggle Gender - A Kaggle competition: discriminate gender based on handwriting.
Kaggle Merck - Merck challenge at Kaggle.
Kaggle Stackoverflow - Predicting closed questions on Stack Overflow.
kaggle_acquire-valued-shoppers-challenge - Code for the Kaggle acquire valued shoppers challenge.
wine-quality - Predicting wine quality.


Reinforcement Learning

DeepMind Lab - DeepMind Lab is a 3D learning environment based on id Software's Quake III Arena via ioquake3 and other open source software. Its primary purpose is to act as a testbed for research in artificial intelligence, especially deep reinforcement learning.
Gym - OpenAI Gym is a toolkit for developing and comparing reinforcement learning algorithms.
Serpent.AI - Serpent.AI is a game agent framework that allows you to turn any video game you own into a sandbox to develop AI and machine learning experiments. For both researchers and hobbyists.
ViZDoom - ViZDoom allows developing AI bots that play Doom using only the visual information (the screen buffer). It is primarily intended for research in machine visual learning, and deep reinforcement learning, in particular.
Roboschool - Open-source software for robot simulation, integrated with OpenAI Gym.
Retro - Retro Games in Gym
SLM Lab - Modular Deep Reinforcement Learning framework in PyTorch.
Coach - Reinforcement Learning Coach by Intel¬Æ AI Lab enables easy experimentation with state of the art Reinforcement Learning algorithms
garage - A toolkit for reproducible reinforcement learning research
metaworld - An open source robotics benchmark for meta- and multi-task reinforcement learning


Ruby

Natural Language Processing

Awesome NLP with Ruby - Curated link list for practical natural language processing in Ruby.
Treat - Text REtrieval and Annotation Toolkit, definitely the most comprehensive toolkit I‚Äôve encountered so far for Ruby.
Stemmer - Expose libstemmer_c to Ruby. [Deprecated]
Raspel - raspell is an interface binding for ruby. [Deprecated]
UEA Stemmer - Ruby port of UEALite Stemmer - a conservative stemmer for search and indexing.
Twitter-text-rb - A library that does auto linking and extraction of usernames, lists and hashtags in tweets.


General-Purpose Machine Learning

Awesome Machine Learning with Ruby - Curated list of ML related resources for Ruby.
Ruby Machine Learning - Some Machine Learning algorithms, implemented in Ruby. [Deprecated]
Machine Learning Ruby [Deprecated]
jRuby Mahout - JRuby Mahout is a gem that unleashes the power of Apache Mahout in the world of JRuby. [Deprecated]
CardMagic-Classifier - A general classifier module to allow Bayesian and other types of classifications.
rb-libsvm - Ruby language bindings for LIBSVM which is a Library for Support Vector Machines.
Scoruby - Creates Random Forest classifiers from PMML files.


Data Analysis / Data Visualization

rsruby - Ruby - R bridge.
data-visualization-ruby - Source code and supporting content for my Ruby Manor presentation on Data Visualisation with Ruby. [Deprecated]
ruby-plot - gnuplot wrapper for Ruby, especially for plotting ROC curves into SVG files. [Deprecated]
plot-rb - A plotting library in Ruby built on top of Vega and D3. [Deprecated]
scruffy - A beautiful graphing toolkit for Ruby.
SciRuby
Glean - A data management tool for humans. [Deprecated]
Bioruby
Arel [Deprecated]


Misc

Big Data For Chimps
Listof - Community based data collection, packed in gem. Get list of pretty much anything (stop words, countries, non words) in txt, json or hash. Demo/Search for a list


Rust

General-Purpose Machine Learning

deeplearn-rs - deeplearn-rs provides simple networks that use matrix multiplication, addition, and ReLU under the MIT license.
rustlearn - a machine learning framework featuring logistic regression, support vector machines, decision trees and random forests.
rusty-machine - a pure-rust machine learning library.
leaf - open source framework for machine intelligence, sharing concepts from TensorFlow and Caffe. Available under the MIT license. [Deprecated]
RustNN - RustNN is a feedforward neural network library. [Deprecated]
RusticSOM - A Rust library for Self Organising Maps (SOM).


R

General-Purpose Machine Learning

ahaz - ahaz: Regularization for semiparametric additive hazards regression. [Deprecated]
arules - arules: Mining Association Rules and Frequent Itemsets
biglasso - biglasso: Extending Lasso Model Fitting to Big Data in R.
bmrm - bmrm: Bundle Methods for Regularized Risk Minimization Package.
Boruta - Boruta: A wrapper algorithm for all-relevant feature selection.
bst - bst: Gradient Boosting.
C50 - C50: C5.0 Decision Trees and Rule-Based Models.
caret - Classification and Regression Training: Unified interface to ~150 ML algorithms in R.
caretEnsemble - caretEnsemble: Framework for fitting multiple caret models as well as creating ensembles of such models. [Deprecated]
CatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box for R.
Clever Algorithms For Machine Learning
CORElearn - CORElearn: Classification, regression, feature evaluation and ordinal evaluation.
CoxBoost - CoxBoost: Cox models by likelihood based boosting for a single survival endpoint or competing risks [Deprecated]
Cubist - Cubist: Rule- and Instance-Based Regression Modeling.
e1071 - e1071: Misc Functions of the Department of Statistics (e1071), TU Wien
earth - earth: Multivariate Adaptive Regression Spline Models
elasticnet - elasticnet: Elastic-Net for Sparse Estimation and Sparse PCA.
ElemStatLearn - ElemStatLearn: Data sets, functions and examples from the book: ""The Elements of Statistical Learning, Data Mining, Inference, and Prediction"" by Trevor Hastie, Robert Tibshirani and Jerome Friedman Prediction"" by Trevor Hastie, Robert Tibshirani and Jerome Friedman.
evtree - evtree: Evolutionary Learning of Globally Optimal Trees.
forecast - forecast: Timeseries forecasting using ARIMA, ETS, STLM, TBATS, and neural network models.
forecastHybrid - forecastHybrid: Automatic ensemble and cross validation of ARIMA, ETS, STLM, TBATS, and neural network models from the ""forecast"" package.
fpc - fpc: Flexible procedures for clustering.
frbs - frbs: Fuzzy Rule-based Systems for Classification and Regression Tasks. [Deprecated]
GAMBoost - GAMBoost: Generalized linear and additive models by likelihood based boosting. [Deprecated]
gamboostLSS - gamboostLSS: Boosting Methods for GAMLSS.
gbm - gbm: Generalized Boosted Regression Models.
glmnet - glmnet: Lasso and elastic-net regularized generalized linear models.
glmpath - glmpath: L1 Regularization Path for Generalized Linear Models and Cox Proportional Hazards Model.
GMMBoost - GMMBoost: Likelihood-based Boosting for Generalized mixed models. [Deprecated]
grplasso - grplasso: Fitting user specified models with Group Lasso penalty.
grpreg - grpreg: Regularization paths for regression models with grouped covariates.
h2o - A framework for fast, parallel, and distributed machine learning algorithms at scale -- Deeplearning, Random forests, GBM, KMeans, PCA, GLM.
hda - hda: Heteroscedastic Discriminant Analysis. [Deprecated]
Introduction to Statistical Learning
ipred - ipred: Improved Predictors.
kernlab - kernlab: Kernel-based Machine Learning Lab.
klaR - klaR: Classification and visualization.
L0Learn - L0Learn: Fast algorithms for best subset selection.
lars - lars: Least Angle Regression, Lasso and Forward Stagewise. [Deprecated]
lasso2 - lasso2: L1 constrained estimation aka ‚Äòlasso‚Äô.
LiblineaR - LiblineaR: Linear Predictive Models Based On The Liblinear C/C++ Library.
LogicReg - LogicReg: Logic Regression.
Machine Learning For Hackers
maptree - maptree: Mapping, pruning, and graphing tree models. [Deprecated]
mboost - mboost: Model-Based Boosting.
medley - medley: Blending regression models, using a greedy stepwise approach.
mlr - mlr: Machine Learning in R.
ncvreg - ncvreg: Regularization paths for SCAD- and MCP-penalized regression models.
nnet - nnet: Feed-forward Neural Networks and Multinomial Log-Linear Models. [Deprecated]
pamr - pamr: Pam: prediction analysis for microarrays. [Deprecated]
party - party: A Laboratory for Recursive Partytioning.
partykit - partykit: A Toolkit for Recursive Partytioning.
penalized - penalized: L1 (lasso and fused lasso) and L2 (ridge) penalized estimation in GLMs and in the Cox model.
penalizedLDA - penalizedLDA: Penalized classification using Fisher's linear discriminant. [Deprecated]
penalizedSVM - penalizedSVM: Feature Selection SVM using penalty functions.
quantregForest - quantregForest: Quantile Regression Forests.
randomForest - randomForest: Breiman and Cutler's random forests for classification and regression.
randomForestSRC - randomForestSRC: Random Forests for Survival, Regression and Classification (RF-SRC).
rattle - rattle: Graphical user interface for data mining in R.
rda - rda: Shrunken Centroids Regularized Discriminant Analysis.
rdetools - rdetools: Relevant Dimension Estimation (RDE) in Feature Spaces. [Deprecated]
REEMtree - REEMtree: Regression Trees with Random Effects for Longitudinal (Panel) Data. [Deprecated]
relaxo - relaxo: Relaxed Lasso. [Deprecated]
rgenoud - rgenoud: R version of GENetic Optimization Using Derivatives
Rmalschains - Rmalschains: Continuous Optimization using Memetic Algorithms with Local Search Chains (MA-LS-Chains) in R.
rminer - rminer: Simpler use of data mining methods (e.g. NN and SVM) in classification and regression. [Deprecated]
ROCR - ROCR: Visualizing the performance of scoring classifiers. [Deprecated]
RoughSets - RoughSets: Data Analysis Using Rough Set and Fuzzy Rough Set Theories. [Deprecated]
rpart - rpart: Recursive Partitioning and Regression Trees.
RPMM - RPMM: Recursively Partitioned Mixture Model.
RSNNS - RSNNS: Neural Networks in R using the Stuttgart Neural Network Simulator (SNNS).
RWeka - RWeka: R/Weka interface.
RXshrink - RXshrink: Maximum Likelihood Shrinkage via Generalized Ridge or Least Angle Regression.
sda - sda: Shrinkage Discriminant Analysis and CAT Score Variable Selection. [Deprecated]
spectralGraphTopology - spectralGraphTopology: Learning Graphs from Data via Spectral Constraints.
SuperLearner - Multi-algorithm ensemble learning packages.
svmpath - svmpath: svmpath: the SVM Path algorithm. [Deprecated]
tgp - tgp: Bayesian treed Gaussian process models. [Deprecated]
tree - tree: Classification and regression trees.
varSelRF - varSelRF: Variable selection using random forests.
XGBoost.R - R binding for eXtreme Gradient Boosting (Tree) Library.
Optunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly to R.
igraph - binding to igraph library - General purpose graph library.
MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.
TDSP-Utilities - Two data science utilities in R from Microsoft: 1) Interactive Data Exploration, Analysis, and Reporting (IDEAR) ; 2) Automated Modeling and Reporting (AMR).


Data Analysis / Data Visualization

ggplot2 - A data visualization package based on the grammar of graphics.
tmap for visualizing geospatial data with static maps and leaflet for interactive maps
tm and quanteda are the main packages for managing,  analyzing, and visualizing textual data.
shiny is the basis for truly interactive displays and dashboards in R. However, some measure of interactivity can be achieved with htmlwidgets bringing javascript libraries to R. These include, plotly, dygraphs, highcharter, and several others.


SAS

General-Purpose Machine Learning

Visual Data Mining and Machine Learning - Interactive, automated, and programmatic modeling with the latest machine learning algorithms in and end-to-end analytics environment, from data prep to deployment. Free trial available.
Enterprise Miner - Data mining and machine learning that creates deployable models using a GUI or code.
Factory Miner - Automatically creates deployable machine learning models across numerous market or customer segments using a GUI.


Data Analysis / Data Visualization

SAS/STAT - For conducting advanced statistical analysis.
University Edition - FREE! Includes all SAS packages necessary for data analysis and visualization, and includes online SAS courses.


Natural Language Processing

Contextual Analysis - Add structure to unstructured text using a GUI.
Sentiment Analysis - Extract sentiment from text using a GUI.
Text Miner - Text mining using a GUI or code.


Demos and Scripts

ML_Tables - Concise cheat sheets containing machine learning best practices.
enlighten-apply - Example code and materials that illustrate applications of SAS machine learning techniques.
enlighten-integration - Example code and materials that illustrate techniques for integrating SAS with other analytics technologies in Java, PMML, Python and R.
enlighten-deep - Example code and materials that illustrate using neural networks with several hidden layers in SAS.
dm-flow - Library of SAS Enterprise Miner process flow diagrams to help you learn by example about specific data mining topics.


Scala

Natural Language Processing

ScalaNLP - ScalaNLP is a suite of machine learning and numerical computing libraries.
Breeze - Breeze is a numerical processing library for Scala.
Chalk - Chalk is a natural language processing library. [Deprecated]
FACTORIE - FACTORIE is a toolkit for deployable probabilistic modeling, implemented as a software library in Scala. It provides its users with a succinct language for creating relational factor graphs, estimating parameters and performing inference.
Montague - Montague is a semantic parsing library for Scala with an easy-to-use DSL.
Spark NLP - Natural language processing library built on top of Apache Spark ML to provide simple, performant, and accurate NLP annotations for machine learning pipelines, that scale easily in a distributed environment.


Data Analysis / Data Visualization

MLlib in Apache Spark - Distributed machine learning library in Spark
Hydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.
Scalding - A Scala API for Cascading.
Summing Bird - Streaming MapReduce with Scalding and Storm.
Algebird - Abstract Algebra for Scala.
xerial - Data management utilities for Scala. [Deprecated]
PredictionIO - PredictionIO, a machine learning server for software developers and data engineers.
BIDMat - CPU and GPU-accelerated matrix library intended to support large-scale exploratory data analysis.
Flink - Open source platform for distributed stream and batch data processing.
Spark Notebook - Interactive and Reactive Data Science using Scala and Spark.


General-Purpose Machine Learning

DeepLearning.scala - Creating statically typed dynamic neural networks from object-oriented & functional programming constructs.
Conjecture - Scalable Machine Learning in Scalding.
brushfire - Distributed decision tree ensemble learning in Scala.
ganitha - Scalding powered machine learning. [Deprecated]
adam - A genomics processing engine and specialized file format built using Apache Avro, Apache Spark and Parquet. Apache 2 licensed.
bioscala - Bioinformatics for the Scala programming language
BIDMach - CPU and GPU-accelerated Machine Learning Library.
Figaro - a Scala library for constructing probabilistic models.
H2O Sparkling Water - H2O and Spark interoperability.
FlinkML in Apache Flink - Distributed machine learning library in Flink.
DynaML - Scala Library/REPL for Machine Learning Research.
Saul - Flexible Declarative Learning-Based Programming.
SwiftLearner - Simply written algorithms to help study ML or write your own implementations.
Smile - Statistical Machine Intelligence and Learning Engine.
doddle-model - An in-memory machine learning library built on top of Breeze. It provides immutable objects and exposes its functionality through a scikit-learn-like API.
TensorFlow Scala -   Strongly-typed Scala API for TensorFlow.


Scheme

Neural Networks

layer - Neural network inference from the command line, implemented in CHICKEN Scheme.


Swift

General-Purpose Machine Learning

Bender - Fast Neural Networks framework built on top of Metal. Supports TensorFlow models.
Swift AI - Highly optimized artificial intelligence and machine learning library written in Swift.
Swift for Tensorflow - a next-generation platform for machine learning, incorporating the latest research across machine learning, compilers, differentiable programming, systems design, and beyond.
BrainCore - The iOS and OS X neural network framework.
swix - A bare bones library that includes a general matrix language and wraps some OpenCV for iOS development. [Deprecated]
AIToolbox - A toolbox framework of AI modules written in Swift: Graphs/Trees, Linear Regression, Support Vector Machines, Neural Networks, PCA, KMeans, Genetic Algorithms, MDP, Mixture of Gaussians.
MLKit - A simple Machine Learning Framework written in Swift. Currently features Simple Linear Regression, Polynomial Regression, and Ridge Regression.
Swift Brain - The first neural network / machine learning library written in Swift. This is a project for AI algorithms in Swift for iOS and OS X development. This project includes algorithms focused on Bayes theorem, neural networks, SVMs, Matrices, etc...
Perfect TensorFlow - Swift Language Bindings of TensorFlow. Using native TensorFlow models on both macOS / Linux.
PredictionBuilder - A library for machine learning that builds predictions using a linear regression.
Awesome CoreML - A curated list of pretrained CoreML models.
Awesome Core ML Models - A curated list of machine learning models in CoreML format.


TensorFlow

General-Purpose Machine Learning

Awesome TensorFlow - A list of all things related to TensorFlow.
Golden TensorFlow - A page of content on TensorFlow, including academic papers and links to related topics.


Tools

Neural Networks

layer - Neural network inference from the command line


Misc

ML Workspace - All-in-one web-based IDE for machine learning and data science. The workspace is deployed as a docker container and is preloaded with a variety of popular data science libraries (e.g., Tensorflow, PyTorch) and dev tools (e.g., Jupyter, VS Code).
Notebooks - A starter kit for Jupyter notebooks and machine learning. Companion docker images consist of all combinations of python versions, machine learning frameworks (Keras, PyTorch and Tensorflow) and CPU/CUDA versions.
DVC - Data Science Version Control is an open-source version control system for machine learning projects with pipelines support. It makes ML projects reproducible and shareable.
Kedro - Kedro is a data and development workflow framework that implements best practices for data pipelines with an eye towards productionizing machine learning models.
guild.ai - Tool to log, analyze, compare and ""optimize"" experiments. It's cross-platform and framework independent, and provided integrated visualizers such as tensorboard.
Sacred - Python tool to help  you configure, organize, log and reproduce experiments. Like a notebook lab in the context of Chemestry/Biology. The community has built multiple add-ons leveraging the proposed standard.
MLFlow - platform to manage the ML lifecycle, including experimentation, reproducibility and deployment. Framework anf language agnostic, take a look at all the built-in integrations.
More tools to improve the ML lifecycle: Catalyst, PachydermIO. The following are Github-alike and targetting teams Weights & Biases, Neptune.Ml, Comet.ml, Valohai.ai.


Credits

Some of the python libraries were cut-and-pasted from vinta
References for Go were mostly cut-and-pasted from gopherdata

",awesome machine learning curated list awesome machine learning frameworks libraries software language inspired awesomephp want contribute list please send pull request contact josephmisiti also listed repository deprecated repositorys owner explicitly say library maintained committed long time years resources list free machine learning books available download go list mostly free machine learning courses available online go list blogs newsletters data science machine learning go list freetoattend meetups local events go table contents frameworks libraries awesome machine learning table contents frameworks libraries tools apl generalpurpose machine learning c generalpurpose machine learning computer vision c computer vision generalpurpose machine learning natural language processing speech recognition sequence analysis gesture detection common lisp generalpurpose machine learning clojure natural language processing generalpurpose machine learning data analysis data visualization crystal generalpurpose machine learning elixir generalpurpose machine learning natural language processing erlang generalpurpose machine learning go natural language processing generalpurpose machine learning spatial analysis geometry data analysis data visualization computer vision haskell generalpurpose machine learning java natural language processing generalpurpose machine learning speech recognition data analysis data visualization deep learning javascript natural language processing data analysis data visualization generalpurpose machine learning misc demos scripts julia generalpurpose machine learning natural language processing data analysis data visualization misc stuff presentations lua generalpurpose machine learning demos scripts matlab computer vision natural language processing generalpurpose machine learning data analysis data visualization net computer vision natural language processing generalpurpose machine learning data analysis data visualization objective c generalpurpose machine learning ocaml generalpurpose machine learning perl data analysis data visualization generalpurpose machine learning perl data analysis data visualization generalpurpose machine learning php natural language processing generalpurpose machine learning python computer vision natural language processing generalpurpose machine learning data analysis data visualization misc scripts ipython notebooks codebases neural networks kaggle competition source code reinforcement learning ruby natural language processing generalpurpose machine learning data analysis data visualization misc rust generalpurpose machine learning r generalpurpose machine learning data analysis data visualization sas generalpurpose machine learning data analysis data visualization natural language processing demos scripts scala natural language processing data analysis data visualization generalpurpose machine learning scheme neural networks swift generalpurpose machine learning tensorflow generalpurpose machine learning tools neural networks misc credits demos scripts scala natural language processing data analysis data visualization generalpurpose machine learning scheme neural networks swift generalpurpose machine learning tensorflow generalpurpose machine learning tools neural networks misc credits apl generalpurpose machine learning naiveapl naive bayesian classifier implementation apl deprecated c generalpurpose machine learning darknet darknet open source neural network framework written c cuda fast easy install supports cpu gpu computation recommender c library product recommendationssuggestions using collaborative filtering cf hybrid recommender system hybrid recommender system based upon scikitlearn algorithms deprecated neonrvm neonrvm open source machine learning library based rvm technique written c programming language comes python programming language bindings computer vision ccv cbasedcachedcore computer vision library modern computer vision library vlfeat vlfeat open portable library computer vision algorithms matlab toolbox c computer vision dlib dlib c python interfaces face detection training general object detectors eblearn eblearn objectoriented c library implements various machine learning models deprecated opencv opencv c c python java matlab interfaces supports windows linux android mac os vigra vigra generic crossplatform c computer vision machine learning library volumes arbitrary dimensionality python bindings generalpurpose machine learning banditlib simple multiarmed bandit library deprecated caffe deep learning framework developed cleanliness readability speed mind deep learning catboost general purpose gradient boosting decision trees library categorical features support box easy install contains fast inference implementation supports cpu gpu even multigpu computation cntk computational network toolkit cntk microsoft research unified deeplearning toolkit describes neural networks series computational steps via directed graph cuda fast ccuda implementation convolutional deep learning deepdetect machine learning api server written c makes state art machine learning easy work integrate existing applications distributed machine learning tool kit dmtk distributed machine learning parameter server framework microsoft enables training models large data sets across multiple machines current tools bundled include lightlda distributed multisense word embedding dlib suite ml tools designed easy imbed applications dsstne software library created amazon training deploying deep neural networks using gpus emphasizes speed scale experimental flexibility dynet dynamic neural network library working well networks dynamic structures change every training instance written c bindings python fido highlymodular c machine learning library embedded electronics robotics igraph general purpose graph library intelr daal high performance software library developed intel optimized intels architectures library provides algorithmic building blocks stages data analytics allows process data batch online distributed modes lightgbm microsofts fast distributed high performance gradient boosting gbdt gbrt gbm mart framework based decision tree algorithms used ranking classification many machine learning tasks libfm generic approach allows mimic factorization models feature engineering mldb machine learning database database designed machine learning send commands restful api store data explore using sql train machine learning models expose apis mlpack scalable c machine learning library mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript pronetcore generalpurpose network embedding framework pairwise representations optimization network edit pycuda python interface cuda root modular scientific software framework provides functionalities needed deal big data processing statistical analysis visualization storage shark fast modular featurerich opensource c machine learning library shogun shogun machine learning toolbox sofiaml suite fast incremental algorithms stan probabilistic programming language implementing full bayesian statistical inference hamiltonian monte carlo sampling timbl software packagec library implementing several memorybased learning algorithms among ibig implementation knearest neighbor classification igtree decisiontree approximation ibig commonly used nlp vowpal wabbit vw fast outofcore learning system warpctc fast parallel implementation connectionist temporal classification ctc cpu gpu xgboost parallelized optimized general purpose gradient boosting library thundergbm fast library gbdts random forests gpus thundersvm fast svm library gpus cpus lkydeepnn headeronly c neural network library low dependency native traditional chinese document xlearn high performance easytouse scalable machine learning package used solve largescale machine learning problems xlearn especially useful solving machine learning problems largescale sparse data common internet services online advertisement recommender systems featuretools library automated feature engineering excels transforming transactional relational datasets feature matrices machine learning using reusable feature engineering primitives skynet library learning neural network cinterface net set json written c bindings python c c feast feature store management discovery access machine learning features feast provides consistent view feature data model training model serving polyaxon platform reproducible scalable machine learning deep learning natural language processing bllip parser bllip natural language parser also known charniakjohnson parser colibricore c library command line tools python binding extracting working basic linguistic constructions ngrams skipgrams quick memoryefficient way crf open source implementation conditional random fields crfs segmentinglabeling sequential data natural language processing tasks deprecated crfsuite crfsuite implementation conditional random fields crfs labeling sequential data deprecated frog memorybased nlp suite developed dutch pos tagger lemmatiser dependency parser ner shallow parser morphological analyzer libfolia c library folia format meta meta modern text analysis c data sciences toolkit facilitates mining big text data mit information extraction toolkit c c python tools named entity recognition relation extraction ucto unicodeaware regularexpression based tokenizer various languages tool c library supports folia format speech recognition kaldi kaldi toolkit speech recognition written c licensed apache license v kaldi intended use speech recognition researchers sequence analysis tops objectedoriented framework facilitates integration probabilistic models sequences user defined alphabet deprecated gesture detection grt gesture recognition toolkit grt crossplatform opensource c machine learning library designed realtime gesture recognition common lisp generalpurpose machine learning mgl neural networks boltzmann machines feedforward recurrent nets gaussian processes mglgpr evolutionary algorithms deprecated cllibsvm wrapper libsvm support vector machine library deprecated clonlinelearning online learning algorithms perceptron arow scw logistic regression clrandomforest implementation random forest common lisp clojure natural language processing clojureopennlp natural language processing clojure opennlp infectionsclj railslike inflection library clojure clojurescript generalpurpose machine learning touchstone clojure ab testing library deprecated clojush push programming language pushgp genetic programming system implemented clojure infer inference machine learning clojure deprecated cljml machine learning library clojure built top weka friends deprecated dlclj clojure wrapper deeplearningj encog clojure wrapper encog v machinelearning framework specializes neuralnets deprecated fungp genetic programming library clojure deprecated statistiker basic machine learning algorithms clojure deprecated clortex general machine learning library using numentas cortical learning algorithm deprecated comportex functionally composable machine learning library using numentas cortical learning algorithm deprecated cortex neural networks regression feature learning clojure lambdaml simple concise implementations machine learning techniques utilities clojure data analysis data visualization incanter incanter clojurebased rlike platform statistical computing graphics pigpen mapreduce clojure envision clojure data visualisation library based statistiker crystal generalpurpose machine learning machine simple machine learning algorithm crystalfann fann fast artificial neural network binding elixir generalpurpose machine learning simple bayes simple bayes naive bayes implementation elixir emel simple functional machine learning library written elixir tensorflex tensorflow bindings elixir programming language natural language processing stemmer english porter stemming implementation elixir erlang generalpurpose machine learning disco map reduce erlang deprecated yanni ann neural networks using erlangs leightweight processes go natural language processing snowball snowball stemmer go wordembedding word embeddings full implementation wordvec glove go sentences golang implementation punkt sentence tokenizer gongram inmemory ngram index compression deprecated paicehusk golang implementation paicehusk stemming algorithm deprecated goporterstemmer native go clean room implementation porter stemming algorithm deprecated generalpurpose machine learning birdland recommendation library go eaopt evolutionary optimization library leaves pure go implementation prediction part gbrts including xgboost lightgbm gobrain neural networks written go gomxnetpredictor go binding mxnet cpredictapi inference pretrained model gomltranspiler open source go transpiler machine learning models golearn machine learning go goml machine learning library written pure go gorgonia deep learning go gorse offline recommender system backend based collaborative filtering written go therfoo embedded deep learning library go neat plugandplay parallel go framework neuroevolution augmenting topologies neat deprecated gopr pattern recognition package go lang deprecated goml linear logistic regression neural networks collaborative filtering gaussian multivariate distribution deprecated gonn gonn implementation neural network go language includes bpnn rbf pcn deprecated bayesian naive bayesian classification golang deprecated gogalib genetic algorithms library written go golang deprecated cloudforest ensembles decision trees gogolang deprecated godnn deep neural networks golang powered mxnet spatial analysis geometry gogeom go library handle geometries gogeo spherical geometry go data analysis data visualization gota dataframes gonummat linear algebra package go gonumoptimize implementations optimization algorithms gonumplot plotting library gonumstat statistics library svgo go language library svg generation glot glot plotting library golang built top gnuplot globe globe wireframe visualization gonumgraph generalpurpose graph library gograph graph library gogolang language deprecated rf random forests implementation go deprecated computer vision gocv package computer vision using opencv beyond haskell generalpurpose machine learning haskellml haskell implementations various ml algorithms deprecated hlearn suite libraries interpreting machine learning models according algebraic structure deprecated hnn haskell neural network library hopfieldnetworks hopfield networks unsupervised learning haskell deprecated dnngraph dsl deep neural networks deprecated lambdanet configurable neural networks haskell deprecated java natural language processing corticalio retina api performing complex nlp operations disambiguation classification streaming text filtering etc quickly intuitively brain iris corticalios free nlp retina api analysis tool written javafx see tutorial video corenlp stanford corenlp provides set natural language analysis tools take raw english language text input give base forms words stanford parser natural language parser program works grammatical structure sentences stanford pos tagger partofspeech tagger pos tagger stanford name entity recognizer stanford ner java implementation named entity recognizer stanford word segmenter tokenization raw text standard preprocessing step many nlp tasks tregex tsurgeon semgrex tregex utility matching patterns trees based tree relationships regular expression matches nodes name short tree regular expressions stanford phrasal phrasebased translation system stanford english tokenizer stanford phrasal stateoftheart statistical phrasebased machine translation system written java stanford tokens regex tokenizer divides text sequence tokens roughly correspond words stanford temporal tagger sutime library recognizing normalizing time expressions stanford spied learning entities unlabeled text starting seed sets using patterns iterative fashion stanford topic modeling toolbox topic modeling tools social scientists others wish perform analysis datasets twitter text java java implementation twitters text processing library mallet javabased package statistical natural language processing document classification clustering topic modeling information extraction machine learning applications text opennlp machine learning based toolkit processing natural language text lingpipe tool kit processing text using computational linguistics cleartk cleartk provides framework developing statistical natural language processing nlp components java built top apache uima deprecated apache ctakes apache clinical text analysis knowledge extraction system ctakes opensource natural language processing system information extraction electronic medical record clinical freetext nlpj nlpj project provides software resources natural language processing project started center computational language education research currently developed center language information research emory university deprecated cogcompnlp project collects number core libraries natural language processing nlp developed university illinois cognitive computation group example illinoiscoreutilities provides set nlpfriendly data structures number nlprelated utilities support writing nlp applications running experiments etc illinoisedison library feature extraction illinoiscoreutilities data structures many packages generalpurpose machine learning aerosolve machine learning library airbnb designed ground human friendly amidst toolbox java toolbox scalable probabilistic machine learning datumbox machine learning framework rapid development machine learning statistical applications elki java toolkit data mining unsupervised clustering outlier detection etc encog advanced neural network machine learning framework encog contains classes create wide variety networks well support classes normalize process data neural networks encog trains using multithreaded resilient propagation encog also make use gpu speed processing time gui based workbench also provided help model train neural networks flinkml apache flink distributed machine learning library flink ho ml engine supports distributed learning hadoop spark laptop via apis r python scala restjson htmjava general machine learning library using numentas cortical learning algorithm liblinearjava java version liblinear mahout distributed machine learning meka open source implementation methods multilabel classification evaluation extension weka mllib apache spark distributed machine learning library spark hydrosphere mist service deployment apache spark mllib machine learning models realtime batch reactive web services neuroph neuroph lightweight java neural network framework oryx lambda architecture framework using apache spark apache kafka specialization realtime largescale machine learning samoa samoa framework includes distributed machine learning data streams interface plugin different stream processing platforms ranklib ranklib library learning rank algorithms deprecated rapaio statistics data mining machine learning toolbox java rapidminer rapidminer integration java code stanford classifier classifier machine learning tool take data items place one k classes smileminer statistical machine intelligence learning engine systemml flexible scalable machine learning ml language weka weka collection machine learning algorithms data mining tasks lbjava learning based java modeling language rapid development software systems offers convenient declarative syntax classifier constraint definition directly terms objects programmers application speech recognition cmu sphinx open source toolkit speech recognition purely based java speech recognition library data analysis data visualization flink open source platform distributed stream batch data processing hadoop hadoophdfs onyx distributed masterless high performance fault tolerant data processing written entirely clojure spark spark fast general engine largescale data processing storm storm distributed realtime computation system impala realtime query hadoop datamelt mathematics software numeric computation statistics symbolic calculations data analysis data visualization dr michael thomas flanagans java scientific library deprecated deep learning deeplearningj scalable deep learning industry parallel gpus keras beginner tutorial friendly guide using keras implement simple neural network python javascript natural language processing twittertext javascript implementation twitters text processing library natural general natural language facilities node knwljs natural language processor js retext extensible system analyzing manipulating natural language nlp compromise natural language processing browser nlpjs nlp library built node natural entity extraction sentiment analysis automatic language identify data analysis data visualization djs high charts nvdjs dcjs chartjs dimple amcharts dxter straight forward plotting built deprecated statkit statistics kit javascript deprecated datakit lightweight framework data analysis javascript sciencejs scientific statistical computing javascript deprecated zd easily make interactive plots built threejs deprecated sigmajs javascript library dedicated graph drawing cjs customizable library based djs easy chart drawing datamaps customizable svg mapgeo visualizations using djs deprecated zingchart library written vanilla js big data visualization cheminfo platform data visualization analysis using visualizer project learn js data anychart fusioncharts nivo built top awesome reactjs libraries generalpurpose machine learning auto ml automated machine learning data formatting ensembling hyperparameter optimization competitions exploration give csv file convnetjs convnetjs javascript library training deep learning modelsdeep learning deprecated clusterfck agglomerative hierarchical clustering implemented javascript nodejs browser deprecated clusteringjs clustering algorithms implemented javascript nodejs browser deprecated decision trees nodejs implementation decision tree using id algorithm deprecated dna digital neural networks architecture deprecated figue kmeans fuzzy cmeans agglomerative clustering gaussian mixture model unsupervised machine learning multivariate gaussian mixture model nodefann fann fast artificial neural network library bindings nodejs deprecated kerasjs run keras models browser gpu support provided webgl kmeansjs simple javascript implementation kmeans algorithm nodejs browser deprecated ldajs lda topic modeling nodejs learningjs javascript implementation logistic regressionc decision tree deprecated machinelearnjs machine learning library web nodejs developers miltokyo list several machine learning libraries nodesvm support vector machine nodejs brain neural networks javascript deprecated brainjs neural networks javascript continued community fork brain bayesianbandit bayesian bandit implementation node browser deprecated synaptic architecturefree neural network library nodejs browser knear javascript implementation k nearest neighbors algorithm supervised learning neuraln c neural network library nodejs advantage large dataset multithreaded training deprecated kalman kalman filter javascript deprecated shaman nodejs library support simple multiple linear regression deprecated mljs machine learning numerical analysis tools nodejs browser ml friendly machine learning web pavlovjs reinforcement learning using markov decision processes mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript tensorflowjs webgl accelerated browser based javascript library training deploying ml models jsmlt machine learning toolkit classification clustering nodejs supports visualization see visualmlio xgboostnode run xgboost model make predictions nodejs netron visualizer machine learning models webdnn fast deep neural network javascript framework webdnn uses next generation javascript api webgpu gpu execution webassembly cpu execution misc stdlib standard library javascript nodejs emphasis numeric computing library provides collection robust high performance libraries mathematics statistics streams utilities sylvester vector matrix math javascript deprecated simplestatistics javascript implementation descriptive regression inference statistics implemented literate javascript dependencies designed work modern browsers including ie well nodejs regressionjs javascript library containing collection least squares fitting methods finding trend set data lyric linear regression library deprecated greatcircle library calculating great circle distance mlpleasehelp mlpleasehelp simple ml resource search engine use search engine right httpsjgreenemigithubiomlpleasehelp provided via github pages demos scripts bot example neural network learns predict angle two points created synaptic half beer beer glass classifier created synaptic nsfwjs indecent content checker tensorflowjs rock paper scissors rock paper scissors trained browser tensorflowjs julia generalpurpose machine learning machinelearning julia machine learning library deprecated mlbase set functions support development machine learning algorithms pgm julia framework probabilistic graphical models da julia package regularized discriminant analysis regression algorithms regression analysis eg linear regression logistic regression deprecated local regression local regression smooooth naive bayes simple naive bayes implementation julia deprecated mixed models julia package fitting statistical mixedeffects models simple mcmc basic mcmc sampler implemented julia deprecated distances julia module distance evaluation decision tree decision tree classifier regressor neural neural network julia mcmc mcmc tools julia deprecated mamba markov chain monte carlo mcmc bayesian analysis julia glm generalized linear models julia gaussian processes julia package gaussian processes online learning deprecated glmnet julia wrapper fitting lassoelasticnet glm models using glmnet clustering basic functions clustering data kmeans dpmeans etc svm svms julia deprecated kernel density kernel density estimators julia multivariatestats methods dimensionality reduction nmf julia package nonnegative matrix factorization ann julia artificial neural networks deprecated mocha deep learning framework julia inspired caffe deprecated xgboost extreme gradient boosting package julia manifoldlearning julia package manifold learning nonlinear dimensionality reduction mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript merlin flexible deep learning framework julia rocanalysis receiver operating characteristics functions evaluation probabilistic binary classifiers gaussianmixtures large scale gaussian mixture models scikitlearn julia implementation scikitlearn api knet koc university deep learning framework flux relax flux ml library doesnt make tensor natural language processing topic models topicmodels julia deprecated text analysis julia package text analysis word tokenizers tokenizers natural language processing julia corpus loaders julia package providing variety loaders various nlp corpora embeddings functions data dependencies loading various word embeddings languages julia package working various human languages wordnet julia package princetons wordnet data analysis data visualization graph layout graph layout algorithms pure julia lightgraphs graph modeling analysis data frames meta metaprogramming tools dataframes julia data library working tabular data julia deprecated data read read files stata sas spss hypothesis tests hypothesis tests julia gadfly crafty statistical graphics julia stats statistical tests julia rdatasets julia package loading many data sets available r dataframes library working tabular data julia distributions julia package probability distributions associated functions data arrays data structures allow missing values deprecated time series time series toolkit julia sampling basic sampling algorithms julia misc stuff presentations dsp digital signal processing filtering periodograms spectrograms window functions juliacon presentations presentations juliacon signalprocessing signal processing tools julia images image library julia datadeps reproducible data setup reproducible science lua generalpurpose machine learning torch cephes cephes mathematical functions library wrapped torch provides wraps special mathematical functions cephes mathematical library developed stephen l moshier used among many places heart scipy deprecated autograd autograd automatically differentiates native torch code inspired original python version graph graph package torch deprecated randomkit numpys randomkit wrapped torch deprecated signal signal processing toolbox torch fft dct hilbert cepstrums stft nn neural network package torch torchnet framework torch provides set abstractions aiming encouraging code reuse well encouraging modular programming nngraph package provides graphical computation nn library torch nnx completely unstable experimental package extends torchs builtin nn library rnn recurrent neural network library extends torchs nn rnns lstms grus brnns blstms etc dpnn many useful features arent part main nn package dp deep learning library designed streamlining research development using torch distribution emphasizes flexibility elegant use objectoriented design patterns deprecated optim optimization library torch sgd adagrad conjugategradient lbfgs rprop unsup package unsupervised learning torch provides modules compatible nn linearpsd convpsd autoencoder selfcontained algorithms kmeans pca deprecated manifold package manipulate manifolds svm torchsvm library deprecated lbfgs ffi wrapper liblbfgs deprecated vowpalwabbit old vowpalwabbit interface torch deprecated opengm opengm c library graphical modeling inference lua bindings provide simple way describing graphs lua optimizing opengm deprecated spaghetti spaghetti sparse linear module torch michaelmathieu deprecated luashkit lua wrapper around locality sensitive hashing library shkit deprecated kernel smoothing knn kernelweighted average local linear regression smoothers deprecated cutorch torch cuda implementation cunn torch cuda neural network implementation imgraph imagegraph library torch package provides routines construct graphs images segment build trees convert back images deprecated videograph videograph library torch package provides routines construct graphs videos segment build trees convert back videos deprecated saliency code tools around integral images library finding interest points based fast integral histograms deprecated stitch allows us use hugin stitch images apply stitching video sequence deprecated sfm bundle adjustmentstructure motion package deprecated fex package feature extraction torch provides sift dsift modules deprecated overfeat stateoftheart generic dense feature extractor deprecated wavletter simple efficient endtoend automatic speech recognition asr system facebook ai research numeric lua lunatic python scilua lua numerical algorithms deprecated lunum deprecated demos scripts core torch demos repository linearregression logisticregression face detector training detection separate demos mstbasedsegmenter trainadigitclassifier trainautoencoder optical flow demo trainonhousenumbers trainoncifar tracking deep nets kinect demo filterbank visualization saliencynetworks training convnet galaxyzoo kaggle challengecuda demo music tagging music tagging scripts torch torchdatasets scripts load several popular datasets including bsr cifar coil street view house numbers mnist norb atari scripts generate dataset static frames arcade learning environment matlab computer vision contourlets matlab source code implements contourlet transform utility functions shearlets matlab code shearlet transform curvelets curvelet transform higher dimensional generalization wavelet transform designed represent images different scales different angles bandlets matlab code bandlet transform mexopencv collection development kit matlab mex functions opencv library natural language processing nlp nlp library matlab generalpurpose machine learning training deep autoencoder classifier mnist digits training deep autoencoder classifier mnist digitsdeep learning convolutionalrecursive deep learning object classification convolutionalrecursive deep learning object classificationdeep learning spider spider intended complete object orientated environment machine learning matlab libsvm library support vector machines thundersvm opensource svm library gpus cpus liblinear library large linear classification machine learning module class machine w pdf lectures code caffe deep learning framework developed cleanliness readability speed mind pattern recognition toolbox complete objectoriented environment machine learning matlab pattern recognition machine learning package contains matlab implementation algorithms described book pattern recognition machine learning c bishop optunity library dedicated automated hyperparameter optimization simple lightweight api facilitate dropin replacement grid search optunity written python interfaces seamlessly matlab mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript machine learning matlaboctave examples popular machine learning algorithms neural networks linearlogistic regressions kmeans etc code examples mathematics behind explained data analysis data visualization matlabbgl matlabbgl matlab package working graphs gaimc efficient purematlab implementations graph algorithms complement matlabbgls mex functions net computer vision opencvdotnet wrapper opencv project used net applications emgu cv cross platform wrapper opencv compiled mono run windows linus mac os x ios android aforgenet open source c framework developers researchers fields computer vision artificial intelligence development shifted github accordnet together aforgenet library provide image processing computer vision algorithms windows windows rt windows phone components also available java android natural language processing stanfordnlp net full port stanford nlp packages net also available precompiled nuget package generalpurpose machine learning accordframework accordnet framework complete framework building machine learning computer vision computer audition signal processing statistical applications accordmachinelearning support vector machines decision trees naive bayesian models kmeans gaussian mixture models general algorithms ransac crossvalidation gridsearch machinelearning applications package part accordnet framework diffsharp automatic differentiation ad library providing exact efficient derivatives gradients hessians jacobians directional derivatives matrixfree hessian jacobianvector products machine learning optimization applications operations nested level meaning compute exact higherorder derivatives differentiate functions internally making use differentiation applications hyperparameter optimization encog advanced neural network machine learning framework encog contains classes create wide variety networks well support classes normalize process data neural networks encog trains using multithreaded resilient propagation encog also make use gpu speed processing time gui based workbench also provided help model train neural networks geneticsharp multiplatform genetic algorithm library net core net framework library several implementations ga operators like selection crossover mutation reinsertion termination infernet infernet framework running bayesian inference graphical models one use infernet solve many different kinds machine learning problems standard problems like classification recommendation clustering customised solutions domainspecific problems infernet used wide variety domains including information retrieval bioinformatics epidemiology vision many others mlnet mlnet crossplatform opensource machine learning framework makes machine learning accessible net developers mlnet originally developed microsoft research evolved significant framework last decade used across many product groups microsoft like windows bing powerpoint excel neural network designer dbms management system designer neural networks designer application developed using wpf user interface allows design neural network query network create configure chat bots capable asking questions learning feed back chat bots even scrape internet information return output well use learning synapses neural network library f vulpes deep belief deep learning implementation written f leverages cuda gpu execution aleacubase data analysis data visualization numl numl machine learning library intended ease use using standard modeling techniques prediction clustering mathnet numerics numerical foundation mathnet project aiming provide methods algorithms numerical computations science engineering every day use supports net net mono windows linux mac silverlight windowsphonesl windowsphone windows pcl portable profiles androidios xamarin sho sho interactive environment data analysis scientific computing lets seamlessly connect scripts ironpython compiled code net enable fast flexible prototyping environment includes powerful efficient libraries linear algebra well data visualization used net language well featurerich interactive shell rapid development objective c generalpurpose machine learning ycml machine learning framework objectivec swift os x ios mlpneuralnet fast multilayer perceptron neural network library ios mac os x mlpneuralnet predicts new examples trained neural network built top apples accelerate framework using vectorized operations hardware acceleration available deprecated machinelearning objectivec multilayer perceptron library full support training backpropagation implemented using vdsp veclib times faster java equivalent includes sample code use swift bpnneuralnetwork implemented layers neural network input layer hidden layer output layer named back propagation neural network bpn network used products recommendation user behavior analysis data mining data analysis deprecated multiperceptronneuralnetwork implemented multiperceptrons neural network based back propagation neural network bpn designed unlimitedhiddenlayers krhebbianalgorithm nonsupervisor selflearning algorithm adjust weights neural network machine learning deprecated krkmeansalgorithm implemented kmeans clustering classification algorithm could used data mining image compression deprecated krfuzzycmeansalgorithm implemented fuzzy cmeans fcm fuzzy clustering classification algorithm machine learning could used data mining image compression deprecated ocaml generalpurpose machine learning oml general statistics machine learning library gpr efficient gaussian process regression ocaml libratk algorithms learning inference discrete probabilistic models tensorflow ocaml bindings tensorflow perl data analysis data visualization perl data language pluggable architecture data image processing used machine learning generalpurpose machine learning mxnet deep learning perl also released cpan perl data language using aws machine learning platform perl algorithmsvmlight implementation support vector machines svmlight deprecated several machine learning artificial intelligence models included ai namespace instance find naive bayes perl support vector machines naive bayes data analysis data visualization perl data language pluggable architecture data image processing used machine learning generalpurpose machine learning php natural language processing jiebaphp chinese words segmentation utilities generalpurpose machine learning phpml machine learning library php algorithms cross validation neural network preprocessing feature extraction much one library predictionbuilder library machine learning builds predictions using linear regression rubix ml highlevel machine learning ml library lets build programs learn data using php language questions machine learning bayesian inference assigning attributes objects python computer vision scikitimage collection algorithms image processing python simplecv open source computer vision framework gives access several highpowered computer vision libraries opencv written python runs mac windows ubuntu linux vigranumpy python bindings vigra c computer vision library openface free open source face recognition deep neural networks pcv open source python module computer vision deprecated facerecognition face recognition library recognize manipulate faces python command line dockerface easy install use deep learning faster rcnn face detection images video docker container detectron fairs software system implements stateoftheart object detection algorithms including mask rcnn written python powered caffe deep learning framework albumentations fast framework agnostic image augmentation library implements diverse set augmentation techniques supports classification segmentation detection box used win number deep learning competitions kaggle topcoder part cvpr workshops pytessarct pythontesseract optical character recognition ocr tool python recognize read text embedded imagespythontesseract wrapper googles tesseractocr engine imutils library containg convenience functions make basic image processing operations translation rotation resizing skeletonization displaying matplotlib images easier opencv python pytorchcv pytorchbased framework deep learning computer vision neuralstylept pytorch implementation justin johnsons neuralstyle neural style transfer natural language processing pkusegpython better version jieba developed peking university nltk leading platform building python programs work human language data pattern web mining module python programming language tools natural language processing machine learning among others quepy python framework transform natural language questions queries database query language textblob providing consistent api diving common natural language processing nlp tasks stands giant shoulders nltk pattern plays nicely yalign sentence aligner friendly tool extracting parallel sentences comparable corpora deprecated jieba chinese words segmentation utilities snownlp library processing chinese text spammy library email spam filtering built top nltk loso another chinese segmentation library deprecated genius chinese segment base conditional random field konlpy python package korean natural language processing nut natural language understanding toolkit deprecated rosetta text processing tools wrappers eg vowpal wabbit bllip parser python bindings bllip natural language parser also known charniakjohnson parser deprecated pynlpl python natural language processing library general purpose nlp library python also contains specific modules parsing common nlp formats notably folia also arpa language models moses phrasetables giza alignments pythonucto python binding ucto unicodeaware rulebased tokenizer various languages pythonfrog python binding frog nlp suite dutch pos tagging lemmatisation dependency parsing ner pythonzpar python bindings zpar statistical partofspeechtagger constiuency parser dependency parser english colibricore python binding c library extracting working basic linguistic constructions ngrams skipgrams quick memoryefficient way spacy industrial strength nlp python cython pystanforddependencies python interface converting penn treebank trees stanford dependencies distance levenshtein hamming distance computation deprecated fuzzy wuzzy fuzzy string matching python jellyfish python library approximate phonetic matching strings editdistance fast implementation edit distance textacy higherlevel nlp built spacy stanfordcorenlppython python wrapper stanford corenlp deprecated cltk classical language toolkit rasanlu turn natural language structured data yase transcode sentence sequence list word vector polyglot multilingual text nlp processing toolkit drqa reading wikipedia answer opendomain questions dedupe python library accurate scalable fuzzy matching record deduplication entityresolution snips nlu natural language understanding library intent classification entity extraction neuroner namedentity recognition using neural networks providing stateoftheartresults deeppavlov conversational ai library many pretrained russian nlp models bigartm topic modelling platform generalpurpose machine learning pyod python outlier detection comprehensive scalable python toolkit detecting outlying objects multivariate data featured advanced models including neural networksdeep learning outlier ensembles steppy lightweight python library fast reproducible machine learning experimentation introduces simple interface enables clean machine learning pipeline design steppytoolkit curated collection neural networks transformers models make machine learning work faster effective cntk microsoft cognitive toolkit cntk open source deeplearning toolkit documentation found automl automated machine learning production analytics lets focus fun parts ml outputting productionready code detailed analytics dataset results includes support nlp xgboost catboost lightgbm soon deep learning machine learning automated build consisting webinterface set programmaticinterface api support vector machines corresponding datasets stored sql database generated models used predictions stored nosql datastore xgboost python bindings extreme gradient boosting tree library apache singa apache incubating project developing open source machine learning library bayesian methods hackers bookipython notebooks probabilistic programming python featureforge set tools creating testing machine learning features scikitlearn compatible api mllib apache spark distributed machine learning library spark hydrosphere mist service deployment apache spark mllib machine learning models realtime batch reactive web services scikitlearn python module machine learning built top scipy metriclearn python module metric learning simpleai python implementation many artificial intelligence algorithms described book artificial intelligence modern approach focuses providing easy use well documented tested library astroml machine learning data mining astronomy graphlabcreate library various machine learning models regression clustering recommender systems graph analytics etc implemented top diskbacked dataframe bigml library contacts external servers pattern web mining module python nupic numenta platform intelligent computing pylearn machine learning library based theano deprecated keras highlevel neural networks frontend tensorflow cntk theano lasagne lightweight library build train neural networks theano hebel gpuaccelerated deep learning library python deprecated chainer flexible neural network framework prophet fast automated time series forecasting framework facebook gensim topic modelling humans topik topic modelling toolkit deprecated pybrain another python machine learning library brainstorm fast flexible fun neural networks successor pybrain surprise scikit building analyzing recommender systems crab flexible fast recommender engine deprecated pythonrecsys python library implementing recommender system thinking bayes book bayesian analysis imagetoimage translation conditional adversarial networks implementation image image pixpix translation paper isola et aldeep learning restricted boltzmann machines restricted boltzmann machines python deep learning bolt bolt online learning toolbox deprecated covertree python implementation cover trees neardropin replacement scipyspatialkdtree deprecated nilearn machine learning neuroimaging python neuropredict aimed novice machine learners nonexpert programmers package offers easy coding needed comprehensive machine learning evaluation full report predictive performance without requiring code python neuroimaging type features aimed absorbing much ml workflow unlike packages like nilearn pymvpa require learn api code produce anything useful imbalancedlearn python module perform sampling sampling various techniques shogun shogun machine learning toolbox pyevolve genetic algorithm framework deprecated caffe deep learning framework developed cleanliness readability speed mind breze theano based library deep recurrent neural networks cortex open source platform deploying machine learning models production pyhsmm library approximate unsupervised inference bayesian hidden markov models hmms explicitduration hidden semimarkov models hsmms focusing bayesian nonparametric extensions hdphmm hdphsmm mostly weaklimit approximations mrjob library let python program run hadoop skll wrapper around scikitlearn makes simpler conduct experiments neurolab spearmint spearmint package perform bayesian optimization according algorithms outlined paper practical bayesian optimization machine learning algorithms jasper snoek hugo larochelle ryan p adams advances neural information processing systems deprecated pebl python environment bayesian learning deprecated theano optimizing gpumetaprogramming code generating array oriented optimizing math compiler python tensorflow open source software library numerical computation using data flow graphs pomegranate hidden markov models python implemented cython speed efficiency pythontimbl python extension module wrapping full timbl c programming interface timbl elaborate knearest neighbours machine learning toolkit deap evolutionary algorithm framework pydeep deep learning python deprecated mlxtend library consisting useful tools data science machine learning tasks neon nervanas highperformance pythonbased deep learning framework deep learning optunity library dedicated automated hyperparameter optimization simple lightweight api facilitate dropin replacement grid search neural networks deep learning code samples book neural networks deep learning deep learning annoy approximate nearest neighbours implementation tpot tool automatically creates optimizes machine learning pipelines using genetic programming consider personal data science assistant automating tedious part machine learning pgmpy python library working probabilistic graphical models digits deep learning gpu training system digits web application training deep learning models orange open source data visualization data analysis novices experts mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript milk machine learning toolkit focused supervised classification deprecated tflearn deep learning library featuring higherlevel api tensorflow rep ipythonbased environment conducting datadriven research consistent reproducible way rep trying substitute scikitlearn extends provides better user experience deprecated rgfpython python bindings regularized greedy forest tree library skbayes python package bayesian machine learning scikitlearn api fukuml simple machine learning library including perceptron regression support vector machine decision tree easy use easy learn beginners xcessiv webbased application quick scalable automated hyperparameter tuning stacked ensembling pytorch tensors dynamic neural networks python strong gpu acceleration mlfromscratch implementations machine learning models scratch python focus transparency aims showcase nuts bolts ml accessible way edward library probabilistic modeling inference criticism built top tensorflow xrbm library restricted boltzmann machine rbm conditional variants tensorflow catboost general purpose gradient boosting decision trees library categorical features support box easy install well documented supports cpu gpu even multigpu computation stackedgeneralization implementation machine learning stacking technic handy library python modal modular active learning framework python built top scikitlearn cogitare modern fast modular deep learning machine learning framework python parris parris automated infrastructure setup tool machine learning algorithms neonrvm neonrvm open source machine learning library based rvm technique written c programming language comes python programming language bindings turi create machine learning apple turi create simplifies development custom machine learning models dont machine learning expert add recommendations object detection image classification image similarity activity classification app xlearn high performance easytouse scalable machine learning package used solve largescale machine learning problems xlearn especially useful solving machine learning problems largescale sparse data common internet services online advertisement recommender systems mlens high performance memory efficient maximally parallelized ensemble learning integrated scikitlearn netron visualizer machine learning models thampi machine learning prediction system aws lambda mindsdb open source framework streamline use neural networks microsoft recommenders examples best practices building recommendation systems provided jupyter notebooks repo contains latest state art algorithms microsoft research well companies institutions stellargraph machine learning graphs python library machine learning graphstructured networkstructured data bentoml toolkit package deploy machine learning models serving production miraiml asynchronous engine continuous autonomous machine learning built realtime usage numpyml reference implementations ml models written numpy creme framework online machine learning neuraxle framework providing right abstractions ease research development deployment ml pipelines cornac comparative framework multimodal recommender systems focus models leveraging auxiliary data jax jax autograd xla brought together highperformance machine learning research fastai library simplifies training fast accurate neural nets using modern best practices already supports vision text tabular collab collaborative filtering models box catalyst highlevel utils pytorch dl rl research developed focus reproducibility fast experimentation codeideas reusing able researchdevelop something new rather write another regular train loop fastai highlevel wrapper built top pytorch supports vision text tabular data collaborative filtering data analysis data visualization scipy pythonbased ecosystem opensource software mathematics science engineering numpy fundamental package scientific computing python numba python jit time compiler llvm aimed scientific python developers cython numpy mars tensorbased framework largescale data computation often regarded parallel distributed version numpy networkx highproductivity software complex networks igraph binding igraph library general purpose graph library pandas library providing highperformance easytouse data structures data analysis tools open mining business intelligence bi python pandas web interface deprecated pymc markov chain monte carlo sampling toolkit zipline pythonic algorithmic trading library pydy short python dynamics used assist workflow modeling dynamic motion based around numpy scipy ipython matplotlib sympy python library symbolic mathematics statsmodels statistical modeling econometrics python astropy community python library astronomy matplotlib python plotting library bokeh interactive web plotting python plotly collaborative web plotting python matplotlib altair python vega translator dpy plotting library python based djs pydexter simple plotting python wrapper dxterjs easily render charts inbrowser ggplot api ggplot r deprecated ggfortify unified interface ggplot popular r packages kartographpy rendering beautiful svg maps python pygal python svg charts creator pyqtgraph purepython graphics gui library built pyqt pyside numpy pycascading deprecated petrel tools writing submitting debugging monitoring storm topologies pure python blaze numpy pandas interface big data emcee python ensemble sampling toolkit affineinvariant mcmc windml python framework wind energy analysis prediction vispy gpubased highperformance interactive opengl dd data visualization library cerebro webbased visualization debugging platform nupic deprecated nupic studio allinone nupic hierarchical temporal memory visualization debugging supertool deprecated sparklingpandas pandas pyspark pops seaborn python visualization library based matplotlib bqplot api plotting jupyter ipython pastalog simple realtime visualization neural network training performance superset data exploration platform designed visual intuitive interactive dora tools exploratory data analysis python ruffus computation pipeline library python sompy self organizing map written python uses neural networks data analysis somoclu massively parallel selforganizing maps accelerate training multicore cpus gpus clusters python api hdbscan implementation hdbscan algorithm python used clustering visualizeml python package data exploration data analysis deprecated scikitplot visualization library quick easy generation common plots data analysis machine learning bowtie dashboard library interactive visualizations using flask socketio react lime lime explaining machine learning classifiers models able explain black box classifier two classes pycm pycm multiclass confusion matrix library written python supports input data vectors direct matrix proper tool postclassification model evaluation supports classes overall statistics parameters dash framework creating analytical web applications built top plotlyjs react flask lambdo workflow engine solving machine learning problems combining one analysis pipeline feature engineering machine learning ii model training prediction iii table population column evaluation via userdefined python functions tensorwatch debugging visualization tool machine learning data science extensively leverages jupyter notebook show realtime visualizations data running processes machine learning training dowel little logger machine learning research output object terminal csv tensorboard text logs disk one call loggerlog misc scripts ipython notebooks codebases mapreduce implementations common ml algorithms jupyter notebooks cover implement scratch different ml algorithms ordinary least squares gradient descent kmeans alternating least squares using python numpy make implementations scalable using mapreduce spark biopy biologicallyinspired machine learning algorithms python deprecated svm explorer interactive svm explorer using dash scikitlearn patternclassification thinking stats hyperopt numpic paperdiginorm gallery interesting ipython notebooks ipythonnotebooks datascienceipythonnotebooks continually updated data science python notebooks spark hadoop mapreduce hdfs aws kaggle scikitlearn matplotlib pandas numpy scipy various command lines decisionweights sarah palin lda topic modeling sarah palin emails diffusion segmentation collection image segmentation algorithms based diffusion methods scipy tutorials scipy tutorials outdated check scipylecturenotes crab recommendation engine library python bayespy bayesian inference tools python scikitlearn tutorials series notebooks learning scikitlearn sentimentanalyzer tweets sentiment analyzer sentimentclassifier sentiment classifier using word sense disambiguation grouplasso experiments coordinate descent algorithm used sparse group lasso model jprocessing kanji hiragana katakana romaji converter edict dictionary parallel sentences search sentence similarity two jp sentences sentiment analysis japanese text run cabochaiso configured python mnepythonnotebooks ipython notebooks eegmeg data processing using mnepython neon course ipython notebooks complete course around understanding nervanas neon pandas cookbook recipes using pythons pandas library climin optimization library focused machine learning pythonic implementations gradient descent lbfgs rmsprop adadelta others allen downeys data science course code data science olin college spring allen downeys think bayes code code repository think bayes allen downeys think complexity code code allen downeys book think complexity allen downeys think os code text supporting code think os brief introduction operating systems python programming humanities course python programming humanities assuming prior knowledge heavy focus text processing nlp greatcircle library calculating great circle distance optunity examples examples demonstrating use optunity synergy machine learning libraries dive machine learning python jupyter notebook scikitlearn learned python hacking first getting serious later wanted machine learning style join getting bit ahead tdb tensordebugger tdb visual debugger deep learning features interactive nodebynode debugging visualization tensorflow suiron machine learning rc cars introduction machine learning scikitlearn ipython notebooks data schools video tutorials scikitlearn practical xgboost python comprehensive online course using xgboost python introduction machine learning python notebooks code book introduction machine learning python pydata book materials ipython notebooks python data analysis wes mckinney published oreilly media homemade machine learning python examples popular machine learning algorithms interactive jupyter demos math explained prodmodel build tool data science pipelines theelementsofstatisticallearning repository contains jupyter notebooks implementing algorithms found book summary textbook neural networks nnbuilder nnbuilder python package lets build neural networks line neuraltalk neuraltalk pythonnumpy project learning multimodal recurrent neural networks describe images sentences neuron neuron simple class time series predictions utilize lnu linear neural unit qnu quadratic neural unit rbf radial basis function mlp multi layer perceptron mlpelm multi layer perceptron extreme learning machine neural networks learned gradient descent lelevenbergmarquardt algorithm neuraltalk neuraltalk pythonnumpy project learning multimodal recurrent neural networks describe images sentences deprecated neuron neuron simple class time series predictions utilize lnu linear neural unit qnu quadratic neural unit rbf radial basis function mlp multi layer perceptron mlpelm multi layer perceptron extreme learning machine neural networks learned gradient descent lelevenbergmarquardt algorithm deprecated data driven code simple implementation neural networks dummies python without using libraries detailed comments machine learning data science deep learning python livevideo course covers machine learning tensorflow artificial intelligence neural networks kaggle competition source code opensolutionhomecredit source code experiments results home credit default risk opensolutiongoogleaiobjectdetection source code experiments results google ai open images object detection track opensolutionsaltidentification source code experiments results tgs salt identification challenge opensolutionshipdetection source code experiments results airbus ship detection challenge opensolutiondatasciencebowl source code experiments results data science bowl opensolutionvalueprediction source code experiments results santander value prediction challenge opensolutiontoxiccomments source code toxic comment classification challenge wiki challenge implementation dell zhangs solution wikipedias participation challenge kaggle kaggle insults kaggle submission detecting insults social commentary kaggleacquirevaluedshopperschallenge code kaggle acquire valued shoppers challenge kagglecifar code cifar competition kaggle uses cudaconvnet kaggleblackbox deep learning made easy kaggleaccelerometer code accelerometer biometric competition kaggle kaggleadvertisedsalaries predicting job salaries ads kaggle competition kaggle amazon amazon access control challenge kagglebestbuybig code best buy competition kaggle kagglebestbuysmall kaggle dogs vs cats code kaggle dogs vs cats competition kaggle galaxy challenge winning solution galaxy challenge kaggle kaggle gender kaggle competition discriminate gender based handwriting kaggle merck merck challenge kaggle kaggle stackoverflow predicting closed questions stack overflow kaggleacquirevaluedshopperschallenge code kaggle acquire valued shoppers challenge winequality predicting wine quality reinforcement learning deepmind lab deepmind lab learning environment based id softwares quake iii arena via ioquake open source software primary purpose act testbed research artificial intelligence especially deep reinforcement learning gym openai gym toolkit developing comparing reinforcement learning algorithms serpentai serpentai game agent framework allows turn video game sandbox develop ai machine learning experiments researchers hobbyists vizdoom vizdoom allows developing ai bots play doom using visual information screen buffer primarily intended research machine visual learning deep reinforcement learning particular roboschool opensource software robot simulation integrated openai gym retro retro games gym slm lab modular deep reinforcement learning framework pytorch coach reinforcement learning coach intel ai lab enables easy experimentation state art reinforcement learning algorithms garage toolkit reproducible reinforcement learning research metaworld open source robotics benchmark meta multitask reinforcement learning ruby natural language processing awesome nlp ruby curated link list practical natural language processing ruby treat text retrieval annotation toolkit definitely comprehensive toolkit ive encountered far ruby stemmer expose libstemmerc ruby deprecated raspel raspell interface binding ruby deprecated uea stemmer ruby port uealite stemmer conservative stemmer search indexing twittertextrb library auto linking extraction usernames lists hashtags tweets generalpurpose machine learning awesome machine learning ruby curated list ml related resources ruby ruby machine learning machine learning algorithms implemented ruby deprecated machine learning ruby deprecated jruby mahout jruby mahout gem unleashes power apache mahout world jruby deprecated cardmagicclassifier general classifier module allow bayesian types classifications rblibsvm ruby language bindings libsvm library support vector machines scoruby creates random forest classifiers pmml files data analysis data visualization rsruby ruby r bridge datavisualizationruby source code supporting content ruby manor presentation data visualisation ruby deprecated rubyplot gnuplot wrapper ruby especially plotting roc curves svg files deprecated plotrb plotting library ruby built top vega deprecated scruffy beautiful graphing toolkit ruby sciruby glean data management tool humans deprecated bioruby arel deprecated misc big data chimps listof community based data collection packed gem get list pretty much anything stop words countries non words txt json hash demosearch list rust generalpurpose machine learning deeplearnrs deeplearnrs provides simple networks use matrix multiplication addition relu mit license rustlearn machine learning framework featuring logistic regression support vector machines decision trees random forests rustymachine purerust machine learning library leaf open source framework machine intelligence sharing concepts tensorflow caffe available mit license deprecated rustnn rustnn feedforward neural network library deprecated rusticsom rust library self organising maps som r generalpurpose machine learning ahaz ahaz regularization semiparametric additive hazards regression deprecated arules arules mining association rules frequent itemsets biglasso biglasso extending lasso model fitting big data r bmrm bmrm bundle methods regularized risk minimization package boruta boruta wrapper algorithm allrelevant feature selection bst bst gradient boosting c c c decision trees rulebased models caret classification regression training unified interface ml algorithms r caretensemble caretensemble framework fitting multiple caret models well creating ensembles models deprecated catboost general purpose gradient boosting decision trees library categorical features support box r clever algorithms machine learning corelearn corelearn classification regression feature evaluation ordinal evaluation coxboost coxboost cox models likelihood based boosting single survival endpoint competing risks deprecated cubist cubist rule instancebased regression modeling e e misc functions department statistics e tu wien earth earth multivariate adaptive regression spline models elasticnet elasticnet elasticnet sparse estimation sparse pca elemstatlearn elemstatlearn data sets functions examples book elements statistical learning data mining inference prediction trevor hastie robert tibshirani jerome friedman prediction trevor hastie robert tibshirani jerome friedman evtree evtree evolutionary learning globally optimal trees forecast forecast timeseries forecasting using arima ets stlm tbats neural network models forecasthybrid forecasthybrid automatic ensemble cross validation arima ets stlm tbats neural network models forecast package fpc fpc flexible procedures clustering frbs frbs fuzzy rulebased systems classification regression tasks deprecated gamboost gamboost generalized linear additive models likelihood based boosting deprecated gamboostlss gamboostlss boosting methods gamlss gbm gbm generalized boosted regression models glmnet glmnet lasso elasticnet regularized generalized linear models glmpath glmpath l regularization path generalized linear models cox proportional hazards model gmmboost gmmboost likelihoodbased boosting generalized mixed models deprecated grplasso grplasso fitting user specified models group lasso penalty grpreg grpreg regularization paths regression models grouped covariates ho framework fast parallel distributed machine learning algorithms scale deeplearning random forests gbm kmeans pca glm hda hda heteroscedastic discriminant analysis deprecated introduction statistical learning ipred ipred improved predictors kernlab kernlab kernelbased machine learning lab klar klar classification visualization llearn llearn fast algorithms best subset selection lars lars least angle regression lasso forward stagewise deprecated lasso lasso l constrained estimation aka lasso liblinear liblinear linear predictive models based liblinear cc library logicreg logicreg logic regression machine learning hackers maptree maptree mapping pruning graphing tree models deprecated mboost mboost modelbased boosting medley medley blending regression models using greedy stepwise approach mlr mlr machine learning r ncvreg ncvreg regularization paths scad mcppenalized regression models nnet nnet feedforward neural networks multinomial loglinear models deprecated pamr pamr pam prediction analysis microarrays deprecated party party laboratory recursive partytioning partykit partykit toolkit recursive partytioning penalized penalized l lasso fused lasso l ridge penalized estimation glms cox model penalizedlda penalizedlda penalized classification using fishers linear discriminant deprecated penalizedsvm penalizedsvm feature selection svm using penalty functions quantregforest quantregforest quantile regression forests randomforest randomforest breiman cutlers random forests classification regression randomforestsrc randomforestsrc random forests survival regression classification rfsrc rattle rattle graphical user interface data mining r rda rda shrunken centroids regularized discriminant analysis rdetools rdetools relevant dimension estimation rde feature spaces deprecated reemtree reemtree regression trees random effects longitudinal panel data deprecated relaxo relaxo relaxed lasso deprecated rgenoud rgenoud r version genetic optimization using derivatives rmalschains rmalschains continuous optimization using memetic algorithms local search chains malschains r rminer rminer simpler use data mining methods eg nn svm classification regression deprecated rocr rocr visualizing performance scoring classifiers deprecated roughsets roughsets data analysis using rough set fuzzy rough set theories deprecated rpart rpart recursive partitioning regression trees rpmm rpmm recursively partitioned mixture model rsnns rsnns neural networks r using stuttgart neural network simulator snns rweka rweka rweka interface rxshrink rxshrink maximum likelihood shrinkage via generalized ridge least angle regression sda sda shrinkage discriminant analysis cat score variable selection deprecated spectralgraphtopology spectralgraphtopology learning graphs data via spectral constraints superlearner multialgorithm ensemble learning packages svmpath svmpath svmpath svm path algorithm deprecated tgp tgp bayesian treed gaussian process models deprecated tree tree classification regression trees varselrf varselrf variable selection using random forests xgboostr r binding extreme gradient boosting tree library optunity library dedicated automated hyperparameter optimization simple lightweight api facilitate dropin replacement grid search optunity written python interfaces seamlessly r igraph binding igraph library general purpose graph library mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript tdsputilities two data science utilities r microsoft interactive data exploration analysis reporting idear automated modeling reporting amr data analysis data visualization ggplot data visualization package based grammar graphics tmap visualizing geospatial data static maps leaflet interactive maps tm quanteda main packages managing analyzing visualizing textual data shiny basis truly interactive displays dashboards r however measure interactivity achieved htmlwidgets bringing javascript libraries r include plotly dygraphs highcharter several others sas generalpurpose machine learning visual data mining machine learning interactive automated programmatic modeling latest machine learning algorithms endtoend analytics environment data prep deployment free trial available enterprise miner data mining machine learning creates deployable models using gui code factory miner automatically creates deployable machine learning models across numerous market customer segments using gui data analysis data visualization sasstat conducting advanced statistical analysis university edition free includes sas packages necessary data analysis visualization includes online sas courses natural language processing contextual analysis add structure unstructured text using gui sentiment analysis extract sentiment text using gui text miner text mining using gui code demos scripts mltables concise cheat sheets containing machine learning best practices enlightenapply example code materials illustrate applications sas machine learning techniques enlightenintegration example code materials illustrate techniques integrating sas analytics technologies java pmml python r enlightendeep example code materials illustrate using neural networks several hidden layers sas dmflow library sas enterprise miner process flow diagrams help learn example specific data mining topics scala natural language processing scalanlp scalanlp suite machine learning numerical computing libraries breeze breeze numerical processing library scala chalk chalk natural language processing library deprecated factorie factorie toolkit deployable probabilistic modeling implemented software library scala provides users succinct language creating relational factor graphs estimating parameters performing inference montague montague semantic parsing library scala easytouse dsl spark nlp natural language processing library built top apache spark ml provide simple performant accurate nlp annotations machine learning pipelines scale easily distributed environment data analysis data visualization mllib apache spark distributed machine learning library spark hydrosphere mist service deployment apache spark mllib machine learning models realtime batch reactive web services scalding scala api cascading summing bird streaming mapreduce scalding storm algebird abstract algebra scala xerial data management utilities scala deprecated predictionio predictionio machine learning server software developers data engineers bidmat cpu gpuaccelerated matrix library intended support largescale exploratory data analysis flink open source platform distributed stream batch data processing spark notebook interactive reactive data science using scala spark generalpurpose machine learning deeplearningscala creating statically typed dynamic neural networks objectoriented functional programming constructs conjecture scalable machine learning scalding brushfire distributed decision tree ensemble learning scala ganitha scalding powered machine learning deprecated adam genomics processing engine specialized file format built using apache avro apache spark parquet apache licensed bioscala bioinformatics scala programming language bidmach cpu gpuaccelerated machine learning library figaro scala library constructing probabilistic models ho sparkling water ho spark interoperability flinkml apache flink distributed machine learning library flink dynaml scala libraryrepl machine learning research saul flexible declarative learningbased programming swiftlearner simply written algorithms help study ml write implementations smile statistical machine intelligence learning engine doddlemodel inmemory machine learning library built top breeze provides immutable objects exposes functionality scikitlearnlike api tensorflow scala stronglytyped scala api tensorflow scheme neural networks layer neural network inference command line implemented chicken scheme swift generalpurpose machine learning bender fast neural networks framework built top metal supports tensorflow models swift ai highly optimized artificial intelligence machine learning library written swift swift tensorflow nextgeneration platform machine learning incorporating latest research across machine learning compilers differentiable programming systems design beyond braincore ios os x neural network framework swix bare bones library includes general matrix language wraps opencv ios development deprecated aitoolbox toolbox framework ai modules written swift graphstrees linear regression support vector machines neural networks pca kmeans genetic algorithms mdp mixture gaussians mlkit simple machine learning framework written swift currently features simple linear regression polynomial regression ridge regression swift brain first neural network machine learning library written swift project ai algorithms swift ios os x development project includes algorithms focused bayes theorem neural networks svms matrices etc perfect tensorflow swift language bindings tensorflow using native tensorflow models macos linux predictionbuilder library machine learning builds predictions using linear regression awesome coreml curated list pretrained coreml models awesome core ml models curated list machine learning models coreml format tensorflow generalpurpose machine learning awesome tensorflow list things related tensorflow golden tensorflow page content tensorflow including academic papers links related topics tools neural networks layer neural network inference command line misc ml workspace allinone webbased ide machine learning data science workspace deployed docker container preloaded variety popular data science libraries eg tensorflow pytorch dev tools eg jupyter vs code notebooks starter kit jupyter notebooks machine learning companion docker images consist combinations python versions machine learning frameworks keras pytorch tensorflow cpucuda versions dvc data science version control opensource version control system machine learning projects pipelines support makes ml projects reproducible shareable kedro kedro data development workflow framework implements best practices data pipelines eye towards productionizing machine learning models guildai tool log analyze compare optimize experiments crossplatform framework independent provided integrated visualizers tensorboard sacred python tool help configure organize log reproduce experiments like notebook lab context chemestrybiology community built multiple addons leveraging proposed standard mlflow platform manage ml lifecycle including experimentation reproducibility deployment framework anf language agnostic take look builtin integrations tools improve ml lifecycle catalyst pachydermio following githubalike targetting teams weights biases neptuneml cometml valohaiai credits python libraries cutandpasted vinta references go mostly cutandpasted gopherdata,awesom machin learn curat list awesom machin learn framework librari softwar languag inspir awesomephp want contribut list pleas send pull request contact josephmis also list repositori deprec repositori owner explicitli say librari maintain commit long time year resourc list free machin learn book avail download go list mostli free machin learn cours avail onlin go list blog newslett data scienc machin learn go list freetoattend meetup local event go tabl content framework librari awesom machin learn tabl content framework librari tool apl generalpurpos machin learn c generalpurpos machin learn comput vision c comput vision generalpurpos machin learn natur languag process speech recognit sequenc analysi gestur detect common lisp generalpurpos machin learn clojur natur languag process generalpurpos machin learn data analysi data visual crystal generalpurpos machin learn elixir generalpurpos machin learn natur languag process erlang generalpurpos machin learn go natur languag process generalpurpos machin learn spatial analysi geometri data analysi data visual comput vision haskel generalpurpos machin learn java natur languag process generalpurpos machin learn speech recognit data analysi data visual deep learn javascript natur languag process data analysi data visual generalpurpos machin learn misc demo script julia generalpurpos machin learn natur languag process data analysi data visual misc stuff present lua generalpurpos machin learn demo script matlab comput vision natur languag process generalpurpos machin learn data analysi data visual net comput vision natur languag process generalpurpos machin learn data analysi data visual object c generalpurpos machin learn ocaml generalpurpos machin learn perl data analysi data visual generalpurpos machin learn perl data analysi data visual generalpurpos machin learn php natur languag process generalpurpos machin learn python comput vision natur languag process generalpurpos machin learn data analysi data visual misc script ipython notebook codebas neural network kaggl competit sourc code reinforc learn rubi natur languag process generalpurpos machin learn data analysi data visual misc rust generalpurpos machin learn r generalpurpos machin learn data analysi data visual sa generalpurpos machin learn data analysi data visual natur languag process demo script scala natur languag process data analysi data visual generalpurpos machin learn scheme neural network swift generalpurpos machin learn tensorflow generalpurpos machin learn tool neural network misc credit demo script scala natur languag process data analysi data visual generalpurpos machin learn scheme neural network swift generalpurpos machin learn tensorflow generalpurpos machin learn tool neural network misc credit apl generalpurpos machin learn naiveapl naiv bayesian classifi implement apl deprec c generalpurpos machin learn darknet darknet open sourc neural network framework written c cuda fast easi instal support cpu gpu comput recommend c librari product recommendationssuggest use collabor filter cf hybrid recommend system hybrid recommend system base upon scikitlearn algorithm deprec neonrvm neonrvm open sourc machin learn librari base rvm techniqu written c program languag come python program languag bind comput vision ccv cbasedcachedcor comput vision librari modern comput vision librari vlfeat vlfeat open portabl librari comput vision algorithm matlab toolbox c comput vision dlib dlib c python interfac face detect train gener object detector eblearn eblearn objectori c librari implement variou machin learn model deprec opencv opencv c c python java matlab interfac support window linux android mac os vigra vigra gener crossplatform c comput vision machin learn librari volum arbitrari dimension python bind generalpurpos machin learn banditlib simpl multiarm bandit librari deprec caff deep learn framework develop cleanli readabl speed mind deep learn catboost gener purpos gradient boost decis tree librari categor featur support box easi instal contain fast infer implement support cpu gpu even multigpu comput cntk comput network toolkit cntk microsoft research unifi deeplearn toolkit describ neural network seri comput step via direct graph cuda fast ccuda implement convolut deep learn deepdetect machin learn api server written c make state art machin learn easi work integr exist applic distribut machin learn tool kit dmtk distribut machin learn paramet server framework microsoft enabl train model larg data set across multipl machin current tool bundl includ lightlda distribut multisens word embed dlib suit ml tool design easi imb applic dsstne softwar librari creat amazon train deploy deep neural network use gpu emphas speed scale experiment flexibl dynet dynam neural network librari work well network dynam structur chang everi train instanc written c bind python fido highlymodular c machin learn librari embed electron robot igraph gener purpos graph librari intelr daal high perform softwar librari develop intel optim intel architectur librari provid algorithm build block stage data analyt allow process data batch onlin distribut mode lightgbm microsoft fast distribut high perform gradient boost gbdt gbrt gbm mart framework base decis tree algorithm use rank classif mani machin learn task libfm gener approach allow mimic factor model featur engin mldb machin learn databas databas design machin learn send command rest api store data explor use sql train machin learn model expos api mlpack scalabl c machin learn librari mxnet lightweight portabl flexibl distributedmobil deep learn dynam mutationawar dataflow dep schedul python r julia go javascript pronetcor generalpurpos network embed framework pairwis represent optim network edit pycuda python interfac cuda root modular scientif softwar framework provid function need deal big data process statist analysi visual storag shark fast modular featurerich opensourc c machin learn librari shogun shogun machin learn toolbox sofiaml suit fast increment algorithm stan probabilist program languag implement full bayesian statist infer hamiltonian mont carlo sampl timbl softwar packagec librari implement sever memorybas learn algorithm among ibig implement knearest neighbor classif igtre decisiontre approxim ibig commonli use nlp vowpal wabbit vw fast outofcor learn system warpctc fast parallel implement connectionist tempor classif ctc cpu gpu xgboost parallel optim gener purpos gradient boost librari thundergbm fast librari gbdt random forest gpu thundersvm fast svm librari gpu cpu lkydeepnn headeronli c neural network librari low depend nativ tradit chines document xlearn high perform easytous scalabl machin learn packag use solv largescal machin learn problem xlearn especi use solv machin learn problem largescal spars data common internet servic onlin advertis recommend system featuretool librari autom featur engin excel transform transact relat dataset featur matric machin learn use reusabl featur engin primit skynet librari learn neural network cinterfac net set json written c bind python c c feast featur store manag discoveri access machin learn featur feast provid consist view featur data model train model serv polyaxon platform reproduc scalabl machin learn deep learn natur languag process bllip parser bllip natur languag parser also known charniakjohnson parser colibricor c librari command line tool python bind extract work basic linguist construct ngram skipgram quick memoryeffici way crf open sourc implement condit random field crf segmentinglabel sequenti data natur languag process task deprec crfsuit crfsuit implement condit random field crf label sequenti data deprec frog memorybas nlp suit develop dutch po tagger lemmatis depend parser ner shallow parser morpholog analyz libfolia c librari folia format meta meta modern text analysi c data scienc toolkit facilit mine big text data mit inform extract toolkit c c python tool name entiti recognit relat extract ucto unicodeawar regularexpress base token variou languag tool c librari support folia format speech recognit kaldi kaldi toolkit speech recognit written c licens apach licens v kaldi intend use speech recognit research sequenc analysi top objectedori framework facilit integr probabilist model sequenc user defin alphabet deprec gestur detect grt gestur recognit toolkit grt crossplatform opensourc c machin learn librari design realtim gestur recognit common lisp generalpurpos machin learn mgl neural network boltzmann machin feedforward recurr net gaussian process mglgpr evolutionari algorithm deprec cllibsvm wrapper libsvm support vector machin librari deprec clonlinelearn onlin learn algorithm perceptron arow scw logist regress clrandomforest implement random forest common lisp clojur natur languag process clojureopennlp natur languag process clojur opennlp infectionsclj railslik inflect librari clojur clojurescript generalpurpos machin learn touchston clojur ab test librari deprec clojush push program languag pushgp genet program system implement clojur infer infer machin learn clojur deprec cljml machin learn librari clojur built top weka friend deprec dlclj clojur wrapper deeplearningj encog clojur wrapper encog v machinelearn framework special neuralnet deprec fungp genet program librari clojur deprec statistik basic machin learn algorithm clojur deprec clortex gener machin learn librari use numenta cortic learn algorithm deprec comportex function compos machin learn librari use numenta cortic learn algorithm deprec cortex neural network regress featur learn clojur lambdaml simpl concis implement machin learn techniqu util clojur data analysi data visual incant incant clojurebas rlike platform statist comput graphic pigpen mapreduc clojur envis clojur data visualis librari base statistik crystal generalpurpos machin learn machin simpl machin learn algorithm crystalfann fann fast artifici neural network bind elixir generalpurpos machin learn simpl bay simpl bay naiv bay implement elixir emel simpl function machin learn librari written elixir tensorflex tensorflow bind elixir program languag natur languag process stemmer english porter stem implement elixir erlang generalpurpos machin learn disco map reduc erlang deprec yanni ann neural network use erlang leightweight process go natur languag process snowbal snowbal stemmer go wordembed word embed full implement wordvec glove go sentenc golang implement punkt sentenc token gongram inmemori ngram index compress deprec paicehusk golang implement paicehusk stem algorithm deprec goporterstemm nativ go clean room implement porter stem algorithm deprec generalpurpos machin learn birdland recommend librari go eaopt evolutionari optim librari leav pure go implement predict part gbrt includ xgboost lightgbm gobrain neural network written go gomxnetpredictor go bind mxnet cpredictapi infer pretrain model gomltranspil open sourc go transpil machin learn model golearn machin learn go goml machin learn librari written pure go gorgonia deep learn go gors offlin recommend system backend base collabor filter written go therfoo embed deep learn librari go neat plugandplay parallel go framework neuroevolut augment topolog neat deprec gopr pattern recognit packag go lang deprec goml linear logist regress neural network collabor filter gaussian multivari distribut deprec gonn gonn implement neural network go languag includ bpnn rbf pcn deprec bayesian naiv bayesian classif golang deprec gogalib genet algorithm librari written go golang deprec cloudforest ensembl decis tree gogolang deprec godnn deep neural network golang power mxnet spatial analysi geometri gogeom go librari handl geometri gogeo spheric geometri go data analysi data visual gota datafram gonummat linear algebra packag go gonumoptim implement optim algorithm gonumplot plot librari gonumstat statist librari svgo go languag librari svg gener glot glot plot librari golang built top gnuplot globe globe wirefram visual gonumgraph generalpurpos graph librari gograph graph librari gogolang languag deprec rf random forest implement go deprec comput vision gocv packag comput vision use opencv beyond haskel generalpurpos machin learn haskellml haskel implement variou ml algorithm deprec hlearn suit librari interpret machin learn model accord algebra structur deprec hnn haskel neural network librari hopfieldnetwork hopfield network unsupervis learn haskel deprec dnngraph dsl deep neural network deprec lambdanet configur neural network haskel deprec java natur languag process corticalio retina api perform complex nlp oper disambigu classif stream text filter etc quickli intuit brain iri corticalio free nlp retina api analysi tool written javafx see tutori video corenlp stanford corenlp provid set natur languag analysi tool take raw english languag text input give base form word stanford parser natur languag parser program work grammat structur sentenc stanford po tagger partofspeech tagger po tagger stanford name entiti recogn stanford ner java implement name entiti recogn stanford word segment token raw text standard preprocess step mani nlp task tregex tsurgeon semgrex tregex util match pattern tree base tree relationship regular express match node name short tree regular express stanford phrasal phrasebas translat system stanford english token stanford phrasal stateoftheart statist phrasebas machin translat system written java stanford token regex token divid text sequenc token roughli correspond word stanford tempor tagger sutim librari recogn normal time express stanford spi learn entiti unlabel text start seed set use pattern iter fashion stanford topic model toolbox topic model tool social scientist other wish perform analysi dataset twitter text java java implement twitter text process librari mallet javabas packag statist natur languag process document classif cluster topic model inform extract machin learn applic text opennlp machin learn base toolkit process natur languag text lingpip tool kit process text use comput linguist cleartk cleartk provid framework develop statist natur languag process nlp compon java built top apach uima deprec apach ctake apach clinic text analysi knowledg extract system ctake opensourc natur languag process system inform extract electron medic record clinic freetext nlpj nlpj project provid softwar resourc natur languag process project start center comput languag educ research current develop center languag inform research emori univers deprec cogcompnlp project collect number core librari natur languag process nlp develop univers illinoi cognit comput group exampl illinoiscoreutil provid set nlpfriendli data structur number nlprelat util support write nlp applic run experi etc illinoisedison librari featur extract illinoiscoreutil data structur mani packag generalpurpos machin learn aerosolv machin learn librari airbnb design ground human friendli amidst toolbox java toolbox scalabl probabilist machin learn datumbox machin learn framework rapid develop machin learn statist applic elki java toolkit data mine unsupervis cluster outlier detect etc encog advanc neural network machin learn framework encog contain class creat wide varieti network well support class normal process data neural network encog train use multithread resili propag encog also make use gpu speed process time gui base workbench also provid help model train neural network flinkml apach flink distribut machin learn librari flink ho ml engin support distribut learn hadoop spark laptop via api r python scala restjson htmjava gener machin learn librari use numenta cortic learn algorithm liblinearjava java version liblinear mahout distribut machin learn meka open sourc implement method multilabel classif evalu extens weka mllib apach spark distribut machin learn librari spark hydrospher mist servic deploy apach spark mllib machin learn model realtim batch reactiv web servic neuroph neuroph lightweight java neural network framework oryx lambda architectur framework use apach spark apach kafka special realtim largescal machin learn samoa samoa framework includ distribut machin learn data stream interfac plugin differ stream process platform ranklib ranklib librari learn rank algorithm deprec rapaio statist data mine machin learn toolbox java rapidmin rapidmin integr java code stanford classifi classifi machin learn tool take data item place one k class smilemin statist machin intellig learn engin systemml flexibl scalabl machin learn ml languag weka weka collect machin learn algorithm data mine task lbjava learn base java model languag rapid develop softwar system offer conveni declar syntax classifi constraint definit directli term object programm applic speech recognit cmu sphinx open sourc toolkit speech recognit pure base java speech recognit librari data analysi data visual flink open sourc platform distribut stream batch data process hadoop hadoophdf onyx distribut masterless high perform fault toler data process written entir clojur spark spark fast gener engin largescal data process storm storm distribut realtim comput system impala realtim queri hadoop datamelt mathemat softwar numer comput statist symbol calcul data analysi data visual dr michael thoma flanagan java scientif librari deprec deep learn deeplearningj scalabl deep learn industri parallel gpu kera beginn tutori friendli guid use kera implement simpl neural network python javascript natur languag process twittertext javascript implement twitter text process librari natur gener natur languag facil node knwlj natur languag processor js retext extens system analyz manipul natur languag nlp compromis natur languag process browser nlpj nlp librari built node natur entiti extract sentiment analysi automat languag identifi data analysi data visual dj high chart nvdj dcj chartj dimpl amchart dxter straight forward plot built deprec statkit statist kit javascript deprec datakit lightweight framework data analysi javascript sciencej scientif statist comput javascript deprec zd easili make interact plot built threej deprec sigmaj javascript librari dedic graph draw cj customiz librari base dj easi chart draw datamap customiz svg mapgeo visual use dj deprec zingchart librari written vanilla js big data visual cheminfo platform data visual analysi use visual project learn js data anychart fusionchart nivo built top awesom reactj librari generalpurpos machin learn auto ml autom machin learn data format ensembl hyperparamet optim competit explor give csv file convnetj convnetj javascript librari train deep learn modelsdeep learn deprec clusterfck agglom hierarch cluster implement javascript nodej browser deprec clusteringj cluster algorithm implement javascript nodej browser deprec decis tree nodej implement decis tree use id algorithm deprec dna digit neural network architectur deprec figu kmean fuzzi cmean agglom cluster gaussian mixtur model unsupervis machin learn multivari gaussian mixtur model nodefann fann fast artifici neural network librari bind nodej deprec kerasj run kera model browser gpu support provid webgl kmeansj simpl javascript implement kmean algorithm nodej browser deprec ldaj lda topic model nodej learningj javascript implement logist regressionc decis tree deprec machinelearnj machin learn librari web nodej develop miltokyo list sever machin learn librari nodesvm support vector machin nodej brain neural network javascript deprec brainj neural network javascript continu commun fork brain bayesianbandit bayesian bandit implement node browser deprec synapt architecturefre neural network librari nodej browser knear javascript implement k nearest neighbor algorithm supervis learn neuraln c neural network librari nodej advantag larg dataset multithread train deprec kalman kalman filter javascript deprec shaman nodej librari support simpl multipl linear regress deprec mlj machin learn numer analysi tool nodej browser ml friendli machin learn web pavlovj reinforc learn use markov decis process mxnet lightweight portabl flexibl distributedmobil deep learn dynam mutationawar dataflow dep schedul python r julia go javascript tensorflowj webgl acceler browser base javascript librari train deploy ml model jsmlt machin learn toolkit classif cluster nodej support visual see visualmlio xgboostnod run xgboost model make predict nodej netron visual machin learn model webdnn fast deep neural network javascript framework webdnn use next gener javascript api webgpu gpu execut webassembl cpu execut misc stdlib standard librari javascript nodej emphasi numer comput librari provid collect robust high perform librari mathemat statist stream util sylvest vector matrix math javascript deprec simplestatist javascript implement descript regress infer statist implement liter javascript depend design work modern browser includ ie well nodej regressionj javascript librari contain collect least squar fit method find trend set data lyric linear regress librari deprec greatcircl librari calcul great circl distanc mlpleasehelp mlpleasehelp simpl ml resourc search engin use search engin right httpsjgreenemigithubiomlpleasehelp provid via github page demo script bot exampl neural network learn predict angl two point creat synapt half beer beer glass classifi creat synapt nsfwj indec content checker tensorflowj rock paper scissor rock paper scissor train browser tensorflowj julia generalpurpos machin learn machinelearn julia machin learn librari deprec mlbase set function support develop machin learn algorithm pgm julia framework probabilist graphic model da julia packag regular discrimin analysi regress algorithm regress analysi eg linear regress logist regress deprec local regress local regress smooooth naiv bay simpl naiv bay implement julia deprec mix model julia packag fit statist mixedeffect model simpl mcmc basic mcmc sampler implement julia deprec distanc julia modul distanc evalu decis tree decis tree classifi regressor neural neural network julia mcmc mcmc tool julia deprec mamba markov chain mont carlo mcmc bayesian analysi julia glm gener linear model julia gaussian process julia packag gaussian process onlin learn deprec glmnet julia wrapper fit lassoelasticnet glm model use glmnet cluster basic function cluster data kmean dpmean etc svm svm julia deprec kernel densiti kernel densiti estim julia multivariatestat method dimension reduct nmf julia packag nonneg matrix factor ann julia artifici neural network deprec mocha deep learn framework julia inspir caff deprec xgboost extrem gradient boost packag julia manifoldlearn julia packag manifold learn nonlinear dimension reduct mxnet lightweight portabl flexibl distributedmobil deep learn dynam mutationawar dataflow dep schedul python r julia go javascript merlin flexibl deep learn framework julia rocanalysi receiv oper characterist function evalu probabilist binari classifi gaussianmixtur larg scale gaussian mixtur model scikitlearn julia implement scikitlearn api knet koc univers deep learn framework flux relax flux ml librari doesnt make tensor natur languag process topic model topicmodel julia deprec text analysi julia packag text analysi word token token natur languag process julia corpu loader julia packag provid varieti loader variou nlp corpora embed function data depend load variou word embed languag julia packag work variou human languag wordnet julia packag princeton wordnet data analysi data visual graph layout graph layout algorithm pure julia lightgraph graph model analysi data frame meta metaprogram tool datafram julia data librari work tabular data julia deprec data read read file stata sa spss hypothesi test hypothesi test julia gadfli crafti statist graphic julia stat statist test julia rdataset julia packag load mani data set avail r datafram librari work tabular data julia distribut julia packag probabl distribut associ function data array data structur allow miss valu deprec time seri time seri toolkit julia sampl basic sampl algorithm julia misc stuff present dsp digit signal process filter periodogram spectrogram window function juliacon present present juliacon signalprocess signal process tool julia imag imag librari julia datadep reproduc data setup reproduc scienc lua generalpurpos machin learn torch ceph ceph mathemat function librari wrap torch provid wrap special mathemat function ceph mathemat librari develop stephen l moshier use among mani place heart scipi deprec autograd autograd automat differenti nativ torch code inspir origin python version graph graph packag torch deprec randomkit numpi randomkit wrap torch deprec signal signal process toolbox torch fft dct hilbert cepstrum stft nn neural network packag torch torchnet framework torch provid set abstract aim encourag code reus well encourag modular program nngraph packag provid graphic comput nn librari torch nnx complet unstabl experiment packag extend torch builtin nn librari rnn recurr neural network librari extend torch nn rnn lstm gru brnn blstm etc dpnn mani use featur arent part main nn packag dp deep learn librari design streamlin research develop use torch distribut emphas flexibl eleg use objectori design pattern deprec optim optim librari torch sgd adagrad conjugategradi lbfg rprop unsup packag unsupervis learn torch provid modul compat nn linearpsd convpsd autoencod selfcontain algorithm kmean pca deprec manifold packag manipul manifold svm torchsvm librari deprec lbfg ffi wrapper liblbfg deprec vowpalwabbit old vowpalwabbit interfac torch deprec opengm opengm c librari graphic model infer lua bind provid simpl way describ graph lua optim opengm deprec spaghetti spaghetti spars linear modul torch michaelmathieu deprec luashkit lua wrapper around local sensit hash librari shkit deprec kernel smooth knn kernelweight averag local linear regress smoother deprec cutorch torch cuda implement cunn torch cuda neural network implement imgraph imagegraph librari torch packag provid routin construct graph imag segment build tree convert back imag deprec videograph videograph librari torch packag provid routin construct graph video segment build tree convert back video deprec salienc code tool around integr imag librari find interest point base fast integr histogram deprec stitch allow us use hugin stitch imag appli stitch video sequenc deprec sfm bundl adjustmentstructur motion packag deprec fex packag featur extract torch provid sift dsift modul deprec overfeat stateoftheart gener dens featur extractor deprec wavlett simpl effici endtoend automat speech recognit asr system facebook ai research numer lua lunat python scilua lua numer algorithm deprec lunum deprec demo script core torch demo repositori linearregress logisticregress face detector train detect separ demo mstbasedsegment trainadigitclassifi trainautoencod optic flow demo trainonhousenumb trainoncifar track deep net kinect demo filterbank visual saliencynetwork train convnet galaxyzoo kaggl challengecuda demo music tag music tag script torch torchdataset script load sever popular dataset includ bsr cifar coil street view hous number mnist norb atari script gener dataset static frame arcad learn environ matlab comput vision contourlet matlab sourc code implement contourlet transform util function shearlet matlab code shearlet transform curvelet curvelet transform higher dimension gener wavelet transform design repres imag differ scale differ angl bandlet matlab code bandlet transform mexopencv collect develop kit matlab mex function opencv librari natur languag process nlp nlp librari matlab generalpurpos machin learn train deep autoencod classifi mnist digit train deep autoencod classifi mnist digitsdeep learn convolutionalrecurs deep learn object classif convolutionalrecurs deep learn object classificationdeep learn spider spider intend complet object orient environ machin learn matlab libsvm librari support vector machin thundersvm opensourc svm librari gpu cpu liblinear librari larg linear classif machin learn modul class machin w pdf lectur code caff deep learn framework develop cleanli readabl speed mind pattern recognit toolbox complet objectori environ machin learn matlab pattern recognit machin learn packag contain matlab implement algorithm describ book pattern recognit machin learn c bishop optun librari dedic autom hyperparamet optim simpl lightweight api facilit dropin replac grid search optun written python interfac seamlessli matlab mxnet lightweight portabl flexibl distributedmobil deep learn dynam mutationawar dataflow dep schedul python r julia go javascript machin learn matlaboctav exampl popular machin learn algorithm neural network linearlogist regress kmean etc code exampl mathemat behind explain data analysi data visual matlabbgl matlabbgl matlab packag work graph gaimc effici purematlab implement graph algorithm complement matlabbgl mex function net comput vision opencvdotnet wrapper opencv project use net applic emgu cv cross platform wrapper opencv compil mono run window linu mac os x io android aforgenet open sourc c framework develop research field comput vision artifici intellig develop shift github accordnet togeth aforgenet librari provid imag process comput vision algorithm window window rt window phone compon also avail java android natur languag process stanfordnlp net full port stanford nlp packag net also avail precompil nuget packag generalpurpos machin learn accordframework accordnet framework complet framework build machin learn comput vision comput audit signal process statist applic accordmachinelearn support vector machin decis tree naiv bayesian model kmean gaussian mixtur model gener algorithm ransac crossvalid gridsearch machinelearn applic packag part accordnet framework diffsharp automat differenti ad librari provid exact effici deriv gradient hessian jacobian direct deriv matrixfre hessian jacobianvector product machin learn optim applic oper nest level mean comput exact higherord deriv differenti function intern make use differenti applic hyperparamet optim encog advanc neural network machin learn framework encog contain class creat wide varieti network well support class normal process data neural network encog train use multithread resili propag encog also make use gpu speed process time gui base workbench also provid help model train neural network geneticsharp multiplatform genet algorithm librari net core net framework librari sever implement ga oper like select crossov mutat reinsert termin infernet infernet framework run bayesian infer graphic model one use infernet solv mani differ kind machin learn problem standard problem like classif recommend cluster customis solut domainspecif problem infernet use wide varieti domain includ inform retriev bioinformat epidemiolog vision mani other mlnet mlnet crossplatform opensourc machin learn framework make machin learn access net develop mlnet origin develop microsoft research evolv signific framework last decad use across mani product group microsoft like window bing powerpoint excel neural network design dbm manag system design neural network design applic develop use wpf user interfac allow design neural network queri network creat configur chat bot capabl ask question learn feed back chat bot even scrape internet inform return output well use learn synaps neural network librari f vulp deep belief deep learn implement written f leverag cuda gpu execut aleacubas data analysi data visual numl numl machin learn librari intend eas use use standard model techniqu predict cluster mathnet numer numer foundat mathnet project aim provid method algorithm numer comput scienc engin everi day use support net net mono window linux mac silverlight windowsphonesl windowsphon window pcl portabl profil androidio xamarin sho sho interact environ data analysi scientif comput let seamlessli connect script ironpython compil code net enabl fast flexibl prototyp environ includ power effici librari linear algebra well data visual use net languag well featurerich interact shell rapid develop object c generalpurpos machin learn ycml machin learn framework objectivec swift os x io mlpneuralnet fast multilay perceptron neural network librari io mac os x mlpneuralnet predict new exampl train neural network built top appl acceler framework use vector oper hardwar acceler avail deprec machinelearn objectivec multilay perceptron librari full support train backpropag implement use vdsp veclib time faster java equival includ sampl code use swift bpnneuralnetwork implement layer neural network input layer hidden layer output layer name back propag neural network bpn network use product recommend user behavior analysi data mine data analysi deprec multiperceptronneuralnetwork implement multiperceptron neural network base back propag neural network bpn design unlimitedhiddenlay krhebbianalgorithm nonsupervisor selflearn algorithm adjust weight neural network machin learn deprec krkmeansalgorithm implement kmean cluster classif algorithm could use data mine imag compress deprec krfuzzycmeansalgorithm implement fuzzi cmean fcm fuzzi cluster classif algorithm machin learn could use data mine imag compress deprec ocaml generalpurpos machin learn oml gener statist machin learn librari gpr effici gaussian process regress ocaml libratk algorithm learn infer discret probabilist model tensorflow ocaml bind tensorflow perl data analysi data visual perl data languag pluggabl architectur data imag process use machin learn generalpurpos machin learn mxnet deep learn perl also releas cpan perl data languag use aw machin learn platform perl algorithmsvmlight implement support vector machin svmlight deprec sever machin learn artifici intellig model includ ai namespac instanc find naiv bay perl support vector machin naiv bay data analysi data visual perl data languag pluggabl architectur data imag process use machin learn generalpurpos machin learn php natur languag process jiebaphp chines word segment util generalpurpos machin learn phpml machin learn librari php algorithm cross valid neural network preprocess featur extract much one librari predictionbuild librari machin learn build predict use linear regress rubix ml highlevel machin learn ml librari let build program learn data use php languag question machin learn bayesian infer assign attribut object python comput vision scikitimag collect algorithm imag process python simplecv open sourc comput vision framework give access sever highpow comput vision librari opencv written python run mac window ubuntu linux vigranumpi python bind vigra c comput vision librari openfac free open sourc face recognit deep neural network pcv open sourc python modul comput vision deprec facerecognit face recognit librari recogn manipul face python command line dockerfac easi instal use deep learn faster rcnn face detect imag video docker contain detectron fair softwar system implement stateoftheart object detect algorithm includ mask rcnn written python power caff deep learn framework albument fast framework agnost imag augment librari implement divers set augment techniqu support classif segment detect box use win number deep learn competit kaggl topcod part cvpr workshop pytessarct pythontesseract optic charact recognit ocr tool python recogn read text embed imagespythontesseract wrapper googl tesseractocr engin imutil librari conta conveni function make basic imag process oper translat rotat resiz skeleton display matplotlib imag easier opencv python pytorchcv pytorchbas framework deep learn comput vision neuralstylept pytorch implement justin johnson neuralstyl neural style transfer natur languag process pkusegpython better version jieba develop peke univers nltk lead platform build python program work human languag data pattern web mine modul python program languag tool natur languag process machin learn among other quepi python framework transform natur languag question queri databas queri languag textblob provid consist api dive common natur languag process nlp task stand giant shoulder nltk pattern play nice yalign sentenc align friendli tool extract parallel sentenc compar corpora deprec jieba chines word segment util snownlp librari process chines text spammi librari email spam filter built top nltk loso anoth chines segment librari deprec geniu chines segment base condit random field konlpi python packag korean natur languag process nut natur languag understand toolkit deprec rosetta text process tool wrapper eg vowpal wabbit bllip parser python bind bllip natur languag parser also known charniakjohnson parser deprec pynlpl python natur languag process librari gener purpos nlp librari python also contain specif modul pars common nlp format notabl folia also arpa languag model mose phraset giza align pythonucto python bind ucto unicodeawar rulebas token variou languag pythonfrog python bind frog nlp suit dutch po tag lemmatis depend pars ner pythonzpar python bind zpar statist partofspeechtagg constiuenc parser depend parser english colibricor python bind c librari extract work basic linguist construct ngram skipgram quick memoryeffici way spaci industri strength nlp python cython pystanforddepend python interfac convert penn treebank tree stanford depend distanc levenshtein ham distanc comput deprec fuzzi wuzzi fuzzi string match python jellyfish python librari approxim phonet match string editdist fast implement edit distanc textaci higherlevel nlp built spaci stanfordcorenlppython python wrapper stanford corenlp deprec cltk classic languag toolkit rasanlu turn natur languag structur data yase transcod sentenc sequenc list word vector polyglot multilingu text nlp process toolkit drqa read wikipedia answer opendomain question dedup python librari accur scalabl fuzzi match record dedupl entityresolut snip nlu natur languag understand librari intent classif entiti extract neuron namedent recognit use neural network provid stateoftheartresult deeppavlov convers ai librari mani pretrain russian nlp model bigartm topic model platform generalpurpos machin learn pyod python outlier detect comprehens scalabl python toolkit detect outli object multivari data featur advanc model includ neural networksdeep learn outlier ensembl steppi lightweight python librari fast reproduc machin learn experiment introduc simpl interfac enabl clean machin learn pipelin design steppytoolkit curat collect neural network transform model make machin learn work faster effect cntk microsoft cognit toolkit cntk open sourc deeplearn toolkit document found automl autom machin learn product analyt let focu fun part ml output productionreadi code detail analyt dataset result includ support nlp xgboost catboost lightgbm soon deep learn machin learn autom build consist webinterfac set programmaticinterfac api support vector machin correspond dataset store sql databas gener model use predict store nosql datastor xgboost python bind extrem gradient boost tree librari apach singa apach incub project develop open sourc machin learn librari bayesian method hacker bookipython notebook probabilist program python featureforg set tool creat test machin learn featur scikitlearn compat api mllib apach spark distribut machin learn librari spark hydrospher mist servic deploy apach spark mllib machin learn model realtim batch reactiv web servic scikitlearn python modul machin learn built top scipi metriclearn python modul metric learn simpleai python implement mani artifici intellig algorithm describ book artifici intellig modern approach focus provid easi use well document test librari astroml machin learn data mine astronomi graphlabcr librari variou machin learn model regress cluster recommend system graph analyt etc implement top diskback datafram bigml librari contact extern server pattern web mine modul python nupic numenta platform intellig comput pylearn machin learn librari base theano deprec kera highlevel neural network frontend tensorflow cntk theano lasagn lightweight librari build train neural network theano hebel gpuacceler deep learn librari python deprec chainer flexibl neural network framework prophet fast autom time seri forecast framework facebook gensim topic model human topik topic model toolkit deprec pybrain anoth python machin learn librari brainstorm fast flexibl fun neural network successor pybrain surpris scikit build analyz recommend system crab flexibl fast recommend engin deprec pythonrecsi python librari implement recommend system think bay book bayesian analysi imagetoimag translat condit adversari network implement imag imag pixpix translat paper isola et aldeep learn restrict boltzmann machin restrict boltzmann machin python deep learn bolt bolt onlin learn toolbox deprec covertre python implement cover tree neardropin replac scipyspatialkdtre deprec nilearn machin learn neuroimag python neuropredict aim novic machin learner nonexpert programm packag offer easi code need comprehens machin learn evalu full report predict perform without requir code python neuroimag type featur aim absorb much ml workflow unlik packag like nilearn pymvpa requir learn api code produc anyth use imbalancedlearn python modul perform sampl sampl variou techniqu shogun shogun machin learn toolbox pyevolv genet algorithm framework deprec caff deep learn framework develop cleanli readabl speed mind breze theano base librari deep recurr neural network cortex open sourc platform deploy machin learn model product pyhsmm librari approxim unsupervis infer bayesian hidden markov model hmm explicitdur hidden semimarkov model hsmm focus bayesian nonparametr extens hdphmm hdphsmm mostli weaklimit approxim mrjob librari let python program run hadoop skll wrapper around scikitlearn make simpler conduct experi neurolab spearmint spearmint packag perform bayesian optim accord algorithm outlin paper practic bayesian optim machin learn algorithm jasper snoek hugo larochel ryan p adam advanc neural inform process system deprec pebl python environ bayesian learn deprec theano optim gpumetaprogram code gener array orient optim math compil python tensorflow open sourc softwar librari numer comput use data flow graph pomegran hidden markov model python implement cython speed effici pythontimbl python extens modul wrap full timbl c program interfac timbl elabor knearest neighbour machin learn toolkit deap evolutionari algorithm framework pydeep deep learn python deprec mlxtend librari consist use tool data scienc machin learn task neon nervana highperform pythonbas deep learn framework deep learn optun librari dedic autom hyperparamet optim simpl lightweight api facilit dropin replac grid search neural network deep learn code sampl book neural network deep learn deep learn annoy approxim nearest neighbour implement tpot tool automat creat optim machin learn pipelin use genet program consid person data scienc assist autom tediou part machin learn pgmpi python librari work probabilist graphic model digit deep learn gpu train system digit web applic train deep learn model orang open sourc data visual data analysi novic expert mxnet lightweight portabl flexibl distributedmobil deep learn dynam mutationawar dataflow dep schedul python r julia go javascript milk machin learn toolkit focus supervis classif deprec tflearn deep learn librari featur higherlevel api tensorflow rep ipythonbas environ conduct datadriven research consist reproduc way rep tri substitut scikitlearn extend provid better user experi deprec rgfpython python bind regular greedi forest tree librari skbay python packag bayesian machin learn scikitlearn api fukuml simpl machin learn librari includ perceptron regress support vector machin decis tree easi use easi learn beginn xcessiv webbas applic quick scalabl autom hyperparamet tune stack ensembl pytorch tensor dynam neural network python strong gpu acceler mlfromscratch implement machin learn model scratch python focu transpar aim showcas nut bolt ml access way edward librari probabilist model infer critic built top tensorflow xrbm librari restrict boltzmann machin rbm condit variant tensorflow catboost gener purpos gradient boost decis tree librari categor featur support box easi instal well document support cpu gpu even multigpu comput stackedgener implement machin learn stack technic handi librari python modal modular activ learn framework python built top scikitlearn cogitar modern fast modular deep learn machin learn framework python parri parri autom infrastructur setup tool machin learn algorithm neonrvm neonrvm open sourc machin learn librari base rvm techniqu written c program languag come python program languag bind turi creat machin learn appl turi creat simplifi develop custom machin learn model dont machin learn expert add recommend object detect imag classif imag similar activ classif app xlearn high perform easytous scalabl machin learn packag use solv largescal machin learn problem xlearn especi use solv machin learn problem largescal spars data common internet servic onlin advertis recommend system mlen high perform memori effici maxim parallel ensembl learn integr scikitlearn netron visual machin learn model thampi machin learn predict system aw lambda mindsdb open sourc framework streamlin use neural network microsoft recommend exampl best practic build recommend system provid jupyt notebook repo contain latest state art algorithm microsoft research well compani institut stellargraph machin learn graph python librari machin learn graphstructur networkstructur data bentoml toolkit packag deploy machin learn model serv product miraiml asynchron engin continu autonom machin learn built realtim usag numpyml refer implement ml model written numpi creme framework onlin machin learn neuraxl framework provid right abstract eas research develop deploy ml pipelin cornac compar framework multimod recommend system focu model leverag auxiliari data jax jax autograd xla brought togeth highperform machin learn research fastai librari simplifi train fast accur neural net use modern best practic alreadi support vision text tabular collab collabor filter model box catalyst highlevel util pytorch dl rl research develop focu reproduc fast experiment codeidea reus abl researchdevelop someth new rather write anoth regular train loop fastai highlevel wrapper built top pytorch support vision text tabular data collabor filter data analysi data visual scipi pythonbas ecosystem opensourc softwar mathemat scienc engin numpi fundament packag scientif comput python numba python jit time compil llvm aim scientif python develop cython numpi mar tensorbas framework largescal data comput often regard parallel distribut version numpi networkx highproduct softwar complex network igraph bind igraph librari gener purpos graph librari panda librari provid highperform easytous data structur data analysi tool open mine busi intellig bi python panda web interfac deprec pymc markov chain mont carlo sampl toolkit ziplin python algorithm trade librari pydi short python dynam use assist workflow model dynam motion base around numpi scipi ipython matplotlib sympi python librari symbol mathemat statsmodel statist model econometr python astropi commun python librari astronomi matplotlib python plot librari bokeh interact web plot python plotli collabor web plot python matplotlib altair python vega translat dpi plot librari python base dj pydext simpl plot python wrapper dxterj easili render chart inbrows ggplot api ggplot r deprec ggfortifi unifi interfac ggplot popular r packag kartographpi render beauti svg map python pygal python svg chart creator pyqtgraph purepython graphic gui librari built pyqt pysid numpi pycascad deprec petrel tool write submit debug monitor storm topolog pure python blaze numpi panda interfac big data emce python ensembl sampl toolkit affineinvari mcmc windml python framework wind energi analysi predict vispi gpubas highperform interact opengl dd data visual librari cerebro webbas visual debug platform nupic deprec nupic studio allinon nupic hierarch tempor memori visual debug supertool deprec sparklingpanda panda pyspark pop seaborn python visual librari base matplotlib bqplot api plot jupyt ipython pastalog simpl realtim visual neural network train perform superset data explor platform design visual intuit interact dora tool exploratori data analysi python ruffu comput pipelin librari python sompi self organ map written python use neural network data analysi somoclu massiv parallel selforgan map acceler train multicor cpu gpu cluster python api hdbscan implement hdbscan algorithm python use cluster visualizeml python packag data explor data analysi deprec scikitplot visual librari quick easi gener common plot data analysi machin learn bowti dashboard librari interact visual use flask socketio react lime lime explain machin learn classifi model abl explain black box classifi two class pycm pycm multiclass confus matrix librari written python support input data vector direct matrix proper tool postclassif model evalu support class overal statist paramet dash framework creat analyt web applic built top plotlyj react flask lambdo workflow engin solv machin learn problem combin one analysi pipelin featur engin machin learn ii model train predict iii tabl popul column evalu via userdefin python function tensorwatch debug visual tool machin learn data scienc extens leverag jupyt notebook show realtim visual data run process machin learn train dowel littl logger machin learn research output object termin csv tensorboard text log disk one call loggerlog misc script ipython notebook codebas mapreduc implement common ml algorithm jupyt notebook cover implement scratch differ ml algorithm ordinari least squar gradient descent kmean altern least squar use python numpi make implement scalabl use mapreduc spark biopi biologicallyinspir machin learn algorithm python deprec svm explor interact svm explor use dash scikitlearn patternclassif think stat hyperopt numpic paperdiginorm galleri interest ipython notebook ipythonnotebook datascienceipythonnotebook continu updat data scienc python notebook spark hadoop mapreduc hdf aw kaggl scikitlearn matplotlib panda numpi scipi variou command line decisionweight sarah palin lda topic model sarah palin email diffus segment collect imag segment algorithm base diffus method scipi tutori scipi tutori outdat check scipylecturenot crab recommend engin librari python bayespi bayesian infer tool python scikitlearn tutori seri notebook learn scikitlearn sentimentanalyz tweet sentiment analyz sentimentclassifi sentiment classifi use word sens disambigu grouplasso experi coordin descent algorithm use spars group lasso model jprocess kanji hiragana katakana romaji convert edict dictionari parallel sentenc search sentenc similar two jp sentenc sentiment analysi japanes text run cabochaiso configur python mnepythonnotebook ipython notebook eegmeg data process use mnepython neon cours ipython notebook complet cours around understand nervana neon panda cookbook recip use python panda librari climin optim librari focus machin learn python implement gradient descent lbfg rmsprop adadelta other allen downey data scienc cours code data scienc olin colleg spring allen downey think bay code code repositori think bay allen downey think complex code code allen downey book think complex allen downey think os code text support code think os brief introduct oper system python program human cours python program human assum prior knowledg heavi focu text process nlp greatcircl librari calcul great circl distanc optun exampl exampl demonstr use optun synergi machin learn librari dive machin learn python jupyt notebook scikitlearn learn python hack first get seriou later want machin learn style join get bit ahead tdb tensordebugg tdb visual debugg deep learn featur interact nodebynod debug visual tensorflow suiron machin learn rc car introduct machin learn scikitlearn ipython notebook data school video tutori scikitlearn practic xgboost python comprehens onlin cours use xgboost python introduct machin learn python notebook code book introduct machin learn python pydata book materi ipython notebook python data analysi we mckinney publish oreilli media homemad machin learn python exampl popular machin learn algorithm interact jupyt demo math explain prodmodel build tool data scienc pipelin theelementsofstatisticallearn repositori contain jupyt notebook implement algorithm found book summari textbook neural network nnbuilder nnbuilder python packag let build neural network line neuraltalk neuraltalk pythonnumpi project learn multimod recurr neural network describ imag sentenc neuron neuron simpl class time seri predict util lnu linear neural unit qnu quadrat neural unit rbf radial basi function mlp multi layer perceptron mlpelm multi layer perceptron extrem learn machin neural network learn gradient descent lelevenbergmarquardt algorithm neuraltalk neuraltalk pythonnumpi project learn multimod recurr neural network describ imag sentenc deprec neuron neuron simpl class time seri predict util lnu linear neural unit qnu quadrat neural unit rbf radial basi function mlp multi layer perceptron mlpelm multi layer perceptron extrem learn machin neural network learn gradient descent lelevenbergmarquardt algorithm deprec data driven code simpl implement neural network dummi python without use librari detail comment machin learn data scienc deep learn python livevideo cours cover machin learn tensorflow artifici intellig neural network kaggl competit sourc code opensolutionhomecredit sourc code experi result home credit default risk opensolutiongoogleaiobjectdetect sourc code experi result googl ai open imag object detect track opensolutionsaltidentif sourc code experi result tg salt identif challeng opensolutionshipdetect sourc code experi result airbu ship detect challeng opensolutiondatasciencebowl sourc code experi result data scienc bowl opensolutionvaluepredict sourc code experi result santand valu predict challeng opensolutiontoxiccom sourc code toxic comment classif challeng wiki challeng implement dell zhang solut wikipedia particip challeng kaggl kaggl insult kaggl submiss detect insult social commentari kaggleacquirevaluedshopperschalleng code kaggl acquir valu shopper challeng kagglecifar code cifar competit kaggl use cudaconvnet kaggleblackbox deep learn made easi kaggleacceleromet code acceleromet biometr competit kaggl kaggleadvertisedsalari predict job salari ad kaggl competit kaggl amazon amazon access control challeng kagglebestbuybig code best buy competit kaggl kagglebestbuysmal kaggl dog vs cat code kaggl dog vs cat competit kaggl galaxi challeng win solut galaxi challeng kaggl kaggl gender kaggl competit discrimin gender base handwrit kaggl merck merck challeng kaggl kaggl stackoverflow predict close question stack overflow kaggleacquirevaluedshopperschalleng code kaggl acquir valu shopper challeng winequ predict wine qualiti reinforc learn deepmind lab deepmind lab learn environ base id softwar quak iii arena via ioquak open sourc softwar primari purpos act testb research artifici intellig especi deep reinforc learn gym openai gym toolkit develop compar reinforc learn algorithm serpentai serpentai game agent framework allow turn video game sandbox develop ai machin learn experi research hobbyist vizdoom vizdoom allow develop ai bot play doom use visual inform screen buffer primarili intend research machin visual learn deep reinforc learn particular roboschool opensourc softwar robot simul integr openai gym retro retro game gym slm lab modular deep reinforc learn framework pytorch coach reinforc learn coach intel ai lab enabl easi experiment state art reinforc learn algorithm garag toolkit reproduc reinforc learn research metaworld open sourc robot benchmark meta multitask reinforc learn rubi natur languag process awesom nlp rubi curat link list practic natur languag process rubi treat text retriev annot toolkit definit comprehens toolkit ive encount far rubi stemmer expos libstemmerc rubi deprec raspel raspel interfac bind rubi deprec uea stemmer rubi port uealit stemmer conserv stemmer search index twittertextrb librari auto link extract usernam list hashtag tweet generalpurpos machin learn awesom machin learn rubi curat list ml relat resourc rubi rubi machin learn machin learn algorithm implement rubi deprec machin learn rubi deprec jrubi mahout jrubi mahout gem unleash power apach mahout world jrubi deprec cardmagicclassifi gener classifi modul allow bayesian type classif rblibsvm rubi languag bind libsvm librari support vector machin scorubi creat random forest classifi pmml file data analysi data visual rsrubi rubi r bridg datavisualizationrubi sourc code support content rubi manor present data visualis rubi deprec rubyplot gnuplot wrapper rubi especi plot roc curv svg file deprec plotrb plot librari rubi built top vega deprec scruffi beauti graph toolkit rubi scirubi glean data manag tool human deprec biorubi arel deprec misc big data chimp listof commun base data collect pack gem get list pretti much anyth stop word countri non word txt json hash demosearch list rust generalpurpos machin learn deeplearnr deeplearnr provid simpl network use matrix multipl addit relu mit licens rustlearn machin learn framework featur logist regress support vector machin decis tree random forest rustymachin purerust machin learn librari leaf open sourc framework machin intellig share concept tensorflow caff avail mit licens deprec rustnn rustnn feedforward neural network librari deprec rusticsom rust librari self organis map som r generalpurpos machin learn ahaz ahaz regular semiparametr addit hazard regress deprec arul arul mine associ rule frequent itemset biglasso biglasso extend lasso model fit big data r bmrm bmrm bundl method regular risk minim packag boruta boruta wrapper algorithm allrelev featur select bst bst gradient boost c c c decis tree rulebas model caret classif regress train unifi interfac ml algorithm r caretensembl caretensembl framework fit multipl caret model well creat ensembl model deprec catboost gener purpos gradient boost decis tree librari categor featur support box r clever algorithm machin learn corelearn corelearn classif regress featur evalu ordin evalu coxboost coxboost cox model likelihood base boost singl surviv endpoint compet risk deprec cubist cubist rule instancebas regress model e e misc function depart statist e tu wien earth earth multivari adapt regress spline model elasticnet elasticnet elasticnet spars estim spars pca elemstatlearn elemstatlearn data set function exampl book element statist learn data mine infer predict trevor hasti robert tibshirani jerom friedman predict trevor hasti robert tibshirani jerom friedman evtre evtre evolutionari learn global optim tree forecast forecast timeseri forecast use arima et stlm tbat neural network model forecasthybrid forecasthybrid automat ensembl cross valid arima et stlm tbat neural network model forecast packag fpc fpc flexibl procedur cluster frb frb fuzzi rulebas system classif regress task deprec gamboost gamboost gener linear addit model likelihood base boost deprec gamboostlss gamboostlss boost method gamlss gbm gbm gener boost regress model glmnet glmnet lasso elasticnet regular gener linear model glmpath glmpath l regular path gener linear model cox proport hazard model gmmboost gmmboost likelihoodbas boost gener mix model deprec grplasso grplasso fit user specifi model group lasso penalti grpreg grpreg regular path regress model group covari ho framework fast parallel distribut machin learn algorithm scale deeplearn random forest gbm kmean pca glm hda hda heteroscedast discrimin analysi deprec introduct statist learn ipr ipr improv predictor kernlab kernlab kernelbas machin learn lab klar klar classif visual llearn llearn fast algorithm best subset select lar lar least angl regress lasso forward stagewis deprec lasso lasso l constrain estim aka lasso liblinear liblinear linear predict model base liblinear cc librari logicreg logicreg logic regress machin learn hacker maptre maptre map prune graph tree model deprec mboost mboost modelbas boost medley medley blend regress model use greedi stepwis approach mlr mlr machin learn r ncvreg ncvreg regular path scad mcppenal regress model nnet nnet feedforward neural network multinomi loglinear model deprec pamr pamr pam predict analysi microarray deprec parti parti laboratori recurs partyt partykit partykit toolkit recurs partyt penal penal l lasso fuse lasso l ridg penal estim glm cox model penalizedlda penalizedlda penal classif use fisher linear discrimin deprec penalizedsvm penalizedsvm featur select svm use penalti function quantregforest quantregforest quantil regress forest randomforest randomforest breiman cutler random forest classif regress randomforestsrc randomforestsrc random forest surviv regress classif rfsrc rattl rattl graphic user interfac data mine r rda rda shrunken centroid regular discrimin analysi rdetool rdetool relev dimens estim rde featur space deprec reemtre reemtre regress tree random effect longitudin panel data deprec relaxo relaxo relax lasso deprec rgenoud rgenoud r version genet optim use deriv rmalschain rmalschain continu optim use memet algorithm local search chain malschain r rminer rminer simpler use data mine method eg nn svm classif regress deprec rocr rocr visual perform score classifi deprec roughset roughset data analysi use rough set fuzzi rough set theori deprec rpart rpart recurs partit regress tree rpmm rpmm recurs partit mixtur model rsnn rsnn neural network r use stuttgart neural network simul snn rweka rweka rweka interfac rxshrink rxshrink maximum likelihood shrinkag via gener ridg least angl regress sda sda shrinkag discrimin analysi cat score variabl select deprec spectralgraphtopolog spectralgraphtopolog learn graph data via spectral constraint superlearn multialgorithm ensembl learn packag svmpath svmpath svmpath svm path algorithm deprec tgp tgp bayesian treed gaussian process model deprec tree tree classif regress tree varselrf varselrf variabl select use random forest xgboostr r bind extrem gradient boost tree librari optun librari dedic autom hyperparamet optim simpl lightweight api facilit dropin replac grid search optun written python interfac seamlessli r igraph bind igraph librari gener purpos graph librari mxnet lightweight portabl flexibl distributedmobil deep learn dynam mutationawar dataflow dep schedul python r julia go javascript tdsputil two data scienc util r microsoft interact data explor analysi report idear autom model report amr data analysi data visual ggplot data visual packag base grammar graphic tmap visual geospati data static map leaflet interact map tm quanteda main packag manag analyz visual textual data shini basi truli interact display dashboard r howev measur interact achiev htmlwidget bring javascript librari r includ plotli dygraph highchart sever other sa generalpurpos machin learn visual data mine machin learn interact autom programmat model latest machin learn algorithm endtoend analyt environ data prep deploy free trial avail enterpris miner data mine machin learn creat deploy model use gui code factori miner automat creat deploy machin learn model across numer market custom segment use gui data analysi data visual sasstat conduct advanc statist analysi univers edit free includ sa packag necessari data analysi visual includ onlin sa cours natur languag process contextu analysi add structur unstructur text use gui sentiment analysi extract sentiment text use gui text miner text mine use gui code demo script mltabl concis cheat sheet contain machin learn best practic enlightenappli exampl code materi illustr applic sa machin learn techniqu enlightenintegr exampl code materi illustr techniqu integr sa analyt technolog java pmml python r enlightendeep exampl code materi illustr use neural network sever hidden layer sa dmflow librari sa enterpris miner process flow diagram help learn exampl specif data mine topic scala natur languag process scalanlp scalanlp suit machin learn numer comput librari breez breez numer process librari scala chalk chalk natur languag process librari deprec factori factori toolkit deploy probabilist model implement softwar librari scala provid user succinct languag creat relat factor graph estim paramet perform infer montagu montagu semant pars librari scala easytous dsl spark nlp natur languag process librari built top apach spark ml provid simpl perform accur nlp annot machin learn pipelin scale easili distribut environ data analysi data visual mllib apach spark distribut machin learn librari spark hydrospher mist servic deploy apach spark mllib machin learn model realtim batch reactiv web servic scald scala api cascad sum bird stream mapreduc scald storm algebird abstract algebra scala xerial data manag util scala deprec predictionio predictionio machin learn server softwar develop data engin bidmat cpu gpuacceler matrix librari intend support largescal exploratori data analysi flink open sourc platform distribut stream batch data process spark notebook interact reactiv data scienc use scala spark generalpurpos machin learn deeplearningscala creat static type dynam neural network objectori function program construct conjectur scalabl machin learn scald brushfir distribut decis tree ensembl learn scala ganitha scald power machin learn deprec adam genom process engin special file format built use apach avro apach spark parquet apach licens bioscala bioinformat scala program languag bidmach cpu gpuacceler machin learn librari figaro scala librari construct probabilist model ho sparkl water ho spark interoper flinkml apach flink distribut machin learn librari flink dynaml scala libraryrepl machin learn research saul flexibl declar learningbas program swiftlearn simpli written algorithm help studi ml write implement smile statist machin intellig learn engin doddlemodel inmemori machin learn librari built top breez provid immut object expos function scikitlearnlik api tensorflow scala stronglytyp scala api tensorflow scheme neural network layer neural network infer command line implement chicken scheme swift generalpurpos machin learn bender fast neural network framework built top metal support tensorflow model swift ai highli optim artifici intellig machin learn librari written swift swift tensorflow nextgener platform machin learn incorpor latest research across machin learn compil differenti program system design beyond braincor io os x neural network framework swix bare bone librari includ gener matrix languag wrap opencv io develop deprec aitoolbox toolbox framework ai modul written swift graphstre linear regress support vector machin neural network pca kmean genet algorithm mdp mixtur gaussian mlkit simpl machin learn framework written swift current featur simpl linear regress polynomi regress ridg regress swift brain first neural network machin learn librari written swift project ai algorithm swift io os x develop project includ algorithm focus bay theorem neural network svm matric etc perfect tensorflow swift languag bind tensorflow use nativ tensorflow model maco linux predictionbuild librari machin learn build predict use linear regress awesom coreml curat list pretrain coreml model awesom core ml model curat list machin learn model coreml format tensorflow generalpurpos machin learn awesom tensorflow list thing relat tensorflow golden tensorflow page content tensorflow includ academ paper link relat topic tool neural network layer neural network infer command line misc ml workspac allinon webbas ide machin learn data scienc workspac deploy docker contain preload varieti popular data scienc librari eg tensorflow pytorch dev tool eg jupyt vs code notebook starter kit jupyt notebook machin learn companion docker imag consist combin python version machin learn framework kera pytorch tensorflow cpucuda version dvc data scienc version control opensourc version control system machin learn project pipelin support make ml project reproduc shareabl kedro kedro data develop workflow framework implement best practic data pipelin eye toward production machin learn model guildai tool log analyz compar optim experi crossplatform framework independ provid integr visual tensorboard sacr python tool help configur organ log reproduc experi like notebook lab context chemestrybiolog commun built multipl addon leverag propos standard mlflow platform manag ml lifecycl includ experiment reproduc deploy framework anf languag agnost take look builtin integr tool improv ml lifecycl catalyst pachydermio follow githubalik target team weight bias neptuneml cometml valohaiai credit python librari cutandpast vinta refer go mostli cutandpast gopherdata,awesome machine learning curated list awesome machine learning framework library software language inspired awesomephp want contribute list please send pull request contact josephmisiti also listed repository deprecated repository owner explicitly say library maintained committed long time year resource list free machine learning book available download go list mostly free machine learning course available online go list blog newsletter data science machine learning go list freetoattend meetups local event go table content framework library awesome machine learning table content framework library tool apl generalpurpose machine learning c generalpurpose machine learning computer vision c computer vision generalpurpose machine learning natural language processing speech recognition sequence analysis gesture detection common lisp generalpurpose machine learning clojure natural language processing generalpurpose machine learning data analysis data visualization crystal generalpurpose machine learning elixir generalpurpose machine learning natural language processing erlang generalpurpose machine learning go natural language processing generalpurpose machine learning spatial analysis geometry data analysis data visualization computer vision haskell generalpurpose machine learning java natural language processing generalpurpose machine learning speech recognition data analysis data visualization deep learning javascript natural language processing data analysis data visualization generalpurpose machine learning misc demo script julia generalpurpose machine learning natural language processing data analysis data visualization misc stuff presentation lua generalpurpose machine learning demo script matlab computer vision natural language processing generalpurpose machine learning data analysis data visualization net computer vision natural language processing generalpurpose machine learning data analysis data visualization objective c generalpurpose machine learning ocaml generalpurpose machine learning perl data analysis data visualization generalpurpose machine learning perl data analysis data visualization generalpurpose machine learning php natural language processing generalpurpose machine learning python computer vision natural language processing generalpurpose machine learning data analysis data visualization misc script ipython notebook codebases neural network kaggle competition source code reinforcement learning ruby natural language processing generalpurpose machine learning data analysis data visualization misc rust generalpurpose machine learning r generalpurpose machine learning data analysis data visualization sa generalpurpose machine learning data analysis data visualization natural language processing demo script scala natural language processing data analysis data visualization generalpurpose machine learning scheme neural network swift generalpurpose machine learning tensorflow generalpurpose machine learning tool neural network misc credit demo script scala natural language processing data analysis data visualization generalpurpose machine learning scheme neural network swift generalpurpose machine learning tensorflow generalpurpose machine learning tool neural network misc credit apl generalpurpose machine learning naiveapl naive bayesian classifier implementation apl deprecated c generalpurpose machine learning darknet darknet open source neural network framework written c cuda fast easy install support cpu gpu computation recommender c library product recommendationssuggestions using collaborative filtering cf hybrid recommender system hybrid recommender system based upon scikitlearn algorithm deprecated neonrvm neonrvm open source machine learning library based rvm technique written c programming language come python programming language binding computer vision ccv cbasedcachedcore computer vision library modern computer vision library vlfeat vlfeat open portable library computer vision algorithm matlab toolbox c computer vision dlib dlib c python interface face detection training general object detector eblearn eblearn objectoriented c library implement various machine learning model deprecated opencv opencv c c python java matlab interface support window linux android mac o vigra vigra generic crossplatform c computer vision machine learning library volume arbitrary dimensionality python binding generalpurpose machine learning banditlib simple multiarmed bandit library deprecated caffe deep learning framework developed cleanliness readability speed mind deep learning catboost general purpose gradient boosting decision tree library categorical feature support box easy install contains fast inference implementation support cpu gpu even multigpu computation cntk computational network toolkit cntk microsoft research unified deeplearning toolkit describes neural network series computational step via directed graph cuda fast ccuda implementation convolutional deep learning deepdetect machine learning api server written c make state art machine learning easy work integrate existing application distributed machine learning tool kit dmtk distributed machine learning parameter server framework microsoft enables training model large data set across multiple machine current tool bundled include lightlda distributed multisense word embedding dlib suite ml tool designed easy imbed application dsstne software library created amazon training deploying deep neural network using gpus emphasizes speed scale experimental flexibility dynet dynamic neural network library working well network dynamic structure change every training instance written c binding python fido highlymodular c machine learning library embedded electronics robotics igraph general purpose graph library intelr daal high performance software library developed intel optimized intels architecture library provides algorithmic building block stage data analytics allows process data batch online distributed mode lightgbm microsofts fast distributed high performance gradient boosting gbdt gbrt gbm mart framework based decision tree algorithm used ranking classification many machine learning task libfm generic approach allows mimic factorization model feature engineering mldb machine learning database database designed machine learning send command restful api store data explore using sql train machine learning model expose apis mlpack scalable c machine learning library mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript pronetcore generalpurpose network embedding framework pairwise representation optimization network edit pycuda python interface cuda root modular scientific software framework provides functionality needed deal big data processing statistical analysis visualization storage shark fast modular featurerich opensource c machine learning library shogun shogun machine learning toolbox sofiaml suite fast incremental algorithm stan probabilistic programming language implementing full bayesian statistical inference hamiltonian monte carlo sampling timbl software packagec library implementing several memorybased learning algorithm among ibig implementation knearest neighbor classification igtree decisiontree approximation ibig commonly used nlp vowpal wabbit vw fast outofcore learning system warpctc fast parallel implementation connectionist temporal classification ctc cpu gpu xgboost parallelized optimized general purpose gradient boosting library thundergbm fast library gbdts random forest gpus thundersvm fast svm library gpus cpu lkydeepnn headeronly c neural network library low dependency native traditional chinese document xlearn high performance easytouse scalable machine learning package used solve largescale machine learning problem xlearn especially useful solving machine learning problem largescale sparse data common internet service online advertisement recommender system featuretools library automated feature engineering excels transforming transactional relational datasets feature matrix machine learning using reusable feature engineering primitive skynet library learning neural network cinterface net set json written c binding python c c feast feature store management discovery access machine learning feature feast provides consistent view feature data model training model serving polyaxon platform reproducible scalable machine learning deep learning natural language processing bllip parser bllip natural language parser also known charniakjohnson parser colibricore c library command line tool python binding extracting working basic linguistic construction ngrams skipgrams quick memoryefficient way crf open source implementation conditional random field crfs segmentinglabeling sequential data natural language processing task deprecated crfsuite crfsuite implementation conditional random field crfs labeling sequential data deprecated frog memorybased nlp suite developed dutch po tagger lemmatiser dependency parser ner shallow parser morphological analyzer libfolia c library folium format meta meta modern text analysis c data science toolkit facilitates mining big text data mit information extraction toolkit c c python tool named entity recognition relation extraction ucto unicodeaware regularexpression based tokenizer various language tool c library support folium format speech recognition kaldi kaldi toolkit speech recognition written c licensed apache license v kaldi intended use speech recognition researcher sequence analysis top objectedoriented framework facilitates integration probabilistic model sequence user defined alphabet deprecated gesture detection grt gesture recognition toolkit grt crossplatform opensource c machine learning library designed realtime gesture recognition common lisp generalpurpose machine learning mgl neural network boltzmann machine feedforward recurrent net gaussian process mglgpr evolutionary algorithm deprecated cllibsvm wrapper libsvm support vector machine library deprecated clonlinelearning online learning algorithm perceptron arow scw logistic regression clrandomforest implementation random forest common lisp clojure natural language processing clojureopennlp natural language processing clojure opennlp infectionsclj railslike inflection library clojure clojurescript generalpurpose machine learning touchstone clojure ab testing library deprecated clojush push programming language pushgp genetic programming system implemented clojure infer inference machine learning clojure deprecated cljml machine learning library clojure built top weka friend deprecated dlclj clojure wrapper deeplearningj encog clojure wrapper encog v machinelearning framework specializes neuralnets deprecated fungp genetic programming library clojure deprecated statistiker basic machine learning algorithm clojure deprecated clortex general machine learning library using numentas cortical learning algorithm deprecated comportex functionally composable machine learning library using numentas cortical learning algorithm deprecated cortex neural network regression feature learning clojure lambdaml simple concise implementation machine learning technique utility clojure data analysis data visualization incanter incanter clojurebased rlike platform statistical computing graphic pigpen mapreduce clojure envision clojure data visualisation library based statistiker crystal generalpurpose machine learning machine simple machine learning algorithm crystalfann fann fast artificial neural network binding elixir generalpurpose machine learning simple bayes simple bayes naive bayes implementation elixir emel simple functional machine learning library written elixir tensorflex tensorflow binding elixir programming language natural language processing stemmer english porter stemming implementation elixir erlang generalpurpose machine learning disco map reduce erlang deprecated yanni ann neural network using erlang leightweight process go natural language processing snowball snowball stemmer go wordembedding word embeddings full implementation wordvec glove go sentence golang implementation punkt sentence tokenizer gongram inmemory ngram index compression deprecated paicehusk golang implementation paicehusk stemming algorithm deprecated goporterstemmer native go clean room implementation porter stemming algorithm deprecated generalpurpose machine learning birdland recommendation library go eaopt evolutionary optimization library leaf pure go implementation prediction part gbrts including xgboost lightgbm gobrain neural network written go gomxnetpredictor go binding mxnet cpredictapi inference pretrained model gomltranspiler open source go transpiler machine learning model golearn machine learning go goml machine learning library written pure go gorgonia deep learning go gorse offline recommender system backend based collaborative filtering written go therfoo embedded deep learning library go neat plugandplay parallel go framework neuroevolution augmenting topology neat deprecated gopr pattern recognition package go lang deprecated goml linear logistic regression neural network collaborative filtering gaussian multivariate distribution deprecated gonn gonn implementation neural network go language includes bpnn rbf pcn deprecated bayesian naive bayesian classification golang deprecated gogalib genetic algorithm library written go golang deprecated cloudforest ensemble decision tree gogolang deprecated godnn deep neural network golang powered mxnet spatial analysis geometry gogeom go library handle geometry gogeo spherical geometry go data analysis data visualization gota dataframes gonummat linear algebra package go gonumoptimize implementation optimization algorithm gonumplot plotting library gonumstat statistic library svgo go language library svg generation glot glot plotting library golang built top gnuplot globe globe wireframe visualization gonumgraph generalpurpose graph library gograph graph library gogolang language deprecated rf random forest implementation go deprecated computer vision gocv package computer vision using opencv beyond haskell generalpurpose machine learning haskellml haskell implementation various ml algorithm deprecated hlearn suite library interpreting machine learning model according algebraic structure deprecated hnn haskell neural network library hopfieldnetworks hopfield network unsupervised learning haskell deprecated dnngraph dsl deep neural network deprecated lambdanet configurable neural network haskell deprecated java natural language processing corticalio retina api performing complex nlp operation disambiguation classification streaming text filtering etc quickly intuitively brain iris corticalios free nlp retina api analysis tool written javafx see tutorial video corenlp stanford corenlp provides set natural language analysis tool take raw english language text input give base form word stanford parser natural language parser program work grammatical structure sentence stanford po tagger partofspeech tagger po tagger stanford name entity recognizer stanford ner java implementation named entity recognizer stanford word segmenter tokenization raw text standard preprocessing step many nlp task tregex tsurgeon semgrex tregex utility matching pattern tree based tree relationship regular expression match node name short tree regular expression stanford phrasal phrasebased translation system stanford english tokenizer stanford phrasal stateoftheart statistical phrasebased machine translation system written java stanford token regex tokenizer divide text sequence token roughly correspond word stanford temporal tagger sutime library recognizing normalizing time expression stanford spied learning entity unlabeled text starting seed set using pattern iterative fashion stanford topic modeling toolbox topic modeling tool social scientist others wish perform analysis datasets twitter text java java implementation twitter text processing library mallet javabased package statistical natural language processing document classification clustering topic modeling information extraction machine learning application text opennlp machine learning based toolkit processing natural language text lingpipe tool kit processing text using computational linguistics cleartk cleartk provides framework developing statistical natural language processing nlp component java built top apache uima deprecated apache ctakes apache clinical text analysis knowledge extraction system ctakes opensource natural language processing system information extraction electronic medical record clinical freetext nlpj nlpj project provides software resource natural language processing project started center computational language education research currently developed center language information research emory university deprecated cogcompnlp project collect number core library natural language processing nlp developed university illinois cognitive computation group example illinoiscoreutilities provides set nlpfriendly data structure number nlprelated utility support writing nlp application running experiment etc illinoisedison library feature extraction illinoiscoreutilities data structure many package generalpurpose machine learning aerosolve machine learning library airbnb designed ground human friendly amidst toolbox java toolbox scalable probabilistic machine learning datumbox machine learning framework rapid development machine learning statistical application elki java toolkit data mining unsupervised clustering outlier detection etc encog advanced neural network machine learning framework encog contains class create wide variety network well support class normalize process data neural network encog train using multithreaded resilient propagation encog also make use gpu speed processing time gui based workbench also provided help model train neural network flinkml apache flink distributed machine learning library flink ho ml engine support distributed learning hadoop spark laptop via apis r python scala restjson htmjava general machine learning library using numentas cortical learning algorithm liblinearjava java version liblinear mahout distributed machine learning meka open source implementation method multilabel classification evaluation extension weka mllib apache spark distributed machine learning library spark hydrosphere mist service deployment apache spark mllib machine learning model realtime batch reactive web service neuroph neuroph lightweight java neural network framework oryx lambda architecture framework using apache spark apache kafka specialization realtime largescale machine learning samoa samoa framework includes distributed machine learning data stream interface plugin different stream processing platform ranklib ranklib library learning rank algorithm deprecated rapaio statistic data mining machine learning toolbox java rapidminer rapidminer integration java code stanford classifier classifier machine learning tool take data item place one k class smileminer statistical machine intelligence learning engine systemml flexible scalable machine learning ml language weka weka collection machine learning algorithm data mining task lbjava learning based java modeling language rapid development software system offer convenient declarative syntax classifier constraint definition directly term object programmer application speech recognition cmu sphinx open source toolkit speech recognition purely based java speech recognition library data analysis data visualization flink open source platform distributed stream batch data processing hadoop hadoophdfs onyx distributed masterless high performance fault tolerant data processing written entirely clojure spark spark fast general engine largescale data processing storm storm distributed realtime computation system impala realtime query hadoop datamelt mathematics software numeric computation statistic symbolic calculation data analysis data visualization dr michael thomas flanagans java scientific library deprecated deep learning deeplearningj scalable deep learning industry parallel gpus kera beginner tutorial friendly guide using kera implement simple neural network python javascript natural language processing twittertext javascript implementation twitter text processing library natural general natural language facility node knwljs natural language processor j retext extensible system analyzing manipulating natural language nlp compromise natural language processing browser nlpjs nlp library built node natural entity extraction sentiment analysis automatic language identify data analysis data visualization dj high chart nvdjs dcjs chartjs dimple amcharts dxter straight forward plotting built deprecated statkit statistic kit javascript deprecated datakit lightweight framework data analysis javascript sciencejs scientific statistical computing javascript deprecated zd easily make interactive plot built threejs deprecated sigmajs javascript library dedicated graph drawing cjs customizable library based dj easy chart drawing datamaps customizable svg mapgeo visualization using dj deprecated zingchart library written vanilla j big data visualization cheminfo platform data visualization analysis using visualizer project learn j data anychart fusioncharts nivo built top awesome reactjs library generalpurpose machine learning auto ml automated machine learning data formatting ensembling hyperparameter optimization competition exploration give csv file convnetjs convnetjs javascript library training deep learning modelsdeep learning deprecated clusterfck agglomerative hierarchical clustering implemented javascript nodejs browser deprecated clusteringjs clustering algorithm implemented javascript nodejs browser deprecated decision tree nodejs implementation decision tree using id algorithm deprecated dna digital neural network architecture deprecated figue kmeans fuzzy cmeans agglomerative clustering gaussian mixture model unsupervised machine learning multivariate gaussian mixture model nodefann fann fast artificial neural network library binding nodejs deprecated kerasjs run kera model browser gpu support provided webgl kmeansjs simple javascript implementation kmeans algorithm nodejs browser deprecated ldajs lda topic modeling nodejs learningjs javascript implementation logistic regressionc decision tree deprecated machinelearnjs machine learning library web nodejs developer miltokyo list several machine learning library nodesvm support vector machine nodejs brain neural network javascript deprecated brainjs neural network javascript continued community fork brain bayesianbandit bayesian bandit implementation node browser deprecated synaptic architecturefree neural network library nodejs browser knear javascript implementation k nearest neighbor algorithm supervised learning neuraln c neural network library nodejs advantage large dataset multithreaded training deprecated kalman kalman filter javascript deprecated shaman nodejs library support simple multiple linear regression deprecated mljs machine learning numerical analysis tool nodejs browser ml friendly machine learning web pavlovjs reinforcement learning using markov decision process mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript tensorflowjs webgl accelerated browser based javascript library training deploying ml model jsmlt machine learning toolkit classification clustering nodejs support visualization see visualmlio xgboostnode run xgboost model make prediction nodejs netron visualizer machine learning model webdnn fast deep neural network javascript framework webdnn us next generation javascript api webgpu gpu execution webassembly cpu execution misc stdlib standard library javascript nodejs emphasis numeric computing library provides collection robust high performance library mathematics statistic stream utility sylvester vector matrix math javascript deprecated simplestatistics javascript implementation descriptive regression inference statistic implemented literate javascript dependency designed work modern browser including ie well nodejs regressionjs javascript library containing collection least square fitting method finding trend set data lyric linear regression library deprecated greatcircle library calculating great circle distance mlpleasehelp mlpleasehelp simple ml resource search engine use search engine right httpsjgreenemigithubiomlpleasehelp provided via github page demo script bot example neural network learns predict angle two point created synaptic half beer beer glass classifier created synaptic nsfwjs indecent content checker tensorflowjs rock paper scissors rock paper scissors trained browser tensorflowjs julia generalpurpose machine learning machinelearning julia machine learning library deprecated mlbase set function support development machine learning algorithm pgm julia framework probabilistic graphical model da julia package regularized discriminant analysis regression algorithm regression analysis eg linear regression logistic regression deprecated local regression local regression smooooth naive bayes simple naive bayes implementation julia deprecated mixed model julia package fitting statistical mixedeffects model simple mcmc basic mcmc sampler implemented julia deprecated distance julia module distance evaluation decision tree decision tree classifier regressor neural neural network julia mcmc mcmc tool julia deprecated mamba markov chain monte carlo mcmc bayesian analysis julia glm generalized linear model julia gaussian process julia package gaussian process online learning deprecated glmnet julia wrapper fitting lassoelasticnet glm model using glmnet clustering basic function clustering data kmeans dpmeans etc svm svms julia deprecated kernel density kernel density estimator julia multivariatestats method dimensionality reduction nmf julia package nonnegative matrix factorization ann julia artificial neural network deprecated mocha deep learning framework julia inspired caffe deprecated xgboost extreme gradient boosting package julia manifoldlearning julia package manifold learning nonlinear dimensionality reduction mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript merlin flexible deep learning framework julia rocanalysis receiver operating characteristic function evaluation probabilistic binary classifier gaussianmixtures large scale gaussian mixture model scikitlearn julia implementation scikitlearn api knet koc university deep learning framework flux relax flux ml library doesnt make tensor natural language processing topic model topicmodels julia deprecated text analysis julia package text analysis word tokenizers tokenizers natural language processing julia corpus loader julia package providing variety loader various nlp corpus embeddings function data dependency loading various word embeddings language julia package working various human language wordnet julia package princeton wordnet data analysis data visualization graph layout graph layout algorithm pure julia lightgraphs graph modeling analysis data frame meta metaprogramming tool dataframes julia data library working tabular data julia deprecated data read read file stata sa spss hypothesis test hypothesis test julia gadfly crafty statistical graphic julia stats statistical test julia rdatasets julia package loading many data set available r dataframes library working tabular data julia distribution julia package probability distribution associated function data array data structure allow missing value deprecated time series time series toolkit julia sampling basic sampling algorithm julia misc stuff presentation dsp digital signal processing filtering periodograms spectrogram window function juliacon presentation presentation juliacon signalprocessing signal processing tool julia image image library julia datadeps reproducible data setup reproducible science lua generalpurpose machine learning torch cephes cephes mathematical function library wrapped torch provides wrap special mathematical function cephes mathematical library developed stephen l moshier used among many place heart scipy deprecated autograd autograd automatically differentiates native torch code inspired original python version graph graph package torch deprecated randomkit numpys randomkit wrapped torch deprecated signal signal processing toolbox torch fft dct hilbert cepstrums stft nn neural network package torch torchnet framework torch provides set abstraction aiming encouraging code reuse well encouraging modular programming nngraph package provides graphical computation nn library torch nnx completely unstable experimental package extends torch builtin nn library rnn recurrent neural network library extends torch nn rnns lstms grus brnns blstms etc dpnn many useful feature arent part main nn package dp deep learning library designed streamlining research development using torch distribution emphasizes flexibility elegant use objectoriented design pattern deprecated optim optimization library torch sgd adagrad conjugategradient lbfgs rprop unsup package unsupervised learning torch provides module compatible nn linearpsd convpsd autoencoder selfcontained algorithm kmeans pca deprecated manifold package manipulate manifold svm torchsvm library deprecated lbfgs ffi wrapper liblbfgs deprecated vowpalwabbit old vowpalwabbit interface torch deprecated opengm opengm c library graphical modeling inference lua binding provide simple way describing graph lua optimizing opengm deprecated spaghetti spaghetti sparse linear module torch michaelmathieu deprecated luashkit lua wrapper around locality sensitive hashing library shkit deprecated kernel smoothing knn kernelweighted average local linear regression smoother deprecated cutorch torch cuda implementation cunn torch cuda neural network implementation imgraph imagegraph library torch package provides routine construct graph image segment build tree convert back image deprecated videograph videograph library torch package provides routine construct graph video segment build tree convert back video deprecated saliency code tool around integral image library finding interest point based fast integral histogram deprecated stitch allows u use hugin stitch image apply stitching video sequence deprecated sfm bundle adjustmentstructure motion package deprecated fex package feature extraction torch provides sift dsift module deprecated overfeat stateoftheart generic dense feature extractor deprecated wavletter simple efficient endtoend automatic speech recognition asr system facebook ai research numeric lua lunatic python scilua lua numerical algorithm deprecated lunum deprecated demo script core torch demo repository linearregression logisticregression face detector training detection separate demo mstbasedsegmenter trainadigitclassifier trainautoencoder optical flow demo trainonhousenumbers trainoncifar tracking deep net kinect demo filterbank visualization saliencynetworks training convnet galaxyzoo kaggle challengecuda demo music tagging music tagging script torch torchdatasets script load several popular datasets including bsr cifar coil street view house number mnist norb atari script generate dataset static frame arcade learning environment matlab computer vision contourlets matlab source code implement contourlet transform utility function shearlets matlab code shearlet transform curvelets curvelet transform higher dimensional generalization wavelet transform designed represent image different scale different angle bandlet matlab code bandlet transform mexopencv collection development kit matlab mex function opencv library natural language processing nlp nlp library matlab generalpurpose machine learning training deep autoencoder classifier mnist digit training deep autoencoder classifier mnist digitsdeep learning convolutionalrecursive deep learning object classification convolutionalrecursive deep learning object classificationdeep learning spider spider intended complete object orientated environment machine learning matlab libsvm library support vector machine thundersvm opensource svm library gpus cpu liblinear library large linear classification machine learning module class machine w pdf lecture code caffe deep learning framework developed cleanliness readability speed mind pattern recognition toolbox complete objectoriented environment machine learning matlab pattern recognition machine learning package contains matlab implementation algorithm described book pattern recognition machine learning c bishop optunity library dedicated automated hyperparameter optimization simple lightweight api facilitate dropin replacement grid search optunity written python interface seamlessly matlab mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript machine learning matlaboctave example popular machine learning algorithm neural network linearlogistic regression kmeans etc code example mathematics behind explained data analysis data visualization matlabbgl matlabbgl matlab package working graph gaimc efficient purematlab implementation graph algorithm complement matlabbgls mex function net computer vision opencvdotnet wrapper opencv project used net application emgu cv cross platform wrapper opencv compiled mono run window linus mac o x io android aforgenet open source c framework developer researcher field computer vision artificial intelligence development shifted github accordnet together aforgenet library provide image processing computer vision algorithm window window rt window phone component also available java android natural language processing stanfordnlp net full port stanford nlp package net also available precompiled nuget package generalpurpose machine learning accordframework accordnet framework complete framework building machine learning computer vision computer audition signal processing statistical application accordmachinelearning support vector machine decision tree naive bayesian model kmeans gaussian mixture model general algorithm ransac crossvalidation gridsearch machinelearning application package part accordnet framework diffsharp automatic differentiation ad library providing exact efficient derivative gradient hessian jacobians directional derivative matrixfree hessian jacobianvector product machine learning optimization application operation nested level meaning compute exact higherorder derivative differentiate function internally making use differentiation application hyperparameter optimization encog advanced neural network machine learning framework encog contains class create wide variety network well support class normalize process data neural network encog train using multithreaded resilient propagation encog also make use gpu speed processing time gui based workbench also provided help model train neural network geneticsharp multiplatform genetic algorithm library net core net framework library several implementation ga operator like selection crossover mutation reinsertion termination infernet infernet framework running bayesian inference graphical model one use infernet solve many different kind machine learning problem standard problem like classification recommendation clustering customised solution domainspecific problem infernet used wide variety domain including information retrieval bioinformatics epidemiology vision many others mlnet mlnet crossplatform opensource machine learning framework make machine learning accessible net developer mlnet originally developed microsoft research evolved significant framework last decade used across many product group microsoft like window bing powerpoint excel neural network designer dbms management system designer neural network designer application developed using wpf user interface allows design neural network query network create configure chat bot capable asking question learning feed back chat bot even scrape internet information return output well use learning synapsis neural network library f vulpes deep belief deep learning implementation written f leverage cuda gpu execution aleacubase data analysis data visualization numl numl machine learning library intended ease use using standard modeling technique prediction clustering mathnet numerics numerical foundation mathnet project aiming provide method algorithm numerical computation science engineering every day use support net net mono window linux mac silverlight windowsphonesl windowsphone window pcl portable profile androidios xamarin sho sho interactive environment data analysis scientific computing let seamlessly connect script ironpython compiled code net enable fast flexible prototyping environment includes powerful efficient library linear algebra well data visualization used net language well featurerich interactive shell rapid development objective c generalpurpose machine learning ycml machine learning framework objectivec swift o x io mlpneuralnet fast multilayer perceptron neural network library io mac o x mlpneuralnet predicts new example trained neural network built top apple accelerate framework using vectorized operation hardware acceleration available deprecated machinelearning objectivec multilayer perceptron library full support training backpropagation implemented using vdsp veclib time faster java equivalent includes sample code use swift bpnneuralnetwork implemented layer neural network input layer hidden layer output layer named back propagation neural network bpn network used product recommendation user behavior analysis data mining data analysis deprecated multiperceptronneuralnetwork implemented multiperceptrons neural network based back propagation neural network bpn designed unlimitedhiddenlayers krhebbianalgorithm nonsupervisor selflearning algorithm adjust weight neural network machine learning deprecated krkmeansalgorithm implemented kmeans clustering classification algorithm could used data mining image compression deprecated krfuzzycmeansalgorithm implemented fuzzy cmeans fcm fuzzy clustering classification algorithm machine learning could used data mining image compression deprecated ocaml generalpurpose machine learning oml general statistic machine learning library gpr efficient gaussian process regression ocaml libratk algorithm learning inference discrete probabilistic model tensorflow ocaml binding tensorflow perl data analysis data visualization perl data language pluggable architecture data image processing used machine learning generalpurpose machine learning mxnet deep learning perl also released cpan perl data language using aws machine learning platform perl algorithmsvmlight implementation support vector machine svmlight deprecated several machine learning artificial intelligence model included ai namespace instance find naive bayes perl support vector machine naive bayes data analysis data visualization perl data language pluggable architecture data image processing used machine learning generalpurpose machine learning php natural language processing jiebaphp chinese word segmentation utility generalpurpose machine learning phpml machine learning library php algorithm cross validation neural network preprocessing feature extraction much one library predictionbuilder library machine learning build prediction using linear regression rubix ml highlevel machine learning ml library let build program learn data using php language question machine learning bayesian inference assigning attribute object python computer vision scikitimage collection algorithm image processing python simplecv open source computer vision framework give access several highpowered computer vision library opencv written python run mac window ubuntu linux vigranumpy python binding vigra c computer vision library openface free open source face recognition deep neural network pcv open source python module computer vision deprecated facerecognition face recognition library recognize manipulate face python command line dockerface easy install use deep learning faster rcnn face detection image video docker container detectron fair software system implement stateoftheart object detection algorithm including mask rcnn written python powered caffe deep learning framework albumentations fast framework agnostic image augmentation library implement diverse set augmentation technique support classification segmentation detection box used win number deep learning competition kaggle topcoder part cvpr workshop pytessarct pythontesseract optical character recognition ocr tool python recognize read text embedded imagespythontesseract wrapper google tesseractocr engine imutils library containg convenience function make basic image processing operation translation rotation resizing skeletonization displaying matplotlib image easier opencv python pytorchcv pytorchbased framework deep learning computer vision neuralstylept pytorch implementation justin johnson neuralstyle neural style transfer natural language processing pkusegpython better version jieba developed peking university nltk leading platform building python program work human language data pattern web mining module python programming language tool natural language processing machine learning among others quepy python framework transform natural language question query database query language textblob providing consistent api diving common natural language processing nlp task stand giant shoulder nltk pattern play nicely yalign sentence aligner friendly tool extracting parallel sentence comparable corpus deprecated jieba chinese word segmentation utility snownlp library processing chinese text spammy library email spam filtering built top nltk loso another chinese segmentation library deprecated genius chinese segment base conditional random field konlpy python package korean natural language processing nut natural language understanding toolkit deprecated rosetta text processing tool wrapper eg vowpal wabbit bllip parser python binding bllip natural language parser also known charniakjohnson parser deprecated pynlpl python natural language processing library general purpose nlp library python also contains specific module parsing common nlp format notably folium also arpa language model moses phrasetables giza alignment pythonucto python binding ucto unicodeaware rulebased tokenizer various language pythonfrog python binding frog nlp suite dutch po tagging lemmatisation dependency parsing ner pythonzpar python binding zpar statistical partofspeechtagger constiuency parser dependency parser english colibricore python binding c library extracting working basic linguistic construction ngrams skipgrams quick memoryefficient way spacy industrial strength nlp python cython pystanforddependencies python interface converting penn treebank tree stanford dependency distance levenshtein hamming distance computation deprecated fuzzy wuzzy fuzzy string matching python jellyfish python library approximate phonetic matching string editdistance fast implementation edit distance textacy higherlevel nlp built spacy stanfordcorenlppython python wrapper stanford corenlp deprecated cltk classical language toolkit rasanlu turn natural language structured data yase transcode sentence sequence list word vector polyglot multilingual text nlp processing toolkit drqa reading wikipedia answer opendomain question dedupe python library accurate scalable fuzzy matching record deduplication entityresolution snip nlu natural language understanding library intent classification entity extraction neuroner namedentity recognition using neural network providing stateoftheartresults deeppavlov conversational ai library many pretrained russian nlp model bigartm topic modelling platform generalpurpose machine learning pyod python outlier detection comprehensive scalable python toolkit detecting outlying object multivariate data featured advanced model including neural networksdeep learning outlier ensemble steppy lightweight python library fast reproducible machine learning experimentation introduces simple interface enables clean machine learning pipeline design steppytoolkit curated collection neural network transformer model make machine learning work faster effective cntk microsoft cognitive toolkit cntk open source deeplearning toolkit documentation found automl automated machine learning production analytics let focus fun part ml outputting productionready code detailed analytics dataset result includes support nlp xgboost catboost lightgbm soon deep learning machine learning automated build consisting webinterface set programmaticinterface api support vector machine corresponding datasets stored sql database generated model used prediction stored nosql datastore xgboost python binding extreme gradient boosting tree library apache singa apache incubating project developing open source machine learning library bayesian method hacker bookipython notebook probabilistic programming python featureforge set tool creating testing machine learning feature scikitlearn compatible api mllib apache spark distributed machine learning library spark hydrosphere mist service deployment apache spark mllib machine learning model realtime batch reactive web service scikitlearn python module machine learning built top scipy metriclearn python module metric learning simpleai python implementation many artificial intelligence algorithm described book artificial intelligence modern approach focus providing easy use well documented tested library astroml machine learning data mining astronomy graphlabcreate library various machine learning model regression clustering recommender system graph analytics etc implemented top diskbacked dataframe bigml library contact external server pattern web mining module python nupic numenta platform intelligent computing pylearn machine learning library based theano deprecated kera highlevel neural network frontend tensorflow cntk theano lasagne lightweight library build train neural network theano hebel gpuaccelerated deep learning library python deprecated chainer flexible neural network framework prophet fast automated time series forecasting framework facebook gensim topic modelling human topik topic modelling toolkit deprecated pybrain another python machine learning library brainstorm fast flexible fun neural network successor pybrain surprise scikit building analyzing recommender system crab flexible fast recommender engine deprecated pythonrecsys python library implementing recommender system thinking bayes book bayesian analysis imagetoimage translation conditional adversarial network implementation image image pixpix translation paper isola et aldeep learning restricted boltzmann machine restricted boltzmann machine python deep learning bolt bolt online learning toolbox deprecated covertree python implementation cover tree neardropin replacement scipyspatialkdtree deprecated nilearn machine learning neuroimaging python neuropredict aimed novice machine learner nonexpert programmer package offer easy coding needed comprehensive machine learning evaluation full report predictive performance without requiring code python neuroimaging type feature aimed absorbing much ml workflow unlike package like nilearn pymvpa require learn api code produce anything useful imbalancedlearn python module perform sampling sampling various technique shogun shogun machine learning toolbox pyevolve genetic algorithm framework deprecated caffe deep learning framework developed cleanliness readability speed mind breze theano based library deep recurrent neural network cortex open source platform deploying machine learning model production pyhsmm library approximate unsupervised inference bayesian hidden markov model hmms explicitduration hidden semimarkov model hsmms focusing bayesian nonparametric extension hdphmm hdphsmm mostly weaklimit approximation mrjob library let python program run hadoop skll wrapper around scikitlearn make simpler conduct experiment neurolab spearmint spearmint package perform bayesian optimization according algorithm outlined paper practical bayesian optimization machine learning algorithm jasper snoek hugo larochelle ryan p adam advance neural information processing system deprecated pebl python environment bayesian learning deprecated theano optimizing gpumetaprogramming code generating array oriented optimizing math compiler python tensorflow open source software library numerical computation using data flow graph pomegranate hidden markov model python implemented cython speed efficiency pythontimbl python extension module wrapping full timbl c programming interface timbl elaborate knearest neighbour machine learning toolkit deap evolutionary algorithm framework pydeep deep learning python deprecated mlxtend library consisting useful tool data science machine learning task neon nervanas highperformance pythonbased deep learning framework deep learning optunity library dedicated automated hyperparameter optimization simple lightweight api facilitate dropin replacement grid search neural network deep learning code sample book neural network deep learning deep learning annoy approximate nearest neighbour implementation tpot tool automatically creates optimizes machine learning pipeline using genetic programming consider personal data science assistant automating tedious part machine learning pgmpy python library working probabilistic graphical model digit deep learning gpu training system digit web application training deep learning model orange open source data visualization data analysis novice expert mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript milk machine learning toolkit focused supervised classification deprecated tflearn deep learning library featuring higherlevel api tensorflow rep ipythonbased environment conducting datadriven research consistent reproducible way rep trying substitute scikitlearn extends provides better user experience deprecated rgfpython python binding regularized greedy forest tree library skbayes python package bayesian machine learning scikitlearn api fukuml simple machine learning library including perceptron regression support vector machine decision tree easy use easy learn beginner xcessiv webbased application quick scalable automated hyperparameter tuning stacked ensembling pytorch tensor dynamic neural network python strong gpu acceleration mlfromscratch implementation machine learning model scratch python focus transparency aim showcase nut bolt ml accessible way edward library probabilistic modeling inference criticism built top tensorflow xrbm library restricted boltzmann machine rbm conditional variant tensorflow catboost general purpose gradient boosting decision tree library categorical feature support box easy install well documented support cpu gpu even multigpu computation stackedgeneralization implementation machine learning stacking technic handy library python modal modular active learning framework python built top scikitlearn cogitare modern fast modular deep learning machine learning framework python parris parris automated infrastructure setup tool machine learning algorithm neonrvm neonrvm open source machine learning library based rvm technique written c programming language come python programming language binding turi create machine learning apple turi create simplifies development custom machine learning model dont machine learning expert add recommendation object detection image classification image similarity activity classification app xlearn high performance easytouse scalable machine learning package used solve largescale machine learning problem xlearn especially useful solving machine learning problem largescale sparse data common internet service online advertisement recommender system mlens high performance memory efficient maximally parallelized ensemble learning integrated scikitlearn netron visualizer machine learning model thampi machine learning prediction system aws lambda mindsdb open source framework streamline use neural network microsoft recommenders example best practice building recommendation system provided jupyter notebook repo contains latest state art algorithm microsoft research well company institution stellargraph machine learning graph python library machine learning graphstructured networkstructured data bentoml toolkit package deploy machine learning model serving production miraiml asynchronous engine continuous autonomous machine learning built realtime usage numpyml reference implementation ml model written numpy creme framework online machine learning neuraxle framework providing right abstraction ease research development deployment ml pipeline cornac comparative framework multimodal recommender system focus model leveraging auxiliary data jax jax autograd xla brought together highperformance machine learning research fastai library simplifies training fast accurate neural net using modern best practice already support vision text tabular collab collaborative filtering model box catalyst highlevel utils pytorch dl rl research developed focus reproducibility fast experimentation codeideas reusing able researchdevelop something new rather write another regular train loop fastai highlevel wrapper built top pytorch support vision text tabular data collaborative filtering data analysis data visualization scipy pythonbased ecosystem opensource software mathematics science engineering numpy fundamental package scientific computing python numba python jit time compiler llvm aimed scientific python developer cython numpy mar tensorbased framework largescale data computation often regarded parallel distributed version numpy networkx highproductivity software complex network igraph binding igraph library general purpose graph library panda library providing highperformance easytouse data structure data analysis tool open mining business intelligence bi python panda web interface deprecated pymc markov chain monte carlo sampling toolkit zipline pythonic algorithmic trading library pydy short python dynamic used assist workflow modeling dynamic motion based around numpy scipy ipython matplotlib sympy python library symbolic mathematics statsmodels statistical modeling econometrics python astropy community python library astronomy matplotlib python plotting library bokeh interactive web plotting python plotly collaborative web plotting python matplotlib altair python vega translator dpy plotting library python based dj pydexter simple plotting python wrapper dxterjs easily render chart inbrowser ggplot api ggplot r deprecated ggfortify unified interface ggplot popular r package kartographpy rendering beautiful svg map python pygal python svg chart creator pyqtgraph purepython graphic gui library built pyqt pyside numpy pycascading deprecated petrel tool writing submitting debugging monitoring storm topology pure python blaze numpy panda interface big data emcee python ensemble sampling toolkit affineinvariant mcmc windml python framework wind energy analysis prediction vispy gpubased highperformance interactive opengl dd data visualization library cerebro webbased visualization debugging platform nupic deprecated nupic studio allinone nupic hierarchical temporal memory visualization debugging supertool deprecated sparklingpandas panda pyspark pop seaborn python visualization library based matplotlib bqplot api plotting jupyter ipython pastalog simple realtime visualization neural network training performance superset data exploration platform designed visual intuitive interactive dora tool exploratory data analysis python ruffus computation pipeline library python sompy self organizing map written python us neural network data analysis somoclu massively parallel selforganizing map accelerate training multicore cpu gpus cluster python api hdbscan implementation hdbscan algorithm python used clustering visualizeml python package data exploration data analysis deprecated scikitplot visualization library quick easy generation common plot data analysis machine learning bowtie dashboard library interactive visualization using flask socketio react lime lime explaining machine learning classifier model able explain black box classifier two class pycm pycm multiclass confusion matrix library written python support input data vector direct matrix proper tool postclassification model evaluation support class overall statistic parameter dash framework creating analytical web application built top plotlyjs react flask lambdo workflow engine solving machine learning problem combining one analysis pipeline feature engineering machine learning ii model training prediction iii table population column evaluation via userdefined python function tensorwatch debugging visualization tool machine learning data science extensively leverage jupyter notebook show realtime visualization data running process machine learning training dowel little logger machine learning research output object terminal csv tensorboard text log disk one call loggerlog misc script ipython notebook codebases mapreduce implementation common ml algorithm jupyter notebook cover implement scratch different ml algorithm ordinary least square gradient descent kmeans alternating least square using python numpy make implementation scalable using mapreduce spark biopy biologicallyinspired machine learning algorithm python deprecated svm explorer interactive svm explorer using dash scikitlearn patternclassification thinking stats hyperopt numpic paperdiginorm gallery interesting ipython notebook ipythonnotebooks datascienceipythonnotebooks continually updated data science python notebook spark hadoop mapreduce hdfs aws kaggle scikitlearn matplotlib panda numpy scipy various command line decisionweights sarah palin lda topic modeling sarah palin email diffusion segmentation collection image segmentation algorithm based diffusion method scipy tutorial scipy tutorial outdated check scipylecturenotes crab recommendation engine library python bayespy bayesian inference tool python scikitlearn tutorial series notebook learning scikitlearn sentimentanalyzer tweet sentiment analyzer sentimentclassifier sentiment classifier using word sense disambiguation grouplasso experiment coordinate descent algorithm used sparse group lasso model jprocessing kanji hiragana katakana romaji converter edict dictionary parallel sentence search sentence similarity two jp sentence sentiment analysis japanese text run cabochaiso configured python mnepythonnotebooks ipython notebook eegmeg data processing using mnepython neon course ipython notebook complete course around understanding nervanas neon panda cookbook recipe using python panda library climin optimization library focused machine learning pythonic implementation gradient descent lbfgs rmsprop adadelta others allen downeys data science course code data science olin college spring allen downeys think bayes code code repository think bayes allen downeys think complexity code code allen downeys book think complexity allen downeys think o code text supporting code think o brief introduction operating system python programming humanity course python programming humanity assuming prior knowledge heavy focus text processing nlp greatcircle library calculating great circle distance optunity example example demonstrating use optunity synergy machine learning library dive machine learning python jupyter notebook scikitlearn learned python hacking first getting serious later wanted machine learning style join getting bit ahead tdb tensordebugger tdb visual debugger deep learning feature interactive nodebynode debugging visualization tensorflow suiron machine learning rc car introduction machine learning scikitlearn ipython notebook data school video tutorial scikitlearn practical xgboost python comprehensive online course using xgboost python introduction machine learning python notebook code book introduction machine learning python pydata book material ipython notebook python data analysis wes mckinney published oreilly medium homemade machine learning python example popular machine learning algorithm interactive jupyter demo math explained prodmodel build tool data science pipeline theelementsofstatisticallearning repository contains jupyter notebook implementing algorithm found book summary textbook neural network nnbuilder nnbuilder python package let build neural network line neuraltalk neuraltalk pythonnumpy project learning multimodal recurrent neural network describe image sentence neuron neuron simple class time series prediction utilize lnu linear neural unit qnu quadratic neural unit rbf radial basis function mlp multi layer perceptron mlpelm multi layer perceptron extreme learning machine neural network learned gradient descent lelevenbergmarquardt algorithm neuraltalk neuraltalk pythonnumpy project learning multimodal recurrent neural network describe image sentence deprecated neuron neuron simple class time series prediction utilize lnu linear neural unit qnu quadratic neural unit rbf radial basis function mlp multi layer perceptron mlpelm multi layer perceptron extreme learning machine neural network learned gradient descent lelevenbergmarquardt algorithm deprecated data driven code simple implementation neural network dummy python without using library detailed comment machine learning data science deep learning python livevideo course cover machine learning tensorflow artificial intelligence neural network kaggle competition source code opensolutionhomecredit source code experiment result home credit default risk opensolutiongoogleaiobjectdetection source code experiment result google ai open image object detection track opensolutionsaltidentification source code experiment result tgs salt identification challenge opensolutionshipdetection source code experiment result airbus ship detection challenge opensolutiondatasciencebowl source code experiment result data science bowl opensolutionvalueprediction source code experiment result santander value prediction challenge opensolutiontoxiccomments source code toxic comment classification challenge wiki challenge implementation dell zhangs solution wikipedias participation challenge kaggle kaggle insult kaggle submission detecting insult social commentary kaggleacquirevaluedshopperschallenge code kaggle acquire valued shopper challenge kagglecifar code cifar competition kaggle us cudaconvnet kaggleblackbox deep learning made easy kaggleaccelerometer code accelerometer biometric competition kaggle kaggleadvertisedsalaries predicting job salary ad kaggle competition kaggle amazon amazon access control challenge kagglebestbuybig code best buy competition kaggle kagglebestbuysmall kaggle dog v cat code kaggle dog v cat competition kaggle galaxy challenge winning solution galaxy challenge kaggle kaggle gender kaggle competition discriminate gender based handwriting kaggle merck merck challenge kaggle kaggle stackoverflow predicting closed question stack overflow kaggleacquirevaluedshopperschallenge code kaggle acquire valued shopper challenge winequality predicting wine quality reinforcement learning deepmind lab deepmind lab learning environment based id software quake iii arena via ioquake open source software primary purpose act testbed research artificial intelligence especially deep reinforcement learning gym openai gym toolkit developing comparing reinforcement learning algorithm serpentai serpentai game agent framework allows turn video game sandbox develop ai machine learning experiment researcher hobbyist vizdoom vizdoom allows developing ai bot play doom using visual information screen buffer primarily intended research machine visual learning deep reinforcement learning particular roboschool opensource software robot simulation integrated openai gym retro retro game gym slm lab modular deep reinforcement learning framework pytorch coach reinforcement learning coach intel ai lab enables easy experimentation state art reinforcement learning algorithm garage toolkit reproducible reinforcement learning research metaworld open source robotics benchmark meta multitask reinforcement learning ruby natural language processing awesome nlp ruby curated link list practical natural language processing ruby treat text retrieval annotation toolkit definitely comprehensive toolkit ive encountered far ruby stemmer expose libstemmerc ruby deprecated raspel raspell interface binding ruby deprecated uea stemmer ruby port uealite stemmer conservative stemmer search indexing twittertextrb library auto linking extraction usernames list hashtags tweet generalpurpose machine learning awesome machine learning ruby curated list ml related resource ruby ruby machine learning machine learning algorithm implemented ruby deprecated machine learning ruby deprecated jruby mahout jruby mahout gem unleashes power apache mahout world jruby deprecated cardmagicclassifier general classifier module allow bayesian type classification rblibsvm ruby language binding libsvm library support vector machine scoruby creates random forest classifier pmml file data analysis data visualization rsruby ruby r bridge datavisualizationruby source code supporting content ruby manor presentation data visualisation ruby deprecated rubyplot gnuplot wrapper ruby especially plotting roc curve svg file deprecated plotrb plotting library ruby built top vega deprecated scruffy beautiful graphing toolkit ruby sciruby glean data management tool human deprecated bioruby arel deprecated misc big data chimp listof community based data collection packed gem get list pretty much anything stop word country non word txt json hash demosearch list rust generalpurpose machine learning deeplearnrs deeplearnrs provides simple network use matrix multiplication addition relu mit license rustlearn machine learning framework featuring logistic regression support vector machine decision tree random forest rustymachine purerust machine learning library leaf open source framework machine intelligence sharing concept tensorflow caffe available mit license deprecated rustnn rustnn feedforward neural network library deprecated rusticsom rust library self organising map som r generalpurpose machine learning ahaz ahaz regularization semiparametric additive hazard regression deprecated arules arules mining association rule frequent itemsets biglasso biglasso extending lasso model fitting big data r bmrm bmrm bundle method regularized risk minimization package boruta boruta wrapper algorithm allrelevant feature selection bst bst gradient boosting c c c decision tree rulebased model caret classification regression training unified interface ml algorithm r caretensemble caretensemble framework fitting multiple caret model well creating ensemble model deprecated catboost general purpose gradient boosting decision tree library categorical feature support box r clever algorithm machine learning corelearn corelearn classification regression feature evaluation ordinal evaluation coxboost coxboost cox model likelihood based boosting single survival endpoint competing risk deprecated cubist cubist rule instancebased regression modeling e e misc function department statistic e tu wien earth earth multivariate adaptive regression spline model elasticnet elasticnet elasticnet sparse estimation sparse pca elemstatlearn elemstatlearn data set function example book element statistical learning data mining inference prediction trevor hastie robert tibshirani jerome friedman prediction trevor hastie robert tibshirani jerome friedman evtree evtree evolutionary learning globally optimal tree forecast forecast timeseries forecasting using arima ets stlm tbats neural network model forecasthybrid forecasthybrid automatic ensemble cross validation arima ets stlm tbats neural network model forecast package fpc fpc flexible procedure clustering frbs frbs fuzzy rulebased system classification regression task deprecated gamboost gamboost generalized linear additive model likelihood based boosting deprecated gamboostlss gamboostlss boosting method gamlss gbm gbm generalized boosted regression model glmnet glmnet lasso elasticnet regularized generalized linear model glmpath glmpath l regularization path generalized linear model cox proportional hazard model gmmboost gmmboost likelihoodbased boosting generalized mixed model deprecated grplasso grplasso fitting user specified model group lasso penalty grpreg grpreg regularization path regression model grouped covariates ho framework fast parallel distributed machine learning algorithm scale deeplearning random forest gbm kmeans pca glm hda hda heteroscedastic discriminant analysis deprecated introduction statistical learning ipred ipred improved predictor kernlab kernlab kernelbased machine learning lab klar klar classification visualization llearn llearn fast algorithm best subset selection lars lars least angle regression lasso forward stagewise deprecated lasso lasso l constrained estimation aka lasso liblinear liblinear linear predictive model based liblinear cc library logicreg logicreg logic regression machine learning hacker maptree maptree mapping pruning graphing tree model deprecated mboost mboost modelbased boosting medley medley blending regression model using greedy stepwise approach mlr mlr machine learning r ncvreg ncvreg regularization path scad mcppenalized regression model nnet nnet feedforward neural network multinomial loglinear model deprecated pamr pamr pam prediction analysis microarrays deprecated party party laboratory recursive partytioning partykit partykit toolkit recursive partytioning penalized penalized l lasso fused lasso l ridge penalized estimation glms cox model penalizedlda penalizedlda penalized classification using fisher linear discriminant deprecated penalizedsvm penalizedsvm feature selection svm using penalty function quantregforest quantregforest quantile regression forest randomforest randomforest breiman cutler random forest classification regression randomforestsrc randomforestsrc random forest survival regression classification rfsrc rattle rattle graphical user interface data mining r rda rda shrunken centroid regularized discriminant analysis rdetools rdetools relevant dimension estimation rde feature space deprecated reemtree reemtree regression tree random effect longitudinal panel data deprecated relaxo relaxo relaxed lasso deprecated rgenoud rgenoud r version genetic optimization using derivative rmalschains rmalschains continuous optimization using memetic algorithm local search chain malschains r rminer rminer simpler use data mining method eg nn svm classification regression deprecated rocr rocr visualizing performance scoring classifier deprecated roughsets roughsets data analysis using rough set fuzzy rough set theory deprecated rpart rpart recursive partitioning regression tree rpmm rpmm recursively partitioned mixture model rsnns rsnns neural network r using stuttgart neural network simulator snns rweka rweka rweka interface rxshrink rxshrink maximum likelihood shrinkage via generalized ridge least angle regression sda sda shrinkage discriminant analysis cat score variable selection deprecated spectralgraphtopology spectralgraphtopology learning graph data via spectral constraint superlearner multialgorithm ensemble learning package svmpath svmpath svmpath svm path algorithm deprecated tgp tgp bayesian treed gaussian process model deprecated tree tree classification regression tree varselrf varselrf variable selection using random forest xgboostr r binding extreme gradient boosting tree library optunity library dedicated automated hyperparameter optimization simple lightweight api facilitate dropin replacement grid search optunity written python interface seamlessly r igraph binding igraph library general purpose graph library mxnet lightweight portable flexible distributedmobile deep learning dynamic mutationaware dataflow dep scheduler python r julia go javascript tdsputilities two data science utility r microsoft interactive data exploration analysis reporting idear automated modeling reporting amr data analysis data visualization ggplot data visualization package based grammar graphic tmap visualizing geospatial data static map leaflet interactive map tm quanteda main package managing analyzing visualizing textual data shiny basis truly interactive display dashboard r however measure interactivity achieved htmlwidgets bringing javascript library r include plotly dygraphs highcharter several others sa generalpurpose machine learning visual data mining machine learning interactive automated programmatic modeling latest machine learning algorithm endtoend analytics environment data prep deployment free trial available enterprise miner data mining machine learning creates deployable model using gui code factory miner automatically creates deployable machine learning model across numerous market customer segment using gui data analysis data visualization sasstat conducting advanced statistical analysis university edition free includes sa package necessary data analysis visualization includes online sa course natural language processing contextual analysis add structure unstructured text using gui sentiment analysis extract sentiment text using gui text miner text mining using gui code demo script mltables concise cheat sheet containing machine learning best practice enlightenapply example code material illustrate application sa machine learning technique enlightenintegration example code material illustrate technique integrating sa analytics technology java pmml python r enlightendeep example code material illustrate using neural network several hidden layer sa dmflow library sa enterprise miner process flow diagram help learn example specific data mining topic scala natural language processing scalanlp scalanlp suite machine learning numerical computing library breeze breeze numerical processing library scala chalk chalk natural language processing library deprecated factorie factorie toolkit deployable probabilistic modeling implemented software library scala provides user succinct language creating relational factor graph estimating parameter performing inference montague montague semantic parsing library scala easytouse dsl spark nlp natural language processing library built top apache spark ml provide simple performant accurate nlp annotation machine learning pipeline scale easily distributed environment data analysis data visualization mllib apache spark distributed machine learning library spark hydrosphere mist service deployment apache spark mllib machine learning model realtime batch reactive web service scalding scala api cascading summing bird streaming mapreduce scalding storm algebird abstract algebra scala xerial data management utility scala deprecated predictionio predictionio machine learning server software developer data engineer bidmat cpu gpuaccelerated matrix library intended support largescale exploratory data analysis flink open source platform distributed stream batch data processing spark notebook interactive reactive data science using scala spark generalpurpose machine learning deeplearningscala creating statically typed dynamic neural network objectoriented functional programming construct conjecture scalable machine learning scalding brushfire distributed decision tree ensemble learning scala ganitha scalding powered machine learning deprecated adam genomics processing engine specialized file format built using apache avro apache spark parquet apache licensed bioscala bioinformatics scala programming language bidmach cpu gpuaccelerated machine learning library figaro scala library constructing probabilistic model ho sparkling water ho spark interoperability flinkml apache flink distributed machine learning library flink dynaml scala libraryrepl machine learning research saul flexible declarative learningbased programming swiftlearner simply written algorithm help study ml write implementation smile statistical machine intelligence learning engine doddlemodel inmemory machine learning library built top breeze provides immutable object expose functionality scikitlearnlike api tensorflow scala stronglytyped scala api tensorflow scheme neural network layer neural network inference command line implemented chicken scheme swift generalpurpose machine learning bender fast neural network framework built top metal support tensorflow model swift ai highly optimized artificial intelligence machine learning library written swift swift tensorflow nextgeneration platform machine learning incorporating latest research across machine learning compiler differentiable programming system design beyond braincore io o x neural network framework swix bare bone library includes general matrix language wrap opencv io development deprecated aitoolbox toolbox framework ai module written swift graphstrees linear regression support vector machine neural network pca kmeans genetic algorithm mdp mixture gaussians mlkit simple machine learning framework written swift currently feature simple linear regression polynomial regression ridge regression swift brain first neural network machine learning library written swift project ai algorithm swift io o x development project includes algorithm focused bayes theorem neural network svms matrix etc perfect tensorflow swift language binding tensorflow using native tensorflow model macos linux predictionbuilder library machine learning build prediction using linear regression awesome coreml curated list pretrained coreml model awesome core ml model curated list machine learning model coreml format tensorflow generalpurpose machine learning awesome tensorflow list thing related tensorflow golden tensorflow page content tensorflow including academic paper link related topic tool neural network layer neural network inference command line misc ml workspace allinone webbased ide machine learning data science workspace deployed docker container preloaded variety popular data science library eg tensorflow pytorch dev tool eg jupyter v code notebook starter kit jupyter notebook machine learning companion docker image consist combination python version machine learning framework kera pytorch tensorflow cpucuda version dvc data science version control opensource version control system machine learning project pipeline support make ml project reproducible shareable kedro kedro data development workflow framework implement best practice data pipeline eye towards productionizing machine learning model guildai tool log analyze compare optimize experiment crossplatform framework independent provided integrated visualizer tensorboard sacred python tool help configure organize log reproduce experiment like notebook lab context chemestrybiology community built multiple addons leveraging proposed standard mlflow platform manage ml lifecycle including experimentation reproducibility deployment framework anf language agnostic take look builtin integration tool improve ml lifecycle catalyst pachydermio following githubalike targetting team weight bias neptuneml cometml valohaiai credit python library cutandpasted vinta reference go mostly cutandpasted gopherdata
12,Python,"GitHub - psf/requests: A simple, yet elegant HTTP library.","
    
    
    
    
     Python 3.7.4 (default, Sep  7 2019, 18:27:02)
     >>> import requests
     >>> r = requests.get('https://api.github.com/repos/psf/requests')
     >>> r.json()[""description""]
     'A simple, yet elegant HTTP library. Handcrafted, with ‚ô•, for the Python community.'
    

    
This software has been designed for you, with much joy,
by Kenneth Reitz & is protected by The Python Software Foundation.
   


¬†¬†
Requests is an elegant and simple HTTP library for Python, built with ‚ô•.
¬†
>>> import requests
>>> r = requests.get('https://api.github.com/user', auth=('user', 'pass'))
>>> r.status_code
200
>>> r.headers['content-type']
'application/json; charset=utf8'
>>> r.encoding
'utf-8'
>>> r.text
u'{""type"":""User""...'
>>> r.json()
{u'disk_usage': 368627, u'private_gists': 484, ...}

¬†
Requests allows you to send HTTP/1.1 requests extremely easily. There‚Äôs no need to manually add query strings to your URLs, or to form-encode your PUT & POST data ‚Äî but nowadays, just use the json method!
Requests is the most downloaded Python package today, pulling in around 14M downloads / week‚Äî according to GitHub, Requests is currently depended upon by 367_296 repositories. You may certainly put your trust in this code.
¬†



¬†
Supported Features & Best‚ÄìPractices
Requests is ready for the demands of building robust and reliable HTTP‚Äìspeak applications, for the needs of today.
         + International Domains and URLs       + Keep-Alive & Connection Pooling
         + Sessions with Cookie Persistence     + Browser-style SSL Verification
         + Basic & Digest Authentication        + Familiar `dict`‚Äìlike Cookies
         + Automatic Decompression of Content   + Automatic Content Decoding
         + Automatic Connection Pooling         + Unicode Response Bodies*
         + Multi-part File Uploads              + SOCKS Proxy Support
         + Connection Timeouts                  + Streaming Downloads
         + Automatic honoring of `.netrc`       + Chunked HTTP Requests

                            &, of course, rock‚Äìsolid stability!


‚ú® üç∞ ‚ú®¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†

¬†
Requests Module Installation
The recommended way to intall the requests module is to simply use pipenv (or pip, of
course):
$ pipenv install requests
Adding requests to Pipfile's [packages]‚Ä¶
‚úî Installation Succeeded
‚Ä¶
Requests officially supports Python 2.7 & 3.4‚Äì3.8.

P.S. ‚Äî¬†Documentation is Available at //requests.readthedocs.io.




¬†



¬†



",python default sep import requests r requestsgethttpsapigithubcomrepospsfrequests rjsondescription simple yet elegant http library handcrafted python community software designed much joy kenneth reitz protected python software foundation requests elegant simple http library python built import requests r requestsgethttpsapigithubcomuser authuser pass rstatuscode rheaderscontenttype applicationjson charsetutf rencoding utf rtext utypeuser rjson udiskusage uprivategists requests allows send http requests extremely easily theres need manually add query strings urls formencode put post data nowadays use json method requests downloaded python package today pulling around downloads week according github requests currently depended upon repositories may certainly put trust code supported features bestpractices requests ready demands building robust reliable httpspeak applications needs today international domains urls keepalive connection pooling sessions cookie persistence browserstyle ssl verification basic digest authentication familiar dictlike cookies automatic decompression content automatic content decoding automatic connection pooling unicode response bodies multipart file uploads socks proxy support connection timeouts streaming downloads automatic honoring netrc chunked http requests course rocksolid stability requests module installation recommended way intall requests module simply use pipenv pip course pipenv install requests adding requests pipfiles packages installation succeeded requests officially supports python ps documentation available requestsreadthedocsio,python default sep import request r requestsgethttpsapigithubcomrepospsfrequest rjsondescript simpl yet eleg http librari handcraft python commun softwar design much joy kenneth reitz protect python softwar foundat request eleg simpl http librari python built import request r requestsgethttpsapigithubcomus authus pass rstatuscod rheaderscontenttyp applicationjson charsetutf rencod utf rtext utypeus rjson udiskusag uprivategist request allow send http request extrem easili there need manual add queri string url formencod put post data nowaday use json method request download python packag today pull around download week accord github request current depend upon repositori may certainli put trust code support featur bestpractic request readi demand build robust reliabl httpspeak applic need today intern domain url keepal connect pool session cooki persist browserstyl ssl verif basic digest authent familiar dictlik cooki automat decompress content automat content decod automat connect pool unicod respons bodi multipart file upload sock proxi support connect timeout stream download automat honor netrc chunk http request cours rocksolid stabil request modul instal recommend way intal request modul simpli use pipenv pip cours pipenv instal request ad request pipfil packag instal succeed request offici support python ps document avail requestsreadthedocsio,python default sep import request r requestsgethttpsapigithubcomrepospsfrequests rjsondescription simple yet elegant http library handcrafted python community software designed much joy kenneth reitz protected python software foundation request elegant simple http library python built import request r requestsgethttpsapigithubcomuser authuser pas rstatuscode rheaderscontenttype applicationjson charsetutf rencoding utf rtext utypeuser rjson udiskusage uprivategists request allows send http request extremely easily there need manually add query string url formencode put post data nowadays use json method request downloaded python package today pulling around downloads week according github request currently depended upon repository may certainly put trust code supported feature bestpractices request ready demand building robust reliable httpspeak application need today international domain url keepalive connection pooling session cookie persistence browserstyle ssl verification basic digest authentication familiar dictlike cooky automatic decompression content automatic content decoding automatic connection pooling unicode response body multipart file uploads sock proxy support connection timeouts streaming downloads automatic honoring netrc chunked http request course rocksolid stability request module installation recommended way intall request module simply use pipenv pip course pipenv install request adding request pipfiles package installation succeeded request officially support python p documentation available requestsreadthedocsio
13,Python,"GitHub - ansible/ansible: Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications ‚Äî automate in a language that approaches plain English, using SSH, with no agents to install on remote systems. https://docs.ansible.com/ansible/","
 
 
  
 
 


Ansible
Ansible is a radically simple IT automation system. It handles
configuration management, application deployment, cloud provisioning,
ad-hoc task execution, network automation, and multi-node orchestration. Ansible makes complex
changes like zero-downtime rolling updates with load balancers easy. More information on the Ansible website.

Design Principles

Have a dead simple setup process and a minimal learning curve.
Manage machines very quickly and in parallel.
Avoid custom-agents and additional open ports, be agentless by
leveraging the existing SSH daemon.
Describe infrastructure in a language that is both machine and human
friendly.
Focus on security and easy auditability/review/rewriting of content.
Manage new remote machines instantly, without bootstrapping any
software.
Allow module development in any dynamic language, not just Python.
Be usable as non-root.
Be the easiest IT automation system to use, ever.


Use Ansible
You can install a released version of Ansible via pip, a package manager, or
our release repository. See our
installation guide for details on installing Ansible
on a variety of platforms.
Red Hat offers supported builds of Ansible Engine.
Power users and developers can run the devel branch, which has the latest
features and fixes, directly. Although it is reasonably stable, you are more likely to encounter
breaking changes when running the devel branch. We recommend getting involved
in the Ansible community if you want to run the devel branch.

Get Involved

Read Community
Information for all
kinds of ways to contribute to and interact with the project,
including mailing list information and how to submit bug reports and
code to Ansible.
Join a Working Group, an organized community devoted to a specific technology domain or platform.
Submit a proposed code update through a pull request to the devel branch.
Talk to us before making larger changes
to avoid duplicate efforts. This not only helps everyone
know what is going on, it also helps save time and effort if we decide
some changes are needed.
For a list of email lists, IRC channels and Working Groups, see the
Communication page


Branch Info

The devel branch corresponds to the release actively under development.
The stable-2.X branches correspond to stable releases.
Create a branch based on devel and set up a dev environment if you want to open a PR.
See the Ansible release and maintenance page for information about active branches.


Roadmap
Based on team and community feedback, an initial roadmap will be published for a major or minor version (ex: 2.7, 2.8).
The Ansible Roadmap page details what is planned and how to influence the roadmap.

Authors
Ansible was created by Michael DeHaan
and has contributions from over 4700 users (and growing). Thanks everyone!
Ansible is sponsored by Red Hat, Inc.

License
GNU General Public License v3.0 or later
See COPYING to see the full text.
",ansible ansible radically simple automation system handles configuration management application deployment cloud provisioning adhoc task execution network automation multinode orchestration ansible makes complex changes like zerodowntime rolling updates load balancers easy information ansible website design principles dead simple setup process minimal learning curve manage machines quickly parallel avoid customagents additional open ports agentless leveraging existing ssh daemon describe infrastructure language machine human friendly focus security easy auditabilityreviewrewriting content manage new remote machines instantly without bootstrapping software allow module development dynamic language python usable nonroot easiest automation system use ever use ansible install released version ansible via pip package manager release repository see installation guide details installing ansible variety platforms red hat offers supported builds ansible engine power users developers run devel branch latest features fixes directly although reasonably stable likely encounter breaking changes running devel branch recommend getting involved ansible community want run devel branch get involved read community information kinds ways contribute interact project including mailing list information submit bug reports code ansible join working group organized community devoted specific technology domain platform submit proposed code update pull request devel branch talk us making larger changes avoid duplicate efforts helps everyone know going also helps save time effort decide changes needed list email lists irc channels working groups see communication page branch info devel branch corresponds release actively development stablex branches correspond stable releases create branch based devel set dev environment want open pr see ansible release maintenance page information active branches roadmap based team community feedback initial roadmap published major minor version ex ansible roadmap page details planned influence roadmap authors ansible created michael dehaan contributions users growing thanks everyone ansible sponsored red hat inc license gnu general public license v later see copying see full text,ansibl ansibl radic simpl autom system handl configur manag applic deploy cloud provis adhoc task execut network autom multinod orchestr ansibl make complex chang like zerodowntim roll updat load balanc easi inform ansibl websit design principl dead simpl setup process minim learn curv manag machin quickli parallel avoid customag addit open port agentless leverag exist ssh daemon describ infrastructur languag machin human friendli focu secur easi auditabilityreviewrewrit content manag new remot machin instantli without bootstrap softwar allow modul develop dynam languag python usabl nonroot easiest autom system use ever use ansibl instal releas version ansibl via pip packag manag releas repositori see instal guid detail instal ansibl varieti platform red hat offer support build ansibl engin power user develop run devel branch latest featur fix directli although reason stabl like encount break chang run devel branch recommend get involv ansibl commun want run devel branch get involv read commun inform kind way contribut interact project includ mail list inform submit bug report code ansibl join work group organ commun devot specif technolog domain platform submit propos code updat pull request devel branch talk us make larger chang avoid duplic effort help everyon know go also help save time effort decid chang need list email list irc channel work group see commun page branch info devel branch correspond releas activ develop stablex branch correspond stabl releas creat branch base devel set dev environ want open pr see ansibl releas mainten page inform activ branch roadmap base team commun feedback initi roadmap publish major minor version ex ansibl roadmap page detail plan influenc roadmap author ansibl creat michael dehaan contribut user grow thank everyon ansibl sponsor red hat inc licens gnu gener public licens v later see copi see full text,ansible ansible radically simple automation system handle configuration management application deployment cloud provisioning adhoc task execution network automation multinode orchestration ansible make complex change like zerodowntime rolling update load balancer easy information ansible website design principle dead simple setup process minimal learning curve manage machine quickly parallel avoid customagents additional open port agentless leveraging existing ssh daemon describe infrastructure language machine human friendly focus security easy auditabilityreviewrewriting content manage new remote machine instantly without bootstrapping software allow module development dynamic language python usable nonroot easiest automation system use ever use ansible install released version ansible via pip package manager release repository see installation guide detail installing ansible variety platform red hat offer supported build ansible engine power user developer run devel branch latest feature fix directly although reasonably stable likely encounter breaking change running devel branch recommend getting involved ansible community want run devel branch get involved read community information kind way contribute interact project including mailing list information submit bug report code ansible join working group organized community devoted specific technology domain platform submit proposed code update pull request devel branch talk u making larger change avoid duplicate effort help everyone know going also help save time effort decide change needed list email list irc channel working group see communication page branch info devel branch corresponds release actively development stablex branch correspond stable release create branch based devel set dev environment want open pr see ansible release maintenance page information active branch roadmap based team community feedback initial roadmap published major minor version ex ansible roadmap page detail planned influence roadmap author ansible created michael dehaan contribution user growing thanks everyone ansible sponsored red hat inc license gnu general public license v later see copying see full text
14,Python,GitHub - scikit-learn/scikit-learn: scikit-learn: machine learning in Python,"    
 
 


scikit-learn
scikit-learn is a Python module for machine learning built on top of
SciPy and is distributed under the 3-Clause BSD license.
The project was started in 2007 by David Cournapeau as a Google Summer
of Code project, and since then many volunteers have contributed. See
the About us page
for a list of core contributors.
It is currently maintained by a team of volunteers.
Website: http://scikit-learn.org

Installation

Dependencies
scikit-learn requires:

Python (>= 3.5)
NumPy (>= 1.11.0)
SciPy (>= 0.17.0)
joblib (>= 0.11)

Scikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.
scikit-learn 0.21 and later require Python 3.5 or newer.
Scikit-learn plotting capabilities (i.e., functions start with plot_
and classes end with ""Display"") require Matplotlib (>= 1.5.1). For running the
examples Matplotlib >= 1.5.1 is required. A few examples require
scikit-image >= 0.12.3, a few examples require pandas >= 0.18.0.

User installation
If you already have a working installation of numpy and scipy,
the easiest way to install scikit-learn is using pip
pip install -U scikit-learn

or conda:
conda install scikit-learn

The documentation includes more detailed installation instructions.

Changelog
See the changelog
for a history of notable changes to scikit-learn.

Development
We welcome new contributors of all experience levels. The scikit-learn
community goals are to be helpful, welcoming, and effective. The
Development Guide
has detailed information about contributing code, documentation, tests, and
more. We've included some basic information in this README.

Important links

Official source code repo: https://github.com/scikit-learn/scikit-learn
Download releases: https://pypi.org/project/scikit-learn/
Issue tracker: https://github.com/scikit-learn/scikit-learn/issues


Source code
You can check the latest sources with the command:
git clone https://github.com/scikit-learn/scikit-learn.git


Contributing
To learn more about making a contribution to scikit-learn, please see our
Contributing guide.

Testing
After installation, you can launch the test suite from outside the
source directory (you will need to have pytest >= 3.3.0 installed):
pytest sklearn

See the web page http://scikit-learn.org/dev/developers/advanced_installation.html#testing
for more information.

Random number generation can be controlled during testing by setting
the SKLEARN_SEED environment variable.

Submitting a Pull Request
Before opening a Pull Request, have a look at the
full Contributing page to make sure your code complies
with our guidelines: http://scikit-learn.org/stable/developers/index.html

Project History
The project was started in 2007 by David Cournapeau as a Google Summer
of Code project, and since then many volunteers have contributed. See
the About us page
for a list of core contributors.
The project is currently maintained by a team of volunteers.
Note: scikit-learn was previously referred to as scikits.learn.

Help and Support

Documentation

HTML documentation (stable release): http://scikit-learn.org
HTML documentation (development version): http://scikit-learn.org/dev/
FAQ: http://scikit-learn.org/stable/faq.html


Communication

Mailing list: https://mail.python.org/mailman/listinfo/scikit-learn
IRC channel: #scikit-learn at webchat.freenode.net
Stack Overflow: https://stackoverflow.com/questions/tagged/scikit-learn
Website: http://scikit-learn.org


Citation
If you use scikit-learn in a scientific publication, we would appreciate citations: http://scikit-learn.org/stable/about.html#citing-scikit-learn
",scikitlearn scikitlearn python module machine learning built top scipy distributed clause bsd license project started david cournapeau google summer code project since many volunteers contributed see us page list core contributors currently maintained team volunteers website httpscikitlearnorg installation dependencies scikitlearn requires python numpy scipy joblib scikitlearn last version support python python scikitlearn later require python newer scikitlearn plotting capabilities ie functions start plot classes end display require matplotlib running examples matplotlib required examples require scikitimage examples require pandas user installation already working installation numpy scipy easiest way install scikitlearn using pip pip install u scikitlearn conda conda install scikitlearn documentation includes detailed installation instructions changelog see changelog history notable changes scikitlearn development welcome new contributors experience levels scikitlearn community goals helpful welcoming effective development guide detailed information contributing code documentation tests weve included basic information readme important links official source code repo httpsgithubcomscikitlearnscikitlearn download releases httpspypiorgprojectscikitlearn issue tracker httpsgithubcomscikitlearnscikitlearnissues source code check latest sources command git clone httpsgithubcomscikitlearnscikitlearngit contributing learn making contribution scikitlearn please see contributing guide testing installation launch test suite outside source directory need pytest installed pytest sklearn see web page httpscikitlearnorgdevdevelopersadvancedinstallationhtmltesting information random number generation controlled testing setting sklearnseed environment variable submitting pull request opening pull request look full contributing page make sure code complies guidelines httpscikitlearnorgstabledevelopersindexhtml project history project started david cournapeau google summer code project since many volunteers contributed see us page list core contributors project currently maintained team volunteers note scikitlearn previously referred scikitslearn help support documentation html documentation stable release httpscikitlearnorg html documentation development version httpscikitlearnorgdev faq httpscikitlearnorgstablefaqhtml communication mailing list httpsmailpythonorgmailmanlistinfoscikitlearn irc channel scikitlearn webchatfreenodenet stack overflow httpsstackoverflowcomquestionstaggedscikitlearn website httpscikitlearnorg citation use scikitlearn scientific publication would appreciate citations httpscikitlearnorgstableabouthtmlcitingscikitlearn,scikitlearn scikitlearn python modul machin learn built top scipi distribut claus bsd licens project start david cournapeau googl summer code project sinc mani volunt contribut see us page list core contributor current maintain team volunt websit httpscikitlearnorg instal depend scikitlearn requir python numpi scipi joblib scikitlearn last version support python python scikitlearn later requir python newer scikitlearn plot capabl ie function start plot class end display requir matplotlib run exampl matplotlib requir exampl requir scikitimag exampl requir panda user instal alreadi work instal numpi scipi easiest way instal scikitlearn use pip pip instal u scikitlearn conda conda instal scikitlearn document includ detail instal instruct changelog see changelog histori notabl chang scikitlearn develop welcom new contributor experi level scikitlearn commun goal help welcom effect develop guid detail inform contribut code document test weve includ basic inform readm import link offici sourc code repo httpsgithubcomscikitlearnscikitlearn download releas httpspypiorgprojectscikitlearn issu tracker httpsgithubcomscikitlearnscikitlearnissu sourc code check latest sourc command git clone httpsgithubcomscikitlearnscikitlearngit contribut learn make contribut scikitlearn pleas see contribut guid test instal launch test suit outsid sourc directori need pytest instal pytest sklearn see web page httpscikitlearnorgdevdevelopersadvancedinstallationhtmltest inform random number gener control test set sklearnse environ variabl submit pull request open pull request look full contribut page make sure code compli guidelin httpscikitlearnorgstabledevelopersindexhtml project histori project start david cournapeau googl summer code project sinc mani volunt contribut see us page list core contributor project current maintain team volunt note scikitlearn previous refer scikitslearn help support document html document stabl releas httpscikitlearnorg html document develop version httpscikitlearnorgdev faq httpscikitlearnorgstablefaqhtml commun mail list httpsmailpythonorgmailmanlistinfoscikitlearn irc channel scikitlearn webchatfreenodenet stack overflow httpsstackoverflowcomquestionstaggedscikitlearn websit httpscikitlearnorg citat use scikitlearn scientif public would appreci citat httpscikitlearnorgstableabouthtmlcitingscikitlearn,scikitlearn scikitlearn python module machine learning built top scipy distributed clause bsd license project started david cournapeau google summer code project since many volunteer contributed see u page list core contributor currently maintained team volunteer website httpscikitlearnorg installation dependency scikitlearn requires python numpy scipy joblib scikitlearn last version support python python scikitlearn later require python newer scikitlearn plotting capability ie function start plot class end display require matplotlib running example matplotlib required example require scikitimage example require panda user installation already working installation numpy scipy easiest way install scikitlearn using pip pip install u scikitlearn conda conda install scikitlearn documentation includes detailed installation instruction changelog see changelog history notable change scikitlearn development welcome new contributor experience level scikitlearn community goal helpful welcoming effective development guide detailed information contributing code documentation test weve included basic information readme important link official source code repo httpsgithubcomscikitlearnscikitlearn download release httpspypiorgprojectscikitlearn issue tracker httpsgithubcomscikitlearnscikitlearnissues source code check latest source command git clone httpsgithubcomscikitlearnscikitlearngit contributing learn making contribution scikitlearn please see contributing guide testing installation launch test suite outside source directory need pytest installed pytest sklearn see web page httpscikitlearnorgdevdevelopersadvancedinstallationhtmltesting information random number generation controlled testing setting sklearnseed environment variable submitting pull request opening pull request look full contributing page make sure code complies guideline httpscikitlearnorgstabledevelopersindexhtml project history project started david cournapeau google summer code project since many volunteer contributed see u page list core contributor project currently maintained team volunteer note scikitlearn previously referred scikitslearn help support documentation html documentation stable release httpscikitlearnorg html documentation development version httpscikitlearnorgdev faq httpscikitlearnorgstablefaqhtml communication mailing list httpsmailpythonorgmailmanlistinfoscikitlearn irc channel scikitlearn webchatfreenodenet stack overflow httpsstackoverflowcomquestionstaggedscikitlearn website httpscikitlearnorg citation use scikitlearn scientific publication would appreciate citation httpscikitlearnorgstableabouthtmlcitingscikitlearn
15,Python,"GitHub - scrapy/scrapy: Scrapy, a fast high-level web crawling & scraping framework for Python.","Scrapy













Overview
Scrapy is a fast high-level web crawling and web scraping framework, used to
crawl websites and extract structured data from their pages. It can be used for
a wide range of purposes, from data mining to monitoring and automated testing.
Check the Scrapy homepage at https://scrapy.org for more information,
including a list of features.

Requirements

Python 3.5+
Works on Linux, Windows, Mac OSX, BSD


Install
The quick way:
pip install scrapy

See the install section in the documentation at
https://docs.scrapy.org/en/latest/intro/install.html for more details.

Documentation
Documentation is available online at https://docs.scrapy.org/ and in the docs
directory.

Releases
You can check https://docs.scrapy.org/en/latest/news.html for the release notes.

Community (blog, twitter, mail list, IRC)
See https://scrapy.org/community/ for details.

Contributing
See https://docs.scrapy.org/en/master/contributing.html for details.

Code of Conduct
Please note that this project is released with a Contributor Code of Conduct
(see https://github.com/scrapy/scrapy/blob/master/CODE_OF_CONDUCT.md).
By participating in this project you agree to abide by its terms.
Please report unacceptable behavior to opensource@scrapinghub.com.

Companies using Scrapy
See https://scrapy.org/companies/ for a list.

Commercial Support
See https://scrapy.org/support/ for details.
",scrapy overview scrapy fast highlevel web crawling web scraping framework used crawl websites extract structured data pages used wide range purposes data mining monitoring automated testing check scrapy homepage httpsscrapyorg information including list features requirements python works linux windows mac osx bsd install quick way pip install scrapy see install section documentation httpsdocsscrapyorgenlatestintroinstallhtml details documentation documentation available online httpsdocsscrapyorg docs directory releases check httpsdocsscrapyorgenlatestnewshtml release notes community blog twitter mail list irc see httpsscrapyorgcommunity details contributing see httpsdocsscrapyorgenmastercontributinghtml details code conduct please note project released contributor code conduct see httpsgithubcomscrapyscrapyblobmastercodeofconductmd participating project agree abide terms please report unacceptable behavior opensourcescrapinghubcom companies using scrapy see httpsscrapyorgcompanies list commercial support see httpsscrapyorgsupport details,scrapi overview scrapi fast highlevel web crawl web scrape framework use crawl websit extract structur data page use wide rang purpos data mine monitor autom test check scrapi homepag httpsscrapyorg inform includ list featur requir python work linux window mac osx bsd instal quick way pip instal scrapi see instal section document httpsdocsscrapyorgenlatestintroinstallhtml detail document document avail onlin httpsdocsscrapyorg doc directori releas check httpsdocsscrapyorgenlatestnewshtml releas note commun blog twitter mail list irc see httpsscrapyorgcommun detail contribut see httpsdocsscrapyorgenmastercontributinghtml detail code conduct pleas note project releas contributor code conduct see httpsgithubcomscrapyscrapyblobmastercodeofconductmd particip project agre abid term pleas report unaccept behavior opensourcescrapinghubcom compani use scrapi see httpsscrapyorgcompani list commerci support see httpsscrapyorgsupport detail,scrapy overview scrapy fast highlevel web crawling web scraping framework used crawl website extract structured data page used wide range purpose data mining monitoring automated testing check scrapy homepage httpsscrapyorg information including list feature requirement python work linux window mac osx bsd install quick way pip install scrapy see install section documentation httpsdocsscrapyorgenlatestintroinstallhtml detail documentation documentation available online httpsdocsscrapyorg doc directory release check httpsdocsscrapyorgenlatestnewshtml release note community blog twitter mail list irc see httpsscrapyorgcommunity detail contributing see httpsdocsscrapyorgenmastercontributinghtml detail code conduct please note project released contributor code conduct see httpsgithubcomscrapyscrapyblobmastercodeofconductmd participating project agree abide term please report unacceptable behavior opensourcescrapinghubcom company using scrapy see httpsscrapyorgcompanies list commercial support see httpsscrapyorgsupport detail
16,Python,GitHub - minimaxir/big-list-of-naughty-strings: The Big List of Naughty Strings is a list of strings which have a high probability of causing issues when used as user-input data.,"Big List of Naughty Strings
The Big List of Naughty Strings is an evolving list of strings which have a high probability of causing issues when used as user-input data. This is intended for use in helping both automated and manual QA testing; useful for whenever your QA engineer walks into a bar.
Why Test Naughty Strings?
Even multi-billion dollar companies with huge amounts of automated testing can't find every bad input. For example, look at what happens when you try to Tweet a zero-width space (U+200B) on Twitter:

Although this is not a malicious error, and typical users aren't Tweeting weird unicode, an ""internal server error"" for unexpected input is never a positive experience for the user, and may in fact be a symptom of deeper string-validation issues. The Big List of Naughty Strings is intended to help reveal such issues.
Usage
blns.txt consists of newline-delimited strings and comments which are preceded with #. The comments divide the strings into sections for easy manual reading and copy/pasting into input forms. For those who want to access the strings programmatically, a blns.json file is provided containing an array with all the comments stripped out (the scripts folder contains a Python script used to generate the blns.json).
Contributions
Feel free to send a pull request to add more strings, or additional sections. However, please do not send pull requests with very-long strings (255+ characters), as that makes the list much more difficult to view.
Likewise, please do not send pull requests which compromise manual usability of the file. This includes the EICAR test string, which can cause the file to be flagged by antivirus scanners, and files which alter the encoding of blns.txt. Also, do not send a null character (U+0000) string, as it changes the file format on GitHub to binary and renders it unreadable in pull requests. Finally, when adding or removing a string please update all files when you perform a pull request.
Disclaimer
The Big List of Naughty Strings is intended to be used for software you own and manage. Some of the Naughty Strings can indicate security vulnerabilities, and as a result using such strings with third-party software may be a crime. The maintainer is not responsible for any negative actions that result from the use of the list.
Additionally, the Big List of Naughty Strings is not a fully-comprehensive substitute for formal security/penetration testing for your service.
Library / Packages
Various implementations of the Big List of Naughty Strings have made it to various package managers.  Those are maintained by outside parties, but can be found here:



Library
Link




Node
https://www.npmjs.com/package/blns


Node
https://www.npmjs.com/package/big-list-of-naughty-strings


.NET
https://github.com/SimonCropp/NaughtyStrings



Please open a PR to list others.
Maintainer/Creator
Max Woolf (@minimaxir)
Social Media Discussions

June 10, 2015 [Hacker News]: Show HN: Big List of Naughty Strings for testing user-input data
August 17, 2015 [Reddit]: Big list of naughty strings.
February 9, 2016 [Reddit]: Big List of Naughty Strings
January 15, 2017 [Hacker News]: Naughty Strings: A list of strings likely to cause issues as user-input data
January 16, 2017 [Reddit]: Naughty Strings: A list of strings likely to cause issues as user-input data
November 16, 2018 [Hacker News]: Big List of Naughty Strings
November 16, 2018 [Reddit]: Naughty Strings - A list of strings which have a high probability of causing issues when used as user-input data

License
MIT
",big list naughty strings big list naughty strings evolving list strings high probability causing issues used userinput data intended use helping automated manual qa testing useful whenever qa engineer walks bar test naughty strings even multibillion dollar companies huge amounts automated testing cant find every bad input example look happens try tweet zerowidth space ub twitter although malicious error typical users arent tweeting weird unicode internal server error unexpected input never positive experience user may fact symptom deeper stringvalidation issues big list naughty strings intended help reveal issues usage blnstxt consists newlinedelimited strings comments preceded comments divide strings sections easy manual reading copypasting input forms want access strings programmatically blnsjson file provided containing array comments stripped scripts folder contains python script used generate blnsjson contributions feel free send pull request add strings additional sections however please send pull requests verylong strings characters makes list much difficult view likewise please send pull requests compromise manual usability file includes eicar test string cause file flagged antivirus scanners files alter encoding blnstxt also send null character u string changes file format github binary renders unreadable pull requests finally adding removing string please update files perform pull request disclaimer big list naughty strings intended used software manage naughty strings indicate security vulnerabilities result using strings thirdparty software may crime maintainer responsible negative actions result use list additionally big list naughty strings fullycomprehensive substitute formal securitypenetration testing service library packages various implementations big list naughty strings made various package managers maintained outside parties found library link node httpswwwnpmjscompackageblns node httpswwwnpmjscompackagebiglistofnaughtystrings net httpsgithubcomsimoncroppnaughtystrings please open pr list others maintainercreator max woolf minimaxir social media discussions june hacker news show hn big list naughty strings testing userinput data august reddit big list naughty strings february reddit big list naughty strings january hacker news naughty strings list strings likely cause issues userinput data january reddit naughty strings list strings likely cause issues userinput data november hacker news big list naughty strings november reddit naughty strings list strings high probability causing issues used userinput data license mit,big list naughti string big list naughti string evolv list string high probabl caus issu use userinput data intend use help autom manual qa test use whenev qa engin walk bar test naughti string even multibillion dollar compani huge amount autom test cant find everi bad input exampl look happen tri tweet zerowidth space ub twitter although malici error typic user arent tweet weird unicod intern server error unexpect input never posit experi user may fact symptom deeper stringvalid issu big list naughti string intend help reveal issu usag blnstxt consist newlinedelimit string comment preced comment divid string section easi manual read copypast input form want access string programmat blnsjson file provid contain array comment strip script folder contain python script use gener blnsjson contribut feel free send pull request add string addit section howev pleas send pull request verylong string charact make list much difficult view likewis pleas send pull request compromis manual usabl file includ eicar test string caus file flag antiviru scanner file alter encod blnstxt also send null charact u string chang file format github binari render unread pull request final ad remov string pleas updat file perform pull request disclaim big list naughti string intend use softwar manag naughti string indic secur vulner result use string thirdparti softwar may crime maintain respons neg action result use list addit big list naughti string fullycomprehens substitut formal securitypenetr test servic librari packag variou implement big list naughti string made variou packag manag maintain outsid parti found librari link node httpswwwnpmjscompackagebln node httpswwwnpmjscompackagebiglistofnaughtystr net httpsgithubcomsimoncroppnaughtystr pleas open pr list other maintainercr max woolf minimaxir social media discuss june hacker news show hn big list naughti string test userinput data august reddit big list naughti string februari reddit big list naughti string januari hacker news naughti string list string like caus issu userinput data januari reddit naughti string list string like caus issu userinput data novemb hacker news big list naughti string novemb reddit naughti string list string high probabl caus issu use userinput data licens mit,big list naughty string big list naughty string evolving list string high probability causing issue used userinput data intended use helping automated manual qa testing useful whenever qa engineer walk bar test naughty string even multibillion dollar company huge amount automated testing cant find every bad input example look happens try tweet zerowidth space ub twitter although malicious error typical user arent tweeting weird unicode internal server error unexpected input never positive experience user may fact symptom deeper stringvalidation issue big list naughty string intended help reveal issue usage blnstxt consists newlinedelimited string comment preceded comment divide string section easy manual reading copypasting input form want access string programmatically blnsjson file provided containing array comment stripped script folder contains python script used generate blnsjson contribution feel free send pull request add string additional section however please send pull request verylong string character make list much difficult view likewise please send pull request compromise manual usability file includes eicar test string cause file flagged antivirus scanner file alter encoding blnstxt also send null character u string change file format github binary render unreadable pull request finally adding removing string please update file perform pull request disclaimer big list naughty string intended used software manage naughty string indicate security vulnerability result using string thirdparty software may crime maintainer responsible negative action result use list additionally big list naughty string fullycomprehensive substitute formal securitypenetration testing service library package various implementation big list naughty string made various package manager maintained outside party found library link node httpswwwnpmjscompackageblns node httpswwwnpmjscompackagebiglistofnaughtystrings net httpsgithubcomsimoncroppnaughtystrings please open pr list others maintainercreator max woolf minimaxir social medium discussion june hacker news show hn big list naughty string testing userinput data august reddit big list naughty string february reddit big list naughty string january hacker news naughty string list string likely cause issue userinput data january reddit naughty string list string likely cause issue userinput data november hacker news big list naughty string november reddit naughty string list string high probability causing issue used userinput data license mit
17,Python,GitHub - shadowsocks/shadowsocks,"Removed according to regulations.
",removed according regulations,remov accord regul,removed according regulation
18,Python,GitHub - ageitgey/face_recognition: The world's simplest facial recognition api for Python and the command line,"Face Recognition
You can also read a translated version of this file in Chinese ÁÆÄ‰Ωì‰∏≠ÊñáÁâà or in Korean ÌïúÍµ≠Ïñ¥.
Recognize and manipulate faces from Python or from the command line with
the world's simplest face recognition library.
Built using dlib's state-of-the-art face recognition
built with deep learning. The model has an accuracy of 99.38% on the
Labeled Faces in the Wild benchmark.
This also provides a simple face_recognition command line tool that lets
you do face recognition on a folder of images from the command line!



Features
Find faces in pictures
Find all the faces that appear in a picture:

import face_recognition
image = face_recognition.load_image_file(""your_file.jpg"")
face_locations = face_recognition.face_locations(image)
Find and manipulate facial features in pictures
Get the locations and outlines of each person's eyes, nose, mouth and chin.

import face_recognition
image = face_recognition.load_image_file(""your_file.jpg"")
face_landmarks_list = face_recognition.face_landmarks(image)
Finding facial features is super useful for lots of important stuff. But you can also use it for really stupid stuff
like applying digital make-up (think 'Meitu'):

Identify faces in pictures
Recognize who appears in each photo.

import face_recognition
known_image = face_recognition.load_image_file(""biden.jpg"")
unknown_image = face_recognition.load_image_file(""unknown.jpg"")

biden_encoding = face_recognition.face_encodings(known_image)[0]
unknown_encoding = face_recognition.face_encodings(unknown_image)[0]

results = face_recognition.compare_faces([biden_encoding], unknown_encoding)
You can even use this library with other Python libraries to do real-time face recognition:

See this example for the code.
Online Demos
User-contributed shared Jupyter notebook demo (not officially supported): 
Installation
Requirements

Python 3.3+ or Python 2.7
macOS or Linux (Windows not officially supported, but might work)

Installation Options:
Installing on Mac or Linux
First, make sure you have dlib already installed with Python bindings:

How to install dlib from source on macOS or Ubuntu

Then, install this module from pypi using pip3 (or pip2 for Python 2):
pip3 install face_recognition
Alternatively, you can try this library with Docker, see this section.
If you are having trouble with installation, you can also try out a
pre-configured VM.
Installing on an Nvidia Jetson Nano board

Jetson Nano installation instructions

Please follow the instructions in the article carefully. There is current a bug in the CUDA libraries on the Jetson Nano that will cause this library to fail silently if you don't follow the instructions in the article to comment out a line in dlib and recompile it.



Installing on Raspberry Pi 2+

Raspberry Pi 2+ installation instructions

Installing on Windows
While Windows isn't officially supported, helpful users have posted instructions on how to install this library:

@masoudr's Windows 10 installation guide (dlib + face_recognition)

Installing a pre-configured Virtual Machine image

Download the pre-configured VM image (for VMware Player or VirtualBox).

Usage
Command-Line Interface
When you install face_recognition, you get two simple command-line
programs:

face_recognition - Recognize faces in a photograph or folder full for
photographs.
face_detection - Find faces in a photograph or folder full for photographs.

face_recognition command line tool
The face_recognition command lets you recognize faces in a photograph or
folder full  for photographs.
First, you need to provide a folder with one picture of each person you
already know. There should be one image file for each person with the
files named according to who is in the picture:

Next, you need a second folder with the files you want to identify:

Then in you simply run the command face_recognition, passing in
the folder of known people and the folder (or single image) with unknown
people and it tells you who is in each image:
$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/

/unknown_pictures/unknown.jpg,Barack Obama
/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person
There's one line in the output for each face. The data is comma-separated
with the filename and the name of the person found.
An unknown_person is a face in the image that didn't match anyone in
your folder of known people.
face_detection command line tool
The face_detection command lets you find the location (pixel coordinatates)
of any faces in an image.
Just run the command face_detection, passing in a folder of images
to check (or a single image):
$ face_detection  ./folder_with_pictures/

examples/image1.jpg,65,215,169,112
examples/image2.jpg,62,394,211,244
examples/image2.jpg,95,941,244,792
It prints one line for each face that was detected. The coordinates
reported are the top, right, bottom and left coordinates of the face (in pixels).
Adjusting Tolerance / Sensitivity
If you are getting multiple matches for the same person, it might be that
the people in your photos look very similar and a lower tolerance value
is needed to make face comparisons more strict.
You can do that with the --tolerance parameter. The default tolerance
value is 0.6 and lower numbers make face comparisons more strict:
$ face_recognition --tolerance 0.54 ./pictures_of_people_i_know/ ./unknown_pictures/

/unknown_pictures/unknown.jpg,Barack Obama
/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person
If you want to see the face distance calculated for each match in order
to adjust the tolerance setting, you can use --show-distance true:
$ face_recognition --show-distance true ./pictures_of_people_i_know/ ./unknown_pictures/

/unknown_pictures/unknown.jpg,Barack Obama,0.378542298956785
/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person,None
More Examples
If you simply want to know the names of the people in each photograph but don't
care about file names, you could do this:
$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/ | cut -d ',' -f2

Barack Obama
unknown_person
Speeding up Face Recognition
Face recognition can be done in parallel if you have a computer with
multiple CPU cores. For example, if your system has 4 CPU cores, you can
process about 4 times as many images in the same amount of time by using
all your CPU cores in parallel.
If you are using Python 3.4 or newer, pass in a --cpus <number_of_cpu_cores_to_use> parameter:
$ face_recognition --cpus 4 ./pictures_of_people_i_know/ ./unknown_pictures/
You can also pass in --cpus -1 to use all CPU cores in your system.
Python Module
You can import the face_recognition module and then easily manipulate
faces with just a couple of lines of code. It's super easy!
API Docs: https://face-recognition.readthedocs.io.
Automatically find all the faces in an image
import face_recognition

image = face_recognition.load_image_file(""my_picture.jpg"")
face_locations = face_recognition.face_locations(image)

# face_locations is now an array listing the co-ordinates of each face!
See this example
to try it out.
You can also opt-in to a somewhat more accurate deep-learning-based face detection model.
Note: GPU acceleration (via NVidia's CUDA library) is required for good
performance with this model. You'll also want to enable CUDA support
when compliling dlib.
import face_recognition

image = face_recognition.load_image_file(""my_picture.jpg"")
face_locations = face_recognition.face_locations(image, model=""cnn"")

# face_locations is now an array listing the co-ordinates of each face!
See this example
to try it out.
If you have a lot of images and a GPU, you can also
find faces in batches.
Automatically locate the facial features of a person in an image
import face_recognition

image = face_recognition.load_image_file(""my_picture.jpg"")
face_landmarks_list = face_recognition.face_landmarks(image)

# face_landmarks_list is now an array with the locations of each facial feature in each face.
# face_landmarks_list[0]['left_eye'] would be the location and outline of the first person's left eye.
See this example
to try it out.
Recognize faces in images and identify who they are
import face_recognition

picture_of_me = face_recognition.load_image_file(""me.jpg"")
my_face_encoding = face_recognition.face_encodings(picture_of_me)[0]

# my_face_encoding now contains a universal 'encoding' of my facial features that can be compared to any other picture of a face!

unknown_picture = face_recognition.load_image_file(""unknown.jpg"")
unknown_face_encoding = face_recognition.face_encodings(unknown_picture)[0]

# Now we can see the two face encodings are of the same person with `compare_faces`!

results = face_recognition.compare_faces([my_face_encoding], unknown_face_encoding)

if results[0] == True:
    print(""It's a picture of me!"")
else:
    print(""It's not a picture of me!"")
See this example
to try it out.
Python Code Examples
All the examples are available here.
Face Detection

Find faces in a photograph
Find faces in a photograph (using deep learning)
Find faces in batches of images w/ GPU (using deep learning)
Blur all the faces in a live video using your webcam (Requires OpenCV to be installed)

Facial Features

Identify specific facial features in a photograph
Apply (horribly ugly) digital make-up

Facial Recognition

Find and recognize unknown faces in a photograph based on photographs of known people
Identify and draw boxes around each person in a photo
Compare faces by numeric face distance instead of only True/False matches
Recognize faces in live video using your webcam - Simple / Slower Version (Requires OpenCV to be installed)
Recognize faces in live video using your webcam - Faster Version (Requires OpenCV to be installed)
Recognize faces in a video file and write out new video file (Requires OpenCV to be installed)
Recognize faces on a Raspberry Pi w/ camera
Run a web service to recognize faces via HTTP (Requires Flask to be installed)
Recognize faces with a K-nearest neighbors classifier
Train multiple images per person then recognize faces using a SVM

Creating a Standalone Executable
If you want to create a standalone executable that can run without the need to install python or face_recognition, you can use PyInstaller. However, it requires some custom configuration to work with this library. See this issue for how to do it.
Articles and Guides that cover face_recognition

My article on how Face Recognition works: Modern Face Recognition with Deep Learning

Covers the algorithms and how they generally work


Face recognition with OpenCV, Python, and deep learning by Adrian Rosebrock

Covers how to use face recognition in practice


Raspberry Pi Face Recognition by Adrian Rosebrock

Covers how to use this on a Raspberry Pi


Face clustering with Python by Adrian Rosebrock

Covers how to automatically cluster photos based on who appears in each photo using unsupervised learning



How Face Recognition Works
If you want to learn how face location and recognition work instead of
depending on a black box library, read my article.
Caveats

The face recognition model is trained on adults and does not work very well on children. It tends to mix
up children quite easy using the default comparison threshold of 0.6.
Accuracy may vary between ethnic groups. Please see this wiki page for more details.

Deployment to Cloud Hosts (Heroku, AWS, etc)
Since face_recognition depends on dlib which is written in C++, it can be tricky to deploy an app
using it to a cloud hosting provider like Heroku or AWS.
To make things easier, there's an example Dockerfile in this repo that shows how to run an app built with
face_recognition in a Docker container. With that, you should be able to deploy
to any service that supports Docker images.
You can try the Docker image locally by running: docker-compose up --build
Linux users with a GPU (drivers >= 384.81) and Nvidia-Docker installed can run the example on the GPU: Open the docker-compose.yml file and uncomment the dockerfile: Dockerfile.gpu and runtime: nvidia lines.
Having problems?
If you run into problems, please read the Common Errors section of the wiki before filing a github issue.
Thanks

Many, many thanks to Davis King (@nulhom)
for creating dlib and for providing the trained facial feature detection and face encoding models
used in this library. For more information on the ResNet that powers the face encodings, check out
his blog post.
Thanks to everyone who works on all the awesome Python data science libraries like numpy, scipy, scikit-image,
pillow, etc, etc that makes this kind of stuff so easy and fun in Python.
Thanks to Cookiecutter and the
audreyr/cookiecutter-pypackage project template
for making Python project packaging way more tolerable.

",face recognition also read translated version file chinese korean recognize manipulate faces python command line worlds simplest face recognition library built using dlibs stateoftheart face recognition built deep learning model accuracy labeled faces wild benchmark also provides simple facerecognition command line tool lets face recognition folder images command line features find faces pictures find faces appear picture import facerecognition image facerecognitionloadimagefileyourfilejpg facelocations facerecognitionfacelocationsimage find manipulate facial features pictures get locations outlines persons eyes nose mouth chin import facerecognition image facerecognitionloadimagefileyourfilejpg facelandmarkslist facerecognitionfacelandmarksimage finding facial features super useful lots important stuff also use really stupid stuff like applying digital makeup think meitu identify faces pictures recognize appears photo import facerecognition knownimage facerecognitionloadimagefilebidenjpg unknownimage facerecognitionloadimagefileunknownjpg bidenencoding facerecognitionfaceencodingsknownimage unknownencoding facerecognitionfaceencodingsunknownimage results facerecognitioncomparefacesbidenencoding unknownencoding even use library python libraries realtime face recognition see example code online demos usercontributed shared jupyter notebook demo officially supported installation requirements python python macos linux windows officially supported might work installation options installing mac linux first make sure dlib already installed python bindings install dlib source macos ubuntu install module pypi using pip pip python pip install facerecognition alternatively try library docker see section trouble installation also try preconfigured vm installing nvidia jetson nano board jetson nano installation instructions please follow instructions article carefully current bug cuda libraries jetson nano cause library fail silently dont follow instructions article comment line dlib recompile installing raspberry pi raspberry pi installation instructions installing windows windows isnt officially supported helpful users posted instructions install library masoudrs windows installation guide dlib facerecognition installing preconfigured virtual machine image download preconfigured vm image vmware player virtualbox usage commandline interface install facerecognition get two simple commandline programs facerecognition recognize faces photograph folder full photographs facedetection find faces photograph folder full photographs facerecognition command line tool facerecognition command lets recognize faces photograph folder full photographs first need provide folder one picture person already know one image file person files named according picture next need second folder files want identify simply run command facerecognition passing folder known people folder single image unknown people tells image facerecognition picturesofpeopleiknow unknownpictures unknownpicturesunknownjpgbarack obama facerecognitiontestunknownpicturesunknownjpgunknownperson theres one line output face data commaseparated filename name person found unknownperson face image didnt match anyone folder known people facedetection command line tool facedetection command lets find location pixel coordinatates faces image run command facedetection passing folder images check single image facedetection folderwithpictures examplesimagejpg examplesimagejpg examplesimagejpg prints one line face detected coordinates reported top right bottom left coordinates face pixels adjusting tolerance sensitivity getting multiple matches person might people photos look similar lower tolerance value needed make face comparisons strict tolerance parameter default tolerance value lower numbers make face comparisons strict facerecognition tolerance picturesofpeopleiknow unknownpictures unknownpicturesunknownjpgbarack obama facerecognitiontestunknownpicturesunknownjpgunknownperson want see face distance calculated match order adjust tolerance setting use showdistance true facerecognition showdistance true picturesofpeopleiknow unknownpictures unknownpicturesunknownjpgbarack obama facerecognitiontestunknownpicturesunknownjpgunknownpersonnone examples simply want know names people photograph dont care file names could facerecognition picturesofpeopleiknow unknownpictures cut f barack obama unknownperson speeding face recognition face recognition done parallel computer multiple cpu cores example system cpu cores process times many images amount time using cpu cores parallel using python newer pass cpus numberofcpucorestouse parameter facerecognition cpus picturesofpeopleiknow unknownpictures also pass cpus use cpu cores system python module import facerecognition module easily manipulate faces couple lines code super easy api docs httpsfacerecognitionreadthedocsio automatically find faces image import facerecognition image facerecognitionloadimagefilemypicturejpg facelocations facerecognitionfacelocationsimage facelocations array listing coordinates face see example try also optin somewhat accurate deeplearningbased face detection model note gpu acceleration via nvidias cuda library required good performance model youll also want enable cuda support compliling dlib import facerecognition image facerecognitionloadimagefilemypicturejpg facelocations facerecognitionfacelocationsimage modelcnn facelocations array listing coordinates face see example try lot images gpu also find faces batches automatically locate facial features person image import facerecognition image facerecognitionloadimagefilemypicturejpg facelandmarkslist facerecognitionfacelandmarksimage facelandmarkslist array locations facial feature face facelandmarkslistlefteye would location outline first persons left eye see example try recognize faces images identify import facerecognition pictureofme facerecognitionloadimagefilemejpg myfaceencoding facerecognitionfaceencodingspictureofme myfaceencoding contains universal encoding facial features compared picture face unknownpicture facerecognitionloadimagefileunknownjpg unknownfaceencoding facerecognitionfaceencodingsunknownpicture see two face encodings person comparefaces results facerecognitioncomparefacesmyfaceencoding unknownfaceencoding results true printits picture else printits picture see example try python code examples examples available face detection find faces photograph find faces photograph using deep learning find faces batches images w gpu using deep learning blur faces live video using webcam requires opencv installed facial features identify specific facial features photograph apply horribly ugly digital makeup facial recognition find recognize unknown faces photograph based photographs known people identify draw boxes around person photo compare faces numeric face distance instead truefalse matches recognize faces live video using webcam simple slower version requires opencv installed recognize faces live video using webcam faster version requires opencv installed recognize faces video file write new video file requires opencv installed recognize faces raspberry pi w camera run web service recognize faces via http requires flask installed recognize faces knearest neighbors classifier train multiple images per person recognize faces using svm creating standalone executable want create standalone executable run without need install python facerecognition use pyinstaller however requires custom configuration work library see issue articles guides cover facerecognition article face recognition works modern face recognition deep learning covers algorithms generally work face recognition opencv python deep learning adrian rosebrock covers use face recognition practice raspberry pi face recognition adrian rosebrock covers use raspberry pi face clustering python adrian rosebrock covers automatically cluster photos based appears photo using unsupervised learning face recognition works want learn face location recognition work instead depending black box library read article caveats face recognition model trained adults work well children tends mix children quite easy using default comparison threshold accuracy may vary ethnic groups please see wiki page details deployment cloud hosts heroku aws etc since facerecognition depends dlib written c tricky deploy app using cloud hosting provider like heroku aws make things easier theres example dockerfile repo shows run app built facerecognition docker container able deploy service supports docker images try docker image locally running dockercompose build linux users gpu drivers nvidiadocker installed run example gpu open dockercomposeyml file uncomment dockerfile dockerfilegpu runtime nvidia lines problems run problems please read common errors section wiki filing github issue thanks many many thanks davis king nulhom creating dlib providing trained facial feature detection face encoding models used library information resnet powers face encodings check blog post thanks everyone works awesome python data science libraries like numpy scipy scikitimage pillow etc etc makes kind stuff easy fun python thanks cookiecutter audreyrcookiecutterpypackage project template making python project packaging way tolerable,face recognit also read translat version file chines korean recogn manipul face python command line world simplest face recognit librari built use dlib stateoftheart face recognit built deep learn model accuraci label face wild benchmark also provid simpl facerecognit command line tool let face recognit folder imag command line featur find face pictur find face appear pictur import facerecognit imag facerecognitionloadimagefileyourfilejpg faceloc facerecognitionfacelocationsimag find manipul facial featur pictur get locat outlin person eye nose mouth chin import facerecognit imag facerecognitionloadimagefileyourfilejpg facelandmarkslist facerecognitionfacelandmarksimag find facial featur super use lot import stuff also use realli stupid stuff like appli digit makeup think meitu identifi face pictur recogn appear photo import facerecognit knownimag facerecognitionloadimagefilebidenjpg unknownimag facerecognitionloadimagefileunknownjpg bidenencod facerecognitionfaceencodingsknownimag unknownencod facerecognitionfaceencodingsunknownimag result facerecognitioncomparefacesbidenencod unknownencod even use librari python librari realtim face recognit see exampl code onlin demo usercontribut share jupyt notebook demo offici support instal requir python python maco linux window offici support might work instal option instal mac linux first make sure dlib alreadi instal python bind instal dlib sourc maco ubuntu instal modul pypi use pip pip python pip instal facerecognit altern tri librari docker see section troubl instal also tri preconfigur vm instal nvidia jetson nano board jetson nano instal instruct pleas follow instruct articl care current bug cuda librari jetson nano caus librari fail silent dont follow instruct articl comment line dlib recompil instal raspberri pi raspberri pi instal instruct instal window window isnt offici support help user post instruct instal librari masoudr window instal guid dlib facerecognit instal preconfigur virtual machin imag download preconfigur vm imag vmware player virtualbox usag commandlin interfac instal facerecognit get two simpl commandlin program facerecognit recogn face photograph folder full photograph facedetect find face photograph folder full photograph facerecognit command line tool facerecognit command let recogn face photograph folder full photograph first need provid folder one pictur person alreadi know one imag file person file name accord pictur next need second folder file want identifi simpli run command facerecognit pass folder known peopl folder singl imag unknown peopl tell imag facerecognit picturesofpeopleiknow unknownpictur unknownpicturesunknownjpgbarack obama facerecognitiontestunknownpicturesunknownjpgunknownperson there one line output face data commasepar filenam name person found unknownperson face imag didnt match anyon folder known peopl facedetect command line tool facedetect command let find locat pixel coordinat face imag run command facedetect pass folder imag check singl imag facedetect folderwithpictur examplesimagejpg examplesimagejpg examplesimagejpg print one line face detect coordin report top right bottom left coordin face pixel adjust toler sensit get multipl match person might peopl photo look similar lower toler valu need make face comparison strict toler paramet default toler valu lower number make face comparison strict facerecognit toler picturesofpeopleiknow unknownpictur unknownpicturesunknownjpgbarack obama facerecognitiontestunknownpicturesunknownjpgunknownperson want see face distanc calcul match order adjust toler set use showdist true facerecognit showdist true picturesofpeopleiknow unknownpictur unknownpicturesunknownjpgbarack obama facerecognitiontestunknownpicturesunknownjpgunknownpersonnon exampl simpli want know name peopl photograph dont care file name could facerecognit picturesofpeopleiknow unknownpictur cut f barack obama unknownperson speed face recognit face recognit done parallel comput multipl cpu core exampl system cpu core process time mani imag amount time use cpu core parallel use python newer pass cpu numberofcpucorestous paramet facerecognit cpu picturesofpeopleiknow unknownpictur also pass cpu use cpu core system python modul import facerecognit modul easili manipul face coupl line code super easi api doc httpsfacerecognitionreadthedocsio automat find face imag import facerecognit imag facerecognitionloadimagefilemypicturejpg faceloc facerecognitionfacelocationsimag faceloc array list coordin face see exampl tri also optin somewhat accur deeplearningbas face detect model note gpu acceler via nvidia cuda librari requir good perform model youll also want enabl cuda support complil dlib import facerecognit imag facerecognitionloadimagefilemypicturejpg faceloc facerecognitionfacelocationsimag modelcnn faceloc array list coordin face see exampl tri lot imag gpu also find face batch automat locat facial featur person imag import facerecognit imag facerecognitionloadimagefilemypicturejpg facelandmarkslist facerecognitionfacelandmarksimag facelandmarkslist array locat facial featur face facelandmarkslistleftey would locat outlin first person left eye see exampl tri recogn face imag identifi import facerecognit pictureofm facerecognitionloadimagefilemejpg myfaceencod facerecognitionfaceencodingspictureofm myfaceencod contain univers encod facial featur compar pictur face unknownpictur facerecognitionloadimagefileunknownjpg unknownfaceencod facerecognitionfaceencodingsunknownpictur see two face encod person comparefac result facerecognitioncomparefacesmyfaceencod unknownfaceencod result true printit pictur els printit pictur see exampl tri python code exampl exampl avail face detect find face photograph find face photograph use deep learn find face batch imag w gpu use deep learn blur face live video use webcam requir opencv instal facial featur identifi specif facial featur photograph appli horribl ugli digit makeup facial recognit find recogn unknown face photograph base photograph known peopl identifi draw box around person photo compar face numer face distanc instead truefals match recogn face live video use webcam simpl slower version requir opencv instal recogn face live video use webcam faster version requir opencv instal recogn face video file write new video file requir opencv instal recogn face raspberri pi w camera run web servic recogn face via http requir flask instal recogn face knearest neighbor classifi train multipl imag per person recogn face use svm creat standalon execut want creat standalon execut run without need instal python facerecognit use pyinstal howev requir custom configur work librari see issu articl guid cover facerecognit articl face recognit work modern face recognit deep learn cover algorithm gener work face recognit opencv python deep learn adrian rosebrock cover use face recognit practic raspberri pi face recognit adrian rosebrock cover use raspberri pi face cluster python adrian rosebrock cover automat cluster photo base appear photo use unsupervis learn face recognit work want learn face locat recognit work instead depend black box librari read articl caveat face recognit model train adult work well children tend mix children quit easi use default comparison threshold accuraci may vari ethnic group pleas see wiki page detail deploy cloud host heroku aw etc sinc facerecognit depend dlib written c tricki deploy app use cloud host provid like heroku aw make thing easier there exampl dockerfil repo show run app built facerecognit docker contain abl deploy servic support docker imag tri docker imag local run dockercompos build linux user gpu driver nvidiadock instal run exampl gpu open dockercomposeyml file uncom dockerfil dockerfilegpu runtim nvidia line problem run problem pleas read common error section wiki file github issu thank mani mani thank davi king nulhom creat dlib provid train facial featur detect face encod model use librari inform resnet power face encod check blog post thank everyon work awesom python data scienc librari like numpi scipi scikitimag pillow etc etc make kind stuff easi fun python thank cookiecutt audreyrcookiecutterpypackag project templat make python project packag way toler,face recognition also read translated version file chinese korean recognize manipulate face python command line world simplest face recognition library built using dlibs stateoftheart face recognition built deep learning model accuracy labeled face wild benchmark also provides simple facerecognition command line tool let face recognition folder image command line feature find face picture find face appear picture import facerecognition image facerecognitionloadimagefileyourfilejpg facelocations facerecognitionfacelocationsimage find manipulate facial feature picture get location outline person eye nose mouth chin import facerecognition image facerecognitionloadimagefileyourfilejpg facelandmarkslist facerecognitionfacelandmarksimage finding facial feature super useful lot important stuff also use really stupid stuff like applying digital makeup think meitu identify face picture recognize appears photo import facerecognition knownimage facerecognitionloadimagefilebidenjpg unknownimage facerecognitionloadimagefileunknownjpg bidenencoding facerecognitionfaceencodingsknownimage unknownencoding facerecognitionfaceencodingsunknownimage result facerecognitioncomparefacesbidenencoding unknownencoding even use library python library realtime face recognition see example code online demo usercontributed shared jupyter notebook demo officially supported installation requirement python python macos linux window officially supported might work installation option installing mac linux first make sure dlib already installed python binding install dlib source macos ubuntu install module pypi using pip pip python pip install facerecognition alternatively try library docker see section trouble installation also try preconfigured vm installing nvidia jetson nano board jetson nano installation instruction please follow instruction article carefully current bug cuda library jetson nano cause library fail silently dont follow instruction article comment line dlib recompile installing raspberry pi raspberry pi installation instruction installing window window isnt officially supported helpful user posted instruction install library masoudrs window installation guide dlib facerecognition installing preconfigured virtual machine image download preconfigured vm image vmware player virtualbox usage commandline interface install facerecognition get two simple commandline program facerecognition recognize face photograph folder full photograph facedetection find face photograph folder full photograph facerecognition command line tool facerecognition command let recognize face photograph folder full photograph first need provide folder one picture person already know one image file person file named according picture next need second folder file want identify simply run command facerecognition passing folder known people folder single image unknown people tell image facerecognition picturesofpeopleiknow unknownpictures unknownpicturesunknownjpgbarack obama facerecognitiontestunknownpicturesunknownjpgunknownperson there one line output face data commaseparated filename name person found unknownperson face image didnt match anyone folder known people facedetection command line tool facedetection command let find location pixel coordinatates face image run command facedetection passing folder image check single image facedetection folderwithpictures examplesimagejpg examplesimagejpg examplesimagejpg print one line face detected coordinate reported top right bottom left coordinate face pixel adjusting tolerance sensitivity getting multiple match person might people photo look similar lower tolerance value needed make face comparison strict tolerance parameter default tolerance value lower number make face comparison strict facerecognition tolerance picturesofpeopleiknow unknownpictures unknownpicturesunknownjpgbarack obama facerecognitiontestunknownpicturesunknownjpgunknownperson want see face distance calculated match order adjust tolerance setting use showdistance true facerecognition showdistance true picturesofpeopleiknow unknownpictures unknownpicturesunknownjpgbarack obama facerecognitiontestunknownpicturesunknownjpgunknownpersonnone example simply want know name people photograph dont care file name could facerecognition picturesofpeopleiknow unknownpictures cut f barack obama unknownperson speeding face recognition face recognition done parallel computer multiple cpu core example system cpu core process time many image amount time using cpu core parallel using python newer pas cpu numberofcpucorestouse parameter facerecognition cpu picturesofpeopleiknow unknownpictures also pas cpu use cpu core system python module import facerecognition module easily manipulate face couple line code super easy api doc httpsfacerecognitionreadthedocsio automatically find face image import facerecognition image facerecognitionloadimagefilemypicturejpg facelocations facerecognitionfacelocationsimage facelocations array listing coordinate face see example try also optin somewhat accurate deeplearningbased face detection model note gpu acceleration via nvidias cuda library required good performance model youll also want enable cuda support compliling dlib import facerecognition image facerecognitionloadimagefilemypicturejpg facelocations facerecognitionfacelocationsimage modelcnn facelocations array listing coordinate face see example try lot image gpu also find face batch automatically locate facial feature person image import facerecognition image facerecognitionloadimagefilemypicturejpg facelandmarkslist facerecognitionfacelandmarksimage facelandmarkslist array location facial feature face facelandmarkslistlefteye would location outline first person left eye see example try recognize face image identify import facerecognition pictureofme facerecognitionloadimagefilemejpg myfaceencoding facerecognitionfaceencodingspictureofme myfaceencoding contains universal encoding facial feature compared picture face unknownpicture facerecognitionloadimagefileunknownjpg unknownfaceencoding facerecognitionfaceencodingsunknownpicture see two face encoding person comparefaces result facerecognitioncomparefacesmyfaceencoding unknownfaceencoding result true printits picture else printits picture see example try python code example example available face detection find face photograph find face photograph using deep learning find face batch image w gpu using deep learning blur face live video using webcam requires opencv installed facial feature identify specific facial feature photograph apply horribly ugly digital makeup facial recognition find recognize unknown face photograph based photograph known people identify draw box around person photo compare face numeric face distance instead truefalse match recognize face live video using webcam simple slower version requires opencv installed recognize face live video using webcam faster version requires opencv installed recognize face video file write new video file requires opencv installed recognize face raspberry pi w camera run web service recognize face via http requires flask installed recognize face knearest neighbor classifier train multiple image per person recognize face using svm creating standalone executable want create standalone executable run without need install python facerecognition use pyinstaller however requires custom configuration work library see issue article guide cover facerecognition article face recognition work modern face recognition deep learning cover algorithm generally work face recognition opencv python deep learning adrian rosebrock cover use face recognition practice raspberry pi face recognition adrian rosebrock cover use raspberry pi face clustering python adrian rosebrock cover automatically cluster photo based appears photo using unsupervised learning face recognition work want learn face location recognition work instead depending black box library read article caveat face recognition model trained adult work well child tends mix child quite easy using default comparison threshold accuracy may vary ethnic group please see wiki page detail deployment cloud host heroku aws etc since facerecognition depends dlib written c tricky deploy app using cloud hosting provider like heroku aws make thing easier there example dockerfile repo show run app built facerecognition docker container able deploy service support docker image try docker image locally running dockercompose build linux user gpu driver nvidiadocker installed run example gpu open dockercomposeyml file uncomment dockerfile dockerfilegpu runtime nvidia line problem run problem please read common error section wiki filing github issue thanks many many thanks davis king nulhom creating dlib providing trained facial feature detection face encoding model used library information resnet power face encoding check blog post thanks everyone work awesome python data science library like numpy scipy scikitimage pillow etc etc make kind stuff easy fun python thanks cookiecutter audreyrcookiecutterpypackage project template making python project packaging way tolerable
19,Python,GitHub - home-assistant/home-assistant: Open source home automation that puts local control and privacy first,"Home Assistant 

Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.
Check out home-assistant.io for a
demo, installation instructions,
tutorials and documentation.


Featured integrations

The system is built using a modular approach so support for other devices or actions can be implemented easily. See also the section on architecture and the section on creating your own
components.
If you run into issues while using Home Assistant or during development
of a component, check the Home Assistant help section of our website for further help and information.
",home assistant open source home automation puts local control privacy first powered worldwide community tinkerers diy enthusiasts perfect run raspberry pi local server check homeassistantio demo installation instructions tutorials documentation featured integrations system built using modular approach support devices actions implemented easily see also section architecture section creating components run issues using home assistant development component check home assistant help section website help information,home assist open sourc home autom put local control privaci first power worldwid commun tinker diy enthusiast perfect run raspberri pi local server check homeassistantio demo instal instruct tutori document featur integr system built use modular approach support devic action implement easili see also section architectur section creat compon run issu use home assist develop compon check home assist help section websit help inform,home assistant open source home automation put local control privacy first powered worldwide community tinkerer diy enthusiast perfect run raspberry pi local server check homeassistantio demo installation instruction tutorial documentation featured integration system built using modular approach support device action implemented easily see also section architecture section creating component run issue using home assistant development component check home assistant help section website help information
20,JavaScript,GitHub - freeCodeCamp/freeCodeCamp: The https://www.freeCodeCamp.org open source codebase and curriculum. Learn to code for free together with millions of people.,"




freeCodeCamp.org's open-source codebase and curriculum
freeCodeCamp.org is a friendly community where you can learn to code for free. It is run by a donor-supported 501(c)(3) nonprofit to help  millions of busy adults transition into tech. Our community has already helped more than 10,000 people get their first developer job.
Our full-stack web development curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.
Table of Contents

Certifications
The Learning Platform
Reporting Bugs and Issues
Reporting Security Issues
Contributing
Platform, Build and Deployment Status
License

Certifications
freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginning programmer around 300 hours to earn.
Each of these 30 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it.
You can pull in these test suites through freeCodeCamp's CDN. This means you can build these projects on websites like CodePen and Glitch - or even on your local computer's development environment.
Once you‚Äôve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or r√©sum√©. And when your prospective employers or freelance clients click that link, they‚Äôll see a verified certification specific to you.
The one exception to this is if we discover violations of our Academic Honesty Policy. When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.
Here are our six core certifications:
1. Responsive Web Design Certification

Basic HTML and HTML5
Basic CSS
Applied Visual Design
Applied Accessibility
Responsive Web Design Principles
CSS Flexbox
CSS Grid


Projects: Tribute Page, Survey Form, Product Landing Page, Technical Documentation Page, Personal Portfolio Webpage

2. JavaScript Algorithms and Data Structures Certification

Basic JavaScript
ES6
Regular Expressions
Debugging
Basic Data Structures
Algorithm Scripting
Object-Oriented Programming
Functional Programming
Intermediate Algorithm Scripting


Projects: Palindrome Checker, Roman Numeral Converter, Caesar's Cipher, Telephone Number Validator, Cash Register

3. Front End Libraries Certification

Bootstrap
jQuery
Sass
React
Redux
React and Redux


Projects: Random Quote Machine, Markdown Previewer, Drum Machine, JavaScript Calculator, Pomodoro Clock

4. Data Visualization Certification

Data Visualization with D3
JSON APIs and Ajax


Projects: Bar Chart, Scatterplot Graph, Heat Map, Choropleth Map, Treemap Diagram

5. APIs and Microservices Certification

Managing Packages with Npm
Basic Node and Express
MongoDB and Mongoose


Projects: Timestamp Microservice, Request Header Parser, URL Shortener, Exercise Tracker, File Metadata Microservice

6. Information Security and Quality Assurance Certification

Information Security with HelmetJS
Quality Assurance and Testing with Chai
Advanced Node and Express


Projects: Metric-Imperial Converter, Issue Tracker, Personal Library, Stock Price Checker, Anonymous Message Board

Full Stack Development Certification
Once you have earned all 6 of these certifications, you'll be able to claim your freeCodeCamp.org Full Stack Development Certification. This final distinction signifies that you‚Äôve completed around 1,800 hours of coding with a wide range of web development tools.
Legacy Certifications
We also have 3 legacy certifications from our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.

Legacy Front End Development Certification
Legacy Data Visualization Certification
Legacy Back End Development Certification

The Learning Platform
This code is running live at freeCodeCamp.org.
Our community also has:

A forum where you can usually get programming help or project feedback within hours.
A YouTube channel with free courses on Python, SQL, Android, and a wide variety of other technologies.
A podcast with technology insights and inspiring stories from developers.
A Developer News publication, a free, open source, no-ads place to cross-post your blog articles.


Join our community here.

Reporting Bugs and Issues
If you think you've found a bug, first read the how to report a bug article and follow its instructions.
If you're confident it's a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.
Reporting Security Issues
If you think you have found a vulnerability, please report responsibly. Don't create GitHub issues for security issues. Instead, please send an email to security@freecodecamp.org and we'll look into it immediately.
Contributing

Please follow these steps to contribute.

Platform, Build and Deployment Status
The general platform status for all our applications is available at status.freecodecamp.org. The build and deployment status for the code is available in our DevOps Guide.
License
Copyright ¬© 2019 freeCodeCamp.org
The content of this repository is bound by the following licenses:

The computer software is licensed under the BSD-3-Clause license.
The learning resources in the /curriculum directory including their subdirectories thereon are licensed under the CC-BY-SA-4.0 license.

",freecodecamporgs opensource codebase curriculum freecodecamporg friendly community learn code free run donorsupported c nonprofit help millions busy adults transition tech community already helped people get first developer job fullstack web development curriculum completely free selfpaced thousands interactive coding challenges help expand skills table contents certifications learning platform reporting bugs issues reporting security issues contributing platform build deployment status license certifications freecodecamporg offers several free developer certifications certifications involves building required web app projects along hundreds optional coding challenges help prepare projects estimate certification take beginning programmer around hours earn projects freecodecamporg curriculum agile user stories automated tests help build project incrementally ensure youve fulfilled user stories submit pull test suites freecodecamps cdn means build projects websites like codepen glitch even local computers development environment youve earned certification always always able link linkedin resume prospective employers freelance clients click link theyll see verified certification specific one exception discover violations academic honesty policy catch people unambiguously plagiarizing submitting peoples code projects without citation rigorous institutions learning revoke certifications ban people six core certifications responsive web design certification basic html html basic css applied visual design applied accessibility responsive web design principles css flexbox css grid projects tribute page survey form product landing page technical documentation page personal portfolio webpage javascript algorithms data structures certification basic javascript es regular expressions debugging basic data structures algorithm scripting objectoriented programming functional programming intermediate algorithm scripting projects palindrome checker roman numeral converter caesars cipher telephone number validator cash register front end libraries certification bootstrap jquery sass react redux react redux projects random quote machine markdown previewer drum machine javascript calculator pomodoro clock data visualization certification data visualization json apis ajax projects bar chart scatterplot graph heat map choropleth map treemap diagram apis microservices certification managing packages npm basic node express mongodb mongoose projects timestamp microservice request header parser url shortener exercise tracker file metadata microservice information security quality assurance certification information security helmetjs quality assurance testing chai advanced node express projects metricimperial converter issue tracker personal library stock price checker anonymous message board full stack development certification earned certifications youll able claim freecodecamporg full stack development certification final distinction signifies youve completed around hours coding wide range web development tools legacy certifications also legacy certifications curriculum still available required projects legacy certifications remain available freecodecamporg legacy front end development certification legacy data visualization certification legacy back end development certification learning platform code running live freecodecamporg community also forum usually get programming help project feedback within hours youtube channel free courses python sql android wide variety technologies podcast technology insights inspiring stories developers developer news publication free open source noads place crosspost blog articles join community reporting bugs issues think youve found bug first read report bug article follow instructions youre confident new bug confirmed someone else facing issue go ahead create new github issue sure include much information possible reproduce bug reporting security issues think found vulnerability please report responsibly dont create github issues security issues instead please send email securityfreecodecamporg well look immediately contributing please follow steps contribute platform build deployment status general platform status applications available statusfreecodecamporg build deployment status code available devops guide license copyright freecodecamporg content repository bound following licenses computer software licensed bsdclause license learning resources curriculum directory including subdirectories thereon licensed ccbysa license,freecodecamporg opensourc codebas curriculum freecodecamporg friendli commun learn code free run donorsupport c nonprofit help million busi adult transit tech commun alreadi help peopl get first develop job fullstack web develop curriculum complet free selfpac thousand interact code challeng help expand skill tabl content certif learn platform report bug issu report secur issu contribut platform build deploy statu licens certif freecodecamporg offer sever free develop certif certif involv build requir web app project along hundr option code challeng help prepar project estim certif take begin programm around hour earn project freecodecamporg curriculum agil user stori autom test help build project increment ensur youv fulfil user stori submit pull test suit freecodecamp cdn mean build project websit like codepen glitch even local comput develop environ youv earn certif alway alway abl link linkedin resum prospect employ freelanc client click link theyll see verifi certif specif one except discov violat academ honesti polici catch peopl unambigu plagiar submit peopl code project without citat rigor institut learn revok certif ban peopl six core certif respons web design certif basic html html basic css appli visual design appli access respons web design principl css flexbox css grid project tribut page survey form product land page technic document page person portfolio webpag javascript algorithm data structur certif basic javascript es regular express debug basic data structur algorithm script objectori program function program intermedi algorithm script project palindrom checker roman numer convert caesar cipher telephon number valid cash regist front end librari certif bootstrap jqueri sass react redux react redux project random quot machin markdown preview drum machin javascript calcul pomodoro clock data visual certif data visual json api ajax project bar chart scatterplot graph heat map choropleth map treemap diagram api microservic certif manag packag npm basic node express mongodb mongoos project timestamp microservic request header parser url shorten exercis tracker file metadata microservic inform secur qualiti assur certif inform secur helmetj qualiti assur test chai advanc node express project metricimperi convert issu tracker person librari stock price checker anonym messag board full stack develop certif earn certif youll abl claim freecodecamporg full stack develop certif final distinct signifi youv complet around hour code wide rang web develop tool legaci certif also legaci certif curriculum still avail requir project legaci certif remain avail freecodecamporg legaci front end develop certif legaci data visual certif legaci back end develop certif learn platform code run live freecodecamporg commun also forum usual get program help project feedback within hour youtub channel free cours python sql android wide varieti technolog podcast technolog insight inspir stori develop develop news public free open sourc noad place crosspost blog articl join commun report bug issu think youv found bug first read report bug articl follow instruct your confid new bug confirm someon els face issu go ahead creat new github issu sure includ much inform possibl reproduc bug report secur issu think found vulner pleas report respons dont creat github issu secur issu instead pleas send email securityfreecodecamporg well look immedi contribut pleas follow step contribut platform build deploy statu gener platform statu applic avail statusfreecodecamporg build deploy statu code avail devop guid licens copyright freecodecamporg content repositori bound follow licens comput softwar licens bsdclaus licens learn resourc curriculum directori includ subdirectori thereon licens ccbysa licens,freecodecamporgs opensource codebase curriculum freecodecamporg friendly community learn code free run donorsupported c nonprofit help million busy adult transition tech community already helped people get first developer job fullstack web development curriculum completely free selfpaced thousand interactive coding challenge help expand skill table content certification learning platform reporting bug issue reporting security issue contributing platform build deployment status license certification freecodecamporg offer several free developer certification certification involves building required web app project along hundred optional coding challenge help prepare project estimate certification take beginning programmer around hour earn project freecodecamporg curriculum agile user story automated test help build project incrementally ensure youve fulfilled user story submit pull test suite freecodecamps cdn mean build project website like codepen glitch even local computer development environment youve earned certification always always able link linkedin resume prospective employer freelance client click link theyll see verified certification specific one exception discover violation academic honesty policy catch people unambiguously plagiarizing submitting people code project without citation rigorous institution learning revoke certification ban people six core certification responsive web design certification basic html html basic cs applied visual design applied accessibility responsive web design principle cs flexbox cs grid project tribute page survey form product landing page technical documentation page personal portfolio webpage javascript algorithm data structure certification basic javascript e regular expression debugging basic data structure algorithm scripting objectoriented programming functional programming intermediate algorithm scripting project palindrome checker roman numeral converter caesar cipher telephone number validator cash register front end library certification bootstrap jquery sas react redux react redux project random quote machine markdown previewer drum machine javascript calculator pomodoro clock data visualization certification data visualization json apis ajax project bar chart scatterplot graph heat map choropleth map treemap diagram apis microservices certification managing package npm basic node express mongodb mongoose project timestamp microservice request header parser url shortener exercise tracker file metadata microservice information security quality assurance certification information security helmetjs quality assurance testing chai advanced node express project metricimperial converter issue tracker personal library stock price checker anonymous message board full stack development certification earned certification youll able claim freecodecamporg full stack development certification final distinction signifies youve completed around hour coding wide range web development tool legacy certification also legacy certification curriculum still available required project legacy certification remain available freecodecamporg legacy front end development certification legacy data visualization certification legacy back end development certification learning platform code running live freecodecamporg community also forum usually get programming help project feedback within hour youtube channel free course python sql android wide variety technology podcast technology insight inspiring story developer developer news publication free open source noads place crosspost blog article join community reporting bug issue think youve found bug first read report bug article follow instruction youre confident new bug confirmed someone else facing issue go ahead create new github issue sure include much information possible reproduce bug reporting security issue think found vulnerability please report responsibly dont create github issue security issue instead please send email securityfreecodecamporg well look immediately contributing please follow step contribute platform build deployment status general platform status application available statusfreecodecamporg build deployment status code available devops guide license copyright freecodecamporg content repository bound following license computer software licensed bsdclause license learning resource curriculum directory including subdirectory thereon licensed ccbysa license
21,JavaScript,"GitHub - vuejs/vue: üññ Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.","










Supporting Vue.js
Vue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers. If you'd like to join them, please consider:

Become a backer or sponsor on Patreon.
Become a backer or sponsor on Open Collective.
One-time donation via PayPal or crypto-currencies.

What's the difference between Patreon and OpenCollective?
Funds donated via Patreon go directly to support Evan You's full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.
Special Sponsors





Platinum Sponsors


























Platinum Sponsors (China)











Gold Sponsors




































































































































































Sponsors via Open Collective
Platinum


Gold






Introduction
Vue (pronounced /vjuÀê/, like view) is a progressive framework for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.
Browser Compatibility
Vue.js supports all browsers that are ES5-compliant (IE8 and below are not supported).
Ecosystem



Project
Status
Description




vue-router

Single-page application routing


vuex

Large-scale state management


vue-cli

Project scaffolding


vue-loader

Single File Component (*.vue file) loader for webpack


vue-server-renderer

Server-side rendering support


vue-class-component

TypeScript decorator for a class-based API


vue-rx

RxJS integration


vue-devtools

Browser DevTools extension



Documentation
To check out live examples and docs, visit vuejs.org.
Questions
For questions and support please use the official forum or community chat. The issue list of this repo is exclusively for bug reports and feature requests.
Issues
Please make sure to read the Issue Reporting Checklist before opening an issue. Issues not conforming to the guidelines may be closed immediately.
Changelog
Detailed changes for each release are documented in the release notes.
Stay In Touch

Twitter
Blog
Job Board

Contribution
Please make sure to read the Contributing Guide before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to this curated list!
Thank you to all the people who already contributed to Vue!

License
MIT
Copyright (c) 2013-present, Yuxi (Evan) You
",supporting vuejs vuejs mitlicensed open source project ongoing development made possible entirely support awesome backers youd like join please consider become backer sponsor patreon become backer sponsor open collective onetime donation via paypal cryptocurrencies whats difference patreon opencollective funds donated via patreon go directly support evan yous fulltime work vuejs funds donated via opencollective managed transparent expenses used compensating work expenses core team members sponsoring community events namelogo receive proper recognition exposure donating either platform special sponsors platinum sponsors platinum sponsors china gold sponsors sponsors via open collective platinum gold introduction vue pronounced vju like view progressive framework building user interfaces designed ground incrementally adoptable easily scale library framework depending different use cases consists approachable core library focuses view layer ecosystem supporting libraries helps tackle complexity large singlepage applications browser compatibility vuejs supports browsers escompliant ie supported ecosystem project status description vuerouter singlepage application routing vuex largescale state management vuecli project scaffolding vueloader single file component vue file loader webpack vueserverrenderer serverside rendering support vueclasscomponent typescript decorator classbased api vuerx rxjs integration vuedevtools browser devtools extension documentation check live examples docs visit vuejsorg questions questions support please use official forum community chat issue list repo exclusively bug reports feature requests issues please make sure read issue reporting checklist opening issue issues conforming guidelines may closed immediately changelog detailed changes release documented release notes stay touch twitter blog job board contribution please make sure read contributing guide making pull request vuerelated projectcomponenttool add pull request curated list thank people already contributed vue license mit copyright c present yuxi evan,support vuej vuej mitlicens open sourc project ongo develop made possibl entir support awesom backer youd like join pleas consid becom backer sponsor patreon becom backer sponsor open collect onetim donat via paypal cryptocurr what differ patreon opencollect fund donat via patreon go directli support evan you fulltim work vuej fund donat via opencollect manag transpar expens use compens work expens core team member sponsor commun event namelogo receiv proper recognit exposur donat either platform special sponsor platinum sponsor platinum sponsor china gold sponsor sponsor via open collect platinum gold introduct vue pronounc vju like view progress framework build user interfac design ground increment adopt easili scale librari framework depend differ use case consist approach core librari focus view layer ecosystem support librari help tackl complex larg singlepag applic browser compat vuej support browser escompli ie support ecosystem project statu descript vuerout singlepag applic rout vuex largescal state manag vuecli project scaffold vueload singl file compon vue file loader webpack vueserverrender serversid render support vueclasscompon typescript decor classbas api vuerx rxj integr vuedevtool browser devtool extens document check live exampl doc visit vuejsorg question question support pleas use offici forum commun chat issu list repo exclus bug report featur request issu pleas make sure read issu report checklist open issu issu conform guidelin may close immedi changelog detail chang releas document releas note stay touch twitter blog job board contribut pleas make sure read contribut guid make pull request vuerel projectcomponenttool add pull request curat list thank peopl alreadi contribut vue licens mit copyright c present yuxi evan,supporting vuejs vuejs mitlicensed open source project ongoing development made possible entirely support awesome backer youd like join please consider become backer sponsor patreon become backer sponsor open collective onetime donation via paypal cryptocurrencies whats difference patreon opencollective fund donated via patreon go directly support evan yous fulltime work vuejs fund donated via opencollective managed transparent expense used compensating work expense core team member sponsoring community event namelogo receive proper recognition exposure donating either platform special sponsor platinum sponsor platinum sponsor china gold sponsor sponsor via open collective platinum gold introduction vue pronounced vju like view progressive framework building user interface designed ground incrementally adoptable easily scale library framework depending different use case consists approachable core library focus view layer ecosystem supporting library help tackle complexity large singlepage application browser compatibility vuejs support browser escompliant ie supported ecosystem project status description vuerouter singlepage application routing vuex largescale state management vuecli project scaffolding vueloader single file component vue file loader webpack vueserverrenderer serverside rendering support vueclasscomponent typescript decorator classbased api vuerx rxjs integration vuedevtools browser devtools extension documentation check live example doc visit vuejsorg question question support please use official forum community chat issue list repo exclusively bug report feature request issue please make sure read issue reporting checklist opening issue issue conforming guideline may closed immediately changelog detailed change release documented release note stay touch twitter blog job board contribution please make sure read contributing guide making pull request vuerelated projectcomponenttool add pull request curated list thank people already contributed vue license mit copyright c present yuxi evan
22,JavaScript,"GitHub - facebook/react: A declarative, efficient, and flexible JavaScript library for building user interfaces.","React ¬∑    
React is a JavaScript library for building user interfaces.

Declarative: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.
Component-Based: Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.
Learn Once, Write Anywhere: We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using React Native.

Learn how to use React in your own project.
Installation
React has been designed for gradual adoption from the start, and you can use as little or as much React as you need:

Use Online Playgrounds to get a taste of React.
Add React to a Website as a <script> tag in one minute.
Create a New React App if you're looking for a powerful JavaScript toolchain.

You can use React as a <script> tag from a CDN, or as a react package on npm.
Documentation
You can find the React documentation on the website.
Check out the Getting Started page for a quick overview.
The documentation is divided into several sections:

Tutorial
Main Concepts
Advanced Guides
API Reference
Where to Get Support
Contributing Guide

You can improve it by sending pull requests to this repository.
Examples
We have several examples on the website. Here is the first one to get you started:
function HelloMessage({ name }) {
  return <div>Hello {name}</div>;
}

ReactDOM.render(
  <HelloMessage name=""Taylor"" />,
  document.getElementById('container')
);
This example will render ""Hello Taylor"" into a container on the page.
You'll notice that we used an HTML-like syntax; we call it JSX. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you're using React as a <script> tag, read this section on integrating JSX; otherwise, the recommended JavaScript toolchains handle it automatically.
Contributing
The main purpose of this repository is to continue to evolve React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.
Code of Conduct
Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.
Contributing Guide
Read our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.
Good First Issues
To help you get your feet wet and get you familiar with our contribution process, we have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started.
License
React is MIT licensed.
",react react javascript library building user interfaces declarative react makes painless create interactive uis design simple views state application react efficiently update render right components data changes declarative views make code predictable simpler understand easier debug componentbased build encapsulated components manage state compose make complex uis since component logic written javascript instead templates easily pass rich data app keep state dom learn write anywhere dont make assumptions rest technology stack develop new features react without rewriting existing code react also render server using node power mobile apps using react native learn use react project installation react designed gradual adoption start use little much react need use online playgrounds get taste react add react website script tag one minute create new react app youre looking powerful javascript toolchain use react script tag cdn react package npm documentation find react documentation website check getting started page quick overview documentation divided several sections tutorial main concepts advanced guides api reference get support contributing guide improve sending pull requests repository examples several examples website first one get started function hellomessage name return divhello namediv reactdomrender hellomessage nametaylor documentgetelementbyidcontainer example render hello taylor container page youll notice used htmllike syntax call jsx jsx required use react makes code readable writing feels like writing html youre using react script tag read section integrating jsx otherwise recommended javascript toolchains handle automatically contributing main purpose repository continue evolve react core making faster easier use development react happens open github grateful community contributing bugfixes improvements read learn take part improving react code conduct facebook adopted code conduct expect project participants adhere please read full text understand actions tolerated contributing guide read contributing guide learn development process propose bugfixes improvements build test changes react good first issues help get feet wet get familiar contribution process list good first issues contain bugs relatively limited scope great place get started license react mit licensed,react react javascript librari build user interfac declar react make painless creat interact ui design simpl view state applic react effici updat render right compon data chang declar view make code predict simpler understand easier debug componentbas build encapsul compon manag state compos make complex ui sinc compon logic written javascript instead templat easili pass rich data app keep state dom learn write anywher dont make assumpt rest technolog stack develop new featur react without rewrit exist code react also render server use node power mobil app use react nativ learn use react project instal react design gradual adopt start use littl much react need use onlin playground get tast react add react websit script tag one minut creat new react app your look power javascript toolchain use react script tag cdn react packag npm document find react document websit check get start page quick overview document divid sever section tutori main concept advanc guid api refer get support contribut guid improv send pull request repositori exampl sever exampl websit first one get start function hellomessag name return divhello namediv reactdomrend hellomessag nametaylor documentgetelementbyidcontain exampl render hello taylor contain page youll notic use htmllike syntax call jsx jsx requir use react make code readabl write feel like write html your use react script tag read section integr jsx otherwis recommend javascript toolchain handl automat contribut main purpos repositori continu evolv react core make faster easier use develop react happen open github grate commun contribut bugfix improv read learn take part improv react code conduct facebook adopt code conduct expect project particip adher pleas read full text understand action toler contribut guid read contribut guid learn develop process propos bugfix improv build test chang react good first issu help get feet wet get familiar contribut process list good first issu contain bug rel limit scope great place get start licens react mit licens,react react javascript library building user interface declarative react make painless create interactive uis design simple view state application react efficiently update render right component data change declarative view make code predictable simpler understand easier debug componentbased build encapsulated component manage state compose make complex uis since component logic written javascript instead template easily pas rich data app keep state dom learn write anywhere dont make assumption rest technology stack develop new feature react without rewriting existing code react also render server using node power mobile apps using react native learn use react project installation react designed gradual adoption start use little much react need use online playground get taste react add react website script tag one minute create new react app youre looking powerful javascript toolchain use react script tag cdn react package npm documentation find react documentation website check getting started page quick overview documentation divided several section tutorial main concept advanced guide api reference get support contributing guide improve sending pull request repository example several example website first one get started function hellomessage name return divhello namediv reactdomrender hellomessage nametaylor documentgetelementbyidcontainer example render hello taylor container page youll notice used htmllike syntax call jsx jsx required use react make code readable writing feel like writing html youre using react script tag read section integrating jsx otherwise recommended javascript toolchains handle automatically contributing main purpose repository continue evolve react core making faster easier use development react happens open github grateful community contributing bugfixes improvement read learn take part improving react code conduct facebook adopted code conduct expect project participant adhere please read full text understand action tolerated contributing guide read contributing guide learn development process propose bugfixes improvement build test change react good first issue help get foot wet get familiar contribution process list good first issue contain bug relatively limited scope great place get started license react mit licensed
23,JavaScript,"GitHub - twbs/bootstrap: The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.","




Bootstrap

  Sleek, intuitive, and powerful front-end framework for faster and easier web development.
  
Explore Bootstrap docs ¬ª


Report bug
  ¬∑
  Request feature
  ¬∑
  Themes
  ¬∑
  Blog

Table of contents

Quick start
Status
What's included
Bugs and feature requests
Documentation
Contributing
Community
Versioning
Creators
Thanks
Copyright and license

Quick start
Several quick start options are available:

Download the latest release.
Clone the repo: git clone https://github.com/twbs/bootstrap.git
Install with npm: npm install bootstrap
Install with yarn: yarn add bootstrap@4.3.1
Install with Composer: composer require twbs/bootstrap:4.3.1
Install with NuGet: CSS: Install-Package bootstrap Sass: Install-Package bootstrap.sass

Read the Getting started page for information on the framework contents, templates and examples, and more.
Status














What's included
Within the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:
bootstrap/
‚îî‚îÄ‚îÄ dist/
    ‚îú‚îÄ‚îÄ css/
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.css
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.css.map
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.min.css
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.min.css.map
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.css
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.css.map
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.min.css
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.min.css.map
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.css
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.css.map
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.min.css
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.min.css.map
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.css
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.css.map
    ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.min.css
    ‚îÇ   ‚îî‚îÄ‚îÄ bootstrap.min.css.map
    ‚îî‚îÄ‚îÄ js/
        ‚îú‚îÄ‚îÄ bootstrap.bundle.js
        ‚îú‚îÄ‚îÄ bootstrap.bundle.js.map
        ‚îú‚îÄ‚îÄ bootstrap.bundle.min.js
        ‚îú‚îÄ‚îÄ bootstrap.bundle.min.js.map
        ‚îú‚îÄ‚îÄ bootstrap.esm.js
        ‚îú‚îÄ‚îÄ bootstrap.esm.js.map
        ‚îú‚îÄ‚îÄ bootstrap.esm.min.js
        ‚îú‚îÄ‚îÄ bootstrap.esm.min.js.map
        ‚îú‚îÄ‚îÄ bootstrap.js
        ‚îú‚îÄ‚îÄ bootstrap.js.map
        ‚îú‚îÄ‚îÄ bootstrap.min.js
        ‚îî‚îÄ‚îÄ bootstrap.min.js.map

We provide compiled CSS and JS (bootstrap.*), as well as compiled and minified CSS and JS (bootstrap.min.*). source maps (bootstrap.*.map) are available for use with certain browsers' developer tools. Bundled JS files (bootstrap.bundle.js and minified bootstrap.bundle.min.js) include Popper.
Bugs and feature requests
Have a bug or a feature request? Please first read the issue guidelines and search for existing and closed issues. If your problem or idea is not addressed yet, please open a new issue.
Documentation
Bootstrap's documentation, included in this repo in the root directory, is built with Hugo and publicly hosted on GitHub Pages at https://getbootstrap.com/. The docs may also be run locally.
Documentation search is powered by Algolia's DocSearch. Working on our search? Be sure to set debug: true in site/assets/js/src/search.js file.
Running documentation locally

Run npm install to install the Node.js dependencies, including Hugo (the site builder).
Run npm run test (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.
From the root /bootstrap directory, run npm run docs-serve in the command line.
Open http://localhost:9001/ in your browser, and voil√†.

Learn more about using Hugo by reading its documentation.
Documentation for previous releases
You can find all our previous releases docs on https://getbootstrap.com/docs/versions/.
Previous releases and their documentation are also available for download.
Contributing
Please read through our contributing guidelines. Included are directions for opening issues, coding standards, and notes on development.
Moreover, if your pull request contains JavaScript patches or features, you must include relevant unit tests. All HTML and CSS should conform to the Code Guide, maintained by Mark Otto.
Editor preferences are available in the editor config for easy use in common text editors. Read more and download plugins at https://editorconfig.org/.
Community
Get updates on Bootstrap's development and chat with the project maintainers and community members.

Follow @getbootstrap on Twitter.
Read and subscribe to The Official Bootstrap Blog.
Join the official Slack room.
Chat with fellow Bootstrappers in IRC. On the irc.freenode.net server, in the ##bootstrap channel.
Implementation help may be found at Stack Overflow (tagged bootstrap-4).
Developers should use the keyword bootstrap on packages which modify or add to the functionality of Bootstrap when distributing through npm or similar delivery mechanisms for maximum discoverability.

Versioning
For transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under the Semantic Versioning guidelines. Sometimes we screw up, but we adhere to those rules whenever possible.
See the Releases section of our GitHub project for changelogs for each release version of Bootstrap. Release announcement posts on the official Bootstrap blog contain summaries of the most noteworthy changes made in each release.
Creators
Mark Otto

https://twitter.com/mdo
https://github.com/mdo

Jacob Thornton

https://twitter.com/fat
https://github.com/fat

Thanks



Thanks to BrowserStack for providing the infrastructure that allows us to test in real browsers!
Backers
Thank you to all our backers! üôè [Become a backer]

Sponsors
Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]










Copyright and license
Code and documentation copyright 2011-2019 the Bootstrap Authors and Twitter, Inc. Code released under the MIT License. Docs released under Creative Commons.
",bootstrap sleek intuitive powerful frontend framework faster easier web development explore bootstrap docs report bug request feature themes blog table contents quick start status whats included bugs feature requests documentation contributing community versioning creators thanks copyright license quick start several quick start options available download latest release clone repo git clone httpsgithubcomtwbsbootstrapgit install npm npm install bootstrap install yarn yarn add bootstrap install composer composer require twbsbootstrap install nuget css installpackage bootstrap sass installpackage bootstrapsass read getting started page information framework contents templates examples status whats included within download youll find following directories files logically grouping common assets providing compiled minified variations youll see something like bootstrap dist css bootstrapgridcss bootstrapgridcssmap bootstrapgridmincss bootstrapgridmincssmap bootstraprebootcss bootstraprebootcssmap bootstraprebootmincss bootstraprebootmincssmap bootstraputilitiescss bootstraputilitiescssmap bootstraputilitiesmincss bootstraputilitiesmincssmap bootstrapcss bootstrapcssmap bootstrapmincss bootstrapmincssmap js bootstrapbundlejs bootstrapbundlejsmap bootstrapbundleminjs bootstrapbundleminjsmap bootstrapesmjs bootstrapesmjsmap bootstrapesmminjs bootstrapesmminjsmap bootstrapjs bootstrapjsmap bootstrapminjs bootstrapminjsmap provide compiled css js bootstrap well compiled minified css js bootstrapmin source maps bootstrapmap available use certain browsers developer tools bundled js files bootstrapbundlejs minified bootstrapbundleminjs include popper bugs feature requests bug feature request please first read issue guidelines search existing closed issues problem idea addressed yet please open new issue documentation bootstraps documentation included repo root directory built hugo publicly hosted github pages httpsgetbootstrapcom docs may also run locally documentation search powered algolias docsearch working search sure set debug true siteassetsjssrcsearchjs file running documentation locally run npm install install nodejs dependencies including hugo site builder run npm run test specific npm script rebuild distributed css javascript files well docs assets root bootstrap directory run npm run docsserve command line open httplocalhost browser voila learn using hugo reading documentation documentation previous releases find previous releases docs httpsgetbootstrapcomdocsversions previous releases documentation also available download contributing please read contributing guidelines included directions opening issues coding standards notes development moreover pull request contains javascript patches features must include relevant unit tests html css conform code guide maintained mark otto editor preferences available editor config easy use common text editors read download plugins httpseditorconfigorg community get updates bootstraps development chat project maintainers community members follow getbootstrap twitter read subscribe official bootstrap blog join official slack room chat fellow bootstrappers irc ircfreenodenet server bootstrap channel implementation help may found stack overflow tagged bootstrap developers use keyword bootstrap packages modify add functionality bootstrap distributing npm similar delivery mechanisms maximum discoverability versioning transparency release cycle striving maintain backward compatibility bootstrap maintained semantic versioning guidelines sometimes screw adhere rules whenever possible see releases section github project changelogs release version bootstrap release announcement posts official bootstrap blog contain summaries noteworthy changes made release creators mark otto httpstwittercommdo httpsgithubcommdo jacob thornton httpstwittercomfat httpsgithubcomfat thanks thanks browserstack providing infrastructure allows us test real browsers backers thank backers become backer sponsors support project becoming sponsor logo show link website become sponsor copyright license code documentation copyright bootstrap authors twitter inc code released mit license docs released creative commons,bootstrap sleek intuit power frontend framework faster easier web develop explor bootstrap doc report bug request featur theme blog tabl content quick start statu what includ bug featur request document contribut commun version creator thank copyright licens quick start sever quick start option avail download latest releas clone repo git clone httpsgithubcomtwbsbootstrapgit instal npm npm instal bootstrap instal yarn yarn add bootstrap instal compos compos requir twbsbootstrap instal nuget css installpackag bootstrap sass installpackag bootstrapsass read get start page inform framework content templat exampl statu what includ within download youll find follow directori file logic group common asset provid compil minifi variat youll see someth like bootstrap dist css bootstrapgridcss bootstrapgridcssmap bootstrapgridmincss bootstrapgridmincssmap bootstraprebootcss bootstraprebootcssmap bootstraprebootmincss bootstraprebootmincssmap bootstraputilitiescss bootstraputilitiescssmap bootstraputilitiesmincss bootstraputilitiesmincssmap bootstrapcss bootstrapcssmap bootstrapmincss bootstrapmincssmap js bootstrapbundlej bootstrapbundlejsmap bootstrapbundleminj bootstrapbundleminjsmap bootstrapesmj bootstrapesmjsmap bootstrapesmminj bootstrapesmminjsmap bootstrapj bootstrapjsmap bootstrapminj bootstrapminjsmap provid compil css js bootstrap well compil minifi css js bootstrapmin sourc map bootstrapmap avail use certain browser develop tool bundl js file bootstrapbundlej minifi bootstrapbundleminj includ popper bug featur request bug featur request pleas first read issu guidelin search exist close issu problem idea address yet pleas open new issu document bootstrap document includ repo root directori built hugo publicli host github page httpsgetbootstrapcom doc may also run local document search power algolia docsearch work search sure set debug true siteassetsjssrcsearchj file run document local run npm instal instal nodej depend includ hugo site builder run npm run test specif npm script rebuild distribut css javascript file well doc asset root bootstrap directori run npm run docsserv command line open httplocalhost browser voila learn use hugo read document document previou releas find previou releas doc httpsgetbootstrapcomdocsvers previou releas document also avail download contribut pleas read contribut guidelin includ direct open issu code standard note develop moreov pull request contain javascript patch featur must includ relev unit test html css conform code guid maintain mark otto editor prefer avail editor config easi use common text editor read download plugin httpseditorconfigorg commun get updat bootstrap develop chat project maintain commun member follow getbootstrap twitter read subscrib offici bootstrap blog join offici slack room chat fellow bootstrapp irc ircfreenodenet server bootstrap channel implement help may found stack overflow tag bootstrap develop use keyword bootstrap packag modifi add function bootstrap distribut npm similar deliveri mechan maximum discover version transpar releas cycl strive maintain backward compat bootstrap maintain semant version guidelin sometim screw adher rule whenev possibl see releas section github project changelog releas version bootstrap releas announc post offici bootstrap blog contain summari noteworthi chang made releas creator mark otto httpstwittercommdo httpsgithubcommdo jacob thornton httpstwittercomfat httpsgithubcomfat thank thank browserstack provid infrastructur allow us test real browser backer thank backer becom backer sponsor support project becom sponsor logo show link websit becom sponsor copyright licens code document copyright bootstrap author twitter inc code releas mit licens doc releas creativ common,bootstrap sleek intuitive powerful frontend framework faster easier web development explore bootstrap doc report bug request feature theme blog table content quick start status whats included bug feature request documentation contributing community versioning creator thanks copyright license quick start several quick start option available download latest release clone repo git clone httpsgithubcomtwbsbootstrapgit install npm npm install bootstrap install yarn yarn add bootstrap install composer composer require twbsbootstrap install nuget cs installpackage bootstrap sas installpackage bootstrapsass read getting started page information framework content template example status whats included within download youll find following directory file logically grouping common asset providing compiled minified variation youll see something like bootstrap dist cs bootstrapgridcss bootstrapgridcssmap bootstrapgridmincss bootstrapgridmincssmap bootstraprebootcss bootstraprebootcssmap bootstraprebootmincss bootstraprebootmincssmap bootstraputilitiescss bootstraputilitiescssmap bootstraputilitiesmincss bootstraputilitiesmincssmap bootstrapcss bootstrapcssmap bootstrapmincss bootstrapmincssmap j bootstrapbundlejs bootstrapbundlejsmap bootstrapbundleminjs bootstrapbundleminjsmap bootstrapesmjs bootstrapesmjsmap bootstrapesmminjs bootstrapesmminjsmap bootstrapjs bootstrapjsmap bootstrapminjs bootstrapminjsmap provide compiled cs j bootstrap well compiled minified cs j bootstrapmin source map bootstrapmap available use certain browser developer tool bundled j file bootstrapbundlejs minified bootstrapbundleminjs include popper bug feature request bug feature request please first read issue guideline search existing closed issue problem idea addressed yet please open new issue documentation bootstrap documentation included repo root directory built hugo publicly hosted github page httpsgetbootstrapcom doc may also run locally documentation search powered algolias docsearch working search sure set debug true siteassetsjssrcsearchjs file running documentation locally run npm install install nodejs dependency including hugo site builder run npm run test specific npm script rebuild distributed cs javascript file well doc asset root bootstrap directory run npm run docsserve command line open httplocalhost browser voila learn using hugo reading documentation documentation previous release find previous release doc httpsgetbootstrapcomdocsversions previous release documentation also available download contributing please read contributing guideline included direction opening issue coding standard note development moreover pull request contains javascript patch feature must include relevant unit test html cs conform code guide maintained mark otto editor preference available editor config easy use common text editor read download plugins httpseditorconfigorg community get update bootstrap development chat project maintainer community member follow getbootstrap twitter read subscribe official bootstrap blog join official slack room chat fellow bootstrappers irc ircfreenodenet server bootstrap channel implementation help may found stack overflow tagged bootstrap developer use keyword bootstrap package modify add functionality bootstrap distributing npm similar delivery mechanism maximum discoverability versioning transparency release cycle striving maintain backward compatibility bootstrap maintained semantic versioning guideline sometimes screw adhere rule whenever possible see release section github project changelogs release version bootstrap release announcement post official bootstrap blog contain summary noteworthy change made release creator mark otto httpstwittercommdo httpsgithubcommdo jacob thornton httpstwittercomfat httpsgithubcomfat thanks thanks browserstack providing infrastructure allows u test real browser backer thank backer become backer sponsor support project becoming sponsor logo show link website become sponsor copyright license code documentation copyright bootstrap author twitter inc code released mit license doc released creative common
24,JavaScript,GitHub - airbnb/javascript: JavaScript Style Guide,"Airbnb JavaScript Style Guide() {
A mostly reasonable approach to JavaScript

Note: this guide assumes you are using Babel, and requires that you use babel-preset-airbnb or the equivalent. It also assumes you are installing shims/polyfills in your app, with airbnb-browser-shims or the equivalent.




This guide is available in other languages too. See Translation
Other Style Guides

ES5 (Deprecated)
React
CSS-in-JavaScript
CSS & Sass
Ruby

Table of Contents

Types
References
Objects
Arrays
Destructuring
Strings
Functions
Arrow Functions
Classes & Constructors
Modules
Iterators and Generators
Properties
Variables
Hoisting
Comparison Operators & Equality
Blocks
Control Statements
Comments
Whitespace
Commas
Semicolons
Type Casting & Coercion
Naming Conventions
Accessors
Events
jQuery
ECMAScript 5 Compatibility
ECMAScript 6+ (ES 2015+) Styles
Standard Library
Testing
Performance
Resources
In the Wild
Translation
The JavaScript Style Guide Guide
Chat With Us About JavaScript
Contributors
License
Amendments

Types



1.1 Primitives: When you access a primitive type you work directly on its value.

string
number
boolean
null
undefined
symbol

const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // => 1, 9

Symbols cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don‚Äôt support them natively.






1.2 Complex: When you access a complex type you work on a reference to its value.

object
array
function

const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // => 9, 9


‚¨Ü back to top
References



2.1 Use const for all of your references; avoid using var. eslint: prefer-const, no-const-assign

Why? This ensures that you can‚Äôt reassign your references, which can lead to bugs and difficult to comprehend code.

// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;





2.2 If you must reassign references, use let instead of var. eslint: no-var

Why? let is block-scoped rather than function-scoped like var.

// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}





2.3 Note that both let and const are block-scoped.
// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError


‚¨Ü back to top
Objects



3.1 Use the literal syntax for object creation. eslint: no-new-object
// bad
const item = new Object();

// good
const item = {};





3.2 Use computed property names when creating objects with dynamic property names.

Why? They allow you to define all the properties of an object in one place.

function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: 'San Francisco',
};
obj[getKey('enabled')] = true;

// good
const obj = {
  id: 5,
  name: 'San Francisco',
  [getKey('enabled')]: true,
};





3.3 Use object method shorthand. eslint: object-shorthand
// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};





3.4 Use property value shorthand. eslint: object-shorthand

Why? It is shorter and descriptive.

const lukeSkywalker = 'Luke Skywalker';

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};





3.5 Group your shorthand properties at the beginning of your object declaration.

Why? It‚Äôs easier to tell which properties are using the shorthand.

const anakinSkywalker = 'Anakin Skywalker';
const lukeSkywalker = 'Luke Skywalker';

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};





3.6 Only quote properties that are invalid identifiers. eslint: quote-props

Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.

// bad
const bad = {
  'foo': 3,
  'bar': 4,
  'data-blah': 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  'data-blah': 5,
};





3.7 Do not call Object.prototype methods directly, such as hasOwnProperty, propertyIsEnumerable, and isPrototypeOf. eslint: no-prototype-builtins

Why? These methods may be shadowed by properties on the object in question - consider { hasOwnProperty: false } - or, the object may be a null object (Object.create(null)).

// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// best
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));
/* or */
import has from 'has'; // https://www.npmjs.com/package/has
console.log(has(object, key));





3.8 Prefer the object spread operator over Object.assign to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted.
// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ‡≤†_‡≤†
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy => { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy => { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA => { b: 2, c: 3 }


‚¨Ü back to top
Arrays



4.1 Use the literal syntax for array creation. eslint: no-array-constructor
// bad
const items = new Array();

// good
const items = [];





4.2 Use Array#push instead of direct assignment to add items to an array.
const someStack = [];

// bad
someStack[someStack.length] = 'abracadabra';

// good
someStack.push('abracadabra');





4.3 Use array spreads ... to copy arrays.
// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i < len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];






4.4 To convert an iterable object to an array, use spreads ... instead of Array.from.
const foo = document.querySelectorAll('.foo');

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];





4.5 Use Array.from for converting an array-like object to an array.
const arrLike = { 0: 'foo', 1: 'bar', 2: 'baz', length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);





4.6 Use Array.from instead of spread ... for mapping over iterables, because it avoids creating an intermediate array.
// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);





4.7 Use return statements in array method callbacks. It‚Äôs ok to omit the return if the function body consists of a single statement returning an expression without side effects, following 8.2. eslint: array-callback-return
// good
[1, 2, 3].map((x) => {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) => x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) => {
  const { subject, author } = msg;
  if (subject === 'Mockingbird') {
    return author === 'Harper Lee';
  } else {
    return false;
  }
});

// good
inbox.filter((msg) => {
  const { subject, author } = msg;
  if (subject === 'Mockingbird') {
    return author === 'Harper Lee';
  }

  return false;
});





4.8 Use line breaks after open and before close array brackets if an array has multiple lines
// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];


‚¨Ü back to top
Destructuring



5.1 Use object destructuring when accessing and using multiple properties of an object. eslint: prefer-destructuring

Why? Destructuring saves you from creating temporary references for those properties.

// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}





5.2 Use array destructuring. eslint: prefer-destructuring
const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;





5.3 Use object destructuring for multiple return values, not array destructuring.

Why? You can add new properties over time or change the order of things without breaking call sites.

// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);


‚¨Ü back to top
Strings



6.1 Use single quotes '' for strings. eslint: quotes
// bad
const name = ""Capt. Janeway"";

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = 'Capt. Janeway';





6.2 Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.

Why? Broken strings are painful to work with and make code less searchable.

// bad
const errorMessage = 'This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.';

// bad
const errorMessage = 'This is a super long error that was thrown because ' +
  'of Batman. When you stop to think about how Batman had anything to do ' +
  'with this, you would get nowhere fast.';

// good
const errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.';





6.3 When programmatically building up strings, use template strings instead of concatenation. eslint: prefer-template template-curly-spacing

Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.

// bad
function sayHi(name) {
  return 'How are you, ' + name + '?';
}

// bad
function sayHi(name) {
  return ['How are you, ', name, '?'].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}




6.4 Never use eval() on a string, it opens too many vulnerabilities. eslint: no-eval




6.5 Do not unnecessarily escape characters in strings. eslint: no-useless-escape

Why? Backslashes harm readability, thus they should only be present when necessary.

// bad
const foo = '\'this\' \i\s \""quoted\""';

// good
const foo = '\'this\' is ""quoted""';
const foo = `my name is '${name}'`;


‚¨Ü back to top
Functions



7.1 Use named function expressions instead of function declarations. eslint: func-style

Why? Function declarations are hoisted, which means that it‚Äôs easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function‚Äôs definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it‚Äôs time to extract it to its own module! Don‚Äôt forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error‚Äôs call stack. (Discussion)

// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};





7.2 Wrap immediately invoked function expressions in parentheses. eslint: wrap-iife

Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.

// immediately-invoked function expression (IIFE)
(function () {
  console.log('Welcome to the Internet. Please follow me.');
}());




7.3 Never declare a function in a non-function block (if, while, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: no-loop-func




7.4 Note: ECMA-262 defines a block as a list of statements. A function declaration is not a statement.
// bad
if (currentUser) {
  function test() {
    console.log('Nope.');
  }
}

// good
let test;
if (currentUser) {
  test = () => {
    console.log('Yup.');
  };
}





7.5 Never name a parameter arguments. This will take precedence over the arguments object that is given to every function scope.
// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}





7.6 Never use arguments, opt to use rest syntax ... instead. eslint: prefer-rest-params

Why? ... is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like arguments.

// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join('');
}

// good
function concatenateAll(...args) {
  return args.join('');
}





7.7 Use default parameter syntax rather than mutating function arguments.
// really bad
function handleThings(opts) {
  // No! We shouldn‚Äôt mutate function arguments.
  // Double bad: if opts is falsy it'll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}





7.8 Avoid side effects with default parameters.

Why? They are confusing to reason about.

var b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3





7.9 Always put default parameters last.
// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}





7.10 Never use the Function constructor to create a new function. eslint: no-new-func

Why? Creating a function in this way evaluates a string similarly to eval(), which opens vulnerabilities.

// bad
var add = new Function('a', 'b', 'return a + b');

// still bad
var subtract = Function('a', 'b', 'return a - b');





7.11 Spacing in a function signature. eslint: space-before-function-paren space-before-blocks

Why? Consistency is good, and you shouldn‚Äôt have to add or remove a space when adding or removing a name.

// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};





7.12 Never mutate parameters. eslint: no-param-reassign

Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.

// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, 'key') ? obj.key : 1;
}





7.13 Never reassign parameters. eslint: no-param-reassign

Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the arguments object. It can also cause optimization issues, especially in V8.

// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}





7.14 Prefer the use of the spread operator ... to call variadic functions. eslint: prefer-spread

Why? It‚Äôs cleaner, you don‚Äôt need to supply a context, and you can not easily compose new with apply.

// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);





7.15 Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: function-paren-newline
// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);


‚¨Ü back to top
Arrow Functions



8.1 When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: prefer-arrow-callback, arrow-spacing

Why? It creates a version of the function that executes in the context of this, which is usually what you want, and is a more concise syntax.


Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.

// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) => {
  const y = x + 1;
  return x * y;
});





8.2 If the function body consists of a single statement returning an expression without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a return statement. eslint: arrow-parens, arrow-body-style

Why? Syntactic sugar. It reads well when multiple functions are chained together.

// bad
[1, 2, 3].map((number) => {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) => `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) => {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) => ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() => bool = true);

// good
foo(() => {
  bool = true;
});





8.3 In case the expression spans over multiple lines, wrap it in parentheses for better readability.

Why? It shows clearly where the function starts and ends.

// bad
['get', 'post', 'put'].map((httpMethod) => Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
['get', 'post', 'put'].map((httpMethod) => (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));





8.4 Always include parentheses around arguments for clarity and consistency. eslint: arrow-parens

Why? Minimizes diff churn when adding or removing arguments.

// bad
[1, 2, 3].map(x => x * x);

// good
[1, 2, 3].map((x) => x * x);

// bad
[1, 2, 3].map(number => (
  `A long string with the ${number}. It‚Äôs so long that we don‚Äôt want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) => (
  `A long string with the ${number}. It‚Äôs so long that we don‚Äôt want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x => {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) => {
  const y = x + 1;
  return x * y;
});





8.5 Avoid confusing arrow function syntax (=>) with comparison operators (<=, >=). eslint: no-confusing-arrow
// bad
const itemHeight = (item) => item.height <= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) => item.height >= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) => (item.height <= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) => {
  const { height, largeSize, smallSize } = item;
  return height <= 256 ? largeSize : smallSize;
};





8.6 Enforce the location of arrow function bodies with implicit returns. eslint: implicit-arrow-linebreak
// bad
(foo) =>
  bar;

(foo) =>
  (bar);

// good
(foo) => bar;
(foo) => (bar);
(foo) => (
   bar
)


‚¨Ü back to top
Classes & Constructors



9.1 Always use class. Avoid manipulating prototype directly.

Why? class syntax is more concise and easier to reason about.

// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}





9.2 Use extends for inheritance.

Why? It is a built-in way to inherit prototype functionality without breaking instanceof.

// bad
const inherits = require('inherits');
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}





9.3 Methods can return this to help with method chaining.
// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // => true
luke.setHeight(20); // => undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);





9.4 It‚Äôs okay to write a custom toString() method, just make sure it works successfully and causes no side effects.
class Jedi {
  constructor(options = {}) {
    this.name = options.name || 'no name';
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}





9.5 Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: no-useless-constructor
// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = 'Rey';
  }
}





9.6 Avoid duplicate class members. eslint: no-dupe-class-members

Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.

// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}





9.7 Class methods should use this or be made into a static method unless an external library or framework requires to use specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: class-methods-use-this
// bad
class Foo {
  bar() {
    console.log('bar');
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren't expected to use this
class Foo {
  static bar() {
    console.log('bar');
  }
}


‚¨Ü back to top
Modules



10.1 Always use modules (import/export) over a non-standard module system. You can always transpile to your preferred module system.

Why? Modules are the future, let‚Äôs start using the future now.

// bad
const AirbnbStyleGuide = require('./AirbnbStyleGuide');
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from './AirbnbStyleGuide';
export default AirbnbStyleGuide.es6;

// best
import { es6 } from './AirbnbStyleGuide';
export default es6;





10.2 Do not use wildcard imports.

Why? This makes sure you have a single default export.

// bad
import * as AirbnbStyleGuide from './AirbnbStyleGuide';

// good
import AirbnbStyleGuide from './AirbnbStyleGuide';





10.3 And do not export directly from an import.

Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.

// bad
// filename es6.js
export { es6 as default } from './AirbnbStyleGuide';

// good
// filename es6.js
import { es6 } from './AirbnbStyleGuide';
export default es6;





10.4 Only import from a path in one place.
eslint: no-duplicate-imports

Why? Having multiple lines that import from the same path can make code harder to maintain.

// bad
import foo from 'foo';
// ‚Ä¶ some other imports ‚Ä¶ //
import { named1, named2 } from 'foo';

// good
import foo, { named1, named2 } from 'foo';

// good
import foo, {
  named1,
  named2,
} from 'foo';





10.5 Do not export mutable bindings.
eslint: import/no-mutable-exports

Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.

// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };





10.6 In modules with a single export, prefer default export over named export.
eslint: import/prefer-default-export

Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.

// bad
export function foo() {}

// good
export default function foo() {}





10.7 Put all imports above non-import statements.
eslint: import/first

Why? Since imports are hoisted, keeping them all at the top prevents surprising behavior.

// bad
import foo from 'foo';
foo.init();

import bar from 'bar';

// good
import foo from 'foo';
import bar from 'bar';

foo.init();





10.8 Multiline imports should be indented just like multiline array and object literals.

Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.

// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from 'path';

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from 'path';





10.9 Disallow Webpack loader syntax in module import statements.
eslint: import/no-webpack-loader-syntax

Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in webpack.config.js.

// bad
import fooSass from 'css!sass!foo.scss';
import barCss from 'style!css!bar.css';

// good
import fooSass from 'foo.scss';
import barCss from 'bar.css';


‚¨Ü back to top
Iterators and Generators



11.1 Don‚Äôt use iterators. Prefer JavaScript‚Äôs higher-order functions instead of loops like for-in or for-of. eslint: no-iterator no-restricted-syntax

Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.


Use map() / every() / filter() / find() / findIndex() / reduce() / some() / ... to iterate over arrays, and Object.keys() / Object.values() / Object.entries() to produce arrays so you can iterate over objects.

const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) => {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) => total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i < numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) => {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) => num + 1);





11.2 Don‚Äôt use generators for now.

Why? They don‚Äôt transpile well to ES5.






11.3 If you must use generators, or if you disregard our advice, make sure their function signature is spaced properly. eslint: generator-star-spacing

Why? function and * are part of the same conceptual keyword - * is not a modifier for function, function* is a unique construct, different from function.

// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};


‚¨Ü back to top
Properties



12.1 Use dot notation when accessing properties. eslint: dot-notation
const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke['jedi'];

// good
const isJedi = luke.jedi;





12.2 Use bracket notation [] when accessing properties with a variable.
const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp('jedi');





12.3 Use exponentiation operator ** when calculating exponentiations. eslint: no-restricted-properties.
// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;


‚¨Ü back to top
Variables



13.1 Always use const or let to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: no-undef prefer-const
// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();





13.2 Use one const or let declaration per variable or assignment. eslint: one-var

Why? It‚Äôs easier to add new variable declarations this way, and you never have to worry about swapping out a ; for a , or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.

// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = 'z';

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = 'z';

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = 'z';





13.3 Group all your consts and then group all your lets.

Why? This is helpful when later on you might need to assign a variable depending on one of the previous assigned variables.

// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;





13.4 Assign variables where you need them, but place them in a reasonable place.

Why? let and const are block scoped and not function scoped.

// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === 'test') {
    return false;
  }

  if (name === 'test') {
    this.setName('');
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === 'test') {
    return false;
  }

  const name = getName();

  if (name === 'test') {
    this.setName('');
    return false;
  }

  return name;
}





13.5 Don‚Äôt chain variable assignments. eslint: no-multi-assign

Why? Chaining variable assignments creates implicit global variables.

// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`





13.6 Avoid using unary increments and decrements (++, --). eslint no-plusplus

Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like num += 1 instead of num++ or num ++. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.

// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i < array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) => a + b, 0);
const truthyCount = array.filter(Boolean).length;





13.7 Avoid linebreaks before or after = in an assignment. If your assignment violates max-len, surround the value in parens. eslint operator-linebreak.

Why? Linebreaks surrounding = can obfuscate the value of an assignment.

// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = 'superLongLongLongLongLongLongLongLongString';

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = 'superLongLongLongLongLongLongLongLongString';





13.8 Disallow unused variables. eslint: no-unused-vars

Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.

// bad

var some_unused_var = 42;

// Write-only variables are not considered as used.
var y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
var z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

var x = 1;
var y = a + 2;

alert(getXPlusY(x, y));

// 'type' is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
var { type, ...coords } = data;
// 'coords' is now the 'data' object without its 'type' property.


‚¨Ü back to top
Hoisting



14.1 var declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. const and let declarations are blessed with a new concept called Temporal Dead Zones (TDZ). It‚Äôs important to know why typeof is no longer safe.
// we know this wouldn‚Äôt work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // => throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // => undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // => undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // => throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // => throws a ReferenceError
  const declaredButNotAssigned = true;
}





14.2 Anonymous function expressions hoist their variable name, but not the function assignment.
function example() {
  console.log(anonymous); // => undefined

  anonymous(); // => TypeError anonymous is not a function

  var anonymous = function () {
    console.log('anonymous function expression');
  };
}





14.3 Named function expressions hoist the variable name, not the function name or the function body.
function example() {
  console.log(named); // => undefined

  named(); // => TypeError named is not a function

  superPower(); // => ReferenceError superPower is not defined

  var named = function superPower() {
    console.log('Flying');
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // => undefined

  named(); // => TypeError named is not a function

  var named = function named() {
    console.log('named');
  };
}





14.4 Function declarations hoist their name and the function body.
function example() {
  superPower(); // => Flying

  function superPower() {
    console.log('Flying');
  }
}


For more information refer to JavaScript Scoping & Hoisting by Ben Cherry.


‚¨Ü back to top
Comparison Operators & Equality


15.1 Use === and !== over == and !=. eslint: eqeqeq




15.2 Conditional statements such as the if statement evaluate their expression using coercion with the ToBoolean abstract method and always follow these simple rules:

Objects evaluate to true
Undefined evaluates to false
Null evaluates to false
Booleans evaluate to the value of the boolean
Numbers evaluate to false if +0, -0, or NaN, otherwise true
Strings evaluate to false if an empty string '', otherwise true

if ([0] && []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}





15.3 Use shortcuts for booleans, but explicit comparisons for strings and numbers.
// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== '') {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length > 0) {
  // ...
}




15.4 For more information see Truth Equality and JavaScript by Angus Croll.




15.5 Use braces to create blocks in case and default clauses that contain lexical declarations (e.g. let, const, function, and class). eslint: no-case-declarations

Why? Lexical declarations are visible in the entire switch block but only get initialized when assigned, which only happens when its case is reached. This causes problems when multiple case clauses attempt to define the same thing.

// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}





15.6 Ternaries should not be nested and generally be single line expressions. eslint: no-nested-ternary
// bad
const foo = maybe1 > maybe2
  ? ""bar""
  : value1 > value2 ? ""baz"" : null;

// split into 2 separated ternary expressions
const maybeNull = value1 > value2 ? 'baz' : null;

// better
const foo = maybe1 > maybe2
  ? 'bar'
  : maybeNull;

// best
const foo = maybe1 > maybe2 ? 'bar' : maybeNull;





15.7 Avoid unneeded ternary statements. eslint: no-unneeded-ternary
// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;





15.8 When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: +, -, and ** since their precedence is broadly understood. We recommend enclosing / and * in parentheses because their precedence can be ambiguous when they are mixed.
eslint: no-mixed-operators

Why? This improves readability and clarifies the developer‚Äôs intention.

// bad
const foo = a && b < 0 || c > 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) && c
if (a || b && c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a && b < 0) || c > 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b && c)) {
  return d;
}

// good
const bar = a + (b / c) * d;


‚¨Ü back to top
Blocks



16.1 Use braces with all multi-line blocks. eslint: nonblock-statement-body-position
// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}





16.2 If you‚Äôre using multi-line blocks with if and else, put else on the same line as your if block‚Äôs closing brace. eslint: brace-style
// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}





16.3 If an if block always executes a return statement, the subsequent else block is unnecessary. A return in an else if block following an if block that contains a return can be separated into multiple if blocks. eslint: no-else-return
// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}


‚¨Ü back to top
Control Statements



17.1 In case your control statement (if, while etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.

Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.

// bad
if ((foo === 123 || bar === 'abc') && doesItLookGoodWhenItBecomesThatLong() && isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &&
  bar === 'abc') {
  thing1();
}

// bad
if (foo === 123
  && bar === 'abc') {
  thing1();
}

// bad
if (
  foo === 123 &&
  bar === 'abc'
) {
  thing1();
}

// good
if (
  foo === 123
  && bar === 'abc'
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === 'abc')
  && doesItLookGoodWhenItBecomesThatLong()
  && isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 && bar === 'abc') {
  thing1();
}





17.2 Don't use selection operators in place of control statements.
// bad
!isRunning && startRunning();

// good
if (!isRunning) {
  startRunning();
}


‚¨Ü back to top
Comments



18.1 Use /** ... */ for multi-line comments.
// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}





18.2 Use // for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it‚Äôs on the first line of a block.
// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log('fetching type...');
  // set the default type to 'no type'
  const type = this.type || 'no type';

  return type;
}

// good
function getType() {
  console.log('fetching type...');

  // set the default type to 'no type'
  const type = this.type || 'no type';

  return type;
}

// also good
function getType() {
  // set the default type to 'no type'
  const type = this.type || 'no type';

  return type;
}





18.3 Start all comments with a space to make it easier to read. eslint: spaced-comment
// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}




18.4 Prefixing your comments with FIXME or TODO helps other developers quickly understand if you‚Äôre pointing out a problem that needs to be revisited, or if you‚Äôre suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are FIXME: -- need to figure this out or TODO: -- need to implement.




18.5 Use // FIXME: to annotate problems.
class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn‚Äôt use a global here
    total = 0;
  }
}





18.6 Use // TODO: to annotate solutions to problems.
class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}


‚¨Ü back to top
Whitespace



19.1 Use soft tabs (space character) set to 2 spaces. eslint: indent
// bad
function foo() {
‚àô‚àô‚àô‚àôlet name;
}

// bad
function bar() {
‚àôlet name;
}

// good
function baz() {
‚àô‚àôlet name;
}





19.2 Place 1 space before the leading brace. eslint: space-before-blocks
// bad
function test(){
  console.log('test');
}

// good
function test() {
  console.log('test');
}

// bad
dog.set('attr',{
  age: '1 year',
  breed: 'Bernese Mountain Dog',
});

// good
dog.set('attr', {
  age: '1 year',
  breed: 'Bernese Mountain Dog',
});





19.3 Place 1 space before the opening parenthesis in control statements (if, while etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: keyword-spacing
// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log ('Swooosh!');
}

// good
function fight() {
  console.log('Swooosh!');
}





19.4 Set off operators with spaces. eslint: space-infix-ops
// bad
const x=y+5;

// good
const x = y + 5;





19.5 End files with a single newline character. eslint: eol-last
// bad
import { es6 } from './AirbnbStyleGuide';
  // ...
export default es6;
// bad
import { es6 } from './AirbnbStyleGuide';
  // ...
export default es6;‚Üµ
‚Üµ
// good
import { es6 } from './AirbnbStyleGuide';
  // ...
export default es6;‚Üµ





19.6 Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which
emphasizes that the line is a method call, not a new statement. eslint: newline-per-chained-call no-whitespace-before-property
// bad
$('#items').find('.selected').highlight().end().find('.open').updateCount();

// bad
$('#items').
  find('.selected').
    highlight().
    end().
  find('.open').
    updateCount();

// good
$('#items')
  .find('.selected')
    .highlight()
    .end()
  .find('.open')
    .updateCount();

// bad
const leds = stage.selectAll('.led').data(data).enter().append('svg:svg').classed('led', true)
    .attr('width', (radius + margin) * 2).append('svg:g')
    .attr('transform', `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll('.led')
    .data(data)
  .enter().append('svg:svg')
    .classed('led', true)
    .attr('width', (radius + margin) * 2)
  .append('svg:g')
    .attr('transform', `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll('.led').data(data);





19.7 Leave a blank line after blocks and before the next statement.
// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;





19.8 Do not pad your blocks with blank lines. eslint: padded-blocks
// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(qux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(qux);
} else {
  console.log(foo);
}





19.9 Do not use multiple blank lines to pad your code. eslint: no-multiple-empty-lines
// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}





19.10 Do not add spaces inside parentheses. eslint: space-in-parens
// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}





19.11 Do not add spaces inside brackets. eslint: array-bracket-spacing
// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);





19.12 Add spaces inside curly braces. eslint: object-curly-spacing
// bad
const foo = {clark: 'kent'};

// good
const foo = { clark: 'kent' };





19.13 Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per above, long strings are exempt from this rule, and should not be broken up. eslint: max-len

Why? This ensures readability and maintainability.

// bad
const foo = jsonData && jsonData.foo && jsonData.foo.bar && jsonData.foo.bar.baz && jsonData.foo.bar.baz.quux && jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: 'POST', url: 'https://airbnb.com/', data: { name: 'John' } }).done(() => console.log('Congratulations!')).fail(() => console.log('You have failed this city.'));

// good
const foo = jsonData
  && jsonData.foo
  && jsonData.foo.bar
  && jsonData.foo.bar.baz
  && jsonData.foo.bar.baz.quux
  && jsonData.foo.bar.baz.quux.xyzzy;

// good
$.ajax({
  method: 'POST',
  url: 'https://airbnb.com/',
  data: { name: 'John' },
})
  .done(() => console.log('Congratulations!'))
  .fail(() => console.log('You have failed this city.'));





19.14 Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: block-spacing
// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }





19.15 Avoid spaces before commas and require a space after commas. eslint: comma-spacing
// bad
var foo = 1,bar = 2;
var arr = [1 , 2];

// good
var foo = 1, bar = 2;
var arr = [1, 2];





19.16 Enforce spacing inside of computed property brackets. eslint: computed-property-spacing
// bad
obj[foo ]
obj[ 'foo']
var x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj['foo']
var x = { [b]: a }
obj[foo[bar]]





19.17 Avoid spaces between functions and their invocations. eslint: func-call-spacing
// bad
func ();

func
();

// good
func();





19.18 Enforce spacing between keys and values in object literal properties. eslint: key-spacing
// bad
var obj = { ""foo"" : 42 };
var obj2 = { ""foo"":42 };

// good
var obj = { ""foo"": 42 };




19.19 Avoid trailing spaces at the end of lines. eslint: no-trailing-spaces




19.20 Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: no-multiple-empty-lines
// bad - multiple empty lines
var x = 1;


var y = 2;

// bad - 2+ newlines at end of file
var x = 1;
var y = 2;


// bad - 1+ newline(s) at beginning of file

var x = 1;
var y = 2;

// good
var x = 1;
var y = 2;



‚¨Ü back to top
Commas



20.1 Leading commas: Nope. eslint: comma-style
// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: 'Ada'
  , lastName: 'Lovelace'
  , birthYear: 1815
  , superPower: 'computers'
};

// good
const hero = {
  firstName: 'Ada',
  lastName: 'Lovelace',
  birthYear: 1815,
  superPower: 'computers',
};





20.2 Additional trailing comma: Yup. eslint: comma-dangle

Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don‚Äôt have to worry about the trailing comma problem in legacy browsers.

// bad - git diff without trailing comma
const hero = {
     firstName: 'Florence',
-    lastName: 'Nightingale'
+    lastName: 'Nightingale',
+    inventorOf: ['coxcomb chart', 'modern nursing']
};

// good - git diff with trailing comma
const hero = {
     firstName: 'Florence',
     lastName: 'Nightingale',
+    inventorOf: ['coxcomb chart', 'modern nursing'],
};
// bad
const hero = {
  firstName: 'Dana',
  lastName: 'Scully'
};

const heroes = [
  'Batman',
  'Superman'
];

// good
const hero = {
  firstName: 'Dana',
  lastName: 'Scully',
};

const heroes = [
  'Batman',
  'Superman',
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a ""rest"" element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a ""rest"" element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);


‚¨Ü back to top
Semicolons



21.1 Yup. eslint: semi

Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called Automatic Semicolon Insertion to determine whether or not it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.

// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) => jedi.father = 'vader')

// bad - raises exception
const reaction = ""No! That‚Äôs impossible!""
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    'search your feelings, you know it to be foo'
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) => {
  jedi.father = 'vader';
});

// good
const reaction = ""No! That‚Äôs impossible!"";
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return 'search your feelings, you know it to be foo';
}
Read more.


‚¨Ü back to top
Type Casting & Coercion


22.1 Perform type coercion at the beginning of the statement.




22.2 Strings: eslint: no-new-wrappers
// => this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is ""object"" not ""string""

// bad
const totalScore = this.reviewScore + ''; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn‚Äôt guaranteed to return a string

// good
const totalScore = String(this.reviewScore);





22.3 Numbers: Use Number for type casting and parseInt always with a radix for parsing strings. eslint: radix no-new-wrappers
const inputValue = '4';

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue >> 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);





22.4 If for whatever reason you are doing something wild and parseInt is your bottleneck and need to use Bitshift for performance reasons, leave a comment explaining why and what you‚Äôre doing.
// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue >> 0;





22.5 Note: Be careful when using bitshift operations. Numbers are represented as 64-bit values, but bitshift operations always return a 32-bit integer (source). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. Discussion. Largest signed 32-bit Int is 2,147,483,647:
2147483647 >> 0; // => 2147483647
2147483648 >> 0; // => -2147483648
2147483649 >> 0; // => -2147483647





22.6 Booleans: eslint: no-new-wrappers
const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;


‚¨Ü back to top
Naming Conventions



23.1 Avoid single letter names. Be descriptive with your naming. eslint: id-length
// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}





23.2 Use camelCase when naming objects, functions, and instances. eslint: camelcase
// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}





23.3 Use PascalCase only when naming constructors or classes. eslint: new-cap
// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: 'nope',
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: 'yup',
});





23.4 Do not use trailing or leading underscores. eslint: no-underscore-dangle

Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean ‚Äúprivate‚Äù, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won‚Äôt count as breaking, or that tests aren‚Äôt needed. tl;dr: if you want something to be ‚Äúprivate‚Äù, it must not be observably present.

// bad
this.__firstName__ = 'Panda';
this.firstName_ = 'Panda';
this._firstName = 'Panda';

// good
this.firstName = 'Panda';

// good, in environments where WeakMaps are available
// see https://kangax.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, 'Panda');





23.5 Don‚Äôt save references to this. Use arrow functions or Function#bind.
// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () => {
    console.log(this);
  };
}





23.6 A base filename should exactly match the name of its default export.
// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from './checkBox'; // PascalCase import/export, camelCase filename
import FortyTwo from './FortyTwo'; // PascalCase import/filename, camelCase export
import InsideDirectory from './InsideDirectory'; // PascalCase import/filename, camelCase export

// bad
import CheckBox from './check_box'; // PascalCase import/export, snake_case filename
import forty_two from './forty_two'; // snake_case import/filename, camelCase export
import inside_directory from './inside_directory'; // snake_case import, camelCase export
import index from './inside_directory/index'; // requiring the index file explicitly
import insideDirectory from './insideDirectory/index'; // requiring the index file explicitly

// good
import CheckBox from './CheckBox'; // PascalCase export/import/filename
import fortyTwo from './fortyTwo'; // camelCase export/import/filename
import insideDirectory from './insideDirectory'; // camelCase export/import/directory name/implicit ""index""
// ^ supports both insideDirectory.js and insideDirectory/index.js





23.7 Use camelCase when you export-default a function. Your filename should be identical to your function‚Äôs name.
function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;





23.8 Use PascalCase when you export a constructor / class / singleton / function library / bare object.
const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;





23.9 Acronyms and initialisms should always be all uppercased, or all lowercased.

Why? Names are for readability, not to appease a computer algorithm.

// bad
import SmsContainer from './containers/SmsContainer';

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from './containers/SMSContainer';

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from './containers/TextMessageContainer';

// best
const requests = [
  // ...
];





23.10 You may optionally uppercase a constant only if it (1) is exported, (2) is a const (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.

Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.


What about all const variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.
What about exported objects? - Uppercase at the top level of export (e.g. EXPORTED_OBJECT.key) and maintain that all nested properties do not change.

// bad
const PRIVATE_VARIABLE = 'should not be unnecessarily uppercased within a file';

// bad
export const THING_TO_BE_CHANGED = 'should obviously not be uppercased';

// bad
export let REASSIGNABLE_VARIABLE = 'do not use let with uppercase variables';

// ---

// allowed but does not supply semantic value
export const apiKey = 'SOMEKEY';

// better in most cases
export const API_KEY = 'SOMEKEY';

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: 'value'
};

// good
export const MAPPING = {
  key: 'value'
};


‚¨Ü back to top
Accessors


24.1 Accessor functions for properties are not required.




24.2 Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use getVal() and setVal('hello').
// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}





24.3 If the property/method is a boolean, use isVal() or hasVal().
// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}





24.4 It‚Äôs okay to create get() and set() functions, but be consistent.
class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || 'blue';
    this.set('lightsaber', lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}


‚¨Ü back to top
Events



25.1 When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a ""hash"") instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:
// bad
$(this).trigger('listingUpdated', listing.id);

// ...

$(this).on('listingUpdated', (e, listingID) => {
  // do something with listingID
});
prefer:
// good
$(this).trigger('listingUpdated', { listingID: listing.id });

// ...

$(this).on('listingUpdated', (e, data) => {
  // do something with data.listingID
});


‚¨Ü back to top
jQuery



26.1 Prefix jQuery object variables with a $.
// bad
const sidebar = $('.sidebar');

// good
const $sidebar = $('.sidebar');

// good
const $sidebarBtn = $('.sidebar-btn');





26.2 Cache jQuery lookups.
// bad
function setSidebar() {
  $('.sidebar').hide();

  // ...

  $('.sidebar').css({
    'background-color': 'pink',
  });
}

// good
function setSidebar() {
  const $sidebar = $('.sidebar');
  $sidebar.hide();

  // ...

  $sidebar.css({
    'background-color': 'pink',
  });
}




26.3 For DOM queries use Cascading $('.sidebar ul') or parent > child $('.sidebar > ul'). jsPerf




26.4 Use find with scoped jQuery object queries.
// bad
$('ul', '.sidebar').hide();

// bad
$('.sidebar').find('ul').hide();

// good
$('.sidebar ul').hide();

// good
$('.sidebar > ul').hide();

// good
$sidebar.find('ul').hide();


‚¨Ü back to top
ECMAScript 5 Compatibility


27.1 Refer to Kangax‚Äôs ES5 compatibility table.

‚¨Ü back to top

ECMAScript 6+ (ES 2015+) Styles


28.1 This is a collection of links to the various ES6+ features.


Arrow Functions
Classes
Object Shorthand
Object Concise
Object Computed Properties
Template Strings
Destructuring
Default Parameters
Rest
Array Spreads
Let and Const
Exponentiation Operator
Iterators and Generators
Modules




28.2 Do not use TC39 proposals that have not reached stage 3.

Why? They are not finalized, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.



‚¨Ü back to top
Standard Library
The Standard Library
contains utilities that are functionally broken but remain for legacy reasons.



29.1 Use Number.isNaN instead of global isNaN.
eslint: no-restricted-globals

Why? The global isNaN coerces non-numbers to numbers, returning true for anything that coerces to NaN.
If this behavior is desired, make it explicit.

// bad
isNaN('1.2'); // false
isNaN('1.2.3'); // true

// good
Number.isNaN('1.2.3'); // false
Number.isNaN(Number('1.2.3')); // true





29.2 Use Number.isFinite instead of global isFinite.
eslint: no-restricted-globals

Why? The global isFinite coerces non-numbers to numbers, returning true for anything that coerces to a finite number.
If this behavior is desired, make it explicit.

// bad
isFinite('2e3'); // true

// good
Number.isFinite('2e3'); // false
Number.isFinite(parseInt('2e3', 10)); // true


‚¨Ü back to top
Testing



30.1 Yup.
function foo() {
  return true;
}




30.2 No, but seriously:

Whichever testing framework you use, you should be writing tests!
Strive to write many small pure functions, and minimize where mutations occur.
Be cautious about stubs and mocks - they can make your tests more brittle.
We primarily use mocha and jest at Airbnb. tape is also used occasionally for small, separate modules.
100% test coverage is a good goal to strive for, even if it‚Äôs not always practical to reach it.
Whenever you fix a bug, write a regression test. A bug fixed without a regression test is almost certainly going to break again in the future.



‚¨Ü back to top
Performance

On Layout & Web Performance
String vs Array Concat
Try/Catch Cost In a Loop
Bang Function
jQuery Find vs Context, Selector
innerHTML vs textContent for script text
Long String Concatenation
Are JavaScript functions like map(), reduce(), and filter() optimized for traversing arrays?
Loading...

‚¨Ü back to top
Resources
Learning ES6+

Latest ECMA spec
ExploringJS
ES6 Compatibility Table
Comprehensive Overview of ES6 Features

Read This

Standard ECMA-262

Tools

Code Style Linters

ESlint - Airbnb Style .eslintrc
JSHint - Airbnb Style .jshintrc


Neutrino Preset - @neutrinojs/airbnb

Other Style Guides

Google JavaScript Style Guide
Google JavaScript Style Guide (Old)
jQuery Core Style Guidelines
Principles of Writing Consistent, Idiomatic JavaScript
StandardJS

Other Styles

Naming this in nested functions - Christian Johansen
Conditional Callbacks - Ross Allen
Popular JavaScript Coding Conventions on GitHub - JeongHoon Byun
Multiple var statements in JavaScript, not superfluous - Ben Alman

Further Reading

Understanding JavaScript Closures - Angus Croll
Basic JavaScript for the impatient programmer - Dr. Axel Rauschmayer
You Might Not Need jQuery - Zack Bloom & Adam Schwartz
ES6 Features - Luke Hoban
Frontend Guidelines - Benjamin De Cock

Books

JavaScript: The Good Parts - Douglas Crockford
JavaScript Patterns - Stoyan Stefanov
Pro JavaScript Design Patterns - Ross Harmes and Dustin Diaz
High Performance Web Sites: Essential Knowledge for Front-End Engineers - Steve Souders
Maintainable JavaScript - Nicholas C. Zakas
JavaScript Web Applications - Alex MacCaw
Pro JavaScript Techniques - John Resig
Smashing Node.js: JavaScript Everywhere - Guillermo Rauch
Secrets of the JavaScript Ninja - John Resig and Bear Bibeault
Human JavaScript - Henrik Joreteg
Superhero.js - Kim Joar Bekkelund, Mads Mob√¶k, & Olav Bjorkoy
JSBooks - Julien Bouquillon
Third Party JavaScript - Ben Vinegar and Anton Kovalyov
Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript - David Herman
Eloquent JavaScript - Marijn Haverbeke
You Don‚Äôt Know JS: ES6 & Beyond - Kyle Simpson

Blogs

JavaScript Weekly
JavaScript, JavaScript...
Bocoup Weblog
Adequately Good
NCZOnline
Perfection Kills
Ben Alman
Dmitry Baranovskiy
nettuts

Podcasts

JavaScript Air
JavaScript Jabber

‚¨Ü back to top
In the Wild
This is a list of organizations that are using this style guide. Send us a pull request and we'll add you to the list.

123erfasst: 123erfasst/javascript
3blades: 3Blades
4Catalyzer: 4Catalyzer/javascript
Aan Zee: AanZee/javascript
Adult Swim: adult-swim/javascript
Airbnb: airbnb/javascript
AltSchool: AltSchool/javascript
Apartmint: apartmint/javascript
Ascribe: ascribe/javascript
Avalara: avalara/javascript
Avant: avantcredit/javascript
Axept: axept/javascript
BashPros: BashPros/javascript
Billabong: billabong/javascript
Bisk: bisk
Bonhomme: bonhommeparis/javascript
Brainshark: brainshark/javascript
CaseNine: CaseNine/javascript
Cerner: Cerner
Chartboost: ChartBoost/javascript-style-guide
Coeur d'Alene Tribe: www.cdatribe-nsn.gov
ComparaOnline: comparaonline/javascript
Compass Learning: compasslearning/javascript-style-guide
DailyMotion: dailymotion/javascript
DoSomething: DoSomething/eslint-config
Digitpaint digitpaint/javascript
Drupal: www.drupal.org
Ecosia: ecosia/javascript
Evernote: evernote/javascript-style-guide
Evolution Gaming: evolution-gaming/javascript
EvozonJs: evozonjs/javascript
ExactTarget: ExactTarget/javascript
Expensify Expensify/Style-Guide
Flexberry: Flexberry/javascript-style-guide
Gawker Media: gawkermedia
General Electric: GeneralElectric/javascript
Generation Tux: GenerationTux/javascript
GoodData: gooddata/gdc-js-style
GreenChef: greenchef/javascript
Grooveshark: grooveshark/javascript
Grupo-Abraxas: Grupo-Abraxas/javascript
Happeo: happeo/javascript
Honey: honeyscience/javascript
How About We: howaboutwe/javascript
Huballin: huballin
HubSpot: HubSpot/javascript
Hyper: hyperoslo/javascript-playbook
InterCity Group: intercitygroup/javascript-style-guide
Jam3: Jam3/Javascript-Code-Conventions
JeopardyBot: kesne/jeopardy-bot
JSSolutions: JSSolutions/javascript
Kaplan Komputing: kaplankomputing/javascript
KickorStick: kickorstick
Kinetica Solutions: kinetica/javascript
LEINWAND: LEINWAND/javascript
Lonely Planet: lonelyplanet/javascript
M2GEN: M2GEN/javascript
Mighty Spring: mightyspring/javascript
MinnPost: MinnPost/javascript
MitocGroup: MitocGroup/javascript
ModCloth: modcloth/javascript
Money Advice Service: moneyadviceservice/javascript
Muber: muber
National Geographic: natgeo
Nimbl3: nimbl3/javascript
NullDev: NullDevCo/JavaScript-Styleguide
Nulogy: nulogy/javascript
Orange Hill Development: orangehill/javascript
Orion Health: orionhealth/javascript
OutBoxSoft: OutBoxSoft/javascript
Peerby: Peerby/javascript
Pier 1: Pier1/javascript
Qotto: Qotto/javascript-style-guide
Razorfish: razorfish/javascript-style-guide
reddit: reddit/styleguide/javascript
React: facebook.github.io/react/contributing/how-to-contribute.html#style-guide
REI: reidev/js-style-guide
Ripple: ripple/javascript-style-guide
Sainsbury‚Äôs Supermarkets: jsainsburyplc
SeekingAlpha: seekingalpha/javascript-style-guide
Shutterfly: shutterfly/javascript
Sourcetoad: sourcetoad/javascript
Springload: springload
StratoDem Analytics: stratodem/javascript
SteelKiwi Development: steelkiwi/javascript
StudentSphere: studentsphere/javascript
SwoopApp: swoopapp/javascript
SysGarage: sysgarage/javascript-style-guide
Syzygy Warsaw: syzygypl/javascript
Target: target/javascript
Terra: terra
TheLadders: TheLadders/javascript
The Nerdery: thenerdery/javascript-standards
Tomify: tomprats
Traitify: traitify/eslint-config-traitify
T4R Technology: T4R-Technology/javascript
UrbanSim: urbansim
VoxFeed: VoxFeed/javascript-style-guide
WeBox Studio: weboxstudio/javascript
Weggo: Weggo/javascript
Zillow: zillow/javascript
ZocDoc: ZocDoc/javascript

‚¨Ü back to top
Translation
This style guide is also available in other languages:

 Brazilian Portuguese: armoucar/javascript-style-guide
 Bulgarian: borislavvv/javascript
 Catalan: fpmweb/javascript-style-guide
 Chinese (Simplified): lin-123/javascript
 Chinese (Traditional): jigsawye/javascript
 French: nmussy/javascript-style-guide
 German: timofurrer/javascript-style-guide
 Italian: sinkswim/javascript-style-guide
 Japanese: mitsuruog/javascript-style-guide
 Korean: ParkSB/javascript-style-guide
 Russian: leonidlebedev/javascript-airbnb
 Spanish: paolocarrasco/javascript-style-guide
 Thai: lvarayut/javascript-style-guide
 Turkish: eraycetinay/javascript
 Ukrainian: ivanzusko/javascript
 Vietnam: dangkyokhoang/javascript-style-guide

The JavaScript Style Guide Guide

Reference

Chat With Us About JavaScript

Find us on gitter.

Contributors

View Contributors

License
(The MIT License)
Copyright (c) 2012 Airbnb
Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:
The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
‚¨Ü back to top
Amendments
We encourage you to fork this guide and change the rules to fit your team‚Äôs style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.
};
",airbnb javascript style guide mostly reasonable approach javascript note guide assumes using babel requires use babelpresetairbnb equivalent also assumes installing shimspolyfills app airbnbbrowsershims equivalent guide available languages see translation style guides es deprecated react cssinjavascript css sass ruby table contents types references objects arrays destructuring strings functions arrow functions classes constructors modules iterators generators properties variables hoisting comparison operators equality blocks control statements comments whitespace commas semicolons type casting coercion naming conventions accessors events jquery ecmascript compatibility ecmascript es styles standard library testing performance resources wild translation javascript style guide guide chat us javascript contributors license amendments types primitives access primitive type work directly value string number boolean null undefined symbol const foo let bar foo bar consolelogfoo bar symbols cannot faithfully polyfilled used targeting browsersenvironments dont support natively complex access complex type work reference value object array function const foo const bar foo bar consolelogfoo bar back top references use const references avoid using var eslint preferconst noconstassign ensures cant reassign references lead bugs difficult comprehend code bad var var b good const const b must reassign references use let instead var eslint novar let blockscoped rather functionscoped like var bad var count true count good use let let count true count note let const blockscoped const let exist blocks defined let const b consoleloga referenceerror consolelogb referenceerror back top objects use literal syntax object creation eslint nonewobject bad const item new object good const item use computed property names creating objects dynamic property names allow define properties object one place function getkeyk return key named k bad const obj id name san francisco objgetkeyenabled true good const obj id name san francisco getkeyenabled true use object method shorthand eslint objectshorthand bad const atom value addvalue function value return atomvalue value good const atom value addvaluevalue return atomvalue value use property value shorthand eslint objectshorthand shorter descriptive const lukeskywalker luke skywalker bad const obj lukeskywalker lukeskywalker good const obj lukeskywalker group shorthand properties beginning object declaration easier tell properties using shorthand const anakinskywalker anakin skywalker const lukeskywalker luke skywalker bad const obj episodeone twojediwalkintoacantina lukeskywalker episodethree maythefourth anakinskywalker good const obj lukeskywalker anakinskywalker episodeone twojediwalkintoacantina episodethree maythefourth quote properties invalid identifiers eslint quoteprops general consider subjectively easier read improves syntax highlighting also easily optimized many js engines bad const bad foo bar datablah good const good foo bar datablah call objectprototype methods directly hasownproperty propertyisenumerable isprototypeof eslint noprototypebuiltins methods may shadowed properties object question consider hasownproperty false object may null object objectcreatenull bad consolelogobjecthasownpropertykey good consolelogobjectprototypehasownpropertycallobject key best const objectprototypehasownproperty cache lookup module scope consoleloghascallobject key import httpswwwnpmjscompackagehas consoleloghasobject key prefer object spread operator objectassign shallowcopy objects use object rest operator get new object certain properties omitted bad const original b const copy objectassignoriginal c mutates original delete copya bad const original b const copy objectassign original c copy b c good const original b const copy original c copy b c const noa copy noa b c back top arrays use literal syntax array creation eslint noarrayconstructor bad const items new array good const items use arraypush instead direct assignment add items array const somestack bad somestacksomestacklength abracadabra good somestackpushabracadabra use array spreads copy arrays bad const len itemslength const itemscopy let len itemscopyi itemsi good const itemscopy items convert iterable object array use spreads instead arrayfrom const foo documentqueryselectorallfoo good const nodes arrayfromfoo best const nodes foo use arrayfrom converting arraylike object array const arrlike foo bar baz length bad const arr arrayprototypeslicecallarrlike good const arr arrayfromarrlike use arrayfrom instead spread mapping iterables avoids creating intermediate array bad const baz foomapbar good const baz arrayfromfoo bar use return statements array method callbacks ok omit return function body consists single statement returning expression without side effects following eslint arraycallbackreturn good mapx const x return x good mapx x bad returned value means acc becomes undefined first iteration reduceacc item index const flatten accconcatitem good reduceacc item index const flatten accconcatitem return flatten bad inboxfiltermsg const subject author msg subject mockingbird return author harper lee else return false good inboxfiltermsg const subject author msg subject mockingbird return author harper lee return false use line breaks open close array brackets array multiple lines bad const arr const objectinarray id id const numberinarray good const arr const objectinarray id id const numberinarray back top destructuring use object destructuring accessing using multiple properties object eslint preferdestructuring destructuring saves creating temporary references properties bad function getfullnameuser const firstname userfirstname const lastname userlastname return firstname lastname good function getfullnameuser const firstname lastname user return firstname lastname best function getfullname firstname lastname return firstname lastname use array destructuring eslint preferdestructuring const arr bad const first arr const second arr good const first second arr use object destructuring multiple return values array destructuring add new properties time change order things without breaking call sites bad function processinputinput miracle occurs return left right top bottom caller needs think order return data const left top processinputinput good function processinputinput miracle occurs return left right top bottom caller selects data need const left top processinputinput back top strings use single quotes strings eslint quotes bad const name capt janeway bad template literals contain interpolation newlines const name capt janeway good const name capt janeway strings cause line go characters written across multiple lines using string concatenation broken strings painful work make code less searchable bad const errormessage super long error thrown batman stop think batman anything would get nowhere fast bad const errormessage super long error thrown batman stop think batman anything would get nowhere fast good const errormessage super long error thrown batman stop think batman anything would get nowhere fast programmatically building strings use template strings instead concatenation eslint prefertemplate templatecurlyspacing template strings give readable concise syntax proper newlines string interpolation features bad function sayhiname return name bad function sayhiname return name join bad function sayhiname return name good function sayhiname return name never use eval string opens many vulnerabilities eslint noeval unnecessarily escape characters strings eslint nouselessescape backslashes harm readability thus present necessary bad const foo quoted good const foo quoted const foo name name back top functions use named function expressions instead function declarations eslint funcstyle function declarations hoisted means easy easy reference function defined file harms readability maintainability find functions definition large complex enough interfering understanding rest file perhaps time extract module dont forget explicitly name expression regardless whether name inferred containing variable often case modern browsers using compilers babel eliminates assumptions made errors call stack discussion bad function foo bad const foo function good lexical name distinguished variablereferenced invocations const short function longuniquemoredescriptivelexicalfoo wrap immediately invoked function expressions parentheses eslint wrapiife immediately invoked function expression single unit wrapping invocation parens parens cleanly expresses note world modules everywhere almost never need iife immediatelyinvoked function expression iife function consolelogwelcome internet please follow never declare function nonfunction block etc assign function variable instead browsers allow interpret differently bad news bears eslint noloopfunc note ecma defines block list statements function declaration statement bad currentuser function test consolelognope good let test currentuser test consolelogyup never name parameter arguments take precedence arguments object given every function scope bad function fooname options arguments good function fooname options args never use arguments opt use rest syntax instead eslint preferrestparams explicit arguments want pulled plus rest arguments real array merely arraylike like arguments bad function concatenateall const args arrayprototypeslicecallarguments return argsjoin good function concatenateallargs return argsjoin use default parameter syntax rather mutating function arguments really bad function handlethingsopts shouldnt mutate function arguments double bad opts falsy itll set object may want introduce subtle bugs opts opts still bad function handlethingsopts opts void opts good function handlethingsopts avoid side effects default parameters confusing reason var b bad function counta b consoleloga count count count count always put default parameters last bad function handlethingsopts name good function handlethingsname opts never use function constructor create new function eslint nonewfunc creating function way evaluates string similarly eval opens vulnerabilities bad var add new functiona b return b still bad var subtract functiona b return b spacing function signature eslint spacebeforefunctionparen spacebeforeblocks consistency good shouldnt add remove space adding removing name bad const f function const g function const h function good const x function const function never mutate parameters eslint noparamreassign manipulating objects passed parameters cause unwanted variable side effects original caller bad function fobj objkey good function fobj const key objectprototypehasownpropertycallobj key objkey never reassign parameters eslint noparamreassign reassigning parameters lead unexpected behavior especially accessing arguments object also cause optimization issues especially v bad function fa function fa good function fa const b function fa prefer use spread operator call variadic functions eslint preferspread cleaner dont need supply context easily compose new apply bad const x consolelogapplyconsole x good const x consolelogx bad new functionprototypebindapplydate null good new date functions multiline signatures invocations indented like every multiline list guide item line trailing comma last item eslint functionparennewline bad function foobar baz quux good function foo bar baz quux bad consolelogfoo bar baz good consolelog foo bar baz back top arrow functions must use anonymous function passing inline callback use arrow function notation eslint preferarrowcallback arrowspacing creates version function executes context usually want concise syntax fairly complicated function might move logic named function expression bad mapfunction x const x return x good mapx const x return x function body consists single statement returning expression without side effects omit braces use implicit return otherwise keep braces use return statement eslint arrowparens arrowbodystyle syntactic sugar reads well multiple functions chained together bad mapnumber const nextnumber number string containing nextnumber good mapnumber string containing number good mapnumber const nextnumber number return string containing nextnumber good mapnumber index index number implicit return side effects function foocallback const val callback val true something callback returns true let bool false bad foo bool true good foo bool true case expression spans multiple lines wrap parentheses better readability shows clearly function starts ends bad get post putmaphttpmethod objectprototypehasownpropertycall httpmagicobjectwithaverylongname httpmethod good get post putmaphttpmethod objectprototypehasownpropertycall httpmagicobjectwithaverylongname httpmethod always include parentheses around arguments clarity consistency eslint arrowparens minimizes diff churn adding removing arguments bad mapx x x good mapx x x bad mapnumber long string number long dont want take space map line good mapnumber long string number long dont want take space map line bad mapx const x return x good mapx const x return x avoid confusing arrow function syntax comparison operators eslint noconfusingarrow bad const itemheight item itemheight itemlargesize itemsmallsize bad const itemheight item itemheight itemlargesize itemsmallsize good const itemheight item itemheight itemlargesize itemsmallsize good const itemheight item const height largesize smallsize item return height largesize smallsize enforce location arrow function bodies implicit returns eslint implicitarrowlinebreak bad foo bar foo bar good foo bar foo bar foo bar back top classes constructors always use class avoid manipulating prototype directly class syntax concise easier reason bad function queuecontents thisqueue contents queueprototypepop function const value thisqueue thisqueuesplice return value good class queue constructorcontents thisqueue contents pop const value thisqueue thisqueuesplice return value use extends inheritance builtin way inherit prototype functionality without breaking instanceof bad const inherits requireinherits function peekablequeuecontents queueapplythis contents inheritspeekablequeue queue peekablequeueprototypepeek function return thisqueue good class peekablequeue extends queue peek return thisqueue methods return help method chaining bad jediprototypejump function thisjumping true return true jediprototypesetheight function height thisheight height const luke new jedi lukejump true lukesetheight undefined good class jedi jump thisjumping true return setheightheight thisheight height return const luke new jedi lukejump setheight okay write custom tostring method make sure works successfully causes side effects class jedi constructoroptions thisname optionsname name getname return thisname tostring return jedi thisgetname classes default constructor one specified empty constructor function one delegates parent class unnecessary eslint nouselessconstructor bad class jedi constructor getname return thisname bad class rey extends jedi constructorargs superargs good class rey extends jedi constructorargs superargs thisname rey avoid duplicate class members eslint nodupeclassmembers duplicate class member declarations silently prefer last one duplicates almost certainly bug bad class foo bar return bar return good class foo bar return good class foo bar return class methods use made static method unless external library framework requires use specific nonstatic methods instance method indicate behaves differently based properties receiver eslint classmethodsusethis bad class foo bar consolelogbar good used class foo bar consolelogthisbar good constructor exempt class foo constructor good static methods arent expected use class foo static bar consolelogbar back top modules always use modules importexport nonstandard module system always transpile preferred module system modules future lets start using future bad const airbnbstyleguide requireairbnbstyleguide moduleexports airbnbstyleguidees ok import airbnbstyleguide airbnbstyleguide export default airbnbstyleguidees best import es airbnbstyleguide export default es use wildcard imports makes sure single default export bad import airbnbstyleguide airbnbstyleguide good import airbnbstyleguide airbnbstyleguide export directly import although oneliner concise one clear way import one clear way export makes things consistent bad filename esjs export es default airbnbstyleguide good filename esjs import es airbnbstyleguide export default es import path one place eslint noduplicateimports multiple lines import path make code harder maintain bad import foo foo imports import named named foo good import foo named named foo good import foo named named foo export mutable bindings eslint importnomutableexports mutation avoided general particular exporting mutable bindings technique may needed special cases general constant references exported bad let foo export foo good const foo export foo modules single export prefer default export named export eslint importpreferdefaultexport encourage files ever export one thing better readability maintainability bad export function foo good export default function foo put imports nonimport statements eslint importfirst since imports hoisted keeping top prevents surprising behavior bad import foo foo fooinit import bar bar good import foo foo import bar bar fooinit multiline imports indented like multiline array object literals curly braces follow indentation rules every curly brace block style guide trailing commas bad import longnamea longnameb longnamec longnamed longnamee path good import longnamea longnameb longnamec longnamed longnamee path disallow webpack loader syntax module import statements eslint importnowebpackloadersyntax since using webpack syntax imports couples code module bundler prefer using loader syntax webpackconfigjs bad import foosass csssassfooscss import barcss stylecssbarcss good import foosass fooscss import barcss barcss back top iterators generators dont use iterators prefer javascripts higherorder functions instead loops like forin forof eslint noiterator norestrictedsyntax enforces immutable rule dealing pure functions return values easier reason side effects use map every filter find findindex reduce iterate arrays objectkeys objectvalues objectentries produce arrays iterate objects const numbers bad let sum let num numbers sum num sum good let sum numbersforeachnum sum num sum best use functional force const sum numbersreducetotal num total num sum bad const increasedbyone let numberslength increasedbyonepushnumbersi good const increasedbyone numbersforeachnum increasedbyonepushnum best keeping functional const increasedbyone numbersmapnum num dont use generators dont transpile well es must use generators disregard advice make sure function signature spaced properly eslint generatorstarspacing function part conceptual keyword modifier function function unique construct different function bad function foo bad const bar function bad const baz function bad const quux function bad functionfoo bad function foo bad function foo bad const wat function good function foo good const foo function back top properties use dot notation accessing properties eslint dotnotation const luke jedi true age bad const isjedi lukejedi good const isjedi lukejedi use bracket notation accessing properties variable const luke jedi true age function getpropprop return lukeprop const isjedi getpropjedi use exponentiation operator calculating exponentiations eslint norestrictedproperties bad const binary mathpow good const binary back top variables always use const let declare variables result global variables want avoid polluting global namespace captain planet warned us eslint noundef preferconst bad superpower new superpower good const superpower new superpower use one const let declaration per variable assignment eslint onevar easier add new variable declarations way never worry swapping introducing punctuationonly diffs also step declaration debugger instead jumping bad const items getitems gosportsteam true dragonball z bad compare try spot mistake const items getitems gosportsteam true dragonball z good const items getitems const gosportsteam true const dragonball z group consts group lets helpful later might need assign variable depending one previous assigned variables bad let len dragonball items getitems gosportsteam true bad let const items getitems let dragonball const gosportsteam true let len good const gosportsteam true const items getitems let dragonball let let length assign variables need place reasonable place let const block scoped function scoped bad unnecessary function call function checknamehasname const name getname hasname test return false name test thissetname return false return name good function checknamehasname hasname test return false const name getname name test thissetname return false return name dont chain variable assignments eslint nomultiassign chaining variable assignments creates implicit global variables bad function example javascript interprets let b c let keyword applies variable variables b c become global variables let b c consoleloga throws referenceerror consolelogb consolelogc good function example let let b let c consoleloga throws referenceerror consolelogb throws referenceerror consolelogc throws referenceerror applies const avoid using unary increments decrements eslint noplusplus per eslint documentation unary increment decrement statements subject automatic semicolon insertion cause silent errors incrementing decrementing values within application also expressive mutate values statements like num instead num num disallowing unary increment decrement statements also prevents preincrementingpredecrementing values unintentionally also cause unexpected behavior programs bad const array let num num num let sum let truthycount let arraylength let value arrayi sum value value truthycount good const array let num num num const sum arrayreducea b b const truthycount arrayfilterbooleanlength avoid linebreaks assignment assignment violates maxlen surround value parens eslint operatorlinebreak linebreaks surrounding obfuscate value assignment bad const foo superlonglonglonglonglonglonglonglongfunctionname bad const foo superlonglonglonglonglonglonglonglongstring good const foo superlonglonglonglonglonglonglonglongfunctionname good const foo superlonglonglonglonglonglonglonglongstring disallow unused variables eslint nounusedvars variables declared used anywhere code likely error due incomplete refactoring variables take space code lead confusion readers bad var someunusedvar writeonly variables considered used var read modification considered used var z z z unused function arguments function getxx return x good function getxplusyx return x var x var alertgetxplusyx type ignored even unused rest property sibling form extracting object omits specified keys var type coords data coords data object without type property back top hoisting var declarations get hoisted top closest enclosing function scope assignment const let declarations blessed new concept called temporal dead zones tdz important know typeof longer safe know wouldnt work assuming notdefined global variable function example consolelognotdefined throws referenceerror creating variable declaration reference variable work due variable hoisting note assignment value true hoisted function example consolelogdeclaredbutnotassigned undefined var declaredbutnotassigned true interpreter hoisting variable declaration top scope means example could rewritten function example let declaredbutnotassigned consolelogdeclaredbutnotassigned undefined declaredbutnotassigned true using const let function example consolelogdeclaredbutnotassigned throws referenceerror consolelogtypeof declaredbutnotassigned throws referenceerror const declaredbutnotassigned true anonymous function expressions hoist variable name function assignment function example consoleloganonymous undefined anonymous typeerror anonymous function var anonymous function consoleloganonymous function expression named function expressions hoist variable name function name function body function example consolelognamed undefined named typeerror named function superpower referenceerror superpower defined var named function superpower consolelogflying true function name variable name function example consolelognamed undefined named typeerror named function var named function named consolelognamed function declarations hoist name function body function example superpower flying function superpower consolelogflying information refer javascript scoping hoisting ben cherry back top comparison operators equality use eslint eqeqeq conditional statements statement evaluate expression using coercion toboolean abstract method always follow simple rules objects evaluate true undefined evaluates false null evaluates false booleans evaluate value boolean numbers evaluate false nan otherwise true strings evaluate false empty string otherwise true true array even empty one object objects evaluate true use shortcuts booleans explicit comparisons strings numbers bad isvalid true good isvalid bad name good name bad collectionlength good collectionlength information see truth equality javascript angus croll use braces create blocks case default clauses contain lexical declarations eg let const function class eslint nocasedeclarations lexical declarations visible entire switch block get initialized assigned happens case reached causes problems multiple case clauses attempt define thing bad switch foo case let x break case const break case function f break default class c good switch foo case let x break case const break case function f break case bar break default class c ternaries nested generally single line expressions eslint nonestedternary bad const foo maybe maybe bar value value baz null split separated ternary expressions const maybenull value value baz null better const foo maybe maybe bar maybenull best const foo maybe maybe bar maybenull avoid unneeded ternary statements eslint nounneededternary bad const foo b const bar c true false const baz c false true good const foo b const bar c const baz c mixing operators enclose parentheses exception standard arithmetic operators since precedence broadly understood recommend enclosing parentheses precedence ambiguous mixed eslint nomixedoperators improves readability clarifies developers intention bad const foo b c bad const bar b bad one may confused thinking b c b c return bad const bar b c good const foo b c good const bar b good b c return good const bar b c back top blocks use braces multiline blocks eslint nonblockstatementbodyposition bad test return false good test return false good test return false bad function foo return false good function bar return false youre using multiline blocks else put else line blocks closing brace eslint bracestyle bad test thing thing else thing good test thing thing else thing block always executes return statement subsequent else block unnecessary return else block following block contains return separated multiple blocks eslint noelsereturn bad function foo x return x else return bad function cats x return x else return bad function dogs x return x else return good function foo x return x return good function cats x return x return good function dogsx x z return else return z back top control statements case control statement etc gets long exceeds maximum line length grouped condition could put new line logical operator begin line requiring operators beginning line keeps operators aligned follows pattern similar method chaining also improves readability making easier visually follow complex logic bad foo bar abc doesitlookgoodwhenitbecomesthatlong isthisreallyhappening thing bad foo bar abc thing bad foo bar abc thing bad foo bar abc thing good foo bar abc thing good foo bar abc doesitlookgoodwhenitbecomesthatlong isthisreallyhappening thing good foo bar abc thing dont use selection operators place control statements bad isrunning startrunning good isrunning startrunning back top comments use multiline comments bad make returns new element based passed tag name param string tag return element element function maketag return element good make returns new element based passedin tag name function maketag return element use single line comments place single line comments newline subject comment put empty line comment unless first line block bad const active true current tab good current tab const active true bad function gettype consolelogfetching type set default type type const type thistype type return type good function gettype consolelogfetching type set default type type const type thistype type return type also good function gettype set default type type const type thistype type return type start comments space make easier read eslint spacedcomment bad current tab const active true good current tab const active true bad make returns new element based passedin tag name function maketag return element good make returns new element based passedin tag name function maketag return element prefixing comments fixme todo helps developers quickly understand youre pointing problem needs revisited youre suggesting solution problem needs implemented different regular comments actionable actions fixme need figure todo need implement use fixme annotate problems class calculator extends abacus constructor super fixme shouldnt use global total use todo annotate solutions problems class calculator extends abacus constructor super todo total configurable options param thistotal back top whitespace use soft tabs space character set spaces eslint indent bad function foo let name bad function bar let name good function baz let name place space leading brace eslint spacebeforeblocks bad function test consolelogtest good function test consolelogtest bad dogsetattr age year breed bernese mountain dog good dogsetattr age year breed bernese mountain dog place space opening parenthesis control statements etc place space argument list function name function calls declarations eslint keywordspacing bad ifisjedi fight good isjedi fight bad function fight consolelog swooosh good function fight consolelogswooosh set operators spaces eslint spaceinfixops bad const xy good const x end files single newline character eslint eollast bad import es airbnbstyleguide export default es bad import es airbnbstyleguide export default es good import es airbnbstyleguide export default es use indentation making long method chains method chains use leading dot emphasizes line method call new statement eslint newlineperchainedcall nowhitespacebeforeproperty bad itemsfindselectedhighlightendfindopenupdatecount bad items findselected highlight end findopen updatecount good items findselected highlight end findopen updatecount bad const leds stageselectallleddatadataenterappendsvgsvgclassedled true attrwidth radius margin appendsvgg attrtransform translateradius marginradius margin calltronled good const leds stageselectallled datadata enterappendsvgsvg classedled true attrwidth radius margin appendsvgg attrtransform translateradius marginradius margin calltronled good const leds stageselectallleddatadata leave blank line blocks next statement bad foo return bar return baz good foo return bar return baz bad const obj foo bar return obj good const obj foo bar return obj bad const arr function foo function bar return arr good const arr function foo function bar return arr pad blocks blank lines eslint paddedblocks bad function bar consolelogfoo bad baz consolelogqux else consolelogfoo bad class foo constructorbar thisbar bar good function bar consolelogfoo good baz consolelogqux else consolelogfoo use multiple blank lines pad code eslint nomultipleemptylines bad class person constructorfullname email birthday thisfullname fullname thisemail email thissetagebirthday setagebirthday const today new date const age thisgetagetoday birthday thisage age getagetoday birthday good class person constructorfullname email birthday thisfullname fullname thisemail email thissetagebirthday setagebirthday const today new date const age getagetoday birthday thisage age getagetoday birthday add spaces inside parentheses eslint spaceinparens bad function bar foo return foo good function barfoo return foo bad foo consolelogfoo good foo consolelogfoo add spaces inside brackets eslint arraybracketspacing bad const foo consolelogfoo good const foo consolelogfoo add spaces inside curly braces eslint objectcurlyspacing bad const foo clark kent good const foo clark kent avoid lines code longer characters including whitespace note per long strings exempt rule broken eslint maxlen ensures readability maintainability bad const foo jsondata jsondatafoo jsondatafoobar jsondatafoobarbaz jsondatafoobarbazquux jsondatafoobarbazquuxxyzzy bad ajax method post url httpsairbnbcom data name john done consolelogcongratulationsfail consolelogyou failed city good const foo jsondata jsondatafoo jsondatafoobar jsondatafoobarbaz jsondatafoobarbazquux jsondatafoobarbazquuxxyzzy good ajax method post url httpsairbnbcom data name john done consolelogcongratulations fail consolelogyou failed city require consistent spacing inside open block token next token line rule also enforces consistent spacing inside close block token previous token line eslint blockspacing bad function foo return true foo bar good function foo return true foo bar avoid spaces commas require space commas eslint commaspacing bad var foo bar var arr good var foo bar var arr enforce spacing inside computed property brackets eslint computedpropertyspacing bad objfoo obj foo var x b objfoo bar good objfoo objfoo var x b objfoobar avoid spaces functions invocations eslint funccallspacing bad func func good func enforce spacing keys values object literal properties eslint keyspacing bad var obj foo var obj foo good var obj foo avoid trailing spaces end lines eslint notrailingspaces avoid multiple empty lines allow one newline end files avoid newline beginning files eslint nomultipleemptylines bad multiple empty lines var x var bad newlines end file var x var bad newlines beginning file var x var good var x var back top commas leading commas nope eslint commastyle bad const story upon atime good const story upon atime bad const hero firstname ada lastname lovelace birthyear superpower computers good const hero firstname ada lastname lovelace birthyear superpower computers additional trailing comma yup eslint commadangle leads cleaner git diffs also transpilers like babel remove additional trailing comma transpiled code means dont worry trailing comma problem legacy browsers bad git diff without trailing comma const hero firstname florence lastname nightingale lastname nightingale inventorof coxcomb chart modern nursing good git diff trailing comma const hero firstname florence lastname nightingale inventorof coxcomb chart modern nursing bad const hero firstname dana lastname scully const heroes batman superman good const hero firstname dana lastname scully const heroes batman superman bad function createhero firstname lastname inventorof nothing good function createhero firstname lastname inventorof nothing good note comma must appear rest element function createhero firstname lastname inventorof heroargs nothing bad createhero firstname lastname inventorof good createhero firstname lastname inventorof good note comma must appear rest element createhero firstname lastname inventorof heroargs back top semicolons yup eslint semi javascript encounters line break without semicolon uses set rules called automatic semicolon insertion determine whether regard line break end statement name implies place semicolon code line break thinks asi contains eccentric behaviors though code break javascript misinterprets line break rules become complicated new features become part javascript explicitly terminating statements configuring linter catch missing semicolons help prevent encountering issues bad raises exception const luke const leia luke leiaforeachjedi jedifather vader bad raises exception const reaction thats impossible async function meanwhileonthefalcon handle leia lando chewie r cp bad returns undefined instead value next line always happens return line asi function foo return search feelings know foo good const luke const leia luke leiaforeachjedi jedifather vader good const reaction thats impossible async function meanwhileonthefalcon handle leia lando chewie r cp good function foo return search feelings know foo read back top type casting coercion perform type coercion beginning statement strings eslint nonewwrappers thisreviewscore bad const totalscore new stringthisreviewscore typeof totalscore object string bad const totalscore thisreviewscore invokes thisreviewscorevalueof bad const totalscore thisreviewscoretostring isnt guaranteed return string good const totalscore stringthisreviewscore numbers use number type casting parseint always radix parsing strings eslint radix nonewwrappers const inputvalue bad const val new numberinputvalue bad const val inputvalue bad const val inputvalue bad const val parseintinputvalue good const val numberinputvalue good const val parseintinputvalue whatever reason something wild parseint bottleneck need use bitshift performance reasons leave comment explaining youre good parseint reason code slow bitshifting string coerce number made lot faster const val inputvalue note careful using bitshift operations numbers represented bit values bitshift operations always return bit integer source bitshift lead unexpected behavior integer values larger bits discussion largest signed bit int booleans eslint nonewwrappers const age bad const hasage new booleanage good const hasage booleanage best const hasage age back top naming conventions avoid single letter names descriptive naming eslint idlength bad function q good function query use camelcase naming objects functions instances eslint camelcase bad const objecttsssss const thisismyobject function c good const thisismyobject function thisismyfunction use pascalcase naming constructors classes eslint newcap bad function useroptions thisname optionsname const bad new user name nope good class user constructoroptions thisname optionsname const good new user name yup use trailing leading underscores eslint nounderscoredangle javascript concept privacy terms properties methods although leading underscore common convention mean private fact properties fully public part public api contract convention might lead developers wrongly think change wont count breaking tests arent needed tldr want something private must observably present bad thisfirstname panda thisfirstname panda thisfirstname panda good thisfirstname panda good environments weakmaps available see httpskangaxgithubiocompattableestestweakmap const firstnames new weakmap firstnamessetthis panda dont save references use arrow functions functionbind bad function foo const self return function consolelogself bad function foo const return function consolelogthat good function foo return consolelogthis base filename exactly match name default export file contents class checkbox export default checkbox file contents export default function fortytwo return file contents export default function insidedirectory file bad import checkbox checkbox pascalcase importexport camelcase filename import fortytwo fortytwo pascalcase importfilename camelcase export import insidedirectory insidedirectory pascalcase importfilename camelcase export bad import checkbox checkbox pascalcase importexport snakecase filename import fortytwo fortytwo snakecase importfilename camelcase export import insidedirectory insidedirectory snakecase import camelcase export import index insidedirectoryindex requiring index file explicitly import insidedirectory insidedirectoryindex requiring index file explicitly good import checkbox checkbox pascalcase exportimportfilename import fortytwo fortytwo camelcase exportimportfilename import insidedirectory insidedirectory camelcase exportimportdirectory nameimplicit index supports insidedirectoryjs insidedirectoryindexjs use camelcase exportdefault function filename identical functions name function makestyleguide export default makestyleguide use pascalcase export constructor class singleton function library bare object const airbnbstyleguide es export default airbnbstyleguide acronyms initialisms always uppercased lowercased names readability appease computer algorithm bad import smscontainer containerssmscontainer bad const httprequests good import smscontainer containerssmscontainer good const httprequests also good const httprequests best import textmessagecontainer containerstextmessagecontainer best const requests may optionally uppercase constant exported const reassigned programmer trust nested properties never change additional tool assist situations programmer would unsure variable might ever change uppercasevariables letting programmer know trust variable properties change const variables unnecessary uppercasing used constants within file used exported constants however exported objects uppercase top level export eg exportedobjectkey maintain nested properties change bad const privatevariable unnecessarily uppercased within file bad export const thingtobechanged obviously uppercased bad export let reassignablevariable use let uppercase variables allowed supply semantic value export const apikey somekey better cases export const apikey somekey bad unnecessarily uppercases key adding semantic value export const mapping key value good export const mapping key value back top accessors accessor functions properties required use javascript getterssetters cause unexpected side effects harder test maintain reason instead make accessor functions use getval setvalhello bad class dragon get age set agevalue good class dragon getage setagevalue propertymethod boolean use isval hasval bad dragonage return false good dragonhasage return false okay create get set functions consistent class jedi constructoroptions const lightsaber optionslightsaber blue thissetlightsaber lightsaber setkey val thiskey val getkey return thiskey back top events attaching data payloads events whether dom events something proprietary like backbone events pass object literal also known hash instead raw value allows subsequent contributor add data event payload without finding updating every handler event example instead bad thistriggerlistingupdated listingid thisonlistingupdated e listingid something listingid prefer good thistriggerlistingupdated listingid listingid thisonlistingupdated e data something datalistingid back top jquery prefix jquery object variables bad const sidebar sidebar good const sidebar sidebar good const sidebarbtn sidebarbtn cache jquery lookups bad function setsidebar sidebarhide sidebarcss backgroundcolor pink good function setsidebar const sidebar sidebar sidebarhide sidebarcss backgroundcolor pink dom queries use cascading sidebar ul parent child sidebar ul jsperf use find scoped jquery object queries bad ul sidebarhide bad sidebarfindulhide good sidebar ulhide good sidebar ulhide good sidebarfindulhide back top ecmascript compatibility refer kangaxs es compatibility table back top ecmascript es styles collection links various es features arrow functions classes object shorthand object concise object computed properties template strings destructuring default parameters rest array spreads let const exponentiation operator iterators generators modules use tc proposals reached stage finalized subject change withdrawn entirely want use javascript proposals javascript yet back top standard library standard library contains utilities functionally broken remain legacy reasons use numberisnan instead global isnan eslint norestrictedglobals global isnan coerces nonnumbers numbers returning true anything coerces nan behavior desired make explicit bad isnan false isnan true good numberisnan false numberisnannumber true use numberisfinite instead global isfinite eslint norestrictedglobals global isfinite coerces nonnumbers numbers returning true anything coerces finite number behavior desired make explicit bad isfinitee true good numberisfinitee false numberisfiniteparseinte true back top testing yup function foo return true seriously whichever testing framework use writing tests strive write many small pure functions minimize mutations occur cautious stubs mocks make tests brittle primarily use mocha jest airbnb tape also used occasionally small separate modules test coverage good goal strive even always practical reach whenever fix bug write regression test bug fixed without regression test almost certainly going break future back top performance layout web performance string vs array concat trycatch cost loop bang function jquery find vs context selector innerhtml vs textcontent script text long string concatenation javascript functions like map reduce filter optimized traversing arrays loading back top resources learning es latest ecma spec exploringjs es compatibility table comprehensive overview es features read standard ecma tools code style linters eslint airbnb style eslintrc jshint airbnb style jshintrc neutrino preset neutrinojsairbnb style guides google javascript style guide google javascript style guide old jquery core style guidelines principles writing consistent idiomatic javascript standardjs styles naming nested functions christian johansen conditional callbacks ross allen popular javascript coding conventions github jeonghoon byun multiple var statements javascript superfluous ben alman reading understanding javascript closures angus croll basic javascript impatient programmer dr axel rauschmayer might need jquery zack bloom adam schwartz es features luke hoban frontend guidelines benjamin de cock books javascript good parts douglas crockford javascript patterns stoyan stefanov pro javascript design patterns ross harmes dustin diaz high performance web sites essential knowledge frontend engineers steve souders maintainable javascript nicholas c zakas javascript web applications alex maccaw pro javascript techniques john resig smashing nodejs javascript everywhere guillermo rauch secrets javascript ninja john resig bear bibeault human javascript henrik joreteg superherojs kim joar bekkelund mads mobk olav bjorkoy jsbooks julien bouquillon third party javascript ben vinegar anton kovalyov effective javascript specific ways harness power javascript david herman eloquent javascript marijn haverbeke dont know js es beyond kyle simpson blogs javascript weekly javascript javascript bocoup weblog adequately good nczonline perfection kills ben alman dmitry baranovskiy nettuts podcasts javascript air javascript jabber back top wild list organizations using style guide send us pull request well add list erfasst erfasstjavascript blades blades catalyzer catalyzerjavascript aan zee aanzeejavascript adult swim adultswimjavascript airbnb airbnbjavascript altschool altschooljavascript apartmint apartmintjavascript ascribe ascribejavascript avalara avalarajavascript avant avantcreditjavascript axept axeptjavascript bashpros bashprosjavascript billabong billabongjavascript bisk bisk bonhomme bonhommeparisjavascript brainshark brainsharkjavascript casenine caseninejavascript cerner cerner chartboost chartboostjavascriptstyleguide coeur dalene tribe wwwcdatribensngov comparaonline comparaonlinejavascript compass learning compasslearningjavascriptstyleguide dailymotion dailymotionjavascript dosomething dosomethingeslintconfig digitpaint digitpaintjavascript drupal wwwdrupalorg ecosia ecosiajavascript evernote evernotejavascriptstyleguide evolution gaming evolutiongamingjavascript evozonjs evozonjsjavascript exacttarget exacttargetjavascript expensify expensifystyleguide flexberry flexberryjavascriptstyleguide gawker media gawkermedia general electric generalelectricjavascript generation tux generationtuxjavascript gooddata gooddatagdcjsstyle greenchef greenchefjavascript grooveshark groovesharkjavascript grupoabraxas grupoabraxasjavascript happeo happeojavascript honey honeysciencejavascript howaboutwejavascript huballin huballin hubspot hubspotjavascript hyper hyperoslojavascriptplaybook intercity group intercitygroupjavascriptstyleguide jam jamjavascriptcodeconventions jeopardybot kesnejeopardybot jssolutions jssolutionsjavascript kaplan komputing kaplankomputingjavascript kickorstick kickorstick kinetica solutions kineticajavascript leinwand leinwandjavascript lonely planet lonelyplanetjavascript mgen mgenjavascript mighty spring mightyspringjavascript minnpost minnpostjavascript mitocgroup mitocgroupjavascript modcloth modclothjavascript money advice service moneyadviceservicejavascript muber muber national geographic natgeo nimbl nimbljavascript nulldev nulldevcojavascriptstyleguide nulogy nulogyjavascript orange hill development orangehilljavascript orion health orionhealthjavascript outboxsoft outboxsoftjavascript peerby peerbyjavascript pier pierjavascript qotto qottojavascriptstyleguide razorfish razorfishjavascriptstyleguide reddit redditstyleguidejavascript react facebookgithubioreactcontributinghowtocontributehtmlstyleguide rei reidevjsstyleguide ripple ripplejavascriptstyleguide sainsburys supermarkets jsainsburyplc seekingalpha seekingalphajavascriptstyleguide shutterfly shutterflyjavascript sourcetoad sourcetoadjavascript springload springload stratodem analytics stratodemjavascript steelkiwi development steelkiwijavascript studentsphere studentspherejavascript swoopapp swoopappjavascript sysgarage sysgaragejavascriptstyleguide syzygy warsaw syzygypljavascript target targetjavascript terra terra theladders theladdersjavascript nerdery thenerderyjavascriptstandards tomify tomprats traitify traitifyeslintconfigtraitify tr technology trtechnologyjavascript urbansim urbansim voxfeed voxfeedjavascriptstyleguide webox studio weboxstudiojavascript weggo weggojavascript zillow zillowjavascript zocdoc zocdocjavascript back top translation style guide also available languages brazilian portuguese armoucarjavascriptstyleguide bulgarian borislavvvjavascript catalan fpmwebjavascriptstyleguide chinese simplified linjavascript chinese traditional jigsawyejavascript french nmussyjavascriptstyleguide german timofurrerjavascriptstyleguide italian sinkswimjavascriptstyleguide japanese mitsuruogjavascriptstyleguide korean parksbjavascriptstyleguide russian leonidlebedevjavascriptairbnb spanish paolocarrascojavascriptstyleguide thai lvarayutjavascriptstyleguide turkish eraycetinayjavascript ukrainian ivanzuskojavascript vietnam dangkyokhoangjavascriptstyleguide javascript style guide guide reference chat us javascript find us gitter contributors view contributors license mit license copyright c airbnb permission hereby granted free charge person obtaining copy software associated documentation files software deal software without restriction including without limitation rights use copy modify merge publish distribute sublicense andor sell copies software permit persons software furnished subject following conditions copyright notice permission notice shall included copies substantial portions software software provided without warranty kind express implied including limited warranties merchantability fitness particular purpose noninfringement event shall authors copyright holders liable claim damages liability whether action contract tort otherwise arising connection software use dealings software back top amendments encourage fork guide change rules fit teams style guide may list amendments style guide allows periodically update style guide without deal merge conflicts,airbnb javascript style guid mostli reason approach javascript note guid assum use babel requir use babelpresetairbnb equival also assum instal shimspolyfil app airbnbbrowsershim equival guid avail languag see translat style guid es deprec react cssinjavascript css sass rubi tabl content type refer object array destructur string function arrow function class constructor modul iter gener properti variabl hoist comparison oper equal block control statement comment whitespac comma semicolon type cast coercion name convent accessor event jqueri ecmascript compat ecmascript es style standard librari test perform resourc wild translat javascript style guid guid chat us javascript contributor licens amend type primit access primit type work directli valu string number boolean null undefin symbol const foo let bar foo bar consolelogfoo bar symbol cannot faith polyfil use target browsersenviron dont support nativ complex access complex type work refer valu object array function const foo const bar foo bar consolelogfoo bar back top refer use const refer avoid use var eslint preferconst noconstassign ensur cant reassign refer lead bug difficult comprehend code bad var var b good const const b must reassign refer use let instead var eslint novar let blockscop rather functionscop like var bad var count true count good use let let count true count note let const blockscop const let exist block defin let const b consoleloga referenceerror consolelogb referenceerror back top object use liter syntax object creation eslint nonewobject bad const item new object good const item use comput properti name creat object dynam properti name allow defin properti object one place function getkeyk return key name k bad const obj id name san francisco objgetkeyen true good const obj id name san francisco getkeyen true use object method shorthand eslint objectshorthand bad const atom valu addvalu function valu return atomvalu valu good const atom valu addvaluevalu return atomvalu valu use properti valu shorthand eslint objectshorthand shorter descript const lukeskywalk luke skywalk bad const obj lukeskywalk lukeskywalk good const obj lukeskywalk group shorthand properti begin object declar easier tell properti use shorthand const anakinskywalk anakin skywalk const lukeskywalk luke skywalk bad const obj episodeon twojediwalkintoacantina lukeskywalk episodethre maythefourth anakinskywalk good const obj lukeskywalk anakinskywalk episodeon twojediwalkintoacantina episodethre maythefourth quot properti invalid identifi eslint quoteprop gener consid subject easier read improv syntax highlight also easili optim mani js engin bad const bad foo bar datablah good const good foo bar datablah call objectprototyp method directli hasownproperti propertyisenumer isprototypeof eslint noprototypebuiltin method may shadow properti object question consid hasownproperti fals object may null object objectcreatenul bad consolelogobjecthasownpropertykey good consolelogobjectprototypehasownpropertycallobject key best const objectprototypehasownproperti cach lookup modul scope consoleloghascallobject key import httpswwwnpmjscompackageha consoleloghasobject key prefer object spread oper objectassign shallowcopi object use object rest oper get new object certain properti omit bad const origin b const copi objectassignorigin c mutat origin delet copya bad const origin b const copi objectassign origin c copi b c good const origin b const copi origin c copi b c const noa copi noa b c back top array use liter syntax array creation eslint noarrayconstructor bad const item new array good const item use arraypush instead direct assign add item array const somestack bad somestacksomestacklength abracadabra good somestackpushabracadabra use array spread copi array bad const len itemslength const itemscopi let len itemscopyi itemsi good const itemscopi item convert iter object array use spread instead arrayfrom const foo documentqueryselectorallfoo good const node arrayfromfoo best const node foo use arrayfrom convert arraylik object array const arrlik foo bar baz length bad const arr arrayprototypeslicecallarrlik good const arr arrayfromarrlik use arrayfrom instead spread map iter avoid creat intermedi array bad const baz foomapbar good const baz arrayfromfoo bar use return statement array method callback ok omit return function bodi consist singl statement return express without side effect follow eslint arraycallbackreturn good mapx const x return x good mapx x bad return valu mean acc becom undefin first iter reduceacc item index const flatten accconcatitem good reduceacc item index const flatten accconcatitem return flatten bad inboxfiltermsg const subject author msg subject mockingbird return author harper lee els return fals good inboxfiltermsg const subject author msg subject mockingbird return author harper lee return fals use line break open close array bracket array multipl line bad const arr const objectinarray id id const numberinarray good const arr const objectinarray id id const numberinarray back top destructur use object destructur access use multipl properti object eslint preferdestructur destructur save creat temporari refer properti bad function getfullnameus const firstnam userfirstnam const lastnam userlastnam return firstnam lastnam good function getfullnameus const firstnam lastnam user return firstnam lastnam best function getfullnam firstnam lastnam return firstnam lastnam use array destructur eslint preferdestructur const arr bad const first arr const second arr good const first second arr use object destructur multipl return valu array destructur add new properti time chang order thing without break call site bad function processinputinput miracl occur return left right top bottom caller need think order return data const left top processinputinput good function processinputinput miracl occur return left right top bottom caller select data need const left top processinputinput back top string use singl quot string eslint quot bad const name capt janeway bad templat liter contain interpol newlin const name capt janeway good const name capt janeway string caus line go charact written across multipl line use string concaten broken string pain work make code less searchabl bad const errormessag super long error thrown batman stop think batman anyth would get nowher fast bad const errormessag super long error thrown batman stop think batman anyth would get nowher fast good const errormessag super long error thrown batman stop think batman anyth would get nowher fast programmat build string use templat string instead concaten eslint prefertempl templatecurlyspac templat string give readabl concis syntax proper newlin string interpol featur bad function sayhinam return name bad function sayhinam return name join bad function sayhinam return name good function sayhinam return name never use eval string open mani vulner eslint noeval unnecessarili escap charact string eslint nouselessescap backslash harm readabl thu present necessari bad const foo quot good const foo quot const foo name name back top function use name function express instead function declar eslint funcstyl function declar hoist mean easi easi refer function defin file harm readabl maintain find function definit larg complex enough interf understand rest file perhap time extract modul dont forget explicitli name express regardless whether name infer contain variabl often case modern browser use compil babel elimin assumpt made error call stack discuss bad function foo bad const foo function good lexic name distinguish variablereferenc invoc const short function longuniquemoredescriptivelexicalfoo wrap immedi invok function express parenthes eslint wrapiif immedi invok function express singl unit wrap invoc paren paren cleanli express note world modul everywher almost never need iif immediatelyinvok function express iif function consolelogwelcom internet pleas follow never declar function nonfunct block etc assign function variabl instead browser allow interpret differ bad news bear eslint noloopfunc note ecma defin block list statement function declar statement bad currentus function test consolelognop good let test currentus test consolelogyup never name paramet argument take preced argument object given everi function scope bad function foonam option argument good function foonam option arg never use argument opt use rest syntax instead eslint preferrestparam explicit argument want pull plu rest argument real array mere arraylik like argument bad function concatenateal const arg arrayprototypeslicecallargu return argsjoin good function concatenateallarg return argsjoin use default paramet syntax rather mutat function argument realli bad function handlethingsopt shouldnt mutat function argument doubl bad opt falsi itll set object may want introduc subtl bug opt opt still bad function handlethingsopt opt void opt good function handlethingsopt avoid side effect default paramet confus reason var b bad function counta b consoleloga count count count count alway put default paramet last bad function handlethingsopt name good function handlethingsnam opt never use function constructor creat new function eslint nonewfunc creat function way evalu string similarli eval open vulner bad var add new functiona b return b still bad var subtract functiona b return b space function signatur eslint spacebeforefunctionparen spacebeforeblock consist good shouldnt add remov space ad remov name bad const f function const g function const h function good const x function const function never mutat paramet eslint noparamreassign manipul object pass paramet caus unwant variabl side effect origin caller bad function fobj objkey good function fobj const key objectprototypehasownpropertycallobj key objkey never reassign paramet eslint noparamreassign reassign paramet lead unexpect behavior especi access argument object also caus optim issu especi v bad function fa function fa good function fa const b function fa prefer use spread oper call variad function eslint preferspread cleaner dont need suppli context easili compos new appli bad const x consolelogapplyconsol x good const x consolelogx bad new functionprototypebindapplyd null good new date function multilin signatur invoc indent like everi multilin list guid item line trail comma last item eslint functionparennewlin bad function foobar baz quux good function foo bar baz quux bad consolelogfoo bar baz good consolelog foo bar baz back top arrow function must use anonym function pass inlin callback use arrow function notat eslint preferarrowcallback arrowspac creat version function execut context usual want concis syntax fairli complic function might move logic name function express bad mapfunct x const x return x good mapx const x return x function bodi consist singl statement return express without side effect omit brace use implicit return otherwis keep brace use return statement eslint arrowparen arrowbodystyl syntact sugar read well multipl function chain togeth bad mapnumb const nextnumb number string contain nextnumb good mapnumb string contain number good mapnumb const nextnumb number return string contain nextnumb good mapnumb index index number implicit return side effect function foocallback const val callback val true someth callback return true let bool fals bad foo bool true good foo bool true case express span multipl line wrap parenthes better readabl show clearli function start end bad get post putmaphttpmethod objectprototypehasownpropertycal httpmagicobjectwithaverylongnam httpmethod good get post putmaphttpmethod objectprototypehasownpropertycal httpmagicobjectwithaverylongnam httpmethod alway includ parenthes around argument clariti consist eslint arrowparen minim diff churn ad remov argument bad mapx x x good mapx x x bad mapnumb long string number long dont want take space map line good mapnumb long string number long dont want take space map line bad mapx const x return x good mapx const x return x avoid confus arrow function syntax comparison oper eslint noconfusingarrow bad const itemheight item itemheight itemlarges itemsmalls bad const itemheight item itemheight itemlarges itemsmalls good const itemheight item itemheight itemlarges itemsmalls good const itemheight item const height larges smallsiz item return height larges smallsiz enforc locat arrow function bodi implicit return eslint implicitarrowlinebreak bad foo bar foo bar good foo bar foo bar foo bar back top class constructor alway use class avoid manipul prototyp directli class syntax concis easier reason bad function queuecont thisqueu content queueprototypepop function const valu thisqueu thisqueuesplic return valu good class queue constructorcont thisqueu content pop const valu thisqueu thisqueuesplic return valu use extend inherit builtin way inherit prototyp function without break instanceof bad const inherit requireinherit function peekablequeuecont queueapplythi content inheritspeekablequeu queue peekablequeueprototypepeek function return thisqueu good class peekablequeu extend queue peek return thisqueu method return help method chain bad jediprototypejump function thisjump true return true jediprototypesetheight function height thisheight height const luke new jedi lukejump true lukesetheight undefin good class jedi jump thisjump true return setheightheight thisheight height return const luke new jedi lukejump setheight okay write custom tostr method make sure work success caus side effect class jedi constructoropt thisnam optionsnam name getnam return thisnam tostr return jedi thisgetnam class default constructor one specifi empti constructor function one deleg parent class unnecessari eslint nouselessconstructor bad class jedi constructor getnam return thisnam bad class rey extend jedi constructorarg superarg good class rey extend jedi constructorarg superarg thisnam rey avoid duplic class member eslint nodupeclassmemb duplic class member declar silent prefer last one duplic almost certainli bug bad class foo bar return bar return good class foo bar return good class foo bar return class method use made static method unless extern librari framework requir use specif nonstat method instanc method indic behav differ base properti receiv eslint classmethodsusethi bad class foo bar consolelogbar good use class foo bar consolelogthisbar good constructor exempt class foo constructor good static method arent expect use class foo static bar consolelogbar back top modul alway use modul importexport nonstandard modul system alway transpil prefer modul system modul futur let start use futur bad const airbnbstyleguid requireairbnbstyleguid moduleexport airbnbstyleguide ok import airbnbstyleguid airbnbstyleguid export default airbnbstyleguide best import es airbnbstyleguid export default es use wildcard import make sure singl default export bad import airbnbstyleguid airbnbstyleguid good import airbnbstyleguid airbnbstyleguid export directli import although onelin concis one clear way import one clear way export make thing consist bad filenam esj export es default airbnbstyleguid good filenam esj import es airbnbstyleguid export default es import path one place eslint noduplicateimport multipl line import path make code harder maintain bad import foo foo import import name name foo good import foo name name foo good import foo name name foo export mutabl bind eslint importnomutableexport mutat avoid gener particular export mutabl bind techniqu may need special case gener constant refer export bad let foo export foo good const foo export foo modul singl export prefer default export name export eslint importpreferdefaultexport encourag file ever export one thing better readabl maintain bad export function foo good export default function foo put import nonimport statement eslint importfirst sinc import hoist keep top prevent surpris behavior bad import foo foo fooinit import bar bar good import foo foo import bar bar fooinit multilin import indent like multilin array object liter curli brace follow indent rule everi curli brace block style guid trail comma bad import longnamea longnameb longnamec longnam longname path good import longnamea longnameb longnamec longnam longname path disallow webpack loader syntax modul import statement eslint importnowebpackloadersyntax sinc use webpack syntax import coupl code modul bundler prefer use loader syntax webpackconfigj bad import foosass csssassfooscss import barcss stylecssbarcss good import foosass fooscss import barcss barcss back top iter gener dont use iter prefer javascript higherord function instead loop like forin forof eslint noiter norestrictedsyntax enforc immut rule deal pure function return valu easier reason side effect use map everi filter find findindex reduc iter array objectkey objectvalu objectentri produc array iter object const number bad let sum let num number sum num sum good let sum numbersforeachnum sum num sum best use function forc const sum numbersreducetot num total num sum bad const increasedbyon let numberslength increasedbyonepushnumbersi good const increasedbyon numbersforeachnum increasedbyonepushnum best keep function const increasedbyon numbersmapnum num dont use gener dont transpil well es must use gener disregard advic make sure function signatur space properli eslint generatorstarspac function part conceptu keyword modifi function function uniqu construct differ function bad function foo bad const bar function bad const baz function bad const quux function bad functionfoo bad function foo bad function foo bad const wat function good function foo good const foo function back top properti use dot notat access properti eslint dotnot const luke jedi true age bad const isjedi lukejedi good const isjedi lukejedi use bracket notat access properti variabl const luke jedi true age function getpropprop return lukeprop const isjedi getpropjedi use exponenti oper calcul exponenti eslint norestrictedproperti bad const binari mathpow good const binari back top variabl alway use const let declar variabl result global variabl want avoid pollut global namespac captain planet warn us eslint noundef preferconst bad superpow new superpow good const superpow new superpow use one const let declar per variabl assign eslint onevar easier add new variabl declar way never worri swap introduc punctuationonli diff also step declar debugg instead jump bad const item getitem gosportsteam true dragonbal z bad compar tri spot mistak const item getitem gosportsteam true dragonbal z good const item getitem const gosportsteam true const dragonbal z group const group let help later might need assign variabl depend one previou assign variabl bad let len dragonbal item getitem gosportsteam true bad let const item getitem let dragonbal const gosportsteam true let len good const gosportsteam true const item getitem let dragonbal let let length assign variabl need place reason place let const block scope function scope bad unnecessari function call function checknamehasnam const name getnam hasnam test return fals name test thissetnam return fals return name good function checknamehasnam hasnam test return fals const name getnam name test thissetnam return fals return name dont chain variabl assign eslint nomultiassign chain variabl assign creat implicit global variabl bad function exampl javascript interpret let b c let keyword appli variabl variabl b c becom global variabl let b c consoleloga throw referenceerror consolelogb consolelogc good function exampl let let b let c consoleloga throw referenceerror consolelogb throw referenceerror consolelogc throw referenceerror appli const avoid use unari increment decrement eslint noplusplu per eslint document unari increment decrement statement subject automat semicolon insert caus silent error increment decrement valu within applic also express mutat valu statement like num instead num num disallow unari increment decrement statement also prevent preincrementingpredecr valu unintent also caus unexpect behavior program bad const array let num num num let sum let truthycount let arraylength let valu arrayi sum valu valu truthycount good const array let num num num const sum arrayreducea b b const truthycount arrayfilterbooleanlength avoid linebreak assign assign violat maxlen surround valu paren eslint operatorlinebreak linebreak surround obfusc valu assign bad const foo superlonglonglonglonglonglonglonglongfunctionnam bad const foo superlonglonglonglonglonglonglonglongstr good const foo superlonglonglonglonglonglonglonglongfunctionnam good const foo superlonglonglonglonglonglonglonglongstr disallow unus variabl eslint nounusedvar variabl declar use anywher code like error due incomplet refactor variabl take space code lead confus reader bad var someunusedvar writeonli variabl consid use var read modif consid use var z z z unus function argument function getxx return x good function getxplusyx return x var x var alertgetxplusyx type ignor even unus rest properti sibl form extract object omit specifi key var type coord data coord data object without type properti back top hoist var declar get hoist top closest enclos function scope assign const let declar bless new concept call tempor dead zone tdz import know typeof longer safe know wouldnt work assum notdefin global variabl function exampl consolelognotdefin throw referenceerror creat variabl declar refer variabl work due variabl hoist note assign valu true hoist function exampl consolelogdeclaredbutnotassign undefin var declaredbutnotassign true interpret hoist variabl declar top scope mean exampl could rewritten function exampl let declaredbutnotassign consolelogdeclaredbutnotassign undefin declaredbutnotassign true use const let function exampl consolelogdeclaredbutnotassign throw referenceerror consolelogtypeof declaredbutnotassign throw referenceerror const declaredbutnotassign true anonym function express hoist variabl name function assign function exampl consoleloganonym undefin anonym typeerror anonym function var anonym function consoleloganonym function express name function express hoist variabl name function name function bodi function exampl consolelognam undefin name typeerror name function superpow referenceerror superpow defin var name function superpow consolelogfli true function name variabl name function exampl consolelognam undefin name typeerror name function var name function name consolelognam function declar hoist name function bodi function exampl superpow fli function superpow consolelogfli inform refer javascript scope hoist ben cherri back top comparison oper equal use eslint eqeqeq condit statement statement evalu express use coercion toboolean abstract method alway follow simpl rule object evalu true undefin evalu fals null evalu fals boolean evalu valu boolean number evalu fals nan otherwis true string evalu fals empti string otherwis true true array even empti one object object evalu true use shortcut boolean explicit comparison string number bad isvalid true good isvalid bad name good name bad collectionlength good collectionlength inform see truth equal javascript angu croll use brace creat block case default claus contain lexic declar eg let const function class eslint nocasedeclar lexic declar visibl entir switch block get initi assign happen case reach caus problem multipl case claus attempt defin thing bad switch foo case let x break case const break case function f break default class c good switch foo case let x break case const break case function f break case bar break default class c ternari nest gener singl line express eslint nonestedternari bad const foo mayb mayb bar valu valu baz null split separ ternari express const maybenul valu valu baz null better const foo mayb mayb bar maybenul best const foo mayb mayb bar maybenul avoid unneed ternari statement eslint nounneededternari bad const foo b const bar c true fals const baz c fals true good const foo b const bar c const baz c mix oper enclos parenthes except standard arithmet oper sinc preced broadli understood recommend enclos parenthes preced ambigu mix eslint nomixedoper improv readabl clarifi develop intent bad const foo b c bad const bar b bad one may confus think b c b c return bad const bar b c good const foo b c good const bar b good b c return good const bar b c back top block use brace multilin block eslint nonblockstatementbodyposit bad test return fals good test return fals good test return fals bad function foo return fals good function bar return fals your use multilin block els put els line block close brace eslint bracestyl bad test thing thing els thing good test thing thing els thing block alway execut return statement subsequ els block unnecessari return els block follow block contain return separ multipl block eslint noelsereturn bad function foo x return x els return bad function cat x return x els return bad function dog x return x els return good function foo x return x return good function cat x return x return good function dogsx x z return els return z back top control statement case control statement etc get long exce maximum line length group condit could put new line logic oper begin line requir oper begin line keep oper align follow pattern similar method chain also improv readabl make easier visual follow complex logic bad foo bar abc doesitlookgoodwhenitbecomesthatlong isthisreallyhappen thing bad foo bar abc thing bad foo bar abc thing bad foo bar abc thing good foo bar abc thing good foo bar abc doesitlookgoodwhenitbecomesthatlong isthisreallyhappen thing good foo bar abc thing dont use select oper place control statement bad isrun startrun good isrun startrun back top comment use multilin comment bad make return new element base pass tag name param string tag return element element function maketag return element good make return new element base passedin tag name function maketag return element use singl line comment place singl line comment newlin subject comment put empti line comment unless first line block bad const activ true current tab good current tab const activ true bad function gettyp consolelogfetch type set default type type const type thistyp type return type good function gettyp consolelogfetch type set default type type const type thistyp type return type also good function gettyp set default type type const type thistyp type return type start comment space make easier read eslint spacedcom bad current tab const activ true good current tab const activ true bad make return new element base passedin tag name function maketag return element good make return new element base passedin tag name function maketag return element prefix comment fixm todo help develop quickli understand your point problem need revisit your suggest solut problem need implement differ regular comment action action fixm need figur todo need implement use fixm annot problem class calcul extend abacu constructor super fixm shouldnt use global total use todo annot solut problem class calcul extend abacu constructor super todo total configur option param thistot back top whitespac use soft tab space charact set space eslint indent bad function foo let name bad function bar let name good function baz let name place space lead brace eslint spacebeforeblock bad function test consolelogtest good function test consolelogtest bad dogsetattr age year breed bernes mountain dog good dogsetattr age year breed bernes mountain dog place space open parenthesi control statement etc place space argument list function name function call declar eslint keywordspac bad ifisjedi fight good isjedi fight bad function fight consolelog swooosh good function fight consolelogswooosh set oper space eslint spaceinfixop bad const xy good const x end file singl newlin charact eslint eollast bad import es airbnbstyleguid export default es bad import es airbnbstyleguid export default es good import es airbnbstyleguid export default es use indent make long method chain method chain use lead dot emphas line method call new statement eslint newlineperchainedcal nowhitespacebeforeproperti bad itemsfindselectedhighlightendfindopenupdatecount bad item findselect highlight end findopen updatecount good item findselect highlight end findopen updatecount bad const led stageselectallleddatadataenterappendsvgsvgclassedl true attrwidth radiu margin appendsvgg attrtransform translateradiu marginradiu margin calltronl good const led stageselectall datadata enterappendsvgsvg classedl true attrwidth radiu margin appendsvgg attrtransform translateradiu marginradiu margin calltronl good const led stageselectallleddatadata leav blank line block next statement bad foo return bar return baz good foo return bar return baz bad const obj foo bar return obj good const obj foo bar return obj bad const arr function foo function bar return arr good const arr function foo function bar return arr pad block blank line eslint paddedblock bad function bar consolelogfoo bad baz consolelogqux els consolelogfoo bad class foo constructorbar thisbar bar good function bar consolelogfoo good baz consolelogqux els consolelogfoo use multipl blank line pad code eslint nomultipleemptylin bad class person constructorfullnam email birthday thisfullnam fullnam thisemail email thissetagebirthday setagebirthday const today new date const age thisgetagetoday birthday thisag age getagetoday birthday good class person constructorfullnam email birthday thisfullnam fullnam thisemail email thissetagebirthday setagebirthday const today new date const age getagetoday birthday thisag age getagetoday birthday add space insid parenthes eslint spaceinparen bad function bar foo return foo good function barfoo return foo bad foo consolelogfoo good foo consolelogfoo add space insid bracket eslint arraybracketspac bad const foo consolelogfoo good const foo consolelogfoo add space insid curli brace eslint objectcurlyspac bad const foo clark kent good const foo clark kent avoid line code longer charact includ whitespac note per long string exempt rule broken eslint maxlen ensur readabl maintain bad const foo jsondata jsondatafoo jsondatafoobar jsondatafoobarbaz jsondatafoobarbazquux jsondatafoobarbazquuxxyzzi bad ajax method post url httpsairbnbcom data name john done consolelogcongratulationsfail consolelogy fail citi good const foo jsondata jsondatafoo jsondatafoobar jsondatafoobarbaz jsondatafoobarbazquux jsondatafoobarbazquuxxyzzi good ajax method post url httpsairbnbcom data name john done consolelogcongratul fail consolelogy fail citi requir consist space insid open block token next token line rule also enforc consist space insid close block token previou token line eslint blockspac bad function foo return true foo bar good function foo return true foo bar avoid space comma requir space comma eslint commaspac bad var foo bar var arr good var foo bar var arr enforc space insid comput properti bracket eslint computedpropertyspac bad objfoo obj foo var x b objfoo bar good objfoo objfoo var x b objfoobar avoid space function invoc eslint funccallspac bad func func good func enforc space key valu object liter properti eslint keyspac bad var obj foo var obj foo good var obj foo avoid trail space end line eslint notrailingspac avoid multipl empti line allow one newlin end file avoid newlin begin file eslint nomultipleemptylin bad multipl empti line var x var bad newlin end file var x var bad newlin begin file var x var good var x var back top comma lead comma nope eslint commastyl bad const stori upon atim good const stori upon atim bad const hero firstnam ada lastnam lovelac birthyear superpow comput good const hero firstnam ada lastnam lovelac birthyear superpow comput addit trail comma yup eslint commadangl lead cleaner git diff also transpil like babel remov addit trail comma transpil code mean dont worri trail comma problem legaci browser bad git diff without trail comma const hero firstnam florenc lastnam nightingal lastnam nightingal inventorof coxcomb chart modern nurs good git diff trail comma const hero firstnam florenc lastnam nightingal inventorof coxcomb chart modern nurs bad const hero firstnam dana lastnam sculli const hero batman superman good const hero firstnam dana lastnam sculli const hero batman superman bad function createhero firstnam lastnam inventorof noth good function createhero firstnam lastnam inventorof noth good note comma must appear rest element function createhero firstnam lastnam inventorof heroarg noth bad createhero firstnam lastnam inventorof good createhero firstnam lastnam inventorof good note comma must appear rest element createhero firstnam lastnam inventorof heroarg back top semicolon yup eslint semi javascript encount line break without semicolon use set rule call automat semicolon insert determin whether regard line break end statement name impli place semicolon code line break think asi contain eccentr behavior though code break javascript misinterpret line break rule becom complic new featur becom part javascript explicitli termin statement configur linter catch miss semicolon help prevent encount issu bad rais except const luke const leia luke leiaforeachjedi jedifath vader bad rais except const reaction that imposs async function meanwhileonthefalcon handl leia lando chewi r cp bad return undefin instead valu next line alway happen return line asi function foo return search feel know foo good const luke const leia luke leiaforeachjedi jedifath vader good const reaction that imposs async function meanwhileonthefalcon handl leia lando chewi r cp good function foo return search feel know foo read back top type cast coercion perform type coercion begin statement string eslint nonewwrapp thisreviewscor bad const totalscor new stringthisreviewscor typeof totalscor object string bad const totalscor thisreviewscor invok thisreviewscorevalueof bad const totalscor thisreviewscoretostr isnt guarante return string good const totalscor stringthisreviewscor number use number type cast parseint alway radix pars string eslint radix nonewwrapp const inputvalu bad const val new numberinputvalu bad const val inputvalu bad const val inputvalu bad const val parseintinputvalu good const val numberinputvalu good const val parseintinputvalu whatev reason someth wild parseint bottleneck need use bitshift perform reason leav comment explain your good parseint reason code slow bitshift string coerc number made lot faster const val inputvalu note care use bitshift oper number repres bit valu bitshift oper alway return bit integ sourc bitshift lead unexpect behavior integ valu larger bit discuss largest sign bit int boolean eslint nonewwrapp const age bad const hasag new booleanag good const hasag booleanag best const hasag age back top name convent avoid singl letter name descript name eslint idlength bad function q good function queri use camelcas name object function instanc eslint camelcas bad const objecttsssss const thisismyobject function c good const thisismyobject function thisismyfunct use pascalcas name constructor class eslint newcap bad function useropt thisnam optionsnam const bad new user name nope good class user constructoropt thisnam optionsnam const good new user name yup use trail lead underscor eslint nounderscoredangl javascript concept privaci term properti method although lead underscor common convent mean privat fact properti fulli public part public api contract convent might lead develop wrongli think chang wont count break test arent need tldr want someth privat must observ present bad thisfirstnam panda thisfirstnam panda thisfirstnam panda good thisfirstnam panda good environ weakmap avail see httpskangaxgithubiocompattableestestweakmap const firstnam new weakmap firstnamessetthi panda dont save refer use arrow function functionbind bad function foo const self return function consolelogself bad function foo const return function consolelogthat good function foo return consolelogthi base filenam exactli match name default export file content class checkbox export default checkbox file content export default function fortytwo return file content export default function insidedirectori file bad import checkbox checkbox pascalcas importexport camelcas filenam import fortytwo fortytwo pascalcas importfilenam camelcas export import insidedirectori insidedirectori pascalcas importfilenam camelcas export bad import checkbox checkbox pascalcas importexport snakecas filenam import fortytwo fortytwo snakecas importfilenam camelcas export import insidedirectori insidedirectori snakecas import camelcas export import index insidedirectoryindex requir index file explicitli import insidedirectori insidedirectoryindex requir index file explicitli good import checkbox checkbox pascalcas exportimportfilenam import fortytwo fortytwo camelcas exportimportfilenam import insidedirectori insidedirectori camelcas exportimportdirectori nameimplicit index support insidedirectoryj insidedirectoryindexj use camelcas exportdefault function filenam ident function name function makestyleguid export default makestyleguid use pascalcas export constructor class singleton function librari bare object const airbnbstyleguid es export default airbnbstyleguid acronym initi alway uppercas lowercas name readabl appeas comput algorithm bad import smscontain containerssmscontain bad const httprequest good import smscontain containerssmscontain good const httprequest also good const httprequest best import textmessagecontain containerstextmessagecontain best const request may option uppercas constant export const reassign programm trust nest properti never chang addit tool assist situat programm would unsur variabl might ever chang uppercasevari let programm know trust variabl properti chang const variabl unnecessari uppercas use constant within file use export constant howev export object uppercas top level export eg exportedobjectkey maintain nest properti chang bad const privatevari unnecessarili uppercas within file bad export const thingtobechang obvious uppercas bad export let reassignablevari use let uppercas variabl allow suppli semant valu export const apikey somekey better case export const apikey somekey bad unnecessarili uppercas key ad semant valu export const map key valu good export const map key valu back top accessor accessor function properti requir use javascript getterssett caus unexpect side effect harder test maintain reason instead make accessor function use getval setvalhello bad class dragon get age set agevalu good class dragon getag setagevalu propertymethod boolean use isval hasval bad dragonag return fals good dragonhasag return fals okay creat get set function consist class jedi constructoropt const lightsab optionslightsab blue thissetlightsab lightsab setkey val thiskey val getkey return thiskey back top event attach data payload event whether dom event someth proprietari like backbon event pass object liter also known hash instead raw valu allow subsequ contributor add data event payload without find updat everi handler event exampl instead bad thistriggerlistingupd listingid thisonlistingupd e listingid someth listingid prefer good thistriggerlistingupd listingid listingid thisonlistingupd e data someth datalistingid back top jqueri prefix jqueri object variabl bad const sidebar sidebar good const sidebar sidebar good const sidebarbtn sidebarbtn cach jqueri lookup bad function setsidebar sidebarhid sidebarcss backgroundcolor pink good function setsidebar const sidebar sidebar sidebarhid sidebarcss backgroundcolor pink dom queri use cascad sidebar ul parent child sidebar ul jsperf use find scope jqueri object queri bad ul sidebarhid bad sidebarfindulhid good sidebar ulhid good sidebar ulhid good sidebarfindulhid back top ecmascript compat refer kangax es compat tabl back top ecmascript es style collect link variou es featur arrow function class object shorthand object concis object comput properti templat string destructur default paramet rest array spread let const exponenti oper iter gener modul use tc propos reach stage final subject chang withdrawn entir want use javascript propos javascript yet back top standard librari standard librari contain util function broken remain legaci reason use numberisnan instead global isnan eslint norestrictedglob global isnan coerc nonnumb number return true anyth coerc nan behavior desir make explicit bad isnan fals isnan true good numberisnan fals numberisnannumb true use numberisfinit instead global isfinit eslint norestrictedglob global isfinit coerc nonnumb number return true anyth coerc finit number behavior desir make explicit bad isfinite true good numberisfinite fals numberisfiniteparseint true back top test yup function foo return true serious whichev test framework use write test strive write mani small pure function minim mutat occur cautiou stub mock make test brittl primarili use mocha jest airbnb tape also use occasion small separ modul test coverag good goal strive even alway practic reach whenev fix bug write regress test bug fix without regress test almost certainli go break futur back top perform layout web perform string vs array concat trycatch cost loop bang function jqueri find vs context selector innerhtml vs textcont script text long string concaten javascript function like map reduc filter optim travers array load back top resourc learn es latest ecma spec exploringj es compat tabl comprehens overview es featur read standard ecma tool code style linter eslint airbnb style eslintrc jshint airbnb style jshintrc neutrino preset neutrinojsairbnb style guid googl javascript style guid googl javascript style guid old jqueri core style guidelin principl write consist idiomat javascript standardj style name nest function christian johansen condit callback ross allen popular javascript code convent github jeonghoon byun multipl var statement javascript superflu ben alman read understand javascript closur angu croll basic javascript impati programm dr axel rauschmay might need jqueri zack bloom adam schwartz es featur luke hoban frontend guidelin benjamin de cock book javascript good part dougla crockford javascript pattern stoyan stefanov pro javascript design pattern ross harm dustin diaz high perform web site essenti knowledg frontend engin steve souder maintain javascript nichola c zaka javascript web applic alex maccaw pro javascript techniqu john resig smash nodej javascript everywher guillermo rauch secret javascript ninja john resig bear bibeault human javascript henrik joreteg superheroj kim joar bekkelund mad mobk olav bjorkoy jsbook julien bouquillon third parti javascript ben vinegar anton kovalyov effect javascript specif way har power javascript david herman eloqu javascript marijn haverbek dont know js es beyond kyle simpson blog javascript weekli javascript javascript bocoup weblog adequ good nczonlin perfect kill ben alman dmitri baranovskiy nettut podcast javascript air javascript jabber back top wild list organ use style guid send us pull request well add list erfasst erfasstjavascript blade blade catalyz catalyzerjavascript aan zee aanzeejavascript adult swim adultswimjavascript airbnb airbnbjavascript altschool altschooljavascript apartmint apartmintjavascript ascrib ascribejavascript avalara avalarajavascript avant avantcreditjavascript axept axeptjavascript bashpro bashprosjavascript billabong billabongjavascript bisk bisk bonhomm bonhommeparisjavascript brainshark brainsharkjavascript casenin caseninejavascript cerner cerner chartboost chartboostjavascriptstyleguid coeur dalen tribe wwwcdatribensngov comparaonlin comparaonlinejavascript compass learn compasslearningjavascriptstyleguid dailymot dailymotionjavascript dosometh dosomethingeslintconfig digitpaint digitpaintjavascript drupal wwwdrupalorg ecosia ecosiajavascript evernot evernotejavascriptstyleguid evolut game evolutiongamingjavascript evozonj evozonjsjavascript exacttarget exacttargetjavascript expensifi expensifystyleguid flexberri flexberryjavascriptstyleguid gawker media gawkermedia gener electr generalelectricjavascript gener tux generationtuxjavascript gooddata gooddatagdcjsstyl greenchef greenchefjavascript grooveshark groovesharkjavascript grupoabraxa grupoabraxasjavascript happeo happeojavascript honey honeysciencejavascript howaboutwejavascript huballin huballin hubspot hubspotjavascript hyper hyperoslojavascriptplaybook interc group intercitygroupjavascriptstyleguid jam jamjavascriptcodeconvent jeopardybot kesnejeopardybot jssolut jssolutionsjavascript kaplan komput kaplankomputingjavascript kickorstick kickorstick kinetica solut kineticajavascript leinwand leinwandjavascript lone planet lonelyplanetjavascript mgen mgenjavascript mighti spring mightyspringjavascript minnpost minnpostjavascript mitocgroup mitocgroupjavascript modcloth modclothjavascript money advic servic moneyadviceservicejavascript muber muber nation geograph natgeo nimbl nimbljavascript nulldev nulldevcojavascriptstyleguid nulog nulogyjavascript orang hill develop orangehilljavascript orion health orionhealthjavascript outboxsoft outboxsoftjavascript peerbi peerbyjavascript pier pierjavascript qotto qottojavascriptstyleguid razorfish razorfishjavascriptstyleguid reddit redditstyleguidejavascript react facebookgithubioreactcontributinghowtocontributehtmlstyleguid rei reidevjsstyleguid rippl ripplejavascriptstyleguid sainsburi supermarket jsainsburyplc seekingalpha seekingalphajavascriptstyleguid shutterfli shutterflyjavascript sourcetoad sourcetoadjavascript springload springload stratodem analyt stratodemjavascript steelkiwi develop steelkiwijavascript studentspher studentspherejavascript swoopapp swoopappjavascript sysgarag sysgaragejavascriptstyleguid syzygi warsaw syzygypljavascript target targetjavascript terra terra theladd theladdersjavascript nerderi thenerderyjavascriptstandard tomifi tomprat traitifi traitifyeslintconfigtraitifi tr technolog trtechnologyjavascript urbansim urbansim voxfe voxfeedjavascriptstyleguid webox studio weboxstudiojavascript weggo weggojavascript zillow zillowjavascript zocdoc zocdocjavascript back top translat style guid also avail languag brazilian portugues armoucarjavascriptstyleguid bulgarian borislavvvjavascript catalan fpmwebjavascriptstyleguid chines simplifi linjavascript chines tradit jigsawyejavascript french nmussyjavascriptstyleguid german timofurrerjavascriptstyleguid italian sinkswimjavascriptstyleguid japanes mitsuruogjavascriptstyleguid korean parksbjavascriptstyleguid russian leonidlebedevjavascriptairbnb spanish paolocarrascojavascriptstyleguid thai lvarayutjavascriptstyleguid turkish eraycetinayjavascript ukrainian ivanzuskojavascript vietnam dangkyokhoangjavascriptstyleguid javascript style guid guid refer chat us javascript find us gitter contributor view contributor licens mit licens copyright c airbnb permiss herebi grant free charg person obtain copi softwar associ document file softwar deal softwar without restrict includ without limit right use copi modifi merg publish distribut sublicens andor sell copi softwar permit person softwar furnish subject follow condit copyright notic permiss notic shall includ copi substanti portion softwar softwar provid without warranti kind express impli includ limit warranti merchant fit particular purpos noninfring event shall author copyright holder liabl claim damag liabil whether action contract tort otherwis aris connect softwar use deal softwar back top amend encourag fork guid chang rule fit team style guid may list amend style guid allow period updat style guid without deal merg conflict,airbnb javascript style guide mostly reasonable approach javascript note guide assumes using babel requires use babelpresetairbnb equivalent also assumes installing shimspolyfills app airbnbbrowsershims equivalent guide available language see translation style guide e deprecated react cssinjavascript cs sas ruby table content type reference object array destructuring string function arrow function class constructor module iterators generator property variable hoisting comparison operator equality block control statement comment whitespace comma semicolon type casting coercion naming convention accessors event jquery ecmascript compatibility ecmascript e style standard library testing performance resource wild translation javascript style guide guide chat u javascript contributor license amendment type primitive access primitive type work directly value string number boolean null undefined symbol const foo let bar foo bar consolelogfoo bar symbol cannot faithfully polyfilled used targeting browsersenvironments dont support natively complex access complex type work reference value object array function const foo const bar foo bar consolelogfoo bar back top reference use const reference avoid using var eslint preferconst noconstassign ensures cant reassign reference lead bug difficult comprehend code bad var var b good const const b must reassign reference use let instead var eslint novar let blockscoped rather functionscoped like var bad var count true count good use let let count true count note let const blockscoped const let exist block defined let const b consoleloga referenceerror consolelogb referenceerror back top object use literal syntax object creation eslint nonewobject bad const item new object good const item use computed property name creating object dynamic property name allow define property object one place function getkeyk return key named k bad const obj id name san francisco objgetkeyenabled true good const obj id name san francisco getkeyenabled true use object method shorthand eslint objectshorthand bad const atom value addvalue function value return atomvalue value good const atom value addvaluevalue return atomvalue value use property value shorthand eslint objectshorthand shorter descriptive const lukeskywalker luke skywalker bad const obj lukeskywalker lukeskywalker good const obj lukeskywalker group shorthand property beginning object declaration easier tell property using shorthand const anakinskywalker anakin skywalker const lukeskywalker luke skywalker bad const obj episodeone twojediwalkintoacantina lukeskywalker episodethree maythefourth anakinskywalker good const obj lukeskywalker anakinskywalker episodeone twojediwalkintoacantina episodethree maythefourth quote property invalid identifier eslint quoteprops general consider subjectively easier read improves syntax highlighting also easily optimized many j engine bad const bad foo bar datablah good const good foo bar datablah call objectprototype method directly hasownproperty propertyisenumerable isprototypeof eslint noprototypebuiltins method may shadowed property object question consider hasownproperty false object may null object objectcreatenull bad consolelogobjecthasownpropertykey good consolelogobjectprototypehasownpropertycallobject key best const objectprototypehasownproperty cache lookup module scope consoleloghascallobject key import httpswwwnpmjscompackagehas consoleloghasobject key prefer object spread operator objectassign shallowcopy object use object rest operator get new object certain property omitted bad const original b const copy objectassignoriginal c mutates original delete copya bad const original b const copy objectassign original c copy b c good const original b const copy original c copy b c const noa copy noa b c back top array use literal syntax array creation eslint noarrayconstructor bad const item new array good const item use arraypush instead direct assignment add item array const somestack bad somestacksomestacklength abracadabra good somestackpushabracadabra use array spread copy array bad const len itemslength const itemscopy let len itemscopyi itemsi good const itemscopy item convert iterable object array use spread instead arrayfrom const foo documentqueryselectorallfoo good const node arrayfromfoo best const node foo use arrayfrom converting arraylike object array const arrlike foo bar baz length bad const arr arrayprototypeslicecallarrlike good const arr arrayfromarrlike use arrayfrom instead spread mapping iterables avoids creating intermediate array bad const baz foomapbar good const baz arrayfromfoo bar use return statement array method callback ok omit return function body consists single statement returning expression without side effect following eslint arraycallbackreturn good mapx const x return x good mapx x bad returned value mean acc becomes undefined first iteration reduceacc item index const flatten accconcatitem good reduceacc item index const flatten accconcatitem return flatten bad inboxfiltermsg const subject author msg subject mockingbird return author harper lee else return false good inboxfiltermsg const subject author msg subject mockingbird return author harper lee return false use line break open close array bracket array multiple line bad const arr const objectinarray id id const numberinarray good const arr const objectinarray id id const numberinarray back top destructuring use object destructuring accessing using multiple property object eslint preferdestructuring destructuring save creating temporary reference property bad function getfullnameuser const firstname userfirstname const lastname userlastname return firstname lastname good function getfullnameuser const firstname lastname user return firstname lastname best function getfullname firstname lastname return firstname lastname use array destructuring eslint preferdestructuring const arr bad const first arr const second arr good const first second arr use object destructuring multiple return value array destructuring add new property time change order thing without breaking call site bad function processinputinput miracle occurs return left right top bottom caller need think order return data const left top processinputinput good function processinputinput miracle occurs return left right top bottom caller selects data need const left top processinputinput back top string use single quote string eslint quote bad const name capt janeway bad template literal contain interpolation newlines const name capt janeway good const name capt janeway string cause line go character written across multiple line using string concatenation broken string painful work make code le searchable bad const errormessage super long error thrown batman stop think batman anything would get nowhere fast bad const errormessage super long error thrown batman stop think batman anything would get nowhere fast good const errormessage super long error thrown batman stop think batman anything would get nowhere fast programmatically building string use template string instead concatenation eslint prefertemplate templatecurlyspacing template string give readable concise syntax proper newlines string interpolation feature bad function sayhiname return name bad function sayhiname return name join bad function sayhiname return name good function sayhiname return name never use eval string open many vulnerability eslint noeval unnecessarily escape character string eslint nouselessescape backslashes harm readability thus present necessary bad const foo quoted good const foo quoted const foo name name back top function use named function expression instead function declaration eslint funcstyle function declaration hoisted mean easy easy reference function defined file harm readability maintainability find function definition large complex enough interfering understanding rest file perhaps time extract module dont forget explicitly name expression regardless whether name inferred containing variable often case modern browser using compiler babel eliminates assumption made error call stack discussion bad function foo bad const foo function good lexical name distinguished variablereferenced invocation const short function longuniquemoredescriptivelexicalfoo wrap immediately invoked function expression parenthesis eslint wrapiife immediately invoked function expression single unit wrapping invocation parens parens cleanly express note world module everywhere almost never need iife immediatelyinvoked function expression iife function consolelogwelcome internet please follow never declare function nonfunction block etc assign function variable instead browser allow interpret differently bad news bear eslint noloopfunc note ecma defines block list statement function declaration statement bad currentuser function test consolelognope good let test currentuser test consolelogyup never name parameter argument take precedence argument object given every function scope bad function fooname option argument good function fooname option args never use argument opt use rest syntax instead eslint preferrestparams explicit argument want pulled plus rest argument real array merely arraylike like argument bad function concatenateall const args arrayprototypeslicecallarguments return argsjoin good function concatenateallargs return argsjoin use default parameter syntax rather mutating function argument really bad function handlethingsopts shouldnt mutate function argument double bad opts falsy itll set object may want introduce subtle bug opts opts still bad function handlethingsopts opts void opts good function handlethingsopts avoid side effect default parameter confusing reason var b bad function counta b consoleloga count count count count always put default parameter last bad function handlethingsopts name good function handlethingsname opts never use function constructor create new function eslint nonewfunc creating function way evaluates string similarly eval open vulnerability bad var add new functiona b return b still bad var subtract functiona b return b spacing function signature eslint spacebeforefunctionparen spacebeforeblocks consistency good shouldnt add remove space adding removing name bad const f function const g function const h function good const x function const function never mutate parameter eslint noparamreassign manipulating object passed parameter cause unwanted variable side effect original caller bad function fobj objkey good function fobj const key objectprototypehasownpropertycallobj key objkey never reassign parameter eslint noparamreassign reassigning parameter lead unexpected behavior especially accessing argument object also cause optimization issue especially v bad function fa function fa good function fa const b function fa prefer use spread operator call variadic function eslint preferspread cleaner dont need supply context easily compose new apply bad const x consolelogapplyconsole x good const x consolelogx bad new functionprototypebindapplydate null good new date function multiline signature invocation indented like every multiline list guide item line trailing comma last item eslint functionparennewline bad function foobar baz quux good function foo bar baz quux bad consolelogfoo bar baz good consolelog foo bar baz back top arrow function must use anonymous function passing inline callback use arrow function notation eslint preferarrowcallback arrowspacing creates version function executes context usually want concise syntax fairly complicated function might move logic named function expression bad mapfunction x const x return x good mapx const x return x function body consists single statement returning expression without side effect omit brace use implicit return otherwise keep brace use return statement eslint arrowparens arrowbodystyle syntactic sugar read well multiple function chained together bad mapnumber const nextnumber number string containing nextnumber good mapnumber string containing number good mapnumber const nextnumber number return string containing nextnumber good mapnumber index index number implicit return side effect function foocallback const val callback val true something callback return true let bool false bad foo bool true good foo bool true case expression span multiple line wrap parenthesis better readability show clearly function start end bad get post putmaphttpmethod objectprototypehasownpropertycall httpmagicobjectwithaverylongname httpmethod good get post putmaphttpmethod objectprototypehasownpropertycall httpmagicobjectwithaverylongname httpmethod always include parenthesis around argument clarity consistency eslint arrowparens minimizes diff churn adding removing argument bad mapx x x good mapx x x bad mapnumber long string number long dont want take space map line good mapnumber long string number long dont want take space map line bad mapx const x return x good mapx const x return x avoid confusing arrow function syntax comparison operator eslint noconfusingarrow bad const itemheight item itemheight itemlargesize itemsmallsize bad const itemheight item itemheight itemlargesize itemsmallsize good const itemheight item itemheight itemlargesize itemsmallsize good const itemheight item const height largesize smallsize item return height largesize smallsize enforce location arrow function body implicit return eslint implicitarrowlinebreak bad foo bar foo bar good foo bar foo bar foo bar back top class constructor always use class avoid manipulating prototype directly class syntax concise easier reason bad function queuecontents thisqueue content queueprototypepop function const value thisqueue thisqueuesplice return value good class queue constructorcontents thisqueue content pop const value thisqueue thisqueuesplice return value use extends inheritance builtin way inherit prototype functionality without breaking instanceof bad const inherits requireinherits function peekablequeuecontents queueapplythis content inheritspeekablequeue queue peekablequeueprototypepeek function return thisqueue good class peekablequeue extends queue peek return thisqueue method return help method chaining bad jediprototypejump function thisjumping true return true jediprototypesetheight function height thisheight height const luke new jedi lukejump true lukesetheight undefined good class jedi jump thisjumping true return setheightheight thisheight height return const luke new jedi lukejump setheight okay write custom tostring method make sure work successfully cause side effect class jedi constructoroptions thisname optionsname name getname return thisname tostring return jedi thisgetname class default constructor one specified empty constructor function one delegate parent class unnecessary eslint nouselessconstructor bad class jedi constructor getname return thisname bad class rey extends jedi constructorargs superargs good class rey extends jedi constructorargs superargs thisname rey avoid duplicate class member eslint nodupeclassmembers duplicate class member declaration silently prefer last one duplicate almost certainly bug bad class foo bar return bar return good class foo bar return good class foo bar return class method use made static method unless external library framework requires use specific nonstatic method instance method indicate behaves differently based property receiver eslint classmethodsusethis bad class foo bar consolelogbar good used class foo bar consolelogthisbar good constructor exempt class foo constructor good static method arent expected use class foo static bar consolelogbar back top module always use module importexport nonstandard module system always transpile preferred module system module future let start using future bad const airbnbstyleguide requireairbnbstyleguide moduleexports airbnbstyleguidees ok import airbnbstyleguide airbnbstyleguide export default airbnbstyleguidees best import e airbnbstyleguide export default e use wildcard import make sure single default export bad import airbnbstyleguide airbnbstyleguide good import airbnbstyleguide airbnbstyleguide export directly import although oneliner concise one clear way import one clear way export make thing consistent bad filename esjs export e default airbnbstyleguide good filename esjs import e airbnbstyleguide export default e import path one place eslint noduplicateimports multiple line import path make code harder maintain bad import foo foo import import named named foo good import foo named named foo good import foo named named foo export mutable binding eslint importnomutableexports mutation avoided general particular exporting mutable binding technique may needed special case general constant reference exported bad let foo export foo good const foo export foo module single export prefer default export named export eslint importpreferdefaultexport encourage file ever export one thing better readability maintainability bad export function foo good export default function foo put import nonimport statement eslint importfirst since import hoisted keeping top prevents surprising behavior bad import foo foo fooinit import bar bar good import foo foo import bar bar fooinit multiline import indented like multiline array object literal curly brace follow indentation rule every curly brace block style guide trailing comma bad import longnamea longnameb longnamec longnamed longnamee path good import longnamea longnameb longnamec longnamed longnamee path disallow webpack loader syntax module import statement eslint importnowebpackloadersyntax since using webpack syntax import couple code module bundler prefer using loader syntax webpackconfigjs bad import foosass csssassfooscss import barcss stylecssbarcss good import foosass fooscss import barcss barcss back top iterators generator dont use iterators prefer javascripts higherorder function instead loop like forin forof eslint noiterator norestrictedsyntax enforces immutable rule dealing pure function return value easier reason side effect use map every filter find findindex reduce iterate array objectkeys objectvalues objectentries produce array iterate object const number bad let sum let num number sum num sum good let sum numbersforeachnum sum num sum best use functional force const sum numbersreducetotal num total num sum bad const increasedbyone let numberslength increasedbyonepushnumbersi good const increasedbyone numbersforeachnum increasedbyonepushnum best keeping functional const increasedbyone numbersmapnum num dont use generator dont transpile well e must use generator disregard advice make sure function signature spaced properly eslint generatorstarspacing function part conceptual keyword modifier function function unique construct different function bad function foo bad const bar function bad const baz function bad const quux function bad functionfoo bad function foo bad function foo bad const wat function good function foo good const foo function back top property use dot notation accessing property eslint dotnotation const luke jedi true age bad const isjedi lukejedi good const isjedi lukejedi use bracket notation accessing property variable const luke jedi true age function getpropprop return lukeprop const isjedi getpropjedi use exponentiation operator calculating exponentiation eslint norestrictedproperties bad const binary mathpow good const binary back top variable always use const let declare variable result global variable want avoid polluting global namespace captain planet warned u eslint noundef preferconst bad superpower new superpower good const superpower new superpower use one const let declaration per variable assignment eslint onevar easier add new variable declaration way never worry swapping introducing punctuationonly diffs also step declaration debugger instead jumping bad const item getitems gosportsteam true dragonball z bad compare try spot mistake const item getitems gosportsteam true dragonball z good const item getitems const gosportsteam true const dragonball z group consts group let helpful later might need assign variable depending one previous assigned variable bad let len dragonball item getitems gosportsteam true bad let const item getitems let dragonball const gosportsteam true let len good const gosportsteam true const item getitems let dragonball let let length assign variable need place reasonable place let const block scoped function scoped bad unnecessary function call function checknamehasname const name getname hasname test return false name test thissetname return false return name good function checknamehasname hasname test return false const name getname name test thissetname return false return name dont chain variable assignment eslint nomultiassign chaining variable assignment creates implicit global variable bad function example javascript interprets let b c let keyword applies variable variable b c become global variable let b c consoleloga throw referenceerror consolelogb consolelogc good function example let let b let c consoleloga throw referenceerror consolelogb throw referenceerror consolelogc throw referenceerror applies const avoid using unary increment decrement eslint noplusplus per eslint documentation unary increment decrement statement subject automatic semicolon insertion cause silent error incrementing decrementing value within application also expressive mutate value statement like num instead num num disallowing unary increment decrement statement also prevents preincrementingpredecrementing value unintentionally also cause unexpected behavior program bad const array let num num num let sum let truthycount let arraylength let value arrayi sum value value truthycount good const array let num num num const sum arrayreducea b b const truthycount arrayfilterbooleanlength avoid linebreaks assignment assignment violates maxlen surround value parens eslint operatorlinebreak linebreaks surrounding obfuscate value assignment bad const foo superlonglonglonglonglonglonglonglongfunctionname bad const foo superlonglonglonglonglonglonglonglongstring good const foo superlonglonglonglonglonglonglonglongfunctionname good const foo superlonglonglonglonglonglonglonglongstring disallow unused variable eslint nounusedvars variable declared used anywhere code likely error due incomplete refactoring variable take space code lead confusion reader bad var someunusedvar writeonly variable considered used var read modification considered used var z z z unused function argument function getxx return x good function getxplusyx return x var x var alertgetxplusyx type ignored even unused rest property sibling form extracting object omits specified key var type coords data coords data object without type property back top hoisting var declaration get hoisted top closest enclosing function scope assignment const let declaration blessed new concept called temporal dead zone tdz important know typeof longer safe know wouldnt work assuming notdefined global variable function example consolelognotdefined throw referenceerror creating variable declaration reference variable work due variable hoisting note assignment value true hoisted function example consolelogdeclaredbutnotassigned undefined var declaredbutnotassigned true interpreter hoisting variable declaration top scope mean example could rewritten function example let declaredbutnotassigned consolelogdeclaredbutnotassigned undefined declaredbutnotassigned true using const let function example consolelogdeclaredbutnotassigned throw referenceerror consolelogtypeof declaredbutnotassigned throw referenceerror const declaredbutnotassigned true anonymous function expression hoist variable name function assignment function example consoleloganonymous undefined anonymous typeerror anonymous function var anonymous function consoleloganonymous function expression named function expression hoist variable name function name function body function example consolelognamed undefined named typeerror named function superpower referenceerror superpower defined var named function superpower consolelogflying true function name variable name function example consolelognamed undefined named typeerror named function var named function named consolelognamed function declaration hoist name function body function example superpower flying function superpower consolelogflying information refer javascript scoping hoisting ben cherry back top comparison operator equality use eslint eqeqeq conditional statement statement evaluate expression using coercion toboolean abstract method always follow simple rule object evaluate true undefined evaluates false null evaluates false booleans evaluate value boolean number evaluate false nan otherwise true string evaluate false empty string otherwise true true array even empty one object object evaluate true use shortcut booleans explicit comparison string number bad isvalid true good isvalid bad name good name bad collectionlength good collectionlength information see truth equality javascript angus croll use brace create block case default clause contain lexical declaration eg let const function class eslint nocasedeclarations lexical declaration visible entire switch block get initialized assigned happens case reached cause problem multiple case clause attempt define thing bad switch foo case let x break case const break case function f break default class c good switch foo case let x break case const break case function f break case bar break default class c ternary nested generally single line expression eslint nonestedternary bad const foo maybe maybe bar value value baz null split separated ternary expression const maybenull value value baz null better const foo maybe maybe bar maybenull best const foo maybe maybe bar maybenull avoid unneeded ternary statement eslint nounneededternary bad const foo b const bar c true false const baz c false true good const foo b const bar c const baz c mixing operator enclose parenthesis exception standard arithmetic operator since precedence broadly understood recommend enclosing parenthesis precedence ambiguous mixed eslint nomixedoperators improves readability clarifies developer intention bad const foo b c bad const bar b bad one may confused thinking b c b c return bad const bar b c good const foo b c good const bar b good b c return good const bar b c back top block use brace multiline block eslint nonblockstatementbodyposition bad test return false good test return false good test return false bad function foo return false good function bar return false youre using multiline block else put else line block closing brace eslint bracestyle bad test thing thing else thing good test thing thing else thing block always executes return statement subsequent else block unnecessary return else block following block contains return separated multiple block eslint noelsereturn bad function foo x return x else return bad function cat x return x else return bad function dog x return x else return good function foo x return x return good function cat x return x return good function dogsx x z return else return z back top control statement case control statement etc get long exceeds maximum line length grouped condition could put new line logical operator begin line requiring operator beginning line keep operator aligned follows pattern similar method chaining also improves readability making easier visually follow complex logic bad foo bar abc doesitlookgoodwhenitbecomesthatlong isthisreallyhappening thing bad foo bar abc thing bad foo bar abc thing bad foo bar abc thing good foo bar abc thing good foo bar abc doesitlookgoodwhenitbecomesthatlong isthisreallyhappening thing good foo bar abc thing dont use selection operator place control statement bad isrunning startrunning good isrunning startrunning back top comment use multiline comment bad make return new element based passed tag name param string tag return element element function maketag return element good make return new element based passedin tag name function maketag return element use single line comment place single line comment newline subject comment put empty line comment unless first line block bad const active true current tab good current tab const active true bad function gettype consolelogfetching type set default type type const type thistype type return type good function gettype consolelogfetching type set default type type const type thistype type return type also good function gettype set default type type const type thistype type return type start comment space make easier read eslint spacedcomment bad current tab const active true good current tab const active true bad make return new element based passedin tag name function maketag return element good make return new element based passedin tag name function maketag return element prefixing comment fixme todo help developer quickly understand youre pointing problem need revisited youre suggesting solution problem need implemented different regular comment actionable action fixme need figure todo need implement use fixme annotate problem class calculator extends abacus constructor super fixme shouldnt use global total use todo annotate solution problem class calculator extends abacus constructor super todo total configurable option param thistotal back top whitespace use soft tab space character set space eslint indent bad function foo let name bad function bar let name good function baz let name place space leading brace eslint spacebeforeblocks bad function test consolelogtest good function test consolelogtest bad dogsetattr age year breed bernese mountain dog good dogsetattr age year breed bernese mountain dog place space opening parenthesis control statement etc place space argument list function name function call declaration eslint keywordspacing bad ifisjedi fight good isjedi fight bad function fight consolelog swooosh good function fight consolelogswooosh set operator space eslint spaceinfixops bad const xy good const x end file single newline character eslint eollast bad import e airbnbstyleguide export default e bad import e airbnbstyleguide export default e good import e airbnbstyleguide export default e use indentation making long method chain method chain use leading dot emphasizes line method call new statement eslint newlineperchainedcall nowhitespacebeforeproperty bad itemsfindselectedhighlightendfindopenupdatecount bad item findselected highlight end findopen updatecount good item findselected highlight end findopen updatecount bad const led stageselectallleddatadataenterappendsvgsvgclassedled true attrwidth radius margin appendsvgg attrtransform translateradius marginradius margin calltronled good const led stageselectallled datadata enterappendsvgsvg classedled true attrwidth radius margin appendsvgg attrtransform translateradius marginradius margin calltronled good const led stageselectallleddatadata leave blank line block next statement bad foo return bar return baz good foo return bar return baz bad const obj foo bar return obj good const obj foo bar return obj bad const arr function foo function bar return arr good const arr function foo function bar return arr pad block blank line eslint paddedblocks bad function bar consolelogfoo bad baz consolelogqux else consolelogfoo bad class foo constructorbar thisbar bar good function bar consolelogfoo good baz consolelogqux else consolelogfoo use multiple blank line pad code eslint nomultipleemptylines bad class person constructorfullname email birthday thisfullname fullname thisemail email thissetagebirthday setagebirthday const today new date const age thisgetagetoday birthday thisage age getagetoday birthday good class person constructorfullname email birthday thisfullname fullname thisemail email thissetagebirthday setagebirthday const today new date const age getagetoday birthday thisage age getagetoday birthday add space inside parenthesis eslint spaceinparens bad function bar foo return foo good function barfoo return foo bad foo consolelogfoo good foo consolelogfoo add space inside bracket eslint arraybracketspacing bad const foo consolelogfoo good const foo consolelogfoo add space inside curly brace eslint objectcurlyspacing bad const foo clark kent good const foo clark kent avoid line code longer character including whitespace note per long string exempt rule broken eslint maxlen ensures readability maintainability bad const foo jsondata jsondatafoo jsondatafoobar jsondatafoobarbaz jsondatafoobarbazquux jsondatafoobarbazquuxxyzzy bad ajax method post url httpsairbnbcom data name john done consolelogcongratulationsfail consolelogyou failed city good const foo jsondata jsondatafoo jsondatafoobar jsondatafoobarbaz jsondatafoobarbazquux jsondatafoobarbazquuxxyzzy good ajax method post url httpsairbnbcom data name john done consolelogcongratulations fail consolelogyou failed city require consistent spacing inside open block token next token line rule also enforces consistent spacing inside close block token previous token line eslint blockspacing bad function foo return true foo bar good function foo return true foo bar avoid space comma require space comma eslint commaspacing bad var foo bar var arr good var foo bar var arr enforce spacing inside computed property bracket eslint computedpropertyspacing bad objfoo obj foo var x b objfoo bar good objfoo objfoo var x b objfoobar avoid space function invocation eslint funccallspacing bad func func good func enforce spacing key value object literal property eslint keyspacing bad var obj foo var obj foo good var obj foo avoid trailing space end line eslint notrailingspaces avoid multiple empty line allow one newline end file avoid newline beginning file eslint nomultipleemptylines bad multiple empty line var x var bad newlines end file var x var bad newlines beginning file var x var good var x var back top comma leading comma nope eslint commastyle bad const story upon atime good const story upon atime bad const hero firstname ada lastname lovelace birthyear superpower computer good const hero firstname ada lastname lovelace birthyear superpower computer additional trailing comma yup eslint commadangle lead cleaner git diffs also transpilers like babel remove additional trailing comma transpiled code mean dont worry trailing comma problem legacy browser bad git diff without trailing comma const hero firstname florence lastname nightingale lastname nightingale inventorof coxcomb chart modern nursing good git diff trailing comma const hero firstname florence lastname nightingale inventorof coxcomb chart modern nursing bad const hero firstname dana lastname scully const hero batman superman good const hero firstname dana lastname scully const hero batman superman bad function createhero firstname lastname inventorof nothing good function createhero firstname lastname inventorof nothing good note comma must appear rest element function createhero firstname lastname inventorof heroargs nothing bad createhero firstname lastname inventorof good createhero firstname lastname inventorof good note comma must appear rest element createhero firstname lastname inventorof heroargs back top semicolon yup eslint semi javascript encounter line break without semicolon us set rule called automatic semicolon insertion determine whether regard line break end statement name implies place semicolon code line break think asi contains eccentric behavior though code break javascript misinterprets line break rule become complicated new feature become part javascript explicitly terminating statement configuring linter catch missing semicolon help prevent encountering issue bad raise exception const luke const leia luke leiaforeachjedi jedifather vader bad raise exception const reaction thats impossible async function meanwhileonthefalcon handle leia lando chewie r cp bad return undefined instead value next line always happens return line asi function foo return search feeling know foo good const luke const leia luke leiaforeachjedi jedifather vader good const reaction thats impossible async function meanwhileonthefalcon handle leia lando chewie r cp good function foo return search feeling know foo read back top type casting coercion perform type coercion beginning statement string eslint nonewwrappers thisreviewscore bad const totalscore new stringthisreviewscore typeof totalscore object string bad const totalscore thisreviewscore invokes thisreviewscorevalueof bad const totalscore thisreviewscoretostring isnt guaranteed return string good const totalscore stringthisreviewscore number use number type casting parseint always radix parsing string eslint radix nonewwrappers const inputvalue bad const val new numberinputvalue bad const val inputvalue bad const val inputvalue bad const val parseintinputvalue good const val numberinputvalue good const val parseintinputvalue whatever reason something wild parseint bottleneck need use bitshift performance reason leave comment explaining youre good parseint reason code slow bitshifting string coerce number made lot faster const val inputvalue note careful using bitshift operation number represented bit value bitshift operation always return bit integer source bitshift lead unexpected behavior integer value larger bit discussion largest signed bit int booleans eslint nonewwrappers const age bad const hasage new booleanage good const hasage booleanage best const hasage age back top naming convention avoid single letter name descriptive naming eslint idlength bad function q good function query use camelcase naming object function instance eslint camelcase bad const objecttsssss const thisismyobject function c good const thisismyobject function thisismyfunction use pascalcase naming constructor class eslint newcap bad function useroptions thisname optionsname const bad new user name nope good class user constructoroptions thisname optionsname const good new user name yup use trailing leading underscore eslint nounderscoredangle javascript concept privacy term property method although leading underscore common convention mean private fact property fully public part public api contract convention might lead developer wrongly think change wont count breaking test arent needed tldr want something private must observably present bad thisfirstname panda thisfirstname panda thisfirstname panda good thisfirstname panda good environment weakmaps available see httpskangaxgithubiocompattableestestweakmap const firstnames new weakmap firstnamessetthis panda dont save reference use arrow function functionbind bad function foo const self return function consolelogself bad function foo const return function consolelogthat good function foo return consolelogthis base filename exactly match name default export file content class checkbox export default checkbox file content export default function fortytwo return file content export default function insidedirectory file bad import checkbox checkbox pascalcase importexport camelcase filename import fortytwo fortytwo pascalcase importfilename camelcase export import insidedirectory insidedirectory pascalcase importfilename camelcase export bad import checkbox checkbox pascalcase importexport snakecase filename import fortytwo fortytwo snakecase importfilename camelcase export import insidedirectory insidedirectory snakecase import camelcase export import index insidedirectoryindex requiring index file explicitly import insidedirectory insidedirectoryindex requiring index file explicitly good import checkbox checkbox pascalcase exportimportfilename import fortytwo fortytwo camelcase exportimportfilename import insidedirectory insidedirectory camelcase exportimportdirectory nameimplicit index support insidedirectoryjs insidedirectoryindexjs use camelcase exportdefault function filename identical function name function makestyleguide export default makestyleguide use pascalcase export constructor class singleton function library bare object const airbnbstyleguide e export default airbnbstyleguide acronym initialisms always uppercased lowercased name readability appease computer algorithm bad import smscontainer containerssmscontainer bad const httprequests good import smscontainer containerssmscontainer good const httprequests also good const httprequests best import textmessagecontainer containerstextmessagecontainer best const request may optionally uppercase constant exported const reassigned programmer trust nested property never change additional tool assist situation programmer would unsure variable might ever change uppercasevariables letting programmer know trust variable property change const variable unnecessary uppercasing used constant within file used exported constant however exported object uppercase top level export eg exportedobjectkey maintain nested property change bad const privatevariable unnecessarily uppercased within file bad export const thingtobechanged obviously uppercased bad export let reassignablevariable use let uppercase variable allowed supply semantic value export const apikey somekey better case export const apikey somekey bad unnecessarily uppercase key adding semantic value export const mapping key value good export const mapping key value back top accessors accessor function property required use javascript getterssetters cause unexpected side effect harder test maintain reason instead make accessor function use getval setvalhello bad class dragon get age set agevalue good class dragon getage setagevalue propertymethod boolean use isval hasval bad dragonage return false good dragonhasage return false okay create get set function consistent class jedi constructoroptions const lightsaber optionslightsaber blue thissetlightsaber lightsaber setkey val thiskey val getkey return thiskey back top event attaching data payload event whether dom event something proprietary like backbone event pas object literal also known hash instead raw value allows subsequent contributor add data event payload without finding updating every handler event example instead bad thistriggerlistingupdated listingid thisonlistingupdated e listingid something listingid prefer good thistriggerlistingupdated listingid listingid thisonlistingupdated e data something datalistingid back top jquery prefix jquery object variable bad const sidebar sidebar good const sidebar sidebar good const sidebarbtn sidebarbtn cache jquery lookup bad function setsidebar sidebarhide sidebarcss backgroundcolor pink good function setsidebar const sidebar sidebar sidebarhide sidebarcss backgroundcolor pink dom query use cascading sidebar ul parent child sidebar ul jsperf use find scoped jquery object query bad ul sidebarhide bad sidebarfindulhide good sidebar ulhide good sidebar ulhide good sidebarfindulhide back top ecmascript compatibility refer kangaxs e compatibility table back top ecmascript e style collection link various e feature arrow function class object shorthand object concise object computed property template string destructuring default parameter rest array spread let const exponentiation operator iterators generator module use tc proposal reached stage finalized subject change withdrawn entirely want use javascript proposal javascript yet back top standard library standard library contains utility functionally broken remain legacy reason use numberisnan instead global isnan eslint norestrictedglobals global isnan coerces nonnumbers number returning true anything coerces nan behavior desired make explicit bad isnan false isnan true good numberisnan false numberisnannumber true use numberisfinite instead global isfinite eslint norestrictedglobals global isfinite coerces nonnumbers number returning true anything coerces finite number behavior desired make explicit bad isfinitee true good numberisfinitee false numberisfiniteparseinte true back top testing yup function foo return true seriously whichever testing framework use writing test strive write many small pure function minimize mutation occur cautious stub mock make test brittle primarily use mocha jest airbnb tape also used occasionally small separate module test coverage good goal strive even always practical reach whenever fix bug write regression test bug fixed without regression test almost certainly going break future back top performance layout web performance string v array concat trycatch cost loop bang function jquery find v context selector innerhtml v textcontent script text long string concatenation javascript function like map reduce filter optimized traversing array loading back top resource learning e latest ecma spec exploringjs e compatibility table comprehensive overview e feature read standard ecma tool code style linters eslint airbnb style eslintrc jshint airbnb style jshintrc neutrino preset neutrinojsairbnb style guide google javascript style guide google javascript style guide old jquery core style guideline principle writing consistent idiomatic javascript standardjs style naming nested function christian johansen conditional callback ross allen popular javascript coding convention github jeonghoon byun multiple var statement javascript superfluous ben alman reading understanding javascript closure angus croll basic javascript impatient programmer dr axel rauschmayer might need jquery zack bloom adam schwartz e feature luke hoban frontend guideline benjamin de cock book javascript good part douglas crockford javascript pattern stoyan stefanov pro javascript design pattern ross harmes dustin diaz high performance web site essential knowledge frontend engineer steve souders maintainable javascript nicholas c zakas javascript web application alex maccaw pro javascript technique john resig smashing nodejs javascript everywhere guillermo rauch secret javascript ninja john resig bear bibeault human javascript henrik joreteg superherojs kim joar bekkelund mads mobk olav bjorkoy jsbooks julien bouquillon third party javascript ben vinegar anton kovalyov effective javascript specific way harness power javascript david herman eloquent javascript marijn haverbeke dont know j e beyond kyle simpson blog javascript weekly javascript javascript bocoup weblog adequately good nczonline perfection kill ben alman dmitry baranovskiy nettuts podcasts javascript air javascript jabber back top wild list organization using style guide send u pull request well add list erfasst erfasstjavascript blade blade catalyzer catalyzerjavascript aan zee aanzeejavascript adult swim adultswimjavascript airbnb airbnbjavascript altschool altschooljavascript apartmint apartmintjavascript ascribe ascribejavascript avalara avalarajavascript avant avantcreditjavascript axept axeptjavascript bashpros bashprosjavascript billabong billabongjavascript bisk bisk bonhomme bonhommeparisjavascript brainshark brainsharkjavascript casenine caseninejavascript cerner cerner chartboost chartboostjavascriptstyleguide coeur dalene tribe wwwcdatribensngov comparaonline comparaonlinejavascript compass learning compasslearningjavascriptstyleguide dailymotion dailymotionjavascript dosomething dosomethingeslintconfig digitpaint digitpaintjavascript drupal wwwdrupalorg ecosia ecosiajavascript evernote evernotejavascriptstyleguide evolution gaming evolutiongamingjavascript evozonjs evozonjsjavascript exacttarget exacttargetjavascript expensify expensifystyleguide flexberry flexberryjavascriptstyleguide gawker medium gawkermedia general electric generalelectricjavascript generation tux generationtuxjavascript gooddata gooddatagdcjsstyle greenchef greenchefjavascript grooveshark groovesharkjavascript grupoabraxas grupoabraxasjavascript happeo happeojavascript honey honeysciencejavascript howaboutwejavascript huballin huballin hubspot hubspotjavascript hyper hyperoslojavascriptplaybook intercity group intercitygroupjavascriptstyleguide jam jamjavascriptcodeconventions jeopardybot kesnejeopardybot jssolutions jssolutionsjavascript kaplan komputing kaplankomputingjavascript kickorstick kickorstick kinetica solution kineticajavascript leinwand leinwandjavascript lonely planet lonelyplanetjavascript mgen mgenjavascript mighty spring mightyspringjavascript minnpost minnpostjavascript mitocgroup mitocgroupjavascript modcloth modclothjavascript money advice service moneyadviceservicejavascript muber muber national geographic natgeo nimbl nimbljavascript nulldev nulldevcojavascriptstyleguide nulogy nulogyjavascript orange hill development orangehilljavascript orion health orionhealthjavascript outboxsoft outboxsoftjavascript peerby peerbyjavascript pier pierjavascript qotto qottojavascriptstyleguide razorfish razorfishjavascriptstyleguide reddit redditstyleguidejavascript react facebookgithubioreactcontributinghowtocontributehtmlstyleguide rei reidevjsstyleguide ripple ripplejavascriptstyleguide sainsburys supermarket jsainsburyplc seekingalpha seekingalphajavascriptstyleguide shutterfly shutterflyjavascript sourcetoad sourcetoadjavascript springload springload stratodem analytics stratodemjavascript steelkiwi development steelkiwijavascript studentsphere studentspherejavascript swoopapp swoopappjavascript sysgarage sysgaragejavascriptstyleguide syzygy warsaw syzygypljavascript target targetjavascript terra terra theladders theladdersjavascript nerdery thenerderyjavascriptstandards tomify tomprats traitify traitifyeslintconfigtraitify tr technology trtechnologyjavascript urbansim urbansim voxfeed voxfeedjavascriptstyleguide webox studio weboxstudiojavascript weggo weggojavascript zillow zillowjavascript zocdoc zocdocjavascript back top translation style guide also available language brazilian portuguese armoucarjavascriptstyleguide bulgarian borislavvvjavascript catalan fpmwebjavascriptstyleguide chinese simplified linjavascript chinese traditional jigsawyejavascript french nmussyjavascriptstyleguide german timofurrerjavascriptstyleguide italian sinkswimjavascriptstyleguide japanese mitsuruogjavascriptstyleguide korean parksbjavascriptstyleguide russian leonidlebedevjavascriptairbnb spanish paolocarrascojavascriptstyleguide thai lvarayutjavascriptstyleguide turkish eraycetinayjavascript ukrainian ivanzuskojavascript vietnam dangkyokhoangjavascriptstyleguide javascript style guide guide reference chat u javascript find u gitter contributor view contributor license mit license copyright c airbnb permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software back top amendment encourage fork guide change rule fit team style guide may list amendment style guide allows periodically update style guide without deal merge conflict
25,JavaScript,"GitHub - d3/d3: Bring data to life with SVG, Canvas and HTML.","D3: Data-Driven Documents

D3 (or D3.js) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.
Resources

API Reference
Release Notes
Gallery
Examples
Wiki

Installing
If you use npm, npm install d3. Otherwise, download the latest release. The released bundle supports anonymous AMD, CommonJS, and vanilla environments. You can load directly from d3js.org, CDNJS, or unpkg. For example:
<script src=""https://d3js.org/d3.v5.js""></script>
For the minified version:
<script src=""https://d3js.org/d3.v5.min.js""></script>
You can also use the standalone D3 microlibraries. For example, d3-selection:
<script src=""https://d3js.org/d3-selection.v1.js""></script>
D3 is written using ES2015 modules. Create a custom bundle using Rollup, Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:
import {scaleLinear} from ""d3-scale"";
Or import everything into a namespace (here, d3):
import * as d3 from ""d3"";
In Node:
var d3 = require(""d3"");
You can also require individual modules and combine them into a d3 object using Object.assign:
var d3 = Object.assign({}, require(""d3-format""), require(""d3-geo""), require(""d3-geo-projection""));
",datadriven documents djs javascript library visualizing data using web standards helps bring data life using svg canvas html combines powerful visualization interaction techniques datadriven approach dom manipulation giving full capabilities modern browsers freedom design right visual interface data resources api reference release notes gallery examples wiki installing use npm npm install otherwise download latest release released bundle supports anonymous amd commonjs vanilla environments load directly djsorg cdnjs unpkg example script srchttpsdjsorgdvjsscript minified version script srchttpsdjsorgdvminjsscript also use standalone microlibraries example dselection script srchttpsdjsorgdselectionvjsscript written using es modules create custom bundle using rollup webpack preferred bundler import es application either import specific symbols specific modules import scalelinear dscale import everything namespace import node var required also require individual modules combine object using objectassign var objectassign requiredformat requiredgeo requiredgeoprojection,datadriven document dj javascript librari visual data use web standard help bring data life use svg canva html combin power visual interact techniqu datadriven approach dom manipul give full capabl modern browser freedom design right visual interfac data resourc api refer releas note galleri exampl wiki instal use npm npm instal otherwis download latest releas releas bundl support anonym amd commonj vanilla environ load directli djsorg cdnj unpkg exampl script srchttpsdjsorgdvjsscript minifi version script srchttpsdjsorgdvminjsscript also use standalon microlibrari exampl dselect script srchttpsdjsorgdselectionvjsscript written use es modul creat custom bundl use rollup webpack prefer bundler import es applic either import specif symbol specif modul import scalelinear dscale import everyth namespac import node var requir also requir individu modul combin object use objectassign var objectassign requiredformat requiredgeo requiredgeoproject,datadriven document dj javascript library visualizing data using web standard help bring data life using svg canvas html combine powerful visualization interaction technique datadriven approach dom manipulation giving full capability modern browser freedom design right visual interface data resource api reference release note gallery example wiki installing use npm npm install otherwise download latest release released bundle support anonymous amd commonjs vanilla environment load directly djsorg cdnjs unpkg example script srchttpsdjsorgdvjsscript minified version script srchttpsdjsorgdvminjsscript also use standalone microlibraries example dselection script srchttpsdjsorgdselectionvjsscript written using e module create custom bundle using rollup webpack preferred bundler import e application either import specific symbol specific module import scalelinear dscale import everything namespace import node var required also require individual module combine object using objectassign var objectassign requiredformat requiredgeo requiredgeoprojection
26,JavaScript,GitHub - facebook/react-native: A framework for building native apps with React.,"

    React Native
  


Learn once, write anywhere:
  Build mobile apps with React.






















Getting Started
 ¬∑ 
Learn the Basics
 ¬∑ 
Showcase
 ¬∑ 
Contribute
 ¬∑ 
Community
 ¬∑ 
Support

React Native brings React's declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.

Declarative. React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.
Component-Based. Build encapsulated components that manage their state, then compose them to make complex UIs.
Developer Velocity. See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.
Portability. Reuse code across iOS, Android, and other platforms.

React Native is developed and supported by many companies and individual core contributors. Find out more in our ecosystem overview.
Contents

Requirements
Building your first React Native app
Documentation
Upgrading
How to Contribute
Code of Conduct
License

üìã Requirements
React Native apps may target iOS 9.0 and Android 4.1 (API 16) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like Expo can be used to work around this.
üéâ Building your first React Native app
Follow the Getting Started guide. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:

Trying out React Native
Creating a New Application
Adding React Native to an Existing Application

üìñ Documentation
The full documentation for React Native can be found on our website.
The React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the React documentation.
The source for the React Native documentation and website is hosted on a separate repo, @facebook/react-native-website.
üöÄ Upgrading
Upgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the Upgrading Guide for instructions.
React Native releases are discussed in the React Native Community, @react-native-community/react-native-releases.
üëè How to Contribute
The main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.
Code of Conduct
Facebook has adopted a Code of Conduct that we expect project participants to adhere to.
Please read the full text so that you can understand what actions will and will not be tolerated.
Contributing Guide
Read our Contributing Guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.
Open Source Roadmap
You can learn more about our vision for React Native in the Roadmap.
Good First Issues
We have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.
Discussions
Larger discussions and proposals are discussed in @react-native-community/discussions-and-proposals.
üìÑ License
React Native is MIT licensed, as found in the LICENSE file.
React Native documentation is Creative Commons licensed, as found in the LICENSE-docs file.
",react native learn write anywhere build mobile apps react getting started learn basics showcase contribute community support react native brings reacts declarative ui framework ios android react native use native ui controls full access native platform declarative react makes painless create interactive uis declarative views make code predictable easier debug componentbased build encapsulated components manage state compose make complex uis developer velocity see local changes seconds changes javascript code live reloaded without rebuilding native app portability reuse code across ios android platforms react native developed supported many companies individual core contributors find ecosystem overview contents requirements building first react native app documentation upgrading contribute code conduct license requirements react native apps may target ios android api newer may use windows macos linux development operating system though building running ios apps limited macos tools like expo used work around building first react native app follow getting started guide recommended way install react native depends project find short guides common scenarios trying react native creating new application adding react native existing application documentation full documentation react native found website react native documentation discusses components apis topics specific react native documentation react api shared react native react dom refer react documentation source react native documentation website hosted separate repo facebookreactnativewebsite upgrading upgrading new versions react native may give access apis views developer tools goodies see upgrading guide instructions react native releases discussed react native community reactnativecommunityreactnativereleases contribute main purpose repository continue evolving react native core want make contributing project easy transparent possible grateful community contributing bug fixes improvements read learn take part improving react native code conduct facebook adopted code conduct expect project participants adhere please read full text understand actions tolerated contributing guide read contributing guide learn development process propose bugfixes improvements build test changes react native open source roadmap learn vision react native roadmap good first issues list good first issues contain bugs relatively limited scope great place get started gain experience get familiar contribution process discussions larger discussions proposals discussed reactnativecommunitydiscussionsandproposals license react native mit licensed found license file react native documentation creative commons licensed found licensedocs file,react nativ learn write anywher build mobil app react get start learn basic showcas contribut commun support react nativ bring react declar ui framework io android react nativ use nativ ui control full access nativ platform declar react make painless creat interact ui declar view make code predict easier debug componentbas build encapsul compon manag state compos make complex ui develop veloc see local chang second chang javascript code live reload without rebuild nativ app portabl reus code across io android platform react nativ develop support mani compani individu core contributor find ecosystem overview content requir build first react nativ app document upgrad contribut code conduct licens requir react nativ app may target io android api newer may use window maco linux develop oper system though build run io app limit maco tool like expo use work around build first react nativ app follow get start guid recommend way instal react nativ depend project find short guid common scenario tri react nativ creat new applic ad react nativ exist applic document full document react nativ found websit react nativ document discuss compon api topic specif react nativ document react api share react nativ react dom refer react document sourc react nativ document websit host separ repo facebookreactnativewebsit upgrad upgrad new version react nativ may give access api view develop tool goodi see upgrad guid instruct react nativ releas discuss react nativ commun reactnativecommunityreactnativereleas contribut main purpos repositori continu evolv react nativ core want make contribut project easi transpar possibl grate commun contribut bug fix improv read learn take part improv react nativ code conduct facebook adopt code conduct expect project particip adher pleas read full text understand action toler contribut guid read contribut guid learn develop process propos bugfix improv build test chang react nativ open sourc roadmap learn vision react nativ roadmap good first issu list good first issu contain bug rel limit scope great place get start gain experi get familiar contribut process discuss larger discuss propos discuss reactnativecommunitydiscussionsandpropos licens react nativ mit licens found licens file react nativ document creativ common licens found licensedoc file,react native learn write anywhere build mobile apps react getting started learn basic showcase contribute community support react native brings reacts declarative ui framework io android react native use native ui control full access native platform declarative react make painless create interactive uis declarative view make code predictable easier debug componentbased build encapsulated component manage state compose make complex uis developer velocity see local change second change javascript code live reloaded without rebuilding native app portability reuse code across io android platform react native developed supported many company individual core contributor find ecosystem overview content requirement building first react native app documentation upgrading contribute code conduct license requirement react native apps may target io android api newer may use window macos linux development operating system though building running io apps limited macos tool like expo used work around building first react native app follow getting started guide recommended way install react native depends project find short guide common scenario trying react native creating new application adding react native existing application documentation full documentation react native found website react native documentation discus component apis topic specific react native documentation react api shared react native react dom refer react documentation source react native documentation website hosted separate repo facebookreactnativewebsite upgrading upgrading new version react native may give access apis view developer tool goody see upgrading guide instruction react native release discussed react native community reactnativecommunityreactnativereleases contribute main purpose repository continue evolving react native core want make contributing project easy transparent possible grateful community contributing bug fix improvement read learn take part improving react native code conduct facebook adopted code conduct expect project participant adhere please read full text understand action tolerated contributing guide read contributing guide learn development process propose bugfixes improvement build test change react native open source roadmap learn vision react native roadmap good first issue list good first issue contain bug relatively limited scope great place get started gain experience get familiar contribution process discussion larger discussion proposal discussed reactnativecommunitydiscussionsandproposals license react native mit licensed found license file react native documentation creative common licensed found licensedocs file
27,JavaScript,GitHub - facebook/create-react-app: Set up a modern web app by running one command.,"Create React App  
Create React apps with no build configuration.

Creating an App ‚Äì How to create a new app.
User Guide ‚Äì How to develop apps bootstrapped with Create React App.

Create React App works on macOS, Windows, and Linux.
If something doesn‚Äôt work, please file an issue.
If you have questions or need help, please ask in our Spectrum community.
Quick Overview
npx create-react-app my-app
cd my-app
npm start
(npx comes with npm 5.2+ and higher, see instructions for older npm versions)
Then open http://localhost:3000/ to see your app.
When you‚Äôre ready to deploy to production, create a minified bundle with npm run build.



Get Started Immediately
You don‚Äôt need to install or configure tools like Webpack or Babel.
They are preconfigured and hidden so that you can focus on the code.
Create a project, and you‚Äôre good to go.
Creating an App
You‚Äôll need to have Node 8.16.0 or Node 10.16.0 or later version on your local development machine (but it‚Äôs not required on the server). You can use nvm (macOS/Linux) or nvm-windows to switch Node versions between different projects.
To create a new app, you may choose one of the following methods:
npx
npx create-react-app my-app
(npx is a package runner tool that comes with npm 5.2+ and higher, see instructions for older npm versions)
npm
npm init react-app my-app
npm init <initializer> is available in npm 6+
Yarn
yarn create react-app my-app
yarn create is available in Yarn 0.25+
It will create a directory called my-app inside the current folder.
Inside that directory, it will generate the initial project structure and install the transitive dependencies:
my-app
‚îú‚îÄ‚îÄ README.md
‚îú‚îÄ‚îÄ node_modules
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ .gitignore
‚îú‚îÄ‚îÄ public
‚îÇ   ‚îú‚îÄ‚îÄ favicon.ico
‚îÇ   ‚îú‚îÄ‚îÄ index.html
‚îÇ   ‚îî‚îÄ‚îÄ manifest.json
‚îî‚îÄ‚îÄ src
    ‚îú‚îÄ‚îÄ App.css
    ‚îú‚îÄ‚îÄ App.js
    ‚îú‚îÄ‚îÄ App.test.js
    ‚îú‚îÄ‚îÄ index.css
    ‚îú‚îÄ‚îÄ index.js
    ‚îú‚îÄ‚îÄ logo.svg
    ‚îî‚îÄ‚îÄ serviceWorker.js

No configuration or complicated folder structures, only the files you need to build your app.
Once the installation is done, you can open your project folder:
cd my-app
Inside the newly created project, you can run some built-in commands:
npm start or yarn start
Runs the app in development mode.
Open http://localhost:3000 to view it in the browser.
The page will automatically reload if you make changes to the code.
You will see the build errors and lint warnings in the console.



npm test or yarn test
Runs the test watcher in an interactive mode.
By default, runs tests related to files changed since the last commit.
Read more about testing.
npm run build or yarn build
Builds the app for production to the build folder.
It correctly bundles React in production mode and optimizes the build for the best performance.
The build is minified and the filenames include the hashes.
Your app is ready to be deployed.
User Guide
You can find detailed instructions on using Create React App and many tips in its documentation.
How to Update to New Versions?
Please refer to the User Guide for this and other information.
Philosophy


One Dependency: There is only one build dependency. It uses Webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.


No Configuration Required: You don't need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.


No Lock-In: You can ‚Äúeject‚Äù to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.


What‚Äôs Included?
Your environment will have everything you need to build a modern single-page React app:

React, JSX, ES6, TypeScript and Flow syntax support.
Language extras beyond ES6 like the object spread operator.
Autoprefixed CSS, so you don‚Äôt need -webkit- or other prefixes.
A fast interactive unit test runner with built-in support for coverage reporting.
A live development server that warns about common mistakes.
A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.
An offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria. (Note: Using the service worker is opt-in as of react-scripts@2.0.0 and higher)
Hassle-free updates for the above tools with a single dependency.

Check out this guide for an overview of how these tools fit together.
The tradeoff is that these tools are preconfigured to work in a specific way. If your project needs more customization, you can ""eject"" and customize it, but then you will need to maintain this configuration.
Popular Alternatives
Create React App is a great fit for:

Learning React in a comfortable and feature-rich development environment.
Starting new single-page React applications.
Creating examples with React for your libraries and components.

Here are a few common cases where you might want to try something else:


If you want to try React without hundreds of transitive build tool dependencies, consider using a single HTML file or an online sandbox instead.


If you need to integrate React code with a server-side template framework like Rails, Django or Symfony, or if you‚Äôre not building a single-page app, consider using nwb, or Neutrino which are more flexible. For Rails specifically, you can use Rails Webpacker. For Symfony, try Symfony's Webpack Encore.


If you need to publish a React component, nwb can also do this, as well as Neutrino's react-components preset.


If you want to do server rendering with React and Node.js, check out Next.js or Razzle. Create React App is agnostic of the backend, and only produces static HTML/JS/CSS bundles.


If your website is mostly static (for example, a portfolio or a blog), consider using Gatsby instead. Unlike Create React App, it pre-renders the website into HTML at the build time.


Finally, if you need more customization, check out Neutrino and its React preset.


All of the above tools can work with little to no configuration.
If you prefer configuring the build yourself, follow this guide.
React Native
Looking for something similar, but for React Native?
Check out Expo CLI.
Contributing
We'd love to have your helping hand on create-react-app! See CONTRIBUTING.md for more information on what we're looking for and how to get started.
Credits
This project exists thanks to all the people who contribute.

Acknowledgements
We are grateful to the authors of existing related projects for their ideas and collaboration:

@eanplatter
@insin
@mxstbr

License
Create React App is open source software licensed as MIT.
",create react app create react apps build configuration creating app create new app user guide develop apps bootstrapped create react app create react app works macos windows linux something doesnt work please file issue questions need help please ask spectrum community quick overview npx createreactapp myapp cd myapp npm start npx comes npm higher see instructions older npm versions open httplocalhost see app youre ready deploy production create minified bundle npm run build get started immediately dont need install configure tools like webpack babel preconfigured hidden focus code create project youre good go creating app youll need node node later version local development machine required server use nvm macoslinux nvmwindows switch node versions different projects create new app may choose one following methods npx npx createreactapp myapp npx package runner tool comes npm higher see instructions older npm versions npm npm init reactapp myapp npm init initializer available npm yarn yarn create reactapp myapp yarn create available yarn create directory called myapp inside current folder inside directory generate initial project structure install transitive dependencies myapp readmemd nodemodules packagejson gitignore public faviconico indexhtml manifestjson src appcss appjs apptestjs indexcss indexjs logosvg serviceworkerjs configuration complicated folder structures files need build app installation done open project folder cd myapp inside newly created project run builtin commands npm start yarn start runs app development mode open httplocalhost view browser page automatically reload make changes code see build errors lint warnings console npm test yarn test runs test watcher interactive mode default runs tests related files changed since last commit read testing npm run build yarn build builds app production build folder correctly bundles react production mode optimizes build best performance build minified filenames include hashes app ready deployed user guide find detailed instructions using create react app many tips documentation update new versions please refer user guide information philosophy one dependency one build dependency uses webpack babel eslint amazing projects provides cohesive curated experience top configuration required dont need configure anything reasonably good configuration development production builds handled focus writing code lockin eject custom setup time run single command configuration build dependencies moved directly project pick right left whats included environment everything need build modern singlepage react app react jsx es typescript flow syntax support language extras beyond es like object spread operator autoprefixed css dont need webkit prefixes fast interactive unit test runner builtin support coverage reporting live development server warns common mistakes build script bundle js css images production hashes sourcemaps offlinefirst service worker web app manifest meeting progressive web app criteria note using service worker optin reactscripts higher hasslefree updates tools single dependency check guide overview tools fit together tradeoff tools preconfigured work specific way project needs customization eject customize need maintain configuration popular alternatives create react app great fit learning react comfortable featurerich development environment starting new singlepage react applications creating examples react libraries components common cases might want try something else want try react without hundreds transitive build tool dependencies consider using single html file online sandbox instead need integrate react code serverside template framework like rails django symfony youre building singlepage app consider using nwb neutrino flexible rails specifically use rails webpacker symfony try symfonys webpack encore need publish react component nwb also well neutrinos reactcomponents preset want server rendering react nodejs check nextjs razzle create react app agnostic backend produces static htmljscss bundles website mostly static example portfolio blog consider using gatsby instead unlike create react app prerenders website html build time finally need customization check neutrino react preset tools work little configuration prefer configuring build follow guide react native looking something similar react native check expo cli contributing wed love helping hand createreactapp see contributingmd information looking get started credits project exists thanks people contribute acknowledgements grateful authors existing related projects ideas collaboration eanplatter insin mxstbr license create react app open source software licensed mit,creat react app creat react app build configur creat app creat new app user guid develop app bootstrap creat react app creat react app work maco window linux someth doesnt work pleas file issu question need help pleas ask spectrum commun quick overview npx createreactapp myapp cd myapp npm start npx come npm higher see instruct older npm version open httplocalhost see app your readi deploy product creat minifi bundl npm run build get start immedi dont need instal configur tool like webpack babel preconfigur hidden focu code creat project your good go creat app youll need node node later version local develop machin requir server use nvm macoslinux nvmwindow switch node version differ project creat new app may choos one follow method npx npx createreactapp myapp npx packag runner tool come npm higher see instruct older npm version npm npm init reactapp myapp npm init initi avail npm yarn yarn creat reactapp myapp yarn creat avail yarn creat directori call myapp insid current folder insid directori gener initi project structur instal transit depend myapp readmemd nodemodul packagejson gitignor public faviconico indexhtml manifestjson src appcss appj apptestj indexcss indexj logosvg serviceworkerj configur complic folder structur file need build app instal done open project folder cd myapp insid newli creat project run builtin command npm start yarn start run app develop mode open httplocalhost view browser page automat reload make chang code see build error lint warn consol npm test yarn test run test watcher interact mode default run test relat file chang sinc last commit read test npm run build yarn build build app product build folder correctli bundl react product mode optim build best perform build minifi filenam includ hash app readi deploy user guid find detail instruct use creat react app mani tip document updat new version pleas refer user guid inform philosophi one depend one build depend use webpack babel eslint amaz project provid cohes curat experi top configur requir dont need configur anyth reason good configur develop product build handl focu write code lockin eject custom setup time run singl command configur build depend move directli project pick right left what includ environ everyth need build modern singlepag react app react jsx es typescript flow syntax support languag extra beyond es like object spread oper autoprefix css dont need webkit prefix fast interact unit test runner builtin support coverag report live develop server warn common mistak build script bundl js css imag product hash sourcemap offlinefirst servic worker web app manifest meet progress web app criteria note use servic worker optin reactscript higher hasslefre updat tool singl depend check guid overview tool fit togeth tradeoff tool preconfigur work specif way project need custom eject custom need maintain configur popular altern creat react app great fit learn react comfort featurerich develop environ start new singlepag react applic creat exampl react librari compon common case might want tri someth els want tri react without hundr transit build tool depend consid use singl html file onlin sandbox instead need integr react code serversid templat framework like rail django symfoni your build singlepag app consid use nwb neutrino flexibl rail specif use rail webpack symfoni tri symfoni webpack encor need publish react compon nwb also well neutrino reactcompon preset want server render react nodej check nextj razzl creat react app agnost backend produc static htmljscss bundl websit mostli static exampl portfolio blog consid use gatsbi instead unlik creat react app prerend websit html build time final need custom check neutrino react preset tool work littl configur prefer configur build follow guid react nativ look someth similar react nativ check expo cli contribut wed love help hand createreactapp see contributingmd inform look get start credit project exist thank peopl contribut acknowledg grate author exist relat project idea collabor eanplatt insin mxstbr licens creat react app open sourc softwar licens mit,create react app create react apps build configuration creating app create new app user guide develop apps bootstrapped create react app create react app work macos window linux something doesnt work please file issue question need help please ask spectrum community quick overview npx createreactapp myapp cd myapp npm start npx come npm higher see instruction older npm version open httplocalhost see app youre ready deploy production create minified bundle npm run build get started immediately dont need install configure tool like webpack babel preconfigured hidden focus code create project youre good go creating app youll need node node later version local development machine required server use nvm macoslinux nvmwindows switch node version different project create new app may choose one following method npx npx createreactapp myapp npx package runner tool come npm higher see instruction older npm version npm npm init reactapp myapp npm init initializer available npm yarn yarn create reactapp myapp yarn create available yarn create directory called myapp inside current folder inside directory generate initial project structure install transitive dependency myapp readmemd nodemodules packagejson gitignore public faviconico indexhtml manifestjson src appcss appjs apptestjs indexcss indexjs logosvg serviceworkerjs configuration complicated folder structure file need build app installation done open project folder cd myapp inside newly created project run builtin command npm start yarn start run app development mode open httplocalhost view browser page automatically reload make change code see build error lint warning console npm test yarn test run test watcher interactive mode default run test related file changed since last commit read testing npm run build yarn build build app production build folder correctly bundle react production mode optimizes build best performance build minified filename include hash app ready deployed user guide find detailed instruction using create react app many tip documentation update new version please refer user guide information philosophy one dependency one build dependency us webpack babel eslint amazing project provides cohesive curated experience top configuration required dont need configure anything reasonably good configuration development production build handled focus writing code lockin eject custom setup time run single command configuration build dependency moved directly project pick right left whats included environment everything need build modern singlepage react app react jsx e typescript flow syntax support language extra beyond e like object spread operator autoprefixed cs dont need webkit prefix fast interactive unit test runner builtin support coverage reporting live development server warns common mistake build script bundle j cs image production hash sourcemaps offlinefirst service worker web app manifest meeting progressive web app criterion note using service worker optin reactscripts higher hasslefree update tool single dependency check guide overview tool fit together tradeoff tool preconfigured work specific way project need customization eject customize need maintain configuration popular alternative create react app great fit learning react comfortable featurerich development environment starting new singlepage react application creating example react library component common case might want try something else want try react without hundred transitive build tool dependency consider using single html file online sandbox instead need integrate react code serverside template framework like rail django symfony youre building singlepage app consider using nwb neutrino flexible rail specifically use rail webpacker symfony try symfonys webpack encore need publish react component nwb also well neutrino reactcomponents preset want server rendering react nodejs check nextjs razzle create react app agnostic backend produce static htmljscss bundle website mostly static example portfolio blog consider using gatsby instead unlike create react app prerenders website html build time finally need customization check neutrino react preset tool work little configuration prefer configuring build follow guide react native looking something similar react native check expo cli contributing wed love helping hand createreactapp see contributingmd information looking get started credit project exists thanks people contribute acknowledgement grateful author existing related project idea collaboration eanplatter insin mxstbr license create react app open source software licensed mit
28,JavaScript,GitHub - axios/axios: Promise based HTTP client for the browser and node.js,"axios







Promise based HTTP client for the browser and node.js
Features

Make XMLHttpRequests from the browser
Make http requests from node.js
Supports the Promise API
Intercept request and response
Transform request and response data
Cancel requests
Automatic transforms for JSON data
Client side support for protecting against XSRF

Browser Support













Latest ‚úî
Latest ‚úî
Latest ‚úî
Latest ‚úî
Latest ‚úî
11 ‚úî




Installing
Using npm:
$ npm install axios
Using bower:
$ bower install axios
Using yarn:
$ yarn add axios
Using cdn:
<script src=""https://unpkg.com/axios/dist/axios.min.js""></script>
Example
note: CommonJS usage
In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with require() use the following approach:
const axios = require('axios').default;

// axios.<method> will now provide autocomplete and parameter typings
Performing a GET request
const axios = require('axios');

// Make a request for a user with a given ID
axios.get('/user?ID=12345')
  .then(function (response) {
    // handle success
    console.log(response);
  })
  .catch(function (error) {
    // handle error
    console.log(error);
  })
  .finally(function () {
    // always executed
  });

// Optionally the request above could also be done as
axios.get('/user', {
    params: {
      ID: 12345
    }
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  })
  .finally(function () {
    // always executed
  });  

// Want to use async/await? Add the `async` keyword to your outer function/method.
async function getUser() {
  try {
    const response = await axios.get('/user?ID=12345');
    console.log(response);
  } catch (error) {
    console.error(error);
  }
}

NOTE: async/await is part of ECMAScript 2017 and is not supported in Internet
Explorer and older browsers, so use with caution.

Performing a POST request
axios.post('/user', {
    firstName: 'Fred',
    lastName: 'Flintstone'
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });
Performing multiple concurrent requests
function getUserAccount() {
  return axios.get('/user/12345');
}

function getUserPermissions() {
  return axios.get('/user/12345/permissions');
}

axios.all([getUserAccount(), getUserPermissions()])
  .then(axios.spread(function (acct, perms) {
    // Both requests are now complete
  }));
axios API
Requests can be made by passing the relevant config to axios.
axios(config)
// Send a POST request
axios({
  method: 'post',
  url: '/user/12345',
  data: {
    firstName: 'Fred',
    lastName: 'Flintstone'
  }
});
// GET request for remote image
axios({
  method: 'get',
  url: 'http://bit.ly/2mTM3nY',
  responseType: 'stream'
})
  .then(function (response) {
    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))
  });
axios(url[, config])
// Send a GET request (default method)
axios('/user/12345');
Request method aliases
For convenience aliases have been provided for all supported request methods.
axios.request(config)
axios.get(url[, config])
axios.delete(url[, config])
axios.head(url[, config])
axios.options(url[, config])
axios.post(url[, data[, config]])
axios.put(url[, data[, config]])
axios.patch(url[, data[, config]])
NOTE
When using the alias methods url, method, and data properties don't need to be specified in config.
Concurrency
Helper functions for dealing with concurrent requests.
axios.all(iterable)
axios.spread(callback)
Creating an instance
You can create a new instance of axios with a custom config.
axios.create([config])
const instance = axios.create({
  baseURL: 'https://some-domain.com/api/',
  timeout: 1000,
  headers: {'X-Custom-Header': 'foobar'}
});
Instance methods
The available instance methods are listed below. The specified config will be merged with the instance config.
axios#request(config)
axios#get(url[, config])
axios#delete(url[, config])
axios#head(url[, config])
axios#options(url[, config])
axios#post(url[, data[, config]])
axios#put(url[, data[, config]])
axios#patch(url[, data[, config]])
axios#getUri([config])
Request Config
These are the available config options for making requests. Only the url is required. Requests will default to GET if method is not specified.
{
  // `url` is the server URL that will be used for the request
  url: '/user',

  // `method` is the request method to be used when making the request
  method: 'get', // default

  // `baseURL` will be prepended to `url` unless `url` is absolute.
  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs
  // to methods of that instance.
  baseURL: 'https://some-domain.com/api/',

  // `transformRequest` allows changes to the request data before it is sent to the server
  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'
  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,
  // FormData or Stream
  // You may modify the headers object.
  transformRequest: [function (data, headers) {
    // Do whatever you want to transform the data

    return data;
  }],

  // `transformResponse` allows changes to the response data to be made before
  // it is passed to then/catch
  transformResponse: [function (data) {
    // Do whatever you want to transform the data

    return data;
  }],

  // `headers` are custom headers to be sent
  headers: {'X-Requested-With': 'XMLHttpRequest'},

  // `params` are the URL parameters to be sent with the request
  // Must be a plain object or a URLSearchParams object
  params: {
    ID: 12345
  },

  // `paramsSerializer` is an optional function in charge of serializing `params`
  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)
  paramsSerializer: function (params) {
    return Qs.stringify(params, {arrayFormat: 'brackets'})
  },

  // `data` is the data to be sent as the request body
  // Only applicable for request methods 'PUT', 'POST', and 'PATCH'
  // When no `transformRequest` is set, must be of one of the following types:
  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams
  // - Browser only: FormData, File, Blob
  // - Node only: Stream, Buffer
  data: {
    firstName: 'Fred'
  },
  
  // syntax alternative to send data into the body
  // method post
  // only the value is sent, not the key
  data: 'Country=Brasil&City=Belo Horizonte',

  // `timeout` specifies the number of milliseconds before the request times out.
  // If the request takes longer than `timeout`, the request will be aborted.
  timeout: 1000, // default is `0` (no timeout)

  // `withCredentials` indicates whether or not cross-site Access-Control requests
  // should be made using credentials
  withCredentials: false, // default

  // `adapter` allows custom handling of requests which makes testing easier.
  // Return a promise and supply a valid response (see lib/adapters/README.md).
  adapter: function (config) {
    /* ... */
  },

  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.
  // This will set an `Authorization` header, overwriting any existing
  // `Authorization` custom headers you have set using `headers`.
  // Please note that only HTTP Basic auth is configurable through this parameter.
  // For Bearer tokens and such, use `Authorization` custom headers instead.
  auth: {
    username: 'janedoe',
    password: 's00pers3cret'
  },

  // `responseType` indicates the type of data that the server will respond with
  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'
  //   browser only: 'blob'
  responseType: 'json', // default

  // `responseEncoding` indicates encoding to use for decoding responses
  // Note: Ignored for `responseType` of 'stream' or client-side requests
  responseEncoding: 'utf8', // default

  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token
  xsrfCookieName: 'XSRF-TOKEN', // default

  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value
  xsrfHeaderName: 'X-XSRF-TOKEN', // default

  // `onUploadProgress` allows handling of progress events for uploads
  onUploadProgress: function (progressEvent) {
    // Do whatever you want with the native progress event
  },

  // `onDownloadProgress` allows handling of progress events for downloads
  onDownloadProgress: function (progressEvent) {
    // Do whatever you want with the native progress event
  },

  // `maxContentLength` defines the max size of the http response content in bytes allowed
  maxContentLength: 2000,

  // `validateStatus` defines whether to resolve or reject the promise for a given
  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`
  // or `undefined`), the promise will be resolved; otherwise, the promise will be
  // rejected.
  validateStatus: function (status) {
    return status >= 200 && status < 300; // default
  },

  // `maxRedirects` defines the maximum number of redirects to follow in node.js.
  // If set to 0, no redirects will be followed.
  maxRedirects: 5, // default

  // `socketPath` defines a UNIX Socket to be used in node.js.
  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.
  // Only either `socketPath` or `proxy` can be specified.
  // If both are specified, `socketPath` is used.
  socketPath: null, // default

  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http
  // and https requests, respectively, in node.js. This allows options to be added like
  // `keepAlive` that are not enabled by default.
  httpAgent: new http.Agent({ keepAlive: true }),
  httpsAgent: new https.Agent({ keepAlive: true }),

  // 'proxy' defines the hostname and port of the proxy server.
  // You can also define your proxy using the conventional `http_proxy` and
  // `https_proxy` environment variables. If you are using environment variables
  // for your proxy configuration, you can also define a `no_proxy` environment
  // variable as a comma-separated list of domains that should not be proxied.
  // Use `false` to disable proxies, ignoring environment variables.
  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and
  // supplies credentials.
  // This will set an `Proxy-Authorization` header, overwriting any existing
  // `Proxy-Authorization` custom headers you have set using `headers`.
  proxy: {
    host: '127.0.0.1',
    port: 9000,
    auth: {
      username: 'mikeymike',
      password: 'rapunz3l'
    }
  },

  // `cancelToken` specifies a cancel token that can be used to cancel the request
  // (see Cancellation section below for details)
  cancelToken: new CancelToken(function (cancel) {
  })
}
Response Schema
The response for a request contains the following information.
{
  // `data` is the response that was provided by the server
  data: {},

  // `status` is the HTTP status code from the server response
  status: 200,

  // `statusText` is the HTTP status message from the server response
  statusText: 'OK',

  // `headers` the headers that the server responded with
  // All header names are lower cased
  headers: {},

  // `config` is the config that was provided to `axios` for the request
  config: {},

  // `request` is the request that generated this response
  // It is the last ClientRequest instance in node.js (in redirects)
  // and an XMLHttpRequest instance in the browser
  request: {}
}
When using then, you will receive the response as follows:
axios.get('/user/12345')
  .then(function (response) {
    console.log(response.data);
    console.log(response.status);
    console.log(response.statusText);
    console.log(response.headers);
    console.log(response.config);
  });
When using catch, or passing a rejection callback as second parameter of then, the response will be available through the error object as explained in the Handling Errors section.
Config Defaults
You can specify config defaults that will be applied to every request.
Global axios defaults
axios.defaults.baseURL = 'https://api.example.com';
axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;
axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
Custom instance defaults
// Set config defaults when creating the instance
const instance = axios.create({
  baseURL: 'https://api.example.com'
});

// Alter defaults after instance has been created
instance.defaults.headers.common['Authorization'] = AUTH_TOKEN;
Config order of precedence
Config will be merged with an order of precedence. The order is library defaults found in lib/defaults.js, then defaults property of the instance, and finally config argument for the request. The latter will take precedence over the former. Here's an example.
// Create an instance using the config defaults provided by the library
// At this point the timeout config value is `0` as is the default for the library
const instance = axios.create();

// Override timeout default for the library
// Now all requests using this instance will wait 2.5 seconds before timing out
instance.defaults.timeout = 2500;

// Override timeout for this request as it's known to take a long time
instance.get('/longRequest', {
  timeout: 5000
});
Interceptors
You can intercept requests or responses before they are handled by then or catch.
// Add a request interceptor
axios.interceptors.request.use(function (config) {
    // Do something before request is sent
    return config;
  }, function (error) {
    // Do something with request error
    return Promise.reject(error);
  });

// Add a response interceptor
axios.interceptors.response.use(function (response) {
    // Any status code that lie within the range of 2xx cause this function to trigger
    // Do something with response data
    return response;
  }, function (error) {
    // Any status codes that falls outside the range of 2xx cause this function to trigger
    // Do something with response error
    return Promise.reject(error);
  });
If you need to remove an interceptor later you can.
const myInterceptor = axios.interceptors.request.use(function () {/*...*/});
axios.interceptors.request.eject(myInterceptor);
You can add interceptors to a custom instance of axios.
const instance = axios.create();
instance.interceptors.request.use(function () {/*...*/});
Handling Errors
axios.get('/user/12345')
  .catch(function (error) {
    if (error.response) {
      // The request was made and the server responded with a status code
      // that falls out of the range of 2xx
      console.log(error.response.data);
      console.log(error.response.status);
      console.log(error.response.headers);
    } else if (error.request) {
      // The request was made but no response was received
      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of
      // http.ClientRequest in node.js
      console.log(error.request);
    } else {
      // Something happened in setting up the request that triggered an Error
      console.log('Error', error.message);
    }
    console.log(error.config);
  });
Using the validateStatus config option, you can define HTTP code(s) that should throw an error.
axios.get('/user/12345', {
  validateStatus: function (status) {
    return status < 500; // Reject only if the status code is greater than or equal to 500
  }
})
Using toJSON you get an object with more information about the HTTP error.
axios.get('/user/12345')
  .catch(function (error) {
    console.log(error.toJSON());
  });
Cancellation
You can cancel a request using a cancel token.

The axios cancel token API is based on the withdrawn cancelable promises proposal.

You can create a cancel token using the CancelToken.source factory as shown below:
const CancelToken = axios.CancelToken;
const source = CancelToken.source();

axios.get('/user/12345', {
  cancelToken: source.token
}).catch(function (thrown) {
  if (axios.isCancel(thrown)) {
    console.log('Request canceled', thrown.message);
  } else {
    // handle error
  }
});

axios.post('/user/12345', {
  name: 'new name'
}, {
  cancelToken: source.token
})

// cancel the request (the message parameter is optional)
source.cancel('Operation canceled by the user.');
You can also create a cancel token by passing an executor function to the CancelToken constructor:
const CancelToken = axios.CancelToken;
let cancel;

axios.get('/user/12345', {
  cancelToken: new CancelToken(function executor(c) {
    // An executor function receives a cancel function as a parameter
    cancel = c;
  })
});

// cancel the request
cancel();

Note: you can cancel several requests with the same cancel token.

Using application/x-www-form-urlencoded format
By default, axios serializes JavaScript objects to JSON. To send data in the application/x-www-form-urlencoded format instead, you can use one of the following options.
Browser
In a browser, you can use the URLSearchParams API as follows:
const params = new URLSearchParams();
params.append('param1', 'value1');
params.append('param2', 'value2');
axios.post('/foo', params);

Note that URLSearchParams is not supported by all browsers (see caniuse.com), but there is a polyfill available (make sure to polyfill the global environment).

Alternatively, you can encode data using the qs library:
const qs = require('qs');
axios.post('/foo', qs.stringify({ 'bar': 123 }));
Or in another way (ES6),
import qs from 'qs';
const data = { 'bar': 123 };
const options = {
  method: 'POST',
  headers: { 'content-type': 'application/x-www-form-urlencoded' },
  data: qs.stringify(data),
  url,
};
axios(options);
Node.js
In node.js, you can use the querystring module as follows:
const querystring = require('querystring');
axios.post('http://something.com/', querystring.stringify({ foo: 'bar' }));
You can also use the qs library.
NOTE
The qs library is preferable if you need to stringify nested objects, as the querystring method has known issues with that use case (https://github.com/nodejs/node-v0.x-archive/issues/1665).
Semver
Until axios reaches a 1.0 release, breaking changes will be released with a new minor version. For example 0.5.1, and 0.5.4 will have the same API, but 0.6.0 will have breaking changes.
Promises
axios depends on a native ES6 Promise implementation to be supported.
If your environment doesn't support ES6 Promises, you can polyfill.
TypeScript
axios includes TypeScript definitions.
import axios from 'axios';
axios.get('/user?ID=12345');
Resources

Changelog
Upgrade Guide
Ecosystem
Contributing Guide
Code of Conduct

Credits
axios is heavily inspired by the $http service provided in Angular. Ultimately axios is an effort to provide a standalone $http-like service for use outside of Angular.
License
MIT
",axios promise based http client browser nodejs features make xmlhttprequests browser make http requests nodejs supports promise api intercept request response transform request response data cancel requests automatic transforms json data client side support protecting xsrf browser support latest latest latest latest latest installing using npm npm install axios using bower bower install axios using yarn yarn add axios using cdn script srchttpsunpkgcomaxiosdistaxiosminjsscript example note commonjs usage order gain typescript typings intellisense autocomplete using commonjs imports require use following approach const axios requireaxiosdefault axiosmethod provide autocomplete parameter typings performing get request const axios requireaxios make request user given id axiosgetuserid thenfunction response handle success consolelogresponse catchfunction error handle error consolelogerror finallyfunction always executed optionally request could also done axiosgetuser params id thenfunction response consolelogresponse catchfunction error consolelogerror finallyfunction always executed want use asyncawait add async keyword outer functionmethod async function getuser try const response await axiosgetuserid consolelogresponse catch error consoleerrorerror note asyncawait part ecmascript supported internet explorer older browsers use caution performing post request axiospostuser firstname fred lastname flintstone thenfunction response consolelogresponse catchfunction error consolelogerror performing multiple concurrent requests function getuseraccount return axiosgetuser function getuserpermissions return axiosgetuserpermissions axiosallgetuseraccount getuserpermissions thenaxiosspreadfunction acct perms requests complete axios api requests made passing relevant config axios axiosconfig send post request axios method post url user data firstname fred lastname flintstone get request remote image axios method get url httpbitlymtmny responsetype stream thenfunction response responsedatapipefscreatewritestreamadalovelacejpg axiosurl config send get request default method axiosuser request method aliases convenience aliases provided supported request methods axiosrequestconfig axiosgeturl config axiosdeleteurl config axiosheadurl config axiosoptionsurl config axiosposturl data config axiosputurl data config axiospatchurl data config note using alias methods url method data properties dont need specified config concurrency helper functions dealing concurrent requests axiosalliterable axiosspreadcallback creating instance create new instance axios custom config axioscreateconfig const instance axioscreate baseurl httpssomedomaincomapi timeout headers xcustomheader foobar instance methods available instance methods listed specified config merged instance config axiosrequestconfig axiosgeturl config axiosdeleteurl config axiosheadurl config axiosoptionsurl config axiosposturl data config axiosputurl data config axiospatchurl data config axiosgeturiconfig request config available config options making requests url required requests default get method specified url server url used request url user method request method used making request method get default baseurl prepended url unless url absolute convenient set baseurl instance axios pass relative urls methods instance baseurl httpssomedomaincomapi transformrequest allows changes request data sent server applicable request methods put post patch delete last function array must return string instance buffer arraybuffer formdata stream may modify headers object transformrequest function data headers whatever want transform data return data transformresponse allows changes response data made passed thencatch transformresponse function data whatever want transform data return data headers custom headers sent headers xrequestedwith xmlhttprequest params url parameters sent request must plain object urlsearchparams object params id paramsserializer optional function charge serializing params eg httpswwwnpmjscompackageqs httpapijquerycomjqueryparam paramsserializer function params return qsstringifyparams arrayformat brackets data data sent request body applicable request methods put post patch transformrequest set must one following types string plain object arraybuffer arraybufferview urlsearchparams browser formdata file blob node stream buffer data firstname fred syntax alternative send data body method post value sent key data countrybrasilcitybelo horizonte timeout specifies number milliseconds request times request takes longer timeout request aborted timeout default timeout withcredentials indicates whether crosssite accesscontrol requests made using credentials withcredentials false default adapter allows custom handling requests makes testing easier return promise supply valid response see libadaptersreadmemd adapter function config auth indicates http basic auth used supplies credentials set authorization header overwriting existing authorization custom headers set using headers please note http basic auth configurable parameter bearer tokens use authorization custom headers instead auth username janedoe password sperscret responsetype indicates type data server respond options arraybuffer document json text stream browser blob responsetype json default responseencoding indicates encoding use decoding responses note ignored responsetype stream clientside requests responseencoding utf default xsrfcookiename name cookie use value xsrf token xsrfcookiename xsrftoken default xsrfheadername name http header carries xsrf token value xsrfheadername xxsrftoken default onuploadprogress allows handling progress events uploads onuploadprogress function progressevent whatever want native progress event ondownloadprogress allows handling progress events downloads ondownloadprogress function progressevent whatever want native progress event maxcontentlength defines max size http response content bytes allowed maxcontentlength validatestatus defines whether resolve reject promise given http response status code validatestatus returns true set null undefined promise resolved otherwise promise rejected validatestatus function status return status status default maxredirects defines maximum number redirects follow nodejs set redirects followed maxredirects default socketpath defines unix socket used nodejs eg varrundockersock send requests docker daemon either socketpath proxy specified specified socketpath used socketpath null default httpagent httpsagent define custom agent used performing http https requests respectively nodejs allows options added like keepalive enabled default httpagent new httpagent keepalive true httpsagent new httpsagent keepalive true proxy defines hostname port proxy server also define proxy using conventional httpproxy httpsproxy environment variables using environment variables proxy configuration also define noproxy environment variable commaseparated list domains proxied use false disable proxies ignoring environment variables auth indicates http basic auth used connect proxy supplies credentials set proxyauthorization header overwriting existing proxyauthorization custom headers set using headers proxy host port auth username mikeymike password rapunzl canceltoken specifies cancel token used cancel request see cancellation section details canceltoken new canceltokenfunction cancel response schema response request contains following information data response provided server data status http status code server response status statustext http status message server response statustext ok headers headers server responded header names lower cased headers config config provided axios request config request request generated response last clientrequest instance nodejs redirects xmlhttprequest instance browser request using receive response follows axiosgetuser thenfunction response consolelogresponsedata consolelogresponsestatus consolelogresponsestatustext consolelogresponseheaders consolelogresponseconfig using catch passing rejection callback second parameter response available error object explained handling errors section config defaults specify config defaults applied every request global axios defaults axiosdefaultsbaseurl httpsapiexamplecom axiosdefaultsheaderscommonauthorization authtoken axiosdefaultsheaderspostcontenttype applicationxwwwformurlencoded custom instance defaults set config defaults creating instance const instance axioscreate baseurl httpsapiexamplecom alter defaults instance created instancedefaultsheaderscommonauthorization authtoken config order precedence config merged order precedence order library defaults found libdefaultsjs defaults property instance finally config argument request latter take precedence former heres example create instance using config defaults provided library point timeout config value default library const instance axioscreate override timeout default library requests using instance wait seconds timing instancedefaultstimeout override timeout request known take long time instancegetlongrequest timeout interceptors intercept requests responses handled catch add request interceptor axiosinterceptorsrequestusefunction config something request sent return config function error something request error return promiserejecterror add response interceptor axiosinterceptorsresponseusefunction response status code lie within range xx cause function trigger something response data return response function error status codes falls outside range xx cause function trigger something response error return promiserejecterror need remove interceptor later const myinterceptor axiosinterceptorsrequestusefunction axiosinterceptorsrequestejectmyinterceptor add interceptors custom instance axios const instance axioscreate instanceinterceptorsrequestusefunction handling errors axiosgetuser catchfunction error errorresponse request made server responded status code falls range xx consolelogerrorresponsedata consolelogerrorresponsestatus consolelogerrorresponseheaders else errorrequest request made response received errorrequest instance xmlhttprequest browser instance httpclientrequest nodejs consolelogerrorrequest else something happened setting request triggered error consolelogerror errormessage consolelogerrorconfig using validatestatus config option define http codes throw error axiosgetuser validatestatus function status return status reject status code greater equal using tojson get object information http error axiosgetuser catchfunction error consolelogerrortojson cancellation cancel request using cancel token axios cancel token api based withdrawn cancelable promises proposal create cancel token using canceltokensource factory shown const canceltoken axioscanceltoken const source canceltokensource axiosgetuser canceltoken sourcetoken catchfunction thrown axiosiscancelthrown consolelogrequest canceled thrownmessage else handle error axiospostuser name new name canceltoken sourcetoken cancel request message parameter optional sourcecanceloperation canceled user also create cancel token passing executor function canceltoken constructor const canceltoken axioscanceltoken let cancel axiosgetuser canceltoken new canceltokenfunction executorc executor function receives cancel function parameter cancel c cancel request cancel note cancel several requests cancel token using applicationxwwwformurlencoded format default axios serializes javascript objects json send data applicationxwwwformurlencoded format instead use one following options browser browser use urlsearchparams api follows const params new urlsearchparams paramsappendparam value paramsappendparam value axiospostfoo params note urlsearchparams supported browsers see caniusecom polyfill available make sure polyfill global environment alternatively encode data using qs library const qs requireqs axiospostfoo qsstringify bar another way es import qs qs const data bar const options method post headers contenttype applicationxwwwformurlencoded data qsstringifydata url axiosoptions nodejs nodejs use querystring module follows const querystring requirequerystring axiosposthttpsomethingcom querystringstringify foo bar also use qs library note qs library preferable need stringify nested objects querystring method known issues use case httpsgithubcomnodejsnodevxarchiveissues semver axios reaches release breaking changes released new minor version example api breaking changes promises axios depends native es promise implementation supported environment doesnt support es promises polyfill typescript axios includes typescript definitions import axios axios axiosgetuserid resources changelog upgrade guide ecosystem contributing guide code conduct credits axios heavily inspired http service provided angular ultimately axios effort provide standalone httplike service use outside angular license mit,axio promis base http client browser nodej featur make xmlhttprequest browser make http request nodej support promis api intercept request respons transform request respons data cancel request automat transform json data client side support protect xsrf browser support latest latest latest latest latest instal use npm npm instal axio use bower bower instal axio use yarn yarn add axio use cdn script srchttpsunpkgcomaxiosdistaxiosminjsscript exampl note commonj usag order gain typescript type intellisens autocomplet use commonj import requir use follow approach const axio requireaxiosdefault axiosmethod provid autocomplet paramet type perform get request const axio requireaxio make request user given id axiosgetuserid thenfunct respons handl success consolelogrespons catchfunct error handl error consolelogerror finallyfunct alway execut option request could also done axiosgetus param id thenfunct respons consolelogrespons catchfunct error consolelogerror finallyfunct alway execut want use asyncawait add async keyword outer functionmethod async function getus tri const respons await axiosgetuserid consolelogrespons catch error consoleerrorerror note asyncawait part ecmascript support internet explor older browser use caution perform post request axiospostus firstnam fred lastnam flintston thenfunct respons consolelogrespons catchfunct error consolelogerror perform multipl concurr request function getuseraccount return axiosgetus function getuserpermiss return axiosgetuserpermiss axiosallgetuseraccount getuserpermiss thenaxiosspreadfunct acct perm request complet axio api request made pass relev config axio axiosconfig send post request axio method post url user data firstnam fred lastnam flintston get request remot imag axio method get url httpbitlymtmni responsetyp stream thenfunct respons responsedatapipefscreatewritestreamadalovelacejpg axiosurl config send get request default method axiosus request method alias conveni alias provid support request method axiosrequestconfig axiosgeturl config axiosdeleteurl config axiosheadurl config axiosoptionsurl config axiosposturl data config axiosputurl data config axiospatchurl data config note use alia method url method data properti dont need specifi config concurr helper function deal concurr request axiosalliter axiosspreadcallback creat instanc creat new instanc axio custom config axioscreateconfig const instanc axioscr baseurl httpssomedomaincomapi timeout header xcustomhead foobar instanc method avail instanc method list specifi config merg instanc config axiosrequestconfig axiosgeturl config axiosdeleteurl config axiosheadurl config axiosoptionsurl config axiosposturl data config axiosputurl data config axiospatchurl data config axiosgeturiconfig request config avail config option make request url requir request default get method specifi url server url use request url user method request method use make request method get default baseurl prepend url unless url absolut conveni set baseurl instanc axio pass rel url method instanc baseurl httpssomedomaincomapi transformrequest allow chang request data sent server applic request method put post patch delet last function array must return string instanc buffer arraybuff formdata stream may modifi header object transformrequest function data header whatev want transform data return data transformrespons allow chang respons data made pass thencatch transformrespons function data whatev want transform data return data header custom header sent header xrequestedwith xmlhttprequest param url paramet sent request must plain object urlsearchparam object param id paramsseri option function charg serial param eg httpswwwnpmjscompackageq httpapijquerycomjqueryparam paramsseri function param return qsstringifyparam arrayformat bracket data data sent request bodi applic request method put post patch transformrequest set must one follow type string plain object arraybuff arraybufferview urlsearchparam browser formdata file blob node stream buffer data firstnam fred syntax altern send data bodi method post valu sent key data countrybrasilcitybelo horizont timeout specifi number millisecond request time request take longer timeout request abort timeout default timeout withcredenti indic whether crosssit accesscontrol request made use credenti withcredenti fals default adapt allow custom handl request make test easier return promis suppli valid respons see libadaptersreadmemd adapt function config auth indic http basic auth use suppli credenti set author header overwrit exist author custom header set use header pleas note http basic auth configur paramet bearer token use author custom header instead auth usernam janedo password sperscret responsetyp indic type data server respond option arraybuff document json text stream browser blob responsetyp json default responseencod indic encod use decod respons note ignor responsetyp stream clientsid request responseencod utf default xsrfcookienam name cooki use valu xsrf token xsrfcookienam xsrftoken default xsrfheadernam name http header carri xsrf token valu xsrfheadernam xxsrftoken default onuploadprogress allow handl progress event upload onuploadprogress function progressev whatev want nativ progress event ondownloadprogress allow handl progress event download ondownloadprogress function progressev whatev want nativ progress event maxcontentlength defin max size http respons content byte allow maxcontentlength validatestatu defin whether resolv reject promis given http respons statu code validatestatu return true set null undefin promis resolv otherwis promis reject validatestatu function statu return statu statu default maxredirect defin maximum number redirect follow nodej set redirect follow maxredirect default socketpath defin unix socket use nodej eg varrundockersock send request docker daemon either socketpath proxi specifi specifi socketpath use socketpath null default httpagent httpsagent defin custom agent use perform http http request respect nodej allow option ad like keepal enabl default httpagent new httpagent keepal true httpsagent new httpsagent keepal true proxi defin hostnam port proxi server also defin proxi use convent httpproxi httpsproxi environ variabl use environ variabl proxi configur also defin noproxi environ variabl commasepar list domain proxi use fals disabl proxi ignor environ variabl auth indic http basic auth use connect proxi suppli credenti set proxyauthor header overwrit exist proxyauthor custom header set use header proxi host port auth usernam mikeymik password rapunzl canceltoken specifi cancel token use cancel request see cancel section detail canceltoken new canceltokenfunct cancel respons schema respons request contain follow inform data respons provid server data statu http statu code server respons statu statustext http statu messag server respons statustext ok header header server respond header name lower case header config config provid axio request config request request gener respons last clientrequest instanc nodej redirect xmlhttprequest instanc browser request use receiv respons follow axiosgetus thenfunct respons consolelogresponsedata consolelogresponsestatu consolelogresponsestatustext consolelogresponsehead consolelogresponseconfig use catch pass reject callback second paramet respons avail error object explain handl error section config default specifi config default appli everi request global axio default axiosdefaultsbaseurl httpsapiexamplecom axiosdefaultsheaderscommonauthor authtoken axiosdefaultsheaderspostcontenttyp applicationxwwwformurlencod custom instanc default set config default creat instanc const instanc axioscr baseurl httpsapiexamplecom alter default instanc creat instancedefaultsheaderscommonauthor authtoken config order preced config merg order preced order librari default found libdefaultsj default properti instanc final config argument request latter take preced former here exampl creat instanc use config default provid librari point timeout config valu default librari const instanc axioscr overrid timeout default librari request use instanc wait second time instancedefaultstimeout overrid timeout request known take long time instancegetlongrequest timeout interceptor intercept request respons handl catch add request interceptor axiosinterceptorsrequestusefunct config someth request sent return config function error someth request error return promiserejecterror add respons interceptor axiosinterceptorsresponseusefunct respons statu code lie within rang xx caus function trigger someth respons data return respons function error statu code fall outsid rang xx caus function trigger someth respons error return promiserejecterror need remov interceptor later const myinterceptor axiosinterceptorsrequestusefunct axiosinterceptorsrequestejectmyinterceptor add interceptor custom instanc axio const instanc axioscr instanceinterceptorsrequestusefunct handl error axiosgetus catchfunct error errorrespons request made server respond statu code fall rang xx consolelogerrorresponsedata consolelogerrorresponsestatu consolelogerrorresponsehead els errorrequest request made respons receiv errorrequest instanc xmlhttprequest browser instanc httpclientrequest nodej consolelogerrorrequest els someth happen set request trigger error consolelogerror errormessag consolelogerrorconfig use validatestatu config option defin http code throw error axiosgetus validatestatu function statu return statu reject statu code greater equal use tojson get object inform http error axiosgetus catchfunct error consolelogerrortojson cancel cancel request use cancel token axio cancel token api base withdrawn cancel promis propos creat cancel token use canceltokensourc factori shown const canceltoken axioscanceltoken const sourc canceltokensourc axiosgetus canceltoken sourcetoken catchfunct thrown axiosiscancelthrown consolelogrequest cancel thrownmessag els handl error axiospostus name new name canceltoken sourcetoken cancel request messag paramet option sourcecanceloper cancel user also creat cancel token pass executor function canceltoken constructor const canceltoken axioscanceltoken let cancel axiosgetus canceltoken new canceltokenfunct executorc executor function receiv cancel function paramet cancel c cancel request cancel note cancel sever request cancel token use applicationxwwwformurlencod format default axio serial javascript object json send data applicationxwwwformurlencod format instead use one follow option browser browser use urlsearchparam api follow const param new urlsearchparam paramsappendparam valu paramsappendparam valu axiospostfoo param note urlsearchparam support browser see caniusecom polyfil avail make sure polyfil global environ altern encod data use qs librari const qs requireq axiospostfoo qsstringifi bar anoth way es import qs qs const data bar const option method post header contenttyp applicationxwwwformurlencod data qsstringifydata url axiosopt nodej nodej use querystr modul follow const querystr requirequerystr axiosposthttpsomethingcom querystringstringifi foo bar also use qs librari note qs librari prefer need stringifi nest object querystr method known issu use case httpsgithubcomnodejsnodevxarchiveissu semver axio reach releas break chang releas new minor version exampl api break chang promis axio depend nativ es promis implement support environ doesnt support es promis polyfil typescript axio includ typescript definit import axio axio axiosgetuserid resourc changelog upgrad guid ecosystem contribut guid code conduct credit axio heavili inspir http servic provid angular ultim axio effort provid standalon httplike servic use outsid angular licens mit,axios promise based http client browser nodejs feature make xmlhttprequests browser make http request nodejs support promise api intercept request response transform request response data cancel request automatic transforms json data client side support protecting xsrf browser support latest latest latest latest latest installing using npm npm install axios using bower bower install axios using yarn yarn add axios using cdn script srchttpsunpkgcomaxiosdistaxiosminjsscript example note commonjs usage order gain typescript typing intellisense autocomplete using commonjs import require use following approach const axios requireaxiosdefault axiosmethod provide autocomplete parameter typing performing get request const axios requireaxios make request user given id axiosgetuserid thenfunction response handle success consolelogresponse catchfunction error handle error consolelogerror finallyfunction always executed optionally request could also done axiosgetuser params id thenfunction response consolelogresponse catchfunction error consolelogerror finallyfunction always executed want use asyncawait add async keyword outer functionmethod async function getuser try const response await axiosgetuserid consolelogresponse catch error consoleerrorerror note asyncawait part ecmascript supported internet explorer older browser use caution performing post request axiospostuser firstname fred lastname flintstone thenfunction response consolelogresponse catchfunction error consolelogerror performing multiple concurrent request function getuseraccount return axiosgetuser function getuserpermissions return axiosgetuserpermissions axiosallgetuseraccount getuserpermissions thenaxiosspreadfunction acct perm request complete axios api request made passing relevant config axios axiosconfig send post request axios method post url user data firstname fred lastname flintstone get request remote image axios method get url httpbitlymtmny responsetype stream thenfunction response responsedatapipefscreatewritestreamadalovelacejpg axiosurl config send get request default method axiosuser request method alias convenience alias provided supported request method axiosrequestconfig axiosgeturl config axiosdeleteurl config axiosheadurl config axiosoptionsurl config axiosposturl data config axiosputurl data config axiospatchurl data config note using alias method url method data property dont need specified config concurrency helper function dealing concurrent request axiosalliterable axiosspreadcallback creating instance create new instance axios custom config axioscreateconfig const instance axioscreate baseurl httpssomedomaincomapi timeout header xcustomheader foobar instance method available instance method listed specified config merged instance config axiosrequestconfig axiosgeturl config axiosdeleteurl config axiosheadurl config axiosoptionsurl config axiosposturl data config axiosputurl data config axiospatchurl data config axiosgeturiconfig request config available config option making request url required request default get method specified url server url used request url user method request method used making request method get default baseurl prepended url unless url absolute convenient set baseurl instance axios pas relative url method instance baseurl httpssomedomaincomapi transformrequest allows change request data sent server applicable request method put post patch delete last function array must return string instance buffer arraybuffer formdata stream may modify header object transformrequest function data header whatever want transform data return data transformresponse allows change response data made passed thencatch transformresponse function data whatever want transform data return data header custom header sent header xrequestedwith xmlhttprequest params url parameter sent request must plain object urlsearchparams object params id paramsserializer optional function charge serializing params eg httpswwwnpmjscompackageqs httpapijquerycomjqueryparam paramsserializer function params return qsstringifyparams arrayformat bracket data data sent request body applicable request method put post patch transformrequest set must one following type string plain object arraybuffer arraybufferview urlsearchparams browser formdata file blob node stream buffer data firstname fred syntax alternative send data body method post value sent key data countrybrasilcitybelo horizonte timeout specifies number millisecond request time request take longer timeout request aborted timeout default timeout withcredentials indicates whether crosssite accesscontrol request made using credential withcredentials false default adapter allows custom handling request make testing easier return promise supply valid response see libadaptersreadmemd adapter function config auth indicates http basic auth used supply credential set authorization header overwriting existing authorization custom header set using header please note http basic auth configurable parameter bearer token use authorization custom header instead auth username janedoe password sperscret responsetype indicates type data server respond option arraybuffer document json text stream browser blob responsetype json default responseencoding indicates encoding use decoding response note ignored responsetype stream clientside request responseencoding utf default xsrfcookiename name cookie use value xsrf token xsrfcookiename xsrftoken default xsrfheadername name http header carry xsrf token value xsrfheadername xxsrftoken default onuploadprogress allows handling progress event uploads onuploadprogress function progressevent whatever want native progress event ondownloadprogress allows handling progress event downloads ondownloadprogress function progressevent whatever want native progress event maxcontentlength defines max size http response content byte allowed maxcontentlength validatestatus defines whether resolve reject promise given http response status code validatestatus return true set null undefined promise resolved otherwise promise rejected validatestatus function status return status status default maxredirects defines maximum number redirects follow nodejs set redirects followed maxredirects default socketpath defines unix socket used nodejs eg varrundockersock send request docker daemon either socketpath proxy specified specified socketpath used socketpath null default httpagent httpsagent define custom agent used performing http http request respectively nodejs allows option added like keepalive enabled default httpagent new httpagent keepalive true httpsagent new httpsagent keepalive true proxy defines hostname port proxy server also define proxy using conventional httpproxy httpsproxy environment variable using environment variable proxy configuration also define noproxy environment variable commaseparated list domain proxied use false disable proxy ignoring environment variable auth indicates http basic auth used connect proxy supply credential set proxyauthorization header overwriting existing proxyauthorization custom header set using header proxy host port auth username mikeymike password rapunzl canceltoken specifies cancel token used cancel request see cancellation section detail canceltoken new canceltokenfunction cancel response schema response request contains following information data response provided server data status http status code server response status statustext http status message server response statustext ok header header server responded header name lower cased header config config provided axios request config request request generated response last clientrequest instance nodejs redirects xmlhttprequest instance browser request using receive response follows axiosgetuser thenfunction response consolelogresponsedata consolelogresponsestatus consolelogresponsestatustext consolelogresponseheaders consolelogresponseconfig using catch passing rejection callback second parameter response available error object explained handling error section config default specify config default applied every request global axios default axiosdefaultsbaseurl httpsapiexamplecom axiosdefaultsheaderscommonauthorization authtoken axiosdefaultsheaderspostcontenttype applicationxwwwformurlencoded custom instance default set config default creating instance const instance axioscreate baseurl httpsapiexamplecom alter default instance created instancedefaultsheaderscommonauthorization authtoken config order precedence config merged order precedence order library default found libdefaultsjs default property instance finally config argument request latter take precedence former here example create instance using config default provided library point timeout config value default library const instance axioscreate override timeout default library request using instance wait second timing instancedefaultstimeout override timeout request known take long time instancegetlongrequest timeout interceptor intercept request response handled catch add request interceptor axiosinterceptorsrequestusefunction config something request sent return config function error something request error return promiserejecterror add response interceptor axiosinterceptorsresponseusefunction response status code lie within range xx cause function trigger something response data return response function error status code fall outside range xx cause function trigger something response error return promiserejecterror need remove interceptor later const myinterceptor axiosinterceptorsrequestusefunction axiosinterceptorsrequestejectmyinterceptor add interceptor custom instance axios const instance axioscreate instanceinterceptorsrequestusefunction handling error axiosgetuser catchfunction error errorresponse request made server responded status code fall range xx consolelogerrorresponsedata consolelogerrorresponsestatus consolelogerrorresponseheaders else errorrequest request made response received errorrequest instance xmlhttprequest browser instance httpclientrequest nodejs consolelogerrorrequest else something happened setting request triggered error consolelogerror errormessage consolelogerrorconfig using validatestatus config option define http code throw error axiosgetuser validatestatus function status return status reject status code greater equal using tojson get object information http error axiosgetuser catchfunction error consolelogerrortojson cancellation cancel request using cancel token axios cancel token api based withdrawn cancelable promise proposal create cancel token using canceltokensource factory shown const canceltoken axioscanceltoken const source canceltokensource axiosgetuser canceltoken sourcetoken catchfunction thrown axiosiscancelthrown consolelogrequest canceled thrownmessage else handle error axiospostuser name new name canceltoken sourcetoken cancel request message parameter optional sourcecanceloperation canceled user also create cancel token passing executor function canceltoken constructor const canceltoken axioscanceltoken let cancel axiosgetuser canceltoken new canceltokenfunction executorc executor function receives cancel function parameter cancel c cancel request cancel note cancel several request cancel token using applicationxwwwformurlencoded format default axios serializes javascript object json send data applicationxwwwformurlencoded format instead use one following option browser browser use urlsearchparams api follows const params new urlsearchparams paramsappendparam value paramsappendparam value axiospostfoo params note urlsearchparams supported browser see caniusecom polyfill available make sure polyfill global environment alternatively encode data using q library const q requireqs axiospostfoo qsstringify bar another way e import q q const data bar const option method post header contenttype applicationxwwwformurlencoded data qsstringifydata url axiosoptions nodejs nodejs use querystring module follows const querystring requirequerystring axiosposthttpsomethingcom querystringstringify foo bar also use q library note q library preferable need stringify nested object querystring method known issue use case httpsgithubcomnodejsnodevxarchiveissues semver axios reach release breaking change released new minor version example api breaking change promise axios depends native e promise implementation supported environment doesnt support e promise polyfill typescript axios includes typescript definition import axios axios axiosgetuserid resource changelog upgrade guide ecosystem contributing guide code conduct credit axios heavily inspired http service provided angular ultimately axios effort provide standalone httplike service use outside angular license mit
29,JavaScript,GitHub - nodejs/node: Node.js JavaScript runtime,"




Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. For
more information on using Node.js, see the Node.js Website.
The Node.js project uses an open governance model. The
OpenJS Foundation provides support for the project.
This project is bound by a Code of Conduct.
Table of Contents

Support
Release Types

Download

Current and LTS Releases
Nightly Releases
API Documentation


Verifying Binaries


Building Node.js
Security
Contributing to Node.js
Current Project Team Members

TSC (Technical Steering Committee)
Collaborators
Release Keys



Support
Looking for help? Check out the
instructions for getting support.
Release Types

Current: Under active development. Code for the Current release is in the
branch for its major version number (for example,
v10.x). Node.js releases a new
major version every 6 months, allowing for breaking changes. This happens in
April and October every year. Releases appearing each October have a support
life of 8 months. Releases appearing each April convert to LTS (see below)
each October.
LTS: Releases that receive Long-term Support, with a focus on stability
and security. Every even-numbered major version will become an LTS release.
LTS releases receive 12 months of Active LTS support and a further 18 months
of Maintenance. LTS release lines have alphabetically-ordered codenames,
beginning with v4 Argon. There are no breaking changes or feature additions,
except in some special circumstances.
Nightly: Code from the Current branch built every 24-hours when there are
changes. Use with caution.

Current and LTS releases follow Semantic Versioning. A
member of the Release Team signs each Current and LTS release.
For more information, see the
Release README.
Download
Binaries, installers, and source tarballs are available at
https://nodejs.org/en/download/.
Current and LTS Releases
https://nodejs.org/download/release/
The latest directory is an
alias for the latest Current release. The latest-codename directory is an
alias for the latest release from an LTS line. For example, the
latest-carbon directory
contains the latest Carbon (Node.js 8) release.
Nightly Releases
https://nodejs.org/download/nightly/
Each directory name and filename contains a date (in UTC time) and the commit
SHA at the HEAD of the release.
API Documentation
Documentation for the latest Current release is at https://nodejs.org/api/.
Version-specific documentation is available in each release directory in the
docs subdirectory. Version-specific documentation is also at
https://nodejs.org/download/docs/.
Verifying Binaries
Download directories contain a SHASUMS256.txt file with SHA checksums for the
files.
To download SHASUMS256.txt using curl:
$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt
To check that a downloaded file matches the checksum, run
it through sha256sum with a command such as:
$ grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -
For Current and LTS, the GPG detached signature of SHASUMS256.txt is in
SHASUMS256.txt.sig. You can use it with gpg to verify the integrity of
SHASUM256.txt. You will first need to import
the GPG keys of individuals authorized to create releases. To
import the keys:
$ gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
See the bottom of this README for a full script to import active release keys.
Next, download the SHASUMS256.txt.sig for the release:
$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig
Then use gpg --verify SHASUMS256.txt.sig SHASUMS256.txt to verify
the file's signature.
Building Node.js
See BUILDING.md for instructions on how to build Node.js from
source and a list of supported platforms.
Security
For information on reporting security vulnerabilities in Node.js, see
SECURITY.md.
Contributing to Node.js

Contributing to the project
Working Groups
Strategic Initiatives

Current Project Team Members
For information about the governance of the Node.js project, see
GOVERNANCE.md.
TSC (Technical Steering Committee)

addaleax -
Anna Henningsen <anna@addaleax.net> (she/her)
apapirovski -
Anatoli Papirovski <apapirovski@mac.com> (he/him)
BethGriggs -
Beth Griggs <Bethany.Griggs@uk.ibm.com> (she/her)
ChALkeR -
–°–∫–æ–≤–æ—Ä–æ–¥–∞ –ù–∏–∫–∏—Ç–∞ –ê–Ω–¥—Ä–µ–µ–≤–∏—á <chalkerx@gmail.com> (he/him)
cjihrig -
Colin Ihrig <cjihrig@gmail.com> (he/him)
danbev -
Daniel Bevenius <daniel.bevenius@gmail.com> (he/him)
fhinkel -
Franziska Hinkelmann <franziska.hinkelmann@gmail.com> (she/her)
Fishrock123 -
Jeremiah Senkpiel <fishrock123@rocketmail.com>
gabrielschulhof -
Gabriel Schulhof <gabriel.schulhof@intel.com>
gireeshpunathil -
Gireesh Punathil <gpunathi@in.ibm.com> (he/him)
jasnell -
James M Snell <jasnell@gmail.com> (he/him)
joyeecheung -
Joyee Cheung <joyeec9h3@gmail.com> (she/her)
mcollina -
Matteo Collina <matteo.collina@gmail.com> (he/him)
mhdawson -
Michael Dawson <michael_dawson@ca.ibm.com> (he/him)
MylesBorins -
Myles Borins <myles.borins@gmail.com> (he/him)
sam-github -
Sam Roberts <vieuxtech@gmail.com>
targos -
Micha√´l Zasso <targos@protonmail.com> (he/him)
thefourtheye -
Sakthipriyan Vairamani <thechargingvolcano@gmail.com> (he/him)
tniessen -
Tobias Nie√üen <tniessen@tnie.de>
Trott -
Rich Trott <rtrott@gmail.com> (he/him)

TSC Emeriti

bnoordhuis -
Ben Noordhuis <info@bnoordhuis.nl>
chrisdickinson -
Chris Dickinson <christopher.s.dickinson@gmail.com>
evanlucas -
Evan Lucas <evanlucas@me.com> (he/him)
gibfahn -
Gibson Fahnestock <gibfahn@gmail.com> (he/him)
indutny -
Fedor Indutny <fedor.indutny@gmail.com>
isaacs -
Isaac Z. Schlueter <i@izs.me>
joshgav -
Josh Gavant <josh.gavant@outlook.com>
mscdex -
Brian White <mscdex@mscdex.net>
nebrius -
Bryan Hughes <bryan@nebri.us>
ofrobots -
Ali Ijaz Sheikh <ofrobots@google.com> (he/him)
orangemocha -
Alexis Campailla <orangemocha@nodejs.org>
piscisaureus -
Bert Belder <bertbelder@gmail.com>
rvagg -
Rod Vagg <r@va.gg>
shigeki -
Shigeki Ohtsu <ohtsu@ohtsu.org> (he/him)
TimothyGu -
Tiancheng ""Timothy"" Gu <timothygu99@gmail.com> (he/him)
trevnorris -
Trevor Norris <trev.norris@gmail.com>

Collaborators

addaleax -
Anna Henningsen <anna@addaleax.net> (she/her)
ak239 -
Aleksei Koziatinskii <ak239spb@gmail.com>
AndreasMadsen -
Andreas Madsen <amwebdk@gmail.com> (he/him)
antsmartian -
Anto Aravinth <anto.aravinth.cse@gmail.com> (he/him)
apapirovski -
Anatoli Papirovski <apapirovski@mac.com> (he/him)
aqrln -
Alexey Orlenko <eaglexrlnk@gmail.com> (he/him)
bcoe -
Ben Coe <bencoe@gmail.com> (he/him)
bengl -
Bryan English <bryan@bryanenglish.com> (he/him)
benjamingr -
Benjamin Gruenbaum <benjamingr@gmail.com>
BethGriggs -
Beth Griggs <Bethany.Griggs@uk.ibm.com> (she/her)
bmeck -
Bradley Farias <bradley.meck@gmail.com>
bmeurer -
Benedikt Meurer <benedikt.meurer@gmail.com>
bnoordhuis -
Ben Noordhuis <info@bnoordhuis.nl>
boneskull -
Christopher Hiller <boneskull@boneskull.com> (he/him)
BridgeAR -
Ruben Bridgewater <ruben@bridgewater.de> (he/him)
bzoz -
Bartosz Sosnowski <bartosz@janeasystems.com>
calvinmetcalf -
Calvin Metcalf <calvin.metcalf@gmail.com>
cclauss -
Christian Clauss <cclauss@me.com> (he/him)
ChALkeR -
–°–∫–æ–≤–æ—Ä–æ–¥–∞ –ù–∏–∫–∏—Ç–∞ –ê–Ω–¥—Ä–µ–µ–≤–∏—á <chalkerx@gmail.com> (he/him)
cjihrig -
Colin Ihrig <cjihrig@gmail.com> (he/him)
claudiorodriguez -
Claudio Rodriguez <cjrodr@yahoo.com>
codebytere -
Shelley Vohr <codebytere@gmail.com> (she/her)
danbev -
Daniel Bevenius <daniel.bevenius@gmail.com> (he/him)
davisjam -
Jamie Davis <davisjam@vt.edu> (he/him)
devnexen -
David Carlier <devnexen@gmail.com>
devsnek -
Gus Caplan <me@gus.host> (he/him)
digitalinfinity -
Hitesh Kanwathirtha <digitalinfinity@gmail.com> (he/him)
edsadr -
Adrian Estrada <edsadr@gmail.com> (he/him)
eljefedelrodeodeljefe -
Robert Jefe Lindstaedt <robert.lindstaedt@gmail.com>
eugeneo -
Eugene Ostroukhov <eostroukhov@google.com>
evanlucas -
Evan Lucas <evanlucas@me.com> (he/him)
fhinkel -
Franziska Hinkelmann <franziska.hinkelmann@gmail.com> (she/her)
Fishrock123 -
Jeremiah Senkpiel <fishrock123@rocketmail.com>
gabrielschulhof -
Gabriel Schulhof <gabriel.schulhof@intel.com>
gdams -
George Adams <george.adams@uk.ibm.com> (he/him)
geek -
Wyatt Preul <wpreul@gmail.com>
gengjiawen -
Jiawen Geng <technicalcute@gmail.com>
gibfahn -
Gibson Fahnestock <gibfahn@gmail.com> (he/him)
gireeshpunathil -
Gireesh Punathil <gpunathi@in.ibm.com> (he/him)
guybedford -
Guy Bedford <guybedford@gmail.com> (he/him)
hashseed -
Yang Guo <yangguo@chromium.org> (he/him)
hiroppy -
Yuta Hiroto <hello@hiroppy.me> (he/him)
iarna -
Rebecca Turner <me@re-becca.org>
indutny -
Fedor Indutny <fedor.indutny@gmail.com>
italoacasas -
Italo A. Casas <me@italoacasas.com> (he/him)
JacksonTian -
Jackson Tian <shyvo1987@gmail.com>
jasnell -
James M Snell <jasnell@gmail.com> (he/him)
jbergstroem -
Johan Bergstr√∂m <bugs@bergstroem.nu>
jdalton -
John-David Dalton <john.david.dalton@gmail.com>
jkrems -
Jan Krems <jan.krems@gmail.com> (he/him)
joaocgreis -
Jo√£o Reis <reis@janeasystems.com>
joyeecheung -
Joyee Cheung <joyeec9h3@gmail.com> (she/her)
julianduque -
Julian Duque <julianduquej@gmail.com> (he/him)
JungMinu -
Minwoo Jung <nodecorelab@gmail.com> (he/him)
kfarnung -
Kyle Farnung <kfarnung@microsoft.com> (he/him)
lance -
Lance Ball <lball@redhat.com> (he/him)
legendecas -
Chengzhong Wu <legendecas@gmail.com> (he/him)
Leko -
Shingo Inoue <leko.noor@gmail.com> (he/him)
lpinca -
Luigi Pinca <luigipinca@gmail.com> (he/him)
lundibundi -
Denys Otrishko <shishugi@gmail.com> (he/him)
maclover7 -
Jon Moss <me@jonathanmoss.me> (he/him)
mafintosh
Mathias Buus <mathiasbuus@gmail.com> (he/him)
mcollina -
Matteo Collina <matteo.collina@gmail.com> (he/him)
mhdawson -
Michael Dawson <michael_dawson@ca.ibm.com> (he/him)
misterdjules -
Julien Gilli <jgilli@nodejs.org>
mmarchini -
Matheus Marchini <mat@mmarchini.me>
MoonBall -
Chen Gang <gangc.cxy@foxmail.com>
mscdex -
Brian White <mscdex@mscdex.net>
MylesBorins -
Myles Borins <myles.borins@gmail.com> (he/him)
not-an-aardvark -
Teddy Katz <teddy.katz@gmail.com> (he/him)
ofrobots -
Ali Ijaz Sheikh <ofrobots@google.com> (he/him)
oyyd -
Ouyang Yadong <oyydoibh@gmail.com> (he/him)
princejwesley -
Prince John Wesley <princejohnwesley@gmail.com>
psmarshall -
Peter Marshall <petermarshall@chromium.org> (he/him)
Qard -
Stephen Belanger <admin@stephenbelanger.com> (he/him)
refack -
Refael Ackermann (◊®◊§◊ê◊ú ◊§◊ú◊ó◊ô) <refack@gmail.com> (he/him/◊î◊ï◊ê/◊ê◊™◊î)
richardlau -
Richard Lau <riclau@uk.ibm.com>
ronkorving -
Ron Korving <ron@ronkorving.nl>
rubys -
Sam Ruby <rubys@intertwingly.net>
rvagg -
Rod Vagg <rod@vagg.org>
ryzokuken -
Ujjwal Sharma <usharma1998@gmail.com> (he/him)
saghul -
Sa√∫l Ibarra Corretg√© <saghul@gmail.com>
sam-github -
Sam Roberts <vieuxtech@gmail.com>
santigimeno -
Santiago Gimeno <santiago.gimeno@gmail.com>
sebdeckers -
Sebastiaan Deckers <sebdeckers83@gmail.com>
seishun -
Nikolai Vavilov <vvnicholas@gmail.com>
shigeki -
Shigeki Ohtsu <ohtsu@ohtsu.org> (he/him)
shisama -
Masashi Hirano <shisama07@gmail.com> (he/him)
silverwind -
Roman Reiss <me@silverwind.io>
srl295 -
Steven R Loomis <srloomis@us.ibm.com>
starkwang -
Weijia Wang <starkwang@126.com>
targos -
Micha√´l Zasso <targos@protonmail.com> (he/him)
thefourtheye -
Sakthipriyan Vairamani <thechargingvolcano@gmail.com> (he/him)
thekemkid -
Glen Keane <glenkeane.94@gmail.com> (he/him)
TimothyGu -
Tiancheng ""Timothy"" Gu <timothygu99@gmail.com> (he/him)
tniessen -
Tobias Nie√üen <tniessen@tnie.de>
trevnorris -
Trevor Norris <trev.norris@gmail.com>
trivikr -
Trivikram Kamat <trivikr.dev@gmail.com>
Trott -
Rich Trott <rtrott@gmail.com> (he/him)
vdeturckheim -
Vladimir de Turckheim <vlad2t@hotmail.com> (he/him)
vkurchatkin -
Vladimir Kurchatkin <vladimir.kurchatkin@gmail.com>
watilde -
Daijiro Wachi <daijiro.wachi@gmail.com> (he/him)
watson -
Thomas Watson <w@tson.dk>
XadillaX -
Khaidi Chu <i@2333.moe> (he/him)
yhwang -
Yihong Wang <yh.wang@ibm.com>
yorkie -
Yorkie Liu <yorkiefixer@gmail.com>
yosuke-furukawa -
Yosuke Furukawa <yosuke.furukawa@gmail.com>
ZYSzys -
Yongsheng Zhang <zyszys98@gmail.com> (he/him)

Collaborator Emeriti

andrasq -
Andras <andras@kinvey.com>
AnnaMag -
Anna M. Kedzierska <anna.m.kedzierska@gmail.com>
brendanashworth -
Brendan Ashworth <brendan.ashworth@me.com>
estliberitas -
Alexander Makarenko <estliberitas@gmail.com>
chrisdickinson -
Chris Dickinson <christopher.s.dickinson@gmail.com>
DavidCai1993 -
David Cai <davidcai1993@yahoo.com> (he/him)
firedfox -
Daniel Wang <wangyang0123@gmail.com>
imran-iq -
Imran Iqbal <imran@imraniqbal.org>
imyller -
Ilkka Myller <ilkka.myller@nodefield.com>
isaacs -
Isaac Z. Schlueter <i@izs.me>
jasongin -
Jason Ginchereau <jasongin@microsoft.com>
jhamhader -
Yuval Brik <yuval@brik.org.il>
joshgav -
Josh Gavant <josh.gavant@outlook.com>
kunalspathak -
Kunal Pathak <kunal.pathak@microsoft.com>
lucamaraschi -
Luca Maraschi <luca.maraschi@gmail.com> (he/him)
lxe -
Aleksey Smolenchuk <lxe@lxe.co>
matthewloring -
Matthew Loring <mattloring@google.com>
micnic -
Nicu Micleu»ôanu <micnic90@gmail.com> (he/him)
mikeal -
Mikeal Rogers <mikeal.rogers@gmail.com>
monsanto -
Christopher Monsanto <chris@monsan.to>
Olegas -
Oleg Elifantiev <oleg@elifantiev.ru>
orangemocha -
Alexis Campailla <orangemocha@nodejs.org>
othiym23 -
Forrest L Norvell <ogd@aoaioxxysz.net> (he/him)
petkaantonov -
Petka Antonov <petka_antonov@hotmail.com>
phillipj -
Phillip Johnsen <johphi@gmail.com>
piscisaureus -
Bert Belder <bertbelder@gmail.com>
pmq20 -
Minqi Pan <pmq2001@gmail.com>
rlidwka -
Alex Kocharin <alex@kocharin.ru>
rmg -
Ryan Graham <r.m.graham@gmail.com>
robertkowalski -
Robert Kowalski <rok@kowalski.gd>
romankl -
Roman Klauke <romaaan.git@gmail.com>
RReverser -
Ingvar Stepanyan <me@rreverser.com>
stefanmb -
Stefan Budeanu <stefan@budeanu.com>
tellnes -
Christian Tellnes <christian@tellnes.no>
thlorenz -
Thorsten Lorenz <thlorenz@gmx.de>
tunniclm -
Mike Tunnicliffe <m.j.tunnicliffe@gmail.com>
vsemozhetbyt -
Vse Mozhet Byt <vsemozhetbyt@gmail.com> (he/him)
whitlockjc -
Jeremy Whitlock <jwhitlock@apache.org>

Collaborators follow the COLLABORATOR_GUIDE.md in
maintaining the Node.js project.
Release Keys
GPG keys used to sign Node.js releases:

Beth Griggs <bethany.griggs@uk.ibm.com>
4ED778F539E3634C779C87C6D7062848A1AB005C
Colin Ihrig <cjihrig@gmail.com>
94AE36675C464D64BAFA68DD7434390BDBE9B9C5
Evan Lucas <evanlucas@me.com>
B9AE9905FFD7803F25714661B63B535A4C206CA9
Gibson Fahnestock <gibfahn@gmail.com>
77984A986EBC2AA786BC0F66B01FBB92821C587A
James M Snell <jasnell@keybase.io>
71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
Jeremiah Senkpiel <fishrock@keybase.io>
FD3A5288F042B6850C66B31F09FE44734EB7990E
Micha√´l Zasso <targos@protonmail.com>
8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600
Myles Borins <myles.borins@gmail.com>
C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
Rod Vagg <rod@vagg.org>
DD8F2338BAE7501E3DD5AC78C273792F7D83545D
Ruben Bridgewater <ruben@bridgewater.de>
A48C2BEE680E841632CD4E44F07496B3EB3C1762
Shelley Vohr <shelley.vohr@gmail.com>
B9E2F5981AA6E0CD28160D9FF13993A75599653C

To import the full set of trusted release keys:
gpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C
gpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C
gpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5
gpg --keyserver pool.sks-keyservers.net --recv-keys B9AE9905FFD7803F25714661B63B535A4C206CA9
gpg --keyserver pool.sks-keyservers.net --recv-keys 77984A986EBC2AA786BC0F66B01FBB92821C587A
gpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
gpg --keyserver pool.sks-keyservers.net --recv-keys FD3A5288F042B6850C66B31F09FE44734EB7990E
gpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600
gpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
gpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762
See the section above on Verifying Binaries for how to
use these keys to verify a downloaded file.
Other keys used to sign some previous releases:

Chris Dickinson <christopher.s.dickinson@gmail.com>
9554F04D7259F04124DE6B476D5A82AC7E37093B
Isaac Z. Schlueter <i@izs.me>
93C7E9E91B49E432C2F75674B0A78B0A6C481CF6
Italo A. Casas <me@italoacasas.com>
56730D5401028683275BD23C23EFEFE93C4CFFFE
Julien Gilli <jgilli@fastmail.fm>
114F43EE0176B71C7BC219DD50A3051F888C628D
Timothy J Fontaine <tjfontaine@gmail.com>
7937DFD2AB06298B2293C3187D33FF9D0246406D

",nodejs javascript runtime built chromes v javascript engine information using nodejs see nodejs website nodejs project uses open governance model openjs foundation provides support project project bound code conduct table contents support release types download current lts releases nightly releases api documentation verifying binaries building nodejs security contributing nodejs current project team members tsc technical steering committee collaborators release keys support looking help check instructions getting support release types current active development code current release branch major version number example vx nodejs releases new major version every months allowing breaking changes happens april october every year releases appearing october support life months releases appearing april convert lts see october lts releases receive longterm support focus stability security every evennumbered major version become lts release lts releases receive months active lts support months maintenance lts release lines alphabeticallyordered codenames beginning v argon breaking changes feature additions except special circumstances nightly code current branch built every hours changes use caution current lts releases follow semantic versioning member release team signs current lts release information see release readme download binaries installers source tarballs available httpsnodejsorgendownload current lts releases httpsnodejsorgdownloadrelease latest directory alias latest current release latestcodename directory alias latest release lts line example latestcarbon directory contains latest carbon nodejs release nightly releases httpsnodejsorgdownloadnightly directory name filename contains date utc time commit sha head release api documentation documentation latest current release httpsnodejsorgapi versionspecific documentation available release directory docs subdirectory versionspecific documentation also httpsnodejsorgdownloaddocs verifying binaries download directories contain shasumstxt file sha checksums files download shasumstxt using curl curl httpsnodejsorgdistvxyzshasumstxt check downloaded file matches checksum run shasum command grep nodevxyztargz shasumstxt shasum c current lts gpg detached signature shasumstxt shasumstxtsig use gpg verify integrity shasumtxt first need import gpg keys individuals authorized create releases import keys gpg keyserver poolskskeyserversnet recvkeys ddfbaeeddaccfdd see bottom readme full script import active release keys next download shasumstxtsig release curl httpsnodejsorgdistvxyzshasumstxtsig use gpg verify shasumstxtsig shasumstxt verify files signature building nodejs see buildingmd instructions build nodejs source list supported platforms security information reporting security vulnerabilities nodejs see securitymd contributing nodejs contributing project working groups strategic initiatives current project team members information governance nodejs project see governancemd tsc technical steering committee addaleax anna henningsen annaaddaleaxnet sheher apapirovski anatoli papirovski apapirovskimaccom hehim bethgriggs beth griggs bethanygriggsukibmcom sheher chalker chalkerxgmailcom hehim cjihrig colin ihrig cjihriggmailcom hehim danbev daniel bevenius danielbeveniusgmailcom hehim fhinkel franziska hinkelmann franziskahinkelmanngmailcom sheher fishrock jeremiah senkpiel fishrockrocketmailcom gabrielschulhof gabriel schulhof gabrielschulhofintelcom gireeshpunathil gireesh punathil gpunathiinibmcom hehim jasnell james snell jasnellgmailcom hehim joyeecheung joyee cheung joyeechgmailcom sheher mcollina matteo collina matteocollinagmailcom hehim mhdawson michael dawson michaeldawsoncaibmcom hehim mylesborins myles borins mylesborinsgmailcom hehim samgithub sam roberts vieuxtechgmailcom targos michael zasso targosprotonmailcom hehim thefourtheye sakthipriyan vairamani thechargingvolcanogmailcom hehim tniessen tobias nieen tniessentniede trott rich trott rtrottgmailcom hehim tsc emeriti bnoordhuis ben noordhuis infobnoordhuisnl chrisdickinson chris dickinson christophersdickinsongmailcom evanlucas evan lucas evanlucasmecom hehim gibfahn gibson fahnestock gibfahngmailcom hehim indutny fedor indutny fedorindutnygmailcom isaacs isaac z schlueter iizsme joshgav josh gavant joshgavantoutlookcom mscdex brian white mscdexmscdexnet nebrius bryan hughes bryannebrius ofrobots ali ijaz sheikh ofrobotsgooglecom hehim orangemocha alexis campailla orangemochanodejsorg piscisaureus bert belder bertbeldergmailcom rvagg rod vagg rvagg shigeki shigeki ohtsu ohtsuohtsuorg hehim timothygu tiancheng timothy gu timothygugmailcom hehim trevnorris trevor norris trevnorrisgmailcom collaborators addaleax anna henningsen annaaddaleaxnet sheher ak aleksei koziatinskii akspbgmailcom andreasmadsen andreas madsen amwebdkgmailcom hehim antsmartian anto aravinth antoaravinthcsegmailcom hehim apapirovski anatoli papirovski apapirovskimaccom hehim aqrln alexey orlenko eaglexrlnkgmailcom hehim bcoe ben coe bencoegmailcom hehim bengl bryan english bryanbryanenglishcom hehim benjamingr benjamin gruenbaum benjamingrgmailcom bethgriggs beth griggs bethanygriggsukibmcom sheher bmeck bradley farias bradleymeckgmailcom bmeurer benedikt meurer benediktmeurergmailcom bnoordhuis ben noordhuis infobnoordhuisnl boneskull christopher hiller boneskullboneskullcom hehim bridgear ruben bridgewater rubenbridgewaterde hehim bzoz bartosz sosnowski bartoszjaneasystemscom calvinmetcalf calvin metcalf calvinmetcalfgmailcom cclauss christian clauss cclaussmecom hehim chalker chalkerxgmailcom hehim cjihrig colin ihrig cjihriggmailcom hehim claudiorodriguez claudio rodriguez cjrodryahoocom codebytere shelley vohr codebyteregmailcom sheher danbev daniel bevenius danielbeveniusgmailcom hehim davisjam jamie davis davisjamvtedu hehim devnexen david carlier devnexengmailcom devsnek gus caplan megushost hehim digitalinfinity hitesh kanwathirtha digitalinfinitygmailcom hehim edsadr adrian estrada edsadrgmailcom hehim eljefedelrodeodeljefe robert jefe lindstaedt robertlindstaedtgmailcom eugeneo eugene ostroukhov eostroukhovgooglecom evanlucas evan lucas evanlucasmecom hehim fhinkel franziska hinkelmann franziskahinkelmanngmailcom sheher fishrock jeremiah senkpiel fishrockrocketmailcom gabrielschulhof gabriel schulhof gabrielschulhofintelcom gdams george adams georgeadamsukibmcom hehim geek wyatt preul wpreulgmailcom gengjiawen jiawen geng technicalcutegmailcom gibfahn gibson fahnestock gibfahngmailcom hehim gireeshpunathil gireesh punathil gpunathiinibmcom hehim guybedford guy bedford guybedfordgmailcom hehim hashseed yang guo yangguochromiumorg hehim hiroppy yuta hiroto hellohiroppyme hehim iarna rebecca turner merebeccaorg indutny fedor indutny fedorindutnygmailcom italoacasas italo casas meitaloacasascom hehim jacksontian jackson tian shyvogmailcom jasnell james snell jasnellgmailcom hehim jbergstroem johan bergstrom bugsbergstroemnu jdalton johndavid dalton johndaviddaltongmailcom jkrems jan krems jankremsgmailcom hehim joaocgreis joao reis reisjaneasystemscom joyeecheung joyee cheung joyeechgmailcom sheher julianduque julian duque julianduquejgmailcom hehim jungminu minwoo jung nodecorelabgmailcom hehim kfarnung kyle farnung kfarnungmicrosoftcom hehim lance lance ball lballredhatcom hehim legendecas chengzhong wu legendecasgmailcom hehim leko shingo inoue lekonoorgmailcom hehim lpinca luigi pinca luigipincagmailcom hehim lundibundi denys otrishko shishugigmailcom hehim maclover jon moss mejonathanmossme hehim mafintosh mathias buus mathiasbuusgmailcom hehim mcollina matteo collina matteocollinagmailcom hehim mhdawson michael dawson michaeldawsoncaibmcom hehim misterdjules julien gilli jgillinodejsorg mmarchini matheus marchini matmmarchinime moonball chen gang gangccxyfoxmailcom mscdex brian white mscdexmscdexnet mylesborins myles borins mylesborinsgmailcom hehim notanaardvark teddy katz teddykatzgmailcom hehim ofrobots ali ijaz sheikh ofrobotsgooglecom hehim oyyd ouyang yadong oyydoibhgmailcom hehim princejwesley prince john wesley princejohnwesleygmailcom psmarshall peter marshall petermarshallchromiumorg hehim qard stephen belanger adminstephenbelangercom hehim refack refael ackermann refackgmailcom hehim richardlau richard lau riclauukibmcom ronkorving ron korving ronronkorvingnl rubys sam ruby rubysintertwinglynet rvagg rod vagg rodvaggorg ryzokuken ujjwal sharma usharmagmailcom hehim saghul saul ibarra corretge saghulgmailcom samgithub sam roberts vieuxtechgmailcom santigimeno santiago gimeno santiagogimenogmailcom sebdeckers sebastiaan deckers sebdeckersgmailcom seishun nikolai vavilov vvnicholasgmailcom shigeki shigeki ohtsu ohtsuohtsuorg hehim shisama masashi hirano shisamagmailcom hehim silverwind roman reiss mesilverwindio srl steven r loomis srloomisusibmcom starkwang weijia wang starkwangcom targos michael zasso targosprotonmailcom hehim thefourtheye sakthipriyan vairamani thechargingvolcanogmailcom hehim thekemkid glen keane glenkeanegmailcom hehim timothygu tiancheng timothy gu timothygugmailcom hehim tniessen tobias nieen tniessentniede trevnorris trevor norris trevnorrisgmailcom trivikr trivikram kamat trivikrdevgmailcom trott rich trott rtrottgmailcom hehim vdeturckheim vladimir de turckheim vladthotmailcom hehim vkurchatkin vladimir kurchatkin vladimirkurchatkingmailcom watilde daijiro wachi daijirowachigmailcom hehim watson thomas watson wtsondk xadillax khaidi chu imoe hehim yhwang yihong wang yhwangibmcom yorkie yorkie liu yorkiefixergmailcom yosukefurukawa yosuke furukawa yosukefurukawagmailcom zyszys yongsheng zhang zyszysgmailcom hehim collaborator emeriti andrasq andras andraskinveycom annamag anna kedzierska annamkedzierskagmailcom brendanashworth brendan ashworth brendanashworthmecom estliberitas alexander makarenko estliberitasgmailcom chrisdickinson chris dickinson christophersdickinsongmailcom davidcai david cai davidcaiyahoocom hehim firedfox daniel wang wangyanggmailcom imraniq imran iqbal imranimraniqbalorg imyller ilkka myller ilkkamyllernodefieldcom isaacs isaac z schlueter iizsme jasongin jason ginchereau jasonginmicrosoftcom jhamhader yuval brik yuvalbrikorgil joshgav josh gavant joshgavantoutlookcom kunalspathak kunal pathak kunalpathakmicrosoftcom lucamaraschi luca maraschi lucamaraschigmailcom hehim lxe aleksey smolenchuk lxelxeco matthewloring matthew loring mattloringgooglecom micnic nicu micleusanu micnicgmailcom hehim mikeal mikeal rogers mikealrogersgmailcom monsanto christopher monsanto chrismonsanto olegas oleg elifantiev olegelifantievru orangemocha alexis campailla orangemochanodejsorg othiym forrest l norvell ogdaoaioxxysznet hehim petkaantonov petka antonov petkaantonovhotmailcom phillipj phillip johnsen johphigmailcom piscisaureus bert belder bertbeldergmailcom pmq minqi pan pmqgmailcom rlidwka alex kocharin alexkocharinru rmg ryan graham rmgrahamgmailcom robertkowalski robert kowalski rokkowalskigd romankl roman klauke romaaangitgmailcom rreverser ingvar stepanyan merreversercom stefanmb stefan budeanu stefanbudeanucom tellnes christian tellnes christiantellnesno thlorenz thorsten lorenz thlorenzgmxde tunniclm mike tunnicliffe mjtunnicliffegmailcom vsemozhetbyt vse mozhet byt vsemozhetbytgmailcom hehim whitlockjc jeremy whitlock jwhitlockapacheorg collaborators follow collaboratorguidemd maintaining nodejs project release keys gpg keys used sign nodejs releases beth griggs bethanygriggsukibmcom edfecccdaabc colin ihrig cjihriggmailcom aecdbafaddbdbebc evan lucas evanlucasmecom baeffdfbbacca gibson fahnestock gibfahngmailcom aebcaabcfbfbbca james snell jasnellkeybaseio dcfdacbbcecaedefc jeremiah senkpiel fishrockkeybaseio fdafbcbffeebe michael zasso targosprotonmailcom fccafefdceefaaae myles borins mylesborinsgmailcom cfdfffecadebcccfc rod vagg rodvaggorg ddfbaeeddaccfdd ruben bridgewater rubenbridgewaterde acbeeecdefbebc shelley vohr shelleyvohrgmailcom befaaecddffac import full set trusted release keys gpg keyserver poolskskeyserversnet recvkeys edfecccdaabc gpg keyserver poolskskeyserversnet recvkeys befaaecddffac gpg keyserver poolskskeyserversnet recvkeys aecdbafaddbdbebc gpg keyserver poolskskeyserversnet recvkeys baeffdfbbacca gpg keyserver poolskskeyserversnet recvkeys aebcaabcfbfbbca gpg keyserver poolskskeyserversnet recvkeys dcfdacbbcecaedefc gpg keyserver poolskskeyserversnet recvkeys fdafbcbffeebe gpg keyserver poolskskeyserversnet recvkeys fccafefdceefaaae gpg keyserver poolskskeyserversnet recvkeys cfdfffecadebcccfc gpg keyserver poolskskeyserversnet recvkeys ddfbaeeddaccfdd gpg keyserver poolskskeyserversnet recvkeys acbeeecdefbebc see section verifying binaries use keys verify downloaded file keys used sign previous releases chris dickinson christophersdickinsongmailcom fdfdebdaaceb isaac z schlueter iizsme ceebecfbabaccf italo casas meitaloacasascom dbdcefefeccfffe julien gilli jgillifastmailfm feebcbcddafcd timothy j fontaine tjfontainegmailcom dfdabbcdffdd,nodej javascript runtim built chrome v javascript engin inform use nodej see nodej websit nodej project use open govern model openj foundat provid support project project bound code conduct tabl content support releas type download current lt releas nightli releas api document verifi binari build nodej secur contribut nodej current project team member tsc technic steer committe collabor releas key support look help check instruct get support releas type current activ develop code current releas branch major version number exampl vx nodej releas new major version everi month allow break chang happen april octob everi year releas appear octob support life month releas appear april convert lt see octob lt releas receiv longterm support focu stabil secur everi evennumb major version becom lt releas lt releas receiv month activ lt support month mainten lt releas line alphabeticallyord codenam begin v argon break chang featur addit except special circumst nightli code current branch built everi hour chang use caution current lt releas follow semant version member releas team sign current lt releas inform see releas readm download binari instal sourc tarbal avail httpsnodejsorgendownload current lt releas httpsnodejsorgdownloadreleas latest directori alia latest current releas latestcodenam directori alia latest releas lt line exampl latestcarbon directori contain latest carbon nodej releas nightli releas httpsnodejsorgdownloadnightli directori name filenam contain date utc time commit sha head releas api document document latest current releas httpsnodejsorgapi versionspecif document avail releas directori doc subdirectori versionspecif document also httpsnodejsorgdownloaddoc verifi binari download directori contain shasumstxt file sha checksum file download shasumstxt use curl curl httpsnodejsorgdistvxyzshasumstxt check download file match checksum run shasum command grep nodevxyztargz shasumstxt shasum c current lt gpg detach signatur shasumstxt shasumstxtsig use gpg verifi integr shasumtxt first need import gpg key individu author creat releas import key gpg keyserv poolskskeyserversnet recvkey ddfbaeeddaccfdd see bottom readm full script import activ releas key next download shasumstxtsig releas curl httpsnodejsorgdistvxyzshasumstxtsig use gpg verifi shasumstxtsig shasumstxt verifi file signatur build nodej see buildingmd instruct build nodej sourc list support platform secur inform report secur vulner nodej see securitymd contribut nodej contribut project work group strateg initi current project team member inform govern nodej project see governancemd tsc technic steer committe addaleax anna henningsen annaaddaleaxnet sheher apapirovski anatoli papirovski apapirovskimaccom hehim bethgrigg beth grigg bethanygriggsukibmcom sheher chalker chalkerxgmailcom hehim cjihrig colin ihrig cjihriggmailcom hehim danbev daniel beveniu danielbeveniusgmailcom hehim fhinkel franziska hinkelmann franziskahinkelmanngmailcom sheher fishrock jeremiah senkpiel fishrockrocketmailcom gabrielschulhof gabriel schulhof gabrielschulhofintelcom gireeshpunathil gireesh punathil gpunathiinibmcom hehim jasnel jame snell jasnellgmailcom hehim joyeecheung joye cheung joyeechgmailcom sheher mcollina matteo collina matteocollinagmailcom hehim mhdawson michael dawson michaeldawsoncaibmcom hehim mylesborin myle borin mylesborinsgmailcom hehim samgithub sam robert vieuxtechgmailcom targo michael zasso targosprotonmailcom hehim thefourthey sakthipriyan vairamani thechargingvolcanogmailcom hehim tniessen tobia nieen tniessentnied trott rich trott rtrottgmailcom hehim tsc emer bnoordhui ben noordhui infobnoordhuisnl chrisdickinson chri dickinson christophersdickinsongmailcom evanluca evan luca evanlucasmecom hehim gibfahn gibson fahnestock gibfahngmailcom hehim indutni fedor indutni fedorindutnygmailcom isaac isaac z schlueter iizsm joshgav josh gavant joshgavantoutlookcom mscdex brian white mscdexmscdexnet nebriu bryan hugh bryannebriu ofrobot ali ijaz sheikh ofrobotsgooglecom hehim orangemocha alexi campailla orangemochanodejsorg piscisaureu bert belder bertbeldergmailcom rvagg rod vagg rvagg shigeki shigeki ohtsu ohtsuohtsuorg hehim timothygu tiancheng timothi gu timothygugmailcom hehim trevnorri trevor norri trevnorrisgmailcom collabor addaleax anna henningsen annaaddaleaxnet sheher ak aleksei koziatinskii akspbgmailcom andreasmadsen andrea madsen amwebdkgmailcom hehim antsmartian anto aravinth antoaravinthcsegmailcom hehim apapirovski anatoli papirovski apapirovskimaccom hehim aqrln alexey orlenko eaglexrlnkgmailcom hehim bcoe ben coe bencoegmailcom hehim bengl bryan english bryanbryanenglishcom hehim benjamingr benjamin gruenbaum benjamingrgmailcom bethgrigg beth grigg bethanygriggsukibmcom sheher bmeck bradley faria bradleymeckgmailcom bmeurer benedikt meurer benediktmeurergmailcom bnoordhui ben noordhui infobnoordhuisnl boneskul christoph hiller boneskullboneskullcom hehim bridgear ruben bridgewat rubenbridgewaterd hehim bzoz bartosz sosnowski bartoszjaneasystemscom calvinmetcalf calvin metcalf calvinmetcalfgmailcom cclauss christian clauss cclaussmecom hehim chalker chalkerxgmailcom hehim cjihrig colin ihrig cjihriggmailcom hehim claudiorodriguez claudio rodriguez cjrodryahoocom codebyter shelley vohr codebyteregmailcom sheher danbev daniel beveniu danielbeveniusgmailcom hehim davisjam jami davi davisjamvtedu hehim devnexen david carlier devnexengmailcom devsnek gu caplan megushost hehim digitalinfin hitesh kanwathirtha digitalinfinitygmailcom hehim edsadr adrian estrada edsadrgmailcom hehim eljefedelrodeodeljef robert jefe lindstaedt robertlindstaedtgmailcom eugeneo eugen ostroukhov eostroukhovgooglecom evanluca evan luca evanlucasmecom hehim fhinkel franziska hinkelmann franziskahinkelmanngmailcom sheher fishrock jeremiah senkpiel fishrockrocketmailcom gabrielschulhof gabriel schulhof gabrielschulhofintelcom gdam georg adam georgeadamsukibmcom hehim geek wyatt preul wpreulgmailcom gengjiawen jiawen geng technicalcutegmailcom gibfahn gibson fahnestock gibfahngmailcom hehim gireeshpunathil gireesh punathil gpunathiinibmcom hehim guybedford guy bedford guybedfordgmailcom hehim hashse yang guo yangguochromiumorg hehim hiroppi yuta hiroto hellohiroppym hehim iarna rebecca turner merebeccaorg indutni fedor indutni fedorindutnygmailcom italoacasa italo casa meitaloacasascom hehim jacksontian jackson tian shyvogmailcom jasnel jame snell jasnellgmailcom hehim jbergstroem johan bergstrom bugsbergstroemnu jdalton johndavid dalton johndaviddaltongmailcom jkrem jan krem jankremsgmailcom hehim joaocgrei joao rei reisjaneasystemscom joyeecheung joye cheung joyeechgmailcom sheher julianduqu julian duqu julianduquejgmailcom hehim jungminu minwoo jung nodecorelabgmailcom hehim kfarnung kyle farnung kfarnungmicrosoftcom hehim lanc lanc ball lballredhatcom hehim legendeca chengzhong wu legendecasgmailcom hehim leko shingo inou lekonoorgmailcom hehim lpinca luigi pinca luigipincagmailcom hehim lundibundi deni otrishko shishugigmailcom hehim maclov jon moss mejonathanmossm hehim mafintosh mathia buu mathiasbuusgmailcom hehim mcollina matteo collina matteocollinagmailcom hehim mhdawson michael dawson michaeldawsoncaibmcom hehim misterdjul julien gilli jgillinodejsorg mmarchini matheu marchini matmmarchinim moonbal chen gang gangccxyfoxmailcom mscdex brian white mscdexmscdexnet mylesborin myle borin mylesborinsgmailcom hehim notanaardvark teddi katz teddykatzgmailcom hehim ofrobot ali ijaz sheikh ofrobotsgooglecom hehim oyyd ouyang yadong oyydoibhgmailcom hehim princejwesley princ john wesley princejohnwesleygmailcom psmarshal peter marshal petermarshallchromiumorg hehim qard stephen belang adminstephenbelangercom hehim refack refael ackermann refackgmailcom hehim richardlau richard lau riclauukibmcom ronkorv ron korv ronronkorvingnl rubi sam rubi rubysintertwinglynet rvagg rod vagg rodvaggorg ryzokuken ujjwal sharma usharmagmailcom hehim saghul saul ibarra corretg saghulgmailcom samgithub sam robert vieuxtechgmailcom santigimeno santiago gimeno santiagogimenogmailcom sebdeck sebastiaan decker sebdeckersgmailcom seishun nikolai vavilov vvnicholasgmailcom shigeki shigeki ohtsu ohtsuohtsuorg hehim shisama masashi hirano shisamagmailcom hehim silverwind roman reiss mesilverwindio srl steven r loomi srloomisusibmcom starkwang weijia wang starkwangcom targo michael zasso targosprotonmailcom hehim thefourthey sakthipriyan vairamani thechargingvolcanogmailcom hehim thekemkid glen kean glenkeanegmailcom hehim timothygu tiancheng timothi gu timothygugmailcom hehim tniessen tobia nieen tniessentnied trevnorri trevor norri trevnorrisgmailcom trivikr trivikram kamat trivikrdevgmailcom trott rich trott rtrottgmailcom hehim vdeturckheim vladimir de turckheim vladthotmailcom hehim vkurchatkin vladimir kurchatkin vladimirkurchatkingmailcom watild daijiro wachi daijirowachigmailcom hehim watson thoma watson wtsondk xadillax khaidi chu imo hehim yhwang yihong wang yhwangibmcom yorki yorki liu yorkiefixergmailcom yosukefurukawa yosuk furukawa yosukefurukawagmailcom zyszi yongsheng zhang zyszysgmailcom hehim collabor emer andrasq andra andraskinveycom annamag anna kedzierska annamkedzierskagmailcom brendanashworth brendan ashworth brendanashworthmecom estliberita alexand makarenko estliberitasgmailcom chrisdickinson chri dickinson christophersdickinsongmailcom davidcai david cai davidcaiyahoocom hehim firedfox daniel wang wangyanggmailcom imraniq imran iqbal imranimraniqbalorg imyl ilkka myller ilkkamyllernodefieldcom isaac isaac z schlueter iizsm jasongin jason ginchereau jasonginmicrosoftcom jhamhad yuval brik yuvalbrikorgil joshgav josh gavant joshgavantoutlookcom kunalspathak kunal pathak kunalpathakmicrosoftcom lucamaraschi luca maraschi lucamaraschigmailcom hehim lxe aleksey smolenchuk lxelxeco matthewlor matthew lore mattloringgooglecom micnic nicu micleusanu micnicgmailcom hehim mikeal mikeal roger mikealrogersgmailcom monsanto christoph monsanto chrismonsanto olega oleg elifantiev olegelifantievru orangemocha alexi campailla orangemochanodejsorg othiym forrest l norvel ogdaoaioxxysznet hehim petkaantonov petka antonov petkaantonovhotmailcom phillipj phillip johnsen johphigmailcom piscisaureu bert belder bertbeldergmailcom pmq minqi pan pmqgmailcom rlidwka alex kocharin alexkocharinru rmg ryan graham rmgrahamgmailcom robertkowalski robert kowalski rokkowalskigd romankl roman klauk romaaangitgmailcom rrevers ingvar stepanyan merreversercom stefanmb stefan budeanu stefanbudeanucom telln christian telln christiantellnesno thlorenz thorsten lorenz thlorenzgmxd tunniclm mike tunnicliff mjtunnicliffegmailcom vsemozhetbyt vse mozhet byt vsemozhetbytgmailcom hehim whitlockjc jeremi whitlock jwhitlockapacheorg collabor follow collaboratorguidemd maintain nodej project releas key gpg key use sign nodej releas beth grigg bethanygriggsukibmcom edfecccdaabc colin ihrig cjihriggmailcom aecdbafaddbdbebc evan luca evanlucasmecom baeffdfbbacca gibson fahnestock gibfahngmailcom aebcaabcfbfbbca jame snell jasnellkeybaseio dcfdacbbcecaedefc jeremiah senkpiel fishrockkeybaseio fdafbcbffeeb michael zasso targosprotonmailcom fccafefdceefaaa myle borin mylesborinsgmailcom cfdfffecadebcccfc rod vagg rodvaggorg ddfbaeeddaccfdd ruben bridgewat rubenbridgewaterd acbeeecdefbebc shelley vohr shelleyvohrgmailcom befaaecddffac import full set trust releas key gpg keyserv poolskskeyserversnet recvkey edfecccdaabc gpg keyserv poolskskeyserversnet recvkey befaaecddffac gpg keyserv poolskskeyserversnet recvkey aecdbafaddbdbebc gpg keyserv poolskskeyserversnet recvkey baeffdfbbacca gpg keyserv poolskskeyserversnet recvkey aebcaabcfbfbbca gpg keyserv poolskskeyserversnet recvkey dcfdacbbcecaedefc gpg keyserv poolskskeyserversnet recvkey fdafbcbffeeb gpg keyserv poolskskeyserversnet recvkey fccafefdceefaaa gpg keyserv poolskskeyserversnet recvkey cfdfffecadebcccfc gpg keyserv poolskskeyserversnet recvkey ddfbaeeddaccfdd gpg keyserv poolskskeyserversnet recvkey acbeeecdefbebc see section verifi binari use key verifi download file key use sign previou releas chri dickinson christophersdickinsongmailcom fdfdebdaaceb isaac z schlueter iizsm ceebecfbabaccf italo casa meitaloacasascom dbdcefefeccfff julien gilli jgillifastmailfm feebcbcddafcd timothi j fontain tjfontainegmailcom dfdabbcdffdd,nodejs javascript runtime built chrome v javascript engine information using nodejs see nodejs website nodejs project us open governance model openjs foundation provides support project project bound code conduct table content support release type download current lts release nightly release api documentation verifying binary building nodejs security contributing nodejs current project team member tsc technical steering committee collaborator release key support looking help check instruction getting support release type current active development code current release branch major version number example vx nodejs release new major version every month allowing breaking change happens april october every year release appearing october support life month release appearing april convert lts see october lts release receive longterm support focus stability security every evennumbered major version become lts release lts release receive month active lts support month maintenance lts release line alphabeticallyordered codenames beginning v argon breaking change feature addition except special circumstance nightly code current branch built every hour change use caution current lts release follow semantic versioning member release team sign current lts release information see release readme download binary installers source tarballs available httpsnodejsorgendownload current lts release httpsnodejsorgdownloadrelease latest directory alias latest current release latestcodename directory alias latest release lts line example latestcarbon directory contains latest carbon nodejs release nightly release httpsnodejsorgdownloadnightly directory name filename contains date utc time commit sha head release api documentation documentation latest current release httpsnodejsorgapi versionspecific documentation available release directory doc subdirectory versionspecific documentation also httpsnodejsorgdownloaddocs verifying binary download directory contain shasumstxt file sha checksum file download shasumstxt using curl curl httpsnodejsorgdistvxyzshasumstxt check downloaded file match checksum run shasum command grep nodevxyztargz shasumstxt shasum c current lts gpg detached signature shasumstxt shasumstxtsig use gpg verify integrity shasumtxt first need import gpg key individual authorized create release import key gpg keyserver poolskskeyserversnet recvkeys ddfbaeeddaccfdd see bottom readme full script import active release key next download shasumstxtsig release curl httpsnodejsorgdistvxyzshasumstxtsig use gpg verify shasumstxtsig shasumstxt verify file signature building nodejs see buildingmd instruction build nodejs source list supported platform security information reporting security vulnerability nodejs see securitymd contributing nodejs contributing project working group strategic initiative current project team member information governance nodejs project see governancemd tsc technical steering committee addaleax anna henningsen annaaddaleaxnet sheher apapirovski anatoli papirovski apapirovskimaccom hehim bethgriggs beth griggs bethanygriggsukibmcom sheher chalker chalkerxgmailcom hehim cjihrig colin ihrig cjihriggmailcom hehim danbev daniel bevenius danielbeveniusgmailcom hehim fhinkel franziska hinkelmann franziskahinkelmanngmailcom sheher fishrock jeremiah senkpiel fishrockrocketmailcom gabrielschulhof gabriel schulhof gabrielschulhofintelcom gireeshpunathil gireesh punathil gpunathiinibmcom hehim jasnell james snell jasnellgmailcom hehim joyeecheung joyee cheung joyeechgmailcom sheher mcollina matteo collina matteocollinagmailcom hehim mhdawson michael dawson michaeldawsoncaibmcom hehim mylesborins myles borins mylesborinsgmailcom hehim samgithub sam robert vieuxtechgmailcom targos michael zasso targosprotonmailcom hehim thefourtheye sakthipriyan vairamani thechargingvolcanogmailcom hehim tniessen tobias nieen tniessentniede trott rich trott rtrottgmailcom hehim tsc emeriti bnoordhuis ben noordhuis infobnoordhuisnl chrisdickinson chris dickinson christophersdickinsongmailcom evanlucas evan lucas evanlucasmecom hehim gibfahn gibson fahnestock gibfahngmailcom hehim indutny fedor indutny fedorindutnygmailcom isaac isaac z schlueter iizsme joshgav josh gavant joshgavantoutlookcom mscdex brian white mscdexmscdexnet nebrius bryan hughes bryannebrius ofrobots ali ijaz sheikh ofrobotsgooglecom hehim orangemocha alexis campailla orangemochanodejsorg piscisaureus bert belder bertbeldergmailcom rvagg rod vagg rvagg shigeki shigeki ohtsu ohtsuohtsuorg hehim timothygu tiancheng timothy gu timothygugmailcom hehim trevnorris trevor norris trevnorrisgmailcom collaborator addaleax anna henningsen annaaddaleaxnet sheher ak aleksei koziatinskii akspbgmailcom andreasmadsen andreas madsen amwebdkgmailcom hehim antsmartian anto aravinth antoaravinthcsegmailcom hehim apapirovski anatoli papirovski apapirovskimaccom hehim aqrln alexey orlenko eaglexrlnkgmailcom hehim bcoe ben coe bencoegmailcom hehim bengl bryan english bryanbryanenglishcom hehim benjamingr benjamin gruenbaum benjamingrgmailcom bethgriggs beth griggs bethanygriggsukibmcom sheher bmeck bradley farias bradleymeckgmailcom bmeurer benedikt meurer benediktmeurergmailcom bnoordhuis ben noordhuis infobnoordhuisnl boneskull christopher hiller boneskullboneskullcom hehim bridgear ruben bridgewater rubenbridgewaterde hehim bzoz bartosz sosnowski bartoszjaneasystemscom calvinmetcalf calvin metcalf calvinmetcalfgmailcom cclauss christian clauss cclaussmecom hehim chalker chalkerxgmailcom hehim cjihrig colin ihrig cjihriggmailcom hehim claudiorodriguez claudio rodriguez cjrodryahoocom codebytere shelley vohr codebyteregmailcom sheher danbev daniel bevenius danielbeveniusgmailcom hehim davisjam jamie davis davisjamvtedu hehim devnexen david carlier devnexengmailcom devsnek gu caplan megushost hehim digitalinfinity hitesh kanwathirtha digitalinfinitygmailcom hehim edsadr adrian estrada edsadrgmailcom hehim eljefedelrodeodeljefe robert jefe lindstaedt robertlindstaedtgmailcom eugeneo eugene ostroukhov eostroukhovgooglecom evanlucas evan lucas evanlucasmecom hehim fhinkel franziska hinkelmann franziskahinkelmanngmailcom sheher fishrock jeremiah senkpiel fishrockrocketmailcom gabrielschulhof gabriel schulhof gabrielschulhofintelcom gdams george adam georgeadamsukibmcom hehim geek wyatt preul wpreulgmailcom gengjiawen jiawen geng technicalcutegmailcom gibfahn gibson fahnestock gibfahngmailcom hehim gireeshpunathil gireesh punathil gpunathiinibmcom hehim guybedford guy bedford guybedfordgmailcom hehim hashseed yang guo yangguochromiumorg hehim hiroppy yuta hiroto hellohiroppyme hehim iarna rebecca turner merebeccaorg indutny fedor indutny fedorindutnygmailcom italoacasas italo casas meitaloacasascom hehim jacksontian jackson tian shyvogmailcom jasnell james snell jasnellgmailcom hehim jbergstroem johan bergstrom bugsbergstroemnu jdalton johndavid dalton johndaviddaltongmailcom jkrems jan krems jankremsgmailcom hehim joaocgreis joao real reisjaneasystemscom joyeecheung joyee cheung joyeechgmailcom sheher julianduque julian duque julianduquejgmailcom hehim jungminu minwoo jung nodecorelabgmailcom hehim kfarnung kyle farnung kfarnungmicrosoftcom hehim lance lance ball lballredhatcom hehim legendecas chengzhong wu legendecasgmailcom hehim leko shingo inoue lekonoorgmailcom hehim lpinca luigi pinca luigipincagmailcom hehim lundibundi denys otrishko shishugigmailcom hehim maclover jon moss mejonathanmossme hehim mafintosh mathias buus mathiasbuusgmailcom hehim mcollina matteo collina matteocollinagmailcom hehim mhdawson michael dawson michaeldawsoncaibmcom hehim misterdjules julien gilli jgillinodejsorg mmarchini matheus marchini matmmarchinime moonball chen gang gangccxyfoxmailcom mscdex brian white mscdexmscdexnet mylesborins myles borins mylesborinsgmailcom hehim notanaardvark teddy katz teddykatzgmailcom hehim ofrobots ali ijaz sheikh ofrobotsgooglecom hehim oyyd ouyang yadong oyydoibhgmailcom hehim princejwesley prince john wesley princejohnwesleygmailcom psmarshall peter marshall petermarshallchromiumorg hehim qard stephen belanger adminstephenbelangercom hehim refack refael ackermann refackgmailcom hehim richardlau richard lau riclauukibmcom ronkorving ron korving ronronkorvingnl ruby sam ruby rubysintertwinglynet rvagg rod vagg rodvaggorg ryzokuken ujjwal sharma usharmagmailcom hehim saghul saul ibarra corretge saghulgmailcom samgithub sam robert vieuxtechgmailcom santigimeno santiago gimeno santiagogimenogmailcom sebdeckers sebastiaan decker sebdeckersgmailcom seishun nikolai vavilov vvnicholasgmailcom shigeki shigeki ohtsu ohtsuohtsuorg hehim shisama masashi hirano shisamagmailcom hehim silverwind roman reiss mesilverwindio srl steven r loomis srloomisusibmcom starkwang weijia wang starkwangcom targos michael zasso targosprotonmailcom hehim thefourtheye sakthipriyan vairamani thechargingvolcanogmailcom hehim thekemkid glen keane glenkeanegmailcom hehim timothygu tiancheng timothy gu timothygugmailcom hehim tniessen tobias nieen tniessentniede trevnorris trevor norris trevnorrisgmailcom trivikr trivikram kamat trivikrdevgmailcom trott rich trott rtrottgmailcom hehim vdeturckheim vladimir de turckheim vladthotmailcom hehim vkurchatkin vladimir kurchatkin vladimirkurchatkingmailcom watilde daijiro wachi daijirowachigmailcom hehim watson thomas watson wtsondk xadillax khaidi chu imoe hehim yhwang yihong wang yhwangibmcom yorkie yorkie liu yorkiefixergmailcom yosukefurukawa yosuke furukawa yosukefurukawagmailcom zyszys yongsheng zhang zyszysgmailcom hehim collaborator emeriti andrasq andras andraskinveycom annamag anna kedzierska annamkedzierskagmailcom brendanashworth brendan ashworth brendanashworthmecom estliberitas alexander makarenko estliberitasgmailcom chrisdickinson chris dickinson christophersdickinsongmailcom davidcai david cai davidcaiyahoocom hehim firedfox daniel wang wangyanggmailcom imraniq imran iqbal imranimraniqbalorg imyller ilkka myller ilkkamyllernodefieldcom isaac isaac z schlueter iizsme jasongin jason ginchereau jasonginmicrosoftcom jhamhader yuval brik yuvalbrikorgil joshgav josh gavant joshgavantoutlookcom kunalspathak kunal pathak kunalpathakmicrosoftcom lucamaraschi luca maraschi lucamaraschigmailcom hehim lxe aleksey smolenchuk lxelxeco matthewloring matthew loring mattloringgooglecom micnic nicu micleusanu micnicgmailcom hehim mikeal mikeal rogers mikealrogersgmailcom monsanto christopher monsanto chrismonsanto olegas oleg elifantiev olegelifantievru orangemocha alexis campailla orangemochanodejsorg othiym forrest l norvell ogdaoaioxxysznet hehim petkaantonov petka antonov petkaantonovhotmailcom phillipj phillip johnsen johphigmailcom piscisaureus bert belder bertbeldergmailcom pmq minqi pan pmqgmailcom rlidwka alex kocharin alexkocharinru rmg ryan graham rmgrahamgmailcom robertkowalski robert kowalski rokkowalskigd romankl roman klauke romaaangitgmailcom rreverser ingvar stepanyan merreversercom stefanmb stefan budeanu stefanbudeanucom tellnes christian tellnes christiantellnesno thlorenz thorsten lorenz thlorenzgmxde tunniclm mike tunnicliffe mjtunnicliffegmailcom vsemozhetbyt vse mozhet byt vsemozhetbytgmailcom hehim whitlockjc jeremy whitlock jwhitlockapacheorg collaborator follow collaboratorguidemd maintaining nodejs project release key gpg key used sign nodejs release beth griggs bethanygriggsukibmcom edfecccdaabc colin ihrig cjihriggmailcom aecdbafaddbdbebc evan lucas evanlucasmecom baeffdfbbacca gibson fahnestock gibfahngmailcom aebcaabcfbfbbca james snell jasnellkeybaseio dcfdacbbcecaedefc jeremiah senkpiel fishrockkeybaseio fdafbcbffeebe michael zasso targosprotonmailcom fccafefdceefaaae myles borins mylesborinsgmailcom cfdfffecadebcccfc rod vagg rodvaggorg ddfbaeeddaccfdd ruben bridgewater rubenbridgewaterde acbeeecdefbebc shelley vohr shelleyvohrgmailcom befaaecddffac import full set trusted release key gpg keyserver poolskskeyserversnet recvkeys edfecccdaabc gpg keyserver poolskskeyserversnet recvkeys befaaecddffac gpg keyserver poolskskeyserversnet recvkeys aecdbafaddbdbebc gpg keyserver poolskskeyserversnet recvkeys baeffdfbbacca gpg keyserver poolskskeyserversnet recvkeys aebcaabcfbfbbca gpg keyserver poolskskeyserversnet recvkeys dcfdacbbcecaedefc gpg keyserver poolskskeyserversnet recvkeys fdafbcbffeebe gpg keyserver poolskskeyserversnet recvkeys fccafefdceefaaae gpg keyserver poolskskeyserversnet recvkeys cfdfffecadebcccfc gpg keyserver poolskskeyserversnet recvkeys ddfbaeeddaccfdd gpg keyserver poolskskeyserversnet recvkeys acbeeecdefbebc see section verifying binary use key verify downloaded file key used sign previous release chris dickinson christophersdickinsongmailcom fdfdebdaaceb isaac z schlueter iizsme ceebecfbabaccf italo casas meitaloacasascom dbdcefefeccfffe julien gilli jgillifastmailfm feebcbcddafcd timothy j fontaine tjfontainegmailcom dfdabbcdffdd
30,JavaScript,"GitHub - FortAwesome/Font-Awesome: The iconic SVG, font, and CSS toolkit","

Version 5 ‚Äì the iconic SVG, font, and CSS framework

The internet's most popular icon toolkit has been redesigned and built from
scratch. On top of this, features like icon font ligatures, an SVG framework,
official NPM packages for popular frontend libraries like React, and access to
a new CDN.
Not familiar with Font Awesome 5? Learn
more about our
successful Kickstarter and plan. You can also order Font Awesome
Pro which includes tons more icons directly
from fontawesome.com.
Documentation
Learn how to get started with Font Awesome and then dive deeper into other and advanced topics:
Using Font Awesome on the Web

With SVG with JavaScript
With web fonts with CSS
Upgrading from version 4
Installing Font Awesome with a package manager
Downloading + hosting Font Awesome yourself
Performance and security
Accessibility
Troubleshooting

Advanced Options & Techniques

Using CSS pseudo-elements
SVG sprites
The Font Awesome API
SVG symbols
SVG JavaScript Core
Server side rendering

Using Font Awesome on the Desktop

Getting started
Upgrading from version 4
Using ligatures
Using glyphs
Troubleshooting

Where did Font Awesome 4 (or 3) go?
Now that Font Awesome 5 has been released we are marking version 4 as
end-of-life. We don't plan on releasing any further versions of the 4.x or 3.x.
Documentation is still available but it's moved to
https://fontawesome.com/v4.7.0 and
https://fontawesome.com/v3.2.1.
The Git repository for
v4.7.0 and
v3.2.1 can
be found in our GitHub releases.
Change log
We'll keep track of each release in the CHANGELOG.md
Looking for older versions of Font Awesome? Check the releases.
Upgrading
From time-to-time we'll have special upgrading instructions from one version to the next.
Check out the UPGRADING.md guide when you upgrade your dependencies.
Code of conduct
We will behave ourselves if you behave yourselves. For more details see our
CODE_OF_CONDUCT.md.
Contributing
Please read through our contributing guidelines.  Included
are directions for opening issues.
Versioning
Font Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered
with the following format:
<major>.<minor>.<patch>
For more information on SemVer, please visit http://semver.org.
The major version ""5"" is part of an umbrella release.  It includes many different types of files and technologies. Therefore
we deviate from normal SemVer in the following ways:

Any release may update the design, look-and-feel, or branding of an existing
icon
We will never intentionally release a patch version update that breaks
backward compatibility
A minor release may include backward-incompatible changes but we will
write clear upgrading instructions in UPGRADING.md
A minor or patch release will never remove icons
Bug fixes will be addressed as patch releases unless they include backward
incompatibility then they will be minor releases

License
Font Awesome Free is free, open source, and GPL friendly. You can use it for
commercial projects, open source projects, or really almost whatever you want.

Icons ‚Äî CC BY 4.0 License

In the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.


Fonts ‚Äî SIL OFL 1.1 License

In the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.


Code ‚Äî MIT License

In the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.



Attribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font
Awesome Free files already contain embedded comments with sufficient
attribution, so you shouldn't need to do anything additional when using these
files normally.
We've kept attribution comments terse, so we ask that you do not actively work
to remove them from files, especially code. They're a great way for folks to
learn about Font Awesome.
Team

Dave Gandy
Travis Chase
Rob Madole
Brian Talbot
Jory Raphael
Mike Wilkerson
Trevor Chase
Jason Lundien
Jason Otero
Edward Emanuel
Geremia Taglialatela

",version iconic svg font css framework internets popular icon toolkit redesigned built scratch top features like icon font ligatures svg framework official npm packages popular frontend libraries like react access new cdn familiar font awesome learn successful kickstarter plan also order font awesome pro includes tons icons directly fontawesomecom documentation learn get started font awesome dive deeper advanced topics using font awesome web svg javascript web fonts css upgrading version installing font awesome package manager downloading hosting font awesome performance security accessibility troubleshooting advanced options techniques using css pseudoelements svg sprites font awesome api svg symbols svg javascript core server side rendering using font awesome desktop getting started upgrading version using ligatures using glyphs troubleshooting font awesome go font awesome released marking version endoflife dont plan releasing versions x x documentation still available moved httpsfontawesomecomv httpsfontawesomecomv git repository v v found github releases change log well keep track release changelogmd looking older versions font awesome check releases upgrading timetotime well special upgrading instructions one version next check upgradingmd guide upgrade dependencies code conduct behave behave details see codeofconductmd contributing please read contributing guidelines included directions opening issues versioning font awesome maintained semantic versioning guidelines much possible releases numbered following format majorminorpatch information semver please visit httpsemverorg major version part umbrella release includes many different types files technologies therefore deviate normal semver following ways release may update design lookandfeel branding existing icon never intentionally release patch version update breaks backward compatibility minor release may include backwardincompatible changes write clear upgrading instructions upgradingmd minor patch release never remove icons bug fixes addressed patch releases unless include backward incompatibility minor releases license font awesome free free open source gpl friendly use commercial projects open source projects really almost whatever want icons cc license font awesome free download cc license applies icons packaged svg js files types fonts sil ofl license font awesome free download sil olf license applies icons packaged web desktop font files code mit license font awesome free download mit license applies nonfont nonicon files attribution required mit sil olf cc licenses downloaded font awesome free files already contain embedded comments sufficient attribution shouldnt need anything additional using files normally weve kept attribution comments terse ask actively work remove files especially code theyre great way folks learn font awesome team dave gandy travis chase rob madole brian talbot jory raphael mike wilkerson trevor chase jason lundien jason otero edward emanuel geremia taglialatela,version icon svg font css framework internet popular icon toolkit redesign built scratch top featur like icon font ligatur svg framework offici npm packag popular frontend librari like react access new cdn familiar font awesom learn success kickstart plan also order font awesom pro includ ton icon directli fontawesomecom document learn get start font awesom dive deeper advanc topic use font awesom web svg javascript web font css upgrad version instal font awesom packag manag download host font awesom perform secur access troubleshoot advanc option techniqu use css pseudoel svg sprite font awesom api svg symbol svg javascript core server side render use font awesom desktop get start upgrad version use ligatur use glyph troubleshoot font awesom go font awesom releas mark version endoflif dont plan releas version x x document still avail move httpsfontawesomecomv httpsfontawesomecomv git repositori v v found github releas chang log well keep track releas changelogmd look older version font awesom check releas upgrad timetotim well special upgrad instruct one version next check upgradingmd guid upgrad depend code conduct behav behav detail see codeofconductmd contribut pleas read contribut guidelin includ direct open issu version font awesom maintain semant version guidelin much possibl releas number follow format majorminorpatch inform semver pleas visit httpsemverorg major version part umbrella releas includ mani differ type file technolog therefor deviat normal semver follow way releas may updat design lookandfeel brand exist icon never intent releas patch version updat break backward compat minor releas may includ backwardincompat chang write clear upgrad instruct upgradingmd minor patch releas never remov icon bug fix address patch releas unless includ backward incompat minor releas licens font awesom free free open sourc gpl friendli use commerci project open sourc project realli almost whatev want icon cc licens font awesom free download cc licens appli icon packag svg js file type font sil ofl licens font awesom free download sil olf licens appli icon packag web desktop font file code mit licens font awesom free download mit licens appli nonfont nonicon file attribut requir mit sil olf cc licens download font awesom free file alreadi contain embed comment suffici attribut shouldnt need anyth addit use file normal weve kept attribut comment ters ask activ work remov file especi code theyr great way folk learn font awesom team dave gandi travi chase rob madol brian talbot jori raphael mike wilkerson trevor chase jason lundien jason otero edward emanuel geremia taglialatela,version iconic svg font cs framework internet popular icon toolkit redesigned built scratch top feature like icon font ligature svg framework official npm package popular frontend library like react access new cdn familiar font awesome learn successful kickstarter plan also order font awesome pro includes ton icon directly fontawesomecom documentation learn get started font awesome dive deeper advanced topic using font awesome web svg javascript web font cs upgrading version installing font awesome package manager downloading hosting font awesome performance security accessibility troubleshooting advanced option technique using cs pseudoelements svg sprite font awesome api svg symbol svg javascript core server side rendering using font awesome desktop getting started upgrading version using ligature using glyph troubleshooting font awesome go font awesome released marking version endoflife dont plan releasing version x x documentation still available moved httpsfontawesomecomv httpsfontawesomecomv git repository v v found github release change log well keep track release changelogmd looking older version font awesome check release upgrading timetotime well special upgrading instruction one version next check upgradingmd guide upgrade dependency code conduct behave behave detail see codeofconductmd contributing please read contributing guideline included direction opening issue versioning font awesome maintained semantic versioning guideline much possible release numbered following format majorminorpatch information semver please visit httpsemverorg major version part umbrella release includes many different type file technology therefore deviate normal semver following way release may update design lookandfeel branding existing icon never intentionally release patch version update break backward compatibility minor release may include backwardincompatible change write clear upgrading instruction upgradingmd minor patch release never remove icon bug fix addressed patch release unless include backward incompatibility minor release license font awesome free free open source gpl friendly use commercial project open source project really almost whatever want icon cc license font awesome free download cc license applies icon packaged svg j file type font sil ofl license font awesome free download sil olf license applies icon packaged web desktop font file code mit license font awesome free download mit license applies nonfont nonicon file attribution required mit sil olf cc license downloaded font awesome free file already contain embedded comment sufficient attribution shouldnt need anything additional using file normally weve kept attribution comment terse ask actively work remove file especially code theyre great way folk learn font awesome team dave gandy travis chase rob madole brian talbot jory raphael mike wilkerson trevor chase jason lundien jason otero edward emanuel geremia taglialatela
31,JavaScript,GitHub - angular/angular.js: AngularJS - HTML enhanced for web apps!,"AngularJS 
AngularJS lets you write client-side web applications as if you had a smarter browser.  It lets you
use good old HTML (or HAML, Jade/Pug and friends!) as your template language and lets you extend HTML‚Äôs
syntax to express your application‚Äôs components clearly and succinctly.  It automatically
synchronizes data from your UI (view) with your JavaScript objects (model) through 2-way data
binding. To help you structure your application better and make it easy to test, AngularJS teaches
the browser how to do dependency injection and inversion of control.
It also helps with server-side communication, taming async callbacks with promises and deferred objects,
and it makes client-side navigation and deep linking with hashbang urls or HTML5 pushState a
piece of cake. Best of all? It makes development fun!

On July 1, 2018 AngularJS entered a 3 year Long Term Support period: Find out more
Looking for the new Angular? Go here: https://github.com/angular/angular


Web site: https://angularjs.org
Tutorial: https://docs.angularjs.org/tutorial
API Docs: https://docs.angularjs.org/api
Developer Guide: https://docs.angularjs.org/guide
Contribution guidelines: CONTRIBUTING.md
Core Development: DEVELOPERS.md
Dashboard: https://dashboard.angularjs.org

Documentation
Go to https://docs.angularjs.org
Contribute
We've set up a separate document for our
contribution guidelines.
Develop
We've set up a separate document for
developers.

What to use AngularJS for and when to use it
AngularJS is the next generation framework where each component is designed to work with every other
component in an interconnected way like a well-oiled machine. AngularJS is JavaScript MVC made easy
and done right. (Well it is not really MVC, read on, to understand what this means.)
MVC, no, MV* done the right way!
MVC, short for Model-View-Controller, is a design pattern, i.e. how the code should be organized and
how the different parts of an application separated for proper readability and debugging. Model is
the data and the database. View is the user interface and what the user sees. Controller is the main
link between Model and View. These are the three pillars of major programming frameworks present on
the market today. On the other hand AngularJS works on MV*, short for Model-View-Whatever. The
Whatever is AngularJS's way of telling that you may create any kind of linking between the Model
and the View here.
Unlike other frameworks in any programming language, where MVC, the three separate components, each
one has to be written and then connected by the programmer, AngularJS helps the programmer by asking
him/her to just create these and everything else will be taken care of by AngularJS.
Interconnection with HTML at the root level
AngularJS uses HTML to define the user's interface. AngularJS also enables the programmer to write
new HTML tags (AngularJS Directives) and increase the readability and understandability of the HTML
code. Directives are AngularJS‚Äôs way of bringing additional functionality to HTML. Directives
achieve this by enabling us to invent our own HTML elements. This also helps in making the code DRY
(Don't Repeat Yourself), which means once created, a new directive can be used anywhere within the
application.
HTML is also used to determine the wiring of the app. Special attributes in the HTML determine where
to load the app, which components or controllers to use for each element, etc. We specify ""what""
gets loaded, but not ""how"". This declarative approach greatly simplifies app development in a sort
of WYSIWYG way. Rather than spending time on how the program flows and orchestrating the various
moving parts, we simply define what we want and AngularJS will take care of the dependencies.
Data Handling made simple
Data and Data Models in AngularJS are plain JavaScript objects and one can add and change properties
directly on it and loop over objects and arrays at will.
Two-way Data Binding
One of AngularJS's strongest features. Two-way Data Binding means that if something changes in the
Model, the change gets reflected in the View instantaneously, and the same happens the other way
around. This is also referred to as Reactive Programming, i.e. suppose a = b + c is being
programmed and after this, if the value of b and/or c is changed then the value of a will be
automatically updated to reflect the change. AngularJS uses its ""scopes"" as a glue between the Model
and View and makes these updates in one available for the other.
Less Written Code and Easily Maintainable Code
Everything in AngularJS is created to enable the programmer to end up writing less code that is
easily maintainable and readable by any other new person on the team. Believe it or not, one can
write a complete working two-way data binded application in less than 10 lines of code. Try and see
for yourself!
Testing Ready
AngularJS has Dependency Injection, i.e. it takes care of providing all the necessary dependencies
to its controllers and services whenever required. This helps in making the AngularJS code ready for
unit testing by making use of mock dependencies created and injected. This makes AngularJS more
modular and easily testable thus in turn helping a team create more robust applications.
",angularjs angularjs lets write clientside web applications smarter browser lets use good old html haml jadepug friends template language lets extend htmls syntax express applications components clearly succinctly automatically synchronizes data ui view javascript objects model way data binding help structure application better make easy test angularjs teaches browser dependency injection inversion control also helps serverside communication taming async callbacks promises deferred objects makes clientside navigation deep linking hashbang urls html pushstate piece cake best makes development fun july angularjs entered year long term support period find looking new angular go httpsgithubcomangularangular web site httpsangularjsorg tutorial httpsdocsangularjsorgtutorial api docs httpsdocsangularjsorgapi developer guide httpsdocsangularjsorgguide contribution guidelines contributingmd core development developersmd dashboard httpsdashboardangularjsorg documentation go httpsdocsangularjsorg contribute weve set separate document contribution guidelines develop weve set separate document developers use angularjs use angularjs next generation framework component designed work every component interconnected way like welloiled machine angularjs javascript mvc made easy done right well really mvc read understand means mvc mv done right way mvc short modelviewcontroller design pattern ie code organized different parts application separated proper readability debugging model data database view user interface user sees controller main link model view three pillars major programming frameworks present market today hand angularjs works mv short modelviewwhatever whatever angularjss way telling may create kind linking model view unlike frameworks programming language mvc three separate components one written connected programmer angularjs helps programmer asking himher create everything else taken care angularjs interconnection html root level angularjs uses html define users interface angularjs also enables programmer write new html tags angularjs directives increase readability understandability html code directives angularjss way bringing additional functionality html directives achieve enabling us invent html elements also helps making code dry dont repeat means created new directive used anywhere within application html also used determine wiring app special attributes html determine load app components controllers use element etc specify gets loaded declarative approach greatly simplifies app development sort wysiwyg way rather spending time program flows orchestrating various moving parts simply define want angularjs take care dependencies data handling made simple data data models angularjs plain javascript objects one add change properties directly loop objects arrays twoway data binding one angularjss strongest features twoway data binding means something changes model change gets reflected view instantaneously happens way around also referred reactive programming ie suppose b c programmed value b andor c changed value automatically updated reflect change angularjs uses scopes glue model view makes updates one available less written code easily maintainable code everything angularjs created enable programmer end writing less code easily maintainable readable new person team believe one write complete working twoway data binded application less lines code try see testing ready angularjs dependency injection ie takes care providing necessary dependencies controllers services whenever required helps making angularjs code ready unit testing making use mock dependencies created injected makes angularjs modular easily testable thus turn helping team create robust applications,angularj angularj let write clientsid web applic smarter browser let use good old html haml jadepug friend templat languag let extend html syntax express applic compon clearli succinctli automat synchron data ui view javascript object model way data bind help structur applic better make easi test angularj teach browser depend inject invers control also help serversid commun tame async callback promis defer object make clientsid navig deep link hashbang url html pushstat piec cake best make develop fun juli angularj enter year long term support period find look new angular go httpsgithubcomangularangular web site httpsangularjsorg tutori httpsdocsangularjsorgtutori api doc httpsdocsangularjsorgapi develop guid httpsdocsangularjsorgguid contribut guidelin contributingmd core develop developersmd dashboard httpsdashboardangularjsorg document go httpsdocsangularjsorg contribut weve set separ document contribut guidelin develop weve set separ document develop use angularj use angularj next gener framework compon design work everi compon interconnect way like welloil machin angularj javascript mvc made easi done right well realli mvc read understand mean mvc mv done right way mvc short modelviewcontrol design pattern ie code organ differ part applic separ proper readabl debug model data databas view user interfac user see control main link model view three pillar major program framework present market today hand angularj work mv short modelviewwhatev whatev angularjss way tell may creat kind link model view unlik framework program languag mvc three separ compon one written connect programm angularj help programm ask himher creat everyth els taken care angularj interconnect html root level angularj use html defin user interfac angularj also enabl programm write new html tag angularj direct increas readabl understand html code direct angularjss way bring addit function html direct achiev enabl us invent html element also help make code dri dont repeat mean creat new direct use anywher within applic html also use determin wire app special attribut html determin load app compon control use element etc specifi get load declar approach greatli simplifi app develop sort wysiwyg way rather spend time program flow orchestr variou move part simpli defin want angularj take care depend data handl made simpl data data model angularj plain javascript object one add chang properti directli loop object array twoway data bind one angularjss strongest featur twoway data bind mean someth chang model chang get reflect view instantan happen way around also refer reactiv program ie suppos b c program valu b andor c chang valu automat updat reflect chang angularj use scope glue model view make updat one avail less written code easili maintain code everyth angularj creat enabl programm end write less code easili maintain readabl new person team believ one write complet work twoway data bind applic less line code tri see test readi angularj depend inject ie take care provid necessari depend control servic whenev requir help make angularj code readi unit test make use mock depend creat inject make angularj modular easili testabl thu turn help team creat robust applic,angularjs angularjs let write clientside web application smarter browser let use good old html haml jadepug friend template language let extend html syntax express application component clearly succinctly automatically synchronizes data ui view javascript object model way data binding help structure application better make easy test angularjs teach browser dependency injection inversion control also help serverside communication taming async callback promise deferred object make clientside navigation deep linking hashbang url html pushstate piece cake best make development fun july angularjs entered year long term support period find looking new angular go httpsgithubcomangularangular web site httpsangularjsorg tutorial httpsdocsangularjsorgtutorial api doc httpsdocsangularjsorgapi developer guide httpsdocsangularjsorgguide contribution guideline contributingmd core development developersmd dashboard httpsdashboardangularjsorg documentation go httpsdocsangularjsorg contribute weve set separate document contribution guideline develop weve set separate document developer use angularjs use angularjs next generation framework component designed work every component interconnected way like welloiled machine angularjs javascript mvc made easy done right well really mvc read understand mean mvc mv done right way mvc short modelviewcontroller design pattern ie code organized different part application separated proper readability debugging model data database view user interface user see controller main link model view three pillar major programming framework present market today hand angularjs work mv short modelviewwhatever whatever angularjss way telling may create kind linking model view unlike framework programming language mvc three separate component one written connected programmer angularjs help programmer asking himher create everything else taken care angularjs interconnection html root level angularjs us html define user interface angularjs also enables programmer write new html tag angularjs directive increase readability understandability html code directive angularjss way bringing additional functionality html directive achieve enabling u invent html element also help making code dry dont repeat mean created new directive used anywhere within application html also used determine wiring app special attribute html determine load app component controller use element etc specify get loaded declarative approach greatly simplifies app development sort wysiwyg way rather spending time program flow orchestrating various moving part simply define want angularjs take care dependency data handling made simple data data model angularjs plain javascript object one add change property directly loop object array twoway data binding one angularjss strongest feature twoway data binding mean something change model change get reflected view instantaneously happens way around also referred reactive programming ie suppose b c programmed value b andor c changed value automatically updated reflect change angularjs us scope glue model view make update one available le written code easily maintainable code everything angularjs created enable programmer end writing le code easily maintainable readable new person team believe one write complete working twoway data binded application le line code try see testing ready angularjs dependency injection ie take care providing necessary dependency controller service whenever required help making angularjs code ready unit testing making use mock dependency created injected make angularjs modular easily testable thus turn helping team create robust application
32,JavaScript,GitHub - trekhleb/javascript-algorithms: üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings,"JavaScript Algorithms and Data Structures


This repository contains JavaScript based examples of many
popular algorithms and data structures.
Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).
Read this in other languages:
ÁÆÄ‰Ωì‰∏≠Êñá,
ÁπÅÈ´î‰∏≠Êñá,
ÌïúÍµ≠Ïñ¥,
Êó•Êú¨Ë™û,
Polski,
Fran√ßais,
Espa√±ol,
Portugu√™s
‚òù Note that this project is meant to be used for learning and researching purposes
only and it is not meant to be used for production.
Data Structures
A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can be applied to
the data.
B - Beginner, A - Advanced

B Linked List
B Doubly Linked List
B Queue
B Stack
B Hash Table
B Heap - max and min heap versions
B Priority Queue
A Trie
A Tree

A Binary Search Tree
A AVL Tree
A Red-Black Tree
A Segment Tree - with min/max/sum range queries examples
A Fenwick Tree (Binary Indexed Tree)


A Graph (both directed and undirected)
A Disjoint Set
A Bloom Filter

Algorithms
An algorithm is an unambiguous specification of how to solve a class of problems. It is
a set of rules that precisely define a sequence of operations.
B - Beginner, A - Advanced
Algorithms by Topic

Math

B Bit Manipulation - set/get/update/clear bits, multiplication/division by two, make negative etc.
B Factorial
B Fibonacci Number - classic and closed-form versions
B Primality Test (trial division method)
B Euclidean Algorithm - calculate the Greatest Common Divisor (GCD)
B Least Common Multiple (LCM)
B Sieve of Eratosthenes - finding all prime numbers up to any given limit
B Is Power of Two - check if the number is power of two (naive and bitwise algorithms)
B Pascal's Triangle
B Complex Number - complex numbers and basic operations with them
B Radian & Degree - radians to degree and backwards conversion
B Fast Powering
A Integer Partition
A Square Root - Newton's method
A Liu Hui œÄ Algorithm - approximate œÄ calculations based on N-gons
A Discrete Fourier Transform - decompose a function of time (a signal) into the frequencies that make it up


Sets

B Cartesian Product - product of multiple sets
B Fisher‚ÄìYates Shuffle - random permutation of a finite sequence
A Power Set - all subsets of a set (bitwise and backtracking solutions)
A Permutations (with and without repetitions)
A Combinations (with and without repetitions)
A Longest Common Subsequence (LCS)
A Longest Increasing Subsequence
A Shortest Common Supersequence (SCS)
A Knapsack Problem - ""0/1"" and ""Unbound"" ones
A Maximum Subarray - ""Brute Force"" and ""Dynamic Programming"" (Kadane's) versions
A Combination Sum - find all combinations that form specific sum


Strings

B Hamming Distance - number of positions at which the symbols are different
A Levenshtein Distance - minimum edit distance between two sequences
A Knuth‚ÄìMorris‚ÄìPratt Algorithm (KMP Algorithm) - substring search (pattern matching)
A Z Algorithm - substring search (pattern matching)
A Rabin Karp Algorithm - substring search
A Longest Common Substring
A Regular Expression Matching


Searches

B Linear Search
B Jump Search (or Block Search) - search in sorted array
B Binary Search - search in sorted array
B Interpolation Search - search in uniformly distributed sorted array


Sorting

B Bubble Sort
B Selection Sort
B Insertion Sort
B Heap Sort
B Merge Sort
B Quicksort - in-place and non-in-place implementations
B Shellsort
B Counting Sort
B Radix Sort


Linked Lists

B Straight Traversal
B Reverse Traversal


Trees

B Depth-First Search (DFS)
B Breadth-First Search (BFS)


Graphs

B Depth-First Search (DFS)
B Breadth-First Search (BFS)
B Kruskal‚Äôs Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph
A Dijkstra Algorithm - finding shortest paths to all graph vertices from single vertex
A Bellman-Ford Algorithm - finding shortest paths to all graph vertices from single vertex
A Floyd-Warshall Algorithm - find shortest paths between all pairs of vertices
A Detect Cycle - for both directed and undirected graphs (DFS and Disjoint Set based versions)
A Prim‚Äôs Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph
A Topological Sorting - DFS method
A Articulation Points - Tarjan's algorithm (DFS based)
A Bridges - DFS based algorithm
A Eulerian Path and Eulerian Circuit - Fleury's algorithm - Visit every edge exactly once
A Hamiltonian Cycle - Visit every vertex exactly once
A Strongly Connected Components - Kosaraju's algorithm
A Travelling Salesman Problem - shortest possible route that visits each city and returns to the origin city


Cryptography

B Polynomial Hash - rolling hash function based on polynomial


Machine Learning

B NanoNeuron - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)


Uncategorized

B Tower of Hanoi
B Square Matrix Rotation - in-place algorithm
B Jump Game - backtracking, dynamic programming (top-down + bottom-up) and greedy examples
B Unique Paths - backtracking, dynamic programming and Pascal's Triangle based examples
B Rain Terraces - trapping rain water problem (dynamic programming and brute force versions)
B Recursive Staircase - count the number of ways to reach to the top (4 solutions)
A N-Queens Problem
A Knight's Tour



Algorithms by Paradigm
An algorithmic paradigm is a generic method or approach which underlies the design of a class
of algorithms. It is an abstraction higher than the notion of an algorithm, just as an
algorithm is an abstraction higher than a computer program.

Brute Force - look at all the possibilities and selects the best solution

B Linear Search
B Rain Terraces - trapping rain water problem
B Recursive Staircase - count the number of ways to reach to the top
A Maximum Subarray
A Travelling Salesman Problem - shortest possible route that visits each city and returns to the origin city
A Discrete Fourier Transform - decompose a function of time (a signal) into the frequencies that make it up


Greedy - choose the best option at the current time, without any consideration for the future

B Jump Game
A Unbound Knapsack Problem
A Dijkstra Algorithm - finding shortest path to all graph vertices
A Prim‚Äôs Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph
A Kruskal‚Äôs Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph


Divide and Conquer - divide the problem into smaller parts and then solve those parts

B Binary Search
B Tower of Hanoi
B Pascal's Triangle
B Euclidean Algorithm - calculate the Greatest Common Divisor (GCD)
B Merge Sort
B Quicksort
B Tree Depth-First Search (DFS)
B Graph Depth-First Search (DFS)
B Jump Game
B Fast Powering
A Permutations (with and without repetitions)
A Combinations (with and without repetitions)


Dynamic Programming - build up a solution using previously found sub-solutions

B Fibonacci Number
B Jump Game
B Unique Paths
B Rain Terraces - trapping rain water problem
B Recursive Staircase - count the number of ways to reach to the top
A Levenshtein Distance - minimum edit distance between two sequences
A Longest Common Subsequence (LCS)
A Longest Common Substring
A Longest Increasing Subsequence
A Shortest Common Supersequence
A 0/1 Knapsack Problem
A Integer Partition
A Maximum Subarray
A Bellman-Ford Algorithm - finding shortest path to all graph vertices
A Floyd-Warshall Algorithm - find shortest paths between all pairs of vertices
A Regular Expression Matching


Backtracking - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test
if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a
different path of finding a solution. Normally the DFS traversal of state-space is being used.

B Jump Game
B Unique Paths
B Power Set - all subsets of a set
A Hamiltonian Cycle - Visit every vertex exactly once
A N-Queens Problem
A Knight's Tour
A Combination Sum - find all combinations that form specific sum


Branch & Bound - remember the lowest-cost solution found at each stage of the backtracking
search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of
a least-cost solution to the problem, in order to discard partial solutions with costs larger than the
lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space
tree is being used.

How to use this repository
Install all dependencies
npm install

Run ESLint
You may want to run it to check code quality.
npm run lint

Run all tests
npm test

Run tests by name
npm test -- 'LinkedList'

Playground
You may play with data-structures and algorithms in ./src/playground/playground.js file and write
tests for it in ./src/playground/__test__/playground.test.js.
Then just simply run the following command to test if your playground code works as expected:
npm test -- 'playground'

Useful Information
References
‚ñ∂ Data Structures and Algorithms on YouTube
Big O Notation
Big O notation is used to classify algorithms according to how their running time or space requirements grow as the input size grows.
On the chart below you may find most common orders of growth of algorithms specified in Big O notation.

Source: Big O Cheat Sheet.
Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.



Big O Notation
Computations for 10 elements
Computations for 100 elements
Computations for 1000 elements




O(1)
1
1
1


O(log N)
3
6
9


O(N)
10
100
1000


O(N log N)
30
600
9000


O(N^2)
100
10000
1000000


O(2^N)
1024
1.26e+29
1.07e+301


O(N!)
3628800
9.3e+157
4.02e+2567



Data Structure Operations Complexity



Data Structure
Access
Search
Insertion
Deletion
Comments




Array
1
n
n
n



Stack
n
n
1
1



Queue
n
n
1
1



Linked List
n
n
1
n



Hash Table
-
n
n
n
In case of perfect hash function costs would be O(1)


Binary Search Tree
n
n
n
n
In case of balanced tree costs would be O(log(n))


B-Tree
log(n)
log(n)
log(n)
log(n)



Red-Black Tree
log(n)
log(n)
log(n)
log(n)



AVL Tree
log(n)
log(n)
log(n)
log(n)



Bloom Filter
-
1
1
-
False positives are possible while searching



Array Sorting Algorithms Complexity



Name
Best
Average
Worst
Memory
Stable
Comments




Bubble sort
n
n2
n2
1
Yes



Insertion sort
n
n2
n2
1
Yes



Selection sort
n2
n2
n2
1
No



Heap sort
n¬†log(n)
n¬†log(n)
n¬†log(n)
1
No



Merge sort
n¬†log(n)
n¬†log(n)
n¬†log(n)
n
Yes



Quick sort
n¬†log(n)
n¬†log(n)
n2
log(n)
No
Quicksort is usually done in-place with O(log(n)) stack space


Shell sort
n¬†log(n)
depends on gap sequence
n¬†(log(n))2
1
No



Counting sort
n + r
n + r
n + r
n + r
Yes
r - biggest number in array


Radix sort
n * k
n * k
n * k
n + k
Yes
k - length of longest key



",javascript algorithms data structures repository contains javascript based examples many popular algorithms data structures algorithm data structure separate readme related explanations links reading including ones youtube videos read languages polski francais espanol portugues note project meant used learning researching purposes meant used production data structures data structure particular way organizing storing data computer accessed modified efficiently precisely data structure collection data values relationships among functions operations applied data b beginner advanced b linked list b doubly linked list b queue b stack b hash table b heap max min heap versions b priority queue trie tree binary search tree avl tree redblack tree segment tree minmaxsum range queries examples fenwick tree binary indexed tree graph directed undirected disjoint set bloom filter algorithms algorithm unambiguous specification solve class problems set rules precisely define sequence operations b beginner advanced algorithms topic math b bit manipulation setgetupdateclear bits multiplicationdivision two make negative etc b factorial b fibonacci number classic closedform versions b primality test trial division method b euclidean algorithm calculate greatest common divisor gcd b least common multiple lcm b sieve eratosthenes finding prime numbers given limit b power two check number power two naive bitwise algorithms b pascals triangle b complex number complex numbers basic operations b radian degree radians degree backwards conversion b fast powering integer partition square root newtons method liu hui algorithm approximate calculations based ngons discrete fourier transform decompose function time signal frequencies make sets b cartesian product product multiple sets b fisheryates shuffle random permutation finite sequence power set subsets set bitwise backtracking solutions permutations without repetitions combinations without repetitions longest common subsequence lcs longest increasing subsequence shortest common supersequence scs knapsack problem unbound ones maximum subarray brute force dynamic programming kadanes versions combination sum find combinations form specific sum strings b hamming distance number positions symbols different levenshtein distance minimum edit distance two sequences knuthmorrispratt algorithm kmp algorithm substring search pattern matching z algorithm substring search pattern matching rabin karp algorithm substring search longest common substring regular expression matching searches b linear search b jump search block search search sorted array b binary search search sorted array b interpolation search search uniformly distributed sorted array sorting b bubble sort b selection sort b insertion sort b heap sort b merge sort b quicksort inplace noninplace implementations b shellsort b counting sort b radix sort linked lists b straight traversal b reverse traversal trees b depthfirst search dfs b breadthfirst search bfs graphs b depthfirst search dfs b breadthfirst search bfs b kruskals algorithm finding minimum spanning tree mst weighted undirected graph dijkstra algorithm finding shortest paths graph vertices single vertex bellmanford algorithm finding shortest paths graph vertices single vertex floydwarshall algorithm find shortest paths pairs vertices detect cycle directed undirected graphs dfs disjoint set based versions prims algorithm finding minimum spanning tree mst weighted undirected graph topological sorting dfs method articulation points tarjans algorithm dfs based bridges dfs based algorithm eulerian path eulerian circuit fleurys algorithm visit every edge exactly hamiltonian cycle visit every vertex exactly strongly connected components kosarajus algorithm travelling salesman problem shortest possible route visits city returns origin city cryptography b polynomial hash rolling hash function based polynomial machine learning b nanoneuron simple js functions illustrate machines actually learn forwardbackward propagation uncategorized b tower hanoi b square matrix rotation inplace algorithm b jump game backtracking dynamic programming topdown bottomup greedy examples b unique paths backtracking dynamic programming pascals triangle based examples b rain terraces trapping rain water problem dynamic programming brute force versions b recursive staircase count number ways reach top solutions nqueens problem knights tour algorithms paradigm algorithmic paradigm generic method approach underlies design class algorithms abstraction higher notion algorithm algorithm abstraction higher computer program brute force look possibilities selects best solution b linear search b rain terraces trapping rain water problem b recursive staircase count number ways reach top maximum subarray travelling salesman problem shortest possible route visits city returns origin city discrete fourier transform decompose function time signal frequencies make greedy choose best option current time without consideration future b jump game unbound knapsack problem dijkstra algorithm finding shortest path graph vertices prims algorithm finding minimum spanning tree mst weighted undirected graph kruskals algorithm finding minimum spanning tree mst weighted undirected graph divide conquer divide problem smaller parts solve parts b binary search b tower hanoi b pascals triangle b euclidean algorithm calculate greatest common divisor gcd b merge sort b quicksort b tree depthfirst search dfs b graph depthfirst search dfs b jump game b fast powering permutations without repetitions combinations without repetitions dynamic programming build solution using previously found subsolutions b fibonacci number b jump game b unique paths b rain terraces trapping rain water problem b recursive staircase count number ways reach top levenshtein distance minimum edit distance two sequences longest common subsequence lcs longest common substring longest increasing subsequence shortest common supersequence knapsack problem integer partition maximum subarray bellmanford algorithm finding shortest path graph vertices floydwarshall algorithm find shortest paths pairs vertices regular expression matching backtracking similarly brute force try generate possible solutions time generate next solution test satisfies conditions continue generating subsequent solutions otherwise backtrack go different path finding solution normally dfs traversal statespace used b jump game b unique paths b power set subsets set hamiltonian cycle visit every vertex exactly nqueens problem knights tour combination sum find combinations form specific sum branch bound remember lowestcost solution found stage backtracking search use cost lowestcost solution found far lower bound cost leastcost solution problem order discard partial solutions costs larger lowestcost solution found far normally bfs traversal combination dfs traversal statespace tree used use repository install dependencies npm install run eslint may want run check code quality npm run lint run tests npm test run tests name npm test linkedlist playground may play datastructures algorithms srcplaygroundplaygroundjs file write tests srcplaygroundtestplaygroundtestjs simply run following command test playground code works expected npm test playground useful information references data structures algorithms youtube big notation big notation used classify algorithms according running time space requirements grow input size grows chart may find common orders growth algorithms specified big notation source big cheat sheet list used big notations performance comparisons different sizes input data big notation computations elements computations elements computations elements olog n log n e e e e data structure operations complexity data structure access search insertion deletion comments array n n n stack n n queue n n linked list n n n hash table n n n case perfect hash function costs would binary search tree n n n n case balanced tree costs would ologn btree logn logn logn logn redblack tree logn logn logn logn avl tree logn logn logn logn bloom filter false positives possible searching array sorting algorithms complexity name best average worst memory stable comments bubble sort n n n yes insertion sort n n n yes selection sort n n n heap sort n logn n logn n logn merge sort n logn n logn n logn n yes quick sort n logn n logn n logn quicksort usually done inplace ologn stack space shell sort n logn depends gap sequence n logn counting sort n r n r n r n r yes r biggest number array radix sort n k n k n k n k yes k length longest key,javascript algorithm data structur repositori contain javascript base exampl mani popular algorithm data structur algorithm data structur separ readm relat explan link read includ one youtub video read languag polski francai espanol portugu note project meant use learn research purpos meant use product data structur data structur particular way organ store data comput access modifi effici precis data structur collect data valu relationship among function oper appli data b beginn advanc b link list b doubli link list b queue b stack b hash tabl b heap max min heap version b prioriti queue trie tree binari search tree avl tree redblack tree segment tree minmaxsum rang queri exampl fenwick tree binari index tree graph direct undirect disjoint set bloom filter algorithm algorithm unambigu specif solv class problem set rule precis defin sequenc oper b beginn advanc algorithm topic math b bit manipul setgetupdateclear bit multiplicationdivis two make neg etc b factori b fibonacci number classic closedform version b primal test trial divis method b euclidean algorithm calcul greatest common divisor gcd b least common multipl lcm b siev eratosthen find prime number given limit b power two check number power two naiv bitwis algorithm b pascal triangl b complex number complex number basic oper b radian degre radian degre backward convers b fast power integ partit squar root newton method liu hui algorithm approxim calcul base ngon discret fourier transform decompos function time signal frequenc make set b cartesian product product multipl set b fishery shuffl random permut finit sequenc power set subset set bitwis backtrack solut permut without repetit combin without repetit longest common subsequ lc longest increas subsequ shortest common supersequ sc knapsack problem unbound one maximum subarray brute forc dynam program kadan version combin sum find combin form specif sum string b ham distanc number posit symbol differ levenshtein distanc minimum edit distanc two sequenc knuthmorrispratt algorithm kmp algorithm substr search pattern match z algorithm substr search pattern match rabin karp algorithm substr search longest common substr regular express match search b linear search b jump search block search search sort array b binari search search sort array b interpol search search uniformli distribut sort array sort b bubbl sort b select sort b insert sort b heap sort b merg sort b quicksort inplac noninplac implement b shellsort b count sort b radix sort link list b straight travers b revers travers tree b depthfirst search df b breadthfirst search bf graph b depthfirst search df b breadthfirst search bf b kruskal algorithm find minimum span tree mst weight undirect graph dijkstra algorithm find shortest path graph vertic singl vertex bellmanford algorithm find shortest path graph vertic singl vertex floydwarshal algorithm find shortest path pair vertic detect cycl direct undirect graph df disjoint set base version prim algorithm find minimum span tree mst weight undirect graph topolog sort df method articul point tarjan algorithm df base bridg df base algorithm eulerian path eulerian circuit fleuri algorithm visit everi edg exactli hamiltonian cycl visit everi vertex exactli strongli connect compon kosaraju algorithm travel salesman problem shortest possibl rout visit citi return origin citi cryptographi b polynomi hash roll hash function base polynomi machin learn b nanoneuron simpl js function illustr machin actual learn forwardbackward propag uncategor b tower hanoi b squar matrix rotat inplac algorithm b jump game backtrack dynam program topdown bottomup greedi exampl b uniqu path backtrack dynam program pascal triangl base exampl b rain terrac trap rain water problem dynam program brute forc version b recurs staircas count number way reach top solut nqueen problem knight tour algorithm paradigm algorithm paradigm gener method approach underli design class algorithm abstract higher notion algorithm algorithm abstract higher comput program brute forc look possibl select best solut b linear search b rain terrac trap rain water problem b recurs staircas count number way reach top maximum subarray travel salesman problem shortest possibl rout visit citi return origin citi discret fourier transform decompos function time signal frequenc make greedi choos best option current time without consider futur b jump game unbound knapsack problem dijkstra algorithm find shortest path graph vertic prim algorithm find minimum span tree mst weight undirect graph kruskal algorithm find minimum span tree mst weight undirect graph divid conquer divid problem smaller part solv part b binari search b tower hanoi b pascal triangl b euclidean algorithm calcul greatest common divisor gcd b merg sort b quicksort b tree depthfirst search df b graph depthfirst search df b jump game b fast power permut without repetit combin without repetit dynam program build solut use previous found subsolut b fibonacci number b jump game b uniqu path b rain terrac trap rain water problem b recurs staircas count number way reach top levenshtein distanc minimum edit distanc two sequenc longest common subsequ lc longest common substr longest increas subsequ shortest common supersequ knapsack problem integ partit maximum subarray bellmanford algorithm find shortest path graph vertic floydwarshal algorithm find shortest path pair vertic regular express match backtrack similarli brute forc tri gener possibl solut time gener next solut test satisfi condit continu gener subsequ solut otherwis backtrack go differ path find solut normal df travers statespac use b jump game b uniqu path b power set subset set hamiltonian cycl visit everi vertex exactli nqueen problem knight tour combin sum find combin form specif sum branch bound rememb lowestcost solut found stage backtrack search use cost lowestcost solut found far lower bound cost leastcost solut problem order discard partial solut cost larger lowestcost solut found far normal bf travers combin df travers statespac tree use use repositori instal depend npm instal run eslint may want run check code qualiti npm run lint run test npm test run test name npm test linkedlist playground may play datastructur algorithm srcplaygroundplaygroundj file write test srcplaygroundtestplaygroundtestj simpli run follow command test playground code work expect npm test playground use inform refer data structur algorithm youtub big notat big notat use classifi algorithm accord run time space requir grow input size grow chart may find common order growth algorithm specifi big notat sourc big cheat sheet list use big notat perform comparison differ size input data big notat comput element comput element comput element olog n log n e e e e data structur oper complex data structur access search insert delet comment array n n n stack n n queue n n link list n n n hash tabl n n n case perfect hash function cost would binari search tree n n n n case balanc tree cost would ologn btree logn logn logn logn redblack tree logn logn logn logn avl tree logn logn logn logn bloom filter fals posit possibl search array sort algorithm complex name best averag worst memori stabl comment bubbl sort n n n ye insert sort n n n ye select sort n n n heap sort n logn n logn n logn merg sort n logn n logn n logn n ye quick sort n logn n logn n logn quicksort usual done inplac ologn stack space shell sort n logn depend gap sequenc n logn count sort n r n r n r n r ye r biggest number array radix sort n k n k n k n k ye k length longest key,javascript algorithm data structure repository contains javascript based example many popular algorithm data structure algorithm data structure separate readme related explanation link reading including one youtube video read language polski francais espanol portugues note project meant used learning researching purpose meant used production data structure data structure particular way organizing storing data computer accessed modified efficiently precisely data structure collection data value relationship among function operation applied data b beginner advanced b linked list b doubly linked list b queue b stack b hash table b heap max min heap version b priority queue trie tree binary search tree avl tree redblack tree segment tree minmaxsum range query example fenwick tree binary indexed tree graph directed undirected disjoint set bloom filter algorithm algorithm unambiguous specification solve class problem set rule precisely define sequence operation b beginner advanced algorithm topic math b bit manipulation setgetupdateclear bit multiplicationdivision two make negative etc b factorial b fibonacci number classic closedform version b primality test trial division method b euclidean algorithm calculate greatest common divisor gcd b least common multiple lcm b sieve eratosthenes finding prime number given limit b power two check number power two naive bitwise algorithm b pascal triangle b complex number complex number basic operation b radian degree radian degree backwards conversion b fast powering integer partition square root newton method liu hui algorithm approximate calculation based ngons discrete fourier transform decompose function time signal frequency make set b cartesian product product multiple set b fisheryates shuffle random permutation finite sequence power set subset set bitwise backtracking solution permutation without repetition combination without repetition longest common subsequence lcs longest increasing subsequence shortest common supersequence sc knapsack problem unbound one maximum subarray brute force dynamic programming kadanes version combination sum find combination form specific sum string b hamming distance number position symbol different levenshtein distance minimum edit distance two sequence knuthmorrispratt algorithm kmp algorithm substring search pattern matching z algorithm substring search pattern matching rabin karp algorithm substring search longest common substring regular expression matching search b linear search b jump search block search search sorted array b binary search search sorted array b interpolation search search uniformly distributed sorted array sorting b bubble sort b selection sort b insertion sort b heap sort b merge sort b quicksort inplace noninplace implementation b shellsort b counting sort b radix sort linked list b straight traversal b reverse traversal tree b depthfirst search dfs b breadthfirst search bfs graph b depthfirst search dfs b breadthfirst search bfs b kruskals algorithm finding minimum spanning tree mst weighted undirected graph dijkstra algorithm finding shortest path graph vertex single vertex bellmanford algorithm finding shortest path graph vertex single vertex floydwarshall algorithm find shortest path pair vertex detect cycle directed undirected graph dfs disjoint set based version prims algorithm finding minimum spanning tree mst weighted undirected graph topological sorting dfs method articulation point tarjans algorithm dfs based bridge dfs based algorithm eulerian path eulerian circuit fleurys algorithm visit every edge exactly hamiltonian cycle visit every vertex exactly strongly connected component kosarajus algorithm travelling salesman problem shortest possible route visit city return origin city cryptography b polynomial hash rolling hash function based polynomial machine learning b nanoneuron simple j function illustrate machine actually learn forwardbackward propagation uncategorized b tower hanoi b square matrix rotation inplace algorithm b jump game backtracking dynamic programming topdown bottomup greedy example b unique path backtracking dynamic programming pascal triangle based example b rain terrace trapping rain water problem dynamic programming brute force version b recursive staircase count number way reach top solution nqueens problem knight tour algorithm paradigm algorithmic paradigm generic method approach underlies design class algorithm abstraction higher notion algorithm algorithm abstraction higher computer program brute force look possibility selects best solution b linear search b rain terrace trapping rain water problem b recursive staircase count number way reach top maximum subarray travelling salesman problem shortest possible route visit city return origin city discrete fourier transform decompose function time signal frequency make greedy choose best option current time without consideration future b jump game unbound knapsack problem dijkstra algorithm finding shortest path graph vertex prims algorithm finding minimum spanning tree mst weighted undirected graph kruskals algorithm finding minimum spanning tree mst weighted undirected graph divide conquer divide problem smaller part solve part b binary search b tower hanoi b pascal triangle b euclidean algorithm calculate greatest common divisor gcd b merge sort b quicksort b tree depthfirst search dfs b graph depthfirst search dfs b jump game b fast powering permutation without repetition combination without repetition dynamic programming build solution using previously found subsolutions b fibonacci number b jump game b unique path b rain terrace trapping rain water problem b recursive staircase count number way reach top levenshtein distance minimum edit distance two sequence longest common subsequence lcs longest common substring longest increasing subsequence shortest common supersequence knapsack problem integer partition maximum subarray bellmanford algorithm finding shortest path graph vertex floydwarshall algorithm find shortest path pair vertex regular expression matching backtracking similarly brute force try generate possible solution time generate next solution test satisfies condition continue generating subsequent solution otherwise backtrack go different path finding solution normally dfs traversal statespace used b jump game b unique path b power set subset set hamiltonian cycle visit every vertex exactly nqueens problem knight tour combination sum find combination form specific sum branch bound remember lowestcost solution found stage backtracking search use cost lowestcost solution found far lower bound cost leastcost solution problem order discard partial solution cost larger lowestcost solution found far normally bfs traversal combination dfs traversal statespace tree used use repository install dependency npm install run eslint may want run check code quality npm run lint run test npm test run test name npm test linkedlist playground may play datastructures algorithm srcplaygroundplaygroundjs file write test srcplaygroundtestplaygroundtestjs simply run following command test playground code work expected npm test playground useful information reference data structure algorithm youtube big notation big notation used classify algorithm according running time space requirement grow input size grows chart may find common order growth algorithm specified big notation source big cheat sheet list used big notation performance comparison different size input data big notation computation element computation element computation element olog n log n e e e e data structure operation complexity data structure access search insertion deletion comment array n n n stack n n queue n n linked list n n n hash table n n n case perfect hash function cost would binary search tree n n n n case balanced tree cost would ologn btree logn logn logn logn redblack tree logn logn logn logn avl tree logn logn logn logn bloom filter false positive possible searching array sorting algorithm complexity name best average worst memory stable comment bubble sort n n n yes insertion sort n n n yes selection sort n n n heap sort n logn n logn n logn merge sort n logn n logn n logn n yes quick sort n logn n logn n logn quicksort usually done inplace ologn stack space shell sort n logn depends gap sequence n logn counting sort n r n r n r n r yes r biggest number array radix sort n k n k n k n k yes k length longest key
33,JavaScript,GitHub - mrdoob/three.js: JavaScript 3D library.,"three.js






JavaScript 3D library
The aim of the project is to create an easy to use, lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.
Examples ‚Äî
Documentation ‚Äî
Wiki ‚Äî
Migrating ‚Äî
Questions ‚Äî
Forum ‚Äî
Gitter ‚Äî
Slack
Usage
Download the minified library and include it in your HTML, or install and import it as a module,
Alternatively, see how to build the library yourself.
<script src=""js/three.min.js""></script>
This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a WebGL renderer for the scene and camera, and it adds that viewport to the document.body element. Finally, it animates the cube within the scene for the camera.
var camera, scene, renderer;
var geometry, material, mesh;

init();
animate();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	document.body.appendChild( renderer.domElement );

}

function animate() {

	requestAnimationFrame( animate );

	mesh.rotation.x += 0.01;
	mesh.rotation.y += 0.02;

	renderer.render( scene, camera );

}
If everything went well you should see this.
Change log
Releases
",threejs javascript library aim project create easy use lightweight library default webgl renderer library also provides canvas svg cssd renderers examples examples documentation wiki migrating questions forum gitter slack usage download minified library include html install import module alternatively see build library script srcjsthreeminjsscript code creates scene camera geometric cube adds cube scene creates webgl renderer scene camera adds viewport documentbody element finally animates cube within scene camera var camera scene renderer var geometry material mesh init animate function init &#9; camera new threeperspectivecamera windowinnerwidth windowinnerheight &#9; camerapositionz &#9; scene new threescene &#9; geometry new threeboxgeometry &#9; material new threemeshnormalmaterial &#9; mesh new threemesh geometry material &#9; sceneadd mesh &#9; renderer new threewebglrenderer antialias true &#9; renderersetsize windowinnerwidth windowinnerheight &#9; documentbodyappendchild rendererdomelement function animate &#9; requestanimationframe animate &#9; meshrotationx &#9; meshrotationy &#9; rendererrender scene camera everything went well see change log releases,threej javascript librari aim project creat easi use lightweight librari default webgl render librari also provid canva svg cssd render exampl exampl document wiki migrat question forum gitter slack usag download minifi librari includ html instal import modul altern see build librari script srcjsthreeminjsscript code creat scene camera geometr cube add cube scene creat webgl render scene camera add viewport documentbodi element final anim cube within scene camera var camera scene render var geometri materi mesh init anim function init &#9; camera new threeperspectivecamera windowinnerwidth windowinnerheight &#9; camerapositionz &#9; scene new threescen &#9; geometri new threeboxgeometri &#9; materi new threemeshnormalmateri &#9; mesh new threemesh geometri materi &#9; sceneadd mesh &#9; render new threewebglrender antialia true &#9; renderersets windowinnerwidth windowinnerheight &#9; documentbodyappendchild rendererdomel function anim &#9; requestanimationfram anim &#9; meshrotationx &#9; meshrotationi &#9; rendererrend scene camera everyth went well see chang log releas,threejs javascript library aim project create easy use lightweight library default webgl renderer library also provides canvas svg cssd renderers example example documentation wiki migrating question forum gitter slack usage download minified library include html install import module alternatively see build library script srcjsthreeminjsscript code creates scene camera geometric cube add cube scene creates webgl renderer scene camera add viewport documentbody element finally animates cube within scene camera var camera scene renderer var geometry material mesh init animate function init &#9; camera new threeperspectivecamera windowinnerwidth windowinnerheight &#9; camerapositionz &#9; scene new threescene &#9; geometry new threeboxgeometry &#9; material new threemeshnormalmaterial &#9; mesh new threemesh geometry material &#9; sceneadd mesh &#9; renderer new threewebglrenderer antialias true &#9; renderersetsize windowinnerwidth windowinnerheight &#9; documentbodyappendchild rendererdomelement function animate &#9; requestanimationframe animate &#9; meshrotationx &#9; meshrotationy &#9; rendererrender scene camera everything went well see change log release
34,JavaScript,GitHub - puppeteer/puppeteer: Headless Chrome Node.js API,"Puppeteer
    

API | FAQ | Contributing | Troubleshooting

Puppeteer is a Node library which provides a high-level API to control Chrome or Chromium over the DevTools Protocol. Puppeteer runs headless by default, but can be configured to run full (non-headless) Chrome or Chromium.

What can I do?
Most things that you can do manually in the browser can be done using Puppeteer! Here are a few examples to get you started:

Generate screenshots and PDFs of pages.
Crawl a SPA (Single-Page Application) and generate pre-rendered content (i.e. ""SSR"" (Server-Side Rendering)).
Automate form submission, UI testing, keyboard input, etc.
Create an up-to-date, automated testing environment. Run your tests directly in the latest version of Chrome using the latest JavaScript and browser features.
Capture a timeline trace of your site to help diagnose performance issues.
Test Chrome Extensions.

Give it a spin: https://try-puppeteer.appspot.com/
Getting Started
Installation
To use Puppeteer in your project, run:
npm i puppeteer
# or ""yarn add puppeteer""
Note: When you install Puppeteer, it downloads a recent version of Chromium (~170MB Mac, ~282MB Linux, ~280MB Win) that is guaranteed to work with the API. To skip the download, see Environment variables.
puppeteer-core
Since version 1.7.0 we publish the puppeteer-core package,
a version of Puppeteer that doesn't download Chromium by default.
npm i puppeteer-core
# or ""yarn add puppeteer-core""
puppeteer-core is intended to be a lightweight version of Puppeteer for launching an existing browser installation or for connecting to a remote one. Be sure that the version of puppeteer-core you install is compatible with the
browser you intend to connect to.
See puppeteer vs puppeteer-core.
Usage
Puppeteer follows the latest maintenance LTS version of Node.
Note: Prior to v1.18.1, Puppeteer required at least Node v6.4.0. All subsequent versions rely on
Node 8.9.0+. All examples below use async/await which is only supported in Node v7.6.0 or greater.
Puppeteer will be familiar to people using other browser testing frameworks. You create an instance
of Browser, open pages, and then manipulate them with Puppeteer's API.
Example - navigating to https://example.com and saving a screenshot as example.png:
Save file as example.js
const puppeteer = require('puppeteer');

(async () => {
  const browser = await puppeteer.launch();
  const page = await browser.newPage();
  await page.goto('https://example.com');
  await page.screenshot({path: 'example.png'});

  await browser.close();
})();
Execute script on the command line
node example.js
Puppeteer sets an initial page size to 800√ó600px, which defines the screenshot size. The page size can be customized  with Page.setViewport().
Example - create a PDF.
Save file as hn.js
const puppeteer = require('puppeteer');

(async () => {
  const browser = await puppeteer.launch();
  const page = await browser.newPage();
  await page.goto('https://news.ycombinator.com', {waitUntil: 'networkidle2'});
  await page.pdf({path: 'hn.pdf', format: 'A4'});

  await browser.close();
})();
Execute script on the command line
node hn.js
See Page.pdf() for more information about creating pdfs.
Example - evaluate script in the context of the page
Save file as get-dimensions.js
const puppeteer = require('puppeteer');

(async () => {
  const browser = await puppeteer.launch();
  const page = await browser.newPage();
  await page.goto('https://example.com');

  // Get the ""viewport"" of the page, as reported by the page.
  const dimensions = await page.evaluate(() => {
    return {
      width: document.documentElement.clientWidth,
      height: document.documentElement.clientHeight,
      deviceScaleFactor: window.devicePixelRatio
    };
  });

  console.log('Dimensions:', dimensions);

  await browser.close();
})();
Execute script on the command line
node get-dimensions.js
See Page.evaluate() for more information on evaluate and related methods like evaluateOnNewDocument and exposeFunction.
Default runtime settings
1. Uses Headless mode
Puppeteer launches Chromium in headless mode. To launch a full version of Chromium, set the headless option when launching a browser:
const browser = await puppeteer.launch({headless: false}); // default is true
2. Runs a bundled version of Chromium
By default, Puppeteer downloads and uses a specific version of Chromium so its API
is guaranteed to work out of the box. To use Puppeteer with a different version of Chrome or Chromium,
pass in the executable's path when creating a Browser instance:
const browser = await puppeteer.launch({executablePath: '/path/to/Chrome'});
See Puppeteer.launch() for more information.
See this article for a description of the differences between Chromium and Chrome. This article describes some differences for Linux users.
3. Creates a fresh user profile
Puppeteer creates its own Chromium user profile which it cleans up on every run.
Resources

API Documentation
Examples
Community list of Puppeteer resources

Debugging tips


Turn off headless mode - sometimes it's useful to see what the browser is
displaying. Instead of launching in headless mode, launch a full version of
the browser using  headless: false:
 const browser = await puppeteer.launch({headless: false});



Slow it down - the slowMo option slows down Puppeteer operations by the
specified amount of milliseconds. It's another way to help see what's going on.
 const browser = await puppeteer.launch({
   headless: false,
   slowMo: 250 // slow down by 250ms
 });



Capture console output - You can listen for the console event.
This is also handy when debugging code in page.evaluate():
 page.on('console', msg => console.log('PAGE LOG:', msg.text()));

 await page.evaluate(() => console.log(`url is ${location.href}`));



Use debugger in application code browser
There are two execution context: node.js that is running test code, and the browser
running application code being tested. This lets you debug code in the
application code browser; ie code inside evaluate().


Use {devtools: true} when launching Puppeteer:
const browser = await puppeteer.launch({devtools: true});


Change default test timeout:
jest: jest.setTimeout(100000);
jasmine: jasmine.DEFAULT_TIMEOUT_INTERVAL = 100000;
mocha: this.timeout(100000); (don't forget to change test to use function and not '=>')


Add an evaluate statement with debugger inside / add  debugger to an existing evaluate statement:
await page.evaluate(() => {debugger;});
The test will now stop executing in the above evaluate statement, and chromium will stop in debug mode.




Use debugger in node.js
This will let you debug test code. For example, you can step over await page.click() in the node.js script and see the click happen in the application code browser.
Note that you won't be able to run await page.click() in
DevTools console due to this Chromium bug. So if
you want to try something out, you have to add it to your test file.

Add debugger; to your test, eg:
debugger;
await page.click('a[target=_blank]');


Set headless to false
Run node --inspect-brk, eg node --inspect-brk node_modules/.bin/jest tests
In Chrome open chrome://inspect/#devices and click inspect
In the newly opened test browser, type F8 to resume test execution
Now your debugger will be hit and you can debug in the test browser



Enable verbose logging - internal DevTools protocol traffic
will be logged via the debug module under the puppeteer namespace.
 # Basic verbose logging
 env DEBUG=""puppeteer:*"" node script.js

 # Protocol traffic can be rather noisy. This example filters out all Network domain messages
 env DEBUG=""puppeteer:*"" env DEBUG_COLORS=true node script.js 2>&1 | grep -v '""Network'



Debug your Puppeteer (node) code easily, using ndb




npm install -g ndb (or even better, use npx!)


add a debugger to your Puppeteer (node) code


add ndb (or npx ndb) before your test command. For example:
ndb jest or ndb mocha (or npx ndb jest / npx ndb mocha)


debug your test inside chromium like a boss!


Contributing to Puppeteer
Check out contributing guide to get an overview of Puppeteer development.
FAQ
Q: Who maintains Puppeteer?
The Chrome DevTools team maintains the library, but we'd love your help and expertise on the project!
See Contributing.
Q: What are Puppeteer‚Äôs goals and principles?
The goals of the project are:

Provide a slim, canonical library that highlights the capabilities of the DevTools Protocol.
Provide a reference implementation for similar testing libraries. Eventually, these other frameworks could adopt Puppeteer as their foundational layer.
Grow the adoption of headless/automated browser testing.
Help dogfood new DevTools Protocol features...and catch bugs!
Learn more about the pain points of automated browser testing and help fill those gaps.

We adapt Chromium principles to help us drive product decisions:

Speed: Puppeteer has almost zero performance overhead over an automated page.
Security: Puppeteer operates off-process with respect to Chromium, making it safe to automate potentially malicious pages.
Stability: Puppeteer should not be flaky and should not leak memory.
Simplicity: Puppeteer provides a high-level API that‚Äôs easy to use, understand, and debug.

Q: Is Puppeteer replacing Selenium/WebDriver?
No. Both projects are valuable for very different reasons:

Selenium/WebDriver focuses on cross-browser automation; its value proposition is a single standard API that works across all major browsers.
Puppeteer focuses on Chromium; its value proposition is richer functionality and higher reliability.

That said, you can use Puppeteer to run tests against Chromium, e.g. using the community-driven jest-puppeteer. While this probably shouldn‚Äôt be your only testing solution, it does have a few good points compared to WebDriver:

Puppeteer requires zero setup and comes bundled with the Chromium version it works best with, making it very easy to start with. At the end of the day, it‚Äôs better to have a few tests running chromium-only, than no tests at all.
Puppeteer has event-driven architecture, which removes a lot of potential flakiness. There‚Äôs no need for evil ‚Äúsleep(1000)‚Äù calls in puppeteer scripts.
Puppeteer runs headless by default, which makes it fast to run. Puppeteer v1.5.0 also exposes browser contexts, making it possible to efficiently parallelize test execution.
Puppeteer shines when it comes to debugging: flip the ‚Äúheadless‚Äù bit to false, add ‚ÄúslowMo‚Äù, and you‚Äôll see what the browser is doing. You can even open Chrome DevTools to inspect the test environment.

Q: Why doesn‚Äôt Puppeteer v.XXX work with Chromium v.YYY?
We see Puppeteer as an indivisible entity with Chromium. Each version of Puppeteer bundles a specific version of Chromium ‚Äì the only version it is guaranteed to work with.
This is not an artificial constraint: A lot of work on Puppeteer is actually taking place in the Chromium repository. Here‚Äôs a typical story:

A Puppeteer bug is reported: https://github.com/puppeteer/puppeteer/issues/2709
It turned out this is an issue with the DevTools protocol, so we‚Äôre fixing it in Chromium: https://chromium-review.googlesource.com/c/chromium/src/+/1102154
Once the upstream fix is landed, we roll updated Chromium into Puppeteer: https://github.com/puppeteer/puppeteer/pull/2769

However, oftentimes it is desirable to use Puppeteer with the official Google Chrome rather than Chromium. For this to work, you should install a puppeteer-core version that corresponds to the Chrome version.
For example, in order to drive Chrome 71 with puppeteer-core, use chrome-71 npm tag:
npm install puppeteer-core@chrome-71
Q: Which Chromium version does Puppeteer use?
Look for chromium_revision in package.json. To find the corresponding Chromium commit and version number, search for the revision prefixed by an r in OmahaProxy's ""Find Releases"" section.
Q: What‚Äôs considered a ‚ÄúNavigation‚Äù?
From Puppeteer‚Äôs standpoint, ‚Äúnavigation‚Äù is anything that changes a page‚Äôs URL.
Aside from regular navigation where the browser hits the network to fetch a new document from the web server, this includes anchor navigations and History API usage.
With this definition of ‚Äúnavigation,‚Äù Puppeteer works seamlessly with single-page applications.
Q: What‚Äôs the difference between a ‚Äútrusted"" and ""untrusted"" input event?
In browsers, input events could be divided into two big groups: trusted vs. untrusted.

Trusted events: events generated by users interacting with the page, e.g. using a mouse or keyboard.
Untrusted event: events generated by Web APIs, e.g. document.createEvent or element.click() methods.

Websites can distinguish between these two groups:

using an Event.isTrusted event flag
sniffing for accompanying events. For example, every trusted 'click' event is preceded by 'mousedown' and 'mouseup' events.

For automation purposes it‚Äôs important to generate trusted events. All input events generated with Puppeteer are trusted and fire proper accompanying events. If, for some reason, one needs an untrusted event, it‚Äôs always possible to hop into a page context with page.evaluate and generate a fake event:
await page.evaluate(() => {
  document.querySelector('button[type=submit]').click();
});
Q: What features does Puppeteer not support?
You may find that Puppeteer does not behave as expected when controlling pages that incorporate audio and video. (For example, video playback/screenshots is likely to fail.) There are two reasons for this:

Puppeteer is bundled with Chromium ‚Äî not Chrome ‚Äî and so by default, it inherits all of Chromium's media-related limitations. This means that Puppeteer does not support licensed formats such as AAC or H.264. (However, it is possible to force Puppeteer to use a separately-installed version Chrome instead of Chromium via the executablePath option to puppeteer.launch. You should only use this configuration if you need an official release of Chrome that supports these media formats.)
Since Puppeteer (in all configurations) controls a desktop version of Chromium/Chrome, features that are only supported by the mobile version of Chrome are not supported. This means that Puppeteer does not support HTTP Live Streaming (HLS).

Q: I am having trouble installing / running Puppeteer in my test environment. Where should I look for help?
We have a troubleshooting guide for various operating systems that lists the required dependencies.
Q: How do I try/test a prerelease version of Puppeteer?
You can check out this repo or install the latest prerelease from npm:
npm i --save puppeteer@next
Please note that prerelease may be unstable and contain bugs.
Q: I have more questions! Where do I ask?
There are many ways to get help on Puppeteer:

bugtracker
Stack Overflow
slack channel

Make sure to search these channels before posting your question.
",puppeteer api faq contributing troubleshooting puppeteer node library provides highlevel api control chrome chromium devtools protocol puppeteer runs headless default configured run full nonheadless chrome chromium things manually browser done using puppeteer examples get started generate screenshots pdfs pages crawl spa singlepage application generate prerendered content ie ssr serverside rendering automate form submission ui testing keyboard input etc create uptodate automated testing environment run tests directly latest version chrome using latest javascript browser features capture timeline trace site help diagnose performance issues test chrome extensions give spin httpstrypuppeteerappspotcom getting started installation use puppeteer project run npm puppeteer yarn add puppeteer note install puppeteer downloads recent version chromium mb mac mb linux mb win guaranteed work api skip download see environment variables puppeteercore since version publish puppeteercore package version puppeteer doesnt download chromium default npm puppeteercore yarn add puppeteercore puppeteercore intended lightweight version puppeteer launching existing browser installation connecting remote one sure version puppeteercore install compatible browser intend connect see puppeteer vs puppeteercore usage puppeteer follows latest maintenance lts version node note prior v puppeteer required least node v subsequent versions rely node examples use asyncawait supported node v greater puppeteer familiar people using browser testing frameworks create instance browser open pages manipulate puppeteers api example navigating httpsexamplecom saving screenshot examplepng save file examplejs const puppeteer requirepuppeteer async const browser await puppeteerlaunch const page await browsernewpage await pagegotohttpsexamplecom await pagescreenshotpath examplepng await browserclose execute script command line node examplejs puppeteer sets initial page size px defines screenshot size page size customized pagesetviewport example create pdf save file hnjs const puppeteer requirepuppeteer async const browser await puppeteerlaunch const page await browsernewpage await pagegotohttpsnewsycombinatorcom waituntil networkidle await pagepdfpath hnpdf format await browserclose execute script command line node hnjs see pagepdf information creating pdfs example evaluate script context page save file getdimensionsjs const puppeteer requirepuppeteer async const browser await puppeteerlaunch const page await browsernewpage await pagegotohttpsexamplecom get viewport page reported page const dimensions await pageevaluate return width documentdocumentelementclientwidth height documentdocumentelementclientheight devicescalefactor windowdevicepixelratio consolelogdimensions dimensions await browserclose execute script command line node getdimensionsjs see pageevaluate information evaluate related methods like evaluateonnewdocument exposefunction default runtime settings uses headless mode puppeteer launches chromium headless mode launch full version chromium set headless option launching browser const browser await puppeteerlaunchheadless false default true runs bundled version chromium default puppeteer downloads uses specific version chromium api guaranteed work box use puppeteer different version chrome chromium pass executables path creating browser instance const browser await puppeteerlaunchexecutablepath pathtochrome see puppeteerlaunch information see article description differences chromium chrome article describes differences linux users creates fresh user profile puppeteer creates chromium user profile cleans every run resources api documentation examples community list puppeteer resources debugging tips turn headless mode sometimes useful see browser displaying instead launching headless mode launch full version browser using headless false const browser await puppeteerlaunchheadless false slow slowmo option slows puppeteer operations specified amount milliseconds another way help see whats going const browser await puppeteerlaunch headless false slowmo slow ms capture console output listen console event also handy debugging code pageevaluate pageonconsole msg consolelogpage log msgtext await pageevaluate consolelogurl locationhref use debugger application code browser two execution context nodejs running test code browser running application code tested lets debug code application code browser ie code inside evaluate use devtools true launching puppeteer const browser await puppeteerlaunchdevtools true change default test timeout jest jestsettimeout jasmine jasminedefaulttimeoutinterval mocha thistimeout dont forget change test use function add evaluate statement debugger inside add debugger existing evaluate statement await pageevaluate debugger test stop executing evaluate statement chromium stop debug mode use debugger nodejs let debug test code example step await pageclick nodejs script see click happen application code browser note wont able run await pageclick devtools console due chromium bug want try something add test file add debugger test eg debugger await pageclickatargetblank set headless false run node inspectbrk eg node inspectbrk nodemodulesbinjest tests chrome open chromeinspectdevices click inspect newly opened test browser type f resume test execution debugger hit debug test browser enable verbose logging internal devtools protocol traffic logged via debug module puppeteer namespace basic verbose logging env debugpuppeteer node scriptjs protocol traffic rather noisy example filters network domain messages env debugpuppeteer env debugcolorstrue node scriptjs grep v network debug puppeteer node code easily using ndb npm install g ndb even better use npx add debugger puppeteer node code add ndb npx ndb test command example ndb jest ndb mocha npx ndb jest npx ndb mocha debug test inside chromium like boss contributing puppeteer check contributing guide get overview puppeteer development faq q maintains puppeteer chrome devtools team maintains library wed love help expertise project see contributing q puppeteers goals principles goals project provide slim canonical library highlights capabilities devtools protocol provide reference implementation similar testing libraries eventually frameworks could adopt puppeteer foundational layer grow adoption headlessautomated browser testing help dogfood new devtools protocol featuresand catch bugs learn pain points automated browser testing help fill gaps adapt chromium principles help us drive product decisions speed puppeteer almost zero performance overhead automated page security puppeteer operates offprocess respect chromium making safe automate potentially malicious pages stability puppeteer flaky leak memory simplicity puppeteer provides highlevel api thats easy use understand debug q puppeteer replacing seleniumwebdriver projects valuable different reasons seleniumwebdriver focuses crossbrowser automation value proposition single standard api works across major browsers puppeteer focuses chromium value proposition richer functionality higher reliability said use puppeteer run tests chromium eg using communitydriven jestpuppeteer probably shouldnt testing solution good points compared webdriver puppeteer requires zero setup comes bundled chromium version works best making easy start end day better tests running chromiumonly tests puppeteer eventdriven architecture removes lot potential flakiness theres need evil sleep calls puppeteer scripts puppeteer runs headless default makes fast run puppeteer v also exposes browser contexts making possible efficiently parallelize test execution puppeteer shines comes debugging flip headless bit false add slowmo youll see browser even open chrome devtools inspect test environment q doesnt puppeteer vxxx work chromium vyyy see puppeteer indivisible entity chromium version puppeteer bundles specific version chromium version guaranteed work artificial constraint lot work puppeteer actually taking place chromium repository heres typical story puppeteer bug reported httpsgithubcompuppeteerpuppeteerissues turned issue devtools protocol fixing chromium httpschromiumreviewgooglesourcecomcchromiumsrc upstream fix landed roll updated chromium puppeteer httpsgithubcompuppeteerpuppeteerpull however oftentimes desirable use puppeteer official google chrome rather chromium work install puppeteercore version corresponds chrome version example order drive chrome puppeteercore use chrome npm tag npm install puppeteercorechrome q chromium version puppeteer use look chromiumrevision packagejson find corresponding chromium commit version number search revision prefixed r omahaproxys find releases section q whats considered navigation puppeteers standpoint navigation anything changes pages url aside regular navigation browser hits network fetch new document web server includes anchor navigations history api usage definition navigation puppeteer works seamlessly singlepage applications q whats difference trusted untrusted input event browsers input events could divided two big groups trusted vs untrusted trusted events events generated users interacting page eg using mouse keyboard untrusted event events generated web apis eg documentcreateevent elementclick methods websites distinguish two groups using eventistrusted event flag sniffing accompanying events example every trusted click event preceded mousedown mouseup events automation purposes important generate trusted events input events generated puppeteer trusted fire proper accompanying events reason one needs untrusted event always possible hop page context pageevaluate generate fake event await pageevaluate documentqueryselectorbuttontypesubmitclick q features puppeteer support may find puppeteer behave expected controlling pages incorporate audio video example video playbackscreenshots likely fail two reasons puppeteer bundled chromium chrome default inherits chromiums mediarelated limitations means puppeteer support licensed formats aac h however possible force puppeteer use separatelyinstalled version chrome instead chromium via executablepath option puppeteerlaunch use configuration need official release chrome supports media formats since puppeteer configurations controls desktop version chromiumchrome features supported mobile version chrome supported means puppeteer support http live streaming hls q trouble installing running puppeteer test environment look help troubleshooting guide various operating systems lists required dependencies q trytest prerelease version puppeteer check repo install latest prerelease npm npm save puppeteernext please note prerelease may unstable contain bugs q questions ask many ways get help puppeteer bugtracker stack overflow slack channel make sure search channels posting question,puppet api faq contribut troubleshoot puppet node librari provid highlevel api control chrome chromium devtool protocol puppet run headless default configur run full nonheadless chrome chromium thing manual browser done use puppet exampl get start gener screenshot pdf page crawl spa singlepag applic gener prerend content ie ssr serversid render autom form submiss ui test keyboard input etc creat uptod autom test environ run test directli latest version chrome use latest javascript browser featur captur timelin trace site help diagnos perform issu test chrome extens give spin httpstrypuppeteerappspotcom get start instal use puppet project run npm puppet yarn add puppet note instal puppet download recent version chromium mb mac mb linux mb win guarante work api skip download see environ variabl puppeteercor sinc version publish puppeteercor packag version puppet doesnt download chromium default npm puppeteercor yarn add puppeteercor puppeteercor intend lightweight version puppet launch exist browser instal connect remot one sure version puppeteercor instal compat browser intend connect see puppet vs puppeteercor usag puppet follow latest mainten lt version node note prior v puppet requir least node v subsequ version reli node exampl use asyncawait support node v greater puppet familiar peopl use browser test framework creat instanc browser open page manipul puppet api exampl navig httpsexamplecom save screenshot examplepng save file examplej const puppet requirepuppet async const browser await puppeteerlaunch const page await browsernewpag await pagegotohttpsexamplecom await pagescreenshotpath examplepng await browserclos execut script command line node examplej puppet set initi page size px defin screenshot size page size custom pagesetviewport exampl creat pdf save file hnj const puppet requirepuppet async const browser await puppeteerlaunch const page await browsernewpag await pagegotohttpsnewsycombinatorcom waituntil networkidl await pagepdfpath hnpdf format await browserclos execut script command line node hnj see pagepdf inform creat pdf exampl evalu script context page save file getdimensionsj const puppet requirepuppet async const browser await puppeteerlaunch const page await browsernewpag await pagegotohttpsexamplecom get viewport page report page const dimens await pageevalu return width documentdocumentelementclientwidth height documentdocumentelementclientheight devicescalefactor windowdevicepixelratio consolelogdimens dimens await browserclos execut script command line node getdimensionsj see pageevalu inform evalu relat method like evaluateonnewdocu exposefunct default runtim set use headless mode puppet launch chromium headless mode launch full version chromium set headless option launch browser const browser await puppeteerlaunchheadless fals default true run bundl version chromium default puppet download use specif version chromium api guarante work box use puppet differ version chrome chromium pass execut path creat browser instanc const browser await puppeteerlaunchexecutablepath pathtochrom see puppeteerlaunch inform see articl descript differ chromium chrome articl describ differ linux user creat fresh user profil puppet creat chromium user profil clean everi run resourc api document exampl commun list puppet resourc debug tip turn headless mode sometim use see browser display instead launch headless mode launch full version browser use headless fals const browser await puppeteerlaunchheadless fals slow slowmo option slow puppet oper specifi amount millisecond anoth way help see what go const browser await puppeteerlaunch headless fals slowmo slow ms captur consol output listen consol event also handi debug code pageevalu pageonconsol msg consolelogpag log msgtext await pageevalu consolelogurl locationhref use debugg applic code browser two execut context nodej run test code browser run applic code test let debug code applic code browser ie code insid evalu use devtool true launch puppet const browser await puppeteerlaunchdevtool true chang default test timeout jest jestsettimeout jasmin jasminedefaulttimeoutinterv mocha thistimeout dont forget chang test use function add evalu statement debugg insid add debugg exist evalu statement await pageevalu debugg test stop execut evalu statement chromium stop debug mode use debugg nodej let debug test code exampl step await pageclick nodej script see click happen applic code browser note wont abl run await pageclick devtool consol due chromium bug want tri someth add test file add debugg test eg debugg await pageclickatargetblank set headless fals run node inspectbrk eg node inspectbrk nodemodulesbinjest test chrome open chromeinspectdevic click inspect newli open test browser type f resum test execut debugg hit debug test browser enabl verbos log intern devtool protocol traffic log via debug modul puppet namespac basic verbos log env debugpuppet node scriptj protocol traffic rather noisi exampl filter network domain messag env debugpuppet env debugcolorstru node scriptj grep v network debug puppet node code easili use ndb npm instal g ndb even better use npx add debugg puppet node code add ndb npx ndb test command exampl ndb jest ndb mocha npx ndb jest npx ndb mocha debug test insid chromium like boss contribut puppet check contribut guid get overview puppet develop faq q maintain puppet chrome devtool team maintain librari wed love help expertis project see contribut q puppet goal principl goal project provid slim canon librari highlight capabl devtool protocol provid refer implement similar test librari eventu framework could adopt puppet foundat layer grow adopt headlessautom browser test help dogfood new devtool protocol featuresand catch bug learn pain point autom browser test help fill gap adapt chromium principl help us drive product decis speed puppet almost zero perform overhead autom page secur puppet oper offprocess respect chromium make safe autom potenti malici page stabil puppet flaki leak memori simplic puppet provid highlevel api that easi use understand debug q puppet replac seleniumwebdriv project valuabl differ reason seleniumwebdriv focus crossbrows autom valu proposit singl standard api work across major browser puppet focus chromium valu proposit richer function higher reliabl said use puppet run test chromium eg use communitydriven jestpuppet probabl shouldnt test solut good point compar webdriv puppet requir zero setup come bundl chromium version work best make easi start end day better test run chromiumonli test puppet eventdriven architectur remov lot potenti flaki there need evil sleep call puppet script puppet run headless default make fast run puppet v also expos browser context make possibl effici parallel test execut puppet shine come debug flip headless bit fals add slowmo youll see browser even open chrome devtool inspect test environ q doesnt puppet vxxx work chromium vyyi see puppet indivis entiti chromium version puppet bundl specif version chromium version guarante work artifici constraint lot work puppet actual take place chromium repositori here typic stori puppet bug report httpsgithubcompuppeteerpuppeteerissu turn issu devtool protocol fix chromium httpschromiumreviewgooglesourcecomcchromiumsrc upstream fix land roll updat chromium puppet httpsgithubcompuppeteerpuppeteerpul howev oftentim desir use puppet offici googl chrome rather chromium work instal puppeteercor version correspond chrome version exampl order drive chrome puppeteercor use chrome npm tag npm instal puppeteercorechrom q chromium version puppet use look chromiumrevis packagejson find correspond chromium commit version number search revis prefix r omahaproxi find releas section q what consid navig puppet standpoint navig anyth chang page url asid regular navig browser hit network fetch new document web server includ anchor navig histori api usag definit navig puppet work seamlessli singlepag applic q what differ trust untrust input event browser input event could divid two big group trust vs untrust trust event event gener user interact page eg use mous keyboard untrust event event gener web api eg documentcreateev elementclick method websit distinguish two group use eventistrust event flag snif accompani event exampl everi trust click event preced mousedown mouseup event autom purpos import gener trust event input event gener puppet trust fire proper accompani event reason one need untrust event alway possibl hop page context pageevalu gener fake event await pageevalu documentqueryselectorbuttontypesubmitclick q featur puppet support may find puppet behav expect control page incorpor audio video exampl video playbackscreenshot like fail two reason puppet bundl chromium chrome default inherit chromium mediarel limit mean puppet support licens format aac h howev possibl forc puppet use separatelyinstal version chrome instead chromium via executablepath option puppeteerlaunch use configur need offici releas chrome support media format sinc puppet configur control desktop version chromiumchrom featur support mobil version chrome support mean puppet support http live stream hl q troubl instal run puppet test environ look help troubleshoot guid variou oper system list requir depend q trytest prereleas version puppet check repo instal latest prereleas npm npm save puppeteernext pleas note prereleas may unstabl contain bug q question ask mani way get help puppet bugtrack stack overflow slack channel make sure search channel post question,puppeteer api faq contributing troubleshooting puppeteer node library provides highlevel api control chrome chromium devtools protocol puppeteer run headless default configured run full nonheadless chrome chromium thing manually browser done using puppeteer example get started generate screenshots pdfs page crawl spa singlepage application generate prerendered content ie ssr serverside rendering automate form submission ui testing keyboard input etc create uptodate automated testing environment run test directly latest version chrome using latest javascript browser feature capture timeline trace site help diagnose performance issue test chrome extension give spin httpstrypuppeteerappspotcom getting started installation use puppeteer project run npm puppeteer yarn add puppeteer note install puppeteer downloads recent version chromium mb mac mb linux mb win guaranteed work api skip download see environment variable puppeteercore since version publish puppeteercore package version puppeteer doesnt download chromium default npm puppeteercore yarn add puppeteercore puppeteercore intended lightweight version puppeteer launching existing browser installation connecting remote one sure version puppeteercore install compatible browser intend connect see puppeteer v puppeteercore usage puppeteer follows latest maintenance lts version node note prior v puppeteer required least node v subsequent version rely node example use asyncawait supported node v greater puppeteer familiar people using browser testing framework create instance browser open page manipulate puppeteer api example navigating httpsexamplecom saving screenshot examplepng save file examplejs const puppeteer requirepuppeteer async const browser await puppeteerlaunch const page await browsernewpage await pagegotohttpsexamplecom await pagescreenshotpath examplepng await browserclose execute script command line node examplejs puppeteer set initial page size px defines screenshot size page size customized pagesetviewport example create pdf save file hnjs const puppeteer requirepuppeteer async const browser await puppeteerlaunch const page await browsernewpage await pagegotohttpsnewsycombinatorcom waituntil networkidle await pagepdfpath hnpdf format await browserclose execute script command line node hnjs see pagepdf information creating pdfs example evaluate script context page save file getdimensionsjs const puppeteer requirepuppeteer async const browser await puppeteerlaunch const page await browsernewpage await pagegotohttpsexamplecom get viewport page reported page const dimension await pageevaluate return width documentdocumentelementclientwidth height documentdocumentelementclientheight devicescalefactor windowdevicepixelratio consolelogdimensions dimension await browserclose execute script command line node getdimensionsjs see pageevaluate information evaluate related method like evaluateonnewdocument exposefunction default runtime setting us headless mode puppeteer launch chromium headless mode launch full version chromium set headless option launching browser const browser await puppeteerlaunchheadless false default true run bundled version chromium default puppeteer downloads us specific version chromium api guaranteed work box use puppeteer different version chrome chromium pas executables path creating browser instance const browser await puppeteerlaunchexecutablepath pathtochrome see puppeteerlaunch information see article description difference chromium chrome article describes difference linux user creates fresh user profile puppeteer creates chromium user profile clean every run resource api documentation example community list puppeteer resource debugging tip turn headless mode sometimes useful see browser displaying instead launching headless mode launch full version browser using headless false const browser await puppeteerlaunchheadless false slow slowmo option slows puppeteer operation specified amount millisecond another way help see whats going const browser await puppeteerlaunch headless false slowmo slow m capture console output listen console event also handy debugging code pageevaluate pageonconsole msg consolelogpage log msgtext await pageevaluate consolelogurl locationhref use debugger application code browser two execution context nodejs running test code browser running application code tested let debug code application code browser ie code inside evaluate use devtools true launching puppeteer const browser await puppeteerlaunchdevtools true change default test timeout jest jestsettimeout jasmine jasminedefaulttimeoutinterval mocha thistimeout dont forget change test use function add evaluate statement debugger inside add debugger existing evaluate statement await pageevaluate debugger test stop executing evaluate statement chromium stop debug mode use debugger nodejs let debug test code example step await pageclick nodejs script see click happen application code browser note wont able run await pageclick devtools console due chromium bug want try something add test file add debugger test eg debugger await pageclickatargetblank set headless false run node inspectbrk eg node inspectbrk nodemodulesbinjest test chrome open chromeinspectdevices click inspect newly opened test browser type f resume test execution debugger hit debug test browser enable verbose logging internal devtools protocol traffic logged via debug module puppeteer namespace basic verbose logging env debugpuppeteer node scriptjs protocol traffic rather noisy example filter network domain message env debugpuppeteer env debugcolorstrue node scriptjs grep v network debug puppeteer node code easily using ndb npm install g ndb even better use npx add debugger puppeteer node code add ndb npx ndb test command example ndb jest ndb mocha npx ndb jest npx ndb mocha debug test inside chromium like bos contributing puppeteer check contributing guide get overview puppeteer development faq q maintains puppeteer chrome devtools team maintains library wed love help expertise project see contributing q puppeteer goal principle goal project provide slim canonical library highlight capability devtools protocol provide reference implementation similar testing library eventually framework could adopt puppeteer foundational layer grow adoption headlessautomated browser testing help dogfood new devtools protocol featuresand catch bug learn pain point automated browser testing help fill gap adapt chromium principle help u drive product decision speed puppeteer almost zero performance overhead automated page security puppeteer operates offprocess respect chromium making safe automate potentially malicious page stability puppeteer flaky leak memory simplicity puppeteer provides highlevel api thats easy use understand debug q puppeteer replacing seleniumwebdriver project valuable different reason seleniumwebdriver focus crossbrowser automation value proposition single standard api work across major browser puppeteer focus chromium value proposition richer functionality higher reliability said use puppeteer run test chromium eg using communitydriven jestpuppeteer probably shouldnt testing solution good point compared webdriver puppeteer requires zero setup come bundled chromium version work best making easy start end day better test running chromiumonly test puppeteer eventdriven architecture remove lot potential flakiness there need evil sleep call puppeteer script puppeteer run headless default make fast run puppeteer v also expose browser context making possible efficiently parallelize test execution puppeteer shine come debugging flip headless bit false add slowmo youll see browser even open chrome devtools inspect test environment q doesnt puppeteer vxxx work chromium vyyy see puppeteer indivisible entity chromium version puppeteer bundle specific version chromium version guaranteed work artificial constraint lot work puppeteer actually taking place chromium repository here typical story puppeteer bug reported httpsgithubcompuppeteerpuppeteerissues turned issue devtools protocol fixing chromium httpschromiumreviewgooglesourcecomcchromiumsrc upstream fix landed roll updated chromium puppeteer httpsgithubcompuppeteerpuppeteerpull however oftentimes desirable use puppeteer official google chrome rather chromium work install puppeteercore version corresponds chrome version example order drive chrome puppeteercore use chrome npm tag npm install puppeteercorechrome q chromium version puppeteer use look chromiumrevision packagejson find corresponding chromium commit version number search revision prefixed r omahaproxys find release section q whats considered navigation puppeteer standpoint navigation anything change page url aside regular navigation browser hit network fetch new document web server includes anchor navigation history api usage definition navigation puppeteer work seamlessly singlepage application q whats difference trusted untrusted input event browser input event could divided two big group trusted v untrusted trusted event event generated user interacting page eg using mouse keyboard untrusted event event generated web apis eg documentcreateevent elementclick method website distinguish two group using eventistrusted event flag sniffing accompanying event example every trusted click event preceded mousedown mouseup event automation purpose important generate trusted event input event generated puppeteer trusted fire proper accompanying event reason one need untrusted event always possible hop page context pageevaluate generate fake event await pageevaluate documentqueryselectorbuttontypesubmitclick q feature puppeteer support may find puppeteer behave expected controlling page incorporate audio video example video playbackscreenshots likely fail two reason puppeteer bundled chromium chrome default inherits chromium mediarelated limitation mean puppeteer support licensed format aac h however possible force puppeteer use separatelyinstalled version chrome instead chromium via executablepath option puppeteerlaunch use configuration need official release chrome support medium format since puppeteer configuration control desktop version chromiumchrome feature supported mobile version chrome supported mean puppeteer support http live streaming hl q trouble installing running puppeteer test environment look help troubleshooting guide various operating system list required dependency q trytest prerelease version puppeteer check repo install latest prerelease npm npm save puppeteernext please note prerelease may unstable contain bug q question ask many way get help puppeteer bugtracker stack overflow slack channel make sure search channel posting question
35,JavaScript,GitHub - 30-seconds/30-seconds-of-code: Short JavaScript code snippets for all your development needs,"
30 seconds of code

Short JavaScript code snippets for all your development needs


Visit our website to view our snippet collection.
Use the Search page to find snippets that suit your needs. You can search by name, tag, language or using a snippet's description. Just start typing a term and see what comes up.
Browse the JavaScript Snippet List to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.
Click on each snippet card to view the whole snippet, including code, explanation and examples.
You can use the button on the right side of a snippet card to copy the code to clipboard.
If you like the project, give it a star. It means a lot to the people maintaining it.

Want to contribute?

If you want to help us improve, take a minute to read the Contribution Guidelines first.
Use the Snippet Template to add new snippets to the collection.
If you find a problem with a specific snippet, please open an issue.
If you find a problem with the website, please report it in the web repository.

Credits & Sponsors

This repository is maintained by the 30-seconds organization on GitHub.
All snippets are licensed under the CC0-1.0 License, unless explicitly stated otherwise.
Logos, names and trademarks are not to be used without the explicit consent of the maintainers or owners of the 30 seconds GitHub organization.
Our website is powered by Netlify, Gatsby, Travis CI & GitHub.

",seconds code short javascript code snippets development needs visit website view snippet collection use search page find snippets suit needs search name tag language using snippets description start typing term see comes browse javascript snippet list see snippets project click individual tags top page narrow search specific tag click snippet card view whole snippet including code explanation examples use button right side snippet card copy code clipboard like project give star means lot people maintaining want contribute want help us improve take minute read contribution guidelines first use snippet template add new snippets collection find problem specific snippet please open issue find problem website please report web repository credits sponsors repository maintained seconds organization github snippets licensed cc license unless explicitly stated otherwise logos names trademarks used without explicit consent maintainers owners seconds github organization website powered netlify gatsby travis ci github,second code short javascript code snippet develop need visit websit view snippet collect use search page find snippet suit need search name tag languag use snippet descript start type term see come brows javascript snippet list see snippet project click individu tag top page narrow search specif tag click snippet card view whole snippet includ code explan exampl use button right side snippet card copi code clipboard like project give star mean lot peopl maintain want contribut want help us improv take minut read contribut guidelin first use snippet templat add new snippet collect find problem specif snippet pleas open issu find problem websit pleas report web repositori credit sponsor repositori maintain second organ github snippet licens cc licens unless explicitli state otherwis logo name trademark use without explicit consent maintain owner second github organ websit power netlifi gatsbi travi ci github,second code short javascript code snippet development need visit website view snippet collection use search page find snippet suit need search name tag language using snippet description start typing term see come browse javascript snippet list see snippet project click individual tag top page narrow search specific tag click snippet card view whole snippet including code explanation example use button right side snippet card copy code clipboard like project give star mean lot people maintaining want contribute want help u improve take minute read contribution guideline first use snippet template add new snippet collection find problem specific snippet please open issue find problem website please report web repository credit sponsor repository maintained second organization github snippet licensed cc license unless explicitly stated otherwise logo name trademark used without explicit consent maintainer owner second github organization website powered netlify gatsby travis ci github
36,JavaScript,"GitHub - mui-org/material-ui: React components for faster and easier web development. Build your own design system, or start with Material Design.","


Material-UI

React components that implement Google's Material Design.















Installation
Material-UI is available as an npm package.
Stable channel v4
// with npm
npm install @material-ui/core

// with yarn
yarn add @material-ui/core
v3.x (Migration from v3 to v4)
v0.x (Migration to v1)
Please note that @next will only point to pre-releases; to get the latest stable release use @latest instead.
Who sponsors Material-UI?
Diamond üíé
3/3 slots available
Diamond Sponsors are those who have pledged $2,000/month and more to Material-UI.
Please contact us at diamond@material-ui.com to subscribe to this tier.
Gold üèÜ
via Patreon




via OpenCollective



Gold Sponsors are those who have pledged $500/month and more to Material-UI.
There is more!
See the full list of our backers.
Usage
Here is a quick example to get you started, it's all you need:
import React from 'react';
import ReactDOM from 'react-dom';
import Button from '@material-ui/core/Button';

function App() {
  return (
    <Button variant=""contained"" color=""primary"">
      Hello World
    </Button>
  );
}

ReactDOM.render(<App />, document.querySelector('#app'));
Yes, it's really all you need to get started as you can see in this live and interactive demo:

Questions
For how-to questions and other non-issues,
please use StackOverflow instead of Github issues.
There is a StackOverflow tag called ""material-ui"" that you can use to tag your questions.
Examples
Are you looking for an example project to get started?
We host some.
Documentation
Check out our documentation website.
Premium Themes
You can find complete templates & themes in our premium themes section.
Contributing
Read our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Material-UI.
Notice that contributions go far beyond pull requests and commits.
Although we love giving you the opportunity to put your stamp on Material-UI, we also are thrilled to receive a variety of other contributions.
Changelog
Recently Updated?
Please read the changelog.
Roadmap
The future plans and high priority features and enhancements can be found in the roadmap file.
License
This project is licensed under the terms of the
MIT license.
",materialui react components implement googles material design installation materialui available npm package stable channel v npm npm install materialuicore yarn yarn add materialuicore vx migration v v vx migration v please note next point prereleases get latest stable release use latest instead sponsors materialui diamond slots available diamond sponsors pledged month materialui please contact us diamondmaterialuicom subscribe tier gold via patreon via opencollective gold sponsors pledged month materialui see full list backers usage quick example get started need import react react import reactdom reactdom import button materialuicorebutton function app return button variantcontained colorprimary hello world button reactdomrenderapp documentqueryselectorapp yes really need get started see live interactive demo questions howto questions nonissues please use stackoverflow instead github issues stackoverflow tag called materialui use tag questions examples looking example project get started host documentation check documentation website premium themes find complete templates themes premium themes section contributing read contributing guide learn development process propose bugfixes improvements build test changes materialui notice contributions go far beyond pull requests commits although love giving opportunity put stamp materialui also thrilled receive variety contributions changelog recently updated please read changelog roadmap future plans high priority features enhancements found roadmap file license project licensed terms mit license,materialui react compon implement googl materi design instal materialui avail npm packag stabl channel v npm npm instal materialuicor yarn yarn add materialuicor vx migrat v v vx migrat v pleas note next point prereleas get latest stabl releas use latest instead sponsor materialui diamond slot avail diamond sponsor pledg month materialui pleas contact us diamondmaterialuicom subscrib tier gold via patreon via opencollect gold sponsor pledg month materialui see full list backer usag quick exampl get start need import react react import reactdom reactdom import button materialuicorebutton function app return button variantcontain colorprimari hello world button reactdomrenderapp documentqueryselectorapp ye realli need get start see live interact demo question howto question nonissu pleas use stackoverflow instead github issu stackoverflow tag call materialui use tag question exampl look exampl project get start host document check document websit premium theme find complet templat theme premium theme section contribut read contribut guid learn develop process propos bugfix improv build test chang materialui notic contribut go far beyond pull request commit although love give opportun put stamp materialui also thrill receiv varieti contribut changelog recent updat pleas read changelog roadmap futur plan high prioriti featur enhanc found roadmap file licens project licens term mit licens,materialui react component implement google material design installation materialui available npm package stable channel v npm npm install materialuicore yarn yarn add materialuicore vx migration v v vx migration v please note next point prereleases get latest stable release use latest instead sponsor materialui diamond slot available diamond sponsor pledged month materialui please contact u diamondmaterialuicom subscribe tier gold via patreon via opencollective gold sponsor pledged month materialui see full list backer usage quick example get started need import react react import reactdom reactdom import button materialuicorebutton function app return button variantcontained colorprimary hello world button reactdomrenderapp documentqueryselectorapp yes really need get started see live interactive demo question howto question nonissues please use stackoverflow instead github issue stackoverflow tag called materialui use tag question example looking example project get started host documentation check documentation website premium theme find complete template theme premium theme section contributing read contributing guide learn development process propose bugfixes improvement build test change materialui notice contribution go far beyond pull request commits although love giving opportunity put stamp materialui also thrilled receive variety contribution changelog recently updated please read changelog roadmap future plan high priority feature enhancement found roadmap file license project licensed term mit license
37,JavaScript,GitHub - jquery/jquery: jQuery JavaScript Library,"jQuery ‚Äî New Wave JavaScript


Contribution Guides
In the spirit of open source software development, jQuery always encourages community code contribution. To help you get started and before you jump into writing code, be sure to read these important contribution guidelines thoroughly:

Getting Involved
Core Style Guide
Writing Code for jQuery Foundation Projects

Environments in which to use jQuery

Browser support
jQuery also supports Node, browser extensions, and other non-browser environments.

What you need to build your own jQuery
To build jQuery, you need to have the latest Node.js/npm and git 1.7 or later. Earlier versions might work, but are not supported.
For Windows, you have to download and install git and Node.js.
macOS users should install Homebrew. Once Homebrew is installed, run brew install git to install git,
and brew install node to install Node.js.
Linux/BSD users should use their appropriate package managers to install git and Node.js, or build from source
if you swing that way. Easy-peasy.
How to build your own jQuery
Clone a copy of the main jQuery git repo by running:
git clone git://github.com/jquery/jquery.git
Enter the jquery directory and run the build script:
cd jquery && npm run build
The built version of jQuery will be put in the dist/ subdirectory, along with the minified copy and associated map file.
If you want to create custom build or help with jQuery development, it would be better to install grunt command line interface as a global package:
npm install -g grunt-cli

Make sure you have grunt installed by testing:
grunt -V

Now by running the grunt command, in the jquery directory, you can build a full version of jQuery, just like with an npm run build command:
grunt

There are many other tasks available for jQuery Core:
grunt -help

Modules
Special builds can be created that exclude subsets of jQuery functionality.
This allows for smaller custom builds when the builder is certain that those parts of jQuery are not being used.
For example, an app that only used JSONP for $.ajax() and did not need to calculate offsets or positions of elements could exclude the offset and ajax/xhr modules.
Any module may be excluded except for core, and selector. To exclude a module, pass its path relative to the src folder (without the .js extension).
Some example modules that can be excluded are:

ajax: All AJAX functionality: $.ajax(), $.get(), $.post(), $.ajaxSetup(), .load(), transports, and ajax event shorthands such as .ajaxStart().
ajax/xhr: The XMLHTTPRequest AJAX transport only.
ajax/script: The <script> AJAX transport only; used to retrieve scripts.
ajax/jsonp: The JSONP AJAX transport only; depends on the ajax/script transport.
css: The .css() method. Also removes all modules depending on css (including effects, dimensions, and offset).
css/showHide:  Non-animated .show(), .hide() and .toggle(); can be excluded if you use classes or explicit .css() calls to set the display property. Also removes the effects module.
deprecated: Methods documented as deprecated but not yet removed.
dimensions: The .width() and .height() methods, including inner- and outer- variations.
effects: The .animate() method and its shorthands such as .slideUp() or .hide(""slow"").
event: The .on() and .off() methods and all event functionality. Also removes event/alias.
event/alias: All event attaching/triggering shorthands like .click() or .mouseover().
event/trigger: The .trigger() and .triggerHandler() methods. Used by the alias module.
offset: The .offset(), .position(), .offsetParent(), .scrollLeft(), and .scrollTop() methods.
wrap: The .wrap(), .wrapAll(), .wrapInner(), and .unwrap() methods.
core/ready: Exclude the ready module if you place your scripts at the end of the body. Any ready callbacks bound with jQuery() will simply be called immediately. However, jQuery(document).ready() will not be a function and .on(""ready"", ...) or similar will not be triggered.
deferred: Exclude jQuery.Deferred. This also removes jQuery.Callbacks. Note that modules that depend on jQuery.Deferred(AJAX, effects, core/ready) will not be removed and will still expect jQuery.Deferred to be there. Include your own jQuery.Deferred implementation or exclude those modules as well (grunt custom:-deferred,-ajax,-effects,-core/ready).
exports/global: Exclude the attachment of global jQuery variables ($ and jQuery) to the window.
exports/amd: Exclude the AMD definition.

The build process shows a message for each dependent module it excludes or includes.
AMD name
As an option, you can set the module name for jQuery's AMD definition. By default, it is set to ""jquery"", which plays nicely with plugins and third-party libraries, but there may be cases where you'd like to change this. Simply set the ""amd"" option:
grunt custom --amd=""custom-name""
Or, to define anonymously, set the name to an empty string.
grunt custom --amd=""""
Custom Build Examples
To create a custom build, first check out the version:
git pull; git checkout VERSION
Where VERSION is the version you want to customize. Then, make sure all Node dependencies are installed:
npm install
Create the custom build using the grunt custom option, listing the modules to be excluded.
Exclude all ajax functionality:
grunt custom:-ajax
Excluding css removes modules depending on CSS: effects, offset, dimensions.
grunt custom:-css
Exclude a bunch of modules:
grunt custom:-ajax,-css,-deprecated,-dimensions,-effects,-event/alias,-offset,-wrap
For questions or requests regarding custom builds, please start a thread on the Developing jQuery Core section of the forum. Due to the combinatorics and custom nature of these builds, they are not regularly tested in jQuery's unit test process.
Running the Unit Tests
Make sure you have the necessary dependencies:
npm install
Start grunt watch or npm start to auto-build jQuery as you work:
grunt watch
Run the unit tests with a local server that supports PHP. Ensure that you run the site from the root directory, not the ""test"" directory. No database is required. Pre-configured php local servers are available for Windows and Mac. Here are some options:

Windows: WAMP download
Mac: MAMP download
Linux: Setting up LAMP
Mongoose (most platforms)

Building to a different directory
To copy the built jQuery files from /dist to another directory:
grunt && grunt dist:/path/to/special/location/
With this example, the output files would be:
/path/to/special/location/jquery.js
/path/to/special/location/jquery.min.js
To add a permanent copy destination, create a file in dist/ called "".destination.json"". Inside the file, paste and customize the following:
{
  ""/Absolute/path/to/other/destination"": true
}
Additionally, both methods can be combined.
Essential Git
As the source code is handled by the Git version control system, it's useful to know some features used.
Cleaning
If you want to purge your working directory back to the status of upstream, the following commands can be used (remember everything you've worked on is gone after these):
git reset --hard upstream/master
git clean -fdx
Rebasing
For feature/topic branches, you should always use the --rebase flag to git pull, or if you are usually handling many temporary ""to be in a github pull request"" branches, run the following to automate this:
git config branch.autosetuprebase local
(see man git-config for more information)
Handling merge conflicts
If you're getting merge conflicts when merging, instead of editing the conflicted files manually, you can use the feature
git mergetool. Even though the default tool xxdiff looks awful/old, it's rather useful.
The following are some commands that can be used there:

Ctrl + Alt + M - automerge as much as possible
b - jump to next merge conflict
s - change the order of the conflicted lines
u - undo a merge
left mouse button - mark a block to be the winner
middle mouse button - mark a line to be the winner
Ctrl + S - save
Ctrl + Q - quit

QUnit Reference
Test methods
expect( numAssertions );
stop();
start();
Note: QUnit's eventual addition of an argument to stop/start is ignored in this test suite so that start and stop can be passed as callbacks without worrying about their parameters.
Test assertions
ok( value, [message] );
equal( actual, expected, [message] );
notEqual( actual, expected, [message] );
deepEqual( actual, expected, [message] );
notDeepEqual( actual, expected, [message] );
strictEqual( actual, expected, [message] );
notStrictEqual( actual, expected, [message] );
throws( block, [expected], [message] );
Test Suite Convenience Methods Reference (See test/data/testinit.js)
Returns an array of elements with the given IDs
q( ... );
Example:
q(""main"", ""foo"", ""bar"");

=> [ div#main, span#foo, input#bar ]
Asserts that a selection matches the given IDs
t( testName, selector, [ ""array"", ""of"", ""ids"" ] );
Example:
t(""Check for something"", ""//[a]"", [""foo"", ""bar""]);
Fires a native DOM event without going through jQuery
fireNative( node, eventType )
Example:
fireNative( jQuery(""#elem"")[0], ""click"" );
Add random number to url to stop caching
url( ""some/url"" );
Example:
url(""index.html"");

=> ""data/index.html?10538358428943""


url(""mock.php?foo=bar"");

=> ""data/mock.php?foo=bar&10538358345554""
Run tests in an iframe
Some tests may require a document other than the standard test fixture, and
these can be run in a separate iframe. The actual test code and assertions
remain in jQuery's main test files; only the minimal test fixture markup
and setup code should be placed in the iframe file.
testIframe( testName, fileName,
  function testCallback(
      assert, jQuery, window, document,
	  [ additional args ] ) {
	...
  } );
This loads a page, constructing a url with fileName ""./data/"" + fileName.
The iframed page determines when the callback occurs in the test by
including the ""/test/data/iframeTest.js"" script and calling
startIframeTest( [ additional args ] ) when appropriate. Often this
will be after either document ready or window.onload fires.
The testCallback receives the QUnit assert object created by testIframe
for this test, followed by the global jQuery, window, and document from
the iframe. If the iframe code passes any arguments to startIframeTest,
they follow the document argument.
Questions?
If you have any questions, please feel free to ask on the
Developing jQuery Core forum or in #jquery on irc.freenode.net.
",jquery new wave javascript contribution guides spirit open source software development jquery always encourages community code contribution help get started jump writing code sure read important contribution guidelines thoroughly getting involved core style guide writing code jquery foundation projects environments use jquery browser support jquery also supports node browser extensions nonbrowser environments need build jquery build jquery need latest nodejsnpm git later earlier versions might work supported windows download install git nodejs macos users install homebrew homebrew installed run brew install git install git brew install node install nodejs linuxbsd users use appropriate package managers install git nodejs build source swing way easypeasy build jquery clone copy main jquery git repo running git clone gitgithubcomjqueryjquerygit enter jquery directory run build script cd jquery npm run build built version jquery put dist subdirectory along minified copy associated map file want create custom build help jquery development would better install grunt command line interface global package npm install g gruntcli make sure grunt installed testing grunt v running grunt command jquery directory build full version jquery like npm run build command grunt many tasks available jquery core grunt help modules special builds created exclude subsets jquery functionality allows smaller custom builds builder certain parts jquery used example app used jsonp ajax need calculate offsets positions elements could exclude offset ajaxxhr modules module may excluded except core selector exclude module pass path relative src folder without js extension example modules excluded ajax ajax functionality ajax get post ajaxsetup load transports ajax event shorthands ajaxstart ajaxxhr xmlhttprequest ajax transport ajaxscript script ajax transport used retrieve scripts ajaxjsonp jsonp ajax transport depends ajaxscript transport css css method also removes modules depending css including effects dimensions offset cssshowhide nonanimated show hide toggle excluded use classes explicit css calls set display property also removes effects module deprecated methods documented deprecated yet removed dimensions width height methods including inner outer variations effects animate method shorthands slideup hideslow event methods event functionality also removes eventalias eventalias event attachingtriggering shorthands like click mouseover eventtrigger trigger triggerhandler methods used alias module offset offset position offsetparent scrollleft scrolltop methods wrap wrap wrapall wrapinner unwrap methods coreready exclude ready module place scripts end body ready callbacks bound jquery simply called immediately however jquerydocumentready function onready similar triggered deferred exclude jquerydeferred also removes jquerycallbacks note modules depend jquerydeferredajax effects coreready removed still expect jquerydeferred include jquerydeferred implementation exclude modules well grunt customdeferredajaxeffectscoreready exportsglobal exclude attachment global jquery variables jquery window exportsamd exclude amd definition build process shows message dependent module excludes includes amd name option set module name jquerys amd definition default set jquery plays nicely plugins thirdparty libraries may cases youd like change simply set amd option grunt custom amdcustomname define anonymously set name empty string grunt custom amd custom build examples create custom build first check version git pull git checkout version version version want customize make sure node dependencies installed npm install create custom build using grunt custom option listing modules excluded exclude ajax functionality grunt customajax excluding css removes modules depending css effects offset dimensions grunt customcss exclude bunch modules grunt customajaxcssdeprecateddimensionseffectseventaliasoffsetwrap questions requests regarding custom builds please start thread developing jquery core section forum due combinatorics custom nature builds regularly tested jquerys unit test process running unit tests make sure necessary dependencies npm install start grunt watch npm start autobuild jquery work grunt watch run unit tests local server supports php ensure run site root directory test directory database required preconfigured php local servers available windows mac options windows wamp download mac mamp download linux setting lamp mongoose platforms building different directory copy built jquery files dist another directory grunt grunt distpathtospeciallocation example output files would pathtospeciallocationjqueryjs pathtospeciallocationjqueryminjs add permanent copy destination create file dist called destinationjson inside file paste customize following absolutepathtootherdestination true additionally methods combined essential git source code handled git version control system useful know features used cleaning want purge working directory back status upstream following commands used remember everything youve worked gone git reset hard upstreammaster git clean fdx rebasing featuretopic branches always use rebase flag git pull usually handling many temporary github pull request branches run following automate git config branchautosetuprebase local see man gitconfig information handling merge conflicts youre getting merge conflicts merging instead editing conflicted files manually use feature git mergetool even though default tool xxdiff looks awfulold rather useful following commands used ctrl alt automerge much possible b jump next merge conflict change order conflicted lines u undo merge left mouse button mark block winner middle mouse button mark line winner ctrl save ctrl q quit qunit reference test methods expect numassertions stop start note qunits eventual addition argument stopstart ignored test suite start stop passed callbacks without worrying parameters test assertions ok value message equal actual expected message notequal actual expected message deepequal actual expected message notdeepequal actual expected message strictequal actual expected message notstrictequal actual expected message throws block expected message test suite convenience methods reference see testdatatestinitjs returns array elements given ids q example qmain foo bar divmain spanfoo inputbar asserts selection matches given ids testname selector array ids example tcheck something foo bar fires native dom event without going jquery firenative node eventtype example firenative jqueryelem click add random number url stop caching url someurl example urlindexhtml dataindexhtml urlmockphpfoobar datamockphpfoobar run tests iframe tests may require document standard test fixture run separate iframe actual test code assertions remain jquerys main test files minimal test fixture markup setup code placed iframe file testiframe testname filename function testcallback assert jquery window document &#9; additional args &#9; loads page constructing url filename data filename iframed page determines callback occurs test including testdataiframetestjs script calling startiframetest additional args appropriate often either document ready windowonload fires testcallback receives qunit assert object created testiframe test followed global jquery window document iframe iframe code passes arguments startiframetest follow document argument questions questions please feel free ask developing jquery core forum jquery ircfreenodenet,jqueri new wave javascript contribut guid spirit open sourc softwar develop jqueri alway encourag commun code contribut help get start jump write code sure read import contribut guidelin thoroughli get involv core style guid write code jqueri foundat project environ use jqueri browser support jqueri also support node browser extens nonbrows environ need build jqueri build jqueri need latest nodejsnpm git later earlier version might work support window download instal git nodej maco user instal homebrew homebrew instal run brew instal git instal git brew instal node instal nodej linuxbsd user use appropri packag manag instal git nodej build sourc swing way easypeasi build jqueri clone copi main jqueri git repo run git clone gitgithubcomjqueryjquerygit enter jqueri directori run build script cd jqueri npm run build built version jqueri put dist subdirectori along minifi copi associ map file want creat custom build help jqueri develop would better instal grunt command line interfac global packag npm instal g gruntcli make sure grunt instal test grunt v run grunt command jqueri directori build full version jqueri like npm run build command grunt mani task avail jqueri core grunt help modul special build creat exclud subset jqueri function allow smaller custom build builder certain part jqueri use exampl app use jsonp ajax need calcul offset posit element could exclud offset ajaxxhr modul modul may exclud except core selector exclud modul pass path rel src folder without js extens exampl modul exclud ajax ajax function ajax get post ajaxsetup load transport ajax event shorthand ajaxstart ajaxxhr xmlhttprequest ajax transport ajaxscript script ajax transport use retriev script ajaxjsonp jsonp ajax transport depend ajaxscript transport css css method also remov modul depend css includ effect dimens offset cssshowhid nonanim show hide toggl exclud use class explicit css call set display properti also remov effect modul deprec method document deprec yet remov dimens width height method includ inner outer variat effect anim method shorthand slideup hideslow event method event function also remov eventalia eventalia event attachingtrigg shorthand like click mouseov eventtrigg trigger triggerhandl method use alia modul offset offset posit offsetpar scrollleft scrolltop method wrap wrap wrapal wrapinn unwrap method corereadi exclud readi modul place script end bodi readi callback bound jqueri simpli call immedi howev jquerydocumentreadi function onreadi similar trigger defer exclud jquerydef also remov jquerycallback note modul depend jquerydeferredajax effect corereadi remov still expect jquerydef includ jquerydef implement exclud modul well grunt customdeferredajaxeffectscorereadi exportsglob exclud attach global jqueri variabl jqueri window exportsamd exclud amd definit build process show messag depend modul exclud includ amd name option set modul name jqueri amd definit default set jqueri play nice plugin thirdparti librari may case youd like chang simpli set amd option grunt custom amdcustomnam defin anonym set name empti string grunt custom amd custom build exampl creat custom build first check version git pull git checkout version version version want custom make sure node depend instal npm instal creat custom build use grunt custom option list modul exclud exclud ajax function grunt customajax exclud css remov modul depend css effect offset dimens grunt customcss exclud bunch modul grunt customajaxcssdeprecateddimensionseffectseventaliasoffsetwrap question request regard custom build pleas start thread develop jqueri core section forum due combinator custom natur build regularli test jqueri unit test process run unit test make sure necessari depend npm instal start grunt watch npm start autobuild jqueri work grunt watch run unit test local server support php ensur run site root directori test directori databas requir preconfigur php local server avail window mac option window wamp download mac mamp download linux set lamp mongoos platform build differ directori copi built jqueri file dist anoth directori grunt grunt distpathtospecialloc exampl output file would pathtospeciallocationjqueryj pathtospeciallocationjqueryminj add perman copi destin creat file dist call destinationjson insid file past custom follow absolutepathtootherdestin true addit method combin essenti git sourc code handl git version control system use know featur use clean want purg work directori back statu upstream follow command use rememb everyth youv work gone git reset hard upstreammast git clean fdx rebas featuretop branch alway use rebas flag git pull usual handl mani temporari github pull request branch run follow autom git config branchautosetuprebas local see man gitconfig inform handl merg conflict your get merg conflict merg instead edit conflict file manual use featur git mergetool even though default tool xxdiff look awfulold rather use follow command use ctrl alt automerg much possibl b jump next merg conflict chang order conflict line u undo merg left mous button mark block winner middl mous button mark line winner ctrl save ctrl q quit qunit refer test method expect numassert stop start note qunit eventu addit argument stopstart ignor test suit start stop pass callback without worri paramet test assert ok valu messag equal actual expect messag notequ actual expect messag deepequ actual expect messag notdeepequ actual expect messag strictequ actual expect messag notstrictequ actual expect messag throw block expect messag test suit conveni method refer see testdatatestinitj return array element given id q exampl qmain foo bar divmain spanfoo inputbar assert select match given id testnam selector array id exampl tcheck someth foo bar fire nativ dom event without go jqueri firen node eventtyp exampl firen jqueryelem click add random number url stop cach url someurl exampl urlindexhtml dataindexhtml urlmockphpfoobar datamockphpfoobar run test ifram test may requir document standard test fixtur run separ ifram actual test code assert remain jqueri main test file minim test fixtur markup setup code place ifram file testifram testnam filenam function testcallback assert jqueri window document &#9; addit arg &#9; load page construct url filenam data filenam ifram page determin callback occur test includ testdataiframetestj script call startiframetest addit arg appropri often either document readi windowonload fire testcallback receiv qunit assert object creat testifram test follow global jqueri window document ifram ifram code pass argument startiframetest follow document argument question question pleas feel free ask develop jqueri core forum jqueri ircfreenodenet,jquery new wave javascript contribution guide spirit open source software development jquery always encourages community code contribution help get started jump writing code sure read important contribution guideline thoroughly getting involved core style guide writing code jquery foundation project environment use jquery browser support jquery also support node browser extension nonbrowser environment need build jquery build jquery need latest nodejsnpm git later earlier version might work supported window download install git nodejs macos user install homebrew homebrew installed run brew install git install git brew install node install nodejs linuxbsd user use appropriate package manager install git nodejs build source swing way easypeasy build jquery clone copy main jquery git repo running git clone gitgithubcomjqueryjquerygit enter jquery directory run build script cd jquery npm run build built version jquery put dist subdirectory along minified copy associated map file want create custom build help jquery development would better install grunt command line interface global package npm install g gruntcli make sure grunt installed testing grunt v running grunt command jquery directory build full version jquery like npm run build command grunt many task available jquery core grunt help module special build created exclude subset jquery functionality allows smaller custom build builder certain part jquery used example app used jsonp ajax need calculate offset position element could exclude offset ajaxxhr module module may excluded except core selector exclude module pas path relative src folder without j extension example module excluded ajax ajax functionality ajax get post ajaxsetup load transport ajax event shorthand ajaxstart ajaxxhr xmlhttprequest ajax transport ajaxscript script ajax transport used retrieve script ajaxjsonp jsonp ajax transport depends ajaxscript transport cs cs method also remove module depending cs including effect dimension offset cssshowhide nonanimated show hide toggle excluded use class explicit cs call set display property also remove effect module deprecated method documented deprecated yet removed dimension width height method including inner outer variation effect animate method shorthand slideup hideslow event method event functionality also remove eventalias eventalias event attachingtriggering shorthand like click mouseover eventtrigger trigger triggerhandler method used alias module offset offset position offsetparent scrollleft scrolltop method wrap wrap wrapall wrapinner unwrap method coreready exclude ready module place script end body ready callback bound jquery simply called immediately however jquerydocumentready function onready similar triggered deferred exclude jquerydeferred also remove jquerycallbacks note module depend jquerydeferredajax effect coreready removed still expect jquerydeferred include jquerydeferred implementation exclude module well grunt customdeferredajaxeffectscoreready exportsglobal exclude attachment global jquery variable jquery window exportsamd exclude amd definition build process show message dependent module excludes includes amd name option set module name jquerys amd definition default set jquery play nicely plugins thirdparty library may case youd like change simply set amd option grunt custom amdcustomname define anonymously set name empty string grunt custom amd custom build example create custom build first check version git pull git checkout version version version want customize make sure node dependency installed npm install create custom build using grunt custom option listing module excluded exclude ajax functionality grunt customajax excluding cs remove module depending cs effect offset dimension grunt customcss exclude bunch module grunt customajaxcssdeprecateddimensionseffectseventaliasoffsetwrap question request regarding custom build please start thread developing jquery core section forum due combinatorics custom nature build regularly tested jquerys unit test process running unit test make sure necessary dependency npm install start grunt watch npm start autobuild jquery work grunt watch run unit test local server support php ensure run site root directory test directory database required preconfigured php local server available window mac option window wamp download mac mamp download linux setting lamp mongoose platform building different directory copy built jquery file dist another directory grunt grunt distpathtospeciallocation example output file would pathtospeciallocationjqueryjs pathtospeciallocationjqueryminjs add permanent copy destination create file dist called destinationjson inside file paste customize following absolutepathtootherdestination true additionally method combined essential git source code handled git version control system useful know feature used cleaning want purge working directory back status upstream following command used remember everything youve worked gone git reset hard upstreammaster git clean fdx rebasing featuretopic branch always use rebase flag git pull usually handling many temporary github pull request branch run following automate git config branchautosetuprebase local see man gitconfig information handling merge conflict youre getting merge conflict merging instead editing conflicted file manually use feature git mergetool even though default tool xxdiff look awfulold rather useful following command used ctrl alt automerge much possible b jump next merge conflict change order conflicted line u undo merge left mouse button mark block winner middle mouse button mark line winner ctrl save ctrl q quit qunit reference test method expect numassertions stop start note qunits eventual addition argument stopstart ignored test suite start stop passed callback without worrying parameter test assertion ok value message equal actual expected message notequal actual expected message deepequal actual expected message notdeepequal actual expected message strictequal actual expected message notstrictequal actual expected message throw block expected message test suite convenience method reference see testdatatestinitjs return array element given id q example qmain foo bar divmain spanfoo inputbar asserts selection match given id testname selector array id example tcheck something foo bar fire native dom event without going jquery firenative node eventtype example firenative jqueryelem click add random number url stop caching url someurl example urlindexhtml dataindexhtml urlmockphpfoobar datamockphpfoobar run test iframe test may require document standard test fixture run separate iframe actual test code assertion remain jquerys main test file minimal test fixture markup setup code placed iframe file testiframe testname filename function testcallback assert jquery window document &#9; additional args &#9; load page constructing url filename data filename iframed page determines callback occurs test including testdataiframetestjs script calling startiframetest additional args appropriate often either document ready windowonload fire testcallback receives qunit assert object created testiframe test followed global jquery window document iframe iframe code pass argument startiframetest follow document argument question question please feel free ask developing jquery core forum jquery ircfreenodenet
38,JavaScript,"GitHub - webpack/webpack: A bundler for javascript and friends. Packs many modules into a few bundled assets. Code Splitting allows for loading parts of the application on demand. Through ""loaders"", modules can be CommonJs, AMD, ES6 modules, CSS, Images, JSON, Coffeescript, LESS, ... and your custom stuff.","




































webpack

    webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.
  

Table of Contents

Install
Introduction
Concepts
Contributing
Support
Core Team
Sponsoring
Premium Partners
Other Backers and Sponsors
Gold Sponsors
Silver Sponsors
Bronze Sponsors
Backers
Special Thanks

Install
Install with npm:
npm install --save-dev webpack
Install with yarn:
yarn add webpack --dev
Introduction
webpack is a bundler for modules. The main purpose is to bundle JavaScript
files for usage in a browser, yet it is also capable of transforming, bundling,
or packaging just about any resource or asset.
TL;DR

Bundles ES Modules, CommonJS, and AMD modules (even combined).
Can create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time).
Dependencies are resolved during compilation, reducing the runtime size.
Loaders can preprocess files while compiling, e.g. TypeScript to JavaScript, Handlebars strings to compiled functions, images to Base64, etc.
Highly modular plugin system to do whatever else your application requires.

Get Started
Check out webpack's quick Get Started guide and the other guides.
Browser Compatibility
webpack supports all browsers that are ES5-compliant (IE8 and below are not supported).
webpack also needs Promise for import() and require.ensure(). If you want to support older browsers, you will need to load a polyfill before using these expressions.
Concepts
Plugins
webpack has a rich plugin
interface. Most of the features
within webpack itself use this plugin interface. This makes webpack very
flexible.



Name
Status
Install Size
Description




mini-css-extract-plugin


Extracts CSS into separate files. It creates a CSS file per JS file which contains CSS.


compression-webpack-plugin


Prepares compressed versions of assets to serve them with Content-Encoding


i18n-webpack-plugin


Adds i18n support to your bundles


html-webpack-plugin


Simplifies creation of HTML files (index.html) to serve your bundles


extract-text-webpack-plugin


Extract text from a bundle, or bundles, into a separate file



Loaders
webpack enables the use of loaders to preprocess files. This allows you to bundle
any static resource way beyond JavaScript. You can easily write your own
loaders using Node.js.
Loaders are activated by using loadername! prefixes in require() statements,
or are automatically applied via regex from your webpack configuration.
Files



Name
Status
Install Size
Description




raw-loader


Loads raw content of a file (utf-8)


val-loader


Executes code as module and considers exports as JS code


url-loader


Works like the file loader, but can return a Data Url if the file is smaller than a limit


file-loader


Emits the file into the output folder and returns the (relative) url



JSON



Name
Status
Install Size
Description







Loads a JSON file (included by default)





Loads and transpiles a JSON 5 file





Loads and transpiles a CSON file



Transpiling



Name
Status
Install Size
Description




<script>


Executes a JavaScript file once in global context (like in script tag), require()s are not parsed





Loads ES2015+ code and transpiles to ES5 using Babel





Loads ES2015+ code and transpiles to ES5 using Traceur





Loads TypeScript like JavaScript


awesome-typescript-loader


Awesome TypeScript loader for webpack





Loads CoffeeScript like JavaScript



Templating



Name
Status
Install Size
Description







Exports HTML as string, requires references to static resources





Loads Pug templates and returns a function





Compiles Markdown to HTML





Loads and transforms a HTML file using PostHTML





Compiles Handlebars to HTML



Styling



Name
Status
Install Size
Description




<style>


Add exports of a module as style to DOM





Loads CSS file with resolved imports and returns CSS code





Loads and compiles a LESS file





Loads and compiles a Sass/SCSS file





Loads and compiles a Stylus file





Loads and transforms a CSS/SSS file using PostCSS



Linting & Testing



Name
Status
Install Size
Description







Tests with mocha (Browser/NodeJS)





PreLoader for linting code using ESLint





PreLoader for linting code using JSHint



Frameworks



Name
Status
Install Size
Description







Loads and compiles Vue Components





Process HTML & CSS with preprocessor of choice and require() Web Components like first-class modules





Loads and compiles Angular 2 Components





Riot official webpack loader



Performance
webpack uses async I/O and has multiple caching levels. This makes webpack fast
and incredibly fast on incremental compilations.
Module Formats
webpack supports ES2015+, CommonJS and AMD modules out of the box. It performs clever static
analysis on the AST of your code. It even has an evaluation engine to evaluate
simple expressions. This allows you to support most existing libraries out of the box.
Code Splitting
webpack allows you to split your codebase into multiple chunks. Chunks are
loaded asynchronously at runtime. This reduces the initial loading time.
Optimizations
webpack can do many optimizations to reduce the output size of your
JavaScript by deduplicating frequently used modules, minifying, and giving
you full control of what is loaded initially and what is loaded at runtime
through code splitting. It can also make your code chunks cache
friendly by using hashes.
Contributing
We want contributing to webpack to be fun, enjoyable, and educational for anyone, and everyone. We have a vibrant ecosystem that spans beyond this single repo. We welcome you to check out any of the repositories in our organization or webpack-contrib organization which houses all of our loaders and plugins.
Contributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on webpack, we also are thrilled to receive a variety of other contributions including:

Documentation updates, enhancements, designs, or bugfixes
Spelling or grammar fixes
README.md corrections or redesigns
Adding unit, or functional tests
Triaging GitHub issues -- especially determining whether an issue still persists or is reproducible.
Searching #webpack on twitter and helping someone else who needs help
Teaching others how to contribute to one of the many webpack's repos!
Blogging, speaking about, or creating tutorials about one of webpack's many features.
Helping others in our webpack gitter channel.

If you are worried or don't know where to start, you can always reach out to Sean Larkin (@TheLarkInn) on Twitter or simply submit an issue and a maintainer can help give you guidance!
We have also started a series on our Medium Publication called The Contributor's Guide to webpack. We welcome you to read it and post any questions or responses if you still need help.
Looking to speak about webpack? We'd love to review your talk abstract/CFP! You can email it to webpack [at] opencollective [dot] com and we can give pointers or tips!!!
Creating your own plugins and loaders
If you create a loader or plugin, we would <3 for you to open source it, and put it on npm. We follow the x-loader, x-webpack-plugin naming convention.
Support
We consider webpack to be a low-level tool used not only individually but also layered beneath other awesome tools. Because of its flexibility, webpack isn't always the easiest entry-level solution, however we do believe it is the most powerful. That said, we're always looking for ways to improve and simplify the tool without compromising functionality. If you have any ideas on ways to accomplish this, we're all ears!
If you're just getting started, take a look at our new docs and concepts page. This has a high level overview that is great for beginners!!
Looking for webpack 1 docs? Please check out the old wiki, but note that this deprecated version is no longer supported.
If you want to discuss something or just need help, here is our Gitter room where there are always individuals looking to help out!
If you are still having difficulty, we would love for you to post
a question to StackOverflow with the webpack tag. It is much easier to answer questions that include your webpack.config.js and relevant files! So if you can provide them, we'd be extremely grateful (and more likely to help you find the answer!)
If you are twitter savvy you can tweet #webpack with your question and someone should be able to reach out and help also.
If you have discovered a üêú or have a feature suggestion, feel free to create an issue on Github.
License

Core Team






Tobias Koppers
Core

Founder of webpack




Johannes Ewald
Loaders & Plugins

Early adopter of webpack




Sean T. Larkin
Public Relations

Founder of the core team




Kees Kluskens
Development

Sponsor








Sponsoring
Most of the core team members, webpack contributors and contributors in the ecosystem do this open source work in their free time. If you use webpack for a serious task, and you'd like us to invest more time on it, please donate. This project increases your income/productivity too. It makes development and applications faster and it reduces the required bandwidth.
This is how we use the donations:

Allow the core team to work on webpack
Thank contributors if they invested a large amount of time in contributing
Support projects in the ecosystem that are of great value for users
Support projects that are voted most (work in progress)
Infrastructure cost
Fees for money handling

Premium Partners




Other Backers and Sponsors
Before we started using OpenCollective, donations were made anonymously. Now that we have made the switch, we would like to acknowledge these sponsors (and the ones who continue to donate using OpenCollective). If we've missed someone, please send us a PR, and we'll add you to this list.

Google Angular Team, Architects.io,



Gold Sponsors
Become a gold sponsor and get your logo on our README on Github with a link to your site.
































Silver Sponsors
Become a silver sponsor and get your logo on our README on Github with a link to your site.
































Bronze Sponsors
Become a bronze sponsor and get your logo on our README on Github with a link to your site.







































































































Backers
Become a backer and get your image on our README on Github with a link to your site.





































































































Special Thanks to
(In chronological order)

@google for Google Web Toolkit (GWT), which aims to compile Java to JavaScript. It features a similar Code Splitting as webpack.
@medikoo for modules-webmake, which is a similar project. webpack was born because I wanted Code Splitting for modules-webmake. Interestingly the Code Splitting issue is still open (thanks also to @Phoscur for the discussion).
@substack for browserify, which is a similar project and source for many ideas.
@jrburke for require.js, which is a similar project and source for many ideas.
@defunctzombie for the browser-field spec, which makes modules available for node.js, browserify and webpack.
Every early webpack user, which contributed to webpack by writing issues or PRs. You influenced the direction...
@shama, @jhnns and @sokra for maintaining this project
Everyone who has written a loader for webpack. You are the ecosystem...
Everyone I forgot to mention here, but also influenced webpack.

",webpack webpack module bundler main purpose bundle javascript files usage browser yet also capable transforming bundling packaging resource asset table contents install introduction concepts contributing support core team sponsoring premium partners backers sponsors gold sponsors silver sponsors bronze sponsors backers special thanks install install npm npm install savedev webpack install yarn yarn add webpack dev introduction webpack bundler modules main purpose bundle javascript files usage browser yet also capable transforming bundling packaging resource asset tldr bundles es modules commonjs amd modules even combined create single bundle multiple chunks asynchronously loaded runtime reduce initial loading time dependencies resolved compilation reducing runtime size loaders preprocess files compiling eg typescript javascript handlebars strings compiled functions images base etc highly modular plugin system whatever else application requires get started check webpacks quick get started guide guides browser compatibility webpack supports browsers escompliant ie supported webpack also needs promise import requireensure want support older browsers need load polyfill using expressions concepts plugins webpack rich plugin interface features within webpack use plugin interface makes webpack flexible name status install size description minicssextractplugin extracts css separate files creates css file per js file contains css compressionwebpackplugin prepares compressed versions assets serve contentencoding inwebpackplugin adds support bundles htmlwebpackplugin simplifies creation html files indexhtml serve bundles extracttextwebpackplugin extract text bundle bundles separate file loaders webpack enables use loaders preprocess files allows bundle static resource way beyond javascript easily write loaders using nodejs loaders activated using loadername prefixes require statements automatically applied via regex webpack configuration files name status install size description rawloader loads raw content file utf valloader executes code module considers exports js code urlloader works like file loader return data url file smaller limit fileloader emits file output folder returns relative url json name status install size description loads json file included default loads transpiles json file loads transpiles cson file transpiling name status install size description script executes javascript file global context like script tag requires parsed loads es code transpiles es using babel loads es code transpiles es using traceur loads typescript like javascript awesometypescriptloader awesome typescript loader webpack loads coffeescript like javascript templating name status install size description exports html string requires references static resources loads pug templates returns function compiles markdown html loads transforms html file using posthtml compiles handlebars html styling name status install size description style add exports module style dom loads css file resolved imports returns css code loads compiles less file loads compiles sassscss file loads compiles stylus file loads transforms csssss file using postcss linting testing name status install size description tests mocha browsernodejs preloader linting code using eslint preloader linting code using jshint frameworks name status install size description loads compiles vue components process html css preprocessor choice require web components like firstclass modules loads compiles angular components riot official webpack loader performance webpack uses async io multiple caching levels makes webpack fast incredibly fast incremental compilations module formats webpack supports es commonjs amd modules box performs clever static analysis ast code even evaluation engine evaluate simple expressions allows support existing libraries box code splitting webpack allows split codebase multiple chunks chunks loaded asynchronously runtime reduces initial loading time optimizations webpack many optimizations reduce output size javascript deduplicating frequently used modules minifying giving full control loaded initially loaded runtime code splitting also make code chunks cache friendly using hashes contributing want contributing webpack fun enjoyable educational anyone everyone vibrant ecosystem spans beyond single repo welcome check repositories organization webpackcontrib organization houses loaders plugins contributions go far beyond pull requests commits although love giving opportunity put stamp webpack also thrilled receive variety contributions including documentation updates enhancements designs bugfixes spelling grammar fixes readmemd corrections redesigns adding unit functional tests triaging github issues especially determining whether issue still persists reproducible searching webpack twitter helping someone else needs help teaching others contribute one many webpacks repos blogging speaking creating tutorials one webpacks many features helping others webpack gitter channel worried dont know start always reach sean larkin thelarkinn twitter simply submit issue maintainer help give guidance also started series medium publication called contributors guide webpack welcome read post questions responses still need help looking speak webpack wed love review talk abstractcfp email webpack opencollective dot com give pointers tips creating plugins loaders create loader plugin would open source put npm follow xloader xwebpackplugin naming convention support consider webpack lowlevel tool used individually also layered beneath awesome tools flexibility webpack isnt always easiest entrylevel solution however believe powerful said always looking ways improve simplify tool without compromising functionality ideas ways accomplish ears youre getting started take look new docs concepts page high level overview great beginners looking webpack docs please check old wiki note deprecated version longer supported want discuss something need help gitter room always individuals looking help still difficulty would love post question stackoverflow webpack tag much easier answer questions include webpackconfigjs relevant files provide wed extremely grateful likely help find answer twitter savvy tweet webpack question someone able reach help also discovered feature suggestion feel free create issue github license core team tobias koppers core founder webpack johannes ewald loaders plugins early adopter webpack sean larkin public relations founder core team kees kluskens development sponsor sponsoring core team members webpack contributors contributors ecosystem open source work free time use webpack serious task youd like us invest time please donate project increases incomeproductivity makes development applications faster reduces required bandwidth use donations allow core team work webpack thank contributors invested large amount time contributing support projects ecosystem great value users support projects voted work progress infrastructure cost fees money handling premium partners backers sponsors started using opencollective donations made anonymously made switch would like acknowledge sponsors ones continue donate using opencollective weve missed someone please send us pr well add list google angular team architectsio gold sponsors become gold sponsor get logo readme github link site silver sponsors become silver sponsor get logo readme github link site bronze sponsors become bronze sponsor get logo readme github link site backers become backer get image readme github link site special thanks chronological order google google web toolkit gwt aims compile java javascript features similar code splitting webpack medikoo moduleswebmake similar project webpack born wanted code splitting moduleswebmake interestingly code splitting issue still open thanks also phoscur discussion substack browserify similar project source many ideas jrburke requirejs similar project source many ideas defunctzombie browserfield spec makes modules available nodejs browserify webpack every early webpack user contributed webpack writing issues prs influenced direction shama jhnns sokra maintaining project everyone written loader webpack ecosystem everyone forgot mention also influenced webpack,webpack webpack modul bundler main purpos bundl javascript file usag browser yet also capabl transform bundl packag resourc asset tabl content instal introduct concept contribut support core team sponsor premium partner backer sponsor gold sponsor silver sponsor bronz sponsor backer special thank instal instal npm npm instal savedev webpack instal yarn yarn add webpack dev introduct webpack bundler modul main purpos bundl javascript file usag browser yet also capabl transform bundl packag resourc asset tldr bundl es modul commonj amd modul even combin creat singl bundl multipl chunk asynchron load runtim reduc initi load time depend resolv compil reduc runtim size loader preprocess file compil eg typescript javascript handlebar string compil function imag base etc highli modular plugin system whatev els applic requir get start check webpack quick get start guid guid browser compat webpack support browser escompli ie support webpack also need promis import requireensur want support older browser need load polyfil use express concept plugin webpack rich plugin interfac featur within webpack use plugin interfac make webpack flexibl name statu instal size descript minicssextractplugin extract css separ file creat css file per js file contain css compressionwebpackplugin prepar compress version asset serv contentencod inwebpackplugin add support bundl htmlwebpackplugin simplifi creation html file indexhtml serv bundl extracttextwebpackplugin extract text bundl bundl separ file loader webpack enabl use loader preprocess file allow bundl static resourc way beyond javascript easili write loader use nodej loader activ use loadernam prefix requir statement automat appli via regex webpack configur file name statu instal size descript rawload load raw content file utf valload execut code modul consid export js code urlload work like file loader return data url file smaller limit fileload emit file output folder return rel url json name statu instal size descript load json file includ default load transpil json file load transpil cson file transpil name statu instal size descript script execut javascript file global context like script tag requir pars load es code transpil es use babel load es code transpil es use traceur load typescript like javascript awesometypescriptload awesom typescript loader webpack load coffeescript like javascript templat name statu instal size descript export html string requir refer static resourc load pug templat return function compil markdown html load transform html file use posthtml compil handlebar html style name statu instal size descript style add export modul style dom load css file resolv import return css code load compil less file load compil sassscss file load compil stylu file load transform csssss file use postcss lint test name statu instal size descript test mocha browsernodej preload lint code use eslint preload lint code use jshint framework name statu instal size descript load compil vue compon process html css preprocessor choic requir web compon like firstclass modul load compil angular compon riot offici webpack loader perform webpack use async io multipl cach level make webpack fast incred fast increment compil modul format webpack support es commonj amd modul box perform clever static analysi ast code even evalu engin evalu simpl express allow support exist librari box code split webpack allow split codebas multipl chunk chunk load asynchron runtim reduc initi load time optim webpack mani optim reduc output size javascript dedupl frequent use modul minifi give full control load initi load runtim code split also make code chunk cach friendli use hash contribut want contribut webpack fun enjoy educ anyon everyon vibrant ecosystem span beyond singl repo welcom check repositori organ webpackcontrib organ hous loader plugin contribut go far beyond pull request commit although love give opportun put stamp webpack also thrill receiv varieti contribut includ document updat enhanc design bugfix spell grammar fix readmemd correct redesign ad unit function test triag github issu especi determin whether issu still persist reproduc search webpack twitter help someon els need help teach other contribut one mani webpack repo blog speak creat tutori one webpack mani featur help other webpack gitter channel worri dont know start alway reach sean larkin thelarkinn twitter simpli submit issu maintain help give guidanc also start seri medium public call contributor guid webpack welcom read post question respons still need help look speak webpack wed love review talk abstractcfp email webpack opencollect dot com give pointer tip creat plugin loader creat loader plugin would open sourc put npm follow xloader xwebpackplugin name convent support consid webpack lowlevel tool use individu also layer beneath awesom tool flexibl webpack isnt alway easiest entrylevel solut howev believ power said alway look way improv simplifi tool without compromis function idea way accomplish ear your get start take look new doc concept page high level overview great beginn look webpack doc pleas check old wiki note deprec version longer support want discuss someth need help gitter room alway individu look help still difficulti would love post question stackoverflow webpack tag much easier answer question includ webpackconfigj relev file provid wed extrem grate like help find answer twitter savvi tweet webpack question someon abl reach help also discov featur suggest feel free creat issu github licens core team tobia kopper core founder webpack johann ewald loader plugin earli adopt webpack sean larkin public relat founder core team kee klusken develop sponsor sponsor core team member webpack contributor contributor ecosystem open sourc work free time use webpack seriou task youd like us invest time pleas donat project increas incomeproduct make develop applic faster reduc requir bandwidth use donat allow core team work webpack thank contributor invest larg amount time contribut support project ecosystem great valu user support project vote work progress infrastructur cost fee money handl premium partner backer sponsor start use opencollect donat made anonym made switch would like acknowledg sponsor one continu donat use opencollect weve miss someon pleas send us pr well add list googl angular team architectsio gold sponsor becom gold sponsor get logo readm github link site silver sponsor becom silver sponsor get logo readm github link site bronz sponsor becom bronz sponsor get logo readm github link site backer becom backer get imag readm github link site special thank chronolog order googl googl web toolkit gwt aim compil java javascript featur similar code split webpack medikoo moduleswebmak similar project webpack born want code split moduleswebmak interestingli code split issu still open thank also phoscur discuss substack browserifi similar project sourc mani idea jrburk requirej similar project sourc mani idea defunctzombi browserfield spec make modul avail nodej browserifi webpack everi earli webpack user contribut webpack write issu pr influenc direct shama jhnn sokra maintain project everyon written loader webpack ecosystem everyon forgot mention also influenc webpack,webpack webpack module bundler main purpose bundle javascript file usage browser yet also capable transforming bundling packaging resource asset table content install introduction concept contributing support core team sponsoring premium partner backer sponsor gold sponsor silver sponsor bronze sponsor backer special thanks install install npm npm install savedev webpack install yarn yarn add webpack dev introduction webpack bundler module main purpose bundle javascript file usage browser yet also capable transforming bundling packaging resource asset tldr bundle e module commonjs amd module even combined create single bundle multiple chunk asynchronously loaded runtime reduce initial loading time dependency resolved compilation reducing runtime size loader preprocess file compiling eg typescript javascript handlebar string compiled function image base etc highly modular plugin system whatever else application requires get started check webpacks quick get started guide guide browser compatibility webpack support browser escompliant ie supported webpack also need promise import requireensure want support older browser need load polyfill using expression concept plugins webpack rich plugin interface feature within webpack use plugin interface make webpack flexible name status install size description minicssextractplugin extract cs separate file creates cs file per j file contains cs compressionwebpackplugin prepares compressed version asset serve contentencoding inwebpackplugin add support bundle htmlwebpackplugin simplifies creation html file indexhtml serve bundle extracttextwebpackplugin extract text bundle bundle separate file loader webpack enables use loader preprocess file allows bundle static resource way beyond javascript easily write loader using nodejs loader activated using loadername prefix require statement automatically applied via regex webpack configuration file name status install size description rawloader load raw content file utf valloader executes code module considers export j code urlloader work like file loader return data url file smaller limit fileloader emits file output folder return relative url json name status install size description load json file included default load transpiles json file load transpiles cson file transpiling name status install size description script executes javascript file global context like script tag requires parsed load e code transpiles e using babel load e code transpiles e using traceur load typescript like javascript awesometypescriptloader awesome typescript loader webpack load coffeescript like javascript templating name status install size description export html string requires reference static resource load pug template return function compiles markdown html load transforms html file using posthtml compiles handlebar html styling name status install size description style add export module style dom load cs file resolved import return cs code load compiles le file load compiles sassscss file load compiles stylus file load transforms cs file using postcss linting testing name status install size description test mocha browsernodejs preloader linting code using eslint preloader linting code using jshint framework name status install size description load compiles vue component process html cs preprocessor choice require web component like firstclass module load compiles angular component riot official webpack loader performance webpack us async io multiple caching level make webpack fast incredibly fast incremental compilation module format webpack support e commonjs amd module box performs clever static analysis ast code even evaluation engine evaluate simple expression allows support existing library box code splitting webpack allows split codebase multiple chunk chunk loaded asynchronously runtime reduces initial loading time optimization webpack many optimization reduce output size javascript deduplicating frequently used module minifying giving full control loaded initially loaded runtime code splitting also make code chunk cache friendly using hash contributing want contributing webpack fun enjoyable educational anyone everyone vibrant ecosystem span beyond single repo welcome check repository organization webpackcontrib organization house loader plugins contribution go far beyond pull request commits although love giving opportunity put stamp webpack also thrilled receive variety contribution including documentation update enhancement design bugfixes spelling grammar fix readmemd correction redesigns adding unit functional test triaging github issue especially determining whether issue still persists reproducible searching webpack twitter helping someone else need help teaching others contribute one many webpacks repos blogging speaking creating tutorial one webpacks many feature helping others webpack gitter channel worried dont know start always reach sean larkin thelarkinn twitter simply submit issue maintainer help give guidance also started series medium publication called contributor guide webpack welcome read post question response still need help looking speak webpack wed love review talk abstractcfp email webpack opencollective dot com give pointer tip creating plugins loader create loader plugin would open source put npm follow xloader xwebpackplugin naming convention support consider webpack lowlevel tool used individually also layered beneath awesome tool flexibility webpack isnt always easiest entrylevel solution however believe powerful said always looking way improve simplify tool without compromising functionality idea way accomplish ear youre getting started take look new doc concept page high level overview great beginner looking webpack doc please check old wiki note deprecated version longer supported want discus something need help gitter room always individual looking help still difficulty would love post question stackoverflow webpack tag much easier answer question include webpackconfigjs relevant file provide wed extremely grateful likely help find answer twitter savvy tweet webpack question someone able reach help also discovered feature suggestion feel free create issue github license core team tobias koppers core founder webpack johannes ewald loader plugins early adopter webpack sean larkin public relation founder core team kees kluskens development sponsor sponsoring core team member webpack contributor contributor ecosystem open source work free time use webpack serious task youd like u invest time please donate project increase incomeproductivity make development application faster reduces required bandwidth use donation allow core team work webpack thank contributor invested large amount time contributing support project ecosystem great value user support project voted work progress infrastructure cost fee money handling premium partner backer sponsor started using opencollective donation made anonymously made switch would like acknowledge sponsor one continue donate using opencollective weve missed someone please send u pr well add list google angular team architectsio gold sponsor become gold sponsor get logo readme github link site silver sponsor become silver sponsor get logo readme github link site bronze sponsor become bronze sponsor get logo readme github link site backer become backer get image readme github link site special thanks chronological order google google web toolkit gwt aim compile java javascript feature similar code splitting webpack medikoo moduleswebmake similar project webpack born wanted code splitting moduleswebmake interestingly code splitting issue still open thanks also phoscur discussion substack browserify similar project source many idea jrburke requirejs similar project source many idea defunctzombie browserfield spec make module available nodejs browserify webpack every early webpack user contributed webpack writing issue pr influenced direction shama jhnns sokra maintaining project everyone written loader webpack ecosystem everyone forgot mention also influenced webpack
39,JavaScript,GitHub - atom/atom: The hackable text editor,"Atom



Atom is a hackable text editor for the 21st century, built on Electron, and based on everything we love about our favorite editors. We designed it to be deeply customizable, but still approachable using the default configuration.


Visit atom.io to learn more or visit the Atom forum.
Follow @AtomEditor on Twitter for important
announcements.
This project adheres to the Contributor Covenant code of conduct.
By participating, you are expected to uphold this code. Please report unacceptable behavior to atom@github.com.
Documentation
If you want to read about using Atom or developing packages in Atom, the Atom Flight Manual is free and available online. You can find the source to the manual in atom/flight-manual.atom.io.
The API reference for developing packages is also documented on Atom.io.
Installing
Prerequisites

Git

macOS
Download the latest Atom release.
Atom will automatically update when a new release is available.
Windows
Download the latest Atom installer. AtomSetup.exe is 32-bit. For 64-bit systems, download AtomSetup-x64.exe.
Atom will automatically update when a new release is available.
You can also download atom-windows.zip (32-bit) or atom-x64-windows.zip (64-bit) from the releases page.
The .zip version will not automatically update.
Using Chocolatey? Run cinst Atom to install the latest version of Atom.
Linux
Atom is only available for 64-bit Linux systems.
Configure your distribution's package manager to install and update Atom by following the Linux installation instructions in the Flight Manual.  You will also find instructions on how to install Atom's official Linux packages without using a package repository, though you will not get automatic updates after installing Atom this way.
Archive extraction
An archive is available for people who don't want to install atom as root.
This version enables you to install multiple Atom versions in parallel. It has been built on Ubuntu 64-bit,
but should be compatible with other Linux distributions.

Install dependencies (on Ubuntu): sudo apt install git gconf2 gconf-service libgtk2.0-0 libudev1 libgcrypt20 libnotify4 libxtst6 libnss3 python gvfs-bin xdg-utils libcap2
Download atom-amd64.tar.gz from the Atom releases page.
Run tar xf atom-amd64.tar.gz in the directory where you want to extract the Atom folder.
Launch Atom using the installed atom command from the newly extracted directory.

The Linux version does not currently automatically update so you will need to
repeat these steps to upgrade to future releases.
Building

Linux
macOS
Windows

Discussion

Discuss Atom on our forums
Chat about Atom on our Slack team -- instructions for joining

License
MIT
When using the Atom or other GitHub logos, be sure to follow the GitHub logo guidelines.
",atom atom hackable text editor st century built electron based everything love favorite editors designed deeply customizable still approachable using default configuration visit atomio learn visit atom forum follow atomeditor twitter important announcements project adheres contributor covenant code conduct participating expected uphold code please report unacceptable behavior atomgithubcom documentation want read using atom developing packages atom atom flight manual free available online find source manual atomflightmanualatomio api reference developing packages also documented atomio installing prerequisites git macos download latest atom release atom automatically update new release available windows download latest atom installer atomsetupexe bit bit systems download atomsetupxexe atom automatically update new release available also download atomwindowszip bit atomxwindowszip bit releases page zip version automatically update using chocolatey run cinst atom install latest version atom linux atom available bit linux systems configure distributions package manager install update atom following linux installation instructions flight manual also find instructions install atoms official linux packages without using package repository though get automatic updates installing atom way archive extraction archive available people dont want install atom root version enables install multiple atom versions parallel built ubuntu bit compatible linux distributions install dependencies ubuntu sudo apt install git gconf gconfservice libgtk libudev libgcrypt libnotify libxtst libnss python gvfsbin xdgutils libcap download atomamdtargz atom releases page run tar xf atomamdtargz directory want extract atom folder launch atom using installed atom command newly extracted directory linux version currently automatically update need repeat steps upgrade future releases building linux macos windows discussion discuss atom forums chat atom slack team instructions joining license mit using atom github logos sure follow github logo guidelines,atom atom hackabl text editor st centuri built electron base everyth love favorit editor design deepli customiz still approach use default configur visit atomio learn visit atom forum follow atomeditor twitter import announc project adher contributor coven code conduct particip expect uphold code pleas report unaccept behavior atomgithubcom document want read use atom develop packag atom atom flight manual free avail onlin find sourc manual atomflightmanualatomio api refer develop packag also document atomio instal prerequisit git maco download latest atom releas atom automat updat new releas avail window download latest atom instal atomsetupex bit bit system download atomsetupxex atom automat updat new releas avail also download atomwindowszip bit atomxwindowszip bit releas page zip version automat updat use chocolatey run cinst atom instal latest version atom linux atom avail bit linux system configur distribut packag manag instal updat atom follow linux instal instruct flight manual also find instruct instal atom offici linux packag without use packag repositori though get automat updat instal atom way archiv extract archiv avail peopl dont want instal atom root version enabl instal multipl atom version parallel built ubuntu bit compat linux distribut instal depend ubuntu sudo apt instal git gconf gconfservic libgtk libudev libgcrypt libnotifi libxtst libnss python gvfsbin xdgutil libcap download atomamdtargz atom releas page run tar xf atomamdtargz directori want extract atom folder launch atom use instal atom command newli extract directori linux version current automat updat need repeat step upgrad futur releas build linux maco window discuss discuss atom forum chat atom slack team instruct join licens mit use atom github logo sure follow github logo guidelin,atom atom hackable text editor st century built electron based everything love favorite editor designed deeply customizable still approachable using default configuration visit atomio learn visit atom forum follow atomeditor twitter important announcement project adheres contributor covenant code conduct participating expected uphold code please report unacceptable behavior atomgithubcom documentation want read using atom developing package atom atom flight manual free available online find source manual atomflightmanualatomio api reference developing package also documented atomio installing prerequisite git macos download latest atom release atom automatically update new release available window download latest atom installer atomsetupexe bit bit system download atomsetupxexe atom automatically update new release available also download atomwindowszip bit atomxwindowszip bit release page zip version automatically update using chocolatey run cinst atom install latest version atom linux atom available bit linux system configure distribution package manager install update atom following linux installation instruction flight manual also find instruction install atom official linux package without using package repository though get automatic update installing atom way archive extraction archive available people dont want install atom root version enables install multiple atom version parallel built ubuntu bit compatible linux distribution install dependency ubuntu sudo apt install git gconf gconfservice libgtk libudev libgcrypt libnotify libxtst libnss python gvfsbin xdgutils libcap download atomamdtargz atom release page run tar xf atomamdtargz directory want extract atom folder launch atom using installed atom command newly extracted directory linux version currently automatically update need repeat step upgrade future release building linux macos window discussion discus atom forum chat atom slack team instruction joining license mit using atom github logo sure follow github logo guideline
40,PHP,GitHub - laravel/laravel: A PHP framework for web artisans,"






About Laravel
Laravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:

Simple, fast routing engine.
Powerful dependency injection container.
Multiple back-ends for session and cache storage.
Expressive, intuitive database ORM.
Database agnostic schema migrations.
Robust background job processing.
Real-time event broadcasting.

Laravel is accessible, powerful, and provides tools required for large, robust applications.
Learning Laravel
Laravel has the most extensive and thorough documentation and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.
If you don't feel like reading, Laracasts can help. Laracasts contains over 1500 video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.
Laravel Sponsors
We would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the Laravel Patreon page.

Vehikl
Tighten Co.
Kirschbaum Development Group
64 Robots
Cubet Techno Labs
Cyber-Duck
British Software Development
Webdock, Fast VPS Hosting
DevSquad
UserInsights
Fragrantica
SOFTonSOFA
User10
Soumettre.fr
CodeBrisk
1Forge
TECPRESSO
Runtime Converter
WebL'Agence
Invoice Ninja
iMi digital
Earthlink
Steadfast Collective
We Are The Robots Inc.
Understand.io
Abdel Elrafa
Hyper Host
Appoly
OP.GG

Contributing
Thank you for considering contributing to the Laravel framework! The contribution guide can be found in the Laravel documentation.
Code of Conduct
In order to ensure that the Laravel community is welcoming to all, please review and abide by the Code of Conduct.
Security Vulnerabilities
If you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via taylor@laravel.com. All security vulnerabilities will be promptly addressed.
License
The Laravel framework is open-sourced software licensed under the MIT license.
",laravel laravel web application framework expressive elegant syntax believe development must enjoyable creative experience truly fulfilling laravel takes pain development easing common tasks used many web projects simple fast routing engine powerful dependency injection container multiple backends session cache storage expressive intuitive database orm database agnostic schema migrations robust background job processing realtime event broadcasting laravel accessible powerful provides tools required large robust applications learning laravel laravel extensive thorough documentation video tutorial library modern web application frameworks making breeze get started framework dont feel like reading laracasts help laracasts contains video tutorials range topics including laravel modern php unit testing javascript boost skills digging comprehensive video library laravel sponsors would like extend thanks following sponsors funding laravel development interested becoming sponsor please visit laravel patreon page vehikl tighten co kirschbaum development group robots cubet techno labs cyberduck british software development webdock fast vps hosting devsquad userinsights fragrantica softonsofa user soumettrefr codebrisk forge tecpresso runtime converter weblagence invoice ninja imi digital earthlink steadfast collective robots inc understandio abdel elrafa hyper host appoly opgg contributing thank considering contributing laravel framework contribution guide found laravel documentation code conduct order ensure laravel community welcoming please review abide code conduct security vulnerabilities discover security vulnerability within laravel please send email taylor otwell via taylorlaravelcom security vulnerabilities promptly addressed license laravel framework opensourced software licensed mit license,laravel laravel web applic framework express eleg syntax believ develop must enjoy creativ experi truli fulfil laravel take pain develop eas common task use mani web project simpl fast rout engin power depend inject contain multipl backend session cach storag express intuit databas orm databas agnost schema migrat robust background job process realtim event broadcast laravel access power provid tool requir larg robust applic learn laravel laravel extens thorough document video tutori librari modern web applic framework make breez get start framework dont feel like read laracast help laracast contain video tutori rang topic includ laravel modern php unit test javascript boost skill dig comprehens video librari laravel sponsor would like extend thank follow sponsor fund laravel develop interest becom sponsor pleas visit laravel patreon page vehikl tighten co kirschbaum develop group robot cubet techno lab cyberduck british softwar develop webdock fast vp host devsquad userinsight fragrantica softonsofa user soumettrefr codebrisk forg tecpresso runtim convert weblag invoic ninja imi digit earthlink steadfast collect robot inc understandio abdel elrafa hyper host appoli opgg contribut thank consid contribut laravel framework contribut guid found laravel document code conduct order ensur laravel commun welcom pleas review abid code conduct secur vulner discov secur vulner within laravel pleas send email taylor otwel via taylorlaravelcom secur vulner promptli address licens laravel framework opensourc softwar licens mit licens,laravel laravel web application framework expressive elegant syntax believe development must enjoyable creative experience truly fulfilling laravel take pain development easing common task used many web project simple fast routing engine powerful dependency injection container multiple backends session cache storage expressive intuitive database orm database agnostic schema migration robust background job processing realtime event broadcasting laravel accessible powerful provides tool required large robust application learning laravel laravel extensive thorough documentation video tutorial library modern web application framework making breeze get started framework dont feel like reading laracasts help laracasts contains video tutorial range topic including laravel modern php unit testing javascript boost skill digging comprehensive video library laravel sponsor would like extend thanks following sponsor funding laravel development interested becoming sponsor please visit laravel patreon page vehikl tighten co kirschbaum development group robot cubet techno lab cyberduck british software development webdock fast vps hosting devsquad userinsights fragrantica softonsofa user soumettrefr codebrisk forge tecpresso runtime converter weblagence invoice ninja imi digital earthlink steadfast collective robot inc understandio abdel elrafa hyper host appoly opgg contributing thank considering contributing laravel framework contribution guide found laravel documentation code conduct order ensure laravel community welcoming please review abide code conduct security vulnerability discover security vulnerability within laravel please send email taylor otwell via taylorlaravelcom security vulnerability promptly addressed license laravel framework opensourced software licensed mit license
41,PHP,"GitHub - blueimp/jQuery-File-Upload: File Upload widget with multiple file selection, drag&drop support, progress bar, validation and preview images, audio and video for jQuery. Supports cross-domain, chunked and resumable file uploads. Works with any server-side platform (Google App Engine, PHP, Python, Ruby on Rails, Java, etc.) that supports standard HTML form file uploads.","jQuery File Upload
Contents

Description
Demo
Features
Security
Setup
Requirements

Mandatory requirements
Optional requirements
Cross-domain requirements


Browsers

Desktop browsers
Mobile browsers
Extended browser support information


Testing
Support
License

Description

File Upload widget with multiple file selection, drag&drop support,
progress bars, validation and preview images, audio and video for jQuery.
Supports cross-domain, chunked and resumable file uploads and client-side
image resizing.
Works with any server-side platform (PHP, Python, Ruby on Rails, Java,
Node.js, Go etc.) that supports standard HTML form file uploads.

Demo
Demo File Upload
Features

Multiple file upload:
Allows to select multiple files at once and upload them simultaneously.
Drag & Drop support:
Allows to upload files by dragging them from your desktop or file manager and
dropping them on your browser window.
Upload progress bar:
Shows a progress bar indicating the upload progress for individual files and
for all uploads combined.
Cancelable uploads:
Individual file uploads can be canceled to stop the upload progress.
Resumable uploads:
Aborted uploads can be resumed with browsers supporting the Blob API.
Chunked uploads:
Large files can be uploaded in smaller chunks with browsers supporting the
Blob API.
Client-side image resizing:
Images can be automatically resized on client-side with browsers supporting
the required JS APIs.
Preview images, audio and video:
A preview of image, audio and video files can be displayed before uploading
with browsers supporting the required APIs.
No browser plugins (e.g. Adobe Flash) required:
The implementation is based on open standards like HTML5 and JavaScript and
requires no additional browser plugins.
Graceful fallback for legacy browsers:
Uploads files via XMLHttpRequests if supported and uses iframes as fallback
for legacy browsers.
HTML file upload form fallback:
Allows progressive enhancement by using a standard HTML file upload form as
widget element.
Cross-site file uploads:
Supports uploading files to a different domain with cross-site XMLHttpRequests
or iframe redirects.
Multiple plugin instances:
Allows to use multiple plugin instances on the same webpage.
Customizable and extensible:
Provides an API to set individual options and define callback methods for
various upload events.
Multipart and file contents stream uploads:
Files can be uploaded as standard ""multipart/form-data"" or file contents
stream (HTTP PUT file upload).
Compatible with any server-side application platform:
Works with any server-side platform (PHP, Python, Ruby on Rails, Java,
Node.js, Go etc.) that supports standard HTML form file uploads.

Security
‚ö†Ô∏è Please read the VULNERABILITIES document for a list of
fixed vulnerabilities
Please also read the SECURITY document for instructions on how to
securely configure your Webserver for file uploads.
Setup
jQuery File Upload can be installed via NPM:
npm install blueimp-file-upload
This allows you to include jquery.fileupload.js and
its extensions via node_modules, e.g:
<script src=""node_modules/blueimp-file-upload/js/jquery.fileupload.js""></script>
The widget can then be initialized on a file upload form the following way:
$('#fileupload').fileupload();
For further information, please refer to the following guides:

Main documentation page
List of all available Options
The plugin API
How to setup the plugin on your website
How to use only the basic plugin.

Requirements
Mandatory requirements

jQuery v1.6+
jQuery UI widget factory v1.9+
(included): Required for the basic File Upload plugin, but very lightweight
without any other dependencies from the jQuery UI suite.
jQuery Iframe Transport plugin
(included): Required for
browsers without XHR file upload support.

Optional requirements

JavaScript Templates engine
v3+: Used to render the selected and uploaded files for the Basic Plus UI and
jQuery UI versions.
JavaScript Load Image library
v2+: Required for the image previews and resizing functionality.
JavaScript Canvas to Blob polyfill
v3+:Required for the image previews and resizing functionality.
blueimp Gallery v2+: Used to display the
uploaded images in a lightbox.
Bootstrap v3+: Used for the demo design.
Glyphicons Icon set used by Bootstrap.

Cross-domain requirements
Cross-domain File Uploads
using the
Iframe Transport plugin
require a redirect back to the origin server to retrieve the upload results. The
example implementation
makes use of
result.html
as a static redirect page for the origin server.
The repository also includes the
jQuery XDomainRequest Transport plugin,
which enables limited cross-domain AJAX requests in Microsoft Internet Explorer
8 and 9 (IE 10 supports cross-domain XHR requests).
The XDomainRequest object allows GET and POST requests only and doesn't support
file uploads. It is used on the
Demo to delete uploaded files
from the cross-domain demo file upload service.
Browsers
Desktop browsers
The File Upload plugin is regularly tested with the latest browser versions and
supports the following minimal versions:

Google Chrome
Apple Safari 4.0+
Mozilla Firefox 3.0+
Opera 11.0+
Microsoft Internet Explorer 6.0+

Mobile browsers
The File Upload plugin has been tested with and supports the following mobile
browsers:

Apple Safari on iOS 6.0+
Google Chrome on iOS 6.0+
Google Chrome on Android 4.0+
Default Browser on Android 2.3+
Opera Mobile 12.0+

Extended browser support information
For a detailed overview of the features supported by each browser version and
known operating system / browser bugs, please have a look at the
Extended browser support information.
Testing
The project comes with three sets of tests:

Code linting using ESLint.
Unit tests using Mocha.
End-to-end tests using blueimp/wdio.

To run the tests, follow these steps:

Start Docker.
Install development dependencies:
npm install

Run the tests:
npm test


Support
This project is actively maintained, but there is no official support channel.
If you have a question that another developer might help you with, please post
to
Stack Overflow
and tag your question with blueimp jquery file upload.
License
Released under the MIT license.
",jquery file upload contents description demo features security setup requirements mandatory requirements optional requirements crossdomain requirements browsers desktop browsers mobile browsers extended browser support information testing support license description file upload widget multiple file selection dragdrop support progress bars validation preview images audio video jquery supports crossdomain chunked resumable file uploads clientside image resizing works serverside platform php python ruby rails java nodejs go etc supports standard html form file uploads demo demo file upload features multiple file upload allows select multiple files upload simultaneously drag drop support allows upload files dragging desktop file manager dropping browser window upload progress bar shows progress bar indicating upload progress individual files uploads combined cancelable uploads individual file uploads canceled stop upload progress resumable uploads aborted uploads resumed browsers supporting blob api chunked uploads large files uploaded smaller chunks browsers supporting blob api clientside image resizing images automatically resized clientside browsers supporting required js apis preview images audio video preview image audio video files displayed uploading browsers supporting required apis browser plugins eg adobe flash required implementation based open standards like html javascript requires additional browser plugins graceful fallback legacy browsers uploads files via xmlhttprequests supported uses iframes fallback legacy browsers html file upload form fallback allows progressive enhancement using standard html file upload form widget element crosssite file uploads supports uploading files different domain crosssite xmlhttprequests iframe redirects multiple plugin instances allows use multiple plugin instances webpage customizable extensible provides api set individual options define callback methods various upload events multipart file contents stream uploads files uploaded standard multipartformdata file contents stream http put file upload compatible serverside application platform works serverside platform php python ruby rails java nodejs go etc supports standard html form file uploads security please read vulnerabilities document list fixed vulnerabilities please also read security document instructions securely configure webserver file uploads setup jquery file upload installed via npm npm install blueimpfileupload allows include jqueryfileuploadjs extensions via nodemodules eg script srcnodemodulesblueimpfileuploadjsjqueryfileuploadjsscript widget initialized file upload form following way fileuploadfileupload information please refer following guides main documentation page list available options plugin api setup plugin website use basic plugin requirements mandatory requirements jquery v jquery ui widget factory v included required basic file upload plugin lightweight without dependencies jquery ui suite jquery iframe transport plugin included required browsers without xhr file upload support optional requirements javascript templates engine v used render selected uploaded files basic plus ui jquery ui versions javascript load image library v required image previews resizing functionality javascript canvas blob polyfill vrequired image previews resizing functionality blueimp gallery v used display uploaded images lightbox bootstrap v used demo design glyphicons icon set used bootstrap crossdomain requirements crossdomain file uploads using iframe transport plugin require redirect back origin server retrieve upload results example implementation makes use resulthtml static redirect page origin server repository also includes jquery xdomainrequest transport plugin enables limited crossdomain ajax requests microsoft internet explorer ie supports crossdomain xhr requests xdomainrequest object allows get post requests doesnt support file uploads used demo delete uploaded files crossdomain demo file upload service browsers desktop browsers file upload plugin regularly tested latest browser versions supports following minimal versions google chrome apple safari mozilla firefox opera microsoft internet explorer mobile browsers file upload plugin tested supports following mobile browsers apple safari ios google chrome ios google chrome android default browser android opera mobile extended browser support information detailed overview features supported browser version known operating system browser bugs please look extended browser support information testing project comes three sets tests code linting using eslint unit tests using mocha endtoend tests using blueimpwdio run tests follow steps start docker install development dependencies npm install run tests npm test support project actively maintained official support channel question another developer might help please post stack overflow tag question blueimp jquery file upload license released mit license,jqueri file upload content descript demo featur secur setup requir mandatori requir option requir crossdomain requir browser desktop browser mobil browser extend browser support inform test support licens descript file upload widget multipl file select dragdrop support progress bar valid preview imag audio video jqueri support crossdomain chunk resum file upload clientsid imag resiz work serversid platform php python rubi rail java nodej go etc support standard html form file upload demo demo file upload featur multipl file upload allow select multipl file upload simultan drag drop support allow upload file drag desktop file manag drop browser window upload progress bar show progress bar indic upload progress individu file upload combin cancel upload individu file upload cancel stop upload progress resum upload abort upload resum browser support blob api chunk upload larg file upload smaller chunk browser support blob api clientsid imag resiz imag automat resiz clientsid browser support requir js api preview imag audio video preview imag audio video file display upload browser support requir api browser plugin eg adob flash requir implement base open standard like html javascript requir addit browser plugin grace fallback legaci browser upload file via xmlhttprequest support use ifram fallback legaci browser html file upload form fallback allow progress enhanc use standard html file upload form widget element crosssit file upload support upload file differ domain crosssit xmlhttprequest ifram redirect multipl plugin instanc allow use multipl plugin instanc webpag customiz extens provid api set individu option defin callback method variou upload event multipart file content stream upload file upload standard multipartformdata file content stream http put file upload compat serversid applic platform work serversid platform php python rubi rail java nodej go etc support standard html form file upload secur pleas read vulner document list fix vulner pleas also read secur document instruct secur configur webserv file upload setup jqueri file upload instal via npm npm instal blueimpfileupload allow includ jqueryfileuploadj extens via nodemodul eg script srcnodemodulesblueimpfileuploadjsjqueryfileuploadjsscript widget initi file upload form follow way fileuploadfileupload inform pleas refer follow guid main document page list avail option plugin api setup plugin websit use basic plugin requir mandatori requir jqueri v jqueri ui widget factori v includ requir basic file upload plugin lightweight without depend jqueri ui suit jqueri ifram transport plugin includ requir browser without xhr file upload support option requir javascript templat engin v use render select upload file basic plu ui jqueri ui version javascript load imag librari v requir imag preview resiz function javascript canva blob polyfil vrequir imag preview resiz function blueimp galleri v use display upload imag lightbox bootstrap v use demo design glyphicon icon set use bootstrap crossdomain requir crossdomain file upload use ifram transport plugin requir redirect back origin server retriev upload result exampl implement make use resulthtml static redirect page origin server repositori also includ jqueri xdomainrequest transport plugin enabl limit crossdomain ajax request microsoft internet explor ie support crossdomain xhr request xdomainrequest object allow get post request doesnt support file upload use demo delet upload file crossdomain demo file upload servic browser desktop browser file upload plugin regularli test latest browser version support follow minim version googl chrome appl safari mozilla firefox opera microsoft internet explor mobil browser file upload plugin test support follow mobil browser appl safari io googl chrome io googl chrome android default browser android opera mobil extend browser support inform detail overview featur support browser version known oper system browser bug pleas look extend browser support inform test project come three set test code lint use eslint unit test use mocha endtoend test use blueimpwdio run test follow step start docker instal develop depend npm instal run test npm test support project activ maintain offici support channel question anoth develop might help pleas post stack overflow tag question blueimp jqueri file upload licens releas mit licens,jquery file upload content description demo feature security setup requirement mandatory requirement optional requirement crossdomain requirement browser desktop browser mobile browser extended browser support information testing support license description file upload widget multiple file selection dragdrop support progress bar validation preview image audio video jquery support crossdomain chunked resumable file uploads clientside image resizing work serverside platform php python ruby rail java nodejs go etc support standard html form file uploads demo demo file upload feature multiple file upload allows select multiple file upload simultaneously drag drop support allows upload file dragging desktop file manager dropping browser window upload progress bar show progress bar indicating upload progress individual file uploads combined cancelable uploads individual file uploads canceled stop upload progress resumable uploads aborted uploads resumed browser supporting blob api chunked uploads large file uploaded smaller chunk browser supporting blob api clientside image resizing image automatically resized clientside browser supporting required j apis preview image audio video preview image audio video file displayed uploading browser supporting required apis browser plugins eg adobe flash required implementation based open standard like html javascript requires additional browser plugins graceful fallback legacy browser uploads file via xmlhttprequests supported us iframes fallback legacy browser html file upload form fallback allows progressive enhancement using standard html file upload form widget element crosssite file uploads support uploading file different domain crosssite xmlhttprequests iframe redirects multiple plugin instance allows use multiple plugin instance webpage customizable extensible provides api set individual option define callback method various upload event multipart file content stream uploads file uploaded standard multipartformdata file content stream http put file upload compatible serverside application platform work serverside platform php python ruby rail java nodejs go etc support standard html form file uploads security please read vulnerability document list fixed vulnerability please also read security document instruction securely configure webserver file uploads setup jquery file upload installed via npm npm install blueimpfileupload allows include jqueryfileuploadjs extension via nodemodules eg script srcnodemodulesblueimpfileuploadjsjqueryfileuploadjsscript widget initialized file upload form following way fileuploadfileupload information please refer following guide main documentation page list available option plugin api setup plugin website use basic plugin requirement mandatory requirement jquery v jquery ui widget factory v included required basic file upload plugin lightweight without dependency jquery ui suite jquery iframe transport plugin included required browser without xhr file upload support optional requirement javascript template engine v used render selected uploaded file basic plus ui jquery ui version javascript load image library v required image preview resizing functionality javascript canvas blob polyfill vrequired image preview resizing functionality blueimp gallery v used display uploaded image lightbox bootstrap v used demo design glyphicons icon set used bootstrap crossdomain requirement crossdomain file uploads using iframe transport plugin require redirect back origin server retrieve upload result example implementation make use resulthtml static redirect page origin server repository also includes jquery xdomainrequest transport plugin enables limited crossdomain ajax request microsoft internet explorer ie support crossdomain xhr request xdomainrequest object allows get post request doesnt support file uploads used demo delete uploaded file crossdomain demo file upload service browser desktop browser file upload plugin regularly tested latest browser version support following minimal version google chrome apple safari mozilla firefox opera microsoft internet explorer mobile browser file upload plugin tested support following mobile browser apple safari io google chrome io google chrome android default browser android opera mobile extended browser support information detailed overview feature supported browser version known operating system browser bug please look extended browser support information testing project come three set test code linting using eslint unit test using mocha endtoend test using blueimpwdio run test follow step start docker install development dependency npm install run test npm test support project actively maintained official support channel question another developer might help please post stack overflow tag question blueimp jquery file upload license released mit license
42,PHP,GitHub - fzaninotto/Faker: Faker is a PHP library that generates fake data for you,"Faker

Faker is a PHP library that generates fake data for you. Whether you need to bootstrap your database, create good-looking XML documents, fill-in your persistence to stress test it, or anonymize data taken from a production service, Faker is for you.
Faker is heavily inspired by Perl's Data::Faker, and by ruby's Faker.
Faker requires PHP >= 5.3.3.
  
Table of Contents

Installation
Basic Usage
Formatters

Base
Lorem Ipsum Text
Person
Address
Phone Number
Company
Real Text
Date and Time
Internet
User Agent
Payment
Color
File
Image
Uuid
Barcode
Miscellaneous
Biased
Html Lorem


Modifiers
Localization
Populating Entities Using an ORM or an ODM
Seeding the Generator
Faker Internals: Understanding Providers
Real Life Usage
Language specific formatters
Third-Party Libraries Extending/Based On Faker
License

Installation
composer require fzaninotto/faker
Basic Usage
Autoloading
Faker supports both PSR-0 as PSR-4 autoloaders.
<?php
# When installed via composer
require_once 'vendor/autoload.php';
You can also load Fakers shipped PSR-0 autoloader
<?php
# Load Fakers own autoloader
require_once '/path/to/Faker/src/autoload.php';
alternatively, you can use any another PSR-4 compliant autoloader
Create fake data
Use Faker\Factory::create() to create and initialize a faker generator, which can generate data by accessing properties named after the type of data you want.
<?php
// use the factory to create a Faker\Generator instance
$faker = Faker\Factory::create();

// generate data by accessing properties
echo $faker->name;
  // 'Lucy Cechtelar';
echo $faker->address;
  // ""426 Jordy Lodge
  // Cartwrightshire, SC 88120-6700""
echo $faker->text;
  // Dolores sit sint laboriosam dolorem culpa et autem. Beatae nam sunt fugit
  // et sit et mollitia sed.
  // Fuga deserunt tempora facere magni omnis. Omnis quia temporibus laudantium
  // sit minima sint.
Even if this example shows a property access, each call to $faker->name yields a different (random) result. This is because Faker uses __get() magic, and forwards Faker\Generator->$property calls to Faker\Generator->format($property).
<?php
for ($i = 0; $i < 10; $i++) {
  echo $faker->name, ""\n"";
}
  // Adaline Reichel
  // Dr. Santa Prosacco DVM
  // Noemy Vandervort V
  // Lexi O'Conner
  // Gracie Weber
  // Roscoe Johns
  // Emmett Lebsack
  // Keegan Thiel
  // Wellington Koelpin II
  // Ms. Karley Kiehn V
Tip: For a quick generation of fake data, you can also use Faker as a command line tool thanks to faker-cli.
Formatters
Each of the generator properties (like name, address, and lorem) are called ""formatters"". A faker generator has many of them, packaged in ""providers"". Here is a list of the bundled formatters in the default locale.
Faker\Provider\Base
randomDigit             // 7
randomDigitNot(5)       // 0, 1, 2, 3, 4, 6, 7, 8, or 9
randomDigitNotNull      // 5
randomNumber($nbDigits = NULL, $strict = false) // 79907610
randomFloat($nbMaxDecimals = NULL, $min = 0, $max = NULL) // 48.8932
numberBetween($min = 1000, $max = 9000) // 8567
randomLetter            // 'b'
// returns randomly ordered subsequence of a provided array
randomElements($array = array ('a','b','c'), $count = 1) // array('c')
randomElement($array = array ('a','b','c')) // 'b'
shuffle('hello, world') // 'rlo,h eoldlw'
shuffle(array(1, 2, 3)) // array(2, 1, 3)
numerify('Hello ###') // 'Hello 609'
lexify('Hello ???') // 'Hello wgt'
bothify('Hello ##??') // 'Hello 42jz'
asciify('Hello ***') // 'Hello R6+'
regexify('[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}'); // sm0@y8k96a.ej

Faker\Provider\Lorem
word                                             // 'aut'
words($nb = 3, $asText = false)                  // array('porro', 'sed', 'magni')
sentence($nbWords = 6, $variableNbWords = true)  // 'Sit vitae voluptas sint non voluptates.'
sentences($nb = 3, $asText = false)              // array('Optio quos qui illo error.', 'Laborum vero a officia id corporis.', 'Saepe provident esse hic eligendi.')
paragraph($nbSentences = 3, $variableNbSentences = true) // 'Ut ab voluptas sed a nam. Sint autem inventore aut officia aut aut blanditiis. Ducimus eos odit amet et est ut eum.'
paragraphs($nb = 3, $asText = false)             // array('Quidem ut sunt et quidem est accusamus aut. Fuga est placeat rerum ut. Enim ex eveniet facere sunt.', 'Aut nam et eum architecto fugit repellendus illo. Qui ex esse veritatis.', 'Possimus omnis aut incidunt sunt. Asperiores incidunt iure sequi cum culpa rem. Rerum exercitationem est rem.')
text($maxNbChars = 200)                          // 'Fuga totam reiciendis qui architecto fugiat nemo. Consequatur recusandae qui cupiditate eos quod.'

Faker\Provider\en_US\Person
title($gender = null|'male'|'female')     // 'Ms.'
titleMale                                 // 'Mr.'
titleFemale                               // 'Ms.'
suffix                                    // 'Jr.'
name($gender = null|'male'|'female')      // 'Dr. Zane Stroman'
firstName($gender = null|'male'|'female') // 'Maynard'
firstNameMale                             // 'Maynard'
firstNameFemale                           // 'Rachel'
lastName                                  // 'Zulauf'

Faker\Provider\en_US\Address
cityPrefix                          // 'Lake'
secondaryAddress                    // 'Suite 961'
state                               // 'NewMexico'
stateAbbr                           // 'OH'
citySuffix                          // 'borough'
streetSuffix                        // 'Keys'
buildingNumber                      // '484'
city                                // 'West Judge'
streetName                          // 'Keegan Trail'
streetAddress                       // '439 Karley Loaf Suite 897'
postcode                            // '17916'
address                             // '8888 Cummings Vista Apt. 101, Susanbury, NY 95473'
country                             // 'Falkland Islands (Malvinas)'
latitude($min = -90, $max = 90)     // 77.147489
longitude($min = -180, $max = 180)  // 86.211205

Faker\Provider\en_US\PhoneNumber
phoneNumber             // '201-886-0269 x3767'
tollFreePhoneNumber     // '(888) 937-7238'
e164PhoneNumber     // '+27113456789'

Faker\Provider\en_US\Company
catchPhrase             // 'Monitored regional contingency'
bs                      // 'e-enable robust architectures'
company                 // 'Bogan-Treutel'
companySuffix           // 'and Sons'
jobTitle                // 'Cashier'

Faker\Provider\en_US\Text
realText($maxNbChars = 200, $indexSize = 2) // ""And yet I wish you could manage it?) 'And what are they made of?' Alice asked in a shrill, passionate voice. 'Would YOU like cats if you were never even spoke to Time!' 'Perhaps not,' Alice replied.""

Faker\Provider\DateTime
unixTime($max = 'now')                // 58781813
dateTime($max = 'now', $timezone = null) // DateTime('2008-04-25 08:37:17', 'UTC')
dateTimeAD($max = 'now', $timezone = null) // DateTime('1800-04-29 20:38:49', 'Europe/Paris')
iso8601($max = 'now')                 // '1978-12-09T10:10:29+0000'
date($format = 'Y-m-d', $max = 'now') // '1979-06-09'
time($format = 'H:i:s', $max = 'now') // '20:49:42'
dateTimeBetween($startDate = '-30 years', $endDate = 'now', $timezone = null) // DateTime('2003-03-15 02:00:49', 'Africa/Lagos')
dateTimeInInterval($startDate = '-30 years', $interval = '+ 5 days', $timezone = null) // DateTime('2003-03-15 02:00:49', 'Antartica/Vostok')
dateTimeThisCentury($max = 'now', $timezone = null)     // DateTime('1915-05-30 19:28:21', 'UTC')
dateTimeThisDecade($max = 'now', $timezone = null)      // DateTime('2007-05-29 22:30:48', 'Europe/Paris')
dateTimeThisYear($max = 'now', $timezone = null)        // DateTime('2011-02-27 20:52:14', 'Africa/Lagos')
dateTimeThisMonth($max = 'now', $timezone = null)       // DateTime('2011-10-23 13:46:23', 'Antarctica/Vostok')
amPm($max = 'now')                    // 'pm'
dayOfMonth($max = 'now')              // '04'
dayOfWeek($max = 'now')               // 'Friday'
month($max = 'now')                   // '06'
monthName($max = 'now')               // 'January'
year($max = 'now')                    // '1993'
century                               // 'VI'
timezone                              // 'Europe/Paris'

Methods accepting a $timezone argument default to date_default_timezone_get(). You can pass a custom timezone string to each method, or define a custom timezone for all time methods at once using $faker::setDefaultTimezone($timezone).
Faker\Provider\Internet
email                   // 'tkshlerin@collins.com'
safeEmail               // 'king.alford@example.org'
freeEmail               // 'bradley72@gmail.com'
companyEmail            // 'russel.durward@mcdermott.org'
freeEmailDomain         // 'yahoo.com'
safeEmailDomain         // 'example.org'
userName                // 'wade55'
password                // 'k&|X+a45*2['
domainName              // 'wolffdeckow.net'
domainWord              // 'feeney'
tld                     // 'biz'
url                     // 'http://www.skilesdonnelly.biz/aut-accusantium-ut-architecto-sit-et.html'
slug                    // 'aut-repellat-commodi-vel-itaque-nihil-id-saepe-nostrum'
ipv4                    // '109.133.32.252'
localIpv4               // '10.242.58.8'
ipv6                    // '8e65:933d:22ee:a232:f1c1:2741:1f10:117c'
macAddress              // '43:85:B7:08:10:CA'

Faker\Provider\UserAgent
userAgent              // 'Mozilla/5.0 (Windows CE) AppleWebKit/5350 (KHTML, like Gecko) Chrome/13.0.888.0 Safari/5350'
chrome                 // 'Mozilla/5.0 (Macintosh; PPC Mac OS X 10_6_5) AppleWebKit/5312 (KHTML, like Gecko) Chrome/14.0.894.0 Safari/5312'
firefox                // 'Mozilla/5.0 (X11; Linuxi686; rv:7.0) Gecko/20101231 Firefox/3.6'
safari                 // 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_7_1 rv:3.0; en-US) AppleWebKit/534.11.3 (KHTML, like Gecko) Version/4.0 Safari/534.11.3'
opera                  // 'Opera/8.25 (Windows NT 5.1; en-US) Presto/2.9.188 Version/10.00'
internetExplorer       // 'Mozilla/5.0 (compatible; MSIE 7.0; Windows 98; Win 9x 4.90; Trident/3.0)'

Faker\Provider\Payment
creditCardType          // 'MasterCard'
creditCardNumber        // '4485480221084675'
creditCardExpirationDate // 04/13
creditCardExpirationDateString // '04/13'
creditCardDetails       // array('MasterCard', '4485480221084675', 'Aleksander Nowak', '04/13')
// Generates a random IBAN. Set $countryCode to null for a random country
iban($countryCode)      // 'IT31A8497112740YZ575DJ28BP4'
swiftBicNumber          // 'RZTIAT22263'

Faker\Provider\Color
hexcolor               // '#fa3cc2'
rgbcolor               // '0,255,122'
rgbColorAsArray        // array(0,255,122)
rgbCssColor            // 'rgb(0,255,122)'
safeColorName          // 'fuchsia'
colorName              // 'Gainsbor'
hslColor               // '340,50,20'
hslColorAsArray        // array(340,50,20)

Faker\Provider\File
fileExtension          // 'avi'
mimeType               // 'video/x-msvideo'
// Copy a random file from the source to the target directory and returns the fullpath or filename
file($sourceDir = '/tmp', $targetDir = '/tmp') // '/path/to/targetDir/13b73edae8443990be1aa8f1a483bc27.jpg'
file($sourceDir, $targetDir, false) // '13b73edae8443990be1aa8f1a483bc27.jpg'

Faker\Provider\Image
// Image generation provided by LoremPixel (http://lorempixel.com/)
imageUrl($width = 640, $height = 480) // 'http://lorempixel.com/640/480/'
imageUrl($width, $height, 'cats')     // 'http://lorempixel.com/800/600/cats/'
imageUrl($width, $height, 'cats', true, 'Faker') // 'http://lorempixel.com/800/400/cats/Faker'
imageUrl($width, $height, 'cats', true, 'Faker', true) // 'http://lorempixel.com/gray/800/400/cats/Faker/' Monochrome image
image($dir = '/tmp', $width = 640, $height = 480) // '/tmp/13b73edae8443990be1aa8f1a483bc27.jpg'
image($dir, $width, $height, 'cats')  // 'tmp/13b73edae8443990be1aa8f1a483bc27.jpg' it's a cat!
image($dir, $width, $height, 'cats', false) // '13b73edae8443990be1aa8f1a483bc27.jpg' it's a filename without path
image($dir, $width, $height, 'cats', true, false) // it's a no randomize images (default: `true`)
image($dir, $width, $height, 'cats', true, true, 'Faker') // 'tmp/13b73edae8443990be1aa8f1a483bc27.jpg' it's a cat with 'Faker' text. Default, `null`.

Faker\Provider\Uuid
uuid                   // '7e57d004-2b97-0e7a-b45f-5387367791cd'

Faker\Provider\Barcode
ean13          // '4006381333931'
ean8           // '73513537'
isbn13         // '9790404436093'
isbn10         // '4881416324'

Faker\Provider\Miscellaneous
boolean // false
boolean($chanceOfGettingTrue = 50) // true
md5           // 'de99a620c50f2990e87144735cd357e7'
sha1          // 'f08e7f04ca1a413807ebc47551a40a20a0b4de5c'
sha256        // '0061e4c60dac5c1d82db0135a42e00c89ae3a333e7c26485321f24348c7e98a5'
locale        // en_UK
countryCode   // UK
languageCode  // en
currencyCode  // EUR
emoji         // üòÅ

Faker\Provider\Biased
// get a random number between 10 and 20,
// with more chances to be close to 20
biasedNumberBetween($min = 10, $max = 20, $function = 'sqrt')

Faker\Provider\HtmlLorem
//Generate HTML document which is no more than 2 levels deep, and no more than 3 elements wide at any level.
randomHtml(2,3)   // <html><head><title>Aut illo dolorem et accusantium eum.</title></head><body><form action=""example.com"" method=""POST""><label for=""username"">sequi</label><input type=""text"" id=""username""><label for=""password"">et</label><input type=""password"" id=""password""></form><b>Id aut saepe non mollitia voluptas voluptas.</b><table><thead><tr><tr>Non consequatur.</tr><tr>Incidunt est.</tr><tr>Aut voluptatem.</tr><tr>Officia voluptas rerum quo.</tr><tr>Asperiores similique.</tr></tr></thead><tbody><tr><td>Sapiente dolorum dolorem sint laboriosam commodi qui.</td><td>Commodi nihil nesciunt eveniet quo repudiandae.</td><td>Voluptates explicabo numquam distinctio necessitatibus repellat.</td><td>Provident ut doloremque nam eum modi aspernatur.</td><td>Iusto inventore.</td></tr><tr><td>Animi nihil ratione id mollitia libero ipsa quia tempore.</td><td>Velit est officia et aut tenetur dolorem sed mollitia expedita.</td><td>Modi modi repudiandae pariatur voluptas rerum ea incidunt non molestiae eligendi eos deleniti.</td><td>Exercitationem voluptatibus dolor est iste quod molestiae.</td><td>Quia reiciendis.</td></tr><tr><td>Inventore impedit exercitationem voluptatibus rerum cupiditate.</td><td>Qui.</td><td>Aliquam.</td><td>Autem nihil aut et.</td><td>Dolor ut quia error.</td></tr><tr><td>Enim facilis iusto earum et minus rerum assumenda quis quia.</td><td>Reprehenderit ut sapiente occaecati voluptatum dolor voluptatem vitae qui velit.</td><td>Quod fugiat non.</td><td>Sunt nobis totam mollitia sed nesciunt est deleniti cumque.</td><td>Repudiandae quo.</td></tr><tr><td>Modi dicta libero quisquam doloremque qui autem.</td><td>Voluptatem aliquid saepe laudantium facere eos sunt dolor.</td><td>Est eos quis laboriosam officia expedita repellendus quia natus.</td><td>Et neque delectus quod fugit enim repudiandae qui.</td><td>Fugit soluta sit facilis facere repellat culpa magni voluptatem maiores tempora.</td></tr><tr><td>Enim dolores doloremque.</td><td>Assumenda voluptatem eum perferendis exercitationem.</td><td>Quasi in fugit deserunt ea perferendis sunt nemo consequatur dolorum soluta.</td><td>Maxime repellat qui numquam voluptatem est modi.</td><td>Alias rerum rerum hic hic eveniet.</td></tr><tr><td>Tempore voluptatem.</td><td>Eaque.</td><td>Et sit quas fugit iusto.</td><td>Nemo nihil rerum dignissimos et esse.</td><td>Repudiandae ipsum numquam.</td></tr><tr><td>Nemo sunt quia.</td><td>Sint tempore est neque ducimus harum sed.</td><td>Dicta placeat atque libero nihil.</td><td>Et qui aperiam temporibus facilis eum.</td><td>Ut dolores qui enim et maiores nesciunt.</td></tr><tr><td>Dolorum totam sint debitis saepe laborum.</td><td>Quidem corrupti ea.</td><td>Cum voluptas quod.</td><td>Possimus consequatur quasi dolorem ut et.</td><td>Et velit non hic labore repudiandae quis.</td></tr></tbody></table></body></html>

Modifiers
Faker provides three special providers, unique(), optional(), and valid(), to be called before any provider.
// unique() forces providers to return unique values
$values = array();
for ($i = 0; $i < 10; $i++) {
  // get a random digit, but always a new one, to avoid duplicates
  $values []= $faker->unique()->randomDigit;
}
print_r($values); // [4, 1, 8, 5, 0, 2, 6, 9, 7, 3]

// providers with a limited range will throw an exception when no new unique value can be generated
$values = array();
try {
  for ($i = 0; $i < 10; $i++) {
    $values []= $faker->unique()->randomDigitNotNull;
  }
} catch (\OverflowException $e) {
  echo ""There are only 9 unique digits not null, Faker can't generate 10 of them!"";
}

// you can reset the unique modifier for all providers by passing true as first argument
$faker->unique($reset = true)->randomDigitNotNull; // will not throw OverflowException since unique() was reset
// tip: unique() keeps one array of values per provider

// optional() sometimes bypasses the provider to return a default value instead (which defaults to NULL)
$values = array();
for ($i = 0; $i < 10; $i++) {
  // get a random digit, but also null sometimes
  $values []= $faker->optional()->randomDigit;
}
print_r($values); // [1, 4, null, 9, 5, null, null, 4, 6, null]

// optional() accepts a weight argument to specify the probability of receiving the default value.
// 0 will always return the default value; 1 will always return the provider. Default weight is 0.5 (50% chance).
$faker->optional($weight = 0.1)->randomDigit; // 90% chance of NULL
$faker->optional($weight = 0.9)->randomDigit; // 10% chance of NULL

// optional() accepts a default argument to specify the default value to return.
// Defaults to NULL.
$faker->optional($weight = 0.5, $default = false)->randomDigit; // 50% chance of FALSE
$faker->optional($weight = 0.9, $default = 'abc')->word; // 10% chance of 'abc'

// valid() only accepts valid values according to the passed validator functions
$values = array();
$evenValidator = function($digit) {
	return $digit % 2 === 0;
};
for ($i = 0; $i < 10; $i++) {
	$values []= $faker->valid($evenValidator)->randomDigit;
}
print_r($values); // [0, 4, 8, 4, 2, 6, 0, 8, 8, 6]

// just like unique(), valid() throws an overflow exception when it can't generate a valid value
$values = array();
try {
  $faker->valid($evenValidator)->randomElement(1, 3, 5, 7, 9);
} catch (\OverflowException $e) {
  echo ""Can't pick an even number in that set!"";
}
If you would like to use a modifier with a value not generated by Faker, use the passthrough() method. passthrough() simply returns whatever value it was given.
$faker->optional()->passthrough(mt_rand(5, 15));
Localization
Faker\Factory can take a locale as an argument, to return localized data. If no localized provider is found, the factory fallbacks to the default locale (en_US).
<?php
$faker = Faker\Factory::create('fr_FR'); // create a French faker
for ($i = 0; $i < 10; $i++) {
  echo $faker->name, ""\n"";
}
  // Luce du Coulon
  // Auguste Dupont
  // Roger Le Voisin
  // Alexandre Lacroix
  // Jacques Humbert-Roy
  // Th√©r√®se Guillet-Andre
  // Gilles Gros-Bodin
  // Am√©lie Pires
  // Marcel Laporte
  // Genevi√®ve Marchal
You can check available Faker locales in the source code, under the Provider directory. The localization of Faker is an ongoing process, for which we need your help. Don't hesitate to create localized providers to your own locale and submit a PR!
Populating Entities Using an ORM or an ODM
Faker provides adapters for Object-Relational and Object-Document Mappers (currently, Propel, Doctrine2, CakePHP, Spot2, Mandango and Eloquent are supported). These adapters ease the population of databases through the Entity classes provided by an ORM library (or the population of document stores using Document classes provided by an ODM library).
To populate entities, create a new populator class (using a generator instance as parameter), then list the class and number of all the entities that must be generated. To launch the actual data population, call the execute() method.
Note that some of the populators could require additional parameters. As example the doctrine populator has an option to specify
its batchSize on how often it will flush the UnitOfWork to the database.
Here is an example showing how to populate 5 Author and 10 Book objects:
<?php
$generator = \Faker\Factory::create();
$populator = new \Faker\ORM\Propel\Populator($generator);
$populator->addEntity('Author', 5);
$populator->addEntity('Book', 10);
$insertedPKs = $populator->execute();
The populator uses name and column type guessers to populate each column with relevant data. For instance, Faker populates a column named first_name using the firstName formatter, and a column with a TIMESTAMP type using the dateTime formatter. The resulting entities are therefore coherent. If Faker misinterprets a column name, you can still specify a custom closure to be used for populating a particular column, using the third argument to addEntity():
<?php
$populator->addEntity('Book', 5, array(
  'ISBN' => function() use ($generator) { return $generator->ean13(); }
));
In this example, Faker will guess a formatter for all columns except ISBN, for which the given anonymous function will be used.
Tip: To ignore some columns, specify null for the column names in the third argument of addEntity(). This is usually necessary for columns added by a behavior:
<?php
$populator->addEntity('Book', 5, array(
  'CreatedAt' => null,
  'UpdatedAt' => null,
));
Of course, Faker does not populate autoincremented primary keys. In addition, Faker\ORM\Propel\Populator::execute() returns the list of inserted PKs, indexed by class:
<?php
print_r($insertedPKs);
// array(
//   'Author' => (34, 35, 36, 37, 38),
//   'Book'   => (456, 457, 458, 459, 470, 471, 472, 473, 474, 475)
// )
Note: Due to the fact that Faker returns all the primary keys inserted, the memory consumption will go up drastically when you do batch inserts due to the big list of data.
In the previous example, the Book and Author models share a relationship. Since Author entities are populated first, Faker is smart enough to relate the populated Book entities to one of the populated Author entities.
Lastly, if you want to execute an arbitrary function on an entity before insertion, use the fourth argument of the addEntity() method:
<?php
$populator->addEntity('Book', 5, array(), array(
  function($book) { $book->publish(); },
));
Seeding the Generator
You may want to get always the same generated data - for instance when using Faker for unit testing purposes. The generator offers a seed() method, which seeds the random number generator. Calling the same script twice with the same seed produces the same results.
<?php
$faker = Faker\Factory::create();
$faker->seed(1234);

echo $faker->name; // 'Jess Mraz I';

Tip: DateTime formatters won't reproduce the same fake data if you don't fix the $max value:
<?php
// even when seeded, this line will return different results because $max varies
$faker->dateTime(); // equivalent to $faker->dateTime($max = 'now')
// make sure you fix the $max parameter
$faker->dateTime('2014-02-25 08:37:17'); // will return always the same date when seeded
Tip: Formatters won't reproduce the same fake data if you use the rand() php function. Use $faker or mt_rand() instead:
<?php
// bad
$faker->realText(rand(10,20));
// good
$faker->realText($faker->numberBetween(10,20));

Faker Internals: Understanding Providers
A Faker\Generator alone can't do much generation. It needs Faker\Provider objects to delegate the data generation to them. Faker\Factory::create() actually creates a Faker\Generator bundled with the default providers. Here is what happens under the hood:
<?php
$faker = new Faker\Generator();
$faker->addProvider(new Faker\Provider\en_US\Person($faker));
$faker->addProvider(new Faker\Provider\en_US\Address($faker));
$faker->addProvider(new Faker\Provider\en_US\PhoneNumber($faker));
$faker->addProvider(new Faker\Provider\en_US\Company($faker));
$faker->addProvider(new Faker\Provider\Lorem($faker));
$faker->addProvider(new Faker\Provider\Internet($faker));
Whenever you try to access a property on the $faker object, the generator looks for a method with the same name in all the providers attached to it. For instance, calling $faker->name triggers a call to Faker\Provider\Person::name(). And since Faker starts with the last provider, you can easily override existing formatters: just add a provider containing methods named after the formatters you want to override.
That means that you can easily add your own providers to a Faker\Generator instance. A provider is usually a class extending \Faker\Provider\Base. This parent class allows you to use methods like lexify() or randomNumber(); it also gives you access to formatters of other providers, through the protected $generator property. The new formatters are the public methods of the provider class.
Here is an example provider for populating Book data:
<?php

namespace Faker\Provider;

class Book extends \Faker\Provider\Base
{
  public function title($nbWords = 5)
  {
    $sentence = $this->generator->sentence($nbWords);
    return substr($sentence, 0, strlen($sentence) - 1);
  }

  public function ISBN()
  {
    return $this->generator->ean13();
  }
}
To register this provider, just add a new instance of \Faker\Provider\Book to an existing generator:
<?php
$faker->addProvider(new \Faker\Provider\Book($faker));
Now you can use the two new formatters like any other Faker formatter:
<?php
$book = new Book();
$book->setTitle($faker->title);
$book->setISBN($faker->ISBN);
$book->setSummary($faker->text);
$book->setPrice($faker->randomNumber(2));
Tip: A provider can also be a Plain Old PHP Object. In that case, all the public methods of the provider become available to the generator.
Real Life Usage
The following script generates a valid XML document:
<?php
require_once '/path/to/Faker/src/autoload.php';
$faker = Faker\Factory::create();
?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<contacts>
<?php for ($i = 0; $i < 10; $i++): ?>
  <contact firstName=""<?php echo $faker->firstName ?>"" lastName=""<?php echo $faker->lastName ?>"" email=""<?php echo $faker->email ?>"">
    <phone number=""<?php echo $faker->phoneNumber ?>""/>
<?php if ($faker->boolean(25)): ?>
    <birth date=""<?php echo $faker->dateTimeThisCentury->format('Y-m-d') ?>"" place=""<?php echo $faker->city ?>""/>
<?php endif; ?>
    <address>
      <street><?php echo $faker->streetAddress ?></street>
      <city><?php echo $faker->city ?></city>
      <postcode><?php echo $faker->postcode ?></postcode>
      <state><?php echo $faker->state ?></state>
    </address>
    <company name=""<?php echo $faker->company ?>"" catchPhrase=""<?php echo $faker->catchPhrase ?>"">
<?php if ($faker->boolean(33)): ?>
      <offer><?php echo $faker->bs ?></offer>
<?php endif; ?>
<?php if ($faker->boolean(33)): ?>
      <director name=""<?php echo $faker->name ?>"" />
<?php endif; ?>
    </company>
<?php if ($faker->boolean(15)): ?>
    <details>
<![CDATA[
<?php echo $faker->text(400) ?>
]]>
    </details>
<?php endif; ?>
  </contact>
<?php endfor; ?>
</contacts>
Running this script produces a document looking like:
<?xml version=""1.0"" encoding=""UTF-8""?>
<contacts>
  <contact firstName=""Ona"" lastName=""Bednar"" email=""schamberger.frank@wuckert.com"">
    <phone number=""1-265-479-1196x714""/>
    <address>
      <street>182 Harrison Cove</street>
      <city>North Lloyd</city>
      <postcode>45577</postcode>
      <state>Alabama</state>
    </address>
    <company name=""Veum, Funk and Shanahan"" catchPhrase=""Function-based stable solution"">
      <offer>orchestrate compelling web-readiness</offer>
    </company>
    <details>
<![CDATA[
Alias accusantium voluptatum autem nobis cumque neque modi. Voluptatem error molestiae consequatur alias.
Illum commodi molestiae aut repellat id. Et sit consequuntur aut et ullam asperiores. Cupiditate culpa voluptatem et mollitia dolor. Nisi praesentium qui ut.
]]>
    </details>
  </contact>
  <contact firstName=""Aurelie"" lastName=""Paucek"" email=""alfonzo55@durgan.com"">
    <phone number=""863.712.1363x9425""/>
    <address>
      <street>90111 Hegmann Inlet</street>
      <city>South Geovanymouth</city>
      <postcode>69961-9311</postcode>
      <state>Colorado</state>
    </address>
    <company name=""Krajcik-Grimes"" catchPhrase=""Switchable cohesive instructionset"">
    </company>
  </contact>
  <contact firstName=""Clifton"" lastName=""Kshlerin"" email=""kianna.wiegand@framiwyman.info"">
    <phone number=""692-194-4746""/>
    <address>
      <street>9791 Nona Corner</street>
      <city>Harberhaven</city>
      <postcode>74062-8191</postcode>
      <state>RhodeIsland</state>
    </address>
    <company name=""Rosenbaum-Aufderhar"" catchPhrase=""Realigned asynchronous encryption"">
    </company>
  </contact>
  <contact firstName=""Alexandre"" lastName=""Orn"" email=""thelma37@erdmancorwin.biz"">
    <phone number=""189.655.8677x027""/>
    <address>
      <street>11161 Schultz Via</street>
      <city>Feilstad</city>
      <postcode>98019</postcode>
      <state>NewJersey</state>
    </address>
    <company name=""O'Hara-Prosacco"" catchPhrase=""Re-engineered solution-oriented algorithm"">
      <director name=""Dr. Berenice Auer V"" />
    </company>
    <details>
<![CDATA[
Ut itaque et quaerat doloremque eum praesentium. Rerum in saepe dolorem. Explicabo qui consequuntur commodi minima rem.
Harum temporibus rerum dolores. Non molestiae id dolorem placeat.
Aut asperiores nihil eius repellendus. Vero nihil corporis voluptatem explicabo commodi. Occaecati omnis blanditiis beatae quod aspernatur eos.
]]>
    </details>
  </contact>
  <contact firstName=""Katelynn"" lastName=""Kohler"" email=""reinger.trudie@stiedemannjakubowski.com"">
    <phone number=""(665)713-1657""/>
    <address>
      <street>6106 Nader Village Suite 753</street>
      <city>McLaughlinstad</city>
      <postcode>43189-8621</postcode>
      <state>Missouri</state>
    </address>
    <company name=""Herman-Tremblay"" catchPhrase=""Object-based explicit service-desk"">
      <offer>expedite viral synergies</offer>
      <director name=""Arden Deckow"" />
    </company>
  </contact>
  <contact firstName=""Blanca"" lastName=""Stark"" email=""tad27@feest.net"">
    <phone number=""168.719.4692x87177""/>
    <address>
      <street>7546 Kuvalis Plaza</street>
      <city>South Wilfrid</city>
      <postcode>77069</postcode>
      <state>Georgia</state>
    </address>
    <company name=""Upton, Braun and Rowe"" catchPhrase=""Visionary leadingedge pricingstructure"">
    </company>
  </contact>
  <contact firstName=""Rene"" lastName=""Spencer"" email=""anibal28@armstrong.info"">
    <phone number=""715.222.0095x175""/>
    <birth date=""2008-08-07"" place=""Zulaufborough""/>
    <address>
      <street>478 Daisha Landing Apt. 510</street>
      <city>West Lizethhaven</city>
      <postcode>30566-5362</postcode>
      <state>WestVirginia</state>
    </address>
    <company name=""Wiza Inc"" catchPhrase=""Persevering reciprocal approach"">
      <offer>orchestrate dynamic networks</offer>
      <director name=""Erwin Nienow"" />
    </company>
    <details>
<![CDATA[
Dolorem consequatur voluptates unde optio unde. Accusantium dolorem est est architecto impedit. Corrupti et provident quo.
Reprehenderit dolores aut quidem suscipit repudiandae corporis error. Molestiae enim aperiam illo.
Et similique qui non expedita quia dolorum. Ex rem incidunt ea accusantium temporibus minus non.
]]>
    </details>
  </contact>
  <contact firstName=""Alessandro"" lastName=""Hagenes"" email=""tbreitenberg@oharagorczany.com"">
    <phone number=""1-284-958-6768""/>
    <address>
      <street>1251 Koelpin Mission</street>
      <city>North Revastad</city>
      <postcode>81620</postcode>
      <state>Maryland</state>
    </address>
    <company name=""Stiedemann-Bruen"" catchPhrase=""Re-engineered 24/7 success"">
    </company>
  </contact>
  <contact firstName=""Novella"" lastName=""Rutherford"" email=""claud65@bogisich.biz"">
    <phone number=""(091)825-7971""/>
    <address>
      <street>6396 Langworth Hills Apt. 446</street>
      <city>New Carlos</city>
      <postcode>89399-0268</postcode>
      <state>Wyoming</state>
    </address>
    <company name=""Stroman-Legros"" catchPhrase=""Expanded 4thgeneration moratorium"">
      <director name=""Earlene Bayer"" />
    </company>
  </contact>
  <contact firstName=""Andreane"" lastName=""Mann"" email=""meggie17@ornbaumbach.com"">
    <phone number=""941-659-9982x5689""/>
    <birth date=""1934-02-21"" place=""Stantonborough""/>
    <address>
      <street>2246 Kreiger Station Apt. 291</street>
      <city>Kaydenmouth</city>
      <postcode>11397-1072</postcode>
      <state>Wyoming</state>
    </address>
    <company name=""Lebsack, Bernhard and Kiehn"" catchPhrase=""Persevering actuating framework"">
      <offer>grow sticky portals</offer>
    </company>
    <details>
<![CDATA[
Quia dolor ut quia error libero. Enim facilis iusto earum et minus rerum assumenda. Quia doloribus et reprehenderit ut. Occaecati voluptatum dolor voluptatem vitae qui velit quia.
Fugiat non in itaque sunt nobis totam. Sed nesciunt est deleniti cumque alias. Repudiandae quo aut numquam modi dicta libero.
]]>
    </details>
  </contact>
</contacts>
Language specific formatters
Faker\Provider\ar_SA\Person
<?php

echo $faker->idNumber;      // ID number
echo $faker->nationalIdNumber // Citizen ID number
echo $faker->foreignerIdNumber // Foreigner ID number
echo $faker->companyIdNumber // Company ID number
Faker\Provider\ar_SA\Payment
<?php

echo $faker->bankAccountNumber // ""SA0218IBYZVZJSEC8536V4XC""
Faker\Provider\at_AT\Payment
<?php

echo $faker->vat;           // ""AT U12345678"" - Austrian Value Added Tax number
echo $faker->vat(false);    // ""ATU12345678"" - unspaced Austrian Value Added Tax number
Faker\Provider\bg_BG\Payment
<?php

echo $faker->vat;           // ""BG 0123456789"" - Bulgarian Value Added Tax number
echo $faker->vat(false);    // ""BG0123456789"" - unspaced Bulgarian Value Added Tax number
Faker\Provider\cs_CZ\Address
<?php

echo $faker->region; // ""Libereck√Ω kraj""
Faker\Provider\cs_CZ\Company
<?php

// Generates a valid IƒåO
echo $faker->ico; // ""69663963""
Faker\Provider\cs_CZ\DateTime
<?php

echo $faker->monthNameGenitive; // ""prosince""
echo $faker->formattedDate; // ""12. listopadu 2015""
Faker\Provider\cs_CZ\Person
<?php

echo $faker->birthNumber; // ""7304243452""
Faker\Provider\da_DK\Person
<?php

// Generates a random CPR number
echo $faker->cpr; // ""051280-2387""
Faker\Provider\da_DK\Address
<?php

// Generates a random 'kommune' name
echo $faker->kommune; // ""Frederiksberg""

// Generates a random region name
echo $faker->region; // ""Region Sj√¶lland""
Faker\Provider\da_DK\Company
<?php

// Generates a random CVR number
echo $faker->cvr; // ""32458723""

// Generates a random P number
echo $faker->p; // ""5398237590""
Faker\Provider\de_CH\Person
<?php

// Generates a random AVS13/AHV13 social security number
echo $faker->avs13; // ""756.1234.5678.97"" OR
echo $faker->ahv13; // ""756.1234.5678.97""
Faker\Provider\de_DE\Payment
<?php

echo $faker->bankAccountNumber; // ""DE41849025553661169313""
echo $faker->bank; // ""Volksbank Stuttgart""

Faker\Provider\en_HK\Address
<?php

// Generates a fake town name based on the words commonly found in Hong Kong
echo $faker->town; // ""Yuen Long""

// Generates a fake village name based on the words commonly found in Hong Kong
echo $faker->village; // ""O Tau""

// Generates a fake estate name based on the words commonly found in Hong Kong
echo $faker->estate; // ""Ching Lai Court""

Faker\Provider\en_HK\Phone
<?php

// Generates a Hong Kong mobile number (starting with 5, 6 or 9)
echo $faker->mobileNumber; // ""92150087""

// Generates a Hong Kong landline number (starting with 2 or 3)
echo $faker->landlineNumber; // ""32750132""

// Generates a Hong Kong fax number (starting with 7)
echo $faker->faxNumber; // ""71937729""

Faker\Provider\en_NG\Address
<?php

// Generates a random region name
echo $faker->region; // 'Katsina'
Faker\Provider\en_NG\Person
<?php

// Generates a random person name
echo $faker->name; // 'Oluwunmi Mayowa'
Faker\Provider\en_NZ\Phone
<?php

// Generates a cell (mobile) phone number
echo $faker->mobileNumber; // ""021 123 4567""

// Generates a toll free number
echo $faker->tollFreeNumber; // ""0800 123 456""

// Area Code
echo $faker->areaCode; // ""03""
Faker\Provider\en_US\Company
<?php

// Generate a random Employer Identification Number
echo $faker->ein; // '12-3456789'
Faker\Provider\en_US\Payment
<?php

echo $faker->bankAccountNumber;  // '51915734310'
echo $faker->bankRoutingNumber;  // '212240302'
Faker\Provider\en_US\Person
<?php

// Generates a random Social Security Number
echo $faker->ssn; // '123-45-6789'
Faker\Provider\en_ZA\Company
<?php

// Generates a random company registration number
echo $faker->companyNumber; // 1999/789634/01
Faker\Provider\en_ZA\Person
<?php

// Generates a random national identification number
echo $faker->idNumber; // 6606192211041

// Generates a random valid licence code
echo $faker->licenceCode; // EB
Faker\Provider\en_ZA\PhoneNumber
<?php

// Generates a special rate toll free phone number
echo $faker->tollFreeNumber; // 0800 555 5555

// Generates a mobile phone number
echo $faker->mobileNumber; // 082 123 5555
Faker\Provider\es_ES\Person
<?php

// Generates a Documento Nacional de Identidad (DNI) number
echo $faker->dni; // '77446565E'

// Generates a random valid licence code
echo $faker->licenceCode; // B
Faker\Provider\es_ES\Payment
<?php
// Generates a C√≥digo de identificaci√≥n Fiscal (CIF) number
echo $faker->vat;           // ""A35864370""
Faker\Provider\es_ES\PhoneNumber
<?php

// Generates a special rate toll free phone number
echo $faker->tollFreeNumber; // 900 123 456

// Generates a mobile phone number
echo $faker->mobileNumber; // +34 612 12 24
Faker\Provider\es_PE\Person
<?php

// Generates a Peruvian Documento Nacional de Identidad (DNI) number
echo $faker->dni; // '83367512'
Faker\Provider\fa_IR\Person
<?php

// Generates a valid nationalCode
echo $faker->nationalCode; // ""0078475759""
Faker\Provider\fa_IR\Address
<?php

// Generates a random building name
echo $faker->building; // ""ÿ≥ÿßÿÆÿ™ŸÖÿßŸÜ ÿ¢ŸÅÿ™ÿßÿ®""

// Returns a random city name
echo $faker->city // ""ÿßÿ≥ÿ™ÿßŸÜ ÿ≤ŸÜÿ¨ÿßŸÜ""
Faker\Provider\fa_IR\Company
<?php

// Generates a random contract type
echo $faker->contract; // ""ÿ±ÿ≥ŸÖ€å""
Faker\Provider\fi_FI\Payment
<?php

// Generates a random bank account number
echo $faker->bankAccountNumber; // ""FI8350799879879616""
Faker\Provider\fi_FI\Person
<?php

//Generates a valid Finnish personal identity number (in Finnish - Henkil√∂tunnus)
echo $faker->personalIdentityNumber() // '170974-007J'

//Since the numbers are different for male and female persons, optionally you can specify gender.
echo $faker->personalIdentityNumber(\DateTime::createFromFormat('Y-m-d', '2015-12-14'), 'female') // '141215A520B'
Faker\Provider\fr_BE\Payment
<?php

echo $faker->vat;           // ""BE 0123456789"" - Belgian Value Added Tax number
echo $faker->vat(false);    // ""BE0123456789"" - unspaced Belgian Value Added Tax number
Faker\Provider\es_VE\Person
<?php

// Generate a C√©dula de identidad number, you can pass one argument to add separator
echo $faker->nationalId; // 'V11223344'
Faker\Provider\es_VE\Company
<?php

// Generates a R.I.F. number, you can pass one argument to add separators
echo $faker->taxpayerIdentificationNumber; // 'J1234567891'
Faker\Provider\fr_CH\Person
<?php

// Generates a random AVS13/AHV13 social security number
echo $faker->avs13; // ""756.1234.5678.97""
Faker\Provider\fr_FR\Address
<?php

// Generates a random department name
echo $faker->departmentName; // ""Haut-Rhin""

// Generates a random department number
echo $faker->departmentNumber; // ""2B""

// Generates a random department info (department number => department name)
$faker->department; // array('18' => 'Cher');

// Generates a random region
echo $faker->region; // ""Saint-Pierre-et-Miquelon""

// Generates a random appartement,stair
echo $faker->secondaryAddress; // ""Bat. 961""
Faker\Provider\fr_FR\Company
<?php

// Generates a random SIREN number
echo $faker->siren; // 082 250 104

// Generates a random SIRET number
echo $faker->siret; // 347 355 708 00224
Faker\Provider\fr_FR\Payment
<?php

// Generates a random VAT
echo $faker->vat; // FR 12 123 456 789
Faker\Provider\fr_FR\Person
<?php

// Generates a random NIR / S√©curit√© Sociale number
echo $faker->nir; // 1 88 07 35 127 571 - 19
Faker\Provider\fr_FR\PhoneNumber
<?php

// Generates phone numbers
echo $faker->phoneNumber; // +33 (0)1 67 97 01 31
echo $faker->mobileNumber; // +33 6 21 12 72 84
echo $faker->serviceNumber // 08 98 04 84 46
Faker\Provider\he_IL\Payment
<?php

echo $faker->bankAccountNumber // ""IL392237392219429527697""
Faker\Provider\hr_HR\Payment
<?php

echo $faker->bankAccountNumber // ""HR3789114847226078672""
Faker\Provider\hu_HU\Payment
<?php

// Generates a random bank account number
echo $faker->bankAccountNumber; // ""HU09904437680048220079300783""
Faker\Provider\id_ID\Person
<?php

// Generates a random Nomor Induk Kependudukan (NIK)

// first argument is gender, either Person::GENDER_MALE or Person::GENDER_FEMALE, if none specified random gender is used
// second argument is birth date (DateTime object), if none specified, random birth date is used
echo $faker->nik(); // ""8522246001570940""
Faker\Provider\it_CH\Person
<?php

// Generates a random AVS13/AHV13 social security number
echo $faker->avs13; // ""756.1234.5678.97""
Faker\Provider\it_IT\Company
<?php

// Generates a random Vat Id
echo $faker->vatId(); // ""IT98746784967""
Faker\Provider\it_IT\Person
<?php

// Generates a random Tax Id code (Codice fiscale)
echo $faker->taxId(); // ""DIXDPZ44E08F367A""
Faker\Provider\ja_JP\Person
<?php

// Generates a 'kana' name
echo $faker->kanaName($gender = null|'male'|'female') // ""„Ç¢„Ç™„Çø „Éü„Éé„É´""

// Generates a 'kana' first name
echo $faker->firstKanaName($gender = null|'male'|'female') // ""„Éí„Éá„Ç≠""

// Generates a 'kana' first name on the male
echo $faker->firstKanaNameMale // ""„Éí„Éá„Ç≠""

// Generates a 'kana' first name on the female
echo $faker->firstKanaNameFemale // ""„Éû„Ç¢„É§""

// Generates a 'kana' last name
echo $faker->lastKanaName; // ""„Éä„Ç´„Ç∏„Éû""
Faker\Provider\ka_GE\Payment
<?php

// Generates a random bank account number
echo $faker->bankAccountNumber; // ""GE33ZV9773853617253389""
Faker\Provider\kk_KZ\Company
<?php

// Generates an business identification number
echo $faker->businessIdentificationNumber; // ""150140000019""
Faker\Provider\kk_KZ\Payment
<?php

// Generates a random bank name
echo $faker->bank; // ""“ö–∞–∑–∫–æ–º–º–µ—Ä—Ü–±–∞–Ω–∫""

// Generates a random bank account number
echo $faker->bankAccountNumber; // ""KZ1076321LO4H6X41I37""
Faker\Provider\kk_KZ\Person
<?php

// Generates an individual identification number
echo $faker->individualIdentificationNumber; // ""780322300455""

// Generates an individual identification number based on his/her birth date
echo $faker->individualIdentificationNumber(new \DateTime('1999-03-01')); // ""990301300455""
Faker\Provider\ko_KR\Address
<?php

// Generates a metropolitan city
echo $faker->metropolitanCity; // ""ÏÑúÏö∏ÌäπÎ≥ÑÏãú""

// Generates a borough
echo $faker->borough; // ""Í∞ïÎÇ®Íµ¨""
Faker\Provider\ko_KR\PhoneNumber
<?php

// Generates a local area phone numer
echo $faker->localAreaPhoneNumber; // ""02-1234-4567""

// Generates a cell phone number
echo $faker->cellPhoneNumber; // ""010-9876-5432""
Faker\Provider\lt_LT\Payment
<?php

echo $faker->bankAccountNumber // ""LT300848876740317118""
Faker\Provider\lv_LV\Person
<?php

// Generates a random personal identity card number
echo $faker->personalIdentityNumber; // ""140190-12301""
Faker\Provider\ms_MY\Address
<?php

// Generates a random Malaysian township
echo $faker->township; // ""Taman Bahagia""

// Generates a random Malaysian town address with matching postcode and state
echo $faker->townState; // ""55100 Bukit Bintang, Kuala Lumpur""
Faker\Provider\ms_MY\Miscellaneous
<?php

// Generates a random vehicle license plate number
echo $faker->jpjNumberPlate; // ""WPL 5169""
Faker\Provider\ms_MY\Payment
<?php

// Generates a random Malaysian bank
echo $faker->bank; // ""Maybank""

// Generates a random Malaysian bank account number (10-16 digits)
echo $faker->bankAccountNumber; // ""1234567890123456""

// Generates a random Malaysian insurance company
echo $faker->insurance; // ""AIA Malaysia""

// Generates a random Malaysian bank SWIFT Code
echo $faker->swiftCode; // ""MBBEMYKLXXX""
Faker\Provider\ms_MY\Person
<?php

// Generates a random personal identity card (myKad) number
echo $faker->myKadNumber($gender = null|'male'|'female', $hyphen = null|true|false); // ""710703471796""
Faker\Provider\ms_MY\PhoneNumber
<?php

// Generates a random Malaysian mobile number
echo $faker->mobileNumber($countryCodePrefix = null|true|false, $formatting = null|true|false); // ""+6012-705 3767""

// Generates a random Malaysian landline number
echo $faker->fixedLineNumber($countryCodePrefix = null|true|false, $formatting = null|true|false); // ""03-7112 0455""

// Generates a random Malaysian voip number
echo $faker->voipNumber($countryCodePrefix = null|true|false, $formatting = null|true|false); // ""015-458 7099""
Faker\Provider\ne_NP\Address
<?php

//Generates a Nepali district name
echo $faker->district;

//Generates a Nepali city name
echo $faker->cityName;
Faker\Provider\nl_BE\Payment
<?php

echo $faker->vat;           // ""BE 0123456789"" - Belgian Value Added Tax number
echo $faker->vat(false);    // ""BE0123456789"" - unspaced Belgian Value Added Tax number
Faker\Provider\nl_BE\Person
<?php

echo $faker->rrn();         // ""83051711784"" - Belgian Rijksregisternummer
echo $faker->rrn('female'); // ""50032089858"" - Belgian Rijksregisternummer for a female
Faker\Provider\nl_NL\Company
<?php

echo $faker->jobTitle; // ""Houtbewerker""
echo $faker->vat; // ""NL123456789B01"" - Dutch Value Added Tax number
echo $faker->btw; // ""NL123456789B01"" - Dutch Value Added Tax number (alias)
Faker\Provider\nl_NL\Person
<?php

echo $faker->idNumber; // ""111222333"" - Dutch Personal identification number (BSN)
Faker\Provider\nb_NO\MobileNumber
<?php

// Generates a random Norwegian mobile phone number
echo $faker->mobileNumber; // ""+4799988777""
echo $faker->mobileNumber; // ""999 88 777""
echo $faker->mobileNumber; // ""99988777""
Faker\Provider\nb_NO\Payment
<?php

// Generates a random bank account number
echo $faker->bankAccountNumber; // ""NO3246764709816""
Faker\Provider\pl_PL\Person
<?php

// Generates a random PESEL number
echo $faker->pesel; // ""40061451555""
// Generates a random personal identity card number
echo $faker->personalIdentityNumber; // ""AKX383360""
// Generates a random taxpayer identification number (NIP)
echo $faker->taxpayerIdentificationNumber; // '8211575109'
Faker\Provider\pl_PL\Company
<?php

// Generates a random REGON number
echo $faker->regon; // ""714676680""
// Generates a random local REGON number
echo $faker->regonLocal; // ""15346111382836""
Faker\Provider\pl_PL\Payment
<?php

// Generates a random bank name
echo $faker->bank; // ""Narodowy Bank Polski""
// Generates a random bank account number
echo $faker->bankAccountNumber; // ""PL14968907563953822118075816""
Faker\Provider\pt_PT\Person
<?php

// Generates a random taxpayer identification number (in portuguese - N√∫mero de Identifica√ß√£o Fiscal NIF)
echo $faker->taxpayerIdentificationNumber; // '165249277'
Faker\Provider\pt_BR\Address
<?php

// Generates a random region name
echo $faker->region; // 'Nordeste'

// Generates a random region abbreviation
echo $faker->regionAbbr; // 'NE'
Faker\Provider\pt_BR\PhoneNumber
<?php

echo $faker->areaCode;  // 21
echo $faker->cellphone; // 9432-5656
echo $faker->landline;  // 2654-3445
echo $faker->phone;     // random landline, 8-digit or 9-digit cellphone number

// Using the phone functions with a false argument returns unformatted numbers
echo $faker->cellphone(false); // 74336667

// cellphone() has a special second argument to add the 9th digit. Ignored if generated a Radio number
echo $faker->cellphone(true, true); // 98983-3945 or 7343-1290

// Using the ""Number"" suffix adds area code to the phone
echo $faker->cellphoneNumber;       // (11) 98309-2935
echo $faker->landlineNumber(false); // 3522835934
echo $faker->phoneNumber;           // formatted, random landline or cellphone (obeying the 9th digit rule)
echo $faker->phoneNumberCleared;    // not formatted, random landline or cellphone (obeying the 9th digit rule)
Faker\Provider\pt_BR\Person
<?php

// The name generator may include double first or double last names, plus title and suffix
echo $faker->name; // 'Sr. Luis Adriano Sep√∫lveda Filho'

// Valid document generators have a boolean argument to remove formatting
echo $faker->cpf;        // '145.343.345-76'
echo $faker->cpf(false); // '45623467866'
echo $faker->rg;         // '84.405.736-3'
echo $faker->rg(false);  // '844057363'
Faker\Provider\pt_BR\Company
<?php

// Generates a Brazilian formatted and valid CNPJ
echo $faker->cnpj;        // '23.663.478/0001-24'
echo $faker->cnpj(false); // '23663478000124'
Faker\Provider\ro_MD\Payment
<?php

// Generates a random bank account number
echo $faker->bankAccountNumber; // ""MD83BQW1CKMUW34HBESDP3A8""
Faker\Provider\ro_RO\Payment
<?php

// Generates a random bank account number
echo $faker->bankAccountNumber; // ""RO55WRJE3OE8X3YQI7J26U1E""
Faker\Provider\ro_RO\Person
<?php

// Generates a random male name prefix/title
echo $faker->prefixMale; // ""ing.""
// Generates a random female name prefix/title
echo $faker->prefixFemale; // ""d-na.""
// Generates a random male first name
echo $faker->firstNameMale; // ""Adrian""
// Generates a random female first name
echo $faker->firstNameFemale; // ""Miruna""


// Generates a random Personal Numerical Code (CNP)
echo $faker->cnp; // ""2800523081231""
// Valid option values:
//    $gender: null (random), male, female
//    $dateOfBirth (1800+): null (random), Y-m-d, Y-m (random day), Y (random month and day)
//          i.e. '1981-06-16', '2015-03', '1900'
//    $county: 2 letter ISO 3166-2:RO county codes and B1, B2, B3, B4, B5, B6 for Bucharest's 6 sectors
//    $isResident true/false flag if the person resides in Romania
echo $faker->cnp($gender = null, $dateOfBirth = null, $county = null, $isResident = true);

Faker\Provider\ro_RO\PhoneNumber
<?php

// Generates a random toll-free phone number
echo $faker->tollFreePhoneNumber; // ""0800123456""
// Generates a random premium-rate phone number
echo $faker->premiumRatePhoneNumber; // ""0900123456""
Faker\Provider\ru_RU\Payment
<?php

// Generates a Russian bank name (based on list of real russian banks)
echo $faker->bank; // ""–û–¢–ü –ë–∞–Ω–∫""

//Generate a Russian Tax Payment Number for Company
echo $faker->inn; //  7813540735

//Generate a Russian Tax Code for Company
echo $faker->kpp; // 781301001
Faker\Provider\sv_SE\Payment
<?php

// Generates a random bank account number
echo $faker->bankAccountNumber; // ""SE5018548608468284909192""
Faker\Provider\sv_SE\Person
<?php

//Generates a valid Swedish personal identity number (in Swedish - Personnummer)
echo $faker->personalIdentityNumber() // '950910-0799'

//Since the numbers are different for male and female persons, optionally you can specify gender.
echo $faker->personalIdentityNumber('female') // '950910-0781'
Faker\Provider\tr_TR\Person
<?php

//Generates a valid Turkish identity number (in Turkish - T.C. Kimlik No)
echo $faker->tcNo // '55300634882'

Faker\Provider\zh_CN\Payment
<?php

// Generates a random bank name (based on list of real chinese banks)
echo $faker->bank; // '‰∏≠ÂõΩÂª∫ËÆæÈì∂Ë°å'
Faker\Provider\uk_UA\Payment
<?php

// Generates an Ukraine bank name (based on list of real Ukraine banks)
echo $faker->bank; // ""–û—â–∞–¥–±–∞–Ω–∫""
Faker\Provider\zh_TW\Person
<?php

// Generates a random personal identify number
echo $faker->personalIdentityNumber; // A223456789
Faker\Provider\zh_TW\Company
<?php

// Generates a random VAT / Company Tax number
echo $faker->VAT; //23456789
Third-Party Libraries Extending/Based On Faker

Symfony bundles:

willdurand/faker-bundle: Put the awesome Faker library into the Symfony2 DIC and populate your database with fake data.
hautelook/alice-bundle, h4cc/alice-fixtures-bundle: Bundles for using nelmio/alice and Faker with data fixtures. Able to use Doctrine ORM as well as Doctrine MongoDB ODM.


emanueleminotto/faker-service-provider: Faker Service Provider for Silex
bit3/faker-cli: Command Line Tool for the Faker PHP library
league/factory-muffin: enable the rapid creation of objects (PHP port of factory-girl)
fzaninotto/company-name-generator: Generate names for English tech companies with class
emanueleminotto/faker-placehold-it-provider: Generate images using placehold.it
spyrit/datalea A highly customizable random test data generator web app
frequenc1/newage-ipsum: A new aged ipsum provider for the faker library inspired by http://sebpearce.com/bullshit/
prewk/xml-faker: Create fake XML with Faker
denheck/faker-context: Behat context using Faker to generate testdata
swekaj/cron-expression-generator: Faker provider for generating random, valid cron expressions.
pragmafabrik/pomm-faker: Faker client for Pomm database framework (PostgreSQL)
nelmio/alice: Fixtures/object generator with a yaml DSL that can use Faker as data generator.
ravage84/cakephp-fake-seeder A CakePHP 2.x shell to seed your database with fake and/or fixed data.
bheller/images-generator: An image generator provider using GD for placeholder type pictures
pattern-lab/plugin-faker: Pattern Lab is a Styleguide, Component Library, and Prototyping tool. This creates unique content each time Pattern Lab is generated.
guidocella/eloquent-populator: Adapter for Laravel's Eloquent ORM.
tamperdata/exiges: Faker provider for generating random temperatures
jzonta/faker-restaurant: Faker for Food and Beverage names generate
aalaap/faker-youtube: Faker for YouTube URLs in various formats
pelmered/fake-car: Faker for cars and car data
bluemmb/faker-picsum-photos-provider: Generate images using picsum.photos
er1z/fakemock: Generate mocks using class-configuration and detection via Faker's guesser and Symfony asserts
xvladqt/faker-lorem-flickr: Generate images using loremflickr.com
metrakit/faker-eddy-malou: Generate French Eddy Malou sentences & paragraphs
drupol/belgian-national-number-faker: Generate fake Belgian national numbers
elgentos/masquerade: Configuration-based, platform-agnostic, locale-compatible data faker tool (out-of-the-box support for Magento 2)
ottaviano/faker-gravatar: Generate avatars using Gravatar
finwe/phpstan-faker: PHPStan extension for Faker methods

License
Faker is released under the MIT License. See the bundled LICENSE file for details.
",faker faker php library generates fake data whether need bootstrap database create goodlooking xml documents fillin persistence stress test anonymize data taken production service faker faker heavily inspired perls datafaker rubys faker faker requires php table contents installation basic usage formatters base lorem ipsum text person address phone number company real text date time internet user agent payment color file image uuid barcode miscellaneous biased html lorem modifiers localization populating entities using orm odm seeding generator faker internals understanding providers real life usage language specific formatters thirdparty libraries extendingbased faker license installation composer require fzaninottofaker basic usage autoloading faker supports psr psr autoloaders php installed via composer requireonce vendorautoloadphp also load fakers shipped psr autoloader php load fakers autoloader requireonce pathtofakersrcautoloadphp alternatively use another psr compliant autoloader create fake data use fakerfactorycreate create initialize faker generator generate data accessing properties named type data want php use factory create fakergenerator instance faker fakerfactorycreate generate data accessing properties echo fakername lucy cechtelar echo fakeraddress jordy lodge cartwrightshire sc echo fakertext dolores sit sint laboriosam dolorem culpa et autem beatae nam sunt fugit et sit et mollitia sed fuga deserunt tempora facere magni omnis omnis quia temporibus laudantium sit minima sint even example shows property access call fakername yields different random result faker uses get magic forwards fakergeneratorproperty calls fakergeneratorformatproperty php echo fakername n adaline reichel dr santa prosacco dvm noemy vandervort v lexi oconner gracie weber roscoe johns emmett lebsack keegan thiel wellington koelpin ii ms karley kiehn v tip quick generation fake data also use faker command line tool thanks fakercli formatters generator properties like name address lorem called formatters faker generator many packaged providers list bundled formatters default locale fakerproviderbase randomdigit randomdigitnot randomdigitnotnull randomnumbernbdigits null strict false randomfloatnbmaxdecimals null min max null numberbetweenmin max randomletter b returns randomly ordered subsequence provided array randomelementsarray array abc count arrayc randomelementarray array abc b shufflehello world rloh eoldlw shufflearray array numerifyhello hello lexifyhello hello wgt bothifyhello hello jz asciifyhello hello r regexifyazazaz smykaej fakerproviderlorem word aut wordsnb astext false arrayporro sed magni sentencenbwords variablenbwords true sit vitae voluptas sint non voluptates sentencesnb astext false arrayoptio quos qui illo error laborum vero officia id corporis saepe provident esse hic eligendi paragraphnbsentences variablenbsentences true ut ab voluptas sed nam sint autem inventore aut officia aut aut blanditiis ducimus eos odit amet et est ut eum paragraphsnb astext false arrayquidem ut sunt et quidem est accusamus aut fuga est placeat rerum ut enim ex eveniet facere sunt aut nam et eum architecto fugit repellendus illo qui ex esse veritatis possimus omnis aut incidunt sunt asperiores incidunt iure sequi cum culpa rem rerum exercitationem est rem textmaxnbchars fuga totam reiciendis qui architecto fugiat nemo consequatur recusandae qui cupiditate eos quod fakerproviderenusperson titlegender nullmalefemale ms titlemale mr titlefemale ms suffix jr namegender nullmalefemale dr zane stroman firstnamegender nullmalefemale maynard firstnamemale maynard firstnamefemale rachel lastname zulauf fakerproviderenusaddress cityprefix lake secondaryaddress suite state newmexico stateabbr oh citysuffix borough streetsuffix keys buildingnumber city west judge streetname keegan trail streetaddress karley loaf suite postcode address cummings vista apt susanbury ny country falkland islands malvinas latitudemin max longitudemin max fakerproviderenusphonenumber phonenumber x tollfreephonenumber ephonenumber fakerproviderenuscompany catchphrase monitored regional contingency bs eenable robust architectures company bogantreutel companysuffix sons jobtitle cashier fakerproviderenustext realtextmaxnbchars indexsize yet wish could manage made alice asked shrill passionate voice would like cats never even spoke time perhaps alice replied fakerproviderdatetime unixtimemax datetimemax timezone null datetime utc datetimeadmax timezone null datetime europeparis isomax dateformat ymd max timeformat max datetimebetweenstartdate years enddate timezone null datetime africalagos datetimeinintervalstartdate years interval days timezone null datetime antarticavostok datetimethiscenturymax timezone null datetime utc datetimethisdecademax timezone null datetime europeparis datetimethisyearmax timezone null datetime africalagos datetimethismonthmax timezone null datetime antarcticavostok ampmmax pm dayofmonthmax dayofweekmax friday monthmax monthnamemax january yearmax century vi timezone europeparis methods accepting timezone argument default datedefaulttimezoneget pass custom timezone string method define custom timezone time methods using fakersetdefaulttimezonetimezone fakerproviderinternet email tkshlerincollinscom safeemail kingalfordexampleorg freeemail bradleygmailcom companyemail russeldurwardmcdermottorg freeemaildomain yahoocom safeemaildomain exampleorg username wade password kxa domainname wolffdeckownet domainword feeney tld biz url httpwwwskilesdonnellybizautaccusantiumutarchitectositethtml slug autrepellatcommodivelitaquenihilidsaepenostrum ipv localipv ipv edeeafcfc macaddress bca fakerprovideruseragent useragent mozilla windows ce applewebkit khtml like gecko chrome safari chrome mozilla macintosh ppc mac os x applewebkit khtml like gecko chrome safari firefox mozilla x linuxi rv gecko firefox safari mozilla macintosh u ppc mac os x rv enus applewebkit khtml like gecko version safari opera opera windows nt enus presto version internetexplorer mozilla compatible msie windows win x trident fakerproviderpayment creditcardtype mastercard creditcardnumber creditcardexpirationdate creditcardexpirationdatestring creditcarddetails arraymastercard aleksander nowak generates random iban set countrycode null random country ibancountrycode itayzdjbp swiftbicnumber rztiat fakerprovidercolor hexcolor facc rgbcolor rgbcolorasarray array rgbcsscolor rgb safecolorname fuchsia colorname gainsbor hslcolor hslcolorasarray array fakerproviderfile fileextension avi mimetype videoxmsvideo copy random file source target directory returns fullpath filename filesourcedir tmp targetdir tmp pathtotargetdirbedaebeaafabcjpg filesourcedir targetdir false bedaebeaafabcjpg fakerproviderimage image generation provided lorempixel httplorempixelcom imageurlwidth height httplorempixelcom imageurlwidth height cats httplorempixelcomcats imageurlwidth height cats true faker httplorempixelcomcatsfaker imageurlwidth height cats true faker true httplorempixelcomgraycatsfaker monochrome image imagedir tmp width height tmpbedaebeaafabcjpg imagedir width height cats tmpbedaebeaafabcjpg cat imagedir width height cats false bedaebeaafabcjpg filename without path imagedir width height cats true false randomize images default true imagedir width height cats true true faker tmpbedaebeaafabcjpg cat faker text default null fakerprovideruuid uuid edbeabfcd fakerproviderbarcode ean ean isbn isbn fakerprovidermiscellaneous boolean false booleanchanceofgettingtrue true md deacfecde sha fefcaaebcaaabdec sha ecdaccddbaecaeaecfcea locale enuk countrycode uk languagecode en currencycode eur emoji fakerproviderbiased get random number chances close biasednumberbetweenmin max function sqrt fakerproviderhtmllorem generate html document levels deep elements wide level randomhtml htmlheadtitleaut illo dolorem et accusantium eumtitleheadbodyform actionexamplecom methodpostlabel forusernamesequilabelinput typetext idusernamelabel forpasswordetlabelinput typepassword idpasswordformbid aut saepe non mollitia voluptas voluptasbtabletheadtrtrnon consequaturtrtrincidunt esttrtraut voluptatemtrtrofficia voluptas rerum quotrtrasperiores similiquetrtrtheadtbodytrtdsapiente dolorum dolorem sint laboriosam commodi quitdtdcommodi nihil nesciunt eveniet quo repudiandaetdtdvoluptates explicabo numquam distinctio necessitatibus repellattdtdprovident ut doloremque nam eum modi aspernaturtdtdiusto inventoretdtrtrtdanimi nihil ratione id mollitia libero ipsa quia temporetdtdvelit est officia et aut tenetur dolorem sed mollitia expeditatdtdmodi modi repudiandae pariatur voluptas rerum ea incidunt non molestiae eligendi eos delenititdtdexercitationem voluptatibus dolor est iste quod molestiaetdtdquia reiciendistdtrtrtdinventore impedit exercitationem voluptatibus rerum cupiditatetdtdquitdtdaliquamtdtdautem nihil aut ettdtddolor ut quia errortdtrtrtdenim facilis iusto earum et minus rerum assumenda quis quiatdtdreprehenderit ut sapiente occaecati voluptatum dolor voluptatem vitae qui velittdtdquod fugiat nontdtdsunt nobis totam mollitia sed nesciunt est deleniti cumquetdtdrepudiandae quotdtrtrtdmodi dicta libero quisquam doloremque qui autemtdtdvoluptatem aliquid saepe laudantium facere eos sunt dolortdtdest eos quis laboriosam officia expedita repellendus quia natustdtdet neque delectus quod fugit enim repudiandae quitdtdfugit soluta sit facilis facere repellat culpa magni voluptatem maiores temporatdtrtrtdenim dolores doloremquetdtdassumenda voluptatem eum perferendis exercitationemtdtdquasi fugit deserunt ea perferendis sunt nemo consequatur dolorum solutatdtdmaxime repellat qui numquam voluptatem est moditdtdalias rerum rerum hic hic eveniettdtrtrtdtempore voluptatemtdtdeaquetdtdet sit quas fugit iustotdtdnemo nihil rerum dignissimos et essetdtdrepudiandae ipsum numquamtdtrtrtdnemo sunt quiatdtdsint tempore est neque ducimus harum sedtdtddicta placeat atque libero nihiltdtdet qui aperiam temporibus facilis eumtdtdut dolores qui enim et maiores nesciunttdtrtrtddolorum totam sint debitis saepe laborumtdtdquidem corrupti eatdtdcum voluptas quodtdtdpossimus consequatur quasi dolorem ut ettdtdet velit non hic labore repudiandae quistdtrtbodytablebodyhtml modifiers faker provides three special providers unique optional valid called provider unique forces providers return unique values values array get random digit always new one avoid duplicates values fakeruniquerandomdigit printrvalues providers limited range throw exception new unique value generated values array try values fakeruniquerandomdigitnotnull catch overflowexception e echo unique digits null faker cant generate reset unique modifier providers passing true first argument fakeruniquereset truerandomdigitnotnull throw overflowexception since unique reset tip unique keeps one array values per provider optional sometimes bypasses provider return default value instead defaults null values array get random digit also null sometimes values fakeroptionalrandomdigit printrvalues null null null null optional accepts weight argument specify probability receiving default value always return default value always return provider default weight chance fakeroptionalweight randomdigit chance null fakeroptionalweight randomdigit chance null optional accepts default argument specify default value return defaults null fakeroptionalweight default falserandomdigit chance false fakeroptionalweight default abcword chance abc valid accepts valid values according passed validator functions values array evenvalidator functiondigit &#9; return digit &#9; values fakervalidevenvalidatorrandomdigit printrvalues like unique valid throws overflow exception cant generate valid value values array try fakervalidevenvalidatorrandomelement catch overflowexception e echo cant pick even number set would like use modifier value generated faker use passthrough method passthrough simply returns whatever value given fakeroptionalpassthroughmtrand localization fakerfactory take locale argument return localized data localized provider found factory fallbacks default locale enus php faker fakerfactorycreatefrfr create french faker echo fakername n luce du coulon auguste dupont roger le voisin alexandre lacroix jacques humbertroy therese guilletandre gilles grosbodin amelie pires marcel laporte genevieve marchal check available faker locales source code provider directory localization faker ongoing process need help dont hesitate create localized providers locale submit pr populating entities using orm odm faker provides adapters objectrelational objectdocument mappers currently propel doctrine cakephp spot mandango eloquent supported adapters ease population databases entity classes provided orm library population document stores using document classes provided odm library populate entities create new populator class using generator instance parameter list class number entities must generated launch actual data population call execute method note populators could require additional parameters example doctrine populator option specify batchsize often flush unitofwork database example showing populate author book objects php generator fakerfactorycreate populator new fakerormpropelpopulatorgenerator populatoraddentityauthor populatoraddentitybook insertedpks populatorexecute populator uses name column type guessers populate column relevant data instance faker populates column named firstname using firstname formatter column timestamp type using datetime formatter resulting entities therefore coherent faker misinterprets column name still specify custom closure used populating particular column using third argument addentity php populatoraddentitybook array isbn function use generator return generatorean example faker guess formatter columns except isbn given anonymous function used tip ignore columns specify null column names third argument addentity usually necessary columns added behavior php populatoraddentitybook array createdat null updatedat null course faker populate autoincremented primary keys addition fakerormpropelpopulatorexecute returns list inserted pks indexed class php printrinsertedpks array author book note due fact faker returns primary keys inserted memory consumption go drastically batch inserts due big list data previous example book author models share relationship since author entities populated first faker smart enough relate populated book entities one populated author entities lastly want execute arbitrary function entity insertion use fourth argument addentity method php populatoraddentitybook array array functionbook bookpublish seeding generator may want get always generated data instance using faker unit testing purposes generator offers seed method seeds random number generator calling script twice seed produces results php faker fakerfactorycreate fakerseed echo fakername jess mraz tip datetime formatters wont reproduce fake data dont fix max value php even seeded line return different results max varies fakerdatetime equivalent fakerdatetimemax make sure fix max parameter fakerdatetime return always date seeded tip formatters wont reproduce fake data use rand php function use faker mtrand instead php bad fakerrealtextrand good fakerrealtextfakernumberbetween faker internals understanding providers fakergenerator alone cant much generation needs fakerprovider objects delegate data generation fakerfactorycreate actually creates fakergenerator bundled default providers happens hood php faker new fakergenerator fakeraddprovidernew fakerproviderenuspersonfaker fakeraddprovidernew fakerproviderenusaddressfaker fakeraddprovidernew fakerproviderenusphonenumberfaker fakeraddprovidernew fakerproviderenuscompanyfaker fakeraddprovidernew fakerproviderloremfaker fakeraddprovidernew fakerproviderinternetfaker whenever try access property faker object generator looks method name providers attached instance calling fakername triggers call fakerproviderpersonname since faker starts last provider easily override existing formatters add provider containing methods named formatters want override means easily add providers fakergenerator instance provider usually class extending fakerproviderbase parent class allows use methods like lexify randomnumber also gives access formatters providers protected generator property new formatters public methods provider class example provider populating book data php namespace fakerprovider class book extends fakerproviderbase public function titlenbwords sentence thisgeneratorsentencenbwords return substrsentence strlensentence public function isbn return thisgeneratorean register provider add new instance fakerproviderbook existing generator php fakeraddprovidernew fakerproviderbookfaker use two new formatters like faker formatter php book new book booksettitlefakertitle booksetisbnfakerisbn booksetsummaryfakertext booksetpricefakerrandomnumber tip provider also plain old php object case public methods provider become available generator real life usage following script generates valid xml document php requireonce pathtofakersrcautoloadphp faker fakerfactorycreate xml version encodingutf contacts php contact firstnamephp echo fakerfirstname lastnamephp echo fakerlastname emailphp echo fakeremail phone numberphp echo fakerphonenumber php fakerboolean birth datephp echo fakerdatetimethiscenturyformatymd placephp echo fakercity php endif address streetphp echo fakerstreetaddress street cityphp echo fakercity city postcodephp echo fakerpostcode postcode statephp echo fakerstate state address company namephp echo fakercompany catchphrasephp echo fakercatchphrase php fakerboolean offerphp echo fakerbs offer php endif php fakerboolean director namephp echo fakername php endif company php fakerboolean details cdata php echo fakertext details php endif contact php endfor contacts running script produces document looking like xml version encodingutf contacts contact firstnameona lastnamebednar emailschambergerfrankwuckertcom phone numberx address street harrison covestreet citynorth lloydcity postcodepostcode statealabamastate address company nameveum funk shanahan catchphrasefunctionbased stable solution offerorchestrate compelling webreadinessoffer company details cdata alias accusantium voluptatum autem nobis cumque neque modi voluptatem error molestiae consequatur alias illum commodi molestiae aut repellat id et sit consequuntur aut et ullam asperiores cupiditate culpa voluptatem et mollitia dolor nisi praesentium qui ut details contact contact firstnameaurelie lastnamepaucek emailalfonzodurgancom phone numberx address street hegmann inletstreet citysouth geovanymouthcity postcodepostcode statecoloradostate address company namekrajcikgrimes catchphraseswitchable cohesive instructionset company contact contact firstnameclifton lastnamekshlerin emailkiannawiegandframiwymaninfo phone number address street nona cornerstreet cityharberhavencity postcodepostcode staterhodeislandstate address company namerosenbaumaufderhar catchphraserealigned asynchronous encryption company contact contact firstnamealexandre lastnameorn emailthelmaerdmancorwinbiz phone numberx address street schultz viastreet cityfeilstadcity postcodepostcode statenewjerseystate address company nameoharaprosacco catchphrasereengineered solutionoriented algorithm director namedr berenice auer v company details cdata ut itaque et quaerat doloremque eum praesentium rerum saepe dolorem explicabo qui consequuntur commodi minima rem harum temporibus rerum dolores non molestiae id dolorem placeat aut asperiores nihil eius repellendus vero nihil corporis voluptatem explicabo commodi occaecati omnis blanditiis beatae quod aspernatur eos details contact contact firstnamekatelynn lastnamekohler emailreingertrudiestiedemannjakubowskicom phone number address street nader village suite street citymclaughlinstadcity postcodepostcode statemissouristate address company namehermantremblay catchphraseobjectbased explicit servicedesk offerexpedite viral synergiesoffer director namearden deckow company contact contact firstnameblanca lastnamestark emailtadfeestnet phone numberx address street kuvalis plazastreet citysouth wilfridcity postcodepostcode stategeorgiastate address company nameupton braun rowe catchphrasevisionary leadingedge pricingstructure company contact contact firstnamerene lastnamespencer emailanibalarmstronginfo phone numberx birth date placezulaufborough address street daisha landing apt street citywest lizethhavencity postcodepostcode statewestvirginiastate address company namewiza inc catchphrasepersevering reciprocal approach offerorchestrate dynamic networksoffer director nameerwin nienow company details cdata dolorem consequatur voluptates unde optio unde accusantium dolorem est est architecto impedit corrupti et provident quo reprehenderit dolores aut quidem suscipit repudiandae corporis error molestiae enim aperiam illo et similique qui non expedita quia dolorum ex rem incidunt ea accusantium temporibus minus non details contact contact firstnamealessandro lastnamehagenes emailtbreitenbergoharagorczanycom phone number address street koelpin missionstreet citynorth revastadcity postcodepostcode statemarylandstate address company namestiedemannbruen catchphrasereengineered success company contact contact firstnamenovella lastnamerutherford emailclaudbogisichbiz phone number address street langworth hills apt street citynew carloscity postcodepostcode statewyomingstate address company namestromanlegros catchphraseexpanded thgeneration moratorium director nameearlene bayer company contact contact firstnameandreane lastnamemann emailmeggieornbaumbachcom phone numberx birth date placestantonborough address street kreiger station apt street citykaydenmouthcity postcodepostcode statewyomingstate address company namelebsack bernhard kiehn catchphrasepersevering actuating framework offergrow sticky portalsoffer company details cdata quia dolor ut quia error libero enim facilis iusto earum et minus rerum assumenda quia doloribus et reprehenderit ut occaecati voluptatum dolor voluptatem vitae qui velit quia fugiat non itaque sunt nobis totam sed nesciunt est deleniti cumque alias repudiandae quo aut numquam modi dicta libero details contact contacts language specific formatters fakerproviderarsaperson php echo fakeridnumber id number echo fakernationalidnumber citizen id number echo fakerforeigneridnumber foreigner id number echo fakercompanyidnumber company id number fakerproviderarsapayment php echo fakerbankaccountnumber saibyzvzjsecvxc fakerprovideratatpayment php echo fakervat u austrian value added tax number echo fakervatfalse atu unspaced austrian value added tax number fakerproviderbgbgpayment php echo fakervat bg bulgarian value added tax number echo fakervatfalse bg unspaced bulgarian value added tax number fakerprovidercsczaddress php echo fakerregion liberecky kraj fakerprovidercsczcompany php generates valid ico echo fakerico fakerprovidercsczdatetime php echo fakermonthnamegenitive prosince echo fakerformatteddate listopadu fakerprovidercsczperson php echo fakerbirthnumber fakerproviderdadkperson php generates random cpr number echo fakercpr fakerproviderdadkaddress php generates random kommune name echo fakerkommune frederiksberg generates random region name echo fakerregion region sjlland fakerproviderdadkcompany php generates random cvr number echo fakercvr generates random p number echo fakerp fakerproviderdechperson php generates random avsahv social security number echo fakeravs echo fakerahv fakerproviderdedepayment php echo fakerbankaccountnumber de echo fakerbank volksbank stuttgart fakerproviderenhkaddress php generates fake town name based words commonly found hong kong echo fakertown yuen long generates fake village name based words commonly found hong kong echo fakervillage tau generates fake estate name based words commonly found hong kong echo fakerestate ching lai court fakerproviderenhkphone php generates hong kong mobile number starting echo fakermobilenumber generates hong kong landline number starting echo fakerlandlinenumber generates hong kong fax number starting echo fakerfaxnumber fakerproviderenngaddress php generates random region name echo fakerregion katsina fakerproviderenngperson php generates random person name echo fakername oluwunmi mayowa fakerproviderennzphone php generates cell mobile phone number echo fakermobilenumber generates toll free number echo fakertollfreenumber area code echo fakerareacode fakerproviderenuscompany php generate random employer identification number echo fakerein fakerproviderenuspayment php echo fakerbankaccountnumber echo fakerbankroutingnumber fakerproviderenusperson php generates random social security number echo fakerssn fakerproviderenzacompany php generates random company registration number echo fakercompanynumber fakerproviderenzaperson php generates random national identification number echo fakeridnumber generates random valid licence code echo fakerlicencecode eb fakerproviderenzaphonenumber php generates special rate toll free phone number echo fakertollfreenumber generates mobile phone number echo fakermobilenumber fakerprovideresesperson php generates documento nacional de identidad dni number echo fakerdni e generates random valid licence code echo fakerlicencecode b fakerprovideresespayment php generates codigo de identificacion fiscal cif number echo fakervat fakerprovideresesphonenumber php generates special rate toll free phone number echo fakertollfreenumber generates mobile phone number echo fakermobilenumber fakerproviderespeperson php generates peruvian documento nacional de identidad dni number echo fakerdni fakerproviderfairperson php generates valid nationalcode echo fakernationalcode fakerproviderfairaddress php generates random building name echo fakerbuilding returns random city name echo fakercity fakerproviderfaircompany php generates random contract type echo fakercontract fakerproviderfifipayment php generates random bank account number echo fakerbankaccountnumber fi fakerproviderfifiperson php generates valid finnish personal identity number finnish henkilotunnus echo fakerpersonalidentitynumber j since numbers different male female persons optionally specify gender echo fakerpersonalidentitynumberdatetimecreatefromformatymd female ab fakerproviderfrbepayment php echo fakervat belgian value added tax number echo fakervatfalse unspaced belgian value added tax number fakerprovideresveperson php generate cedula de identidad number pass one argument add separator echo fakernationalid v fakerprovideresvecompany php generates rif number pass one argument add separators echo fakertaxpayeridentificationnumber j fakerproviderfrchperson php generates random avsahv social security number echo fakeravs fakerproviderfrfraddress php generates random department name echo fakerdepartmentname hautrhin generates random department number echo fakerdepartmentnumber b generates random department info department number department name fakerdepartment array cher generates random region echo fakerregion saintpierreetmiquelon generates random appartementstair echo fakersecondaryaddress bat fakerproviderfrfrcompany php generates random siren number echo fakersiren generates random siret number echo fakersiret fakerproviderfrfrpayment php generates random vat echo fakervat fr fakerproviderfrfrperson php generates random nir securite sociale number echo fakernir fakerproviderfrfrphonenumber php generates phone numbers echo fakerphonenumber echo fakermobilenumber echo fakerservicenumber fakerproviderheilpayment php echo fakerbankaccountnumber il fakerproviderhrhrpayment php echo fakerbankaccountnumber hr fakerproviderhuhupayment php generates random bank account number echo fakerbankaccountnumber hu fakerproviderididperson php generates random nomor induk kependudukan nik first argument gender either persongendermale persongenderfemale none specified random gender used second argument birth date datetime object none specified random birth date used echo fakernik fakerprovideritchperson php generates random avsahv social security number echo fakeravs fakerproviderititcompany php generates random vat id echo fakervatid fakerproviderititperson php generates random tax id code codice fiscale echo fakertaxid dixdpzefa fakerproviderjajpperson php generates kana name echo fakerkananamegender nullmalefemale generates kana first name echo fakerfirstkananamegender nullmalefemale generates kana first name male echo fakerfirstkananamemale generates kana first name female echo fakerfirstkananamefemale generates kana last name echo fakerlastkananame fakerproviderkagepayment php generates random bank account number echo fakerbankaccountnumber gezv fakerproviderkkkzcompany php generates business identification number echo fakerbusinessidentificationnumber fakerproviderkkkzpayment php generates random bank name echo fakerbank generates random bank account number echo fakerbankaccountnumber kzlohxi fakerproviderkkkzperson php generates individual identification number echo fakerindividualidentificationnumber generates individual identification number based hisher birth date echo fakerindividualidentificationnumbernew datetime fakerproviderkokraddress php generates metropolitan city echo fakermetropolitancity generates borough echo fakerborough fakerproviderkokrphonenumber php generates local area phone numer echo fakerlocalareaphonenumber generates cell phone number echo fakercellphonenumber fakerproviderltltpayment php echo fakerbankaccountnumber lt fakerproviderlvlvperson php generates random personal identity card number echo fakerpersonalidentitynumber fakerprovidermsmyaddress php generates random malaysian township echo fakertownship taman bahagia generates random malaysian town address matching postcode state echo fakertownstate bukit bintang kuala lumpur fakerprovidermsmymiscellaneous php generates random vehicle license plate number echo fakerjpjnumberplate wpl fakerprovidermsmypayment php generates random malaysian bank echo fakerbank maybank generates random malaysian bank account number digits echo fakerbankaccountnumber generates random malaysian insurance company echo fakerinsurance aia malaysia generates random malaysian bank swift code echo fakerswiftcode mbbemyklxxx fakerprovidermsmyperson php generates random personal identity card mykad number echo fakermykadnumbergender nullmalefemale hyphen nulltruefalse fakerprovidermsmyphonenumber php generates random malaysian mobile number echo fakermobilenumbercountrycodeprefix nulltruefalse formatting nulltruefalse generates random malaysian landline number echo fakerfixedlinenumbercountrycodeprefix nulltruefalse formatting nulltruefalse generates random malaysian voip number echo fakervoipnumbercountrycodeprefix nulltruefalse formatting nulltruefalse fakerprovidernenpaddress php generates nepali district name echo fakerdistrict generates nepali city name echo fakercityname fakerprovidernlbepayment php echo fakervat belgian value added tax number echo fakervatfalse unspaced belgian value added tax number fakerprovidernlbeperson php echo fakerrrn belgian rijksregisternummer echo fakerrrnfemale belgian rijksregisternummer female fakerprovidernlnlcompany php echo fakerjobtitle houtbewerker echo fakervat nlb dutch value added tax number echo fakerbtw nlb dutch value added tax number alias fakerprovidernlnlperson php echo fakeridnumber dutch personal identification number bsn fakerprovidernbnomobilenumber php generates random norwegian mobile phone number echo fakermobilenumber echo fakermobilenumber echo fakermobilenumber fakerprovidernbnopayment php generates random bank account number echo fakerbankaccountnumber fakerproviderplplperson php generates random pesel number echo fakerpesel generates random personal identity card number echo fakerpersonalidentitynumber akx generates random taxpayer identification number nip echo fakertaxpayeridentificationnumber fakerproviderplplcompany php generates random regon number echo fakerregon generates random local regon number echo fakerregonlocal fakerproviderplplpayment php generates random bank name echo fakerbank narodowy bank polski generates random bank account number echo fakerbankaccountnumber pl fakerproviderptptperson php generates random taxpayer identification number portuguese numero de identificacao fiscal nif echo fakertaxpayeridentificationnumber fakerproviderptbraddress php generates random region name echo fakerregion nordeste generates random region abbreviation echo fakerregionabbr ne fakerproviderptbrphonenumber php echo fakerareacode echo fakercellphone echo fakerlandline echo fakerphone random landline digit digit cellphone number using phone functions false argument returns unformatted numbers echo fakercellphonefalse cellphone special second argument add th digit ignored generated radio number echo fakercellphonetrue true using number suffix adds area code phone echo fakercellphonenumber echo fakerlandlinenumberfalse echo fakerphonenumber formatted random landline cellphone obeying th digit rule echo fakerphonenumbercleared formatted random landline cellphone obeying th digit rule fakerproviderptbrperson php name generator may include double first double last names plus title suffix echo fakername sr luis adriano sepulveda filho valid document generators boolean argument remove formatting echo fakercpf echo fakercpffalse echo fakerrg echo fakerrgfalse fakerproviderptbrcompany php generates brazilian formatted valid cnpj echo fakercnpj echo fakercnpjfalse fakerproviderromdpayment php generates random bank account number echo fakerbankaccountnumber mdbqwckmuwhbesdpa fakerproviderroropayment php generates random bank account number echo fakerbankaccountnumber rowrjeoexyqijue fakerproviderroroperson php generates random male name prefixtitle echo fakerprefixmale ing generates random female name prefixtitle echo fakerprefixfemale dna generates random male first name echo fakerfirstnamemale adrian generates random female first name echo fakerfirstnamefemale miruna generates random personal numerical code cnp echo fakercnp valid option values gender null random male female dateofbirth null random ymd ym random day random month day ie county letter iso ro county codes b b b b b b bucharests sectors isresident truefalse flag person resides romania echo fakercnpgender null dateofbirth null county null isresident true fakerproviderrorophonenumber php generates random tollfree phone number echo fakertollfreephonenumber generates random premiumrate phone number echo fakerpremiumratephonenumber fakerproviderrurupayment php generates russian bank name based list real russian banks echo fakerbank generate russian tax payment number company echo fakerinn generate russian tax code company echo fakerkpp fakerprovidersvsepayment php generates random bank account number echo fakerbankaccountnumber se fakerprovidersvseperson php generates valid swedish personal identity number swedish personnummer echo fakerpersonalidentitynumber since numbers different male female persons optionally specify gender echo fakerpersonalidentitynumberfemale fakerprovidertrtrperson php generates valid turkish identity number turkish tc kimlik echo fakertcno fakerproviderzhcnpayment php generates random bank name based list real chinese banks echo fakerbank fakerproviderukuapayment php generates ukraine bank name based list real ukraine banks echo fakerbank fakerproviderzhtwperson php generates random personal identify number echo fakerpersonalidentitynumber fakerproviderzhtwcompany php generates random vat company tax number echo fakervat thirdparty libraries extendingbased faker symfony bundles willdurandfakerbundle put awesome faker library symfony dic populate database fake data hautelookalicebundle hccalicefixturesbundle bundles using nelmioalice faker data fixtures able use doctrine orm well doctrine mongodb odm emanueleminottofakerserviceprovider faker service provider silex bitfakercli command line tool faker php library leaguefactorymuffin enable rapid creation objects php port factorygirl fzaninottocompanynamegenerator generate names english tech companies class emanueleminottofakerplaceholditprovider generate images using placeholdit spyritdatalea highly customizable random test data generator web app frequencnewageipsum new aged ipsum provider faker library inspired httpsebpearcecombullshit prewkxmlfaker create fake xml faker denheckfakercontext behat context using faker generate testdata swekajcronexpressiongenerator faker provider generating random valid cron expressions pragmafabrikpommfaker faker client pomm database framework postgresql nelmioalice fixturesobject generator yaml dsl use faker data generator ravagecakephpfakeseeder cakephp x shell seed database fake andor fixed data bhellerimagesgenerator image generator provider using gd placeholder type pictures patternlabpluginfaker pattern lab styleguide component library prototyping tool creates unique content time pattern lab generated guidocellaeloquentpopulator adapter laravels eloquent orm tamperdataexiges faker provider generating random temperatures jzontafakerrestaurant faker food beverage names generate aalaapfakeryoutube faker youtube urls various formats pelmeredfakecar faker cars car data bluemmbfakerpicsumphotosprovider generate images using picsumphotos erzfakemock generate mocks using classconfiguration detection via fakers guesser symfony asserts xvladqtfakerloremflickr generate images using loremflickrcom metrakitfakereddymalou generate french eddy malou sentences paragraphs drupolbelgiannationalnumberfaker generate fake belgian national numbers elgentosmasquerade configurationbased platformagnostic localecompatible data faker tool outofthebox support magento ottavianofakergravatar generate avatars using gravatar finwephpstanfaker phpstan extension faker methods license faker released mit license see bundled license file details,faker faker php librari gener fake data whether need bootstrap databas creat goodlook xml document fillin persist stress test anonym data taken product servic faker faker heavili inspir perl datafak rubi faker faker requir php tabl content instal basic usag formatt base lorem ipsum text person address phone number compani real text date time internet user agent payment color file imag uuid barcod miscellan bias html lorem modifi local popul entiti use orm odm seed gener faker intern understand provid real life usag languag specif formatt thirdparti librari extendingbas faker licens instal compos requir fzaninottofak basic usag autoload faker support psr psr autoload php instal via compos requireonc vendorautoloadphp also load faker ship psr autoload php load faker autoload requireonc pathtofakersrcautoloadphp altern use anoth psr compliant autoload creat fake data use fakerfactorycr creat initi faker gener gener data access properti name type data want php use factori creat fakergener instanc faker fakerfactorycr gener data access properti echo fakernam luci cechtelar echo fakeraddress jordi lodg cartwrightshir sc echo fakertext dolor sit sint laboriosam dolorem culpa et autem beata nam sunt fugit et sit et mollitia sed fuga deserunt tempora facer magni omni omni quia temporibu laudantium sit minima sint even exampl show properti access call fakernam yield differ random result faker use get magic forward fakergeneratorproperti call fakergeneratorformatproperti php echo fakernam n adalin reichel dr santa prosacco dvm noemi vandervort v lexi oconn graci weber rosco john emmett lebsack keegan thiel wellington koelpin ii ms karley kiehn v tip quick gener fake data also use faker command line tool thank fakercli formatt gener properti like name address lorem call formatt faker gener mani packag provid list bundl formatt default local fakerproviderbas randomdigit randomdigitnot randomdigitnotnul randomnumbernbdigit null strict fals randomfloatnbmaxdecim null min max null numberbetweenmin max randomlett b return randomli order subsequ provid array randomelementsarray array abc count arrayc randomelementarray array abc b shufflehello world rloh eoldlw shufflearray array numerifyhello hello lexifyhello hello wgt bothifyhello hello jz asciifyhello hello r regexifyazazaz smykaej fakerproviderlorem word aut wordsnb astext fals arrayporro sed magni sentencenbword variablenbword true sit vita volupta sint non volupt sentencesnb astext fals arrayoptio quo qui illo error laborum vero officia id corpori saep provid ess hic eligendi paragraphnbsent variablenbsent true ut ab volupta sed nam sint autem inventor aut officia aut aut blanditii ducimu eo odit amet et est ut eum paragraphsnb astext fals arrayquidem ut sunt et quidem est accusamu aut fuga est placeat rerum ut enim ex eveniet facer sunt aut nam et eum architecto fugit repellendu illo qui ex ess veritati possimu omni aut incidunt sunt asperior incidunt iur sequi cum culpa rem rerum exercitationem est rem textmaxnbchar fuga totam reiciendi qui architecto fugiat nemo consequatur recusanda qui cupidit eo quod fakerproviderenusperson titlegend nullmalefemal ms titlemal mr titlefemal ms suffix jr namegend nullmalefemal dr zane stroman firstnamegend nullmalefemal maynard firstnamemal maynard firstnamefemal rachel lastnam zulauf fakerproviderenusaddress cityprefix lake secondaryaddress suit state newmexico stateabbr oh citysuffix borough streetsuffix key buildingnumb citi west judg streetnam keegan trail streetaddress karley loaf suit postcod address cum vista apt susanburi ny countri falkland island malvina latitudemin max longitudemin max fakerproviderenusphonenumb phonenumb x tollfreephonenumb ephonenumb fakerproviderenuscompani catchphras monitor region conting bs eenabl robust architectur compani bogantreutel companysuffix son jobtitl cashier fakerproviderenustext realtextmaxnbchar indexs yet wish could manag made alic ask shrill passion voic would like cat never even spoke time perhap alic repli fakerproviderdatetim unixtimemax datetimemax timezon null datetim utc datetimeadmax timezon null datetim europepari isomax dateformat ymd max timeformat max datetimebetweenstartd year enddat timezon null datetim africalago datetimeinintervalstartd year interv day timezon null datetim antarticavostok datetimethiscenturymax timezon null datetim utc datetimethisdecademax timezon null datetim europepari datetimethisyearmax timezon null datetim africalago datetimethismonthmax timezon null datetim antarcticavostok ampmmax pm dayofmonthmax dayofweekmax friday monthmax monthnamemax januari yearmax centuri vi timezon europepari method accept timezon argument default datedefaulttimezoneget pass custom timezon string method defin custom timezon time method use fakersetdefaulttimezonetimezon fakerproviderinternet email tkshlerincollinscom safeemail kingalfordexampleorg freeemail bradleygmailcom companyemail russeldurwardmcdermottorg freeemaildomain yahoocom safeemaildomain exampleorg usernam wade password kxa domainnam wolffdeckownet domainword feeney tld biz url httpwwwskilesdonnellybizautaccusantiumutarchitectositethtml slug autrepellatcommodivelitaquenihilidsaepenostrum ipv localipv ipv edeeafcfc macaddress bca fakerprovideruserag userag mozilla window ce applewebkit khtml like gecko chrome safari chrome mozilla macintosh ppc mac os x applewebkit khtml like gecko chrome safari firefox mozilla x linuxi rv gecko firefox safari mozilla macintosh u ppc mac os x rv enu applewebkit khtml like gecko version safari opera opera window nt enu presto version internetexplor mozilla compat msie window win x trident fakerproviderpay creditcardtyp mastercard creditcardnumb creditcardexpirationd creditcardexpirationdatestr creditcarddetail arraymastercard aleksand nowak gener random iban set countrycod null random countri ibancountrycod itayzdjbp swiftbicnumb rztiat fakerprovidercolor hexcolor facc rgbcolor rgbcolorasarray array rgbcsscolor rgb safecolornam fuchsia colornam gainsbor hslcolor hslcolorasarray array fakerproviderfil fileextens avi mimetyp videoxmsvideo copi random file sourc target directori return fullpath filenam filesourcedir tmp targetdir tmp pathtotargetdirbedaebeaafabcjpg filesourcedir targetdir fals bedaebeaafabcjpg fakerproviderimag imag gener provid lorempixel httplorempixelcom imageurlwidth height httplorempixelcom imageurlwidth height cat httplorempixelcomcat imageurlwidth height cat true faker httplorempixelcomcatsfak imageurlwidth height cat true faker true httplorempixelcomgraycatsfak monochrom imag imagedir tmp width height tmpbedaebeaafabcjpg imagedir width height cat tmpbedaebeaafabcjpg cat imagedir width height cat fals bedaebeaafabcjpg filenam without path imagedir width height cat true fals random imag default true imagedir width height cat true true faker tmpbedaebeaafabcjpg cat faker text default null fakerprovideruuid uuid edbeabfcd fakerproviderbarcod ean ean isbn isbn fakerprovidermiscellan boolean fals booleanchanceofgettingtru true md deacfecd sha fefcaaebcaaabdec sha ecdaccddbaecaeaecfcea local enuk countrycod uk languagecod en currencycod eur emoji fakerproviderbias get random number chanc close biasednumberbetweenmin max function sqrt fakerproviderhtmllorem gener html document level deep element wide level randomhtml htmlheadtitleaut illo dolorem et accusantium eumtitleheadbodyform actionexamplecom methodpostlabel forusernamesequilabelinput typetext idusernamelabel forpasswordetlabelinput typepassword idpasswordformbid aut saep non mollitia volupta voluptasbtabletheadtrtrnon consequaturtrtrincidunt esttrtraut voluptatemtrtrofficia volupta rerum quotrtrasperior similiquetrtrtheadtbodytrtdsapient dolorum dolorem sint laboriosam commodi quitdtdcommodi nihil nesciunt eveniet quo repudiandaetdtdvolupt explicabo numquam distinctio necessitatibu repellattdtdprovid ut doloremqu nam eum modi aspernaturtdtdiusto inventoretdtrtrtdanimi nihil ration id mollitia libero ipsa quia temporetdtdvelit est officia et aut tenetur dolorem sed mollitia expeditatdtdmodi modi repudianda pariatur volupta rerum ea incidunt non molestia eligendi eo delenititdtdexercitationem voluptatibu dolor est ist quod molestiaetdtdquia reiciendistdtrtrtdinventor impedit exercitationem voluptatibu rerum cupiditatetdtdquitdtdaliquamtdtdautem nihil aut ettdtddolor ut quia errortdtrtrtdenim facili iusto earum et minu rerum assumenda qui quiatdtdreprehenderit ut sapient occaecati voluptatum dolor voluptatem vita qui velittdtdquod fugiat nontdtdsunt nobi totam mollitia sed nesciunt est delen cumquetdtdrepudianda quotdtrtrtdmodi dicta libero quisquam doloremqu qui autemtdtdvoluptatem aliquid saep laudantium facer eo sunt dolortdtdest eo qui laboriosam officia expedita repellendu quia natustdtdet nequ delectu quod fugit enim repudianda quitdtdfugit soluta sit facili facer repellat culpa magni voluptatem maior temporatdtrtrtdenim dolor doloremquetdtdassumenda voluptatem eum perferendi exercitationemtdtdquasi fugit deserunt ea perferendi sunt nemo consequatur dolorum solutatdtdmaxim repellat qui numquam voluptatem est moditdtdalia rerum rerum hic hic eveniettdtrtrtdtempor voluptatemtdtdeaquetdtdet sit qua fugit iustotdtdnemo nihil rerum dignissimo et essetdtdrepudianda ipsum numquamtdtrtrtdnemo sunt quiatdtdsint tempor est nequ ducimu harum sedtdtddicta placeat atqu libero nihiltdtdet qui aperiam temporibu facili eumtdtdut dolor qui enim et maior nesciunttdtrtrtddolorum totam sint debiti saep laborumtdtdquidem corrupti eatdtdcum volupta quodtdtdpossimu consequatur quasi dolorem ut ettdtdet velit non hic labor repudianda quistdtrtbodytablebodyhtml modifi faker provid three special provid uniqu option valid call provid uniqu forc provid return uniqu valu valu array get random digit alway new one avoid duplic valu fakeruniquerandomdigit printrvalu provid limit rang throw except new uniqu valu gener valu array tri valu fakeruniquerandomdigitnotnul catch overflowexcept e echo uniqu digit null faker cant gener reset uniqu modifi provid pass true first argument fakeruniquereset truerandomdigitnotnul throw overflowexcept sinc uniqu reset tip uniqu keep one array valu per provid option sometim bypass provid return default valu instead default null valu array get random digit also null sometim valu fakeroptionalrandomdigit printrvalu null null null null option accept weight argument specifi probabl receiv default valu alway return default valu alway return provid default weight chanc fakeroptionalweight randomdigit chanc null fakeroptionalweight randomdigit chanc null option accept default argument specifi default valu return default null fakeroptionalweight default falserandomdigit chanc fals fakeroptionalweight default abcword chanc abc valid accept valid valu accord pass valid function valu array evenvalid functiondigit &#9; return digit &#9; valu fakervalidevenvalidatorrandomdigit printrvalu like uniqu valid throw overflow except cant gener valid valu valu array tri fakervalidevenvalidatorrandomel catch overflowexcept e echo cant pick even number set would like use modifi valu gener faker use passthrough method passthrough simpli return whatev valu given fakeroptionalpassthroughmtrand local fakerfactori take local argument return local data local provid found factori fallback default local enu php faker fakerfactorycreatefrfr creat french faker echo fakernam n luce du coulon august dupont roger le voisin alexandr lacroix jacqu humbertroy theres guilletandr gill grosbodin ameli pire marcel laport geneviev marchal check avail faker local sourc code provid directori local faker ongo process need help dont hesit creat local provid local submit pr popul entiti use orm odm faker provid adapt objectrel objectdocu mapper current propel doctrin cakephp spot mandango eloqu support adapt eas popul databas entiti class provid orm librari popul document store use document class provid odm librari popul entiti creat new popul class use gener instanc paramet list class number entiti must gener launch actual data popul call execut method note popul could requir addit paramet exampl doctrin popul option specifi batchsiz often flush unitofwork databas exampl show popul author book object php gener fakerfactorycr popul new fakerormpropelpopulatorgener populatoraddentityauthor populatoraddentitybook insertedpk populatorexecut popul use name column type guesser popul column relev data instanc faker popul column name firstnam use firstnam formatt column timestamp type use datetim formatt result entiti therefor coher faker misinterpret column name still specifi custom closur use popul particular column use third argument addent php populatoraddentitybook array isbn function use gener return generatorean exampl faker guess formatt column except isbn given anonym function use tip ignor column specifi null column name third argument addent usual necessari column ad behavior php populatoraddentitybook array createdat null updatedat null cours faker popul autoincr primari key addit fakerormpropelpopulatorexecut return list insert pk index class php printrinsertedpk array author book note due fact faker return primari key insert memori consumpt go drastic batch insert due big list data previou exampl book author model share relationship sinc author entiti popul first faker smart enough relat popul book entiti one popul author entiti lastli want execut arbitrari function entiti insert use fourth argument addent method php populatoraddentitybook array array functionbook bookpublish seed gener may want get alway gener data instanc use faker unit test purpos gener offer seed method seed random number gener call script twice seed produc result php faker fakerfactorycr fakerse echo fakernam jess mraz tip datetim formatt wont reproduc fake data dont fix max valu php even seed line return differ result max vari fakerdatetim equival fakerdatetimemax make sure fix max paramet fakerdatetim return alway date seed tip formatt wont reproduc fake data use rand php function use faker mtrand instead php bad fakerrealtextrand good fakerrealtextfakernumberbetween faker intern understand provid fakergener alon cant much gener need fakerprovid object deleg data gener fakerfactorycr actual creat fakergener bundl default provid happen hood php faker new fakergener fakeraddprovidernew fakerproviderenuspersonfak fakeraddprovidernew fakerproviderenusaddressfak fakeraddprovidernew fakerproviderenusphonenumberfak fakeraddprovidernew fakerproviderenuscompanyfak fakeraddprovidernew fakerproviderloremfak fakeraddprovidernew fakerproviderinternetfak whenev tri access properti faker object gener look method name provid attach instanc call fakernam trigger call fakerproviderpersonnam sinc faker start last provid easili overrid exist formatt add provid contain method name formatt want overrid mean easili add provid fakergener instanc provid usual class extend fakerproviderbas parent class allow use method like lexifi randomnumb also give access formatt provid protect gener properti new formatt public method provid class exampl provid popul book data php namespac fakerprovid class book extend fakerproviderbas public function titlenbword sentenc thisgeneratorsentencenbword return substrsent strlensent public function isbn return thisgeneratorean regist provid add new instanc fakerproviderbook exist gener php fakeraddprovidernew fakerproviderbookfak use two new formatt like faker formatt php book new book booksettitlefakertitl booksetisbnfakerisbn booksetsummaryfakertext booksetpricefakerrandomnumb tip provid also plain old php object case public method provid becom avail gener real life usag follow script gener valid xml document php requireonc pathtofakersrcautoloadphp faker fakerfactorycr xml version encodingutf contact php contact firstnamephp echo fakerfirstnam lastnamephp echo fakerlastnam emailphp echo fakeremail phone numberphp echo fakerphonenumb php fakerboolean birth datephp echo fakerdatetimethiscenturyformatymd placephp echo fakerc php endif address streetphp echo fakerstreetaddress street cityphp echo fakerc citi postcodephp echo fakerpostcod postcod statephp echo fakerst state address compani namephp echo fakercompani catchphrasephp echo fakercatchphras php fakerboolean offerphp echo fakerb offer php endif php fakerboolean director namephp echo fakernam php endif compani php fakerboolean detail cdata php echo fakertext detail php endif contact php endfor contact run script produc document look like xml version encodingutf contact contact firstnameona lastnamebednar emailschambergerfrankwuckertcom phone numberx address street harrison covestreet citynorth lloydciti postcodepostcod statealabamast address compani nameveum funk shanahan catchphrasefunctionbas stabl solut offerorchestr compel webreadinessoff compani detail cdata alia accusantium voluptatum autem nobi cumqu nequ modi voluptatem error molestia consequatur alia illum commodi molestia aut repellat id et sit consequuntur aut et ullam asperior cupidit culpa voluptatem et mollitia dolor nisi praesentium qui ut detail contact contact firstnameaureli lastnamepaucek emailalfonzodurgancom phone numberx address street hegmann inletstreet citysouth geovanymouthc postcodepostcod statecoloradost address compani namekrajcikgrim catchphraseswitch cohes instructionset compani contact contact firstnameclifton lastnamekshlerin emailkiannawiegandframiwymaninfo phone number address street nona cornerstreet cityharberhavenc postcodepostcod staterhodeislandst address compani namerosenbaumaufderhar catchphraserealign asynchron encrypt compani contact contact firstnamealexandr lastnameorn emailthelmaerdmancorwinbiz phone numberx address street schultz viastreet cityfeilstadc postcodepostcod statenewjerseyst address compani nameoharaprosacco catchphrasereengin solutionori algorithm director namedr berenic auer v compani detail cdata ut itaqu et quaerat doloremqu eum praesentium rerum saep dolorem explicabo qui consequuntur commodi minima rem harum temporibu rerum dolor non molestia id dolorem placeat aut asperior nihil eiu repellendu vero nihil corpori voluptatem explicabo commodi occaecati omni blanditii beata quod aspernatur eo detail contact contact firstnamekatelynn lastnamekohl emailreingertrudiestiedemannjakubowskicom phone number address street nader villag suit street citymclaughlinstadc postcodepostcod statemissourist address compani namehermantremblay catchphraseobjectbas explicit servicedesk offerexpedit viral synergiesoff director namearden deckow compani contact contact firstnameblanca lastnamestark emailtadfeestnet phone numberx address street kuvali plazastreet citysouth wilfridc postcodepostcod stategeorgiast address compani nameupton braun row catchphrasevisionari leadingedg pricingstructur compani contact contact firstnameren lastnamespenc emailanibalarmstronginfo phone numberx birth date placezulaufborough address street daisha land apt street citywest lizethhavenc postcodepostcod statewestvirginiast address compani namewiza inc catchphrasepersev reciproc approach offerorchestr dynam networksoff director nameerwin nienow compani detail cdata dolorem consequatur volupt und optio und accusantium dolorem est est architecto impedit corrupti et provid quo reprehenderit dolor aut quidem suscipit repudianda corpori error molestia enim aperiam illo et similiqu qui non expedita quia dolorum ex rem incidunt ea accusantium temporibu minu non detail contact contact firstnamealessandro lastnamehagen emailtbreitenbergoharagorczanycom phone number address street koelpin missionstreet citynorth revastadc postcodepostcod statemarylandst address compani namestiedemannbruen catchphrasereengin success compani contact contact firstnamenovella lastnamerutherford emailclaudbogisichbiz phone number address street langworth hill apt street citynew carlosc postcodepostcod statewyomingst address compani namestromanlegro catchphraseexpand thgener moratorium director nameearlen bayer compani contact contact firstnameandrean lastnamemann emailmeggieornbaumbachcom phone numberx birth date placestantonborough address street kreiger station apt street citykaydenmouthc postcodepostcod statewyomingst address compani namelebsack bernhard kiehn catchphrasepersev actuat framework offergrow sticki portalsoff compani detail cdata quia dolor ut quia error libero enim facili iusto earum et minu rerum assumenda quia doloribu et reprehenderit ut occaecati voluptatum dolor voluptatem vita qui velit quia fugiat non itaqu sunt nobi totam sed nesciunt est delen cumqu alia repudianda quo aut numquam modi dicta libero detail contact contact languag specif formatt fakerproviderarsaperson php echo fakeridnumb id number echo fakernationalidnumb citizen id number echo fakerforeigneridnumb foreign id number echo fakercompanyidnumb compani id number fakerproviderarsapay php echo fakerbankaccountnumb saibyzvzjsecvxc fakerprovideratatpay php echo fakervat u austrian valu ad tax number echo fakervatfals atu unspac austrian valu ad tax number fakerproviderbgbgpay php echo fakervat bg bulgarian valu ad tax number echo fakervatfals bg unspac bulgarian valu ad tax number fakerprovidercsczaddress php echo fakerregion liberecki kraj fakerprovidercsczcompani php gener valid ico echo fakerico fakerprovidercsczdatetim php echo fakermonthnamegenit prosinc echo fakerformattedd listopadu fakerprovidercsczperson php echo fakerbirthnumb fakerproviderdadkperson php gener random cpr number echo fakercpr fakerproviderdadkaddress php gener random kommun name echo fakerkommun frederiksberg gener random region name echo fakerregion region sjlland fakerproviderdadkcompani php gener random cvr number echo fakercvr gener random p number echo fakerp fakerproviderdechperson php gener random avsahv social secur number echo fakerav echo fakerahv fakerproviderdedepay php echo fakerbankaccountnumb de echo fakerbank volksbank stuttgart fakerproviderenhkaddress php gener fake town name base word commonli found hong kong echo fakertown yuen long gener fake villag name base word commonli found hong kong echo fakervillag tau gener fake estat name base word commonli found hong kong echo fakerest ching lai court fakerproviderenhkphon php gener hong kong mobil number start echo fakermobilenumb gener hong kong landlin number start echo fakerlandlinenumb gener hong kong fax number start echo fakerfaxnumb fakerproviderenngaddress php gener random region name echo fakerregion katsina fakerproviderenngperson php gener random person name echo fakernam oluwunmi mayowa fakerproviderennzphon php gener cell mobil phone number echo fakermobilenumb gener toll free number echo fakertollfreenumb area code echo fakerareacod fakerproviderenuscompani php gener random employ identif number echo fakerein fakerproviderenuspay php echo fakerbankaccountnumb echo fakerbankroutingnumb fakerproviderenusperson php gener random social secur number echo fakerssn fakerproviderenzacompani php gener random compani registr number echo fakercompanynumb fakerproviderenzaperson php gener random nation identif number echo fakeridnumb gener random valid licenc code echo fakerlicencecod eb fakerproviderenzaphonenumb php gener special rate toll free phone number echo fakertollfreenumb gener mobil phone number echo fakermobilenumb fakerprovideresesperson php gener documento nacion de identidad dni number echo fakerdni e gener random valid licenc code echo fakerlicencecod b fakerprovideresespay php gener codigo de identificacion fiscal cif number echo fakervat fakerprovideresesphonenumb php gener special rate toll free phone number echo fakertollfreenumb gener mobil phone number echo fakermobilenumb fakerproviderespeperson php gener peruvian documento nacion de identidad dni number echo fakerdni fakerproviderfairperson php gener valid nationalcod echo fakernationalcod fakerproviderfairaddress php gener random build name echo fakerbuild return random citi name echo fakerc fakerproviderfaircompani php gener random contract type echo fakercontract fakerproviderfifipay php gener random bank account number echo fakerbankaccountnumb fi fakerproviderfifiperson php gener valid finnish person ident number finnish henkilotunnu echo fakerpersonalidentitynumb j sinc number differ male femal person option specifi gender echo fakerpersonalidentitynumberdatetimecreatefromformatymd femal ab fakerproviderfrbepay php echo fakervat belgian valu ad tax number echo fakervatfals unspac belgian valu ad tax number fakerprovideresveperson php gener cedula de identidad number pass one argument add separ echo fakernationalid v fakerprovideresvecompani php gener rif number pass one argument add separ echo fakertaxpayeridentificationnumb j fakerproviderfrchperson php gener random avsahv social secur number echo fakerav fakerproviderfrfraddress php gener random depart name echo fakerdepartmentnam hautrhin gener random depart number echo fakerdepartmentnumb b gener random depart info depart number depart name fakerdepart array cher gener random region echo fakerregion saintpierreetmiquelon gener random appartementstair echo fakersecondaryaddress bat fakerproviderfrfrcompani php gener random siren number echo fakersiren gener random siret number echo fakersiret fakerproviderfrfrpay php gener random vat echo fakervat fr fakerproviderfrfrperson php gener random nir securit social number echo fakernir fakerproviderfrfrphonenumb php gener phone number echo fakerphonenumb echo fakermobilenumb echo fakerservicenumb fakerproviderheilpay php echo fakerbankaccountnumb il fakerproviderhrhrpay php echo fakerbankaccountnumb hr fakerproviderhuhupay php gener random bank account number echo fakerbankaccountnumb hu fakerproviderididperson php gener random nomor induk kependudukan nik first argument gender either persongendermal persongenderfemal none specifi random gender use second argument birth date datetim object none specifi random birth date use echo fakernik fakerprovideritchperson php gener random avsahv social secur number echo fakerav fakerproviderititcompani php gener random vat id echo fakervatid fakerproviderititperson php gener random tax id code codic fiscal echo fakertaxid dixdpzefa fakerproviderjajpperson php gener kana name echo fakerkananamegend nullmalefemal gener kana first name echo fakerfirstkananamegend nullmalefemal gener kana first name male echo fakerfirstkananamemal gener kana first name femal echo fakerfirstkananamefemal gener kana last name echo fakerlastkananam fakerproviderkagepay php gener random bank account number echo fakerbankaccountnumb gezv fakerproviderkkkzcompani php gener busi identif number echo fakerbusinessidentificationnumb fakerproviderkkkzpay php gener random bank name echo fakerbank gener random bank account number echo fakerbankaccountnumb kzlohxi fakerproviderkkkzperson php gener individu identif number echo fakerindividualidentificationnumb gener individu identif number base hisher birth date echo fakerindividualidentificationnumbernew datetim fakerproviderkokraddress php gener metropolitan citi echo fakermetropolitanc gener borough echo fakerborough fakerproviderkokrphonenumb php gener local area phone numer echo fakerlocalareaphonenumb gener cell phone number echo fakercellphonenumb fakerproviderltltpay php echo fakerbankaccountnumb lt fakerproviderlvlvperson php gener random person ident card number echo fakerpersonalidentitynumb fakerprovidermsmyaddress php gener random malaysian township echo fakertownship taman bahagia gener random malaysian town address match postcod state echo fakertownst bukit bintang kuala lumpur fakerprovidermsmymiscellan php gener random vehicl licens plate number echo fakerjpjnumberpl wpl fakerprovidermsmypay php gener random malaysian bank echo fakerbank maybank gener random malaysian bank account number digit echo fakerbankaccountnumb gener random malaysian insur compani echo fakerinsur aia malaysia gener random malaysian bank swift code echo fakerswiftcod mbbemyklxxx fakerprovidermsmyperson php gener random person ident card mykad number echo fakermykadnumbergend nullmalefemal hyphen nulltruefals fakerprovidermsmyphonenumb php gener random malaysian mobil number echo fakermobilenumbercountrycodeprefix nulltruefals format nulltruefals gener random malaysian landlin number echo fakerfixedlinenumbercountrycodeprefix nulltruefals format nulltruefals gener random malaysian voip number echo fakervoipnumbercountrycodeprefix nulltruefals format nulltruefals fakerprovidernenpaddress php gener nepali district name echo fakerdistrict gener nepali citi name echo fakercitynam fakerprovidernlbepay php echo fakervat belgian valu ad tax number echo fakervatfals unspac belgian valu ad tax number fakerprovidernlbeperson php echo fakerrrn belgian rijksregisternumm echo fakerrrnfemal belgian rijksregisternumm femal fakerprovidernlnlcompani php echo fakerjobtitl houtbewerk echo fakervat nlb dutch valu ad tax number echo fakerbtw nlb dutch valu ad tax number alia fakerprovidernlnlperson php echo fakeridnumb dutch person identif number bsn fakerprovidernbnomobilenumb php gener random norwegian mobil phone number echo fakermobilenumb echo fakermobilenumb echo fakermobilenumb fakerprovidernbnopay php gener random bank account number echo fakerbankaccountnumb fakerproviderplplperson php gener random pesel number echo fakerpesel gener random person ident card number echo fakerpersonalidentitynumb akx gener random taxpay identif number nip echo fakertaxpayeridentificationnumb fakerproviderplplcompani php gener random regon number echo fakerregon gener random local regon number echo fakerregonloc fakerproviderplplpay php gener random bank name echo fakerbank narodowi bank polski gener random bank account number echo fakerbankaccountnumb pl fakerproviderptptperson php gener random taxpay identif number portugues numero de identificacao fiscal nif echo fakertaxpayeridentificationnumb fakerproviderptbraddress php gener random region name echo fakerregion nordest gener random region abbrevi echo fakerregionabbr ne fakerproviderptbrphonenumb php echo fakerareacod echo fakercellphon echo fakerlandlin echo fakerphon random landlin digit digit cellphon number use phone function fals argument return unformat number echo fakercellphonefals cellphon special second argument add th digit ignor gener radio number echo fakercellphonetru true use number suffix add area code phone echo fakercellphonenumb echo fakerlandlinenumberfals echo fakerphonenumb format random landlin cellphon obey th digit rule echo fakerphonenumberclear format random landlin cellphon obey th digit rule fakerproviderptbrperson php name gener may includ doubl first doubl last name plu titl suffix echo fakernam sr lui adriano sepulveda filho valid document gener boolean argument remov format echo fakercpf echo fakercpffals echo fakerrg echo fakerrgfals fakerproviderptbrcompani php gener brazilian format valid cnpj echo fakercnpj echo fakercnpjfals fakerproviderromdpay php gener random bank account number echo fakerbankaccountnumb mdbqwckmuwhbesdpa fakerproviderroropay php gener random bank account number echo fakerbankaccountnumb rowrjeoexyqiju fakerproviderroroperson php gener random male name prefixtitl echo fakerprefixmal ing gener random femal name prefixtitl echo fakerprefixfemal dna gener random male first name echo fakerfirstnamemal adrian gener random femal first name echo fakerfirstnamefemal miruna gener random person numer code cnp echo fakercnp valid option valu gender null random male femal dateofbirth null random ymd ym random day random month day ie counti letter iso ro counti code b b b b b b bucharest sector isresid truefals flag person resid romania echo fakercnpgend null dateofbirth null counti null isresid true fakerproviderrorophonenumb php gener random tollfre phone number echo fakertollfreephonenumb gener random premiumr phone number echo fakerpremiumratephonenumb fakerproviderrurupay php gener russian bank name base list real russian bank echo fakerbank gener russian tax payment number compani echo fakerinn gener russian tax code compani echo fakerkpp fakerprovidersvsepay php gener random bank account number echo fakerbankaccountnumb se fakerprovidersvseperson php gener valid swedish person ident number swedish personnumm echo fakerpersonalidentitynumb sinc number differ male femal person option specifi gender echo fakerpersonalidentitynumberfemal fakerprovidertrtrperson php gener valid turkish ident number turkish tc kimlik echo fakertcno fakerproviderzhcnpay php gener random bank name base list real chines bank echo fakerbank fakerproviderukuapay php gener ukrain bank name base list real ukrain bank echo fakerbank fakerproviderzhtwperson php gener random person identifi number echo fakerpersonalidentitynumb fakerproviderzhtwcompani php gener random vat compani tax number echo fakervat thirdparti librari extendingbas faker symfoni bundl willdurandfakerbundl put awesom faker librari symfoni dic popul databas fake data hautelookalicebundl hccalicefixturesbundl bundl use nelmioalic faker data fixtur abl use doctrin orm well doctrin mongodb odm emanueleminottofakerserviceprovid faker servic provid silex bitfakercli command line tool faker php librari leaguefactorymuffin enabl rapid creation object php port factorygirl fzaninottocompanynamegener gener name english tech compani class emanueleminottofakerplaceholditprovid gener imag use placeholdit spyritdatalea highli customiz random test data gener web app frequencnewageipsum new age ipsum provid faker librari inspir httpsebpearcecombullshit prewkxmlfak creat fake xml faker denheckfakercontext behat context use faker gener testdata swekajcronexpressiongener faker provid gener random valid cron express pragmafabrikpommfak faker client pomm databas framework postgresql nelmioalic fixturesobject gener yaml dsl use faker data gener ravagecakephpfakeseed cakephp x shell seed databas fake andor fix data bhellerimagesgener imag gener provid use gd placehold type pictur patternlabpluginfak pattern lab styleguid compon librari prototyp tool creat uniqu content time pattern lab gener guidocellaeloquentpopul adapt laravel eloqu orm tamperdataexig faker provid gener random temperatur jzontafakerrestaur faker food beverag name gener aalaapfakeryoutub faker youtub url variou format pelmeredfakecar faker car car data bluemmbfakerpicsumphotosprovid gener imag use picsumphoto erzfakemock gener mock use classconfigur detect via faker guesser symfoni assert xvladqtfakerloremflickr gener imag use loremflickrcom metrakitfakereddymal gener french eddi malou sentenc paragraph drupolbelgiannationalnumberfak gener fake belgian nation number elgentosmasquerad configurationbas platformagnost localecompat data faker tool outofthebox support magento ottavianofakergravatar gener avatar use gravatar finwephpstanfak phpstan extens faker method licens faker releas mit licens see bundl licens file detail,faker faker php library generates fake data whether need bootstrap database create goodlooking xml document fillin persistence stress test anonymize data taken production service faker faker heavily inspired perls datafaker ruby faker faker requires php table content installation basic usage formatters base lorem ipsum text person address phone number company real text date time internet user agent payment color file image uuid barcode miscellaneous biased html lorem modifier localization populating entity using orm odm seeding generator faker internals understanding provider real life usage language specific formatters thirdparty library extendingbased faker license installation composer require fzaninottofaker basic usage autoloading faker support psr psr autoloader php installed via composer requireonce vendorautoloadphp also load faker shipped psr autoloader php load faker autoloader requireonce pathtofakersrcautoloadphp alternatively use another psr compliant autoloader create fake data use fakerfactorycreate create initialize faker generator generate data accessing property named type data want php use factory create fakergenerator instance faker fakerfactorycreate generate data accessing property echo fakername lucy cechtelar echo fakeraddress jordy lodge cartwrightshire sc echo fakertext dolores sit sint laboriosam dolorem culpa et autem beatae nam sunt fugit et sit et mollitia sed fuga deserunt tempora facere magni omnis omnis quia temporibus laudantium sit minimum sint even example show property access call fakername yield different random result faker us get magic forward fakergeneratorproperty call fakergeneratorformatproperty php echo fakername n adaline reichel dr santa prosacco dvm noemy vandervort v lexi oconner gracie weber roscoe john emmett lebsack keegan thiel wellington koelpin ii m karley kiehn v tip quick generation fake data also use faker command line tool thanks fakercli formatters generator property like name address lorem called formatters faker generator many packaged provider list bundled formatters default locale fakerproviderbase randomdigit randomdigitnot randomdigitnotnull randomnumbernbdigits null strict false randomfloatnbmaxdecimals null min max null numberbetweenmin max randomletter b return randomly ordered subsequence provided array randomelementsarray array abc count arrayc randomelementarray array abc b shufflehello world rloh eoldlw shufflearray array numerifyhello hello lexifyhello hello wgt bothifyhello hello jz asciifyhello hello r regexifyazazaz smykaej fakerproviderlorem word aut wordsnb astext false arrayporro sed magni sentencenbwords variablenbwords true sit vitae voluptas sint non voluptates sentencesnb astext false arrayoptio quos qui illo error laborum vero officia id corporis saepe provident esse hic eligendi paragraphnbsentences variablenbsentences true ut ab voluptas sed nam sint autem inventore aut officia aut aut blanditiis ducimus eos odit amet et est ut eum paragraphsnb astext false arrayquidem ut sunt et quidem est accusamus aut fuga est placeat rerum ut enim ex eveniet facere sunt aut nam et eum architecto fugit repellendus illo qui ex esse veritatis possimus omnis aut incidunt sunt asperiores incidunt iure sequi cum culpa rem rerum exercitationem est rem textmaxnbchars fuga totam reiciendis qui architecto fugiat nemo consequatur recusandae qui cupiditate eos quod fakerproviderenusperson titlegender nullmalefemale m titlemale mr titlefemale m suffix jr namegender nullmalefemale dr zane stroman firstnamegender nullmalefemale maynard firstnamemale maynard firstnamefemale rachel lastname zulauf fakerproviderenusaddress cityprefix lake secondaryaddress suite state newmexico stateabbr oh citysuffix borough streetsuffix key buildingnumber city west judge streetname keegan trail streetaddress karley loaf suite postcode address cummings vista apt susanbury ny country falkland island malvinas latitudemin max longitudemin max fakerproviderenusphonenumber phonenumber x tollfreephonenumber ephonenumber fakerproviderenuscompany catchphrase monitored regional contingency b eenable robust architecture company bogantreutel companysuffix son jobtitle cashier fakerproviderenustext realtextmaxnbchars indexsize yet wish could manage made alice asked shrill passionate voice would like cat never even spoke time perhaps alice replied fakerproviderdatetime unixtimemax datetimemax timezone null datetime utc datetimeadmax timezone null datetime europeparis isomax dateformat ymd max timeformat max datetimebetweenstartdate year enddate timezone null datetime africalagos datetimeinintervalstartdate year interval day timezone null datetime antarticavostok datetimethiscenturymax timezone null datetime utc datetimethisdecademax timezone null datetime europeparis datetimethisyearmax timezone null datetime africalagos datetimethismonthmax timezone null datetime antarcticavostok ampmmax pm dayofmonthmax dayofweekmax friday monthmax monthnamemax january yearmax century vi timezone europeparis method accepting timezone argument default datedefaulttimezoneget pas custom timezone string method define custom timezone time method using fakersetdefaulttimezonetimezone fakerproviderinternet email tkshlerincollinscom safeemail kingalfordexampleorg freeemail bradleygmailcom companyemail russeldurwardmcdermottorg freeemaildomain yahoocom safeemaildomain exampleorg username wade password kxa domainname wolffdeckownet domainword feeney tld biz url httpwwwskilesdonnellybizautaccusantiumutarchitectositethtml slug autrepellatcommodivelitaquenihilidsaepenostrum ipv localipv ipv edeeafcfc macaddress bca fakerprovideruseragent useragent mozilla window ce applewebkit khtml like gecko chrome safari chrome mozilla macintosh ppc mac o x applewebkit khtml like gecko chrome safari firefox mozilla x linuxi rv gecko firefox safari mozilla macintosh u ppc mac o x rv enus applewebkit khtml like gecko version safari opera opera window nt enus presto version internetexplorer mozilla compatible msie window win x trident fakerproviderpayment creditcardtype mastercard creditcardnumber creditcardexpirationdate creditcardexpirationdatestring creditcarddetails arraymastercard aleksander nowak generates random iban set countrycode null random country ibancountrycode itayzdjbp swiftbicnumber rztiat fakerprovidercolor hexcolor facc rgbcolor rgbcolorasarray array rgbcsscolor rgb safecolorname fuchsia colorname gainsbor hslcolor hslcolorasarray array fakerproviderfile fileextension avi mimetype videoxmsvideo copy random file source target directory return fullpath filename filesourcedir tmp targetdir tmp pathtotargetdirbedaebeaafabcjpg filesourcedir targetdir false bedaebeaafabcjpg fakerproviderimage image generation provided lorempixel httplorempixelcom imageurlwidth height httplorempixelcom imageurlwidth height cat httplorempixelcomcats imageurlwidth height cat true faker httplorempixelcomcatsfaker imageurlwidth height cat true faker true httplorempixelcomgraycatsfaker monochrome image imagedir tmp width height tmpbedaebeaafabcjpg imagedir width height cat tmpbedaebeaafabcjpg cat imagedir width height cat false bedaebeaafabcjpg filename without path imagedir width height cat true false randomize image default true imagedir width height cat true true faker tmpbedaebeaafabcjpg cat faker text default null fakerprovideruuid uuid edbeabfcd fakerproviderbarcode ean ean isbn isbn fakerprovidermiscellaneous boolean false booleanchanceofgettingtrue true md deacfecde sha fefcaaebcaaabdec sha ecdaccddbaecaeaecfcea locale enuk countrycode uk languagecode en currencycode eur emoji fakerproviderbiased get random number chance close biasednumberbetweenmin max function sqrt fakerproviderhtmllorem generate html document level deep element wide level randomhtml htmlheadtitleaut illo dolorem et accusantium eumtitleheadbodyform actionexamplecom methodpostlabel forusernamesequilabelinput typetext idusernamelabel forpasswordetlabelinput typepassword idpasswordformbid aut saepe non mollitia voluptas voluptasbtabletheadtrtrnon consequaturtrtrincidunt esttrtraut voluptatemtrtrofficia voluptas rerum quotrtrasperiores similiquetrtrtheadtbodytrtdsapiente dolorum dolorem sint laboriosam commodi quitdtdcommodi nihil nesciunt eveniet quo repudiandaetdtdvoluptates explicabo numquam distinctio necessitatibus repellattdtdprovident ut doloremque nam eum modi aspernaturtdtdiusto inventoretdtrtrtdanimi nihil ratione id mollitia libero ipsa quia temporetdtdvelit est officia et aut tenetur dolorem sed mollitia expeditatdtdmodi modi repudiandae pariatur voluptas rerum ea incidunt non molestiae eligendi eos delenititdtdexercitationem voluptatibus dolor est iste quod molestiaetdtdquia reiciendistdtrtrtdinventore impedit exercitationem voluptatibus rerum cupiditatetdtdquitdtdaliquamtdtdautem nihil aut ettdtddolor ut quia errortdtrtrtdenim facilis iusto earum et minus rerum assumenda quis quiatdtdreprehenderit ut sapiente occaecati voluptatum dolor voluptatem vitae qui velittdtdquod fugiat nontdtdsunt nobis totam mollitia sed nesciunt est deleniti cumquetdtdrepudiandae quotdtrtrtdmodi dictum libero quisquam doloremque qui autemtdtdvoluptatem aliquid saepe laudantium facere eos sunt dolortdtdest eos quis laboriosam officia expedita repellendus quia natustdtdet neque delectus quod fugit enim repudiandae quitdtdfugit soluta sit facilis facere repellat culpa magni voluptatem maiores temporatdtrtrtdenim dolores doloremquetdtdassumenda voluptatem eum perferendis exercitationemtdtdquasi fugit deserunt ea perferendis sunt nemo consequatur dolorum solutatdtdmaxime repellat qui numquam voluptatem est moditdtdalias rerum rerum hic hic eveniettdtrtrtdtempore voluptatemtdtdeaquetdtdet sit quas fugit iustotdtdnemo nihil rerum dignissimos et essetdtdrepudiandae ipsum numquamtdtrtrtdnemo sunt quiatdtdsint tempore est neque ducimus harum sedtdtddicta placeat atque libero nihiltdtdet qui aperiam temporibus facilis eumtdtdut dolores qui enim et maiores nesciunttdtrtrtddolorum totam sint debitis saepe laborumtdtdquidem corrupti eatdtdcum voluptas quodtdtdpossimus consequatur quasi dolorem ut ettdtdet velit non hic labore repudiandae quistdtrtbodytablebodyhtml modifier faker provides three special provider unique optional valid called provider unique force provider return unique value value array get random digit always new one avoid duplicate value fakeruniquerandomdigit printrvalues provider limited range throw exception new unique value generated value array try value fakeruniquerandomdigitnotnull catch overflowexception e echo unique digit null faker cant generate reset unique modifier provider passing true first argument fakeruniquereset truerandomdigitnotnull throw overflowexception since unique reset tip unique keep one array value per provider optional sometimes bypass provider return default value instead default null value array get random digit also null sometimes value fakeroptionalrandomdigit printrvalues null null null null optional accepts weight argument specify probability receiving default value always return default value always return provider default weight chance fakeroptionalweight randomdigit chance null fakeroptionalweight randomdigit chance null optional accepts default argument specify default value return default null fakeroptionalweight default falserandomdigit chance false fakeroptionalweight default abcword chance abc valid accepts valid value according passed validator function value array evenvalidator functiondigit &#9; return digit &#9; value fakervalidevenvalidatorrandomdigit printrvalues like unique valid throw overflow exception cant generate valid value value array try fakervalidevenvalidatorrandomelement catch overflowexception e echo cant pick even number set would like use modifier value generated faker use passthrough method passthrough simply return whatever value given fakeroptionalpassthroughmtrand localization fakerfactory take locale argument return localized data localized provider found factory fallback default locale enus php faker fakerfactorycreatefrfr create french faker echo fakername n luce du coulon auguste dupont roger le voisin alexandre lacroix jacques humbertroy therese guilletandre gilles grosbodin amelie pires marcel laporte genevieve marchal check available faker locale source code provider directory localization faker ongoing process need help dont hesitate create localized provider locale submit pr populating entity using orm odm faker provides adapter objectrelational objectdocument mapper currently propel doctrine cakephp spot mandango eloquent supported adapter ease population database entity class provided orm library population document store using document class provided odm library populate entity create new populator class using generator instance parameter list class number entity must generated launch actual data population call execute method note populators could require additional parameter example doctrine populator option specify batchsize often flush unitofwork database example showing populate author book object php generator fakerfactorycreate populator new fakerormpropelpopulatorgenerator populatoraddentityauthor populatoraddentitybook insertedpks populatorexecute populator us name column type guesser populate column relevant data instance faker populates column named firstname using firstname formatter column timestamp type using datetime formatter resulting entity therefore coherent faker misinterprets column name still specify custom closure used populating particular column using third argument addentity php populatoraddentitybook array isbn function use generator return generatorean example faker guess formatter column except isbn given anonymous function used tip ignore column specify null column name third argument addentity usually necessary column added behavior php populatoraddentitybook array createdat null updatedat null course faker populate autoincremented primary key addition fakerormpropelpopulatorexecute return list inserted pks indexed class php printrinsertedpks array author book note due fact faker return primary key inserted memory consumption go drastically batch insert due big list data previous example book author model share relationship since author entity populated first faker smart enough relate populated book entity one populated author entity lastly want execute arbitrary function entity insertion use fourth argument addentity method php populatoraddentitybook array array functionbook bookpublish seeding generator may want get always generated data instance using faker unit testing purpose generator offer seed method seed random number generator calling script twice seed produce result php faker fakerfactorycreate fakerseed echo fakername jess mraz tip datetime formatters wont reproduce fake data dont fix max value php even seeded line return different result max varies fakerdatetime equivalent fakerdatetimemax make sure fix max parameter fakerdatetime return always date seeded tip formatters wont reproduce fake data use rand php function use faker mtrand instead php bad fakerrealtextrand good fakerrealtextfakernumberbetween faker internals understanding provider fakergenerator alone cant much generation need fakerprovider object delegate data generation fakerfactorycreate actually creates fakergenerator bundled default provider happens hood php faker new fakergenerator fakeraddprovidernew fakerproviderenuspersonfaker fakeraddprovidernew fakerproviderenusaddressfaker fakeraddprovidernew fakerproviderenusphonenumberfaker fakeraddprovidernew fakerproviderenuscompanyfaker fakeraddprovidernew fakerproviderloremfaker fakeraddprovidernew fakerproviderinternetfaker whenever try access property faker object generator look method name provider attached instance calling fakername trigger call fakerproviderpersonname since faker start last provider easily override existing formatters add provider containing method named formatters want override mean easily add provider fakergenerator instance provider usually class extending fakerproviderbase parent class allows use method like lexify randomnumber also give access formatters provider protected generator property new formatters public method provider class example provider populating book data php namespace fakerprovider class book extends fakerproviderbase public function titlenbwords sentence thisgeneratorsentencenbwords return substrsentence strlensentence public function isbn return thisgeneratorean register provider add new instance fakerproviderbook existing generator php fakeraddprovidernew fakerproviderbookfaker use two new formatters like faker formatter php book new book booksettitlefakertitle booksetisbnfakerisbn booksetsummaryfakertext booksetpricefakerrandomnumber tip provider also plain old php object case public method provider become available generator real life usage following script generates valid xml document php requireonce pathtofakersrcautoloadphp faker fakerfactorycreate xml version encodingutf contact php contact firstnamephp echo fakerfirstname lastnamephp echo fakerlastname emailphp echo fakeremail phone numberphp echo fakerphonenumber php fakerboolean birth datephp echo fakerdatetimethiscenturyformatymd placephp echo fakercity php endif address streetphp echo fakerstreetaddress street cityphp echo fakercity city postcodephp echo fakerpostcode postcode statephp echo fakerstate state address company namephp echo fakercompany catchphrasephp echo fakercatchphrase php fakerboolean offerphp echo fakerbs offer php endif php fakerboolean director namephp echo fakername php endif company php fakerboolean detail cdata php echo fakertext detail php endif contact php endfor contact running script produce document looking like xml version encodingutf contact contact firstnameona lastnamebednar emailschambergerfrankwuckertcom phone numberx address street harrison covestreet citynorth lloydcity postcodepostcode statealabamastate address company nameveum funk shanahan catchphrasefunctionbased stable solution offerorchestrate compelling webreadinessoffer company detail cdata alias accusantium voluptatum autem nobis cumque neque modi voluptatem error molestiae consequatur alias illum commodi molestiae aut repellat id et sit consequuntur aut et ullam asperiores cupiditate culpa voluptatem et mollitia dolor nisi praesentium qui ut detail contact contact firstnameaurelie lastnamepaucek emailalfonzodurgancom phone numberx address street hegmann inletstreet citysouth geovanymouthcity postcodepostcode statecoloradostate address company namekrajcikgrimes catchphraseswitchable cohesive instructionset company contact contact firstnameclifton lastnamekshlerin emailkiannawiegandframiwymaninfo phone number address street nona cornerstreet cityharberhavencity postcodepostcode staterhodeislandstate address company namerosenbaumaufderhar catchphraserealigned asynchronous encryption company contact contact firstnamealexandre lastnameorn emailthelmaerdmancorwinbiz phone numberx address street schultz viastreet cityfeilstadcity postcodepostcode statenewjerseystate address company nameoharaprosacco catchphrasereengineered solutionoriented algorithm director namedr berenice auer v company detail cdata ut itaque et quaerat doloremque eum praesentium rerum saepe dolorem explicabo qui consequuntur commodi minimum rem harum temporibus rerum dolores non molestiae id dolorem placeat aut asperiores nihil eius repellendus vero nihil corporis voluptatem explicabo commodi occaecati omnis blanditiis beatae quod aspernatur eos detail contact contact firstnamekatelynn lastnamekohler emailreingertrudiestiedemannjakubowskicom phone number address street nader village suite street citymclaughlinstadcity postcodepostcode statemissouristate address company namehermantremblay catchphraseobjectbased explicit servicedesk offerexpedite viral synergiesoffer director namearden deckow company contact contact firstnameblanca lastnamestark emailtadfeestnet phone numberx address street kuvalis plazastreet citysouth wilfridcity postcodepostcode stategeorgiastate address company nameupton braun rowe catchphrasevisionary leadingedge pricingstructure company contact contact firstnamerene lastnamespencer emailanibalarmstronginfo phone numberx birth date placezulaufborough address street daisha landing apt street citywest lizethhavencity postcodepostcode statewestvirginiastate address company namewiza inc catchphrasepersevering reciprocal approach offerorchestrate dynamic networksoffer director nameerwin nienow company detail cdata dolorem consequatur voluptates unde optio unde accusantium dolorem est est architecto impedit corrupti et provident quo reprehenderit dolores aut quidem suscipit repudiandae corporis error molestiae enim aperiam illo et similique qui non expedita quia dolorum ex rem incidunt ea accusantium temporibus minus non detail contact contact firstnamealessandro lastnamehagenes emailtbreitenbergoharagorczanycom phone number address street koelpin missionstreet citynorth revastadcity postcodepostcode statemarylandstate address company namestiedemannbruen catchphrasereengineered success company contact contact firstnamenovella lastnamerutherford emailclaudbogisichbiz phone number address street langworth hill apt street citynew carloscity postcodepostcode statewyomingstate address company namestromanlegros catchphraseexpanded thgeneration moratorium director nameearlene bayer company contact contact firstnameandreane lastnamemann emailmeggieornbaumbachcom phone numberx birth date placestantonborough address street kreiger station apt street citykaydenmouthcity postcodepostcode statewyomingstate address company namelebsack bernhard kiehn catchphrasepersevering actuating framework offergrow sticky portalsoffer company detail cdata quia dolor ut quia error libero enim facilis iusto earum et minus rerum assumenda quia doloribus et reprehenderit ut occaecati voluptatum dolor voluptatem vitae qui velit quia fugiat non itaque sunt nobis totam sed nesciunt est deleniti cumque alias repudiandae quo aut numquam modi dictum libero detail contact contact language specific formatters fakerproviderarsaperson php echo fakeridnumber id number echo fakernationalidnumber citizen id number echo fakerforeigneridnumber foreigner id number echo fakercompanyidnumber company id number fakerproviderarsapayment php echo fakerbankaccountnumber saibyzvzjsecvxc fakerprovideratatpayment php echo fakervat u austrian value added tax number echo fakervatfalse atu unspaced austrian value added tax number fakerproviderbgbgpayment php echo fakervat bg bulgarian value added tax number echo fakervatfalse bg unspaced bulgarian value added tax number fakerprovidercsczaddress php echo fakerregion liberecky kraj fakerprovidercsczcompany php generates valid ico echo fakerico fakerprovidercsczdatetime php echo fakermonthnamegenitive prosince echo fakerformatteddate listopadu fakerprovidercsczperson php echo fakerbirthnumber fakerproviderdadkperson php generates random cpr number echo fakercpr fakerproviderdadkaddress php generates random kommune name echo fakerkommune frederiksberg generates random region name echo fakerregion region sjlland fakerproviderdadkcompany php generates random cvr number echo fakercvr generates random p number echo fakerp fakerproviderdechperson php generates random avsahv social security number echo fakeravs echo fakerahv fakerproviderdedepayment php echo fakerbankaccountnumber de echo fakerbank volksbank stuttgart fakerproviderenhkaddress php generates fake town name based word commonly found hong kong echo fakertown yuen long generates fake village name based word commonly found hong kong echo fakervillage tau generates fake estate name based word commonly found hong kong echo fakerestate ching lai court fakerproviderenhkphone php generates hong kong mobile number starting echo fakermobilenumber generates hong kong landline number starting echo fakerlandlinenumber generates hong kong fax number starting echo fakerfaxnumber fakerproviderenngaddress php generates random region name echo fakerregion katsina fakerproviderenngperson php generates random person name echo fakername oluwunmi mayowa fakerproviderennzphone php generates cell mobile phone number echo fakermobilenumber generates toll free number echo fakertollfreenumber area code echo fakerareacode fakerproviderenuscompany php generate random employer identification number echo fakerein fakerproviderenuspayment php echo fakerbankaccountnumber echo fakerbankroutingnumber fakerproviderenusperson php generates random social security number echo fakerssn fakerproviderenzacompany php generates random company registration number echo fakercompanynumber fakerproviderenzaperson php generates random national identification number echo fakeridnumber generates random valid licence code echo fakerlicencecode eb fakerproviderenzaphonenumber php generates special rate toll free phone number echo fakertollfreenumber generates mobile phone number echo fakermobilenumber fakerprovideresesperson php generates documento nacional de identidad dni number echo fakerdni e generates random valid licence code echo fakerlicencecode b fakerprovideresespayment php generates codigo de identificacion fiscal cif number echo fakervat fakerprovideresesphonenumber php generates special rate toll free phone number echo fakertollfreenumber generates mobile phone number echo fakermobilenumber fakerproviderespeperson php generates peruvian documento nacional de identidad dni number echo fakerdni fakerproviderfairperson php generates valid nationalcode echo fakernationalcode fakerproviderfairaddress php generates random building name echo fakerbuilding return random city name echo fakercity fakerproviderfaircompany php generates random contract type echo fakercontract fakerproviderfifipayment php generates random bank account number echo fakerbankaccountnumber fi fakerproviderfifiperson php generates valid finnish personal identity number finnish henkilotunnus echo fakerpersonalidentitynumber j since number different male female person optionally specify gender echo fakerpersonalidentitynumberdatetimecreatefromformatymd female ab fakerproviderfrbepayment php echo fakervat belgian value added tax number echo fakervatfalse unspaced belgian value added tax number fakerprovideresveperson php generate cedula de identidad number pas one argument add separator echo fakernationalid v fakerprovideresvecompany php generates rif number pas one argument add separator echo fakertaxpayeridentificationnumber j fakerproviderfrchperson php generates random avsahv social security number echo fakeravs fakerproviderfrfraddress php generates random department name echo fakerdepartmentname hautrhin generates random department number echo fakerdepartmentnumber b generates random department info department number department name fakerdepartment array cher generates random region echo fakerregion saintpierreetmiquelon generates random appartementstair echo fakersecondaryaddress bat fakerproviderfrfrcompany php generates random siren number echo fakersiren generates random siret number echo fakersiret fakerproviderfrfrpayment php generates random vat echo fakervat fr fakerproviderfrfrperson php generates random nir securite sociale number echo fakernir fakerproviderfrfrphonenumber php generates phone number echo fakerphonenumber echo fakermobilenumber echo fakerservicenumber fakerproviderheilpayment php echo fakerbankaccountnumber il fakerproviderhrhrpayment php echo fakerbankaccountnumber hr fakerproviderhuhupayment php generates random bank account number echo fakerbankaccountnumber hu fakerproviderididperson php generates random nomor induk kependudukan nik first argument gender either persongendermale persongenderfemale none specified random gender used second argument birth date datetime object none specified random birth date used echo fakernik fakerprovideritchperson php generates random avsahv social security number echo fakeravs fakerproviderititcompany php generates random vat id echo fakervatid fakerproviderititperson php generates random tax id code codice fiscale echo fakertaxid dixdpzefa fakerproviderjajpperson php generates kana name echo fakerkananamegender nullmalefemale generates kana first name echo fakerfirstkananamegender nullmalefemale generates kana first name male echo fakerfirstkananamemale generates kana first name female echo fakerfirstkananamefemale generates kana last name echo fakerlastkananame fakerproviderkagepayment php generates random bank account number echo fakerbankaccountnumber gezv fakerproviderkkkzcompany php generates business identification number echo fakerbusinessidentificationnumber fakerproviderkkkzpayment php generates random bank name echo fakerbank generates random bank account number echo fakerbankaccountnumber kzlohxi fakerproviderkkkzperson php generates individual identification number echo fakerindividualidentificationnumber generates individual identification number based hisher birth date echo fakerindividualidentificationnumbernew datetime fakerproviderkokraddress php generates metropolitan city echo fakermetropolitancity generates borough echo fakerborough fakerproviderkokrphonenumber php generates local area phone numer echo fakerlocalareaphonenumber generates cell phone number echo fakercellphonenumber fakerproviderltltpayment php echo fakerbankaccountnumber lt fakerproviderlvlvperson php generates random personal identity card number echo fakerpersonalidentitynumber fakerprovidermsmyaddress php generates random malaysian township echo fakertownship taman bahagia generates random malaysian town address matching postcode state echo fakertownstate bukit bintang kuala lumpur fakerprovidermsmymiscellaneous php generates random vehicle license plate number echo fakerjpjnumberplate wpl fakerprovidermsmypayment php generates random malaysian bank echo fakerbank maybank generates random malaysian bank account number digit echo fakerbankaccountnumber generates random malaysian insurance company echo fakerinsurance aia malaysia generates random malaysian bank swift code echo fakerswiftcode mbbemyklxxx fakerprovidermsmyperson php generates random personal identity card mykad number echo fakermykadnumbergender nullmalefemale hyphen nulltruefalse fakerprovidermsmyphonenumber php generates random malaysian mobile number echo fakermobilenumbercountrycodeprefix nulltruefalse formatting nulltruefalse generates random malaysian landline number echo fakerfixedlinenumbercountrycodeprefix nulltruefalse formatting nulltruefalse generates random malaysian voip number echo fakervoipnumbercountrycodeprefix nulltruefalse formatting nulltruefalse fakerprovidernenpaddress php generates nepali district name echo fakerdistrict generates nepali city name echo fakercityname fakerprovidernlbepayment php echo fakervat belgian value added tax number echo fakervatfalse unspaced belgian value added tax number fakerprovidernlbeperson php echo fakerrrn belgian rijksregisternummer echo fakerrrnfemale belgian rijksregisternummer female fakerprovidernlnlcompany php echo fakerjobtitle houtbewerker echo fakervat nlb dutch value added tax number echo fakerbtw nlb dutch value added tax number alias fakerprovidernlnlperson php echo fakeridnumber dutch personal identification number bsn fakerprovidernbnomobilenumber php generates random norwegian mobile phone number echo fakermobilenumber echo fakermobilenumber echo fakermobilenumber fakerprovidernbnopayment php generates random bank account number echo fakerbankaccountnumber fakerproviderplplperson php generates random pesel number echo fakerpesel generates random personal identity card number echo fakerpersonalidentitynumber akx generates random taxpayer identification number nip echo fakertaxpayeridentificationnumber fakerproviderplplcompany php generates random regon number echo fakerregon generates random local regon number echo fakerregonlocal fakerproviderplplpayment php generates random bank name echo fakerbank narodowy bank polski generates random bank account number echo fakerbankaccountnumber pl fakerproviderptptperson php generates random taxpayer identification number portuguese numero de identificacao fiscal nif echo fakertaxpayeridentificationnumber fakerproviderptbraddress php generates random region name echo fakerregion nordeste generates random region abbreviation echo fakerregionabbr ne fakerproviderptbrphonenumber php echo fakerareacode echo fakercellphone echo fakerlandline echo fakerphone random landline digit digit cellphone number using phone function false argument return unformatted number echo fakercellphonefalse cellphone special second argument add th digit ignored generated radio number echo fakercellphonetrue true using number suffix add area code phone echo fakercellphonenumber echo fakerlandlinenumberfalse echo fakerphonenumber formatted random landline cellphone obeying th digit rule echo fakerphonenumbercleared formatted random landline cellphone obeying th digit rule fakerproviderptbrperson php name generator may include double first double last name plus title suffix echo fakername sr luis adriano sepulveda filho valid document generator boolean argument remove formatting echo fakercpf echo fakercpffalse echo fakerrg echo fakerrgfalse fakerproviderptbrcompany php generates brazilian formatted valid cnpj echo fakercnpj echo fakercnpjfalse fakerproviderromdpayment php generates random bank account number echo fakerbankaccountnumber mdbqwckmuwhbesdpa fakerproviderroropayment php generates random bank account number echo fakerbankaccountnumber rowrjeoexyqijue fakerproviderroroperson php generates random male name prefixtitle echo fakerprefixmale ing generates random female name prefixtitle echo fakerprefixfemale dna generates random male first name echo fakerfirstnamemale adrian generates random female first name echo fakerfirstnamefemale miruna generates random personal numerical code cnp echo fakercnp valid option value gender null random male female dateofbirth null random ymd ym random day random month day ie county letter iso ro county code b b b b b b bucharest sector isresident truefalse flag person resides romania echo fakercnpgender null dateofbirth null county null isresident true fakerproviderrorophonenumber php generates random tollfree phone number echo fakertollfreephonenumber generates random premiumrate phone number echo fakerpremiumratephonenumber fakerproviderrurupayment php generates russian bank name based list real russian bank echo fakerbank generate russian tax payment number company echo fakerinn generate russian tax code company echo fakerkpp fakerprovidersvsepayment php generates random bank account number echo fakerbankaccountnumber se fakerprovidersvseperson php generates valid swedish personal identity number swedish personnummer echo fakerpersonalidentitynumber since number different male female person optionally specify gender echo fakerpersonalidentitynumberfemale fakerprovidertrtrperson php generates valid turkish identity number turkish tc kimlik echo fakertcno fakerproviderzhcnpayment php generates random bank name based list real chinese bank echo fakerbank fakerproviderukuapayment php generates ukraine bank name based list real ukraine bank echo fakerbank fakerproviderzhtwperson php generates random personal identify number echo fakerpersonalidentitynumber fakerproviderzhtwcompany php generates random vat company tax number echo fakervat thirdparty library extendingbased faker symfony bundle willdurandfakerbundle put awesome faker library symfony dic populate database fake data hautelookalicebundle hccalicefixturesbundle bundle using nelmioalice faker data fixture able use doctrine orm well doctrine mongodb odm emanueleminottofakerserviceprovider faker service provider silex bitfakercli command line tool faker php library leaguefactorymuffin enable rapid creation object php port factorygirl fzaninottocompanynamegenerator generate name english tech company class emanueleminottofakerplaceholditprovider generate image using placeholdit spyritdatalea highly customizable random test data generator web app frequencnewageipsum new aged ipsum provider faker library inspired httpsebpearcecombullshit prewkxmlfaker create fake xml faker denheckfakercontext behat context using faker generate testdata swekajcronexpressiongenerator faker provider generating random valid cron expression pragmafabrikpommfaker faker client pomm database framework postgresql nelmioalice fixturesobject generator yaml dsl use faker data generator ravagecakephpfakeseeder cakephp x shell seed database fake andor fixed data bhellerimagesgenerator image generator provider using gd placeholder type picture patternlabpluginfaker pattern lab styleguide component library prototyping tool creates unique content time pattern lab generated guidocellaeloquentpopulator adapter laravels eloquent orm tamperdataexiges faker provider generating random temperature jzontafakerrestaurant faker food beverage name generate aalaapfakeryoutube faker youtube url various format pelmeredfakecar faker car car data bluemmbfakerpicsumphotosprovider generate image using picsumphotos erzfakemock generate mock using classconfiguration detection via faker guesser symfony asserts xvladqtfakerloremflickr generate image using loremflickrcom metrakitfakereddymalou generate french eddy malou sentence paragraph drupolbelgiannationalnumberfaker generate fake belgian national number elgentosmasquerade configurationbased platformagnostic localecompatible data faker tool outofthebox support magento ottavianofakergravatar generate avatar using gravatar finwephpstanfaker phpstan extension faker method license faker released mit license see bundled license file detail
43,PHP,GitHub - symfony/symfony: The Symfony PHP framework,"


Symfony is a PHP framework for web and console applications and a set of reusable
PHP components. Symfony is used by thousands of web applications (including
BlaBlaCar.com and Spotify.com) and most of the popular PHP projects (including
Drupal and Magento).
Installation

Install Symfony with Composer (see requirements details).
Symfony follows the semantic versioning strictly, publishes ""Long Term
Support"" (LTS) versions and has a release process that is predictable and
business-friendly.

Documentation

Read the Getting Started guide if you are new to Symfony.
Try the Symfony Demo application to learn Symfony in practice.
Master Symfony with the Guides and Tutorials, the Components docs
and the Best Practices reference.

Community

Join the Symfony Community and meet other members at the Symfony events.
Get Symfony support on Stack Overflow, Slack, IRC, etc.
Follow us on GitHub, Twitter and Facebook.
Read our Code of Conduct and meet the CARE Team

Contributing
Symfony is an Open Source, community-driven project with thousands of
contributors. Join them contributing code or contributing documentation.
Security Issues
If you discover a security vulnerability within Symfony, please follow our
disclosure procedure.
About Us
Symfony development is sponsored by SensioLabs, led by the
Symfony Core Team and supported by Symfony contributors.
",symfony php framework web console applications set reusable php components symfony used thousands web applications including blablacarcom spotifycom popular php projects including drupal magento installation install symfony composer see requirements details symfony follows semantic versioning strictly publishes long term support lts versions release process predictable businessfriendly documentation read getting started guide new symfony try symfony demo application learn symfony practice master symfony guides tutorials components docs best practices reference community join symfony community meet members symfony events get symfony support stack overflow slack irc etc follow us github twitter facebook read code conduct meet care team contributing symfony open source communitydriven project thousands contributors join contributing code contributing documentation security issues discover security vulnerability within symfony please follow disclosure procedure us symfony development sponsored sensiolabs led symfony core team supported symfony contributors,symfoni php framework web consol applic set reusabl php compon symfoni use thousand web applic includ blablacarcom spotifycom popular php project includ drupal magento instal instal symfoni compos see requir detail symfoni follow semant version strictli publish long term support lt version releas process predict businessfriendli document read get start guid new symfoni tri symfoni demo applic learn symfoni practic master symfoni guid tutori compon doc best practic refer commun join symfoni commun meet member symfoni event get symfoni support stack overflow slack irc etc follow us github twitter facebook read code conduct meet care team contribut symfoni open sourc communitydriven project thousand contributor join contribut code contribut document secur issu discov secur vulner within symfoni pleas follow disclosur procedur us symfoni develop sponsor sensiolab led symfoni core team support symfoni contributor,symfony php framework web console application set reusable php component symfony used thousand web application including blablacarcom spotifycom popular php project including drupal magento installation install symfony composer see requirement detail symfony follows semantic versioning strictly publishes long term support lts version release process predictable businessfriendly documentation read getting started guide new symfony try symfony demo application learn symfony practice master symfony guide tutorial component doc best practice reference community join symfony community meet member symfony event get symfony support stack overflow slack irc etc follow u github twitter facebook read code conduct meet care team contributing symfony open source communitydriven project thousand contributor join contributing code contributing documentation security issue discover security vulnerability within symfony please follow disclosure procedure u symfony development sponsored sensiolabs led symfony core team supported symfony contributor
44,PHP,"GitHub - danielmiessler/SecLists: SecLists is the security tester's companion. It's a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more.","
About SecLists
SecLists is the security tester's companion. It's a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more. The goal is to enable a security tester to pull this repository onto a new testing box and have access to every type of list that may be needed.
This project is maintained by Daniel Miessler, Jason Haddix, and g0tmi1k.

Install
Zip
wget -c https://github.com/danielmiessler/SecLists/archive/master.zip -O SecList.zip \
  && unzip SecList.zip \
  && rm -f SecList.zip

Git (Small)
git clone --depth 1 https://github.com/danielmiessler/SecLists.git

Git (Complete)
git clone https://github.com/danielmiessler/SecLists.git

Kali Linux (Tool Page)
apt -y install seclists


Attribution
See CONTRIBUTORS.md

Contributing
See CONTRIBUTING.md

Similar Projects

PayloadsAllTheThings
FuzzDB


Licensing
This project is licensed under the MIT license.

‚Äî
NOTE: Downloading this repository is likely to cause a false-positive alarm by your anti-virus or anti-malware software, the filepath should be whitelisted. There is nothing in SecLists that can harm your computer as-is, however it's not recommended to store these files on a server or other important system due to the risk of local file include attacks.
",seclists seclists security testers companion collection multiple types lists used security assessments collected one place list types include usernames passwords urls sensitive data patterns fuzzing payloads web shells many goal enable security tester pull repository onto new testing box access every type list may needed project maintained daniel miessler jason haddix gtmik install zip wget c httpsgithubcomdanielmiesslerseclistsarchivemasterzip seclistzip unzip seclistzip rm f seclistzip git small git clone depth httpsgithubcomdanielmiesslerseclistsgit git complete git clone httpsgithubcomdanielmiesslerseclistsgit kali linux tool page apt install seclists attribution see contributorsmd contributing see contributingmd similar projects payloadsallthethings fuzzdb licensing project licensed mit license note downloading repository likely cause falsepositive alarm antivirus antimalware software filepath whitelisted nothing seclists harm computer asis however recommended store files server important system due risk local file include attacks,seclist seclist secur tester companion collect multipl type list use secur assess collect one place list type includ usernam password url sensit data pattern fuzz payload web shell mani goal enabl secur tester pull repositori onto new test box access everi type list may need project maintain daniel miessler jason haddix gtmik instal zip wget c httpsgithubcomdanielmiesslerseclistsarchivemasterzip seclistzip unzip seclistzip rm f seclistzip git small git clone depth httpsgithubcomdanielmiesslerseclistsgit git complet git clone httpsgithubcomdanielmiesslerseclistsgit kali linux tool page apt instal seclist attribut see contributorsmd contribut see contributingmd similar project payloadsalltheth fuzzdb licens project licens mit licens note download repositori like caus falseposit alarm antiviru antimalwar softwar filepath whitelist noth seclist harm comput asi howev recommend store file server import system due risk local file includ attack,seclists seclists security tester companion collection multiple type list used security assessment collected one place list type include usernames password url sensitive data pattern fuzzing payload web shell many goal enable security tester pull repository onto new testing box access every type list may needed project maintained daniel miessler jason haddix gtmik install zip wget c httpsgithubcomdanielmiesslerseclistsarchivemasterzip seclistzip unzip seclistzip rm f seclistzip git small git clone depth httpsgithubcomdanielmiesslerseclistsgit git complete git clone httpsgithubcomdanielmiesslerseclistsgit kali linux tool page apt install seclists attribution see contributorsmd contributing see contributingmd similar project payloadsallthethings fuzzdb licensing project licensed mit license note downloading repository likely cause falsepositive alarm antivirus antimalware software filepath whitelisted nothing seclists harm computer asis however recommended store file server important system due risk local file include attack
45,PHP,GitHub - composer/composer: Dependency Manager for PHP,"Composer - Dependency Management for PHP
Composer helps you declare, manage, and install dependencies of PHP projects.
See https://getcomposer.org/ for more information and documentation.

Installation / Usage
Download and install Composer by following the official instructions.
For usage, see the documentation.
Packages
Find packages on Packagist.
Community
IRC channels are on irc.freenode.org: #composer
for users and #composer-dev for development.
For support, Stack Overflow also offers a good collection of
Composer related questions.
Please note that this project is released with a
Contributor Code of Conduct.
By participating in this project and its community you agree to abide by those terms.
Requirements
PHP 5.3.2 or above (at least 5.3.4 recommended to avoid potential bugs)
Authors

Nils Adermann  | GitHub  | Twitter | naderman@naderman.de | naderman.de
Jordi Boggiano | GitHub | Twitter | j.boggiano@seld.be | seld.be

See also the list of contributors who participated in this project.
Security Reports
Please send any sensitive issue to security@packagist.org. Thanks!
License
Composer is licensed under the MIT License - see the LICENSE file for details
Acknowledgments

This project's Solver started out as a PHP port of openSUSE's
Libzypp satsolver.

",composer dependency management php composer helps declare manage install dependencies php projects see httpsgetcomposerorg information documentation installation usage download install composer following official instructions usage see documentation packages find packages packagist community irc channels ircfreenodeorg composer users composerdev development support stack overflow also offers good collection composer related questions please note project released contributor code conduct participating project community agree abide terms requirements php least recommended avoid potential bugs authors nils adermann github twitter nadermannadermande nadermande jordi boggiano github twitter jboggianoseldbe seldbe see also list contributors participated project security reports please send sensitive issue securitypackagistorg thanks license composer licensed mit license see license file details acknowledgments projects solver started php port opensuses libzypp satsolver,compos depend manag php compos help declar manag instal depend php project see httpsgetcomposerorg inform document instal usag download instal compos follow offici instruct usag see document packag find packag packagist commun irc channel ircfreenodeorg compos user composerdev develop support stack overflow also offer good collect compos relat question pleas note project releas contributor code conduct particip project commun agre abid term requir php least recommend avoid potenti bug author nil adermann github twitter nadermannadermand nadermand jordi boggiano github twitter jboggianoseldb seldb see also list contributor particip project secur report pleas send sensit issu securitypackagistorg thank licens compos licens mit licens see licens file detail acknowledg project solver start php port opensus libzypp satsolv,composer dependency management php composer help declare manage install dependency php project see httpsgetcomposerorg information documentation installation usage download install composer following official instruction usage see documentation package find package packagist community irc channel ircfreenodeorg composer user composerdev development support stack overflow also offer good collection composer related question please note project released contributor code conduct participating project community agree abide term requirement php least recommended avoid potential bug author nil adermann github twitter nadermannadermande nadermande jordi boggiano github twitter jboggianoseldbe seldbe see also list contributor participated project security report please send sensitive issue securitypackagistorg thanks license composer licensed mit license see license file detail acknowledgment project solver started php port opensuses libzypp satsolver
46,PHP,GitHub - laravel/framework,"






About Laravel

Note: This repository contains the core code of the Laravel framework. If you want to build an application using Laravel, visit the main Laravel repository.

Laravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable, creative experience to be truly fulfilling. Laravel attempts to take the pain out of development by easing common tasks used in the majority of web projects, such as:

Simple, fast routing engine.
Powerful dependency injection container.
Multiple back-ends for session and cache storage.
Database agnostic schema migrations.
Robust background job processing.
Real-time event broadcasting.

Laravel is accessible, yet powerful, providing tools needed for large, robust applications. A superb combination of simplicity, elegance, and innovation gives you a complete toolset required to build any application with which you are tasked.
Learning Laravel
Laravel has the most extensive and thorough documentation and video tutorial library of any modern web application framework. The Laravel documentation is in-depth and complete, making it a breeze to get started learning the framework.
If you're not in the mood to read, Laracasts contains over 1100 video tutorials covering a range of topics including Laravel, modern PHP, unit testing, JavaScript, and more. Boost the skill level of yourself and your entire team by digging into our comprehensive video library.
Contributing
Thank you for considering contributing to the Laravel framework! The contribution guide can be found in the Laravel documentation.
Code of Conduct
In order to ensure that the Laravel community is welcoming to all, please review and abide by the Code of Conduct.
Security Vulnerabilities
Please review our security policy on how to report security vulnerabilities.
License
The Laravel framework is open-sourced software licensed under the MIT license.
",laravel note repository contains core code laravel framework want build application using laravel visit main laravel repository laravel web application framework expressive elegant syntax believe development must enjoyable creative experience truly fulfilling laravel attempts take pain development easing common tasks used majority web projects simple fast routing engine powerful dependency injection container multiple backends session cache storage database agnostic schema migrations robust background job processing realtime event broadcasting laravel accessible yet powerful providing tools needed large robust applications superb combination simplicity elegance innovation gives complete toolset required build application tasked learning laravel laravel extensive thorough documentation video tutorial library modern web application framework laravel documentation indepth complete making breeze get started learning framework youre mood read laracasts contains video tutorials covering range topics including laravel modern php unit testing javascript boost skill level entire team digging comprehensive video library contributing thank considering contributing laravel framework contribution guide found laravel documentation code conduct order ensure laravel community welcoming please review abide code conduct security vulnerabilities please review security policy report security vulnerabilities license laravel framework opensourced software licensed mit license,laravel note repositori contain core code laravel framework want build applic use laravel visit main laravel repositori laravel web applic framework express eleg syntax believ develop must enjoy creativ experi truli fulfil laravel attempt take pain develop eas common task use major web project simpl fast rout engin power depend inject contain multipl backend session cach storag databas agnost schema migrat robust background job process realtim event broadcast laravel access yet power provid tool need larg robust applic superb combin simplic eleg innov give complet toolset requir build applic task learn laravel laravel extens thorough document video tutori librari modern web applic framework laravel document indepth complet make breez get start learn framework your mood read laracast contain video tutori cover rang topic includ laravel modern php unit test javascript boost skill level entir team dig comprehens video librari contribut thank consid contribut laravel framework contribut guid found laravel document code conduct order ensur laravel commun welcom pleas review abid code conduct secur vulner pleas review secur polici report secur vulner licens laravel framework opensourc softwar licens mit licens,laravel note repository contains core code laravel framework want build application using laravel visit main laravel repository laravel web application framework expressive elegant syntax believe development must enjoyable creative experience truly fulfilling laravel attempt take pain development easing common task used majority web project simple fast routing engine powerful dependency injection container multiple backends session cache storage database agnostic schema migration robust background job processing realtime event broadcasting laravel accessible yet powerful providing tool needed large robust application superb combination simplicity elegance innovation give complete toolset required build application tasked learning laravel laravel extensive thorough documentation video tutorial library modern web application framework laravel documentation indepth complete making breeze get started learning framework youre mood read laracasts contains video tutorial covering range topic including laravel modern php unit testing javascript boost skill level entire team digging comprehensive video library contributing thank considering contributing laravel framework contribution guide found laravel documentation code conduct order ensure laravel community welcoming please review abide code conduct security vulnerability please review security policy report security vulnerability license laravel framework opensourced software licensed mit license
47,PHP,"GitHub - guzzle/guzzle: Guzzle, an extensible PHP HTTP client","Guzzle, PHP HTTP client



Guzzle is a PHP HTTP client that makes it easy to send HTTP requests and
trivial to integrate with web services.

Simple interface for building query strings, POST requests, streaming large
uploads, streaming large downloads, using HTTP cookies, uploading JSON data,
etc...
Can send both synchronous and asynchronous requests using the same interface.
Uses PSR-7 interfaces for requests, responses, and streams. This allows you
to utilize other PSR-7 compatible libraries with Guzzle.
Abstracts away the underlying HTTP transport, allowing you to write
environment and transport agnostic code; i.e., no hard dependency on cURL,
PHP streams, sockets, or non-blocking event loops.
Middleware system allows you to augment and compose client behavior.

$client = new \GuzzleHttp\Client();
$response = $client->request('GET', 'https://api.github.com/repos/guzzle/guzzle');

echo $response->getStatusCode(); # 200
echo $response->getHeaderLine('content-type'); # 'application/json; charset=utf8'
echo $response->getBody(); # '{""id"": 1420053, ""name"": ""guzzle"", ...}'

# Send an asynchronous request.
$request = new \GuzzleHttp\Psr7\Request('GET', 'http://httpbin.org');
$promise = $client->sendAsync($request)->then(function ($response) {
    echo 'I completed! ' . $response->getBody();
});

$promise->wait();
Help and docs

Documentation
Stack Overflow
Gitter

Installing Guzzle
The recommended way to install Guzzle is through
Composer.
# Install Composer
curl -sS https://getcomposer.org/installer | php
Next, run the Composer command to install the latest stable version of Guzzle:
composer require guzzlehttp/guzzle
After installing, you need to require Composer's autoloader:
require 'vendor/autoload.php';
You can then later update Guzzle using composer:
composer update
Version Guidance



Version
Status
Packagist
Namespace
Repo
Docs
PSR-7
PHP Version




3.x
EOL
guzzle/guzzle
Guzzle
v3
v3
No
>= 5.3.3


4.x
EOL
guzzlehttp/guzzle
GuzzleHttp
v4
N/A
No
>= 5.4


5.x
EOL
guzzlehttp/guzzle
GuzzleHttp
v5
v5
No
>= 5.4


6.x
Maintained
guzzlehttp/guzzle
GuzzleHttp
v6
v6
Yes
>= 5.5


7.x
Latest
guzzlehttp/guzzle
GuzzleHttp
v7
v7
Yes
>= 7.2



",guzzle php http client guzzle php http client makes easy send http requests trivial integrate web services simple interface building query strings post requests streaming large uploads streaming large downloads using http cookies uploading json data etc send synchronous asynchronous requests using interface uses psr interfaces requests responses streams allows utilize psr compatible libraries guzzle abstracts away underlying http transport allowing write environment transport agnostic code ie hard dependency curl php streams sockets nonblocking event loops middleware system allows augment compose client behavior client new guzzlehttpclient response clientrequestget httpsapigithubcomreposguzzleguzzle echo responsegetstatuscode echo responsegetheaderlinecontenttype applicationjson charsetutf echo responsegetbody id name guzzle send asynchronous request request new guzzlehttppsrrequestget httphttpbinorg promise clientsendasyncrequestthenfunction response echo completed responsegetbody promisewait help docs documentation stack overflow gitter installing guzzle recommended way install guzzle composer install composer curl ss httpsgetcomposerorginstaller php next run composer command install latest stable version guzzle composer require guzzlehttpguzzle installing need require composers autoloader require vendorautoloadphp later update guzzle using composer composer update version guidance version status packagist namespace repo docs psr php version x eol guzzleguzzle guzzle v v x eol guzzlehttpguzzle guzzlehttp v na x eol guzzlehttpguzzle guzzlehttp v v x maintained guzzlehttpguzzle guzzlehttp v v yes x latest guzzlehttpguzzle guzzlehttp v v yes,guzzl php http client guzzl php http client make easi send http request trivial integr web servic simpl interfac build queri string post request stream larg upload stream larg download use http cooki upload json data etc send synchron asynchron request use interfac use psr interfac request respons stream allow util psr compat librari guzzl abstract away underli http transport allow write environ transport agnost code ie hard depend curl php stream socket nonblock event loop middlewar system allow augment compos client behavior client new guzzlehttpcli respons clientrequestget httpsapigithubcomreposguzzleguzzl echo responsegetstatuscod echo responsegetheaderlinecontenttyp applicationjson charsetutf echo responsegetbodi id name guzzl send asynchron request request new guzzlehttppsrrequestget httphttpbinorg promis clientsendasyncrequestthenfunct respons echo complet responsegetbodi promisewait help doc document stack overflow gitter instal guzzl recommend way instal guzzl compos instal compos curl ss httpsgetcomposerorginstal php next run compos command instal latest stabl version guzzl compos requir guzzlehttpguzzl instal need requir compos autoload requir vendorautoloadphp later updat guzzl use compos compos updat version guidanc version statu packagist namespac repo doc psr php version x eol guzzleguzzl guzzl v v x eol guzzlehttpguzzl guzzlehttp v na x eol guzzlehttpguzzl guzzlehttp v v x maintain guzzlehttpguzzl guzzlehttp v v ye x latest guzzlehttpguzzl guzzlehttp v v ye,guzzle php http client guzzle php http client make easy send http request trivial integrate web service simple interface building query string post request streaming large uploads streaming large downloads using http cooky uploading json data etc send synchronous asynchronous request using interface us psr interface request response stream allows utilize psr compatible library guzzle abstract away underlying http transport allowing write environment transport agnostic code ie hard dependency curl php stream socket nonblocking event loop middleware system allows augment compose client behavior client new guzzlehttpclient response clientrequestget httpsapigithubcomreposguzzleguzzle echo responsegetstatuscode echo responsegetheaderlinecontenttype applicationjson charsetutf echo responsegetbody id name guzzle send asynchronous request request new guzzlehttppsrrequestget httphttpbinorg promise clientsendasyncrequestthenfunction response echo completed responsegetbody promisewait help doc documentation stack overflow gitter installing guzzle recommended way install guzzle composer install composer curl s httpsgetcomposerorginstaller php next run composer command install latest stable version guzzle composer require guzzlehttpguzzle installing need require composer autoloader require vendorautoloadphp later update guzzle using composer composer update version guidance version status packagist namespace repo doc psr php version x eol guzzleguzzle guzzle v v x eol guzzlehttpguzzle guzzlehttp v na x eol guzzlehttpguzzle guzzlehttp v v x maintained guzzlehttpguzzle guzzlehttp v v yes x latest guzzlehttpguzzle guzzlehttp v v yes
48,PHP,GitHub - domnikl/DesignPatternsPHP: sample code for several design patterns in PHP,"DesignPatternsPHP



Read the Docs of DesignPatternsPHP
or Download as PDF/Epub
This is a collection of known design patterns and some sample code how to implement them in PHP. Every pattern has a small list of examples.
I think the problem with patterns is that often people do know them but don't know when to apply which.
Installation
You should look at and run the tests to see what happens in the example.
To do this, you should install dependencies with Composer first:
$ composer install
Read more about how to install and use Composer on your local machine here.
To run the tests use phpunit:
$ ./vendor/bin/phpunit
using Docker (optional)
You can optionally build and browse the documentation using Docker for Mac, Windows or Linux.
Just run:
$ docker-compose up --build
Go to http://localhost:8080/README.html to read the generated documentation.
Patterns
The patterns can be structured in roughly three different categories. Please click on the üìì for a full explanation of the pattern on Wikipedia.
Creational

AbstractFactory üìì
Builder üìì
FactoryMethod üìì
Multiton (is considered an anti-pattern! ‚õîÔ∏è)
Pool üìì
Prototype üìì
SimpleFactory
Singleton üìì (is considered an anti-pattern! ‚õîÔ∏è)
StaticFactory

Structural

Adapter üìì
Bridge üìì
Composite üìì
DataMapper üìì
Decorator üìì
DependencyInjection üìì
Facade üìì
FluentInterface üìì
Flyweight üìì
Proxy üìì
Registry üìì

Behavioral

ChainOfResponsibilities üìì
Command üìì
Iterator üìì
Mediator üìì
Memento üìì
NullObject üìì
Observer üìì
Specification üìì
State üìì
Strategy üìì
TemplateMethod üìì
Visitor üìì

More

EAV üìì
Repository
ServiceLocator üìì (is considered an anti-pattern! ‚õîÔ∏è)

",designpatternsphp read docs designpatternsphp download pdfepub collection known design patterns sample code implement php every pattern small list examples think problem patterns often people know dont know apply installation look run tests see happens example install dependencies composer first composer install read install use composer local machine run tests use phpunit vendorbinphpunit using docker optional optionally build browse documentation using docker mac windows linux run dockercompose build go httplocalhostreadmehtml read generated documentation patterns patterns structured roughly three different categories please click full explanation pattern wikipedia creational abstractfactory builder factorymethod multiton considered antipattern pool prototype simplefactory singleton considered antipattern staticfactory structural adapter bridge composite datamapper decorator dependencyinjection facade fluentinterface flyweight proxy registry behavioral chainofresponsibilities command iterator mediator memento nullobject observer specification state strategy templatemethod visitor eav repository servicelocator considered antipattern,designpatternsphp read doc designpatternsphp download pdfepub collect known design pattern sampl code implement php everi pattern small list exampl think problem pattern often peopl know dont know appli instal look run test see happen exampl instal depend compos first compos instal read instal use compos local machin run test use phpunit vendorbinphpunit use docker option option build brows document use docker mac window linux run dockercompos build go httplocalhostreadmehtml read gener document pattern pattern structur roughli three differ categori pleas click full explan pattern wikipedia creation abstractfactori builder factorymethod multiton consid antipattern pool prototyp simplefactori singleton consid antipattern staticfactori structur adapt bridg composit datamapp decor dependencyinject facad fluentinterfac flyweight proxi registri behavior chainofrespons command iter mediat memento nullobject observ specif state strategi templatemethod visitor eav repositori serviceloc consid antipattern,designpatternsphp read doc designpatternsphp download pdfepub collection known design pattern sample code implement php every pattern small list example think problem pattern often people know dont know apply installation look run test see happens example install dependency composer first composer install read install use composer local machine run test use phpunit vendorbinphpunit using docker optional optionally build browse documentation using docker mac window linux run dockercompose build go httplocalhostreadmehtml read generated documentation pattern pattern structured roughly three different category please click full explanation pattern wikipedia creational abstractfactory builder factorymethod multiton considered antipattern pool prototype simplefactory singleton considered antipattern staticfactory structural adapter bridge composite datamapper decorator dependencyinjection facade fluentinterface flyweight proxy registry behavioral chainofresponsibilities command iterator mediator memento nullobject observer specification state strategy templatemethod visitor eav repository servicelocator considered antipattern
49,PHP,GitHub - bcit-ci/CodeIgniter: Open Source PHP Framework (originally from EllisLab),"What is CodeIgniter
CodeIgniter is an Application Development Framework - a toolkit - for people
who build web sites using PHP. Its goal is to enable you to develop projects
much faster than you could if you were writing code from scratch, by providing
a rich set of libraries for commonly needed tasks, as well as a simple
interface and logical structure to access these libraries. CodeIgniter lets
you creatively focus on your project by minimizing the amount of code needed
for a given task.

Release Information
This repo contains in-development code for future releases. To download the
latest stable release please visit the CodeIgniter Downloads page.

Changelog and New Features
You can find a list of all changes for each release in the user
guide change log.

Server Requirements
PHP version 5.6 or newer is recommended.
It should work on 5.4.8 as well, but we strongly advise you NOT to run
such old versions of PHP, because of potential security and performance
issues, as well as missing features.

Installation
Please see the installation section
of the CodeIgniter User Guide.

License
Please see the license
agreement.

Resources

User Guide
Language File Translations
Community Forums
Community Wiki
Community Slack Channel

Report security issues to our Security Panel
or via our page on HackerOne, thank you.

Acknowledgement
The CodeIgniter team would like to thank EllisLab, all the
contributors to the CodeIgniter project and you, the CodeIgniter user.
",codeigniter codeigniter application development framework toolkit people build web sites using php goal enable develop projects much faster could writing code scratch providing rich set libraries commonly needed tasks well simple interface logical structure access libraries codeigniter lets creatively focus project minimizing amount code needed given task release information repo contains indevelopment code future releases download latest stable release please visit codeigniter downloads page changelog new features find list changes release user guide change log server requirements php version newer recommended work well strongly advise run old versions php potential security performance issues well missing features installation please see installation section codeigniter user guide license please see license agreement resources user guide language file translations community forums community wiki community slack channel report security issues security panel via page hackerone thank acknowledgement codeigniter team would like thank ellislab contributors codeigniter project codeigniter user,codeignit codeignit applic develop framework toolkit peopl build web site use php goal enabl develop project much faster could write code scratch provid rich set librari commonli need task well simpl interfac logic structur access librari codeignit let creativ focu project minim amount code need given task releas inform repo contain indevelop code futur releas download latest stabl releas pleas visit codeignit download page changelog new featur find list chang releas user guid chang log server requir php version newer recommend work well strongli advis run old version php potenti secur perform issu well miss featur instal pleas see instal section codeignit user guid licens pleas see licens agreement resourc user guid languag file translat commun forum commun wiki commun slack channel report secur issu secur panel via page hackeron thank acknowledg codeignit team would like thank ellislab contributor codeignit project codeignit user,codeigniter codeigniter application development framework toolkit people build web site using php goal enable develop project much faster could writing code scratch providing rich set library commonly needed task well simple interface logical structure access library codeigniter let creatively focus project minimizing amount code needed given task release information repo contains indevelopment code future release download latest stable release please visit codeigniter downloads page changelog new feature find list change release user guide change log server requirement php version newer recommended work well strongly advise run old version php potential security performance issue well missing feature installation please see installation section codeigniter user guide license please see license agreement resource user guide language file translation community forum community wiki community slack channel report security issue security panel via page hackerone thank acknowledgement codeigniter team would like thank ellislab contributor codeigniter project codeigniter user
50,PHP,"GitHub - Seldaek/monolog: Sends your logs to files, sockets, inboxes, databases and various web services","Monolog - Logging for PHP 


Monolog sends your logs to files, sockets, inboxes, databases and various
web services. See the complete list of handlers below. Special handlers
allow you to build advanced logging strategies.
This library implements the PSR-3
interface that you can type-hint against in your own libraries to keep
a maximum of interoperability. You can also use it in your applications to
make sure you can always use another compatible logger at a later time.
As of 1.11.0 Monolog public APIs will also accept PSR-3 log levels.
Internally Monolog still uses its own level scheme since it predates PSR-3.
Installation
Install the latest version with
$ composer require monolog/monolog
Basic Usage
<?php

use Monolog\Logger;
use Monolog\Handler\StreamHandler;

// create a log channel
$log = new Logger('name');
$log->pushHandler(new StreamHandler('path/to/your.log', Logger::WARNING));

// add records to the log
$log->warning('Foo');
$log->error('Bar');
Documentation

Usage Instructions
Handlers, Formatters and Processors
Utility Classes
Extending Monolog
Log Record Structure

Support Monolog Financially
Get supported Monolog and help fund the project with the Tidelift Subscription or via GitHub sponsorship.
Tidelift delivers commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use.
Third Party Packages
Third party handlers, formatters and processors are
listed in the wiki. You
can also add your own there if you publish one.
About
Requirements

Monolog 2.x works with PHP 7.2 or above, use Monolog ^1.0 for PHP 5.3+ support.

Submitting bugs and feature requests
Bugs and feature request are tracked on GitHub
Framework Integrations

Frameworks and libraries using PSR-3
can be used very easily with Monolog since it implements the interface.
Symfony comes out of the box with Monolog.
Laravel comes out of the box with Monolog.
Lumen comes out of the box with Monolog.
PPI comes out of the box with Monolog.
CakePHP is usable with Monolog via the cakephp-monolog plugin.
Slim is usable with Monolog via the Slim-Monolog log writer.
XOOPS 2.6 comes out of the box with Monolog.
Aura.Web_Project comes out of the box with Monolog.
Nette Framework can be used with Monolog via Kdyby/Monolog extension.
Proton Micro Framework comes out of the box with Monolog.
FuelPHP comes out of the box with Monolog.
Equip Framework comes out of the box with Monolog.
Yii 2 is usable with Monolog via the yii2-monolog or yii2-psr-log-target plugins.
Hawkbit Micro Framework comes out of the box with Monolog.
SilverStripe 4 comes out of the box with Monolog.

Author
Jordi Boggiano - j.boggiano@seld.be - http://twitter.com/seldaek
See also the list of contributors which participated in this project.
License
Monolog is licensed under the MIT License - see the LICENSE file for details
Acknowledgements
This library is heavily inspired by Python's Logbook
library, although most concepts have been adjusted to fit to the PHP world.
",monolog logging php monolog sends logs files sockets inboxes databases various web services see complete list handlers special handlers allow build advanced logging strategies library implements psr interface typehint libraries keep maximum interoperability also use applications make sure always use another compatible logger later time monolog public apis also accept psr log levels internally monolog still uses level scheme since predates psr installation install latest version composer require monologmonolog basic usage php use monologlogger use monologhandlerstreamhandler create log channel log new loggername logpushhandlernew streamhandlerpathtoyourlog loggerwarning add records log logwarningfoo logerrorbar documentation usage instructions handlers formatters processors utility classes extending monolog log record structure support monolog financially get supported monolog help fund project tidelift subscription via github sponsorship tidelift delivers commercial support maintenance open source dependencies use build applications save time reduce risk improve code health paying maintainers exact dependencies use third party packages third party handlers formatters processors listed wiki also add publish one requirements monolog x works php use monolog php support submitting bugs feature requests bugs feature request tracked github framework integrations frameworks libraries using psr used easily monolog since implements interface symfony comes box monolog laravel comes box monolog lumen comes box monolog ppi comes box monolog cakephp usable monolog via cakephpmonolog plugin slim usable monolog via slimmonolog log writer xoops comes box monolog aurawebproject comes box monolog nette framework used monolog via kdybymonolog extension proton micro framework comes box monolog fuelphp comes box monolog equip framework comes box monolog yii usable monolog via yiimonolog yiipsrlogtarget plugins hawkbit micro framework comes box monolog silverstripe comes box monolog author jordi boggiano jboggianoseldbe httptwittercomseldaek see also list contributors participated project license monolog licensed mit license see license file details acknowledgements library heavily inspired pythons logbook library although concepts adjusted fit php world,monolog log php monolog send log file socket inbox databas variou web servic see complet list handler special handler allow build advanc log strategi librari implement psr interfac typehint librari keep maximum interoper also use applic make sure alway use anoth compat logger later time monolog public api also accept psr log level intern monolog still use level scheme sinc predat psr instal instal latest version compos requir monologmonolog basic usag php use monologlogg use monologhandlerstreamhandl creat log channel log new loggernam logpushhandlernew streamhandlerpathtoyourlog loggerwarn add record log logwarningfoo logerrorbar document usag instruct handler formatt processor util class extend monolog log record structur support monolog financi get support monolog help fund project tidelift subscript via github sponsorship tidelift deliv commerci support mainten open sourc depend use build applic save time reduc risk improv code health pay maintain exact depend use third parti packag third parti handler formatt processor list wiki also add publish one requir monolog x work php use monolog php support submit bug featur request bug featur request track github framework integr framework librari use psr use easili monolog sinc implement interfac symfoni come box monolog laravel come box monolog lumen come box monolog ppi come box monolog cakephp usabl monolog via cakephpmonolog plugin slim usabl monolog via slimmonolog log writer xoop come box monolog aurawebproject come box monolog nett framework use monolog via kdybymonolog extens proton micro framework come box monolog fuelphp come box monolog equip framework come box monolog yii usabl monolog via yiimonolog yiipsrlogtarget plugin hawkbit micro framework come box monolog silverstrip come box monolog author jordi boggiano jboggianoseldb httptwittercomseldaek see also list contributor particip project licens monolog licens mit licens see licens file detail acknowledg librari heavili inspir python logbook librari although concept adjust fit php world,monolog logging php monolog sends log file socket inboxes database various web service see complete list handler special handler allow build advanced logging strategy library implement psr interface typehint library keep maximum interoperability also use application make sure always use another compatible logger later time monolog public apis also accept psr log level internally monolog still us level scheme since predates psr installation install latest version composer require monologmonolog basic usage php use monologlogger use monologhandlerstreamhandler create log channel log new loggername logpushhandlernew streamhandlerpathtoyourlog loggerwarning add record log logwarningfoo logerrorbar documentation usage instruction handler formatters processor utility class extending monolog log record structure support monolog financially get supported monolog help fund project tidelift subscription via github sponsorship tidelift delivers commercial support maintenance open source dependency use build application save time reduce risk improve code health paying maintainer exact dependency use third party package third party handler formatters processor listed wiki also add publish one requirement monolog x work php use monolog php support submitting bug feature request bug feature request tracked github framework integration framework library using psr used easily monolog since implement interface symfony come box monolog laravel come box monolog lumen come box monolog ppi come box monolog cakephp usable monolog via cakephpmonolog plugin slim usable monolog via slimmonolog log writer xoops come box monolog aurawebproject come box monolog nette framework used monolog via kdybymonolog extension proton micro framework come box monolog fuelphp come box monolog equip framework come box monolog yii usable monolog via yiimonolog yiipsrlogtarget plugins hawkbit micro framework come box monolog silverstripe come box monolog author jordi boggiano jboggianoseldbe httptwittercomseldaek see also list contributor participated project license monolog licensed mit license see license file detail acknowledgement library heavily inspired python logbook library although concept adjusted fit php world
51,PHP,GitHub - sebastianbergmann/phpunit: The PHP Unit Testing framework.,"PHPUnit
PHPUnit is a programmer-oriented testing framework for PHP. It is an instance of the xUnit architecture for unit testing frameworks.





Installation
We distribute a PHP Archive (PHAR) that has all required (as well as some optional) dependencies of PHPUnit 9.0 bundled in a single file:
$ wget https://phar.phpunit.de/phpunit-nightly.phar

$ php phpunit-nightly.phar --version
Alternatively, you may use Composer to download and install PHPUnit as well as its dependencies. Please refer to the ""Getting Started"" guide for details on how to install PHPUnit.
Contribute
Please refer to CONTRIBUTING.md for information on how to contribute to PHPUnit and its related projects.
List of Contributors
Thanks to everyone who has contributed to PHPUnit! You can find a detailed list of contributors on every PHPUnit related package on GitHub. This list shows only the major components:

PHPUnit
php-code-coverage

A very special thanks to everyone who has contributed to the documentation and helps maintain the translations:

English
Spanish
French
Japanese
Brazilian Portuguese
Simplified Chinese

",phpunit phpunit programmeroriented testing framework php instance xunit architecture unit testing frameworks installation distribute php archive phar required well optional dependencies phpunit bundled single file wget httpspharphpunitdephpunitnightlyphar php phpunitnightlyphar version alternatively may use composer download install phpunit well dependencies please refer getting started guide details install phpunit contribute please refer contributingmd information contribute phpunit related projects list contributors thanks everyone contributed phpunit find detailed list contributors every phpunit related package github list shows major components phpunit phpcodecoverage special thanks everyone contributed documentation helps maintain translations english spanish french japanese brazilian portuguese simplified chinese,phpunit phpunit programmerori test framework php instanc xunit architectur unit test framework instal distribut php archiv phar requir well option depend phpunit bundl singl file wget httpspharphpunitdephpunitnightlyphar php phpunitnightlyphar version altern may use compos download instal phpunit well depend pleas refer get start guid detail instal phpunit contribut pleas refer contributingmd inform contribut phpunit relat project list contributor thank everyon contribut phpunit find detail list contributor everi phpunit relat packag github list show major compon phpunit phpcodecoverag special thank everyon contribut document help maintain translat english spanish french japanes brazilian portugues simplifi chines,phpunit phpunit programmeroriented testing framework php instance xunit architecture unit testing framework installation distribute php archive phar required well optional dependency phpunit bundled single file wget httpspharphpunitdephpunitnightlyphar php phpunitnightlyphar version alternatively may use composer download install phpunit well dependency please refer getting started guide detail install phpunit contribute please refer contributingmd information contribute phpunit related project list contributor thanks everyone contributed phpunit find detailed list contributor every phpunit related package github list show major component phpunit phpcodecoverage special thanks everyone contributed documentation help maintain translation english spanish french japanese brazilian portuguese simplified chinese
52,PHP,GitHub - PHPMailer/PHPMailer: The classic email sending library for PHP,"
PHPMailer - A full-featured email creation and transfer class for PHP
Build status: 


    
Class Features

Probably the world's most popular code for sending email from PHP!
Used by many open-source projects: WordPress, Drupal, 1CRM, SugarCRM, Yii, Joomla! and many more
Integrated SMTP support - send without a local mail server
Send emails with multiple To, CC, BCC and Reply-to addresses
Multipart/alternative emails for mail clients that do not read HTML email
Add attachments, including inline
Support for UTF-8 content and 8bit, base64, binary, and quoted-printable encodings
SMTP authentication with LOGIN, PLAIN, CRAM-MD5, and XOAUTH2 mechanisms over SSL and SMTP+STARTTLS transports
Validates email addresses automatically
Protect against header injection attacks
Error messages in over 50 languages!
DKIM and S/MIME signing support
Compatible with PHP 5.5 and later
Namespaced to prevent name clashes
Much more!

Why you might need it
Many PHP developers need to send email from their code. The only PHP function that supports this is mail(). However, it does not provide any assistance for making use of popular features such as encryption, authentication, HTML messages, and attachments.
Formatting email correctly is surprisingly difficult. There are myriad overlapping RFCs, requiring tight adherence to horribly complicated formatting and encoding rules ‚Äì the vast majority of code that you'll find online that uses the mail() function directly is just plain wrong!
Please don't be tempted to do it yourself ‚Äì if you don't use PHPMailer, there are many other excellent libraries that you should look at before rolling your own. Try SwiftMailer, Zend/Mail, ZetaComponents etc.
The PHP mail() function usually sends via a local mail server, typically fronted by a sendmail binary on Linux, BSD, and macOS platforms, however, Windows usually doesn't include a local mail server; PHPMailer's integrated SMTP implementation allows email sending on Windows platforms without a local mail server.
License
This software is distributed under the LGPL 2.1 license, along with the GPL Cooperation Commitment. Please read LICENSE for information on the software availability and distribution.
Installation & loading
PHPMailer is available on Packagist (using semantic versioning), and installation via Composer is the recommended way to install PHPMailer. Just add this line to your composer.json file:
""phpmailer/phpmailer"": ""~6.1""
or run
composer require phpmailer/phpmailer
Note that the vendor folder and the vendor/autoload.php script are generated by Composer; they are not part of PHPMailer.
If you want to use the Gmail XOAUTH2 authentication class, you will also need to add a dependency on the league/oauth2-client package in your composer.json.
Alternatively, if you're not using Composer, copy the contents of the PHPMailer folder into one of the include_path directories specified in your PHP configuration and load each class file manually:
<?php
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require 'path/to/PHPMailer/src/Exception.php';
require 'path/to/PHPMailer/src/PHPMailer.php';
require 'path/to/PHPMailer/src/SMTP.php';
If you're not using the SMTP class explicitly (you're probably not), you don't need a use line for the SMTP class.
If you don't speak git or just want a tarball, click the 'zip' button on the right of the project page in GitHub, though note that docs and examples are not included in the tarball.
Legacy versions
PHPMailer 5.2 (which is compatible with PHP 5.0 - 7.0) is no longer being supported, even for security updates. You will find the latest version of 5.2 in the 5.2-stable branch. If you're using PHP 5.5 or later (which you should be), switch to the 6.x releases.
Upgrading from 5.2
The biggest changes are that source files are now in the src/ folder, and PHPMailer now declares the namespace PHPMailer\PHPMailer. This has several important effects ‚Äì read the upgrade guide for more details.
Minimal installation
While installing the entire package manually or with Composer is simple, convenient, and reliable, you may want to include only vital files in your project. At the very least you will need src/PHPMailer.php. If you're using SMTP, you'll need src/SMTP.php, and if you're using POP-before SMTP, you'll need src/POP3.php. You can skip the language folder if you're not showing errors to users and can make do with English-only errors. If you're using XOAUTH2 you will need src/OAuth.php as well as the Composer dependencies for the services you wish to authenticate with. Really, it's much easier to use Composer!
A Simple Example
<?php
// Import PHPMailer classes into the global namespace
// These must be at the top of your script, not inside a function
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

// Load Composer's autoloader
require 'vendor/autoload.php';

// Instantiation and passing `true` enables exceptions
$mail = new PHPMailer(true);

try {
    //Server settings
    $mail->SMTPDebug = SMTP::DEBUG_SERVER;                      // Enable verbose debug output
    $mail->isSMTP();                                            // Send using SMTP
    $mail->Host       = 'smtp1.example.com';                    // Set the SMTP server to send through
    $mail->SMTPAuth   = true;                                   // Enable SMTP authentication
    $mail->Username   = 'user@example.com';                     // SMTP username
    $mail->Password   = 'secret';                               // SMTP password
    $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;         // Enable TLS encryption; `PHPMailer::ENCRYPTION_SMTPS` also accepted
    $mail->Port       = 587;                                    // TCP port to connect to

    //Recipients
    $mail->setFrom('from@example.com', 'Mailer');
    $mail->addAddress('joe@example.net', 'Joe User');     // Add a recipient
    $mail->addAddress('ellen@example.com');               // Name is optional
    $mail->addReplyTo('info@example.com', 'Information');
    $mail->addCC('cc@example.com');
    $mail->addBCC('bcc@example.com');

    // Attachments
    $mail->addAttachment('/var/tmp/file.tar.gz');         // Add attachments
    $mail->addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name

    // Content
    $mail->isHTML(true);                                  // Set email format to HTML
    $mail->Subject = 'Here is the subject';
    $mail->Body    = 'This is the HTML message body <b>in bold!</b>';
    $mail->AltBody = 'This is the body in plain text for non-HTML mail clients';

    $mail->send();
    echo 'Message has been sent';
} catch (Exception $e) {
    echo ""Message could not be sent. Mailer Error: {$mail->ErrorInfo}"";
}
You'll find plenty more to play with in the examples folder.
If you are re-using the instance (e.g. when sending to a mailing list), you may need to clear the recipient list to avoid sending duplicate messages. See the mailing list example for further guidance.
That's it. You should now be ready to use PHPMailer!
Localization
PHPMailer defaults to English, but in the language folder you'll find many translations for PHPMailer error messages that you may encounter. Their filenames contain ISO 639-1 language code for the translations, for example fr for French. To specify a language, you need to tell PHPMailer which one to use, like this:
// To load the French version
$mail->setLanguage('fr', '/optional/path/to/language/directory/');
We welcome corrections and new languages - if you're looking for corrections to do, run the PHPMailerLangTest.php script in the tests folder and it will show any missing translations.
Documentation
Start reading at the GitHub wiki. If you're having trouble, this should be the first place you look as it's the most frequently updated.
Examples of how to use PHPMailer for common scenarios can be found in the examples folder. If you're looking for a good starting point, we recommend you start with the Gmail example.
Note that in order to reduce PHPMailer's deployed code footprint, the examples are no longer included if you load PHPMailer via Composer or via GitHub's zip file download, so you'll need to either clone the git repository or use the above links to get to the examples directly.
Complete generated API documentation is available online.
You can generate complete API-level documentation by running phpdoc in the top-level folder, and documentation will appear in the docs folder, though you'll need to have PHPDocumentor installed. You may find the unit tests a good source of how to do various operations such as encryption.
If the documentation doesn't cover what you need, search the many questions on Stack Overflow, and before you ask a question about ""SMTP Error: Could not connect to SMTP host."", read the troubleshooting guide.
Tests
There is a PHPUnit test script in the test folder. PHPMailer uses PHPUnit 4.8 - we would use 5.x but we need to run on PHP 5.5.
Build status: 
If this isn't passing, is there something you can do to help?
Security
Please disclose any vulnerabilities found responsibly - report any security problems found to the maintainers privately.
PHPMailer versions prior to 5.2.22 (released January 9th 2017) have a local file disclosure vulnerability, CVE-2017-5223. If content passed into msgHTML() is sourced from unfiltered user input, relative paths can map to absolute local file paths and added as attachments. Also note that addAttachment (just like file_get_contents, passthru, unlink, etc) should not be passed user-sourced params either! Reported by Yongxiang Li of Asiasecurity.
PHPMailer versions prior to 5.2.20 (released December 28th 2016) are vulnerable to CVE-2016-10045 a remote code execution vulnerability, responsibly reported by Dawid Golunski, and patched by Paul Buonopane (@Zenexer).
PHPMailer versions prior to 5.2.18 (released December 2016) are vulnerable to CVE-2016-10033 a critical remote code execution vulnerability, responsibly reported by Dawid Golunski.
See SECURITY for more detail on security issues.
Contributing
Please submit bug reports, suggestions and pull requests to the GitHub issue tracker.
We're particularly interested in fixing edge-cases, expanding test coverage and updating translations.
If you found a mistake in the docs, or want to add something, go ahead and amend the wiki - anyone can edit it.
If you have git clones from prior to the move to the PHPMailer GitHub organisation, you'll need to update any remote URLs referencing the old GitHub location with a command like this from within your clone:
git remote set-url upstream https://github.com/PHPMailer/PHPMailer.git
Please don't use the SourceForge or Google Code projects any more; they are obsolete and no longer maintained.
Sponsorship
Development time and resources for PHPMailer are provided by Smartmessages.net, a powerful email marketing system.

Other contributions are gladly received, whether in beer üç∫, T-shirts üëï, Amazon wishlist raids, or cold, hard cash üí∞. If you'd like to donate to say ""thank you"" to maintainers or contributors, please contact them through individual profile pages via the contributors page.
Changelog
See changelog.
History

PHPMailer was originally written in 2001 by Brent R. Matzelle as a SourceForge project.
Marcus Bointon (coolbru on SF) and Andy Prevost (codeworxtech) took over the project in 2004.
Became an Apache incubator project on Google Code in 2010, managed by Jim Jagielski.
Marcus created his fork on GitHub in 2008.
Jim and Marcus decide to join forces and use GitHub as the canonical and official repo for PHPMailer in 2013.
PHPMailer moves to the PHPMailer organisation on GitHub in 2013.

What's changed since moving from SourceForge?

Official successor to the SourceForge and Google Code projects.
Test suite.
Continuous integration with Travis-CI.
Composer support.
Public development.
Additional languages and language strings.
CRAM-MD5 authentication support.
Preserves full repo history of authors, commits and branches from the original SourceForge project.

",phpmailer fullfeatured email creation transfer class php build status class features probably worlds popular code sending email php used many opensource projects wordpress drupal crm sugarcrm yii joomla many integrated smtp support send without local mail server send emails multiple cc bcc replyto addresses multipartalternative emails mail clients read html email add attachments including inline support utf content bit base binary quotedprintable encodings smtp authentication login plain crammd xoauth mechanisms ssl smtpstarttls transports validates email addresses automatically protect header injection attacks error messages languages dkim smime signing support compatible php later namespaced prevent name clashes much might need many php developers need send email code php function supports mail however provide assistance making use popular features encryption authentication html messages attachments formatting email correctly surprisingly difficult myriad overlapping rfcs requiring tight adherence horribly complicated formatting encoding rules vast majority code youll find online uses mail function directly plain wrong please dont tempted dont use phpmailer many excellent libraries look rolling try swiftmailer zendmail zetacomponents etc php mail function usually sends via local mail server typically fronted sendmail binary linux bsd macos platforms however windows usually doesnt include local mail server phpmailers integrated smtp implementation allows email sending windows platforms without local mail server license software distributed lgpl license along gpl cooperation commitment please read license information software availability distribution installation loading phpmailer available packagist using semantic versioning installation via composer recommended way install phpmailer add line composerjson file phpmailerphpmailer run composer require phpmailerphpmailer note vendor folder vendorautoloadphp script generated composer part phpmailer want use gmail xoauth authentication class also need add dependency leagueoauthclient package composerjson alternatively youre using composer copy contents phpmailer folder one includepath directories specified php configuration load class file manually php use phpmailerphpmailerphpmailer use phpmailerphpmailerexception require pathtophpmailersrcexceptionphp require pathtophpmailersrcphpmailerphp require pathtophpmailersrcsmtpphp youre using smtp class explicitly youre probably dont need use line smtp class dont speak git want tarball click zip button right project page github though note docs examples included tarball legacy versions phpmailer compatible php longer supported even security updates find latest version stable branch youre using php later switch x releases upgrading biggest changes source files src folder phpmailer declares namespace phpmailerphpmailer several important effects read upgrade guide details minimal installation installing entire package manually composer simple convenient reliable may want include vital files project least need srcphpmailerphp youre using smtp youll need srcsmtpphp youre using popbefore smtp youll need srcpopphp skip language folder youre showing errors users make englishonly errors youre using xoauth need srcoauthphp well composer dependencies services wish authenticate really much easier use composer simple example php import phpmailer classes global namespace must top script inside function use phpmailerphpmailerphpmailer use phpmailerphpmailersmtp use phpmailerphpmailerexception load composers autoloader require vendorautoloadphp instantiation passing true enables exceptions mail new phpmailertrue try server settings mailsmtpdebug smtpdebugserver enable verbose debug output mailissmtp send using smtp mailhost smtpexamplecom set smtp server send mailsmtpauth true enable smtp authentication mailusername userexamplecom smtp username mailpassword secret smtp password mailsmtpsecure phpmailerencryptionstarttls enable tls encryption phpmailerencryptionsmtps also accepted mailport tcp port connect recipients mailsetfromfromexamplecom mailer mailaddaddressjoeexamplenet joe user add recipient mailaddaddressellenexamplecom name optional mailaddreplytoinfoexamplecom information mailaddccccexamplecom mailaddbccbccexamplecom attachments mailaddattachmentvartmpfiletargz add attachments mailaddattachmenttmpimagejpg newjpg optional name content mailishtmltrue set email format html mailsubject subject mailbody html message body bin boldb mailaltbody body plain text nonhtml mail clients mailsend echo message sent catch exception e echo message could sent mailer error mailerrorinfo youll find plenty play examples folder reusing instance eg sending mailing list may need clear recipient list avoid sending duplicate messages see mailing list example guidance thats ready use phpmailer localization phpmailer defaults english language folder youll find many translations phpmailer error messages may encounter filenames contain iso language code translations example fr french specify language need tell phpmailer one use like load french version mailsetlanguagefr optionalpathtolanguagedirectory welcome corrections new languages youre looking corrections run phpmailerlangtestphp script tests folder show missing translations documentation start reading github wiki youre trouble first place look frequently updated examples use phpmailer common scenarios found examples folder youre looking good starting point recommend start gmail example note order reduce phpmailers deployed code footprint examples longer included load phpmailer via composer via githubs zip file download youll need either clone git repository use links get examples directly complete generated api documentation available online generate complete apilevel documentation running phpdoc toplevel folder documentation appear docs folder though youll need phpdocumentor installed may find unit tests good source various operations encryption documentation doesnt cover need search many questions stack overflow ask question smtp error could connect smtp host read troubleshooting guide tests phpunit test script test folder phpmailer uses phpunit would use x need run php build status isnt passing something help security please disclose vulnerabilities found responsibly report security problems found maintainers privately phpmailer versions prior released january th local file disclosure vulnerability cve content passed msghtml sourced unfiltered user input relative paths map absolute local file paths added attachments also note addattachment like filegetcontents passthru unlink etc passed usersourced params either reported yongxiang li asiasecurity phpmailer versions prior released december th vulnerable cve remote code execution vulnerability responsibly reported dawid golunski patched paul buonopane zenexer phpmailer versions prior released december vulnerable cve critical remote code execution vulnerability responsibly reported dawid golunski see security detail security issues contributing please submit bug reports suggestions pull requests github issue tracker particularly interested fixing edgecases expanding test coverage updating translations found mistake docs want add something go ahead amend wiki anyone edit git clones prior move phpmailer github organisation youll need update remote urls referencing old github location command like within clone git remote seturl upstream httpsgithubcomphpmailerphpmailergit please dont use sourceforge google code projects obsolete longer maintained sponsorship development time resources phpmailer provided smartmessagesnet powerful email marketing system contributions gladly received whether beer tshirts amazon wishlist raids cold hard cash youd like donate say thank maintainers contributors please contact individual profile pages via contributors page changelog see changelog history phpmailer originally written brent r matzelle sourceforge project marcus bointon coolbru sf andy prevost codeworxtech took project became apache incubator project google code managed jim jagielski marcus created fork github jim marcus decide join forces use github canonical official repo phpmailer phpmailer moves phpmailer organisation github whats changed since moving sourceforge official successor sourceforge google code projects test suite continuous integration travisci composer support public development additional languages language strings crammd authentication support preserves full repo history authors commits branches original sourceforge project,phpmailer fullfeatur email creation transfer class php build statu class featur probabl world popular code send email php use mani opensourc project wordpress drupal crm sugarcrm yii joomla mani integr smtp support send without local mail server send email multipl cc bcc replyto address multipartaltern email mail client read html email add attach includ inlin support utf content bit base binari quotedprint encod smtp authent login plain crammd xoauth mechan ssl smtpstarttl transport valid email address automat protect header inject attack error messag languag dkim smime sign support compat php later namespac prevent name clash much might need mani php develop need send email code php function support mail howev provid assist make use popular featur encrypt authent html messag attach format email correctli surprisingli difficult myriad overlap rfc requir tight adher horribl complic format encod rule vast major code youll find onlin use mail function directli plain wrong pleas dont tempt dont use phpmailer mani excel librari look roll tri swiftmail zendmail zetacompon etc php mail function usual send via local mail server typic front sendmail binari linux bsd maco platform howev window usual doesnt includ local mail server phpmailer integr smtp implement allow email send window platform without local mail server licens softwar distribut lgpl licens along gpl cooper commit pleas read licens inform softwar avail distribut instal load phpmailer avail packagist use semant version instal via compos recommend way instal phpmailer add line composerjson file phpmailerphpmail run compos requir phpmailerphpmail note vendor folder vendorautoloadphp script gener compos part phpmailer want use gmail xoauth authent class also need add depend leagueoauthcli packag composerjson altern your use compos copi content phpmailer folder one includepath directori specifi php configur load class file manual php use phpmailerphpmailerphpmail use phpmailerphpmailerexcept requir pathtophpmailersrcexceptionphp requir pathtophpmailersrcphpmailerphp requir pathtophpmailersrcsmtpphp your use smtp class explicitli your probabl dont need use line smtp class dont speak git want tarbal click zip button right project page github though note doc exampl includ tarbal legaci version phpmailer compat php longer support even secur updat find latest version stabl branch your use php later switch x releas upgrad biggest chang sourc file src folder phpmailer declar namespac phpmailerphpmail sever import effect read upgrad guid detail minim instal instal entir packag manual compos simpl conveni reliabl may want includ vital file project least need srcphpmailerphp your use smtp youll need srcsmtpphp your use popbefor smtp youll need srcpopphp skip languag folder your show error user make englishonli error your use xoauth need srcoauthphp well compos depend servic wish authent realli much easier use compos simpl exampl php import phpmailer class global namespac must top script insid function use phpmailerphpmailerphpmail use phpmailerphpmailersmtp use phpmailerphpmailerexcept load compos autoload requir vendorautoloadphp instanti pass true enabl except mail new phpmailertru tri server set mailsmtpdebug smtpdebugserv enabl verbos debug output mailissmtp send use smtp mailhost smtpexamplecom set smtp server send mailsmtpauth true enabl smtp authent mailusernam userexamplecom smtp usernam mailpassword secret smtp password mailsmtpsecur phpmailerencryptionstarttl enabl tl encrypt phpmailerencryptionsmtp also accept mailport tcp port connect recipi mailsetfromfromexamplecom mailer mailaddaddressjoeexamplenet joe user add recipi mailaddaddressellenexamplecom name option mailaddreplytoinfoexamplecom inform mailaddccccexamplecom mailaddbccbccexamplecom attach mailaddattachmentvartmpfiletargz add attach mailaddattachmenttmpimagejpg newjpg option name content mailishtmltru set email format html mailsubject subject mailbodi html messag bodi bin boldb mailaltbodi bodi plain text nonhtml mail client mailsend echo messag sent catch except e echo messag could sent mailer error mailerrorinfo youll find plenti play exampl folder reus instanc eg send mail list may need clear recipi list avoid send duplic messag see mail list exampl guidanc that readi use phpmailer local phpmailer default english languag folder youll find mani translat phpmailer error messag may encount filenam contain iso languag code translat exampl fr french specifi languag need tell phpmailer one use like load french version mailsetlanguagefr optionalpathtolanguagedirectori welcom correct new languag your look correct run phpmailerlangtestphp script test folder show miss translat document start read github wiki your troubl first place look frequent updat exampl use phpmailer common scenario found exampl folder your look good start point recommend start gmail exampl note order reduc phpmailer deploy code footprint exampl longer includ load phpmailer via compos via github zip file download youll need either clone git repositori use link get exampl directli complet gener api document avail onlin gener complet apilevel document run phpdoc toplevel folder document appear doc folder though youll need phpdocumentor instal may find unit test good sourc variou oper encrypt document doesnt cover need search mani question stack overflow ask question smtp error could connect smtp host read troubleshoot guid test phpunit test script test folder phpmailer use phpunit would use x need run php build statu isnt pass someth help secur pleas disclos vulner found respons report secur problem found maintain privat phpmailer version prior releas januari th local file disclosur vulner cve content pass msghtml sourc unfilt user input rel path map absolut local file path ad attach also note addattach like filegetcont passthru unlink etc pass usersourc param either report yongxiang li asiasecur phpmailer version prior releas decemb th vulner cve remot code execut vulner respons report dawid golunski patch paul buonopan zenex phpmailer version prior releas decemb vulner cve critic remot code execut vulner respons report dawid golunski see secur detail secur issu contribut pleas submit bug report suggest pull request github issu tracker particularli interest fix edgecas expand test coverag updat translat found mistak doc want add someth go ahead amend wiki anyon edit git clone prior move phpmailer github organis youll need updat remot url referenc old github locat command like within clone git remot seturl upstream httpsgithubcomphpmailerphpmailergit pleas dont use sourceforg googl code project obsolet longer maintain sponsorship develop time resourc phpmailer provid smartmessagesnet power email market system contribut gladli receiv whether beer tshirt amazon wishlist raid cold hard cash youd like donat say thank maintain contributor pleas contact individu profil page via contributor page changelog see changelog histori phpmailer origin written brent r matzel sourceforg project marcu bointon coolbru sf andi prevost codeworxtech took project becam apach incub project googl code manag jim jagielski marcu creat fork github jim marcu decid join forc use github canon offici repo phpmailer phpmailer move phpmailer organis github what chang sinc move sourceforg offici successor sourceforg googl code project test suit continu integr travisci compos support public develop addit languag languag string crammd authent support preserv full repo histori author commit branch origin sourceforg project,phpmailer fullfeatured email creation transfer class php build status class feature probably world popular code sending email php used many opensource project wordpress drupal crm sugarcrm yii joomla many integrated smtp support send without local mail server send email multiple cc bcc replyto address multipartalternative email mail client read html email add attachment including inline support utf content bit base binary quotedprintable encoding smtp authentication login plain crammd xoauth mechanism ssl smtpstarttls transport validates email address automatically protect header injection attack error message language dkim smime signing support compatible php later namespaced prevent name clash much might need many php developer need send email code php function support mail however provide assistance making use popular feature encryption authentication html message attachment formatting email correctly surprisingly difficult myriad overlapping rfcs requiring tight adherence horribly complicated formatting encoding rule vast majority code youll find online us mail function directly plain wrong please dont tempted dont use phpmailer many excellent library look rolling try swiftmailer zendmail zetacomponents etc php mail function usually sends via local mail server typically fronted sendmail binary linux bsd macos platform however window usually doesnt include local mail server phpmailers integrated smtp implementation allows email sending window platform without local mail server license software distributed lgpl license along gpl cooperation commitment please read license information software availability distribution installation loading phpmailer available packagist using semantic versioning installation via composer recommended way install phpmailer add line composerjson file phpmailerphpmailer run composer require phpmailerphpmailer note vendor folder vendorautoloadphp script generated composer part phpmailer want use gmail xoauth authentication class also need add dependency leagueoauthclient package composerjson alternatively youre using composer copy content phpmailer folder one includepath directory specified php configuration load class file manually php use phpmailerphpmailerphpmailer use phpmailerphpmailerexception require pathtophpmailersrcexceptionphp require pathtophpmailersrcphpmailerphp require pathtophpmailersrcsmtpphp youre using smtp class explicitly youre probably dont need use line smtp class dont speak git want tarball click zip button right project page github though note doc example included tarball legacy version phpmailer compatible php longer supported even security update find latest version stable branch youre using php later switch x release upgrading biggest change source file src folder phpmailer declares namespace phpmailerphpmailer several important effect read upgrade guide detail minimal installation installing entire package manually composer simple convenient reliable may want include vital file project least need srcphpmailerphp youre using smtp youll need srcsmtpphp youre using popbefore smtp youll need srcpopphp skip language folder youre showing error user make englishonly error youre using xoauth need srcoauthphp well composer dependency service wish authenticate really much easier use composer simple example php import phpmailer class global namespace must top script inside function use phpmailerphpmailerphpmailer use phpmailerphpmailersmtp use phpmailerphpmailerexception load composer autoloader require vendorautoloadphp instantiation passing true enables exception mail new phpmailertrue try server setting mailsmtpdebug smtpdebugserver enable verbose debug output mailissmtp send using smtp mailhost smtpexamplecom set smtp server send mailsmtpauth true enable smtp authentication mailusername userexamplecom smtp username mailpassword secret smtp password mailsmtpsecure phpmailerencryptionstarttls enable tl encryption phpmailerencryptionsmtps also accepted mailport tcp port connect recipient mailsetfromfromexamplecom mailer mailaddaddressjoeexamplenet joe user add recipient mailaddaddressellenexamplecom name optional mailaddreplytoinfoexamplecom information mailaddccccexamplecom mailaddbccbccexamplecom attachment mailaddattachmentvartmpfiletargz add attachment mailaddattachmenttmpimagejpg newjpg optional name content mailishtmltrue set email format html mailsubject subject mailbody html message body bin boldb mailaltbody body plain text nonhtml mail client mailsend echo message sent catch exception e echo message could sent mailer error mailerrorinfo youll find plenty play example folder reusing instance eg sending mailing list may need clear recipient list avoid sending duplicate message see mailing list example guidance thats ready use phpmailer localization phpmailer default english language folder youll find many translation phpmailer error message may encounter filename contain iso language code translation example fr french specify language need tell phpmailer one use like load french version mailsetlanguagefr optionalpathtolanguagedirectory welcome correction new language youre looking correction run phpmailerlangtestphp script test folder show missing translation documentation start reading github wiki youre trouble first place look frequently updated example use phpmailer common scenario found example folder youre looking good starting point recommend start gmail example note order reduce phpmailers deployed code footprint example longer included load phpmailer via composer via githubs zip file download youll need either clone git repository use link get example directly complete generated api documentation available online generate complete apilevel documentation running phpdoc toplevel folder documentation appear doc folder though youll need phpdocumentor installed may find unit test good source various operation encryption documentation doesnt cover need search many question stack overflow ask question smtp error could connect smtp host read troubleshooting guide test phpunit test script test folder phpmailer us phpunit would use x need run php build status isnt passing something help security please disclose vulnerability found responsibly report security problem found maintainer privately phpmailer version prior released january th local file disclosure vulnerability cve content passed msghtml sourced unfiltered user input relative path map absolute local file path added attachment also note addattachment like filegetcontents passthru unlink etc passed usersourced params either reported yongxiang li asiasecurity phpmailer version prior released december th vulnerable cve remote code execution vulnerability responsibly reported dawid golunski patched paul buonopane zenexer phpmailer version prior released december vulnerable cve critical remote code execution vulnerability responsibly reported dawid golunski see security detail security issue contributing please submit bug report suggestion pull request github issue tracker particularly interested fixing edgecases expanding test coverage updating translation found mistake doc want add something go ahead amend wiki anyone edit git clone prior move phpmailer github organisation youll need update remote url referencing old github location command like within clone git remote seturl upstream httpsgithubcomphpmailerphpmailergit please dont use sourceforge google code project obsolete longer maintained sponsorship development time resource phpmailer provided smartmessagesnet powerful email marketing system contribution gladly received whether beer tshirts amazon wishlist raid cold hard cash youd like donate say thank maintainer contributor please contact individual profile page via contributor page changelog see changelog history phpmailer originally written brent r matzelle sourceforge project marcus bointon coolbru sf andy prevost codeworxtech took project became apache incubator project google code managed jim jagielski marcus created fork github jim marcus decide join force use github canonical official repo phpmailer phpmailer move phpmailer organisation github whats changed since moving sourceforge official successor sourceforge google code project test suite continuous integration travisci composer support public development additional language language string crammd authentication support preserve full repo history author commits branch original sourceforge project
53,PHP,GitHub - briannesbitt/Carbon: A simple PHP API extension for DateTime.,"Carbon







An international PHP extension for DateTime. http://carbon.nesbot.com
use Carbon\Carbon;

printf(""Right now is %s"", Carbon::now()->toDateTimeString());
printf(""Right now in Vancouver is %s"", Carbon::now('America/Vancouver'));  //implicit __toString()
$tomorrow = Carbon::now()->addDay();
$lastWeek = Carbon::now()->subWeek();
$nextSummerOlympics = Carbon::createFromDate(2016)->addYears(4);

$officialDate = Carbon::now()->toRfc2822String();

$howOldAmI = Carbon::createFromDate(1975, 5, 21)->age;

$noonTodayLondonTime = Carbon::createFromTime(12, 0, 0, 'Europe/London');

$internetWillBlowUpOn = Carbon::create(2038, 01, 19, 3, 14, 7, 'GMT');

// Don't really want this to happen so mock now
Carbon::setTestNow(Carbon::createFromDate(2000, 1, 1));

// comparisons are always done in UTC
if (Carbon::now()->gte($internetWillBlowUpOn)) {
    die();
}

// Phew! Return to normal behaviour
Carbon::setTestNow();

if (Carbon::now()->isWeekend()) {
    echo 'Party!';
}
// Over 200 languages (and over 500 regional variants) supported:
echo Carbon::now()->subMinutes(2)->diffForHumans(); // '2 minutes ago'
echo Carbon::now()->subMinutes(2)->locale('zh_CN')->diffForHumans(); // '2ÂàÜÈíüÂâç'
echo Carbon::parse('2019-07-23 14:51')->isoFormat('LLLL'); // 'Tuesday, July 23, 2019 2:51 PM'
echo Carbon::parse('2019-07-23 14:51')->locale('fr_FR')->isoFormat('LLLL'); // 'mardi 23 juillet 2019 14:51'

// ... but also does 'from now', 'after' and 'before'
// rolling up to seconds, minutes, hours, days, months, years

$daysSinceEpoch = Carbon::createFromTimestamp(0)->diffInDays();
Get supported nesbot/carbon with the Tidelift Subscription
Installation
With Composer
$ composer require nesbot/carbon

{
    ""require"": {
        ""nesbot/carbon"": ""^2.16""
    }
}
<?php
require 'vendor/autoload.php';

use Carbon\Carbon;

printf(""Now: %s"", Carbon::now());

Without Composer
Why are you not using composer? Download the Carbon latest release and put the contents of the ZIP archive into a directory in your project. Then require the file autoload.php to get all classes and dependencies loaded on need.
<?php
require 'path-to-Carbon-directory/autoload.php';

use Carbon\Carbon;

printf(""Now: %s"", Carbon::now());
Docs
http://carbon.nesbot.com/docs
Security contact information
To report a security vulnerability, please use the
Tidelift security contact.
Tidelift will coordinate the fix and disclosure.
Credits
Contributors
This project exists thanks to all the people who contribute.

Translators
Thanks to people helping us to translate Carbon in so many languages
Backers
Thank you to all our backers! üôè [Become a backer]

Sponsors
Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]





",carbon international php extension datetime httpcarbonnesbotcom use carboncarbon printfright carbonnowtodatetimestring printfright vancouver carbonnowamericavancouver implicit tostring tomorrow carbonnowaddday lastweek carbonnowsubweek nextsummerolympics carboncreatefromdateaddyears officialdate carbonnowtorfcstring howoldami carboncreatefromdate age noontodaylondontime carboncreatefromtime europelondon internetwillblowupon carboncreate gmt dont really want happen mock carbonsettestnowcarboncreatefromdate comparisons always done utc carbonnowgteinternetwillblowupon die phew return normal behaviour carbonsettestnow carbonnowisweekend echo party languages regional variants supported echo carbonnowsubminutesdiffforhumans minutes ago echo carbonnowsubminuteslocalezhcndiffforhumans echo carbonparse isoformatllll tuesday july pm echo carbonparse localefrfrisoformatllll mardi juillet also rolling seconds minutes hours days months years dayssinceepoch carboncreatefromtimestampdiffindays get supported nesbotcarbon tidelift subscription installation composer composer require nesbotcarbon require nesbotcarbon php require vendorautoloadphp use carboncarbon printfnow carbonnow without composer using composer download carbon latest release put contents zip archive directory project require file autoloadphp get classes dependencies loaded need php require pathtocarbondirectoryautoloadphp use carboncarbon printfnow carbonnow docs httpcarbonnesbotcomdocs security contact information report security vulnerability please use tidelift security contact tidelift coordinate fix disclosure credits contributors project exists thanks people contribute translators thanks people helping us translate carbon many languages backers thank backers become backer sponsors support project becoming sponsor logo show link website become sponsor,carbon intern php extens datetim httpcarbonnesbotcom use carboncarbon printfright carbonnowtodatetimestr printfright vancouv carbonnowamericavancouv implicit tostr tomorrow carbonnowaddday lastweek carbonnowsubweek nextsummerolymp carboncreatefromdateaddyear officiald carbonnowtorfcstr howoldami carboncreatefromd age noontodaylondontim carboncreatefromtim europelondon internetwillblowupon carboncr gmt dont realli want happen mock carbonsettestnowcarboncreatefromd comparison alway done utc carbonnowgteinternetwillblowupon die phew return normal behaviour carbonsettestnow carbonnowisweekend echo parti languag region variant support echo carbonnowsubminutesdiffforhuman minut ago echo carbonnowsubminuteslocalezhcndiffforhuman echo carbonpars isoformatlll tuesday juli pm echo carbonpars localefrfrisoformatlll mardi juillet also roll second minut hour day month year dayssinceepoch carboncreatefromtimestampdiffinday get support nesbotcarbon tidelift subscript instal compos compos requir nesbotcarbon requir nesbotcarbon php requir vendorautoloadphp use carboncarbon printfnow carbonnow without compos use compos download carbon latest releas put content zip archiv directori project requir file autoloadphp get class depend load need php requir pathtocarbondirectoryautoloadphp use carboncarbon printfnow carbonnow doc httpcarbonnesbotcomdoc secur contact inform report secur vulner pleas use tidelift secur contact tidelift coordin fix disclosur credit contributor project exist thank peopl contribut translat thank peopl help us translat carbon mani languag backer thank backer becom backer sponsor support project becom sponsor logo show link websit becom sponsor,carbon international php extension datetime httpcarbonnesbotcom use carboncarbon printfright carbonnowtodatetimestring printfright vancouver carbonnowamericavancouver implicit tostring tomorrow carbonnowaddday lastweek carbonnowsubweek nextsummerolympics carboncreatefromdateaddyears officialdate carbonnowtorfcstring howoldami carboncreatefromdate age noontodaylondontime carboncreatefromtime europelondon internetwillblowupon carboncreate gmt dont really want happen mock carbonsettestnowcarboncreatefromdate comparison always done utc carbonnowgteinternetwillblowupon die phew return normal behaviour carbonsettestnow carbonnowisweekend echo party language regional variant supported echo carbonnowsubminutesdiffforhumans minute ago echo carbonnowsubminuteslocalezhcndiffforhumans echo carbonparse isoformatllll tuesday july pm echo carbonparse localefrfrisoformatllll mardi juillet also rolling second minute hour day month year dayssinceepoch carboncreatefromtimestampdiffindays get supported nesbotcarbon tidelift subscription installation composer composer require nesbotcarbon require nesbotcarbon php require vendorautoloadphp use carboncarbon printfnow carbonnow without composer using composer download carbon latest release put content zip archive directory project require file autoloadphp get class dependency loaded need php require pathtocarbondirectoryautoloadphp use carboncarbon printfnow carbonnow doc httpcarbonnesbotcomdocs security contact information report security vulnerability please use tidelift security contact tidelift coordinate fix disclosure credit contributor project exists thanks people contribute translator thanks people helping u translate carbon many language backer thank backer become backer sponsor support project becoming sponsor logo show link website become sponsor
54,PHP,"GitHub - yiisoft/yii2: Yii 2: The Fast, Secure and Professional PHP Framework","




Yii 2 is a modern framework designed to be a solid foundation for your PHP application.
It is fast, secure and efficient and works right out of the box pre-configured with reasonable defaults.
The framework is easy to adjust to meet your needs, because Yii has been designed to be flexible.






Installation

The minimum required PHP version of Yii is PHP 5.4.
It works best with PHP 7.
Follow the Definitive Guide
in order to get step by step instructions.

Documentation

A Definitive Guide and
a Class Reference cover every detail
of the framework.
There is a PDF version of the Definitive Guide
and a Definitive Guide Mirror which is updated every 15 minutes.
For Yii 1.1 users, there is Upgrading from Yii 1.1
to get an idea of what has changed in 2.0.

Community

Participate in discussions at forums.
Community Slack and Chat in IRC.
Follow us on Facebook, Twitter
and GitHub.
Check other communities.

Contributing
The framework is Open Source powered by an excellent community.
You may join us and:

Report an issue
Translate documentation or messages
Give us feedback or start a design discussion
Contribute to the core code or fix bugs
Become a sponsor

Reporting Security issues
Please refer to a special page at the website
describing proper workflow for security issue reports.
Directory Structure
build/               internally used build tools
docs/                documentation
framework/           core framework code
tests/               tests of the core framework code

Spreading the Word
Acknowledging or citing Yii 2 is as important as direct contributions.
In presentations
If you are giving a presentation or talk featuring work that makes use of Yii 2 and would like to acknowledge it,
we suggest using our logo on your title slide.
In projects
If you are using Yii 2 as part of an OpenSource project, a way to acknowledge it is to
use a special badge in your README:

If your code is hosted at GitHub, you can place the following in your README.md file to get the badge:
[![Yii2](https://img.shields.io/badge/Powered_by-Yii_Framework-green.svg?style=flat)](https://www.yiiframework.com/)

Sponsoring
Support this project by becoming a sponsor or a backer.
 
",yii modern framework designed solid foundation php application fast secure efficient works right box preconfigured reasonable defaults framework easy adjust meet needs yii designed flexible installation minimum required php version yii php works best php follow definitive guide order get step step instructions documentation definitive guide class reference cover every detail framework pdf version definitive guide definitive guide mirror updated every minutes yii users upgrading yii get idea changed community participate discussions forums community slack chat irc follow us facebook twitter github check communities contributing framework open source powered excellent community may join us report issue translate documentation messages give us feedback start design discussion contribute core code fix bugs become sponsor reporting security issues please refer special page website describing proper workflow security issue reports directory structure build internally used build tools docs documentation framework core framework code tests tests core framework code spreading word acknowledging citing yii important direct contributions presentations giving presentation talk featuring work makes use yii would like acknowledge suggest using logo title slide projects using yii part opensource project way acknowledge use special badge readme code hosted github place following readmemd file get badge yiihttpsimgshieldsiobadgepoweredbyyiiframeworkgreensvgstyleflathttpswwwyiiframeworkcom sponsoring support project becoming sponsor backer,yii modern framework design solid foundat php applic fast secur effici work right box preconfigur reason default framework easi adjust meet need yii design flexibl instal minimum requir php version yii php work best php follow definit guid order get step step instruct document definit guid class refer cover everi detail framework pdf version definit guid definit guid mirror updat everi minut yii user upgrad yii get idea chang commun particip discuss forum commun slack chat irc follow us facebook twitter github check commun contribut framework open sourc power excel commun may join us report issu translat document messag give us feedback start design discuss contribut core code fix bug becom sponsor report secur issu pleas refer special page websit describ proper workflow secur issu report directori structur build intern use build tool doc document framework core framework code test test core framework code spread word acknowledg cite yii import direct contribut present give present talk featur work make use yii would like acknowledg suggest use logo titl slide project use yii part opensourc project way acknowledg use special badg readm code host github place follow readmemd file get badg yiihttpsimgshieldsiobadgepoweredbyyiiframeworkgreensvgstyleflathttpswwwyiiframeworkcom sponsor support project becom sponsor backer,yii modern framework designed solid foundation php application fast secure efficient work right box preconfigured reasonable default framework easy adjust meet need yii designed flexible installation minimum required php version yii php work best php follow definitive guide order get step step instruction documentation definitive guide class reference cover every detail framework pdf version definitive guide definitive guide mirror updated every minute yii user upgrading yii get idea changed community participate discussion forum community slack chat irc follow u facebook twitter github check community contributing framework open source powered excellent community may join u report issue translate documentation message give u feedback start design discussion contribute core code fix bug become sponsor reporting security issue please refer special page website describing proper workflow security issue report directory structure build internally used build tool doc documentation framework core framework code test test core framework code spreading word acknowledging citing yii important direct contribution presentation giving presentation talk featuring work make use yii would like acknowledge suggest using logo title slide project using yii part opensource project way acknowledge use special badge readme code hosted github place following readmemd file get badge yiihttpsimgshieldsiobadgepoweredbyyiiframeworkgreensvgstyleflathttpswwwyiiframeworkcom sponsoring support project becoming sponsor backer
55,PHP,"GitHub - WordPress/WordPress: WordPress, Git-ified. Synced via SVN every 15 minutes, including branches and tags! This repository is just a mirror of the WordPress subversion repository. Please do not send pull requests. Submit patches to https://core.trac.wordpress.org/ instead.",,nan,nan,nan
56,PHP,"GitHub - matomo-org/matomo: Liberating Web Analytics. Star us on Github? +1. Matomo is the leading open alternative to Google Analytics that gives you full control over your data. Matomo lets you easily collect data from websites, apps & the IoT and visualise this data and extract insights. Privacy is built-in. We love Pull Requests!","Matomo (formerly Piwik) - matomo.org



Code Status


Description
Matomo is the leading Free/Libre open analytics platform.
Matomo is a full-featured PHP MySQL software program that you download and install on your own webserver.
At the end of the five-minute installation process, you will be given a JavaScript code.
Simply copy and paste this tag on websites you wish to track and access your analytics reports in real-time.
Matomo aims to be a Free software alternative to Google Analytics and is already used on more than 1,400,000 websites. Privacy is built-in!
Mission Statement

¬´ To create, as a community, the leading international open source digital analytics platform, that gives every user full control of their data. ¬ª

Or in short:

¬´ Liberate Web Analytics ¬ª

License
Matomo is released under the GPL v3 (or later) license, see LICENSE
Requirements

PHP 5.5.9 or greater
MySQL version 5.5 or greater, or MariaDB
PHP extension pdo and pdo_mysql, or the MySQLi extension.
Matomo is OS / server independent

See https://matomo.org/docs/requirements/
Install Matomo

Download Matomo
Upload matomo to your webserver
Point your browser to the directory
Follow the steps
Add the given javascript code to your pages
(You may also generate fake data to experiment, by enabling the plugin VisitorGenerator)

See https://matomo.org/docs/installation/
(When using Matomo for development you need to install Matomo from the Git repository.)
Free trial
If you do not have a server or don't want to host yourself you can use our Matomo Cloud partner service (30 day free trial): https://matomo.org/start-30-day-free-analytics-trial/
Online Demo
Check out the online demo for Matomo at demo.matomo.org
Changelog
For the list of all tickets closed in the current and past releases, see matomo.org/changelog/. For the list of technical changes in the Matomo platform, see developer.matomo.org/changelog.
Get involved!
We believe in liberating Web Analytics, providing a free platform for simple and advanced analytics. Matomo was built by dozens of people like you,
and we need your help to make Matomo better‚Ä¶ Why not participate in a useful project today? Learn how you can contribute to Matomo.
Quality Assurance
The Matomo project uses an ever-expanding comprehensive set of thousands of unit tests and hundreds of automated integration tests, system tests, JavaScript tests, and screenshot UI tests, running on a continuous integration server as part of its software quality assurance. Learn more
We use BrowserStack.com testing tool to help check the Matomo user interface is compatible with many browsers.
Security
Security is a top priority at Matomo. As potential issues are discovered, we validate, patch and release fixes as quickly as we can. We have a security bug bounty program in place that rewards researchers for finding security issues and disclosing them to us.
Learn more or check out our HackerOne program.
Support for Matomo
For Free support, post a message in our community forums: forum.matomo.org
For Professional paid support, purchase a Matomo On-Premises Support Plan: matomo.org/support-plans
Contact
Website: matomo.org
About us: matomo.org/team/
Contact us: matomo.org/contact/
More information
What makes Matomo unique from the competition:


You own your web analytics data: since Matomo is installed on your server, the data is stored in your own database and you can get all the statistics using the powerful Matomo Analytics API.


Matomo is a Free Software which can easily be configured to respect your visitors' privacy.


Modern, easy to use User Interface: you can fully customize your dashboard, drag and drop widgets and more.


Matomo features are built inside plugins: you can add new features and remove the ones you don‚Äôt need.
You can build your own web analytics plugins or hire a consultant to have your custom feature built-in Matomo.


A vibrant international Open community of more than 200,000 active users (tracking even more websites!)


Advanced Web Analytics capabilities such as E-commerce Tracking, Goal tracking, Campaign tracking,
Custom Variables, Email Reports, Custom Segment Editor, Geo Location, Real-time visits and maps, and a lot more!


Documentation and more info on https://matomo.org
We are together creating the best open analytics platform in the world!
",matomo formerly piwik matomoorg code status description matomo leading freelibre open analytics platform matomo fullfeatured php mysql software program download install webserver end fiveminute installation process given javascript code simply copy paste tag websites wish track access analytics reports realtime matomo aims free software alternative google analytics already used websites privacy builtin mission statement create community leading international open source digital analytics platform gives every user full control data short liberate web analytics license matomo released gpl v later license see license requirements php greater mysql version greater mariadb php extension pdo pdomysql mysqli extension matomo os server independent see httpsmatomoorgdocsrequirements install matomo download matomo upload matomo webserver point browser directory follow steps add given javascript code pages may also generate fake data experiment enabling plugin visitorgenerator see httpsmatomoorgdocsinstallation using matomo development need install matomo git repository free trial server dont want host use matomo cloud partner service day free trial httpsmatomoorgstartdayfreeanalyticstrial online demo check online demo matomo demomatomoorg changelog list tickets closed current past releases see matomoorgchangelog list technical changes matomo platform see developermatomoorgchangelog get involved believe liberating web analytics providing free platform simple advanced analytics matomo built dozens people like need help make matomo better participate useful project today learn contribute matomo quality assurance matomo project uses everexpanding comprehensive set thousands unit tests hundreds automated integration tests system tests javascript tests screenshot ui tests running continuous integration server part software quality assurance learn use browserstackcom testing tool help check matomo user interface compatible many browsers security security top priority matomo potential issues discovered validate patch release fixes quickly security bug bounty program place rewards researchers finding security issues disclosing us learn check hackerone program support matomo free support post message community forums forummatomoorg professional paid support purchase matomo onpremises support plan matomoorgsupportplans contact website matomoorg us matomoorgteam contact us matomoorgcontact information makes matomo unique competition web analytics data since matomo installed server data stored database get statistics using powerful matomo analytics api matomo free software easily configured respect visitors privacy modern easy use user interface fully customize dashboard drag drop widgets matomo features built inside plugins add new features remove ones dont need build web analytics plugins hire consultant custom feature builtin matomo vibrant international open community active users tracking even websites advanced web analytics capabilities ecommerce tracking goal tracking campaign tracking custom variables email reports custom segment editor geo location realtime visits maps lot documentation info httpsmatomoorg together creating best open analytics platform world,matomo formerli piwik matomoorg code statu descript matomo lead freelibr open analyt platform matomo fullfeatur php mysql softwar program download instal webserv end fiveminut instal process given javascript code simpli copi past tag websit wish track access analyt report realtim matomo aim free softwar altern googl analyt alreadi use websit privaci builtin mission statement creat commun lead intern open sourc digit analyt platform give everi user full control data short liber web analyt licens matomo releas gpl v later licens see licens requir php greater mysql version greater mariadb php extens pdo pdomysql mysqli extens matomo os server independ see httpsmatomoorgdocsrequir instal matomo download matomo upload matomo webserv point browser directori follow step add given javascript code page may also gener fake data experi enabl plugin visitorgener see httpsmatomoorgdocsinstal use matomo develop need instal matomo git repositori free trial server dont want host use matomo cloud partner servic day free trial httpsmatomoorgstartdayfreeanalyticstri onlin demo check onlin demo matomo demomatomoorg changelog list ticket close current past releas see matomoorgchangelog list technic chang matomo platform see developermatomoorgchangelog get involv believ liber web analyt provid free platform simpl advanc analyt matomo built dozen peopl like need help make matomo better particip use project today learn contribut matomo qualiti assur matomo project use everexpand comprehens set thousand unit test hundr autom integr test system test javascript test screenshot ui test run continu integr server part softwar qualiti assur learn use browserstackcom test tool help check matomo user interfac compat mani browser secur secur top prioriti matomo potenti issu discov valid patch releas fix quickli secur bug bounti program place reward research find secur issu disclos us learn check hackeron program support matomo free support post messag commun forum forummatomoorg profession paid support purchas matomo onpremis support plan matomoorgsupportplan contact websit matomoorg us matomoorgteam contact us matomoorgcontact inform make matomo uniqu competit web analyt data sinc matomo instal server data store databas get statist use power matomo analyt api matomo free softwar easili configur respect visitor privaci modern easi use user interfac fulli custom dashboard drag drop widget matomo featur built insid plugin add new featur remov one dont need build web analyt plugin hire consult custom featur builtin matomo vibrant intern open commun activ user track even websit advanc web analyt capabl ecommerc track goal track campaign track custom variabl email report custom segment editor geo locat realtim visit map lot document info httpsmatomoorg togeth creat best open analyt platform world,matomo formerly piwik matomoorg code status description matomo leading freelibre open analytics platform matomo fullfeatured php mysql software program download install webserver end fiveminute installation process given javascript code simply copy paste tag website wish track access analytics report realtime matomo aim free software alternative google analytics already used website privacy builtin mission statement create community leading international open source digital analytics platform give every user full control data short liberate web analytics license matomo released gpl v later license see license requirement php greater mysql version greater mariadb php extension pdo pdomysql mysqli extension matomo o server independent see httpsmatomoorgdocsrequirements install matomo download matomo upload matomo webserver point browser directory follow step add given javascript code page may also generate fake data experiment enabling plugin visitorgenerator see httpsmatomoorgdocsinstallation using matomo development need install matomo git repository free trial server dont want host use matomo cloud partner service day free trial httpsmatomoorgstartdayfreeanalyticstrial online demo check online demo matomo demomatomoorg changelog list ticket closed current past release see matomoorgchangelog list technical change matomo platform see developermatomoorgchangelog get involved believe liberating web analytics providing free platform simple advanced analytics matomo built dozen people like need help make matomo better participate useful project today learn contribute matomo quality assurance matomo project us everexpanding comprehensive set thousand unit test hundred automated integration test system test javascript test screenshot ui test running continuous integration server part software quality assurance learn use browserstackcom testing tool help check matomo user interface compatible many browser security security top priority matomo potential issue discovered validate patch release fix quickly security bug bounty program place reward researcher finding security issue disclosing u learn check hackerone program support matomo free support post message community forum forummatomoorg professional paid support purchase matomo onpremises support plan matomoorgsupportplans contact website matomoorg u matomoorgteam contact u matomoorgcontact information make matomo unique competition web analytics data since matomo installed server data stored database get statistic using powerful matomo analytics api matomo free software easily configured respect visitor privacy modern easy use user interface fully customize dashboard drag drop widget matomo feature built inside plugins add new feature remove one dont need build web analytics plugins hire consultant custom feature builtin matomo vibrant international open community active user tracking even website advanced web analytics capability ecommerce tracking goal tracking campaign tracking custom variable email report custom segment editor geo location realtime visit map lot documentation info httpsmatomoorg together creating best open analytics platform world
57,PHP,GitHub - erusev/parsedown: Better Markdown Parser in PHP,"

Parsedown




Better Markdown Parser in PHP - Demo.
Features

One File
No Dependencies
Super Fast
Extensible
GitHub flavored
Tested in 5.3 to 7.3
Markdown Extra extension

Installation
Install the composer package:
composer require erusev/parsedown

Or download the latest release and include Parsedown.php
Example
$Parsedown = new Parsedown();

echo $Parsedown->text('Hello _Parsedown_!'); # prints: <p>Hello <em>Parsedown</em>!</p>
You can also parse inline markdown only:
echo $Parsedown->line('Hello _Parsedown_!'); # prints: Hello <em>Parsedown</em>!
More examples in the wiki and in this video tutorial.
Security
Parsedown is capable of escaping user-input within the HTML that it generates. Additionally Parsedown will apply sanitisation to additional scripting vectors (such as scripting link destinations) that are introduced by the markdown syntax itself.
To tell Parsedown that it is processing untrusted user-input, use the following:
$Parsedown->setSafeMode(true);
If instead, you wish to allow HTML within untrusted user-input, but still want output to be free from XSS it is recommended that you make use of a HTML sanitiser that allows HTML tags to be whitelisted, like HTML Purifier.
In both cases you should strongly consider employing defence-in-depth measures, like deploying a Content-Security-Policy (a browser security feature) so that your page is likely to be safe even if an attacker finds a vulnerability in one of the first lines of defence above.
Security of Parsedown Extensions
Safe mode does not necessarily yield safe results when using extensions to Parsedown. Extensions should be evaluated on their own to determine their specific safety against XSS.
Escaping HTML

‚ö†Ô∏è¬†¬†WARNING: This method isn't safe from XSS!

If you wish to escape HTML in trusted input, you can use the following:
$Parsedown->setMarkupEscaped(true);
Beware that this still allows users to insert unsafe scripting vectors, such as links like [xss](javascript:alert%281%29).
Questions
How does Parsedown work?
It tries to read Markdown like a human. First, it looks at the lines. It‚Äôs interested in how the lines start. This helps it recognise blocks. It knows, for example, that if a line starts with a - then perhaps it belongs to a list. Once it recognises the blocks, it continues to the content. As it reads, it watches out for special characters. This helps it recognise inline elements (or inlines).
We call this approach ""line based"". We believe that Parsedown is the first Markdown parser to use it. Since the release of Parsedown, other developers have used the same approach to develop other Markdown parsers in PHP and in other languages.
Is it compliant with CommonMark?
It passes most of the CommonMark tests. Most of the tests that don't pass deal with cases that are quite uncommon. Still, as CommonMark matures, compliance should improve.
Who uses it?
Laravel Framework, Bolt CMS, Grav CMS, Herbie CMS, Kirby CMS, October CMS, Pico CMS, Statamic CMS, phpDocumentor, RaspberryPi.org, Symfony Demo and more.
How can I help?
Use it, star it, share it and if you feel generous, donate.
",parsedown better markdown parser php demo features one file dependencies super fast extensible github flavored tested markdown extra extension installation install composer package composer require erusevparsedown download latest release include parsedownphp example parsedown new parsedown echo parsedowntexthello parsedown prints phello emparsedownemp also parse inline markdown echo parsedownlinehello parsedown prints hello emparsedownem examples wiki video tutorial security parsedown capable escaping userinput within html generates additionally parsedown apply sanitisation additional scripting vectors scripting link destinations introduced markdown syntax tell parsedown processing untrusted userinput use following parsedownsetsafemodetrue instead wish allow html within untrusted userinput still want output free xss recommended make use html sanitiser allows html tags whitelisted like html purifier cases strongly consider employing defenceindepth measures like deploying contentsecuritypolicy browser security feature page likely safe even attacker finds vulnerability one first lines defence security parsedown extensions safe mode necessarily yield safe results using extensions parsedown extensions evaluated determine specific safety xss escaping html warning method isnt safe xss wish escape html trusted input use following parsedownsetmarkupescapedtrue beware still allows users insert unsafe scripting vectors links like xssjavascriptalert questions parsedown work tries read markdown like human first looks lines interested lines start helps recognise blocks knows example line starts perhaps belongs list recognises blocks continues content reads watches special characters helps recognise inline elements inlines call approach line based believe parsedown first markdown parser use since release parsedown developers used approach develop markdown parsers php languages compliant commonmark passes commonmark tests tests dont pass deal cases quite uncommon still commonmark matures compliance improve uses laravel framework bolt cms grav cms herbie cms kirby cms october cms pico cms statamic cms phpdocumentor raspberrypiorg symfony demo help use star share feel generous donate,parsedown better markdown parser php demo featur one file depend super fast extens github flavor test markdown extra extens instal instal compos packag compos requir erusevparsedown download latest releas includ parsedownphp exampl parsedown new parsedown echo parsedowntexthello parsedown print phello emparsedownemp also pars inlin markdown echo parsedownlinehello parsedown print hello emparsedownem exampl wiki video tutori secur parsedown capabl escap userinput within html gener addit parsedown appli sanitis addit script vector script link destin introduc markdown syntax tell parsedown process untrust userinput use follow parsedownsetsafemodetru instead wish allow html within untrust userinput still want output free xss recommend make use html sanitis allow html tag whitelist like html purifi case strongli consid employ defenceindepth measur like deploy contentsecuritypolici browser secur featur page like safe even attack find vulner one first line defenc secur parsedown extens safe mode necessarili yield safe result use extens parsedown extens evalu determin specif safeti xss escap html warn method isnt safe xss wish escap html trust input use follow parsedownsetmarkupescapedtru bewar still allow user insert unsaf script vector link like xssjavascriptalert question parsedown work tri read markdown like human first look line interest line start help recognis block know exampl line start perhap belong list recognis block continu content read watch special charact help recognis inlin element inlin call approach line base believ parsedown first markdown parser use sinc releas parsedown develop use approach develop markdown parser php languag compliant commonmark pass commonmark test test dont pass deal case quit uncommon still commonmark matur complianc improv use laravel framework bolt cm grav cm herbi cm kirbi cm octob cm pico cm statam cm phpdocumentor raspberrypiorg symfoni demo help use star share feel gener donat,parsedown better markdown parser php demo feature one file dependency super fast extensible github flavored tested markdown extra extension installation install composer package composer require erusevparsedown download latest release include parsedownphp example parsedown new parsedown echo parsedowntexthello parsedown print phello emparsedownemp also parse inline markdown echo parsedownlinehello parsedown print hello emparsedownem example wiki video tutorial security parsedown capable escaping userinput within html generates additionally parsedown apply sanitisation additional scripting vector scripting link destination introduced markdown syntax tell parsedown processing untrusted userinput use following parsedownsetsafemodetrue instead wish allow html within untrusted userinput still want output free x recommended make use html sanitiser allows html tag whitelisted like html purifier case strongly consider employing defenceindepth measure like deploying contentsecuritypolicy browser security feature page likely safe even attacker find vulnerability one first line defence security parsedown extension safe mode necessarily yield safe result using extension parsedown extension evaluated determine specific safety x escaping html warning method isnt safe x wish escape html trusted input use following parsedownsetmarkupescapedtrue beware still allows user insert unsafe scripting vector link like xssjavascriptalert question parsedown work try read markdown like human first look line interested line start help recognise block know example line start perhaps belongs list recognises block continues content read watch special character help recognise inline element inlines call approach line based believe parsedown first markdown parser use since release parsedown developer used approach develop markdown parser php language compliant commonmark pass commonmark test test dont pas deal case quite uncommon still commonmark matures compliance improve us laravel framework bolt cm grav cm herbie cm kirby cm october cm pico cm statamic cm phpdocumentor raspberrypiorg symfony demo help use star share feel generous donate
58,PHP,GitHub - nikic/PHP-Parser: A PHP parser written in PHP,"PHP Parser
 
This is a PHP 5.2 to PHP 7.4 parser written in PHP. Its purpose is to simplify static code analysis and
manipulation.
Documentation for version 4.x (stable; for running on PHP >= 7.0; for parsing PHP 5.2 to PHP 7.4).
Documentation for version 3.x (unsupported; for running on PHP >= 5.5; for parsing PHP 5.2 to PHP 7.2).
Features
The main features provided by this library are:

Parsing PHP 5 and PHP 7 code into an abstract syntax tree (AST).

Invalid code can be parsed into a partial AST.
The AST contains accurate location information.


Dumping the AST in human-readable form.
Converting an AST back to PHP code.

Experimental: Formatting can be preserved for partially changed ASTs.


Infrastructure to traverse and modify ASTs.
Resolution of namespaced names.
Evaluation of constant expressions.
Builders to simplify AST construction for code generation.
Converting an AST into JSON and back.

Quick Start
Install the library using composer:
php composer.phar require nikic/php-parser

Parse some PHP code into an AST and dump the result in human-readable form:
<?php
use PhpParser\Error;
use PhpParser\NodeDumper;
use PhpParser\ParserFactory;

$code = <<<'CODE'
<?php

function test($foo)
{
    var_dump($foo);
}
CODE;

$parser = (new ParserFactory)->create(ParserFactory::PREFER_PHP7);
try {
    $ast = $parser->parse($code);
} catch (Error $error) {
    echo ""Parse error: {$error->getMessage()}\n"";
    return;
}

$dumper = new NodeDumper;
echo $dumper->dump($ast) . ""\n"";
This dumps an AST looking something like this:
array(
    0: Stmt_Function(
        byRef: false
        name: Identifier(
            name: test
        )
        params: array(
            0: Param(
                type: null
                byRef: false
                variadic: false
                var: Expr_Variable(
                    name: foo
                )
                default: null
            )
        )
        returnType: null
        stmts: array(
            0: Stmt_Expression(
                expr: Expr_FuncCall(
                    name: Name(
                        parts: array(
                            0: var_dump
                        )
                    )
                    args: array(
                        0: Arg(
                            value: Expr_Variable(
                                name: foo
                            )
                            byRef: false
                            unpack: false
                        )
                    )
                )
            )
        )
    )
)

Let's traverse the AST and perform some kind of modification. For example, drop all function bodies:
use PhpParser\Node;
use PhpParser\Node\Stmt\Function_;
use PhpParser\NodeTraverser;
use PhpParser\NodeVisitorAbstract;

$traverser = new NodeTraverser();
$traverser->addVisitor(new class extends NodeVisitorAbstract {
    public function enterNode(Node $node) {
        if ($node instanceof Function_) {
            // Clean out the function body
            $node->stmts = [];
        }
    }
});

$ast = $traverser->traverse($ast);
echo $dumper->dump($ast) . ""\n"";
This gives us an AST where the Function_::$stmts are empty:
array(
    0: Stmt_Function(
        byRef: false
        name: Identifier(
            name: test
        )
        params: array(
            0: Param(
                type: null
                byRef: false
                variadic: false
                var: Expr_Variable(
                    name: foo
                )
                default: null
            )
        )
        returnType: null
        stmts: array(
        )
    )
)

Finally, we can convert the new AST back to PHP code:
use PhpParser\PrettyPrinter;

$prettyPrinter = new PrettyPrinter\Standard;
echo $prettyPrinter->prettyPrintFile($ast);
This gives us our original code, minus the var_dump() call inside the function:
<?php

function test($foo)
{
}
For a more comprehensive introduction, see the documentation.
Documentation

Introduction
Usage of basic components

Component documentation:

Walking the AST

Node visitors
Modifying the AST from a visitor
Short-circuiting traversals
Interleaved visitors
Simple node finding API
Parent and sibling references


Name resolution

Name resolver options
Name resolution context


Pretty printing

Converting AST back to PHP code
Customizing formatting
Formatting-preserving code transformations


AST builders

Fluent builders for AST nodes


Lexer

Lexer options
Token and file positions for nodes
Custom attributes


Error handling

Column information for errors
Error recovery (parsing of syntactically incorrect code)


Constant expression evaluation

Evaluating constant/property/etc initializers
Handling errors and unsupported expressions


JSON representation

JSON encoding and decoding of ASTs


Performance

Disabling XDebug
Reusing objects
Garbage collection impact


Frequently asked questions

Parent and sibling references



",php parser php php parser written php purpose simplify static code analysis manipulation documentation version x stable running php parsing php php documentation version x unsupported running php parsing php php features main features provided library parsing php php code abstract syntax tree ast invalid code parsed partial ast ast contains accurate location information dumping ast humanreadable form converting ast back php code experimental formatting preserved partially changed asts infrastructure traverse modify asts resolution namespaced names evaluation constant expressions builders simplify ast construction code generation converting ast json back quick start install library using composer php composerphar require nikicphpparser parse php code ast dump result humanreadable form php use phpparsererror use phpparsernodedumper use phpparserparserfactory code code php function testfoo vardumpfoo code parser new parserfactorycreateparserfactorypreferphp try ast parserparsecode catch error error echo parse error errorgetmessagen return dumper new nodedumper echo dumperdumpast n dumps ast looking something like array stmtfunction byref false name identifier name test params array param type null byref false variadic false var exprvariable name foo default null returntype null stmts array stmtexpression expr exprfunccall name name parts array vardump args array arg value exprvariable name foo byref false unpack false lets traverse ast perform kind modification example drop function bodies use phpparsernode use phpparsernodestmtfunction use phpparsernodetraverser use phpparsernodevisitorabstract traverser new nodetraverser traverseraddvisitornew class extends nodevisitorabstract public function enternodenode node node instanceof function clean function body nodestmts ast traversertraverseast echo dumperdumpast n gives us ast functionstmts empty array stmtfunction byref false name identifier name test params array param type null byref false variadic false var exprvariable name foo default null returntype null stmts array finally convert new ast back php code use phpparserprettyprinter prettyprinter new prettyprinterstandard echo prettyprinterprettyprintfileast gives us original code minus vardump call inside function php function testfoo comprehensive introduction see documentation documentation introduction usage basic components component documentation walking ast node visitors modifying ast visitor shortcircuiting traversals interleaved visitors simple node finding api parent sibling references name resolution name resolver options name resolution context pretty printing converting ast back php code customizing formatting formattingpreserving code transformations ast builders fluent builders ast nodes lexer lexer options token file positions nodes custom attributes error handling column information errors error recovery parsing syntactically incorrect code constant expression evaluation evaluating constantpropertyetc initializers handling errors unsupported expressions json representation json encoding decoding asts performance disabling xdebug reusing objects garbage collection impact frequently asked questions parent sibling references,php parser php php parser written php purpos simplifi static code analysi manipul document version x stabl run php pars php php document version x unsupport run php pars php php featur main featur provid librari pars php php code abstract syntax tree ast invalid code pars partial ast ast contain accur locat inform dump ast humanread form convert ast back php code experiment format preserv partial chang ast infrastructur travers modifi ast resolut namespac name evalu constant express builder simplifi ast construct code gener convert ast json back quick start instal librari use compos php composerphar requir nikicphppars pars php code ast dump result humanread form php use phpparsererror use phpparsernodedump use phpparserparserfactori code code php function testfoo vardumpfoo code parser new parserfactorycreateparserfactorypreferphp tri ast parserparsecod catch error error echo pars error errorgetmessagen return dumper new nodedump echo dumperdumpast n dump ast look someth like array stmtfunction byref fals name identifi name test param array param type null byref fals variad fals var exprvari name foo default null returntyp null stmt array stmtexpress expr exprfunccal name name part array vardump arg array arg valu exprvari name foo byref fals unpack fals let travers ast perform kind modif exampl drop function bodi use phpparsernod use phpparsernodestmtfunct use phpparsernodetravers use phpparsernodevisitorabstract travers new nodetravers traverseraddvisitornew class extend nodevisitorabstract public function enternodenod node node instanceof function clean function bodi nodestmt ast traversertraverseast echo dumperdumpast n give us ast functionstmt empti array stmtfunction byref fals name identifi name test param array param type null byref fals variad fals var exprvari name foo default null returntyp null stmt array final convert new ast back php code use phpparserprettyprint prettyprint new prettyprinterstandard echo prettyprinterprettyprintfileast give us origin code minu vardump call insid function php function testfoo comprehens introduct see document document introduct usag basic compon compon document walk ast node visitor modifi ast visitor shortcircuit travers interleav visitor simpl node find api parent sibl refer name resolut name resolv option name resolut context pretti print convert ast back php code custom format formattingpreserv code transform ast builder fluent builder ast node lexer lexer option token file posit node custom attribut error handl column inform error error recoveri pars syntact incorrect code constant express evalu evalu constantpropertyetc initi handl error unsupport express json represent json encod decod ast perform disabl xdebug reus object garbag collect impact frequent ask question parent sibl refer,php parser php php parser written php purpose simplify static code analysis manipulation documentation version x stable running php parsing php php documentation version x unsupported running php parsing php php feature main feature provided library parsing php php code abstract syntax tree ast invalid code parsed partial ast ast contains accurate location information dumping ast humanreadable form converting ast back php code experimental formatting preserved partially changed asts infrastructure traverse modify asts resolution namespaced name evaluation constant expression builder simplify ast construction code generation converting ast json back quick start install library using composer php composerphar require nikicphpparser parse php code ast dump result humanreadable form php use phpparsererror use phpparsernodedumper use phpparserparserfactory code code php function testfoo vardumpfoo code parser new parserfactorycreateparserfactorypreferphp try ast parserparsecode catch error error echo parse error errorgetmessagen return dumper new nodedumper echo dumperdumpast n dump ast looking something like array stmtfunction byref false name identifier name test params array param type null byref false variadic false var exprvariable name foo default null returntype null stmts array stmtexpression expr exprfunccall name name part array vardump args array arg value exprvariable name foo byref false unpack false let traverse ast perform kind modification example drop function body use phpparsernode use phpparsernodestmtfunction use phpparsernodetraverser use phpparsernodevisitorabstract traverser new nodetraverser traverseraddvisitornew class extends nodevisitorabstract public function enternodenode node node instanceof function clean function body nodestmts ast traversertraverseast echo dumperdumpast n give u ast functionstmts empty array stmtfunction byref false name identifier name test params array param type null byref false variadic false var exprvariable name foo default null returntype null stmts array finally convert new ast back php code use phpparserprettyprinter prettyprinter new prettyprinterstandard echo prettyprinterprettyprintfileast give u original code minus vardump call inside function php function testfoo comprehensive introduction see documentation documentation introduction usage basic component component documentation walking ast node visitor modifying ast visitor shortcircuiting traversal interleaved visitor simple node finding api parent sibling reference name resolution name resolver option name resolution context pretty printing converting ast back php code customizing formatting formattingpreserving code transformation ast builder fluent builder ast node lexer lexer option token file position node custom attribute error handling column information error error recovery parsing syntactically incorrect code constant expression evaluation evaluating constantpropertyetc initializers handling error unsupported expression json representation json encoding decoding asts performance disabling xdebug reusing object garbage collection impact frequently asked question parent sibling reference
59,PHP,"GitHub - getgrav/grav: Modern, Crazy Fast, Ridiculously Easy and Amazingly Powerful Flat-File CMS"," Grav



  
Grav is a Fast, Simple, and Flexible, file-based Web-platform.  There is Zero installation required.  Just extract the ZIP archive, and you are already up and running.  It follows similar principles to other flat-file CMS platforms, but has a different design philosophy than most. Grav comes with a powerful Package Management System to allow for simple installation and upgrading of plugins and themes, as well as simple updating of Grav itself.
The underlying architecture of Grav is designed to use well-established and best-in-class technologies to ensure that Grav is simple to use and easy to extend. Some of these key technologies include:

Twig Templating: for powerful control of the user interface
Markdown: for easy content creation
YAML: for simple configuration
Parsedown: for fast Markdown and Markdown Extra support
Doctrine Cache: layer for performance
Pimple Dependency Injection Container: for extensibility and maintainability
Symfony Event Dispatcher: for plugin event handling
Symfony Console: for CLI interface
Gregwar Image Library: for dynamic image manipulation

Requirements

PHP 7.1.3 or higher. Check the required modules list
Check the Apache or IIS requirements

QuickStart
These are the options to get Grav:
Downloading a Grav Package
You can download a ready-built package from the Downloads page on https://getgrav.org
With Composer
You can create a new project with the latest stable Grav release with the following command:
$ composer create-project getgrav/grav ~/webroot/grav

From GitHub


Clone the Grav repository from https://github.com/getgrav/grav to a folder in the webroot of your server, e.g. ~/webroot/grav. Launch a terminal or console and navigate to the webroot folder:
$ cd ~/webroot
$ git clone https://github.com/getgrav/grav.git



Install the plugin and theme dependencies by using the Grav CLI application bin/grav:
$ cd ~/webroot/grav
$ bin/grav install



Check out the install procedures for more information.
Adding Functionality
You can download plugins or themes manually from the appropriate tab on the Downloads page on https://getgrav.org, but the preferred solution is to use the Grav Package Manager or GPM:
$ bin/gpm index

This will display all the available plugins and then you can install one or more with:
$ bin/gpm install <plugin/theme>

Updating
To update Grav you should use the Grav Package Manager or GPM:
$ bin/gpm selfupgrade

To update plugins and themes:
$ bin/gpm update

Contributing
We appreciate any contribution to Grav, whether it is related to bugs, grammar, or simply a suggestion or improvement! Please refer to the Contributing guide for more guidance on this topic.
Security issues
If you discover a possible security issue related to Grav or one of its plugins, please email the core team at contact@getgrav.org and we'll address it as soon as possible.
Getting Started

What is Grav?
Install Grav in few seconds
Understand the Configuration
Take a peek at our available free Skeletons
If you have questions, jump on our Discord Chat Server!
Have fun!

Exploring More

Have a look at our Basic Tutorial
Dive into more advanced functions
Learn about the Grav CLI
Review examples in the Grav Cookbook
More Awesome Grav Stuff

Backers
Support Grav with a monthly donation to help us continue development. [Become a backer]

Sponsors
Become a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]

License
See LICENSE
Running Tests
First install the dev dependencies by running composer update from the Grav root.
Then composer test will run the Unit Tests, which should be always executed successfully on any site.
Windows users should use the composer test-windows command.
You can also run a single unit test file, e.g. composer test tests/unit/Grav/Common/AssetsTest.php
",grav grav fast simple flexible filebased webplatform zero installation required extract zip archive already running follows similar principles flatfile cms platforms different design philosophy grav comes powerful package management system allow simple installation upgrading plugins themes well simple updating grav underlying architecture grav designed use wellestablished bestinclass technologies ensure grav simple use easy extend key technologies include twig templating powerful control user interface markdown easy content creation yaml simple configuration parsedown fast markdown markdown extra support doctrine cache layer performance pimple dependency injection container extensibility maintainability symfony event dispatcher plugin event handling symfony console cli interface gregwar image library dynamic image manipulation requirements php higher check required modules list check apache iis requirements quickstart options get grav downloading grav package download readybuilt package downloads page httpsgetgravorg composer create new project latest stable grav release following command composer createproject getgravgrav webrootgrav github clone grav repository httpsgithubcomgetgravgrav folder webroot server eg webrootgrav launch terminal console navigate webroot folder cd webroot git clone httpsgithubcomgetgravgravgit install plugin theme dependencies using grav cli application bingrav cd webrootgrav bingrav install check install procedures information adding functionality download plugins themes manually appropriate tab downloads page httpsgetgravorg preferred solution use grav package manager gpm bingpm index display available plugins install one bingpm install plugintheme updating update grav use grav package manager gpm bingpm selfupgrade update plugins themes bingpm update contributing appreciate contribution grav whether related bugs grammar simply suggestion improvement please refer contributing guide guidance topic security issues discover possible security issue related grav one plugins please email core team contactgetgravorg well address soon possible getting started grav install grav seconds understand configuration take peek available free skeletons questions jump discord chat server fun exploring look basic tutorial dive advanced functions learn grav cli review examples grav cookbook awesome grav stuff backers support grav monthly donation help us continue development become backer sponsors become sponsor get logo readme github link site become sponsor license see license running tests first install dev dependencies running composer update grav root composer test run unit tests always executed successfully site windows users use composer testwindows command also run single unit test file eg composer test testsunitgravcommonassetstestphp,grav grav fast simpl flexibl filebas webplatform zero instal requir extract zip archiv alreadi run follow similar principl flatfil cm platform differ design philosophi grav come power packag manag system allow simpl instal upgrad plugin theme well simpl updat grav underli architectur grav design use wellestablish bestinclass technolog ensur grav simpl use easi extend key technolog includ twig templat power control user interfac markdown easi content creation yaml simpl configur parsedown fast markdown markdown extra support doctrin cach layer perform pimpl depend inject contain extens maintain symfoni event dispatch plugin event handl symfoni consol cli interfac gregwar imag librari dynam imag manipul requir php higher check requir modul list check apach ii requir quickstart option get grav download grav packag download readybuilt packag download page httpsgetgravorg compos creat new project latest stabl grav releas follow command compos createproject getgravgrav webrootgrav github clone grav repositori httpsgithubcomgetgravgrav folder webroot server eg webrootgrav launch termin consol navig webroot folder cd webroot git clone httpsgithubcomgetgravgravgit instal plugin theme depend use grav cli applic bingrav cd webrootgrav bingrav instal check instal procedur inform ad function download plugin theme manual appropri tab download page httpsgetgravorg prefer solut use grav packag manag gpm bingpm index display avail plugin instal one bingpm instal pluginthem updat updat grav use grav packag manag gpm bingpm selfupgrad updat plugin theme bingpm updat contribut appreci contribut grav whether relat bug grammar simpli suggest improv pleas refer contribut guid guidanc topic secur issu discov possibl secur issu relat grav one plugin pleas email core team contactgetgravorg well address soon possibl get start grav instal grav second understand configur take peek avail free skeleton question jump discord chat server fun explor look basic tutori dive advanc function learn grav cli review exampl grav cookbook awesom grav stuff backer support grav monthli donat help us continu develop becom backer sponsor becom sponsor get logo readm github link site becom sponsor licens see licens run test first instal dev depend run compos updat grav root compos test run unit test alway execut success site window user use compos testwindow command also run singl unit test file eg compos test testsunitgravcommonassetstestphp,grav grav fast simple flexible filebased webplatform zero installation required extract zip archive already running follows similar principle flatfile cm platform different design philosophy grav come powerful package management system allow simple installation upgrading plugins theme well simple updating grav underlying architecture grav designed use wellestablished bestinclass technology ensure grav simple use easy extend key technology include twig templating powerful control user interface markdown easy content creation yaml simple configuration parsedown fast markdown markdown extra support doctrine cache layer performance pimple dependency injection container extensibility maintainability symfony event dispatcher plugin event handling symfony console cli interface gregwar image library dynamic image manipulation requirement php higher check required module list check apache ii requirement quickstart option get grav downloading grav package download readybuilt package downloads page httpsgetgravorg composer create new project latest stable grav release following command composer createproject getgravgrav webrootgrav github clone grav repository httpsgithubcomgetgravgrav folder webroot server eg webrootgrav launch terminal console navigate webroot folder cd webroot git clone httpsgithubcomgetgravgravgit install plugin theme dependency using grav cli application bingrav cd webrootgrav bingrav install check install procedure information adding functionality download plugins theme manually appropriate tab downloads page httpsgetgravorg preferred solution use grav package manager gpm bingpm index display available plugins install one bingpm install plugintheme updating update grav use grav package manager gpm bingpm selfupgrade update plugins theme bingpm update contributing appreciate contribution grav whether related bug grammar simply suggestion improvement please refer contributing guide guidance topic security issue discover possible security issue related grav one plugins please email core team contactgetgravorg well address soon possible getting started grav install grav second understand configuration take peek available free skeleton question jump discord chat server fun exploring look basic tutorial dive advanced function learn grav cli review example grav cookbook awesome grav stuff backer support grav monthly donation help u continue development become backer sponsor become sponsor get logo readme github link site become sponsor license see license running test first install dev dependency running composer update grav root composer test run unit test always executed successfully site window user use composer testwindows command also run single unit test file eg composer test testsunitgravcommonassetstestphp
60,Shell,"GitHub - ohmyzsh/ohmyzsh: üôÉ A delightful community-driven (with nearly 1,500 contributors) framework for managing your zsh configuration. Includes 200+ optional plugins (rails, git, OSX, hub, capistrano, brew, ant, php, python, etc), over 140 themes to spice up your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community.","




Oh My Zsh is an open source, community-driven framework for managing your zsh configuration.
Sounds boring. Let's try again.
Oh My Zsh will not make you a 10x developer...but you may feel like one.
Once installed, your terminal shell will become the talk of the town or your money back! With each keystroke in your command prompt, you'll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in caf√©s and ask you, ""that is amazing! are you some sort of genius?""
Finally, you'll begin to get the sort of attention that you have always felt you deserved. ...or maybe you'll use the time that you're saving to start flossing more often. üò¨
To learn more, visit ohmyz.sh and follow @ohmyzsh on Twitter.
Getting Started
Prerequisites

A Unix-like operating system: macOS, Linux, BSD. On Windows: WSL is preferred, but cygwin or msys also mostly work.
Zsh should be installed (v4.3.9 or more recent). If not pre-installed (run zsh --version to confirm), check the following instructions here: Installing ZSH
curl or wget should be installed
git should be installed

Basic Installation
Oh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either curl or wget.
via curl
sh -c ""$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)""
via wget
sh -c ""$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)""
Manual inspection
It's a good idea to inspect the install script from projects you don't yet know. You can do
that by downloading the install script first, looking through it so everything looks normal,
then running it:
curl -Lo install.sh https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
sh install.sh
Using Oh My Zsh
Plugins
Oh My Zsh comes with a shitload of plugins to take advantage of. You can take a look in the plugins directory and/or the wiki to see what's currently available.
Enabling Plugins
Once you spot a plugin (or several) that you'd like to use with Oh My Zsh, you'll need to enable them in the .zshrc file. You'll find the zshrc file in your $HOME directory. Open it with your favorite text editor and you'll see a spot to list all the plugins you want to load.
vi ~/.zshrc
For example, this might begin to look like this:
plugins=(
  git
  bundler
  dotenv
  osx
  rake
  rbenv
  ruby
)
Note that the plugins are separated by whitespace. Do not use commas between them.
Using Plugins
Most plugins (should! we're working on this) include a README, which documents how to use them.
Themes
We'll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred themes now bundled. Most of them have screenshots on the wiki. Check them out!
Selecting a Theme
Robby's theme is the default one. It's not the fanciest one. It's not the simplest one. It's just the right one (for him).
Once you find a theme that you'd like to use, you will need to edit the ~/.zshrc file. You'll see an environment variable (all caps) in there that looks like:
ZSH_THEME=""robbyrussell""
To use a different theme, simply change the value to match the name of your desired theme. For example:
ZSH_THEME=""agnoster"" # (this is one of the fancy ones)
# see https://github.com/ohmyzsh/ohmyzsh/wiki/Themes#agnoster
Note: many themes require installing the Powerline Fonts in order to render properly.
Open up a new terminal window and your prompt should look something like this:

In case you did not find a suitable theme for your needs, please have a look at the wiki for more of them.
If you're feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.
ZSH_THEME=""random"" # (...please let it be pie... please be some pie..)
And if you want to pick random theme from a list of your favorite themes:
ZSH_THEME_RANDOM_CANDIDATES=(
  ""robbyrussell""
  ""agnoster""
)
FAQ
If you have some more questions or issues, you might find a solution in our FAQ.
Advanced Topics
If you're the type that likes to get their hands dirty, these sections might resonate.
Advanced Installation
Some users may want to manually install Oh My Zsh, or change the default path or other settings that
the installer accepts (these settings are also documented at the top of the install script).
Custom Directory
The default location is ~/.oh-my-zsh (hidden in your home directory)
If you'd like to change the install directory with the ZSH environment variable, either by running
export ZSH=/your/path before installing, or by setting it before the end of the install pipeline
like this:
ZSH=""$HOME/.dotfiles/oh-my-zsh"" sh install.sh
Unattended install
If you're running the Oh My Zsh install script as part of an automated install, you can pass the
flag --unattended to the install.sh script. This will have the effect of not trying to change
the default shell, and also won't run zsh when the installation has finished.
sh -c ""$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"" """" --unattended
Installing from a forked repository
The install script also accepts these variables to allow installation of a different repository:


REPO (default: ohmyzsh/ohmyzsh): this takes the form of owner/repository. If you set
this variable, the installer will look for a repository at https://github.com/{owner}/{repository}.


REMOTE (default: https://github.com/${REPO}.git): this is the full URL of the git repository
clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab,
Bitbucket...) or if you want to clone with SSH instead of HTTPS (git@github.com:user/project.git).
NOTE: it's incompatible with setting the REPO variable. This setting will take precedence.


BRANCH (default: master): you can use this setting if you want to change the default branch to be
checked out when cloning the repository. This might be useful for testing a Pull Request, or if you
want to use a branch other than master.


For example:
REPO=apjanke/oh-my-zsh BRANCH=edge sh install.sh
Manual Installation
1. Clone the repository:
git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh
2. Optionally, backup your existing ~/.zshrc file:
cp ~/.zshrc ~/.zshrc.orig
3. Create a new zsh configuration file
You can create a new zsh config file by copying the template that we have included for you.
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
4. Change your default shell
chsh -s $(which zsh)
You must log out from your user session and log back in to see this change.
5. Initialize your new zsh configuration
Once you open up a new terminal window, it should load zsh with Oh My Zsh's configuration.
Installation Problems
If you have any hiccups installing, here are a few common fixes.

You might need to modify your PATH in ~/.zshrc if you're not able to find some commands after
switching to oh-my-zsh.
If you installed manually or changed the install location, check the ZSH environment variable in
~/.zshrc.

Custom Plugins and Themes
If you want to override any of the default behaviors, just add a new file (ending in .zsh) in the custom/ directory.
If you have many functions that go well together, you can put them as a XYZ.plugin.zsh file in the custom/plugins/ directory and then enable this plugin.
If you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the custom/plugins/ directory and it will be loaded instead of the one in plugins/.
Getting Updates
By default, you will be prompted to check for upgrades every few weeks. If you would like oh-my-zsh to automatically upgrade itself without prompting you, set the following in your ~/.zshrc:
DISABLE_UPDATE_PROMPT=true
To disable automatic upgrades, set the following in your ~/.zshrc:
DISABLE_AUTO_UPDATE=true
Manual Updates
If you'd like to upgrade at any point in time (maybe someone just released a new plugin and you don't want to wait a week?) you just need to run:
upgrade_oh_my_zsh
Magic! üéâ
Uninstalling Oh My Zsh
Oh My Zsh isn't for everyone. We'll miss you, but we want to make this an easy breakup.
If you want to uninstall oh-my-zsh, just run uninstall_oh_my_zsh from the command-line. It will remove itself and revert your previous bash or zsh configuration.
How do I contribute to Oh My Zsh?
Before you participate in our delightful community, please read the code of conduct.
I'm far from being a Zsh expert and suspect there are many ways to improve ‚Äì if you have ideas on how to make the configuration easier to maintain (and faster), don't hesitate to fork and send pull requests!
We also need people to test out pull-requests. So take a look through the open issues and help where you can.
See Contributing for more details.
Do NOT send us themes
We have (more than) enough themes for the time being. Please add your theme to the external themes wiki page.
Contributors
Oh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn't be so awesome.
Thank you so much!
Follow Us
We're on the social media.

@ohmyzsh on Twitter. You should follow it.
Oh My Zsh on Facebook.

Merchandise
We have stickers, shirts, and coffee mugs available for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!
License
Oh My Zsh is released under the MIT license.
About Planet Argon

Oh My Zsh was started by the team at Planet Argon, a Ruby on Rails development agency. Check out our other open source projects.
",oh zsh open source communitydriven framework managing zsh configuration sounds boring lets try oh zsh make x developerbut may feel like one installed terminal shell become talk town money back keystroke command prompt youll take advantage hundreds powerful plugins beautiful themes strangers come cafes ask amazing sort genius finally youll begin get sort attention always felt deserved maybe youll use time youre saving start flossing often learn visit ohmyzsh follow ohmyzsh twitter getting started prerequisites unixlike operating system macos linux bsd windows wsl preferred cygwin msys also mostly work zsh installed v recent preinstalled run zsh version confirm check following instructions installing zsh curl wget installed git installed basic installation oh zsh installed running one following commands terminal install via commandline either curl wget via curl sh c curl fssl httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh via wget sh c wget httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh manual inspection good idea inspect install script projects dont yet know downloading install script first looking everything looks normal running curl lo installsh httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh sh installsh using oh zsh plugins oh zsh comes shitload plugins take advantage take look plugins directory andor wiki see whats currently available enabling plugins spot plugin several youd like use oh zsh youll need enable zshrc file youll find zshrc file home directory open favorite text editor youll see spot list plugins want load vi zshrc example might begin look like plugins git bundler dotenv osx rake rbenv ruby note plugins separated whitespace use commas using plugins plugins working include readme documents use themes well admit early oh zsh world may gotten bit theme happy one hundred themes bundled screenshots wiki check selecting theme robbys theme default one fanciest one simplest one right one find theme youd like use need edit zshrc file youll see environment variable caps looks like zshthemerobbyrussell use different theme simply change value match name desired theme example zshthemeagnoster one fancy ones see httpsgithubcomohmyzshohmyzshwikithemesagnoster note many themes require installing powerline fonts order render properly open new terminal window prompt look something like case find suitable theme needs please look wiki youre feeling feisty let computer select one randomly time open new terminal window zshthemerandom please let pie please pie want pick random theme list favorite themes zshthemerandomcandidates robbyrussell agnoster faq questions issues might find solution faq advanced topics youre type likes get hands dirty sections might resonate advanced installation users may want manually install oh zsh change default path settings installer accepts settings also documented top install script custom directory default location ohmyzsh hidden home directory youd like change install directory zsh environment variable either running export zshyourpath installing setting end install pipeline like zshhomedotfilesohmyzsh sh installsh unattended install youre running oh zsh install script part automated install pass flag unattended installsh script effect trying change default shell also wont run zsh installation finished sh c curl fssl httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh unattended installing forked repository install script also accepts variables allow installation different repository repo default ohmyzshohmyzsh takes form ownerrepository set variable installer look repository httpsgithubcomownerrepository remote default httpsgithubcomrepogit full url git repository clone use setting want install fork github gitlab bitbucket want clone ssh instead https gitgithubcomuserprojectgit note incompatible setting repo variable setting take precedence branch default master use setting want change default branch checked cloning repository might useful testing pull request want use branch master example repoapjankeohmyzsh branchedge sh installsh manual installation clone repository git clone httpsgithubcomohmyzshohmyzshgit ohmyzsh optionally backup existing zshrc file cp zshrc zshrcorig create new zsh configuration file create new zsh config file copying template included cp ohmyzshtemplateszshrczshtemplate zshrc change default shell chsh zsh must log user session log back see change initialize new zsh configuration open new terminal window load zsh oh zshs configuration installation problems hiccups installing common fixes might need modify path zshrc youre able find commands switching ohmyzsh installed manually changed install location check zsh environment variable zshrc custom plugins themes want override default behaviors add new file ending zsh custom directory many functions go well together put xyzpluginzsh file customplugins directory enable plugin would like override functionality plugin distributed oh zsh create plugin name customplugins directory loaded instead one plugins getting updates default prompted check upgrades every weeks would like ohmyzsh automatically upgrade without prompting set following zshrc disableupdateprompttrue disable automatic upgrades set following zshrc disableautoupdatetrue manual updates youd like upgrade point time maybe someone released new plugin dont want wait week need run upgradeohmyzsh magic uninstalling oh zsh oh zsh isnt everyone well miss want make easy breakup want uninstall ohmyzsh run uninstallohmyzsh commandline remove revert previous bash zsh configuration contribute oh zsh participate delightful community please read code conduct im far zsh expert suspect many ways improve ideas make configuration easier maintain faster dont hesitate fork send pull requests also need people test pullrequests take look open issues help see contributing details send us themes enough themes time please add theme external themes wiki page contributors oh zsh vibrant community happy users delightful contributors without time help contributors wouldnt awesome thank much follow us social media ohmyzsh twitter follow oh zsh facebook merchandise stickers shirts coffee mugs available show love oh zsh become talk town license oh zsh released mit license planet argon oh zsh started team planet argon ruby rails development agency check open source projects,oh zsh open sourc communitydriven framework manag zsh configur sound bore let tri oh zsh make x developerbut may feel like one instal termin shell becom talk town money back keystrok command prompt youll take advantag hundr power plugin beauti theme stranger come cafe ask amaz sort geniu final youll begin get sort attent alway felt deserv mayb youll use time your save start floss often learn visit ohmyzsh follow ohmyzsh twitter get start prerequisit unixlik oper system maco linux bsd window wsl prefer cygwin msi also mostli work zsh instal v recent preinstal run zsh version confirm check follow instruct instal zsh curl wget instal git instal basic instal oh zsh instal run one follow command termin instal via commandlin either curl wget via curl sh c curl fssl httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh via wget sh c wget httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh manual inspect good idea inspect instal script project dont yet know download instal script first look everyth look normal run curl lo installsh httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh sh installsh use oh zsh plugin oh zsh come shitload plugin take advantag take look plugin directori andor wiki see what current avail enabl plugin spot plugin sever youd like use oh zsh youll need enabl zshrc file youll find zshrc file home directori open favorit text editor youll see spot list plugin want load vi zshrc exampl might begin look like plugin git bundler dotenv osx rake rbenv rubi note plugin separ whitespac use comma use plugin plugin work includ readm document use theme well admit earli oh zsh world may gotten bit theme happi one hundr theme bundl screenshot wiki check select theme robbi theme default one fanciest one simplest one right one find theme youd like use need edit zshrc file youll see environ variabl cap look like zshthemerobbyrussel use differ theme simpli chang valu match name desir theme exampl zshthemeagnost one fanci one see httpsgithubcomohmyzshohmyzshwikithemesagnost note mani theme requir instal powerlin font order render properli open new termin window prompt look someth like case find suitabl theme need pleas look wiki your feel feisti let comput select one randomli time open new termin window zshthemerandom pleas let pie pleas pie want pick random theme list favorit theme zshthemerandomcandid robbyrussel agnost faq question issu might find solut faq advanc topic your type like get hand dirti section might reson advanc instal user may want manual instal oh zsh chang default path set instal accept set also document top instal script custom directori default locat ohmyzsh hidden home directori youd like chang instal directori zsh environ variabl either run export zshyourpath instal set end instal pipelin like zshhomedotfilesohmyzsh sh installsh unattend instal your run oh zsh instal script part autom instal pass flag unattend installsh script effect tri chang default shell also wont run zsh instal finish sh c curl fssl httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh unattend instal fork repositori instal script also accept variabl allow instal differ repositori repo default ohmyzshohmyzsh take form ownerrepositori set variabl instal look repositori httpsgithubcomownerrepositori remot default httpsgithubcomrepogit full url git repositori clone use set want instal fork github gitlab bitbucket want clone ssh instead http gitgithubcomuserprojectgit note incompat set repo variabl set take preced branch default master use set want chang default branch check clone repositori might use test pull request want use branch master exampl repoapjankeohmyzsh branchedg sh installsh manual instal clone repositori git clone httpsgithubcomohmyzshohmyzshgit ohmyzsh option backup exist zshrc file cp zshrc zshrcorig creat new zsh configur file creat new zsh config file copi templat includ cp ohmyzshtemplateszshrczshtempl zshrc chang default shell chsh zsh must log user session log back see chang initi new zsh configur open new termin window load zsh oh zsh configur instal problem hiccup instal common fix might need modifi path zshrc your abl find command switch ohmyzsh instal manual chang instal locat check zsh environ variabl zshrc custom plugin theme want overrid default behavior add new file end zsh custom directori mani function go well togeth put xyzpluginzsh file customplugin directori enabl plugin would like overrid function plugin distribut oh zsh creat plugin name customplugin directori load instead one plugin get updat default prompt check upgrad everi week would like ohmyzsh automat upgrad without prompt set follow zshrc disableupdateprompttru disabl automat upgrad set follow zshrc disableautoupdatetru manual updat youd like upgrad point time mayb someon releas new plugin dont want wait week need run upgradeohmyzsh magic uninstal oh zsh oh zsh isnt everyon well miss want make easi breakup want uninstal ohmyzsh run uninstallohmyzsh commandlin remov revert previou bash zsh configur contribut oh zsh particip delight commun pleas read code conduct im far zsh expert suspect mani way improv idea make configur easier maintain faster dont hesit fork send pull request also need peopl test pullrequest take look open issu help see contribut detail send us theme enough theme time pleas add theme extern theme wiki page contributor oh zsh vibrant commun happi user delight contributor without time help contributor wouldnt awesom thank much follow us social media ohmyzsh twitter follow oh zsh facebook merchandis sticker shirt coffe mug avail show love oh zsh becom talk town licens oh zsh releas mit licens planet argon oh zsh start team planet argon rubi rail develop agenc check open sourc project,oh zsh open source communitydriven framework managing zsh configuration sound boring let try oh zsh make x developerbut may feel like one installed terminal shell become talk town money back keystroke command prompt youll take advantage hundred powerful plugins beautiful theme stranger come cafe ask amazing sort genius finally youll begin get sort attention always felt deserved maybe youll use time youre saving start flossing often learn visit ohmyzsh follow ohmyzsh twitter getting started prerequisite unixlike operating system macos linux bsd window wsl preferred cygwin msys also mostly work zsh installed v recent preinstalled run zsh version confirm check following instruction installing zsh curl wget installed git installed basic installation oh zsh installed running one following command terminal install via commandline either curl wget via curl sh c curl fssl httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh via wget sh c wget httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh manual inspection good idea inspect install script project dont yet know downloading install script first looking everything look normal running curl lo installsh httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh sh installsh using oh zsh plugins oh zsh come shitload plugins take advantage take look plugins directory andor wiki see whats currently available enabling plugins spot plugin several youd like use oh zsh youll need enable zshrc file youll find zshrc file home directory open favorite text editor youll see spot list plugins want load vi zshrc example might begin look like plugins git bundler dotenv osx rake rbenv ruby note plugins separated whitespace use comma using plugins plugins working include readme document use theme well admit early oh zsh world may gotten bit theme happy one hundred theme bundled screenshots wiki check selecting theme robbys theme default one fanciest one simplest one right one find theme youd like use need edit zshrc file youll see environment variable cap look like zshthemerobbyrussell use different theme simply change value match name desired theme example zshthemeagnoster one fancy one see httpsgithubcomohmyzshohmyzshwikithemesagnoster note many theme require installing powerline font order render properly open new terminal window prompt look something like case find suitable theme need please look wiki youre feeling feisty let computer select one randomly time open new terminal window zshthemerandom please let pie please pie want pick random theme list favorite theme zshthemerandomcandidates robbyrussell agnoster faq question issue might find solution faq advanced topic youre type like get hand dirty section might resonate advanced installation user may want manually install oh zsh change default path setting installer accepts setting also documented top install script custom directory default location ohmyzsh hidden home directory youd like change install directory zsh environment variable either running export zshyourpath installing setting end install pipeline like zshhomedotfilesohmyzsh sh installsh unattended install youre running oh zsh install script part automated install pas flag unattended installsh script effect trying change default shell also wont run zsh installation finished sh c curl fssl httpsrawgithubusercontentcomohmyzshohmyzshmastertoolsinstallsh unattended installing forked repository install script also accepts variable allow installation different repository repo default ohmyzshohmyzsh take form ownerrepository set variable installer look repository httpsgithubcomownerrepository remote default httpsgithubcomrepogit full url git repository clone use setting want install fork github gitlab bitbucket want clone ssh instead http gitgithubcomuserprojectgit note incompatible setting repo variable setting take precedence branch default master use setting want change default branch checked cloning repository might useful testing pull request want use branch master example repoapjankeohmyzsh branchedge sh installsh manual installation clone repository git clone httpsgithubcomohmyzshohmyzshgit ohmyzsh optionally backup existing zshrc file cp zshrc zshrcorig create new zsh configuration file create new zsh config file copying template included cp ohmyzshtemplateszshrczshtemplate zshrc change default shell chsh zsh must log user session log back see change initialize new zsh configuration open new terminal window load zsh oh zshs configuration installation problem hiccup installing common fix might need modify path zshrc youre able find command switching ohmyzsh installed manually changed install location check zsh environment variable zshrc custom plugins theme want override default behavior add new file ending zsh custom directory many function go well together put xyzpluginzsh file customplugins directory enable plugin would like override functionality plugin distributed oh zsh create plugin name customplugins directory loaded instead one plugins getting update default prompted check upgrade every week would like ohmyzsh automatically upgrade without prompting set following zshrc disableupdateprompttrue disable automatic upgrade set following zshrc disableautoupdatetrue manual update youd like upgrade point time maybe someone released new plugin dont want wait week need run upgradeohmyzsh magic uninstalling oh zsh oh zsh isnt everyone well miss want make easy breakup want uninstall ohmyzsh run uninstallohmyzsh commandline remove revert previous bash zsh configuration contribute oh zsh participate delightful community please read code conduct im far zsh expert suspect many way improve idea make configuration easier maintain faster dont hesitate fork send pull request also need people test pullrequests take look open issue help see contributing detail send u theme enough theme time please add theme external theme wiki page contributor oh zsh vibrant community happy user delightful contributor without time help contributor wouldnt awesome thank much follow u social medium ohmyzsh twitter follow oh zsh facebook merchandise sticker shirt coffee mug available show love oh zsh become talk town license oh zsh released mit license planet argon oh zsh started team planet argon ruby rail development agency check open source project
61,Shell,GitHub - nvm-sh/nvm: Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions,"Node Version Manager   
Table of Contents

Installation and Update

Install & Update script

Ansible


Verify installation
Important Notes
Git install
Manual Install
Manual upgrade


Usage

Long-term support
Migrating global packages while installing
Default global packages from file while installing
io.js
System version of node
Listing versions

Suppressing colorized output


.nvmrc
Deeper Shell Integration

bash

Automatically call nvm use


zsh

Calling nvm use automatically in a directory with a .nvmrc file






License
Running tests
Bash completion

Usage


Compatibility Issues
Installing nvm on Alpine Linux
Removal

Manual Uninstall


Docker for development environment
Problems
Mac OS ""troubleshooting""

Installation and Update
Install & Update script
To install or update nvm, you should run the install script. To do that, you may either download and run the script manually, or use the following cURL or Wget command:
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
Running either of the above commands downloads a script and runs it. The script clones the nvm repository to ~/.nvm, and adds the source lines from the snippet below to your profile (~/.bash_profile, ~/.zshrc, ~/.profile, or ~/.bashrc).

export NVM_DIR=""$([ -z ""${XDG_CONFIG_HOME-}"" ] && printf %s ""${HOME}/.nvm"" || printf %s ""${XDG_CONFIG_HOME}/nvm"")""
[ -s ""$NVM_DIR/nvm.sh"" ] && \. ""$NVM_DIR/nvm.sh"" # This loads nvm
Note: If the environment variable $XDG_CONFIG_HOME is present, it will place the nvm files there.
Note: You can add --no-use to the end of the above script (...nvm.sh --no-use) to postpone using nvm until you manually use it.
You can customize the install source, directory, profile, and version using the NVM_SOURCE, NVM_DIR, PROFILE, and NODE_VERSION variables.
Eg: curl ... | NVM_DIR=""path/to/nvm"". Ensure that the NVM_DIR does not contain a trailing slash.
NB. The installer can use git, curl, or wget to download nvm, whatever is available.
Note: On Linux, after running the install script, if you get nvm: command not found or see no feedback from your terminal after you type command -v nvm, simply close your current terminal, open a new terminal, and try verifying again.
Note: Since OS X 10.9, /usr/bin/git has been preset by Xcode command line tools, which means we can't properly detect if Git is installed or not. You need to manually install the Xcode command line tools before running the install script, otherwise, it'll fail. (see #1782)
Note: On OS X, if you get nvm: command not found after running the install script, one of the following might be the reason:

Your system may not have a .bash_profile file where the command is set up. Create one with touch ~/.bash_profile and run the install script again
You might need to restart your terminal instance. Try opening a new tab/window in your terminal and retry.

If the above doesn't fix the problem, you may try the following:


Open your .bash_profile (or ~/.zshrc, ~/.profile, or ~/.bashrc) and add the following line of code: source ~/<your_profile_file>. E.g. source ~/.bashrc or source ~/.zshrc.


If the above don't work, try adding the snippet from the install section that finds the correct nvm directory and loads nvm, to your profile (~/.bash_profile, ~/.zshrc, ~/.profile, or ~/.bashrc).


For more information about this issue and possible workarounds, please refer here


Ansible
You can use a task:
- name: nvm
  shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
  args:
    creates: ""{{ ansible_env.HOME }}/.nvm/nvm.sh""

Verify installation
To verify that nvm has been installed, do:
command -v nvm
which should output nvm if the installation was successful. Please note that which nvm will not work, since nvm is a sourced shell function, not an executable binary.
Important Notes
If you're running a system without prepackaged binary available, which means you're going to install nodejs or io.js from its source code, you need to make sure your system has a C++ compiler. For OS X, Xcode will work, for Debian/Ubuntu based GNU/Linux, the build-essential and libssl-dev packages work.
Note: nvm does not support Windows (see #284), but may work in WSL (Windows Subsystem for Linux) depending on the version of WSL. For Windows, two alternatives exist, which are neither supported nor developed by us:

nvm-windows
nodist

Note: nvm does not support Fish either (see #303). Alternatives exist, which are neither supported nor developed by us:

bass allows you to use utilities written for Bash in fish shell
fast-nvm-fish only works with version numbers (not aliases) but doesn't significantly slow your shell startup
plugin-nvm plugin for Oh My Fish, which makes nvm and its completions available in fish shell
fnm - fisherman-based version manager for fish
fish-nvm - Wrapper around nvm for fish, delays sourcing nvm until it's actually used.

Note: We still have some problems with FreeBSD, because there is no official pre-built binary for FreeBSD, and building from source may need patches; see the issue ticket:

[#900] [Bug] nodejs on FreeBSD may need to be patched
nodejs/node#3716

Note: On OS X, if you do not have Xcode installed and you do not wish to download the ~4.3GB file, you can install the Command Line Tools. You can check out this blog post on how to just that:

How to Install Command Line Tools in OS X Mavericks & Yosemite (Without Xcode)

Note: On OS X, if you have/had a ""system"" node installed and want to install modules globally, keep in mind that:

When using nvm you do not need sudo to globally install a module with npm -g, so instead of doing sudo npm install -g grunt, do instead npm install -g grunt
If you have an ~/.npmrc file, make sure it does not contain any prefix settings (which is not compatible with nvm)
You can (but should not?) keep your previous ""system"" node install, but nvm will only be available to your user account (the one used to install nvm). This might cause version mismatches, as other users will be using /usr/local/lib/node_modules/* VS your user account using ~/.nvm/versions/node/vX.X.X/lib/node_modules/*

Homebrew installation is not supported. If you have issues with homebrew-installed nvm, please brew uninstall it, and install it using the instructions below, before filing an issue.
Note: If you're using zsh you can easily install nvm as a zsh plugin. Install zsh-nvm and run nvm upgrade to upgrade.
Note: Git versions before v1.7 may face a problem of cloning nvm source from GitHub via https protocol, and there is also different behavior of git before v1.6, and git prior to v1.17.10 can not clone tags, so the minimum required git version is v1.7.10. If you are interested in the problem we mentioned here, please refer to GitHub's HTTPS cloning errors article.
Git install
If you have git installed (requires git v1.7.10+):

clone this repo in the root of your user profile


cd ~/ from anywhere then git clone https://github.com/nvm-sh/nvm.git .nvm


cd ~/.nvm and check out the latest version with git checkout v0.35.1
activate nvm by sourcing it from your shell: . nvm.sh

Now add these lines to your ~/.bashrc, ~/.profile, or ~/.zshrc file to have it automatically sourced upon login:
(you may have to add to more than one of the above files)
export NVM_DIR=""$HOME/.nvm""
[ -s ""$NVM_DIR/nvm.sh"" ] && \. ""$NVM_DIR/nvm.sh""  # This loads nvm
[ -s ""$NVM_DIR/bash_completion"" ] && \. ""$NVM_DIR/bash_completion""  # This loads nvm bash_completion
Manual Install
For a fully manual install, execute the following lines to first clone the nvm repository into $HOME/.nvm, and then load nvm:
export NVM_DIR=""$HOME/.nvm"" && (
  git clone https://github.com/nvm-sh/nvm.git ""$NVM_DIR""
  cd ""$NVM_DIR""
  git checkout `git describe --abbrev=0 --tags --match ""v[0-9]*"" $(git rev-list --tags --max-count=1)`
) && \. ""$NVM_DIR/nvm.sh""
Now add these lines to your ~/.bashrc, ~/.profile, or ~/.zshrc file to have it automatically sourced upon login:
(you may have to add to more than one of the above files)
export NVM_DIR=""$HOME/.nvm""
[ -s ""$NVM_DIR/nvm.sh"" ] && \. ""$NVM_DIR/nvm.sh"" # This loads nvm
Manual upgrade
For manual upgrade with git (requires git v1.7.10+):

change to the $NVM_DIR
pull down the latest changes
check out the latest version
activate the new version

(
  cd ""$NVM_DIR""
  git fetch --tags origin
  git checkout `git describe --abbrev=0 --tags --match ""v[0-9]*"" $(git rev-list --tags --max-count=1)`
) && \. ""$NVM_DIR/nvm.sh""
Usage
To download, compile, and install the latest release of node, do this:
nvm install node # ""node"" is an alias for the latest version
To install a specific version of node:
nvm install 6.14.4 # or 10.10.0, 8.9.1, etc
The first version installed becomes the default. New shells will start with the default version of node (e.g., nvm alias default).
You can list available versions using ls-remote:
nvm ls-remote
And then in any new shell just use the installed version:
nvm use node
Or you can just run it:
nvm run node --version
Or, you can run any arbitrary command in a subshell with the desired version of node:
nvm exec 4.2 node --version
You can also get the path to the executable to where it was installed:
nvm which 5.0
In place of a version pointer like ""0.10"" or ""5.0"" or ""4.2.1"", you can use the following special default aliases with nvm install, nvm use, nvm run, nvm exec, nvm which, etc:

node: this installs the latest version of node
iojs: this installs the latest version of io.js
stable: this alias is deprecated, and only truly applies to node v0.12 and earlier. Currently, this is an alias for node.
unstable: this alias points to node v0.11 - the last ""unstable"" node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability).

Long-term support
Node has a schedule for long-term support (LTS) You can reference LTS versions in aliases and .nvmrc files with the notation lts/* for the latest LTS, and lts/argon for LTS releases from the ""argon"" line, for example. In addition, the following commands support LTS arguments:

nvm install --lts / nvm install --lts=argon / nvm install 'lts/*' / nvm install lts/argon
nvm uninstall --lts / nvm uninstall --lts=argon / nvm uninstall 'lts/*' / nvm uninstall lts/argon
nvm use --lts / nvm use --lts=argon / nvm use 'lts/*' / nvm use lts/argon
nvm exec --lts / nvm exec --lts=argon / nvm exec 'lts/*' / nvm exec lts/argon
nvm run --lts / nvm run --lts=argon / nvm run 'lts/*' / nvm run lts/argon
nvm ls-remote --lts / nvm ls-remote --lts=argon nvm ls-remote 'lts/*' / nvm ls-remote lts/argon
nvm version-remote --lts / nvm version-remote --lts=argon / nvm version-remote 'lts/*' / nvm version-remote lts/argon

Any time your local copy of nvm connects to https://nodejs.org, it will re-create the appropriate local aliases for all available LTS lines. These aliases (stored under $NVM_DIR/alias/lts), are managed by nvm, and you should not modify, remove, or create these files - expect your changes to be undone, and expect meddling with these files to cause bugs that will likely not be supported.
Migrating global packages while installing
If you want to install a new version of Node.js and migrate npm packages from a previous version:
nvm install node --reinstall-packages-from=node
This will first use ""nvm version node"" to identify the current version you're migrating packages from. Then it resolves the new version to install from the remote server and installs it. Lastly, it runs ""nvm reinstall-packages"" to reinstall the npm packages from your prior version of Node to the new one.
You can also install and migrate npm packages from specific versions of Node like this:
nvm install 6 --reinstall-packages-from=5
nvm install v4.2 --reinstall-packages-from=iojs
Note that reinstalling packages explicitly does not update the npm version ‚Äî this is to ensure that npm isn't accidentally upgraded to a broken version for the new node version.
To update npm at the same time add the --latest-npm flag, like this:
nvm install lts/* --reinstall-packages-from=default --latest-npm
or, you can at any time run the following command to get the latest supported npm version on the current node version:
nvm install-latest-npm
If you've already gotten an error to the effect of ""npm does not support Node.js"", you'll need to (1) revert to a previous node version (nvm ls & nvm use <your latest _working_ version from the ls>, (2) delete the newly created node version (nvm uninstall <your _broken_ version of node from the ls>), then (3) rerun your nvm install with the --latest-npm flag.
Default global packages from file while installing
If you have a list of default packages you want installed every time you install a new version, we support that too -- just add the package names, one per line, to the file $NVM_DIR/default-packages. You can add anything npm would accept as a package argument on the command line.
# $NVM_DIR/default-packages

rimraf
object-inspect@1.0.2
stevemao/left-pad
io.js
If you want to install io.js:
nvm install iojs
If you want to install a new version of io.js and migrate npm packages from a previous version:
nvm install iojs --reinstall-packages-from=iojs
The same guidelines mentioned for migrating npm packages in node are applicable to io.js.
System version of node
If you want to use the system-installed version of node, you can use the special default alias ""system"":
nvm use system
nvm run system --version
Listing versions
If you want to see what versions are installed:
nvm ls
If you want to see what versions are available to install:
nvm ls-remote
Suppressing colorized output
nvm ls, nvm ls-remote and nvm alias usually produce colorized output. You can disable colors with the --no-colors option (or by setting the environment variable TERM=dumb):
nvm ls --no-colors
TERM=dumb nvm ls
To restore your PATH, you can deactivate it:
nvm deactivate
To set a default Node version to be used in any new shell, use the alias 'default':
nvm alias default node
To use a mirror of the node binaries, set $NVM_NODEJS_ORG_MIRROR:
export NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist
nvm install node

NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist nvm install 4.2
To use a mirror of the io.js binaries, set $NVM_IOJS_ORG_MIRROR:
export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist
nvm install iojs-v1.0.3

NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3
nvm use will not, by default, create a ""current"" symlink. Set $NVM_SYMLINK_CURRENT to ""true"" to enable this behavior, which is sometimes useful for IDEs. Note that using nvm in multiple shell tabs with this environment variable enabled can cause race conditions.
.nvmrc
You can create a .nvmrc file containing a node version number (or any other string that nvm understands; see nvm --help for details) in the project root directory (or any parent directory).
Afterwards, nvm use, nvm install, nvm exec, nvm run, and nvm which will use the version specified in the .nvmrc file if no version is supplied on the command line.
For example, to make nvm default to the latest 5.9 release, the latest LTS version, or the latest node version for the current directory:
$ echo ""5.9"" > .nvmrc

$ echo ""lts/*"" > .nvmrc # to default to the latest LTS version

$ echo ""node"" > .nvmrc # to default to the latest version
Then when you run nvm:
$ nvm use
Found '/path/to/project/.nvmrc' with version <5.9>
Now using node v5.9.1 (npm v3.7.3)
nvm use et. al. will traverse directory structure upwards from the current directory looking for the .nvmrc file. In other words, running nvm use et. al. in any subdirectory of a directory with an .nvmrc will result in that .nvmrc being utilized.
The contents of a .nvmrc file must be the <version> (as described by nvm --help) followed by a newline. No trailing spaces are allowed, and the trailing newline is required.
Deeper Shell Integration
You can use avn to deeply integrate into your shell and automatically invoke nvm when changing directories. avn is not supported by the nvm development team. Please report issues to the avn team.
If you prefer a lighter-weight solution, the recipes below have been contributed by nvm users. They are not supported by the nvm development team. We are, however, accepting pull requests for more examples.
bash
Automatically call nvm use
Put the following at the end of your $HOME/.bashrc:
find-up () {
    path=$(pwd)
    while [[ ""$path"" != """" && ! -e ""$path/$1"" ]]; do
        path=${path%/*}
    done
    echo ""$path""
}

cdnvm(){
    cd ""$@"";
    nvm_path=$(find-up .nvmrc | tr -d '[:space:]')

    # If there are no .nvmrc file, use the default nvm version
    if [[ ! $nvm_path = *[^[:space:]]* ]]; then

        declare default_version;
        default_version=$(nvm version default);

        # If there is no default version, set it to `node`
        # This will use the latest version on your machine
        if [[ $default_version == ""N/A"" ]]; then
            nvm alias default node;
            default_version=$(nvm version default);
        fi

        # If the current version is not the default version, set it to use the default version
        if [[ $(nvm current) != ""$default_version"" ]]; then
            nvm use default;
        fi

        elif [[ -s $nvm_path/.nvmrc && -r $nvm_path/.nvmrc ]]; then
        declare nvm_version
        nvm_version=$(<""$nvm_path""/.nvmrc)

        declare locally_resolved_nvm_version
        # `nvm ls` will check all locally-available versions
        # If there are multiple matching versions, take the latest one
        # Remove the `->` and `*` characters and spaces
        # `locally_resolved_nvm_version` will be `N/A` if no local versions are found
        locally_resolved_nvm_version=$(nvm ls --no-colors ""$nvm_version"" | tail -1 | tr -d '\->*' | tr -d '[:space:]')

        # If it is not already installed, install it
        # `nvm install` will implicitly use the newly-installed version
        if [[ ""$locally_resolved_nvm_version"" == ""N/A"" ]]; then
            nvm install ""$nvm_version"";
        elif [[ $(nvm current) != ""$locally_resolved_nvm_version"" ]]; then
            nvm use ""$nvm_version"";
        fi
    fi
}
alias cd='cdnvm'
This alias would search 'up' from your current directory in order to detect a .nvmrc file. If it finds it, it will switch to that version; if not, it will use the default version.
zsh
Calling nvm use automatically in a directory with a .nvmrc file
Put this into your $HOME/.zshrc to call nvm use automatically whenever you enter a directory that contains an
.nvmrc file with a string telling nvm which node to use:
# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version=""$(nvm version)""
  local nvmrc_path=""$(nvm_find_nvmrc)""

  if [ -n ""$nvmrc_path"" ]; then
    local nvmrc_node_version=$(nvm version ""$(cat ""${nvmrc_path}"")"")

    if [ ""$nvmrc_node_version"" = ""N/A"" ]; then
      nvm install
    elif [ ""$nvmrc_node_version"" != ""$node_version"" ]; then
      nvm use
    fi
  elif [ ""$node_version"" != ""$(nvm version default)"" ]; then
    echo ""Reverting to nvm default version""
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc
License
nvm is released under the MIT license.
Copyright (C) 2010 Tim Caswell and Jordan Harband
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Running tests
Tests are written in Urchin. Install Urchin (and other dependencies) like so:
npm install

There are slow tests and fast tests. The slow tests do things like install node
and check that the right versions are used. The fast tests fake this to test
things like aliases and uninstalling. From the root of the nvm git repository,
run the fast tests like this:
npm run test/fast

Run the slow tests like this:
npm run test/slow

Run all of the tests like this:
npm test

Nota bene: Avoid running nvm while the tests are running.
Bash completion
To activate, you need to source bash_completion:
[[ -r $NVM_DIR/bash_completion ]] && \. $NVM_DIR/bash_completion
Put the above sourcing line just below the sourcing line for nvm in your profile (.bashrc, .bash_profile).
Usage
nvm:

$ nvm Tab

alias               deactivate          install             ls                  run                 unload
clear-cache         exec                list                ls-remote           unalias             use
current             help                list-remote         reinstall-packages  uninstall           version

nvm alias:

$ nvm alias Tab

default


$ nvm alias my_alias Tab

v0.6.21        v0.8.26       v0.10.28

nvm use:

$ nvm use Tab

my_alias        default        v0.6.21        v0.8.26       v0.10.28

nvm uninstall:

$ nvm uninstall Tab

my_alias        default        v0.6.21        v0.8.26       v0.10.28

Compatibility Issues
nvm will encounter some issues if you have some non-default settings set. (see #606)
The following are known to cause issues:
Inside ~/.npmrc:
prefix='some/path'
Environment Variables:
$NPM_CONFIG_PREFIX
$PREFIX
Shell settings:
set -e
Installing nvm on Alpine Linux
In order to provide the best performance (and other optimisations), nvm will download and install pre-compiled binaries for Node (and npm) when you run nvm install X. The Node project compiles, tests and hosts/provides these pre-compiled binaries which are built for mainstream/traditional Linux distributions (such as Debian, Ubuntu, CentOS, RedHat et al).
Alpine Linux, unlike mainstream/traditional Linux distributions, is based on BusyBox, a very compact (~5MB) Linux distribution. BusyBox (and thus Alpine Linux) uses a different C/C++ stack to most mainstream/traditional Linux distributions - musl. This makes binary programs built for such mainstream/traditional incompatible with Alpine Linux, thus we cannot simply nvm install X on Alpine Linux and expect the downloaded binary to run correctly - you'll likely see ""...does not exist"" errors if you try that.
There is a -s flag for nvm install which requests nvm download Node source and compile it locally.
If installing nvm on Alpine Linux is still what you want or need to do, you should be able to achieve this by running the following from you Alpine Linux shell:
apk add -U curl bash ca-certificates openssl ncurses coreutils python2 make gcc g++ libgcc linux-headers grep util-linux binutils findutils
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
The Node project has some desire but no concrete plans (due to the overheads of building, testing and support) to offer Alpine-compatible binaries.
As a potential alternative, @mhart (a Node contributor) has some Docker images for Alpine Linux with Node and optionally, npm, pre-installed.
Removal
Manual Uninstall
To remove nvm manually, execute the following:
$ rm -rf ""$NVM_DIR""
Edit ~/.bashrc (or other shell resource config) and remove the lines below:
export NVM_DIR=""$HOME/.nvm""
[ -s ""$NVM_DIR/nvm.sh"" ] && \. ""$NVM_DIR/nvm.sh"" # This loads nvm
[[ -r $NVM_DIR/bash_completion ]] && \. $NVM_DIR/bash_completion
Docker for development environment
To make the development and testing work easier, we have a Dockerfile for development usage, which is based on Ubuntu 14.04 base image, prepared with essential and useful tools for nvm development, to build the docker image of the environment, run the docker command at the root of nvm repository:
$ docker build -t nvm-dev .
This will package your current nvm repository with our pre-defined development environment into a docker image named nvm-dev, once it's built with success, validate your image via docker images:
$ docker images

REPOSITORY         TAG                 IMAGE ID            CREATED             SIZE
nvm-dev            latest              9ca4c57a97d8        7 days ago          650 MB
If you got no error message, now you can easily involve in:
$ docker run -h nvm-dev -it nvm-dev

nvm@nvm-dev:~/.nvm$
Please note that it'll take about 8 minutes to build the image and the image size would be about 650MB, so it's not suitable for production usage.
For more information and documentation about docker, please refer to its official website:

https://www.docker.com/
https://docs.docker.com/

Problems


If you try to install a node version and the installation fails, be sure to run nvm cache clear to delete cached node downloads, or you might get an error like the following:
curl: (33) HTTP server doesn't seem to support byte ranges. Cannot resume.


Where's my sudo node? Check out #43


After the v0.8.6 release of node, nvm tries to install from binary packages. But in some systems, the official binary packages don't work due to incompatibility of shared libs. In such cases, use -s option to force install from source:


nvm install -s 0.8.6

If setting the default alias does not establish the node version in new shells (i.e. nvm current yields system), ensure that the system's node PATH is set before the nvm.sh source line in your shell profile (see #658)

Mac OS ""troubleshooting""
nvm node version not found in vim shell
If you set node version to a version other than your system node version nvm use 6.2.1 and open vim and run :!node -v you should see v6.2.1 if you see your system version v0.12.7. You need to run:
sudo chmod ugo-x /usr/libexec/path_helper
More on this issue in dotphiles/dotzsh.
",node version manager table contents installation update install update script ansible verify installation important notes git install manual install manual upgrade usage longterm support migrating global packages installing default global packages file installing iojs system version node listing versions suppressing colorized output nvmrc deeper shell integration bash automatically call nvm use zsh calling nvm use automatically directory nvmrc file license running tests bash completion usage compatibility issues installing nvm alpine linux removal manual uninstall docker development environment problems mac os troubleshooting installation update install update script install update nvm run install script may either download run script manually use following curl wget command curl httpsrawgithubusercontentcomnvmshnvmvinstallsh bash wget qo httpsrawgithubusercontentcomnvmshnvmvinstallsh bash running either commands downloads script runs script clones nvm repository nvm adds source lines snippet profile bashprofile zshrc profile bashrc export nvmdir z xdgconfighome printf homenvm printf xdgconfighomenvm nvmdirnvmsh nvmdirnvmsh loads nvm note environment variable xdgconfighome present place nvm files note add nouse end script nvmsh nouse postpone using nvm manually use customize install source directory profile version using nvmsource nvmdir profile nodeversion variables eg curl nvmdirpathtonvm ensure nvmdir contain trailing slash nb installer use git curl wget download nvm whatever available note linux running install script get nvm command found see feedback terminal type command v nvm simply close current terminal open new terminal try verifying note since os x usrbingit preset xcode command line tools means cant properly detect git installed need manually install xcode command line tools running install script otherwise itll fail see note os x get nvm command found running install script one following might reason system may bashprofile file command set create one touch bashprofile run install script might need restart terminal instance try opening new tabwindow terminal retry doesnt fix problem may try following open bashprofile zshrc profile bashrc add following line code source yourprofilefile eg source bashrc source zshrc dont work try adding snippet install section finds correct nvm directory loads nvm profile bashprofile zshrc profile bashrc information issue possible workarounds please refer ansible use task name nvm shell curl httpsrawgithubusercontentcomnvmshnvmvinstallsh bash args creates ansibleenvhome nvmnvmsh verify installation verify nvm installed command v nvm output nvm installation successful please note nvm work since nvm sourced shell function executable binary important notes youre running system without prepackaged binary available means youre going install nodejs iojs source code need make sure system c compiler os x xcode work debianubuntu based gnulinux buildessential libssldev packages work note nvm support windows see may work wsl windows subsystem linux depending version wsl windows two alternatives exist neither supported developed us nvmwindows nodist note nvm support fish either see alternatives exist neither supported developed us bass allows use utilities written bash fish shell fastnvmfish works version numbers aliases doesnt significantly slow shell startup pluginnvm plugin oh fish makes nvm completions available fish shell fnm fishermanbased version manager fish fishnvm wrapper around nvm fish delays sourcing nvm actually used note still problems freebsd official prebuilt binary freebsd building source may need patches see issue ticket bug nodejs freebsd may need patched nodejsnode note os x xcode installed wish download gb file install command line tools check blog post install command line tools os x mavericks yosemite without xcode note os x havehad system node installed want install modules globally keep mind using nvm need sudo globally install module npm g instead sudo npm install g grunt instead npm install g grunt npmrc file make sure contain prefix settings compatible nvm keep previous system node install nvm available user account one used install nvm might cause version mismatches users using usrlocallibnodemodules vs user account using nvmversionsnodevxxxlibnodemodules homebrew installation supported issues homebrewinstalled nvm please brew uninstall install using instructions filing issue note youre using zsh easily install nvm zsh plugin install zshnvm run nvm upgrade upgrade note git versions v may face problem cloning nvm source github via https protocol also different behavior git v git prior v clone tags minimum required git version v interested problem mentioned please refer githubs https cloning errors article git install git installed requires git v clone repo root user profile cd anywhere git clone httpsgithubcomnvmshnvmgit nvm cd nvm check latest version git checkout v activate nvm sourcing shell nvmsh add lines bashrc profile zshrc file automatically sourced upon login may add one files export nvmdirhomenvm nvmdirnvmsh nvmdirnvmsh loads nvm nvmdirbashcompletion nvmdirbashcompletion loads nvm bashcompletion manual install fully manual install execute following lines first clone nvm repository homenvm load nvm export nvmdirhomenvm git clone httpsgithubcomnvmshnvmgit nvmdir cd nvmdir git checkout git describe abbrev tags match v git revlist tags maxcount nvmdirnvmsh add lines bashrc profile zshrc file automatically sourced upon login may add one files export nvmdirhomenvm nvmdirnvmsh nvmdirnvmsh loads nvm manual upgrade manual upgrade git requires git v change nvmdir pull latest changes check latest version activate new version cd nvmdir git fetch tags origin git checkout git describe abbrev tags match v git revlist tags maxcount nvmdirnvmsh usage download compile install latest release node nvm install node node alias latest version install specific version node nvm install etc first version installed becomes default new shells start default version node eg nvm alias default list available versions using lsremote nvm lsremote new shell use installed version nvm use node run nvm run node version run arbitrary command subshell desired version node nvm exec node version also get path executable installed nvm place version pointer like use following special default aliases nvm install nvm use nvm run nvm exec nvm etc node installs latest version node iojs installs latest version iojs stable alias deprecated truly applies node v earlier currently alias node unstable alias points node v last unstable node release since post node versions stable semver versions communicate breakage stability longterm support node schedule longterm support lts reference lts versions aliases nvmrc files notation lts latest lts ltsargon lts releases argon line example addition following commands support lts arguments nvm install lts nvm install ltsargon nvm install lts nvm install ltsargon nvm uninstall lts nvm uninstall ltsargon nvm uninstall lts nvm uninstall ltsargon nvm use lts nvm use ltsargon nvm use lts nvm use ltsargon nvm exec lts nvm exec ltsargon nvm exec lts nvm exec ltsargon nvm run lts nvm run ltsargon nvm run lts nvm run ltsargon nvm lsremote lts nvm lsremote ltsargon nvm lsremote lts nvm lsremote ltsargon nvm versionremote lts nvm versionremote ltsargon nvm versionremote lts nvm versionremote ltsargon time local copy nvm connects httpsnodejsorg recreate appropriate local aliases available lts lines aliases stored nvmdiraliaslts managed nvm modify remove create files expect changes undone expect meddling files cause bugs likely supported migrating global packages installing want install new version nodejs migrate npm packages previous version nvm install node reinstallpackagesfromnode first use nvm version node identify current version youre migrating packages resolves new version install remote server installs lastly runs nvm reinstallpackages reinstall npm packages prior version node new one also install migrate npm packages specific versions node like nvm install reinstallpackagesfrom nvm install v reinstallpackagesfromiojs note reinstalling packages explicitly update npm version ensure npm isnt accidentally upgraded broken version new node version update npm time add latestnpm flag like nvm install lts reinstallpackagesfromdefault latestnpm time run following command get latest supported npm version current node version nvm installlatestnpm youve already gotten error effect npm support nodejs youll need revert previous node version nvm ls nvm use latest working version ls delete newly created node version nvm uninstall broken version node ls rerun nvm install latestnpm flag default global packages file installing list default packages want installed every time install new version support add package names one per line file nvmdirdefaultpackages add anything npm would accept package argument command line nvmdirdefaultpackages rimraf objectinspect stevemaoleftpad iojs want install iojs nvm install iojs want install new version iojs migrate npm packages previous version nvm install iojs reinstallpackagesfromiojs guidelines mentioned migrating npm packages node applicable iojs system version node want use systeminstalled version node use special default alias system nvm use system nvm run system version listing versions want see versions installed nvm ls want see versions available install nvm lsremote suppressing colorized output nvm ls nvm lsremote nvm alias usually produce colorized output disable colors nocolors option setting environment variable termdumb nvm ls nocolors termdumb nvm ls restore path deactivate nvm deactivate set default node version used new shell use alias default nvm alias default node use mirror node binaries set nvmnodejsorgmirror export nvmnodejsorgmirrorhttpsnodejsorgdist nvm install node nvmnodejsorgmirrorhttpsnodejsorgdist nvm install use mirror iojs binaries set nvmiojsorgmirror export nvmiojsorgmirrorhttpsiojsorgdist nvm install iojsv nvmiojsorgmirrorhttpsiojsorgdist nvm install iojsv nvm use default create current symlink set nvmsymlinkcurrent true enable behavior sometimes useful ides note using nvm multiple shell tabs environment variable enabled cause race conditions nvmrc create nvmrc file containing node version number string nvm understands see nvm help details project root directory parent directory afterwards nvm use nvm install nvm exec nvm run nvm use version specified nvmrc file version supplied command line example make nvm default latest release latest lts version latest node version current directory echo nvmrc echo lts nvmrc default latest lts version echo node nvmrc default latest version run nvm nvm use found pathtoprojectnvmrc version using node v npm v nvm use et al traverse directory structure upwards current directory looking nvmrc file words running nvm use et al subdirectory directory nvmrc result nvmrc utilized contents nvmrc file must version described nvm help followed newline trailing spaces allowed trailing newline required deeper shell integration use avn deeply integrate shell automatically invoke nvm changing directories avn supported nvm development team please report issues avn team prefer lighterweight solution recipes contributed nvm users supported nvm development team however accepting pull requests examples bash automatically call nvm use put following end homebashrc findup pathpwd path e path pathpath done echo path cdnvm cd nvmpathfindup nvmrc tr space nvmrc file use default nvm version nvmpath space declare defaultversion defaultversionnvm version default default version set node use latest version machine defaultversion na nvm alias default node defaultversionnvm version default fi current version default version set use default version nvm current defaultversion nvm use default fi elif nvmpathnvmrc r nvmpathnvmrc declare nvmversion nvmversionnvmpathnvmrc declare locallyresolvednvmversion nvm ls check locallyavailable versions multiple matching versions take latest one remove characters spaces locallyresolvednvmversion na local versions found locallyresolvednvmversionnvm ls nocolors nvmversion tail tr tr space already installed install nvm install implicitly use newlyinstalled version locallyresolvednvmversion na nvm install nvmversion elif nvm current locallyresolvednvmversion nvm use nvmversion fi fi alias cdcdnvm alias would search current directory order detect nvmrc file finds switch version use default version zsh calling nvm use automatically directory nvmrc file put homezshrc call nvm use automatically whenever enter directory contains nvmrc file string telling nvm node use place nvm initialization autoload u addzshhook loadnvmrc local nodeversionnvm version local nvmrcpathnvmfindnvmrc n nvmrcpath local nvmrcnodeversionnvm version cat nvmrcpath nvmrcnodeversion na nvm install elif nvmrcnodeversion nodeversion nvm use fi elif nodeversion nvm version default echo reverting nvm default version nvm use default fi addzshhook chpwd loadnvmrc loadnvmrc license nvm released mit license copyright c tim caswell jordan harband permission hereby granted free charge person obtaining copy software associated documentation files software deal software without restriction including without limitation rights use copy modify merge publish distribute sublicense andor sell copies software permit persons software furnished subject following conditions copyright notice permission notice shall included copies substantial portions software software provided without warranty kind express implied including limited warranties merchantability fitness particular purpose noninfringement event shall authors copyright holders liable claim damages liability whether action contract tort otherwise arising connection software use dealings software running tests tests written urchin install urchin dependencies like npm install slow tests fast tests slow tests things like install node check right versions used fast tests fake test things like aliases uninstalling root nvm git repository run fast tests like npm run testfast run slow tests like npm run testslow run tests like npm test nota bene avoid running nvm tests running bash completion activate need source bashcompletion r nvmdirbashcompletion nvmdirbashcompletion put sourcing line sourcing line nvm profile bashrc bashprofile usage nvm nvm tab alias deactivate install ls run unload clearcache exec list lsremote unalias use current help listremote reinstallpackages uninstall version nvm alias nvm alias tab default nvm alias myalias tab v v v nvm use nvm use tab myalias default v v v nvm uninstall nvm uninstall tab myalias default v v v compatibility issues nvm encounter issues nondefault settings set see following known cause issues inside npmrc prefixsomepath environment variables npmconfigprefix prefix shell settings set e installing nvm alpine linux order provide best performance optimisations nvm download install precompiled binaries node npm run nvm install x node project compiles tests hostsprovides precompiled binaries built mainstreamtraditional linux distributions debian ubuntu centos redhat et al alpine linux unlike mainstreamtraditional linux distributions based busybox compact mb linux distribution busybox thus alpine linux uses different cc stack mainstreamtraditional linux distributions musl makes binary programs built mainstreamtraditional incompatible alpine linux thus cannot simply nvm install x alpine linux expect downloaded binary run correctly youll likely see exist errors try flag nvm install requests nvm download node source compile locally installing nvm alpine linux still want need able achieve running following alpine linux shell apk add u curl bash cacertificates openssl ncurses coreutils python make gcc g libgcc linuxheaders grep utillinux binutils findutils curl httpsrawgithubusercontentcomnvmshnvmvinstallsh bash node project desire concrete plans due overheads building testing support offer alpinecompatible binaries potential alternative mhart node contributor docker images alpine linux node optionally npm preinstalled removal manual uninstall remove nvm manually execute following rm rf nvmdir edit bashrc shell resource config remove lines export nvmdirhomenvm nvmdirnvmsh nvmdirnvmsh loads nvm r nvmdirbashcompletion nvmdirbashcompletion docker development environment make development testing work easier dockerfile development usage based ubuntu base image prepared essential useful tools nvm development build docker image environment run docker command root nvm repository docker build nvmdev package current nvm repository predefined development environment docker image named nvmdev built success validate image via docker images docker images repository tag image id created size nvmdev latest cacad days ago mb got error message easily involve docker run h nvmdev nvmdev nvmnvmdevnvm please note itll take minutes build image image size would mb suitable production usage information documentation docker please refer official website httpswwwdockercom httpsdocsdockercom problems try install node version installation fails sure run nvm cache clear delete cached node downloads might get error like following curl http server doesnt seem support byte ranges cannot resume wheres sudo node check v release node nvm tries install binary packages systems official binary packages dont work due incompatibility shared libs cases use option force install source nvm install setting default alias establish node version new shells ie nvm current yields system ensure systems node path set nvmsh source line shell profile see mac os troubleshooting nvm node version found vim shell set node version version system node version nvm use open vim run node v see v see system version v need run sudo chmod ugox usrlibexecpathhelper issue dotphilesdotzsh,node version manag tabl content instal updat instal updat script ansibl verifi instal import note git instal manual instal manual upgrad usag longterm support migrat global packag instal default global packag file instal ioj system version node list version suppress color output nvmrc deeper shell integr bash automat call nvm use zsh call nvm use automat directori nvmrc file licens run test bash complet usag compat issu instal nvm alpin linux remov manual uninstal docker develop environ problem mac os troubleshoot instal updat instal updat script instal updat nvm run instal script may either download run script manual use follow curl wget command curl httpsrawgithubusercontentcomnvmshnvmvinstallsh bash wget qo httpsrawgithubusercontentcomnvmshnvmvinstallsh bash run either command download script run script clone nvm repositori nvm add sourc line snippet profil bashprofil zshrc profil bashrc export nvmdir z xdgconfighom printf homenvm printf xdgconfighomenvm nvmdirnvmsh nvmdirnvmsh load nvm note environ variabl xdgconfighom present place nvm file note add nous end script nvmsh nous postpon use nvm manual use custom instal sourc directori profil version use nvmsourc nvmdir profil nodevers variabl eg curl nvmdirpathtonvm ensur nvmdir contain trail slash nb instal use git curl wget download nvm whatev avail note linux run instal script get nvm command found see feedback termin type command v nvm simpli close current termin open new termin tri verifi note sinc os x usrbingit preset xcode command line tool mean cant properli detect git instal need manual instal xcode command line tool run instal script otherwis itll fail see note os x get nvm command found run instal script one follow might reason system may bashprofil file command set creat one touch bashprofil run instal script might need restart termin instanc tri open new tabwindow termin retri doesnt fix problem may tri follow open bashprofil zshrc profil bashrc add follow line code sourc yourprofilefil eg sourc bashrc sourc zshrc dont work tri ad snippet instal section find correct nvm directori load nvm profil bashprofil zshrc profil bashrc inform issu possibl workaround pleas refer ansibl use task name nvm shell curl httpsrawgithubusercontentcomnvmshnvmvinstallsh bash arg creat ansibleenvhom nvmnvmsh verifi instal verifi nvm instal command v nvm output nvm instal success pleas note nvm work sinc nvm sourc shell function execut binari import note your run system without prepackag binari avail mean your go instal nodej ioj sourc code need make sure system c compil os x xcode work debianubuntu base gnulinux buildessenti libssldev packag work note nvm support window see may work wsl window subsystem linux depend version wsl window two altern exist neither support develop us nvmwindow nodist note nvm support fish either see altern exist neither support develop us bass allow use util written bash fish shell fastnvmfish work version number alias doesnt significantli slow shell startup pluginnvm plugin oh fish make nvm complet avail fish shell fnm fishermanbas version manag fish fishnvm wrapper around nvm fish delay sourc nvm actual use note still problem freebsd offici prebuilt binari freebsd build sourc may need patch see issu ticket bug nodej freebsd may need patch nodejsnod note os x xcode instal wish download gb file instal command line tool check blog post instal command line tool os x maverick yosemit without xcode note os x havehad system node instal want instal modul global keep mind use nvm need sudo global instal modul npm g instead sudo npm instal g grunt instead npm instal g grunt npmrc file make sure contain prefix set compat nvm keep previou system node instal nvm avail user account one use instal nvm might caus version mismatch user use usrlocallibnodemodul vs user account use nvmversionsnodevxxxlibnodemodul homebrew instal support issu homebrewinstal nvm pleas brew uninstal instal use instruct file issu note your use zsh easili instal nvm zsh plugin instal zshnvm run nvm upgrad upgrad note git version v may face problem clone nvm sourc github via http protocol also differ behavior git v git prior v clone tag minimum requir git version v interest problem mention pleas refer github http clone error articl git instal git instal requir git v clone repo root user profil cd anywher git clone httpsgithubcomnvmshnvmgit nvm cd nvm check latest version git checkout v activ nvm sourc shell nvmsh add line bashrc profil zshrc file automat sourc upon login may add one file export nvmdirhomenvm nvmdirnvmsh nvmdirnvmsh load nvm nvmdirbashcomplet nvmdirbashcomplet load nvm bashcomplet manual instal fulli manual instal execut follow line first clone nvm repositori homenvm load nvm export nvmdirhomenvm git clone httpsgithubcomnvmshnvmgit nvmdir cd nvmdir git checkout git describ abbrev tag match v git revlist tag maxcount nvmdirnvmsh add line bashrc profil zshrc file automat sourc upon login may add one file export nvmdirhomenvm nvmdirnvmsh nvmdirnvmsh load nvm manual upgrad manual upgrad git requir git v chang nvmdir pull latest chang check latest version activ new version cd nvmdir git fetch tag origin git checkout git describ abbrev tag match v git revlist tag maxcount nvmdirnvmsh usag download compil instal latest releas node nvm instal node node alia latest version instal specif version node nvm instal etc first version instal becom default new shell start default version node eg nvm alia default list avail version use lsremot nvm lsremot new shell use instal version nvm use node run nvm run node version run arbitrari command subshel desir version node nvm exec node version also get path execut instal nvm place version pointer like use follow special default alias nvm instal nvm use nvm run nvm exec nvm etc node instal latest version node ioj instal latest version ioj stabl alia deprec truli appli node v earlier current alia node unstabl alia point node v last unstabl node releas sinc post node version stabl semver version commun breakag stabil longterm support node schedul longterm support lt refer lt version alias nvmrc file notat lt latest lt ltsargon lt releas argon line exampl addit follow command support lt argument nvm instal lt nvm instal ltsargon nvm instal lt nvm instal ltsargon nvm uninstal lt nvm uninstal ltsargon nvm uninstal lt nvm uninstal ltsargon nvm use lt nvm use ltsargon nvm use lt nvm use ltsargon nvm exec lt nvm exec ltsargon nvm exec lt nvm exec ltsargon nvm run lt nvm run ltsargon nvm run lt nvm run ltsargon nvm lsremot lt nvm lsremot ltsargon nvm lsremot lt nvm lsremot ltsargon nvm versionremot lt nvm versionremot ltsargon nvm versionremot lt nvm versionremot ltsargon time local copi nvm connect httpsnodejsorg recreat appropri local alias avail lt line alias store nvmdiraliaslt manag nvm modifi remov creat file expect chang undon expect meddl file caus bug like support migrat global packag instal want instal new version nodej migrat npm packag previou version nvm instal node reinstallpackagesfromnod first use nvm version node identifi current version your migrat packag resolv new version instal remot server instal lastli run nvm reinstallpackag reinstal npm packag prior version node new one also instal migrat npm packag specif version node like nvm instal reinstallpackagesfrom nvm instal v reinstallpackagesfromioj note reinstal packag explicitli updat npm version ensur npm isnt accident upgrad broken version new node version updat npm time add latestnpm flag like nvm instal lt reinstallpackagesfromdefault latestnpm time run follow command get latest support npm version current node version nvm installlatestnpm youv alreadi gotten error effect npm support nodej youll need revert previou node version nvm ls nvm use latest work version ls delet newli creat node version nvm uninstal broken version node ls rerun nvm instal latestnpm flag default global packag file instal list default packag want instal everi time instal new version support add packag name one per line file nvmdirdefaultpackag add anyth npm would accept packag argument command line nvmdirdefaultpackag rimraf objectinspect stevemaoleftpad ioj want instal ioj nvm instal ioj want instal new version ioj migrat npm packag previou version nvm instal ioj reinstallpackagesfromioj guidelin mention migrat npm packag node applic ioj system version node want use systeminstal version node use special default alia system nvm use system nvm run system version list version want see version instal nvm ls want see version avail instal nvm lsremot suppress color output nvm ls nvm lsremot nvm alia usual produc color output disabl color nocolor option set environ variabl termdumb nvm ls nocolor termdumb nvm ls restor path deactiv nvm deactiv set default node version use new shell use alia default nvm alia default node use mirror node binari set nvmnodejsorgmirror export nvmnodejsorgmirrorhttpsnodejsorgdist nvm instal node nvmnodejsorgmirrorhttpsnodejsorgdist nvm instal use mirror ioj binari set nvmiojsorgmirror export nvmiojsorgmirrorhttpsiojsorgdist nvm instal iojsv nvmiojsorgmirrorhttpsiojsorgdist nvm instal iojsv nvm use default creat current symlink set nvmsymlinkcurr true enabl behavior sometim use ide note use nvm multipl shell tab environ variabl enabl caus race condit nvmrc creat nvmrc file contain node version number string nvm understand see nvm help detail project root directori parent directori afterward nvm use nvm instal nvm exec nvm run nvm use version specifi nvmrc file version suppli command line exampl make nvm default latest releas latest lt version latest node version current directori echo nvmrc echo lt nvmrc default latest lt version echo node nvmrc default latest version run nvm nvm use found pathtoprojectnvmrc version use node v npm v nvm use et al travers directori structur upward current directori look nvmrc file word run nvm use et al subdirectori directori nvmrc result nvmrc util content nvmrc file must version describ nvm help follow newlin trail space allow trail newlin requir deeper shell integr use avn deepli integr shell automat invok nvm chang directori avn support nvm develop team pleas report issu avn team prefer lighterweight solut recip contribut nvm user support nvm develop team howev accept pull request exampl bash automat call nvm use put follow end homebashrc findup pathpwd path e path pathpath done echo path cdnvm cd nvmpathfindup nvmrc tr space nvmrc file use default nvm version nvmpath space declar defaultvers defaultversionnvm version default default version set node use latest version machin defaultvers na nvm alia default node defaultversionnvm version default fi current version default version set use default version nvm current defaultvers nvm use default fi elif nvmpathnvmrc r nvmpathnvmrc declar nvmversion nvmversionnvmpathnvmrc declar locallyresolvednvmvers nvm ls check locallyavail version multipl match version take latest one remov charact space locallyresolvednvmvers na local version found locallyresolvednvmversionnvm ls nocolor nvmversion tail tr tr space alreadi instal instal nvm instal implicitli use newlyinstal version locallyresolvednvmvers na nvm instal nvmversion elif nvm current locallyresolvednvmvers nvm use nvmversion fi fi alia cdcdnvm alia would search current directori order detect nvmrc file find switch version use default version zsh call nvm use automat directori nvmrc file put homezshrc call nvm use automat whenev enter directori contain nvmrc file string tell nvm node use place nvm initi autoload u addzshhook loadnvmrc local nodeversionnvm version local nvmrcpathnvmfindnvmrc n nvmrcpath local nvmrcnodeversionnvm version cat nvmrcpath nvmrcnodevers na nvm instal elif nvmrcnodevers nodevers nvm use fi elif nodevers nvm version default echo revert nvm default version nvm use default fi addzshhook chpwd loadnvmrc loadnvmrc licens nvm releas mit licens copyright c tim caswel jordan harband permiss herebi grant free charg person obtain copi softwar associ document file softwar deal softwar without restrict includ without limit right use copi modifi merg publish distribut sublicens andor sell copi softwar permit person softwar furnish subject follow condit copyright notic permiss notic shall includ copi substanti portion softwar softwar provid without warranti kind express impli includ limit warranti merchant fit particular purpos noninfring event shall author copyright holder liabl claim damag liabil whether action contract tort otherwis aris connect softwar use deal softwar run test test written urchin instal urchin depend like npm instal slow test fast test slow test thing like instal node check right version use fast test fake test thing like alias uninstal root nvm git repositori run fast test like npm run testfast run slow test like npm run testslow run test like npm test nota bene avoid run nvm test run bash complet activ need sourc bashcomplet r nvmdirbashcomplet nvmdirbashcomplet put sourc line sourc line nvm profil bashrc bashprofil usag nvm nvm tab alia deactiv instal ls run unload clearcach exec list lsremot unalia use current help listremot reinstallpackag uninstal version nvm alia nvm alia tab default nvm alia myalia tab v v v nvm use nvm use tab myalia default v v v nvm uninstal nvm uninstal tab myalia default v v v compat issu nvm encount issu nondefault set set see follow known caus issu insid npmrc prefixsomepath environ variabl npmconfigprefix prefix shell set set e instal nvm alpin linux order provid best perform optimis nvm download instal precompil binari node npm run nvm instal x node project compil test hostsprovid precompil binari built mainstreamtradit linux distribut debian ubuntu cento redhat et al alpin linux unlik mainstreamtradit linux distribut base busybox compact mb linux distribut busybox thu alpin linux use differ cc stack mainstreamtradit linux distribut musl make binari program built mainstreamtradit incompat alpin linux thu cannot simpli nvm instal x alpin linux expect download binari run correctli youll like see exist error tri flag nvm instal request nvm download node sourc compil local instal nvm alpin linux still want need abl achiev run follow alpin linux shell apk add u curl bash cacertif openssl ncurs coreutil python make gcc g libgcc linuxhead grep utillinux binutil findutil curl httpsrawgithubusercontentcomnvmshnvmvinstallsh bash node project desir concret plan due overhead build test support offer alpinecompat binari potenti altern mhart node contributor docker imag alpin linux node option npm preinstal remov manual uninstal remov nvm manual execut follow rm rf nvmdir edit bashrc shell resourc config remov line export nvmdirhomenvm nvmdirnvmsh nvmdirnvmsh load nvm r nvmdirbashcomplet nvmdirbashcomplet docker develop environ make develop test work easier dockerfil develop usag base ubuntu base imag prepar essenti use tool nvm develop build docker imag environ run docker command root nvm repositori docker build nvmdev packag current nvm repositori predefin develop environ docker imag name nvmdev built success valid imag via docker imag docker imag repositori tag imag id creat size nvmdev latest cacad day ago mb got error messag easili involv docker run h nvmdev nvmdev nvmnvmdevnvm pleas note itll take minut build imag imag size would mb suitabl product usag inform document docker pleas refer offici websit httpswwwdockercom httpsdocsdockercom problem tri instal node version instal fail sure run nvm cach clear delet cach node download might get error like follow curl http server doesnt seem support byte rang cannot resum where sudo node check v releas node nvm tri instal binari packag system offici binari packag dont work due incompat share lib case use option forc instal sourc nvm instal set default alia establish node version new shell ie nvm current yield system ensur system node path set nvmsh sourc line shell profil see mac os troubleshoot nvm node version found vim shell set node version version system node version nvm use open vim run node v see v see system version v need run sudo chmod ugox usrlibexecpathhelp issu dotphilesdotzsh,node version manager table content installation update install update script ansible verify installation important note git install manual install manual upgrade usage longterm support migrating global package installing default global package file installing iojs system version node listing version suppressing colorized output nvmrc deeper shell integration bash automatically call nvm use zsh calling nvm use automatically directory nvmrc file license running test bash completion usage compatibility issue installing nvm alpine linux removal manual uninstall docker development environment problem mac o troubleshooting installation update install update script install update nvm run install script may either download run script manually use following curl wget command curl httpsrawgithubusercontentcomnvmshnvmvinstallsh bash wget qo httpsrawgithubusercontentcomnvmshnvmvinstallsh bash running either command downloads script run script clone nvm repository nvm add source line snippet profile bashprofile zshrc profile bashrc export nvmdir z xdgconfighome printf homenvm printf xdgconfighomenvm nvmdirnvmsh nvmdirnvmsh load nvm note environment variable xdgconfighome present place nvm file note add nouse end script nvmsh nouse postpone using nvm manually use customize install source directory profile version using nvmsource nvmdir profile nodeversion variable eg curl nvmdirpathtonvm ensure nvmdir contain trailing slash nb installer use git curl wget download nvm whatever available note linux running install script get nvm command found see feedback terminal type command v nvm simply close current terminal open new terminal try verifying note since o x usrbingit preset xcode command line tool mean cant properly detect git installed need manually install xcode command line tool running install script otherwise itll fail see note o x get nvm command found running install script one following might reason system may bashprofile file command set create one touch bashprofile run install script might need restart terminal instance try opening new tabwindow terminal retry doesnt fix problem may try following open bashprofile zshrc profile bashrc add following line code source yourprofilefile eg source bashrc source zshrc dont work try adding snippet install section find correct nvm directory load nvm profile bashprofile zshrc profile bashrc information issue possible workarounds please refer ansible use task name nvm shell curl httpsrawgithubusercontentcomnvmshnvmvinstallsh bash args creates ansibleenvhome nvmnvmsh verify installation verify nvm installed command v nvm output nvm installation successful please note nvm work since nvm sourced shell function executable binary important note youre running system without prepackaged binary available mean youre going install nodejs iojs source code need make sure system c compiler o x xcode work debianubuntu based gnulinux buildessential libssldev package work note nvm support window see may work wsl window subsystem linux depending version wsl window two alternative exist neither supported developed u nvmwindows nodist note nvm support fish either see alternative exist neither supported developed u bass allows use utility written bash fish shell fastnvmfish work version number alias doesnt significantly slow shell startup pluginnvm plugin oh fish make nvm completion available fish shell fnm fishermanbased version manager fish fishnvm wrapper around nvm fish delay sourcing nvm actually used note still problem freebsd official prebuilt binary freebsd building source may need patch see issue ticket bug nodejs freebsd may need patched nodejsnode note o x xcode installed wish download gb file install command line tool check blog post install command line tool o x maverick yosemite without xcode note o x havehad system node installed want install module globally keep mind using nvm need sudo globally install module npm g instead sudo npm install g grunt instead npm install g grunt npmrc file make sure contain prefix setting compatible nvm keep previous system node install nvm available user account one used install nvm might cause version mismatch user using usrlocallibnodemodules v user account using nvmversionsnodevxxxlibnodemodules homebrew installation supported issue homebrewinstalled nvm please brew uninstall install using instruction filing issue note youre using zsh easily install nvm zsh plugin install zshnvm run nvm upgrade upgrade note git version v may face problem cloning nvm source github via http protocol also different behavior git v git prior v clone tag minimum required git version v interested problem mentioned please refer githubs http cloning error article git install git installed requires git v clone repo root user profile cd anywhere git clone httpsgithubcomnvmshnvmgit nvm cd nvm check latest version git checkout v activate nvm sourcing shell nvmsh add line bashrc profile zshrc file automatically sourced upon login may add one file export nvmdirhomenvm nvmdirnvmsh nvmdirnvmsh load nvm nvmdirbashcompletion nvmdirbashcompletion load nvm bashcompletion manual install fully manual install execute following line first clone nvm repository homenvm load nvm export nvmdirhomenvm git clone httpsgithubcomnvmshnvmgit nvmdir cd nvmdir git checkout git describe abbrev tag match v git revlist tag maxcount nvmdirnvmsh add line bashrc profile zshrc file automatically sourced upon login may add one file export nvmdirhomenvm nvmdirnvmsh nvmdirnvmsh load nvm manual upgrade manual upgrade git requires git v change nvmdir pull latest change check latest version activate new version cd nvmdir git fetch tag origin git checkout git describe abbrev tag match v git revlist tag maxcount nvmdirnvmsh usage download compile install latest release node nvm install node node alias latest version install specific version node nvm install etc first version installed becomes default new shell start default version node eg nvm alias default list available version using lsremote nvm lsremote new shell use installed version nvm use node run nvm run node version run arbitrary command subshell desired version node nvm exec node version also get path executable installed nvm place version pointer like use following special default alias nvm install nvm use nvm run nvm exec nvm etc node installs latest version node iojs installs latest version iojs stable alias deprecated truly applies node v earlier currently alias node unstable alias point node v last unstable node release since post node version stable semver version communicate breakage stability longterm support node schedule longterm support lts reference lts version alias nvmrc file notation lts latest lts ltsargon lts release argon line example addition following command support lts argument nvm install lts nvm install ltsargon nvm install lts nvm install ltsargon nvm uninstall lts nvm uninstall ltsargon nvm uninstall lts nvm uninstall ltsargon nvm use lts nvm use ltsargon nvm use lts nvm use ltsargon nvm exec lts nvm exec ltsargon nvm exec lts nvm exec ltsargon nvm run lts nvm run ltsargon nvm run lts nvm run ltsargon nvm lsremote lts nvm lsremote ltsargon nvm lsremote lts nvm lsremote ltsargon nvm versionremote lts nvm versionremote ltsargon nvm versionremote lts nvm versionremote ltsargon time local copy nvm connects httpsnodejsorg recreate appropriate local alias available lts line alias stored nvmdiraliaslts managed nvm modify remove create file expect change undone expect meddling file cause bug likely supported migrating global package installing want install new version nodejs migrate npm package previous version nvm install node reinstallpackagesfromnode first use nvm version node identify current version youre migrating package resolve new version install remote server installs lastly run nvm reinstallpackages reinstall npm package prior version node new one also install migrate npm package specific version node like nvm install reinstallpackagesfrom nvm install v reinstallpackagesfromiojs note reinstalling package explicitly update npm version ensure npm isnt accidentally upgraded broken version new node version update npm time add latestnpm flag like nvm install lts reinstallpackagesfromdefault latestnpm time run following command get latest supported npm version current node version nvm installlatestnpm youve already gotten error effect npm support nodejs youll need revert previous node version nvm l nvm use latest working version l delete newly created node version nvm uninstall broken version node l rerun nvm install latestnpm flag default global package file installing list default package want installed every time install new version support add package name one per line file nvmdirdefaultpackages add anything npm would accept package argument command line nvmdirdefaultpackages rimraf objectinspect stevemaoleftpad iojs want install iojs nvm install iojs want install new version iojs migrate npm package previous version nvm install iojs reinstallpackagesfromiojs guideline mentioned migrating npm package node applicable iojs system version node want use systeminstalled version node use special default alias system nvm use system nvm run system version listing version want see version installed nvm l want see version available install nvm lsremote suppressing colorized output nvm l nvm lsremote nvm alias usually produce colorized output disable color nocolors option setting environment variable termdumb nvm l nocolors termdumb nvm l restore path deactivate nvm deactivate set default node version used new shell use alias default nvm alias default node use mirror node binary set nvmnodejsorgmirror export nvmnodejsorgmirrorhttpsnodejsorgdist nvm install node nvmnodejsorgmirrorhttpsnodejsorgdist nvm install use mirror iojs binary set nvmiojsorgmirror export nvmiojsorgmirrorhttpsiojsorgdist nvm install iojsv nvmiojsorgmirrorhttpsiojsorgdist nvm install iojsv nvm use default create current symlink set nvmsymlinkcurrent true enable behavior sometimes useful ides note using nvm multiple shell tab environment variable enabled cause race condition nvmrc create nvmrc file containing node version number string nvm understands see nvm help detail project root directory parent directory afterwards nvm use nvm install nvm exec nvm run nvm use version specified nvmrc file version supplied command line example make nvm default latest release latest lts version latest node version current directory echo nvmrc echo lts nvmrc default latest lts version echo node nvmrc default latest version run nvm nvm use found pathtoprojectnvmrc version using node v npm v nvm use et al traverse directory structure upwards current directory looking nvmrc file word running nvm use et al subdirectory directory nvmrc result nvmrc utilized content nvmrc file must version described nvm help followed newline trailing space allowed trailing newline required deeper shell integration use avn deeply integrate shell automatically invoke nvm changing directory avn supported nvm development team please report issue avn team prefer lighterweight solution recipe contributed nvm user supported nvm development team however accepting pull request example bash automatically call nvm use put following end homebashrc findup pathpwd path e path pathpath done echo path cdnvm cd nvmpathfindup nvmrc tr space nvmrc file use default nvm version nvmpath space declare defaultversion defaultversionnvm version default default version set node use latest version machine defaultversion na nvm alias default node defaultversionnvm version default fi current version default version set use default version nvm current defaultversion nvm use default fi elif nvmpathnvmrc r nvmpathnvmrc declare nvmversion nvmversionnvmpathnvmrc declare locallyresolvednvmversion nvm l check locallyavailable version multiple matching version take latest one remove character space locallyresolvednvmversion na local version found locallyresolvednvmversionnvm l nocolors nvmversion tail tr tr space already installed install nvm install implicitly use newlyinstalled version locallyresolvednvmversion na nvm install nvmversion elif nvm current locallyresolvednvmversion nvm use nvmversion fi fi alias cdcdnvm alias would search current directory order detect nvmrc file find switch version use default version zsh calling nvm use automatically directory nvmrc file put homezshrc call nvm use automatically whenever enter directory contains nvmrc file string telling nvm node use place nvm initialization autoload u addzshhook loadnvmrc local nodeversionnvm version local nvmrcpathnvmfindnvmrc n nvmrcpath local nvmrcnodeversionnvm version cat nvmrcpath nvmrcnodeversion na nvm install elif nvmrcnodeversion nodeversion nvm use fi elif nodeversion nvm version default echo reverting nvm default version nvm use default fi addzshhook chpwd loadnvmrc loadnvmrc license nvm released mit license copyright c tim caswell jordan harband permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software running test test written urchin install urchin dependency like npm install slow test fast test slow test thing like install node check right version used fast test fake test thing like alias uninstalling root nvm git repository run fast test like npm run testfast run slow test like npm run testslow run test like npm test nota bene avoid running nvm test running bash completion activate need source bashcompletion r nvmdirbashcompletion nvmdirbashcompletion put sourcing line sourcing line nvm profile bashrc bashprofile usage nvm nvm tab alias deactivate install l run unload clearcache exec list lsremote unalias use current help listremote reinstallpackages uninstall version nvm alias nvm alias tab default nvm alias myalias tab v v v nvm use nvm use tab myalias default v v v nvm uninstall nvm uninstall tab myalias default v v v compatibility issue nvm encounter issue nondefault setting set see following known cause issue inside npmrc prefixsomepath environment variable npmconfigprefix prefix shell setting set e installing nvm alpine linux order provide best performance optimisation nvm download install precompiled binary node npm run nvm install x node project compiles test hostsprovides precompiled binary built mainstreamtraditional linux distribution debian ubuntu centos redhat et al alpine linux unlike mainstreamtraditional linux distribution based busybox compact mb linux distribution busybox thus alpine linux us different cc stack mainstreamtraditional linux distribution musl make binary program built mainstreamtraditional incompatible alpine linux thus cannot simply nvm install x alpine linux expect downloaded binary run correctly youll likely see exist error try flag nvm install request nvm download node source compile locally installing nvm alpine linux still want need able achieve running following alpine linux shell apk add u curl bash cacertificates openssl ncurses coreutils python make gcc g libgcc linuxheaders grep utillinux binutils findutils curl httpsrawgithubusercontentcomnvmshnvmvinstallsh bash node project desire concrete plan due overhead building testing support offer alpinecompatible binary potential alternative mhart node contributor docker image alpine linux node optionally npm preinstalled removal manual uninstall remove nvm manually execute following rm rf nvmdir edit bashrc shell resource config remove line export nvmdirhomenvm nvmdirnvmsh nvmdirnvmsh load nvm r nvmdirbashcompletion nvmdirbashcompletion docker development environment make development testing work easier dockerfile development usage based ubuntu base image prepared essential useful tool nvm development build docker image environment run docker command root nvm repository docker build nvmdev package current nvm repository predefined development environment docker image named nvmdev built success validate image via docker image docker image repository tag image id created size nvmdev latest cacad day ago mb got error message easily involve docker run h nvmdev nvmdev nvmnvmdevnvm please note itll take minute build image image size would mb suitable production usage information documentation docker please refer official website httpswwwdockercom httpsdocsdockercom problem try install node version installation fails sure run nvm cache clear delete cached node downloads might get error like following curl http server doesnt seem support byte range cannot resume wheres sudo node check v release node nvm try install binary package system official binary package dont work due incompatibility shared libs case use option force install source nvm install setting default alias establish node version new shell ie nvm current yield system ensure system node path set nvmsh source line shell profile see mac o troubleshooting nvm node version found vim shell set node version version system node version nvm use open vim run node v see v see system version v need run sudo chmod ugox usrlibexecpathhelper issue dotphilesdotzsh
62,Shell,GitHub - open-guides/og-aws: üìô Amazon Web Services ‚Äî a practical guide,"
The Open Guide to Amazon Web Services
 ‚á¶ Join us!
Credits ‚àô Contributing guidelines
Table of Contents
Purpose

Why an Open Guide?
Scope
Legend

AWS in General

General Information
Learning and Career Development
Managing AWS
Managing Servers and Applications




Specific AWS Services
Basics
Tips
Gotchas




ALB
üìó
üìò
üìô


AMIs
üìó
üìò
üìô


API Gateway
üìó
üìò
üìô


Auto Scaling
üìó
üìò
üìô


Batch
üìó
üìò



Certificate Manager
üìó
üìò
üìô


CLB (ELB)
üìó
üìò
üìô


CloudFront
üìó
üìò
üìô


CloudFormation
üìó
üìò
üìô


CloudWatch
üìó
üìò
üìô


Device Farm
üìó
üìò
üìô


DirectConnect
üìó
üìò



DynamoDB
üìó
üìò
üìô


EBS
üìó
üìò
üìô


EC2
üìó
üìò
üìô


ECS
üìó
üìò



EKS
üìó
üìò
üìô


EFS
üìó
üìò
üìô


Elastic Beanstalk
üìó
üìò
üìô


Elastic IPs
üìó
üìò
üìô


ElastiCache
üìó
üìò
üìô


EMR
üìó
üìò
üìô


Fargate
üìó
üìò
üìô


Glacier
üìó
üìò
üìô


IoT
üìó
üìò
üìô


Kinesis Firehose


üìô


Kinesis Streams
üìó
üìò
üìô


KMS
üìó
üìò
üìô


Lambda
üìó
üìò
üìô


Load Balancers
üìó
üìò
üìô


Mobile Hub
üìó
üìò
üìô


OpsWorks
üìó
üìò
üìô


RDS
üìó
üìò
üìô


RDS Aurora
üìó
üìò
üìô


RDS Aurora MySQL
üìó
üìò
üìô


RDS Aurora PostgreSQL
üìó
üìò
üìô


RDS MySQL and MariaDB
üìó
üìò
üìô


RDS PostgreSQL
üìó
üìò
üìô


RDS SQL Server
üìó
üìò
üìô


Redshift
üìó
üìò
üìô


Route 53
üìó
üìò
üìô


S3
üìó
üìò
üìô


Security and IAM
üìó
üìò
üìô


SES
üìó
üìò
üìô


SNS
üìó
üìò
üìô


SQS
üìó
üìò
üìô


Step Functions
üìó
üìò
üìô


WAF
üìó
üìò
üìô


VPCs, Network Security, and Security Groups
üìó
üìò
üìô



Special Topics

High Availability
Billing and Cost Management
Further Reading

Legal

Disclaimer
License

Figures and Tables
 

Figure: Tools and Services Market Landscape: A selection of third-party companies/products
Figure: AWS Data Transfer Costs: Visual overview of data transfer costs
Table: Service Matrix: How AWS services compare to alternatives
Table: AWS Product Maturity and Releases: AWS product releases
Table: Storage Durability, Availability, and Price: A quantitative comparison

Why an Open Guide?
A lot of information on AWS is already written. Most people learn AWS by reading a blog or a ‚Äúgetting started guide‚Äù and referring to the standard AWS references. Nonetheless, trustworthy and practical information and recommendations aren‚Äôt easy to come by. AWS‚Äôs own documentation is a great but sprawling resource few have time to read fully, and it doesn‚Äôt include anything but official facts, so omits experiences of engineers. The information in blogs or Stack Overflow is also not consistently up to date.
This guide is by and for engineers who use AWS. It aims to be a useful, living reference that consolidates links, tips, gotchas, and best practices. It arose from discussion and editing over beers by several engineers who have used AWS extensively.
Before using the guide, please read the license and disclaimer.
Please help!
This is an early in-progress draft! It‚Äôs our first attempt at assembling this information, so is far from comprehensive still, and likely to have omissions or errors.

Please help by joining the Slack channel (we like to talk about AWS in general, even if you only have questions ‚Äî discussion helps the community and guides improvements) and contributing to the guide. This guide is open to contributions, so unlike a blog, it can keep improving. Like any open source effort, we combine efforts but also review to ensure high quality.
Scope

Currently, this guide covers selected ‚Äúcore‚Äù services, such as EC2, S3, Load Balancers, EBS, and IAM, and partial details and tips around other services. We expect it to expand.
It is not a tutorial, but rather a collection of information you can read and return to. It is for both beginners and the experienced.
The goal of this guide is to be:

Brief: Keep it dense and use links
Practical: Basic facts, concrete details, advice, gotchas, and other ‚Äúfolk knowledge‚Äù
Current: We can keep updating it, and anyone can contribute improvements
Thoughtful: The goal is to be helpful rather than present dry facts. Thoughtful opinion with rationale is welcome. Suggestions, notes, and opinions based on real experience can be extremely valuable. (We believe this is both possible with a guide of this format, unlike in some other venues.)


This guide is not sponsored by AWS or AWS-affiliated vendors. It is written by and for engineers who use AWS.

Legend

üìí Marks standard/official AWS pages and docs
üîπ Important or often overlooked tip
‚ùó ‚ÄúSerious‚Äù gotcha (used where risks or time or resource costs are significant: critical security risks, mistakes with significant financial cost, or poor architectural choices that are fundamentally difficult to correct)
üî∏ ‚ÄúRegular‚Äù gotcha, limitation, or quirk (used where consequences are things not working, breaking, or not scaling gracefully)
üìú Undocumented feature (folklore)
üê• Relatively new (and perhaps immature) services or features
‚è± Performance discussions
‚õì Lock-in: Products or decisions that are likely to tie you to AWS in a new or significant way ‚Äî that is, later moving to a non-AWS alternative would be costly in terms of engineering effort
üö™ Alternative non-AWS options
üí∏ Cost issues, discussion, and gotchas
üïç A mild warning attached to ‚Äúfull solution‚Äù or opinionated frameworks that may take significant time to understand and/or might not fit your needs exactly; the opposite of a point solution (the cathedral is a nod to Raymond‚Äôs metaphor)
üìóüìòüìô Colors indicate basics, tips, and gotchas, respectively.
üöß Areas where correction or improvement are needed (possibly with link to an issue ‚Äî do help!)

General Information
When to Use AWS

AWS is the dominant public cloud computing provider.

In general, ‚Äúcloud computing‚Äù can refer to one of three types of cloud: ‚Äúpublic,‚Äù ‚Äúprivate,‚Äù and ‚Äúhybrid.‚Äù AWS is a public cloud provider, since anyone can use it. Private clouds are within a single (usually large) organization. Many companies use a hybrid of private and public clouds.
The core features of AWS are infrastructure-as-a-service (IaaS) ‚Äî that is, virtual machines and supporting infrastructure. Other cloud service models include platform-as-a-service (PaaS), which typically are more fully managed services that deploy customers‚Äô applications, or software-as-a-service (SaaS), which are cloud-based applications. AWS does offer a few products that fit into these other models, too.
In business terms, with infrastructure-as-a-service you have a variable cost model ‚Äî it is OpEx, not CapEx (though some pre-purchased contracts are still CapEx).


AWS‚Äôs TTM revenue was $32.5 billion as of Q3 2019 according to their earnings results (slide 14 in the linked deck), or roughly 12% of Amazon.com‚Äôs total revenue (slide 8 in the same deck) for the same TTM period.
Main reasons to use AWS:

If your company is building systems or products that may need to scale
and you have technical know-how
and you want the most flexible tools
and you‚Äôre not significantly tied into different infrastructure already
and you don‚Äôt have internal, regulatory, or compliance reasons you can‚Äôt use a public cloud-based solution
and you‚Äôre not on a Microsoft-first tech stack
and you don‚Äôt have a specific reason to use Google Cloud
and you can afford, manage, or negotiate its somewhat higher costs
... then AWS is likely a good option for your company.


Each of those reasons above might point to situations where other services are preferable. In practice, many, if not most, tech startups as well as a number of modern large companies can or already do benefit from using AWS. Many large enterprises are partly migrating internal infrastructure to Azure, Google Cloud, and AWS.
Costs: Billing and cost management are such big topics that we have an entire section on this.
üîπEC2 vs. other services: Most users of AWS are most familiar with EC2, AWS‚Äô flagship virtual server product, and possibly a few others like S3 and CLBs. But AWS products now extend far beyond basic IaaS, and often companies do not properly understand or appreciate all the many AWS services and how they can be applied, due to the sharply growing number of services, their novelty and complexity, branding confusion, and fear of ‚õìlock-in to proprietary AWS technology. Although a bit daunting, it‚Äôs important for technical decision-makers in companies to understand the breadth of the AWS services and make informed decisions. (We hope this guide will help.)
üö™AWS vs. other cloud providers: While AWS is the dominant IaaS provider (31% market share in this 2016 estimate), there is significant competition and alternatives that are better suited to some companies. This Gartner report has a good overview of the major cloud players :

Google Cloud Platform. GCP arrived later to market than AWS, but has vast resources and is now used widely by many companies, including a few large ones. It is gaining market share. Not all AWS services have similar or analogous services in GCP. And vice versa: In particular, GCP offers some more advanced machine learning-based services like the Vision, Speech, and Natural Language APIs. It‚Äôs not common to switch once you‚Äôre up and running, but it does happen: Spotify migrated from AWS to Google Cloud. There is more discussion on Quora about relative benefits. Of particular note is that VPCs in GCP are global by default with subnetworks per region, while AWS‚Äô VPCs have to live within a particular region. This gives GCP an edge if you‚Äôre designing applications with geo-replication from the beginning. It‚Äôs also possible to share one GCP VPC between multiple projects (roughly analogous to AWS accounts), while in AWS you‚Äôd have to peer them. It‚Äôs also possible to peer GCP VPCs in a similar manner to how it‚Äôs done in AWS.
Microsoft Azure is the de facto choice for companies and teams that are focused on a Microsoft stack, and it has now placed significant emphasis on Linux as well
In China, AWS‚Äô footprint is relatively small. The market is dominated by Alibaba‚Äôs Alibaba Cloud, formerly called Aliyun.
Companies at (very) large scale may want to reduce costs by managing their own infrastructure. For example, Dropbox migrated to their own infrastructure.
Other cloud providers such as Digital Ocean offer similar services, sometimes with greater ease of use, more personalized support, or lower cost. However, none of these match the breadth of products, mind-share, and market domination AWS now enjoys.
Traditional managed hosting providers such as Rackspace offer cloud solutions as well.


üö™AWS vs. PaaS: If your goal is just to put up a single service that does something relatively simple, and you‚Äôre trying to minimize time managing operations engineering, consider a platform-as-a-service such as Heroku. The AWS approach to PaaS, Elastic Beanstalk, is arguably more complex, especially for simple use cases.
üö™AWS vs. web hosting: If your main goal is to host a website or blog, and you don‚Äôt expect to be building an app or more complex service, you may wish consider one of the myriad web hosting services.
üö™AWS vs. managed hosting: Traditionally, many companies pay managed hosting providers to maintain physical servers for them, then build and deploy their software on top of the rented hardware. This makes sense for businesses who want direct control over hardware, due to legacy, performance, or special compliance constraints, but is usually considered old fashioned or unnecessary by many developer-centric startups and younger tech companies.
Complexity: AWS will let you build and scale systems to the size of the largest companies, but the complexity of the services when used at scale requires significant depth of knowledge and experience. Even very simple use cases often require more knowledge to do ‚Äúright‚Äù in AWS than in a simpler environment like Heroku or Digital Ocean. (This guide may help!)
Geographic locations: AWS has data centers in over a dozen geographic locations, known as regions, in Europe, East Asia, North and South America, and now Australia and India. It also has many more edge locations globally for reduced latency of services like CloudFront.

See the current list of regions and edge locations, including upcoming ones.
If your infrastructure needs to be in close physical proximity to another service for latency or throughput reasons (for example, latency to an ad exchange), viability of AWS may depend on the location.


‚õìLock-in: As you use AWS, it‚Äôs important to be aware when you are depending on AWS services that do not have equivalents elsewhere.

Lock-in may be completely fine for your company, or a significant risk. It‚Äôs important from a business perspective to make this choice explicitly, and consider the cost, operational, business continuity, and competitive risks of being tied to AWS. AWS is such a dominant and reliable vendor, many companies are comfortable with using AWS to its full extent. Others can tell stories about the dangers of ‚Äúcloud jail‚Äù when costs spiral.
Generally, the more AWS services you use, the more lock-in you have to AWS ‚Äî that is, the more engineering resources (time and money) it will take to change to other providers in the future.
Basic services like virtual servers and standard databases are usually easy to migrate to other providers or on premises. Others like load balancers and IAM are specific to AWS but have close equivalents from other providers. The key thing to consider is whether engineers are architecting systems around specific AWS services that are not open source or relatively interchangeable. For example, Lambda, API Gateway, Kinesis, Redshift, and DynamoDB do not have substantially equivalent open source or commercial service equivalents, while EC2, RDS (MySQL or Postgres), EMR, and ElastiCache more or less do. (See more below, where these are noted with ‚õì.)


Combining AWS and other cloud providers: Many customers combine AWS with other non-AWS services. For example, legacy systems or secure data might be in a managed hosting provider, while other systems are AWS. Or a company might only use S3 with another provider doing everything else. However small startups or projects starting fresh will typically stick to AWS or Google Cloud only.
Hybrid cloud: In larger enterprises, it is common to have hybrid deployments encompassing private cloud or on-premises servers and AWS ‚Äî or other enterprise cloud providers like IBM/Bluemix, Microsoft/Azure, NetApp, or EMC.
Major customers: Who uses AWS and Google Cloud?

AWS‚Äôs list of customers includes large numbers of mainstream online properties and major brands, such as Netflix, Pinterest, Spotify (moving to Google Cloud), Airbnb, Expedia, Yelp, Zynga, Comcast, Nokia, and Bristol-Myers Squibb.
Azure‚Äôs list of customers includes companies such as NBC Universal, 3M and Honeywell Inc.
Google Cloud‚Äôs list of customers is large as well, and includes a few mainstream sites, such as Snapchat, Best Buy, Domino‚Äôs, and Sony Music.



Which Services to Use

AWS offers a lot of different services ‚Äî about a hundred at last count.
Most customers use a few services heavily, a few services lightly, and the rest not at all. What services you‚Äôll use depends on your use cases. Choices differ substantially from company to company.
Immature and unpopular services: Just because AWS has a service that sounds promising, it doesn‚Äôt mean you should use it. Some services are very narrow in use case, not mature, are overly opinionated, or have limitations, so building your own solution may be better. We try to give a sense for this by breaking products into categories.
Must-know infrastructure: Most typical small to medium-size users will focus on the following services first. If you manage use of AWS systems, you likely need to know at least a little about all of these. (Even if you don‚Äôt use them, you should learn enough to make that choice intelligently.)

IAM: User accounts and identities (you need to think about accounts early on!)
EC2: Virtual servers and associated components, including:

AMIs: Machine Images
Load Balancers: CLBs and ALBs
Autoscaling: Capacity scaling (adding and removing servers based on load)
EBS: Network-attached disks
Elastic IPs: Assigned IP addresses


S3: Storage of files
Route 53: DNS and domain registration
VPC: Virtual networking, network security, and co-location; you automatically use
CloudFront: CDN for hosting content
CloudWatch: Alerts, paging, monitoring


Managed services: Existing software solutions you could run on your own, but with managed deployment:

RDS: Managed relational databases (managed MySQL, Postgres, and Amazon‚Äôs own Aurora database)
EMR: Managed Hadoop
Elasticsearch: Managed Elasticsearch
ElastiCache: Managed Redis and Memcached


Optional but important infrastructure: These are key and useful infrastructure components that are less widely known and used. You may have legitimate reasons to prefer alternatives, so evaluate with care to be sure they fit your needs:

‚õìLambda: Running small, fully managed tasks ‚Äúserverless‚Äù
CloudTrail: AWS API logging and audit (often neglected but important)
‚õìüïçCloudFormation: Templatized configuration of collections of AWS resources
üïçElastic Beanstalk: Fully managed (PaaS) deployment of packaged Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker applications
üê•EFS: Network filesystem compatible with NFSv4.1
‚õìüïçECS: Docker container/cluster management (note Docker can also be used directly, without ECS)
üïç EKS: Kubernetes (K8) Docker Container/Cluster management
‚õìECR: Hosted private Docker registry
üê•Config: AWS configuration inventory, history, change notifications
üê•X-Ray: Trace analysis and debugging for distributed applications such as microservices.


Special-purpose infrastructure: These services are focused on specific use cases and should be evaluated if they apply to your situation. Many also are proprietary architectures, so tend to tie you to AWS.

‚õìDynamoDB: Low-latency NoSQL key-value store
‚õìGlacier: Slow and cheap alternative to S3
‚õìKinesis: Streaming (distributed log) service
‚õìSQS: Message queueing service
‚õìRedshift: Data warehouse
üê•QuickSight: Business intelligence service
SES: Send and receive e-mail for marketing or transactions
‚õìAPI Gateway: Proxy, manage, and secure API calls
‚õìIoT: Manage bidirectional communication over HTTP, WebSockets, and MQTT between AWS and clients (often but not necessarily ‚Äúthings‚Äù like appliances or sensors)
‚õìWAF: Web firewall for CloudFront to deflect attacks
‚õìKMS: Store and manage encryption keys securely
Inspector: Security audit
Trusted Advisor: Automated tips on reducing cost or making improvements
üê•Certificate Manager: Manage SSL/TLS certificates for AWS services
üê•‚õìFargate: Docker containers management, backend for ECS and EKS


Compound services: These are similarly specific, but are full-blown services that tackle complex problems and may tie you in. Usefulness depends on your requirements. If you have large or significant need, you may have these already managed by in-house systems and engineering teams.

Machine Learning: Machine learning model training and classification
Lex: Automatic speech recognition (ASR) and natural language understanding (NLU)
Polly: Text-to-speech engine in the cloud
Rekognition: Service for image recognition
‚õìüïçData Pipeline: Managed ETL service
‚õìüïçSWF: Managed state tracker for distributed polyglot job workflow
‚õìüïçLumberyard: 3D game engine


Mobile/app development:

SNS: Manage app push notifications and other end-user notifications
‚õìüïçCognito: User authentication via Facebook, Twitter, etc.
Device Farm: Cloud-based device testing
Mobile Analytics: Analytics solution for app usage
üïçMobile Hub: Comprehensive, managed mobile app framework


Enterprise services: These are relevant if you have significant corporate cloud-based or hybrid needs. Many smaller companies and startups use other solutions, like Google Apps or Box. Larger companies may also have their own non-AWS IT solutions.

AppStream: Windows apps in the cloud, with access from many devices
Workspaces: Windows desktop in the cloud, with access from many devices
WorkDocs (formerly Zocalo): Enterprise document sharing
WorkMail: Enterprise managed e-mail and calendaring service
Directory Service: Microsoft Active Directory in the cloud
Direct Connect: Dedicated network connection between office or data center and AWS
Storage Gateway: Bridge between on-premises IT and cloud storage
Service Catalog: IT service approval and compliance


Probably-don't-need-to-know services: Bottom line, our informal polling indicates these services are just not broadly used ‚Äî and often for good reasons:

Snowball: If you want to ship petabytes of data into or out of Amazon using a physical appliance, read on.
Snowmobile: Appliances are great, but if you've got exabyte scale data to get into Amazon, nothing beats a tractor trailer full of drives.
CodeCommit: Git service. You‚Äôre probably already using GitHub or your own solution (Stackshare has informal stats).
üïçCodePipeline: Continuous integration. You likely have another solution already.
üïçCodeDeploy: Deployment of code to EC2 servers. Again, you likely have another solution.
üïçOpsWorks: Management of your deployments using Chef or (as of November 2017) Puppet Enterprise.


AWS in Plain English offers more friendly explanation of what all the other different services are.

Tools and Services Market Landscape
There are now enough cloud and ‚Äúbig data‚Äù enterprise companies and products that few can keep up with the market landscape.
We‚Äôve assembled a landscape of a few of the services. This is far from complete, but tries to emphasize services that are popular with AWS practitioners ‚Äî services that specifically help with AWS, or a complementary, or tools almost anyone using AWS must learn.

üöß Suggestions to improve this figure? Please file an issue.
Common Concepts

üìí The AWS General Reference covers a bunch of common concepts that are relevant for multiple services.
AWS allows deployments in regions, which are isolated geographic locations that help you reduce latency or offer additional redundancy. Regions contain availability zones(AZs), which are typically the first tool of choice for high availability). AZs are physically separate from one another even within the same region, and may span multiple physical data centers. While they are connected via low latency links, natural disasters afflicting one should not affect others.
Each service has API endpoints for each region. Endpoints differ from service to service and not all services are available in each region, as listed in these tables.
Amazon Resource Names (ARNs) are specially formatted identifiers for identifying resources. They start with 'arn:' and are used in many services, and in particular for IAM policies.

Service Matrix
Many services within AWS can at least be compared with Google Cloud offerings or with internal Google services. And often times you could assemble the same thing yourself with open source software. This table is an effort at listing these rough correspondences. (Remember that this table is imperfect as in almost every case there are subtle differences of features!)



Service
AWS
Google Cloud
Google Internal
Microsoft Azure
Other providers
Open source ‚Äúbuild your own‚Äù
Openstack




Virtual server
EC2
Compute Engine (GCE)

Virtual Machine
DigitalOcean
OpenStack
Nova


PaaS
Elastic Beanstalk
App Engine
App Engine
Web Apps
Heroku, AppFog, OpenShift
Meteor, AppScale, Cloud Foundry, Convox



Serverless, microservices
Lambda, API Gateway
Functions

Function Apps
PubNub Blocks, Auth0 Webtask
Kong, Tyk
Qinling


Container, cluster manager
ECS, EKS, Fargate
Container Engine, Kubernetes
Borg or Omega
Container Service

Kubernetes, Mesos, Aurora
Zun


Object storage
S3
Cloud Storage
GFS
Storage Account
DigitalOcean Spaces
Swift, HDFS, Minio
Swift


Block storage
EBS
Persistent Disk

Storage Account
DigitalOcean Volumes
NFS
Cinder


SQL datastore
RDS
Cloud SQL

SQL Database

MySQL, PostgreSQL
Trove (stores NoSQL as well)


Sharded RDBMS

Cloud Spanner
F1, Spanner
Azure Database for PostgreSQL - Hyperscale (Citus)

Crate.io, CockroachDB



Bigtable

Cloud Bigtable
Bigtable


HBase



Key-value store, column store
DynamoDB
Cloud Datastore
Megastore
Tables, DocumentDB

Cassandra, CouchDB, RethinkDB, Redis



Memory cache
ElastiCache
App Engine Memcache

Redis Cache

Memcached, Redis



Search
CloudSearch, Elasticsearch (managed)


Search
Algolia, QBox, Elastic Cloud
Elasticsearch, Solr



Data warehouse
Redshift
BigQuery
Dremel
SQL Data Warehouse
Oracle, IBM, SAP, HP, many others
Greenplum



Business intelligence
QuickSight
Data Studio 360

Power BI
Tableau




Lock manager
DynamoDB (weak)

Chubby
Lease blobs in Storage Account

ZooKeeper, Etcd, Consul



Message broker
SQS, SNS, IoT
Pub/Sub
PubSub2
Service Bus

RabbitMQ, Kafka, 0MQ



Streaming, distributed log
Kinesis
Dataflow
PubSub2
Event Hubs

Kafka Streams, Apex, Flink, Spark Streaming, Storm



MapReduce
EMR
Dataproc
MapReduce
HDInsight, DataLake Analytics
Qubole
Hadoop



Monitoring
CloudWatch
Stackdriver Monitoring
Borgmon
Monitor

Prometheus(?)



Tracing
X-Ray
Stackdriver Trace

Monitor (Application Insights)
DataDog, New Relic, Epsagon
Zipkin, Jaeger, Appdash



Metric management


Borgmon, TSDB
Application Insights

Graphite, InfluxDB, OpenTSDB, Grafana, Riemann, Prometheus



CDN
CloudFront
Cloud CDN

CDN
Akamai, Fastly, Cloudflare, Limelight Networks
Apache Traffic Server



Load balancer
CLB/ALB
Load Balancing
GFE
Load Balancer, Application Gateway

nginx, HAProxy, Apache Traffic Server



DNS
Route53
DNS

DNS

bind



Email
SES



Sendgrid, Mandrill, Postmark




Git hosting
CodeCommit
Cloud Source Repositories

Visual Studio Team Services
GitHub, BitBucket
GitLab



User authentication
Cognito
Firebase Authentication

Azure Active Directory

oauth.io



Mobile app analytics
Mobile Analytics
Firebase Analytics

HockeyApp
Mixpanel




Mobile app testing
Device Farm
Firebase Test Lab

Xamarin Test Cloud
BrowserStack, Sauce Labs, Testdroid




Managing SSL/TLS certificates
Certificate Manager



Let's Encrypt, Comodo, Symantec, GlobalSign




Automatic speech recognition and natural language understanding
Transcribe (ASR), Lex (NLU)
Cloud Speech API, Natural Language API

Cognitive services
AYLIEN Text Analysis API, Ambiverse Natural Language Understanding API
Stanford's Core NLP Suite, Apache OpenNLP, Apache UIMA, spaCy



Text-to-speech engine in the cloud
Polly



Nuance, Vocalware, IBM
Mimic, eSpeak, MaryTTS



Image recognition
Rekognition
Vision API

Cognitive services
IBM Watson, Clarifai
TensorFlow, OpenCV



OCR (Text recognition)
Textract (documents), Rekognition (photographs)
Cloud Vision API

Computer Vision API

Tesseract



Language Translation
Translate
Translate

Translator Text API

Apertium



File Share and Sync
WorkDocs
Google Docs

OneDrive
Dropbox, Box, Citrix File Share
ownCloud



Machine Learning
SageMaker, DeepLens, ML
ML Engine, Auto ML

ML Studio
Watson ML




Data Loss Prevention
Macie
Cloud Data Loss Prevention

Azure Information Protection






üöß Please help fill this table in.
Selected resources with more detail on this chart:

Google internal: MapReduce, Bigtable, Spanner, F1 vs Spanner, Bigtable vs Megastore

AWS Product Maturity and Releases
It‚Äôs important to know the maturity of each AWS product. Here is a mostly complete list of first release date, with links to the release notes. Most recently released services are first. Not all services are available in all regions; see this table.



Service
Original release
Availability
CLI Support
HIPAA Compliant
PCI-DSS Compliant




üê•X-Ray
2016-12
General
‚úì
‚úì
‚úì


üê•Lex
2016-11
Preview





üê•Polly
2016-11
General
‚úì
‚úì
‚úì


üê•Rekognition
2016-11
General
‚úì
‚úì
‚úì


üê•Athena
2016-11
General
‚úì
‚úì
‚úì


üê•Batch
2016-11
General
‚úì
‚úì
‚úì


üê•Database Migration Service
2016-03
General

‚úì
‚úì


üê•Certificate Manager
2016-01
General
‚úì
‚úì
‚úì


üê•IoT
2015-08
General
‚úì
‚úì
‚úì13


üê•WAF
2015-10
General
‚úì
‚úì
‚úì


üê•Data Pipeline
2015-10
General
‚úì




üê•Elasticsearch
2015-10
General
‚úì
‚úì
‚úì


üê•Aurora
2015-07
General
‚úì
‚úì3
‚úì3


üê•Service Catalog
2015-07
General
‚úì
‚úì
‚úì


üê•Device Farm
2015-07
General
‚úì




üê•CodePipeline
2015-07
General
‚úì
‚úì



üê•CodeCommit
2015-07
General
‚úì
‚úì
‚úì


üê•API Gateway
2015-07
General
‚úì
‚úì1
‚úì


üê•Config
2015-06
General
‚úì
‚úì
‚úì


üê•EFS
2015-05
General
‚úì
‚úì
‚úì


üê•Machine Learning
2015-04
General
‚úì




Lambda
2014-11
General
‚úì
‚úì
‚úì


ECS
2014-11
General
‚úì
‚úì
‚úì


EKS
2018-06
General
‚úì12
‚úì
‚úì


KMS
2014-11
General
‚úì
‚úì
‚úì


CodeDeploy
2014-11
General
‚úì
‚úì



Kinesis
2013-12
General
‚úì
‚úì
‚úì11


CloudTrail
2013-11
General
‚úì
‚úì
‚úì


AppStream
2013-11
Preview

‚úì



CloudHSM
2013-03
General
‚úì
‚úì
‚úì


Silk
2013-03
Obsolete?





OpsWorks
2013-02
General
‚úì
‚úì
‚úì


Redshift
2013-02
General
‚úì
‚úì
‚úì


Elastic Transcoder
2013-01
General
‚úì




Glacier
2012-08
General
‚úì
‚úì
‚úì


CloudSearch
2012-04
General
‚úì




SWF
2012-02
General
‚úì
‚úì
‚úì


Storage Gateway
2012-01
General
‚úì
‚úì
‚úì


DynamoDB
2012-01
General
‚úì
‚úì
‚úì


DirectConnect
2011-08
General
‚úì
‚úì
‚úì


ElastiCache
2011-08
General
‚úì
‚úì14
‚úì14


CloudFormation
2011-04
General
‚úì
‚úì
‚úì


SES
2011-01
General
‚úì
‚úì



Elastic Beanstalk
2010-12
General
‚úì
‚úì
‚úì


Route 53
2010-10
General
‚úì
‚úì
‚úì


IAM
2010-09
General
‚úì

‚úì


SNS
2010-04
General
‚úì
‚úì
‚úì


EMR
2010-04
General
‚úì
‚úì
‚úì


RDS
2009-12
General
‚úì
‚úì2
‚úì9


VPC
2009-08
General
‚úì
‚úì
‚úì


Snowball
2015-10
General
‚úì
‚úì
‚úì15


Snowmobile
2016-11
General

‚úì
‚úì


CloudWatch
2009-05
General
‚úì
‚úì
‚úì


CloudFront
2008-11
General
‚úì
‚úì4
‚úì


Fulfillment Web Service
2008-03
Obsolete?





SimpleDB
2007-12
‚ùóNearly obsolete
‚úì

‚úì


DevPay
2007-12
General





Flexible Payments Service
2007-08
Retired





EC2
2006-08
General
‚úì
‚úì5,6,7
‚úì6,7,10


SQS
2006-07
General
‚úì
‚úì
‚úì


S3
2006-03
General
‚úì
‚úì8
‚úì


Alexa Top Sites
2006-01
General ‚ùóHTTP-only





Alexa Web Information Service
2005-10
General ‚ùóHTTP-only






Footnotes
1: Excludes use of Amazon API Gateway caching
2: RDS MySQL, Oracle, and PostgreSQL engines only
3: MySQL-compatible Aurora edition only
4: Excludes Lambda@Edge
5: Includes EC2 Systems Manager
6: Includes Elastic Block Storage (EBS)
7: Includes Elastic Load Balancing
8: Includes S3 Transfer Acceleration
9: Includes RDS MySQL, Oracle, PostgreSQL, SQL Server, and MariaDB
10: Includes Auto-Scaling
11: Data Analytics, Streams, Video Streams and Firehose
12: Kubernetes uses a custom CLI for Pod/Service management called kubectl. AWS CLI only handles Kubernetes Master concerns
13: IoT Core (includes Device Management) and Greengrass
14: ElastiCache for Redis only
15: Snowball and Snowball Edge
Compliance

Many applications have strict requirements around reliability, security, or data privacy. The AWS Compliance page has details about AWS‚Äôs certifications, which include PCI DSS Level 1, SOC 1,2, and 3, HIPAA, and ISO 9001.
Security in the cloud is a complex topic, based on a shared responsibility model, where some elements of compliance are provided by AWS, and some are provided by your company.
Several third-party vendors offer assistance with compliance, security, and auditing on AWS. If you have substantial needs in these areas, assistance is a good idea.
From inside China, AWS services outside China are generally accessible, though there are at times breakages in service. There are also AWS services inside China.

Getting Help and Support

Forums: For many problems, it‚Äôs worth searching or asking for help in the discussion forums to see if it‚Äôs a known issue.
Premium support: AWS offers several levels of premium support.

The first tier, called ""Developer support"" lets you file support tickets with 12 to 24 hour turnaround time, it starts at $29 but once your monthly spend reaches around $1000 it changes to a 3% surcharge on your bill.
The higher-level support services are quite expensive ‚Äî and increase your bill by up to 10%. Many large and effective companies never pay for this level of support. They are usually more helpful for midsize or larger companies needing rapid turnaround on deeper or more perplexing problems.
Keep in mind, a flexible architecture can reduce need for support. You shouldn‚Äôt be relying on AWS to solve your problems often. For example, if you can easily re-provision a new server, it may not be urgent to solve a rare kernel-level issue unique to one EC2 instance. If your EBS volumes have recent snapshots, you may be able to restore a volume before support can rectify the issue with the old volume. If your services have an issue in one availability zone, you should in any case be able to rely on a redundant zone or migrate services to another zone.
Larger customers also get access to AWS Enterprise support, with dedicated technical account managers (TAMs) and shorter response time SLAs.
There is definitely some controversy about how useful the paid support is. The support staff don‚Äôt always seem to have the information and authority to solve the problems that are brought to their attention. Often your ability to have a problem solved may depend on your relationship with your account rep.


Account manager: If you are at significant levels of spend (thousands of US dollars plus per month), you may be assigned (or may wish to ask for) a dedicated account manager.

These are a great resource, even if you‚Äôre not paying for premium support. Build a good relationship with them and make use of them, for questions, problems, and guidance.
Assign a single point of contact on your company‚Äôs side, to avoid confusing or overwhelming them.


Contact: The main web contact point for AWS is here. Many technical requests can be made via these channels.
Consulting and managed services: For more hands-on assistance, AWS has established relationships with many consulting partners and managed service partners. The big consultants won‚Äôt be cheap, but depending on your needs, may save you costs long term by helping you set up your architecture more effectively, or offering specific expertise, e.g. security. Managed service providers provide longer-term full-service management of cloud resources.
AWS Professional Services: AWS provides consulting services alone or in combination with partners.

Restrictions and Other Notes

üî∏Lots of resources in Amazon have limits on them. This is actually helpful, so you don‚Äôt incur large costs accidentally. You have to request that quotas be increased by opening support tickets. Some limits are easy to raise, and some are not. (Some of these are noted in sections below.) Additionally, not all service limits are published.

Obtaining Current Limits and Usage: Limit information for a service may be available from the service API, Trusted Advisor, both or neither (in which case you'll need to contact Support). This page from the awslimitchecker tool's documentation provides a nice summary of available retrieval options for each limit. The tool itself is also valuable for automating limit checks.


üî∏AWS terms of service are extensive. Much is expected boilerplate, but it does contain important notes and restrictions on each service. In particular, there are restrictions against using many AWS services in safety-critical systems. (Those appreciative of legal humor may wish to review clause 57.10.)

Related Topics

OpenStack is a private cloud alternative to AWS used by large companies that wish to avoid public cloud offerings.

Learning and Career Development
Certifications

Certifications: AWS offers certifications for IT professionals who want to demonstrate their knowledge.
Certified Cloud Practitioner
Certified Solutions Architect Associate
Certified Developer Associate
Certified SysOps Administrator Associate
Certified Solutions Architect Professional
Certified DevOps Engineer Professional
Certified Security ‚Äì Specialty
Certified Big Data ‚Äì Specialty
Certified Advanced Networking ‚Äì Specialty
Certified Machine Learning ‚Äì Specialty
Certified Alexa Skill Builder ‚Äì Specialty

Associate level certifications were once required as pre-requisites to taking the Professional examinations - this is no longer the case.

Getting certified: If you‚Äôre interested in studying for and getting certifications, this practical overview tells you a lot of what you need to know. The official page is here and there is an FAQ.
Training for certifications: Training is offered by AWS themselves (mainly instructor-led and on-site) and various third-party companies (usually as video-based training) such as A Cloud Guru, CloudAcademy and Linux Academy.
Do you need a certification? Especially in consulting companies or when working in key tech roles in large non-tech companies, certifications are important credentials. In others, including in many tech companies and startups, certifications are not common or considered necessary. (In fact, fairly or not, some Silicon Valley hiring managers and engineers see them as a ‚Äúnegative‚Äù signal on a resume.)

Certifications are required to access certificate lounges at official AWS events such as Summits and re:Invent. Lounges typically provide power charging points, seats and relatively better coffee.
Managing AWS
Managing Infrastructure State and Change
A great challenge in using AWS to build complex systems (and with DevOps in general) is to manage infrastructure state effectively over time. In general, this boils down to three broad goals for the state of your infrastructure:

Visibility: Do you know the state of your infrastructure (what services you are using, and exactly how)? Do you also know when you ‚Äî and anyone on your team ‚Äî make changes? Can you detect misconfigurations, problems, and incidents with your service?
Automation: Can you reconfigure your infrastructure to reproduce past configurations or scale up existing ones without a lot of extra manual work, or requiring knowledge that‚Äôs only in someone‚Äôs head? Can you respond to incidents easily or automatically?
Flexibility: Can you improve your configurations and scale up in new ways without significant effort? Can you add more complexity using the same tools? Do you share, review, and improve your configurations within your team?

Much of what we discuss below is really about how to improve the answers to these questions.
There are several approaches to deploying infrastructure with AWS, from the console to complex automation tools, to third-party services, all of which attempt to help achieve visibility, automation, and flexibility.
AWS Configuration Management
The first way most people experiment with AWS is via its web interface, the AWS Console. But using the Console is a highly manual process, and often works against automation or flexibility.
So if you‚Äôre not going to manage your AWS configurations manually, what should you do? Sadly, there are no simple, universal answers ‚Äî each approach has pros and cons, and the approaches taken by different companies vary widely, and include directly using APIs (and building tooling on top yourself), using command-line tools, and using third-party tools and services.
AWS Console

The AWS Console lets you control much (but not all) functionality of AWS via a web interface.
Ideally, you should only use the AWS Console in a few specific situations:

It‚Äôs great for read-only usage. If you‚Äôre trying to understand the state of your system, logging in and browsing it is very helpful.
It is also reasonably workable for very small systems and teams (for example, one engineer setting up one server that doesn‚Äôt change often).
It can be useful for operations you‚Äôre only going to do rarely, like less than once a month (for example, a one-time VPC setup you probably won‚Äôt revisit for a year). In this case using the console can be the simplest approach.


‚ùóThink before you use the console: The AWS Console is convenient, but also the enemy of automation, reproducibility, and team communication. If you‚Äôre likely to be making the same change multiple times, avoid the console. Favor some sort of automation, or at least have a path toward automation, as discussed next. Not only does using the console preclude automation, which wastes time later, but it prevents documentation, clarity, and standardization around processes for yourself and your team.

Command-Line tools

The aws command-line interface (CLI), used via the aws command, is the most basic way to save and automate AWS operations.
Don‚Äôt underestimate its power. It also has the advantage of being well-maintained ‚Äî it covers a large proportion of all AWS services, and is up to date.
In general, whenever you can, prefer the command line to the AWS Console for performing operations.
üîπEven in the absence of fancier tools, you can write simple Bash scripts that invoke aws with specific arguments, and check these into Git. This is a primitive but effective way to document operations you‚Äôve performed. It improves automation, allows code review and sharing on a team, and gives others a starting point for future work.
üîπFor use that is primarily interactive (not scripted), consider instead using the aws-shell tool from AWS. It is easier to use, with auto-completion and a colorful UI, but still works on the command line. If you‚Äôre using SAWS, a previous version of the program, you should migrate to aws-shell.

APIs and SDKs

SDKs for using AWS APIs are available in most major languages, with Go, iOS, Java, JavaScript, Python, Ruby, and PHP being most heavily used. AWS maintains a short list, but the awesome-aws list is the most comprehensive and current. Note support for C++ is still new.
Retry logic: An important aspect to consider whenever using SDKs is error handling; under heavy use, a wide variety of failures, from programming errors to throttling to AWS-related outages or failures, can be expected to occur. SDKs typically implement exponential backoff to address this, but this may need to be understood and adjusted over time for some applications. For example, it is often helpful to alert on some error codes and not on others.
‚ùóDon‚Äôt use APIs directly. Although AWS documentation includes lots of API details, it‚Äôs better to use the SDKs for your preferred language to access APIs. SDKs are more mature, robust, and well-maintained than something you‚Äôd write yourself.

Boto

A good way to automate operations in a custom way is Boto3, also known as the Amazon SDK for Python. Boto2, the previous version of this library, has been in wide use for years, but now there is a newer version with official support from Amazon, so prefer Boto3 for new projects.
Boto3 contains a variety of APIs that operate at either a high level or a low level, here some explanation of both:

The low level APIs (Client APIs) are mapped to AWS Cloud service-specific APIs, and all service operations are supported by clients. Clients are generated from a JSON service definition file.
The high level option, Resource APIs, allows you to avoid calling the network at the low level and instead provide an object-oriented way to interact with AWS Cloud services.


Boto3 has a lot of helpful features like waiters, which provide a structure that allows for code to wait for changes to occur in the cloud, for example, when you are creating an EC2 instance and need wait until the instance is running in order to perform another task.
If you find yourself writing a Bash script with more than one or two CLI commands, you‚Äôre probably doing it wrong. Stop, and consider writing a Boto script instead. This has the advantages that you can:

Check return codes easily so success of each step depends on success of past steps.
Grab interesting bits of data from responses, like instance ids or DNS names.
Add useful environment information (for example, tag your instances with git revisions, or inject the latest build identifier into your initialization script).



General Visibility

üîπTagging resources is an essential practice, especially as organizations grow, to better understand your resource usage. For example, through automation or convention, you can add tags:

For the org or developer that ‚Äúowns‚Äù that resource
For the product that resource supports
To label lifecycles, such as temporary resources or one that should be deprovisioned in the future
To distinguish production-critical infrastructure (e.g. serving systems vs backend pipelines)
To distinguish resources with special security or compliance requirements
To (once enabled) allocate cost. Note that cost allocation tags only apply on a forward-looking basis; you can't retroactively apply them to items already billed.
For many years, there was a notorious 10 tag limit per resource, which could not be raised and caused many companies significant pain. As of 2016, this was raised to 50 tags per resource.
üîπIn 2017, AWS introduced the ability to enforce tagging on instance and volume creation, deprecating portions of third party tools such as Cloud Custodian.
üî∏ Tags are case sensitive; 'environment' and 'Environment' are two different tags. Automation in setting tags is likely the only sensible option at significant scale.
üî∏ There is a bug in the ASG console where spaces after tag names are preserved. So if you type ""Name "" with a space at the end you will not get the expected behavior. This is probably true in other locations and SDKs also. Be sure you do not add trailing spaces to tag keys unless you really mean it. (As of Jul 2018)



Managing Servers and Applications
AWS vs Server Configuration
This guide is about AWS, not DevOps or server configuration management in general. But before getting into AWS in detail, it‚Äôs worth noting that in addition to the configuration management for your AWS resources, there is the long-standing problem of configuration management for servers themselves.
Philosophy

Heroku‚Äôs Twelve-Factor App principles list some established general best practices for deploying applications.
Pets vs cattle: Treat servers like cattle, not pets. That is, design systems so infrastructure is disposable. It should be minimally worrisome if a server is unexpectedly destroyed.
The concept of immutable infrastructure is an extension of this idea.
Minimize application state on EC2 instances. In general, instances should be able to be killed or die unexpectedly with minimal impact. State that is in your application should quickly move to RDS, S3, DynamoDB, EFS, or other data stores not on that instance. EBS is also an option, though it generally should not be the bootable volume, and EBS will require manual or automated re-mounting.

Server Configuration Management

There is a large set of open source tools for managing configuration of server instances.
These are generally not dependent on any particular cloud infrastructure, and work with any variety of Linux (or in many cases, a variety of operating systems).
Leading configuration management tools are Puppet, Chef, Ansible, and Saltstack. These aren‚Äôt the focus of this guide, but we may mention them as they relate to AWS.

Containers and AWS

Docker and the containerization trend are changing the way many servers and services are deployed in general.
Containers are designed as a way to package up your application(s) and all of their dependencies in a known way. When you build a container, you are including every library or binary your application needs, outside of the kernel. A big advantage of this approach is that it‚Äôs easy to test and validate a container locally without worrying about some difference between your computer and the servers you deploy on.
A consequence of this is that you need fewer AMIs and boot scripts; for most deployments, the only boot script you need is a template that fetches an exported docker image and runs it.
Companies that are embracing microservice architectures will often turn to container-based deployments.
AWS launched ECS as a service to manage clusters via Docker in late 2014, though many people still deploy Docker directly themselves. See the ECS section for more details.
AWS launched EKS as a service to manage Kubernetes Clusters mid 2018, though many people still deploy ECS or use Docker directly themselves. See the EKS section for more details.

Visibility

Store and track instance metadata (such as instance id, availability zone, etc.) and deployment info (application build id, Git revision, etc.) in your logs or reports. The instance metadata service can help collect some of the AWS data you‚Äôll need.
Use log management services: Be sure to set up a way to view and manage logs externally from servers.

Cloud-based services such as Sumo Logic, Splunk Cloud, Scalyr, LogDNA, and Loggly are the easiest to set up and use (and also the most expensive, which may be a factor depending on how much log data you have).
Major open source alternatives include Elasticsearch, Logstash, and Kibana (the ‚ÄúElastic Stack‚Äù) and Graylog.
If you can afford it (you have little data or lots of money) and don‚Äôt have special needs, it makes sense to use hosted services whenever possible, since setting up your own scalable log processing systems is notoriously time consuming.


Track and graph metrics: The AWS Console can show you simple graphs from CloudWatch, you typically will want to track and graph many kinds of metrics, from CloudWatch and your applications. Collect and export helpful metrics everywhere you can (and as long as volume is manageable enough you can afford it).

Services like Librato, KeenIO, and Datadog have fancier features or better user interfaces that can save a lot of time. (A more detailed comparison is here.)
Use Prometheus or Graphite as timeseries databases for your metrics (both are open source).
Grafana can visualize with dashboards the stored metrics of both timeseries databases (also open source).



Tips for Managing Servers

‚ùóTimezone settings on servers: unless absolutely necessary, always set the timezone on servers to UTC (see instructions for your distribution, such as Ubuntu, CentOS or Amazon Linux). Numerous distributed systems rely on time for synchronization and coordination and UTC provides the universal reference plane: it is not subject to  daylight savings changes and adjustments in local time. It will also save you a lot of headache debugging elusive timezone issues and provide coherent timeline of events in your logging and audit systems.
NTP and accurate time: If you are not using Amazon Linux (which comes preconfigured), you should confirm your servers configure NTP correctly, to avoid insidious time drift (which can then cause all sorts of issues, from breaking API calls to misleading logs). This should be part of your automatic configuration for every server. If time has already drifted substantially (generally >1000 seconds), remember NTP won‚Äôt shift it back, so you may need to remediate manually (for example, like this on Ubuntu).
Testing immutable infrastructure: If you want to be proactive about testing your service‚Äôs ability to cope with instance termination or failure, it can be helpful to introduce random instance termination during business hours, which will expose any such issues at a time when engineers are available to identify and fix them. Netflix‚Äôs Simian Army (specifically, Chaos Monkey) is a popular tool for this. Alternatively, chaos-lambda by the BBC is a lightweight option which runs on AWS Lambda.

Security and IAM
We cover security basics first, since configuring user accounts is something you usually have to do early on when setting up your system.
Security and IAM Basics

üìí IAM Homepage ‚àô User guide ‚àô FAQ
The AWS Security Blog is one of the best sources of news and information on AWS security.
IAM is the service you use to manage accounts and permissioning for AWS.
Managing security and access control with AWS is critical, so every AWS administrator needs to use and understand IAM, at least at a basic level.
IAM identities include users (people or services that are using AWS), groups (containers for sets of users and their permissions), and roles (containers for permissions assigned to AWS service instances). Permissions for these identities are governed by policies You can use AWS pre-defined policies or custom policies that you create.
IAM manages various kinds of authentication, for both users and for software services that may need to authenticate with AWS, including:

Passwords to log into the console. These are a username and password for real users.
Access keys, which you may use with command-line tools. These are two strings, one the ‚Äúid‚Äù, which is an upper-case alphabetic string of the form 'AXXXXXXXXXXXXXXXXXXX', and the other is the secret, which is a 40-character mixed-case base64-style string. These are often set up for services, not just users.

üìú Access keys that start with AKIA are normal keys. Access keys that start with ASIA are session/temporary keys from STS, and will require an additional ""SessionToken"" parameter to be sent along with the id and secret. See the documentation for a complete list of access key prefixes.


Multi-factor authentication (MFA), which is the highly recommended practice of using a keychain fob or smartphone app as a second layer of protection for user authentication.


IAM allows complex and fine-grained control of permissions, dividing users into groups, assigning permissions to roles, and so on. There is a policy language that can be used to customize security policies in a fine-grained way.

An excellent high level overview of IAM policy concepts lives at IAM Policies In A Nutshell.
üî∏The policy language has a complex and error-prone JSON syntax that‚Äôs quite confusing, so unless you are an expert, it is wise to base yours off trusted examples or AWS‚Äô own pre-defined managed policies.


At the beginning, IAM policy may be very simple, but for large systems, it will grow in complexity, and need to be managed with care.

üîπMake sure one person (perhaps with a backup) in your organization is formally assigned ownership of managing IAM policies, make sure every administrator works with that person to have changes reviewed. This goes a long way to avoiding accidental and serious misconfigurations.


It is best to give each user or service the minimum privileges needed to perform their duties. This is the principle of least privilege, one of the foundations of good security. Organize all IAM users and groups according to levels of access they need.
IAM has the permission hierarchy of:

Explicit deny: The most restrictive policy wins.
Explicit allow: Access permissions to any resource has to be explicitly given.
Implicit deny: All permissions are implicitly denied by default.


You can test policy permissions via the AWS IAM policy simulator tool tool. This is particularly useful if you write custom policies.

Security and IAM Tips

üîπUse IAM to create individual user accounts and use IAM accounts for all users from the beginning. This is slightly more work, but not that much.

That way, you define different users, and groups with different levels of privilege (if you want, choose from Amazon‚Äôs default suggestions, of administrator, power user, etc.).
This allows credential revocation, which is critical in some situations. If an employee leaves, or a key is compromised, you can revoke credentials with little effort.
You can set up Active Directory federation to use organizational accounts in AWS.


‚ùóEnable MFA on your account.

You should always use MFA, and the sooner the better ‚Äî enabling it when you already have many users is extra work.
Unfortunately it can‚Äôt be enforced in software, so an administrative policy has to be established.
Most users can use the Google Authenticator app (on iOS or Android) to support two-factor authentication. For the root account, consider a hardware fob.


‚ùóRestrict use of significant IAM credentials as much as possible. Remember that in the cloud, loss of a highly capable IAM credential could essentially mean ‚Äúgame over,‚Äù for your deployment, your users, or your whole company.

Do NOT use the Root User account other than when you initially create your account.  Create custom IAM users and/or roles and use those for your applications instead.

Lock up access and use of the root credentials as much as possible. Ideally they should be effectively ‚Äúoffline.‚Äù For critical deployments, this means attached to an actual MFA device, physically secured and rarely used.




‚ùóTurn on CloudTrail: One of the first things you should do is enable CloudTrail. Even if you are not a security hawk, there is little reason not to do this from the beginning, so you have data on what has been happening in your AWS account should you need that information. You‚Äôll likely also want to set up a log management service to search and access these logs.
üîπUse IAM roles for EC2: Rather than assign IAM users to applications like services and then sharing the sensitive credentials, define and assign roles to EC2 instances and have applications retrieve credentials from the instance metadata.
Assign IAM roles by realm ‚Äî for example, to development, staging, and production. If you‚Äôre setting up a role, it should be tied to a specific realm so you have clean separation. This prevents, for example, a development instance from connecting to a production database.
Best practices: AWS‚Äô list of best practices is worth reading in full up front.
IAM Reference: This interactive reference for all IAM actions, effects, and resources is great to have open while writing new or trying to understand existing IAM policies.
Multiple accounts: Decide on whether you want to use multiple AWS accounts and research how to organize access across them. Factors to consider:

Number of users
Importance of isolation

Resource Limits
Permission granularity
Security
API Limits


Regulatory issues
Workload
Size of infrastructure
Cost of multi-account ‚Äúoverhead‚Äù: Internal AWS service management tools may need to be custom built or adapted.
üîπIt can help to use separate AWS accounts for independent parts of your infrastructure if you expect a high rate of AWS API calls, since AWS throttles calls at the AWS account level.


Inspector is an automated security assessment service from AWS that helps identify common security risks. This allows validation that you adhere to certain security practices and may help with compliance.
Trusted Advisor addresses a variety of best practices, but also offers some basic security checks around IAM usage, security group configurations, and MFA. At paid support tiers, Trusted Advisor exposes additional checks around other areas, such as reserved instance optimization.
Use KMS for managing keys: AWS offers KMS for securely managing encryption keys, which is usually a far better option than handling key security yourself. See below.
AWS WAF is a web application firewall to help you protect your applications from common attack patterns.
Security auditing:

Security Monkey is an open source tool that is designed to assist with security audits.
Scout2 is an open source tool that uses AWS APIs to assess an environment‚Äôs security posture. Scout2 is stable and actively maintained.
üîπExport and audit security settings: You can audit security policies simply by exporting settings using AWS APIs, e.g. using a Boto script like SecConfig.py (from this 2013 talk) and then reviewing and monitoring changes manually or automatically.



Security and IAM Gotchas and Limitations

‚ùóDon‚Äôt share user credentials: It‚Äôs remarkably common for first-time AWS users to create one account and one set of credentials (access key or password), and then use them for a while, sharing among engineers and others within a company. This is easy. But don‚Äôt do this. This is an insecure practice for many reasons, but in particular, if you do, you will have reduced ability to revoke credentials on a per-user or per-service basis (for example, if an employee leaves or a key is compromised), which can lead to serious complications.
‚ùóInstance metadata throttling: The instance metadata service has rate limiting on API calls. If you deploy IAM roles widely (as you should!) and have lots of services, you may hit global account limits easily.

One solution is to have code or scripts cache and reuse the credentials locally for a short period (say 2 minutes). For example, they can be put into the ~/.aws/credentials file but must also be refreshed automatically.
But be careful not to cache credentials for too long, as they expire. (Note the other dynamic metadata also changes over time and should not be cached a long time, either.)


üî∏Some IAM operations are slower than other API calls (many seconds), since AWS needs to propagate these globally across regions.
‚ùóThe uptime of IAM‚Äôs API has historically been lower than that of the instance metadata API. Be wary of incorporating a dependency on IAM‚Äôs API into critical paths or subsystems ‚Äî for example, if you validate a user‚Äôs IAM group membership when they log into an instance and aren‚Äôt careful about precaching group membership or maintaining a back door, you might end up locking users out altogether when the API isn‚Äôt available.
‚ùóDon't check in AWS credentials or secrets to a git repository. There are bots that scan GitHub looking for credentials. Use scripts or tools, such as git-secrets to prevent anyone on your team from checking in sensitive information to your git repositories.

S3
S3 Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
S3 (Simple Storage Service) is AWS‚Äô standard cloud storage service, offering file (opaque ‚Äúblob‚Äù) storage of arbitrary numbers of files of almost any size, from 0 to 5TB. (Prior to 2011 the maximum size was 5 GB; larger sizes are now well supported via multipart support.)
Items, or objects, are placed into named buckets stored with names which are usually called keys. The main content is the value.
Objects are created, deleted, or updated. Large objects can be streamed, but you cannot modify parts of a value; you need to update the whole object. Partial data access can work via S3 Select.
Every object also has metadata, which includes arbitrary key-value pairs, and is used in a way similar to HTTP headers. Some metadata is system-defined, some are significant when serving HTTP content from buckets or CloudFront, and you can also define arbitrary metadata for your own use.
S3 URIs: Although often bucket and key names are provided in APIs individually, it‚Äôs also common practice to write an S3 location in the form 's3://bucket-name/path/to/key' (where the key here is 'path/to/key'). (You‚Äôll also see 's3n://' and 's3a://' prefixes in Hadoop systems.)
S3 vs Glacier, EBS, and EFS: AWS offers many storage services, and several besides S3 offer file-type abstractions. Glacier is for cheaper and infrequently accessed archival storage. EBS, unlike S3, allows random access to file contents via a traditional filesystem, but can only be attached to one EC2 instance at a time. EFS is a network filesystem many instances can connect to, but at higher cost. See the comparison table.

S3 Tips

For most practical purposes, you can consider S3 capacity unlimited, both in total size of files and number of objects. The number of objects in a bucket is essentially also unlimited. Customers routinely have millions of objects.
‚ùóPermissions:

üî∏If you're storing business data on Amazon S3, it‚Äôs important to manage permissions sensibly. In 2017 companies like Dow Jones and Verizon saw data breaches due to poorly-chosen S3 configuration for sensitive data. Fixing this later can be a difficult task if you have a lot of assets and internal users.
üî∏There are 3 different ways to grant permissions to access Amazon S3 content in your buckets.

IAM policies use the familiar Identity and Authentication Management permission scheme to control access to specific operations.
Bucket policies grant or deny permissions to an entire bucket. You might use this when hosting a website in S3, to make the bucket publicly readable, or to restrict access to a bucket by IP address. Amazon's sample bucket policies show a number of use cases where these policies come in handy.
Access Control Lists (ACLs) can also be applied to every bucket and object stored in S3. ACLs grant additional permissions beyond those specified in IAM or bucket policies. ACLs can be used to grant access to another AWS user, or to predefined groups like the general public. This is powerful but can be dangerous, because you need to inspect every object to see who has access.


üî∏AWS' predefined access control groups allow access that may not be what you'd expect from their names:

""All Users"", or ""Everyone"", grants permission to the general public, not only to users defined in your own AWS account. If an object is available to All Users, then it can be retrieved with a simple HTTP request of the form http://s3.amazonaws.com/bucket-name/filename. No authorization or signature is required to access data in this category.
""Authenticated Users"" grants permissions to anyone with an AWS account, again not limited to your own users. Because anyone can sign up for AWS, for all intents and purposes this is also open to the general public.
""Log Delivery"" group is used by AWS to write logs to buckets and should be safe to enable on the buckets that need it.
A typical use case of this ACL is used in conjunction with the requester pays functionality of S3.


‚ùó Bucket permissions and object permissions are two different things and independent of each other. A private object in a public bucket can be seen when listing the bucket, but not downloaded. At the same time, a public object in a private bucket won't be seen because the bucket contents can't be listed, but can still be downloaded by anyone who knows its exact key. Users that don't have access to set bucket permissions can still make objects public if they have s3:PutObjectAcl or s3:PutObjectVersionAcl permissions.
üê•In August 2017, AWS added AWS Config rules to ensure your S3 buckets are secure.

‚ùóThese AWS Config rules only check the security of your bucket policy and bucket-level ACLs. You can still create object ACLs that grant additional permissions, including opening files to the whole world.


üîπDo create new buckets if you have different types of data with different sensitivity levels. This is much less error prone than complex permissions rules. For example, if data is for administrators only, like log data, put it in a new bucket that only administrators can access.
For more guidance, see:

How to Secure an Amazon S3 Bucket
Deep dive into S3 access controls.
How do S3 permissions work?.




Bucket naming: Buckets are chosen from a global namespace (across all regions, even though S3 itself stores data in whichever S3 region you select), so you‚Äôll find many bucket names are already taken. Creating a bucket means taking ownership of the name until you delete it. Bucket names have a few restrictions on them.

Bucket names can be used as part of the hostname when accessing the bucket or its contents, like <bucket_name>.s3-us-east-1.amazonaws.com, as long as the name is DNS compliant.
A common practice is to use the company name acronym or abbreviation to prefix (or suffix, if you prefer DNS-style hierarchy) all bucket names (but please, don‚Äôt use a check on this as a security measure ‚Äî this is highly insecure and easily circumvented!).
üî∏Bucket names with '.' (periods) in them can cause certificate mismatches when used with SSL. Use '-' instead, since this then conforms with both SSL expectations and is DNS compliant.


Versioning: S3 has optional versioning support, so that all versions of objects are preserved on a bucket. This is mostly useful if you want an archive of changes or the ability to back out mistakes (caution: it lacks the featureset of full version control systems like Git).
Durability: Durability of S3 is extremely high, since internally it keeps several replicas. If you don‚Äôt delete it by accident, you can count on S3 not losing your data. (AWS offers the seemingly improbable durability rate of 99.999999999%, but this is a mathematical calculation based on independent failure rates and levels of replication ‚Äî not a true probability estimate. Either way, S3 has had a very good record of durability.) Note this is much higher durability than EBS!
üí∏S3 pricing depends on storage, requests, and transfer.

For transfer, putting data into AWS is free, but you‚Äôll pay on the way out. Transfer from S3 to EC2 in the same region is free. Transfer to other regions or the Internet in general is not free.
Deletes are free.


S3 Reduced Redundancy and Infrequent Access: Most people use the Standard storage class in S3, but there are other storage classes with lower cost:

üî∏Reduced Redundancy Storage (RRS) has been effectively deprecated, and has lower durability (99.99%, so just four nines) than standard S3. Note that it no longer participates in S3 price reductions, so it offers worse redundancy for more money than standard S3. As a result, there's no reason to use it.
Infrequent Access (IA) lets you get cheaper storage in exchange for more expensive access. This is great for archives like logs you already processed, but might want to look at later. To get an idea of the cost savings when using Infrequent Access (IA), you can use this S3 Infrequent Access Calculator.
S3 - Intelligent Tiering storage class is designed to optimize costs by automatically moving data to the most cost-effective access tier, without performance impact or operational overhead.
S3 - One Zone - IA is for data that is accessed less frequently, but requires rapid access when needed. Unlike other S3 Storage Classes which store data in a minimum of three Availability Zones (AZs), S3 One Zone-IA stores data in a single AZ and costs 20% less than S3 Standard-IA.
Glacier is a third alternative discussed as a separate product.
See the comparison table.


‚è±Performance: Maximizing S3 performance means improving overall throughput in terms of bandwidth and number of operations per second.

S3 is highly scalable, so in principle you can get arbitrarily high throughput. (A good example of this is S3DistCp.)
But usually you are constrained by the pipe between the source and S3 and/or the level of concurrency of operations.
Throughput is of course highest from within AWS to S3, and between EC2 instances and S3 buckets that are in the same region.
Bandwidth from EC2 depends on instance type. See the ‚ÄúNetwork Performance‚Äù column at ec2instances.info.
Throughput of many objects is extremely high when data is accessed in a distributed way, from many EC2 instances. It‚Äôs possible to read or write objects from S3 from hundreds or thousands of instances at once.
However, throughput is very limited when objects accessed sequentially from a single instance. Individual operations take many milliseconds, and bandwidth to and from instances is limited.
Therefore, to perform large numbers of operations, it‚Äôs necessary to use multiple worker threads and connections on individual instances, and for larger jobs, multiple EC2 instances as well.
Multi-part uploads: For large objects you want to take advantage of the multi-part uploading capabilities (starting with minimum chunk sizes of 5 MB).
Large downloads: Also you can download chunks of a single large object in parallel by exploiting the HTTP GET range-header capability.
üî∏List pagination: Listing contents happens at 1000 responses per request, so for buckets with many millions of objects listings will take time.
‚ùóKey prefixes: Previously randomness in the beginning of key names was necessary in order to avoid hot spots, but that is no longer necessary as of July, 2018.
For data outside AWS, DirectConnect and S3 Transfer Acceleration can help. For S3 Transfer Acceleration, you pay about the equivalent of 1-2 months of storage for the transfer in either direction for using nearer endpoints.


Command-line applications: There are a few ways to use S3 from the command line:

Originally, s3cmd was the best tool for the job. It‚Äôs still used heavily by many.
The regular aws command-line interface now supports S3 well, and is useful for most situations.
s4cmd is a replacement, with greater emphasis on performance via multi-threading, which is helpful for large files and large sets of files, and also offers Unix-like globbing support.


GUI applications: You may prefer a GUI, or wish to support GUI access for less technical users. Some options:

The AWS Console does offer a graphical way to use S3. Use caution telling non-technical people to use it, however, since without tight permissions, it offers access to many other AWS features.
Transmit is a good option on macOS for most use cases.
Cyberduck is a good option on macOS and Windows with support for multipart uploads, ACLs, versioning, lifecycle configuration, storage classes and server side encryption (SSE-S3 and SSE-KMS).


S3 and CloudFront: S3 is tightly integrated with the CloudFront CDN. See the CloudFront section for more information, as well as S3 transfer acceleration.
Static website hosting:

S3 has a static website hosting option that is simply a setting that enables configurable HTTP index and error pages and HTTP redirect support to public content in S3. It‚Äôs a simple way to host static assets or a fully static website.
Consider using CloudFront in front of most or all assets:

Like any CDN, CloudFront improves performance significantly.
üî∏SSL is only supported on the built-in amazonaws.com domain for S3. S3 supports serving these sites through a custom domain, but not over SSL on a custom domain. However, CloudFront allows you to serve a custom domain over https. Amazon provides free SNI SSL/TLS certificates via Amazon Certificate Manager. SNI does not work on very outdated browsers/operating systems. Alternatively, you can provide your own certificate to use on CloudFront to support all browsers/operating systems for a fee.
üî∏If you are including resources across domains, such as fonts inside CSS files, you may need to configure CORS for the bucket serving those resources.
Since pretty much everything is moving to SSL nowadays, and you likely want control over the domain, you probably want to set up CloudFront with your own certificate in front of S3 (and to ignore the AWS example on this as it is non-SSL only).
That said, if you do, you‚Äôll need to think through invalidation or updates on CloudFront. You may wish to include versions or hashes in filenames so invalidation is not necessary.




Data lifecycles:

When managing data, the understanding the lifecycle of the data is as important as understanding the data itself. When putting data into a bucket, think about its lifecycle ‚Äî its end of life, not just its beginning.
üîπIn general, data with different expiration policies should be stored under separate prefixes at the top level. For example, some voluminous logs might need to be deleted automatically monthly, while other data is critical and should never be deleted. Having the former in a separate bucket or at least a separate folder is wise.
üî∏Thinking about this up front will save you pain. It‚Äôs very hard to clean up large collections of files created by many engineers with varying lifecycles and no coherent organization.
Alternatively you can set a lifecycle policy to archive old data to Glacier. Be careful with archiving large numbers of small objects to Glacier, since it may actually cost more.
There is also a storage class called Infrequent Access that has the same durability as Standard S3, but is discounted per GB. It is suitable for objects that are infrequently accessed.


Data consistency: Understanding data consistency is critical for any use of S3 where there are multiple producers and consumers of data.

Creation and updates to individual objects in S3 are atomic, in that you‚Äôll never upload a new object or change an object and have another client see only part half the change.
The uncertainty lies with when your clients and other clients see updates.
New objects: If you create a new object, you‚Äôll be able to read it instantly, which is called read-after-write consistency.

Well, with the additional caveat that if you do a read on an object before it exists, then create it, you get eventual consistency (not read-after-write).
This does not apply to any list operations; newly created objects are not guaranteed to appear in a list operation right away


Updates to objects: If you overwrite or delete an object, you‚Äôre only guaranteed eventual consistency, i.e. the change will happen but you have no guarantee of when.
üîπFor many use cases, treating S3 objects as immutable (i.e. deciding by convention they will be created or deleted but not updated) can greatly simplify the code that uses them, avoiding complex state management.
üîπNote that until 2015, 'us-standard' region had had a weaker eventual consistency model, and the other (newer) regions were read-after-write. This was finally corrected ‚Äî but watch for many old blogs mentioning this!
Slow updates: In practice, ‚Äúeventual consistency‚Äù usually means within seconds, but expect rare cases of minutes or hours.


S3 as a filesystem:

In general S3‚Äôs APIs have inherent limitations that make S3 hard to use directly as a POSIX-style filesystem while still preserving S3‚Äôs own object format. For example, appending to a file requires rewriting, which cripples performance, and atomic rename of directories, mutual exclusion on opening files, and hardlinks are impossible.
s3fs is a FUSE filesystem that goes ahead and tries anyway, but it has performance limitations and surprises for these reasons.
Riofs (C) and Goofys (Go) are more recent efforts that attempt adopt a different data storage format to address those issues, and so are likely improvements on s3fs.
S3QL (discussion) is a Python implementation that offers data de-duplication, snap-shotting, and encryption, but only one client at a time.
ObjectiveFS (discussion) is a commercial solution that supports filesystem features and concurrent clients.


If you are primarily using a VPC, consider setting up a VPC Endpoint for S3 in order to allow your VPC-hosted resources to easily access it without the need for extra network configuration or hops.
Cross-region replication: S3 has a feature for replicating a bucket between one region and another. Note that S3 is already highly replicated within one region, so usually this isn‚Äôt necessary for durability, but it could be useful for compliance (geographically distributed data storage), lower latency, or as a strategy to reduce region-to-region bandwidth costs by mirroring heavily used data in a second region.
IPv4 vs IPv6: For a long time S3 only supported IPv4 at the default endpoint https://BUCKET.s3.amazonaws.com. However, as of Aug 11, 2016 it now supports both IPv4 & IPv6! To use both, you have to enable dualstack either in your preferred API client or by directly using this url scheme https://BUCKET.s3.dualstack.REGION.amazonaws.com. This extends to S3 Transfer Acceleration as well.
S3 event notifications: S3 can be configured to send an SNS notification, SQS message, or AWS Lambda function on bucket events.
üí∏Limit your individual users (or IAM roles) to the minimal required S3 locations, and catalog the ‚Äúapproved‚Äù locations. Otherwise, S3 tends to become the dumping ground where people put data to random locations that are not cleaned up for years, costing you big bucks.
If a bucket is deleted in S3, it can take up to 10 hours before a bucket with the same name can be created again. (discussion)

S3 Gotchas and Limitations

‚ùóS3 buckets sit outside the VPC and can be accessed from anywhere in the world if bucket policies are not set to deny it. Read the permissions section above carefully, there are countless cases of buckets exposed to the public.
üî∏For many years, there was a notorious 100-bucket limit per account, which could not be raised and caused many companies significant pain. As of 2015, you can request increases. You can ask to increase the limit, but it will still be capped (generally below ~1000 per account).
üî∏Be careful not to make implicit assumptions about transactionality or sequencing of updates to objects. Never assume that if you modify a sequence of objects, the clients will see the same modifications in the same sequence, or if you upload a whole bunch of files, that they will all appear at once to all clients.
üî∏S3 has an SLA with 99.9% uptime. If you use S3 heavily, you‚Äôll inevitably see occasional error accessing or storing data as disks or other infrastructure fail. Availability is usually restored in seconds or minutes. Although availability is not extremely high, as mentioned above, durability is excellent.
üî∏After uploading, any change that you make to the object causes a full rewrite of the object, so avoid appending-like behavior with regular files.
üî∏Eventual data consistency, as discussed above, can be surprising sometimes. If S3 suffers from internal replication issues, an object may be visible from a subset of the machines, depending on which S3 endpoint they hit. Those usually resolve within seconds; however, we‚Äôve seen isolated cases when the issue lingered for 20-30 hours.
üî∏MD5s and multi-part uploads: In S3, the ETag header in S3 is a hash on the object. And in many cases, it is the MD5 hash. However, this is not the case in general when you use multi-part uploads. One workaround is to compute MD5s yourself and put them in a custom header (such as is done by s4cmd).
üî∏Incomplete multi-part upload costs: Incomplete multi-part uploads accrue storage charges even if the upload fails and no S3 object is created. Amazon (and others) recommend using a lifecycle policy to clean up incomplete uploads and save on storage costs. Note that if you have many of these, it may be worth investigating whatever's failing regularly.
üî∏US Standard region: Previously, the us-east-1 region (also known as the US Standard region) was replicated across coasts, which led to greater variability of latency. Effective Jun 19, 2015 this is no longer the case. All Amazon S3 regions now support read-after-write consistency. Amazon S3 also renamed the US Standard region to the US East (N. Virginia) region to be consistent with AWS regional naming conventions.
üî∏S3 authentication versions and regions: In newer regions, S3 only supports the latest authentication. If an S3 file operation using CLI or SDK doesn't work in one region, but works correctly in another region, make sure you are using the latest authentication signature.

Storage Durability, Availability, and Price
As an illustration of comparative features and price, the table below gives S3 Standard, RRS, IA, in comparison with Glacier, EBS, EFS, and EC2 d2.xlarge instance store using Virginia region as of Sept 2017.




Durability (per year)
Availability ‚Äúdesigned‚Äù
Availability SLA
Storage (per TB per month)
GET or retrieve (per million)
Write or archive (per million)




Glacier
Eleven 9s
Sloooow
‚Äì
$4
$50
$50


S3 IA
Eleven 9s
99.9%
99%
$12.50
$1
$10


S3 RRS
99.99%
99.99%
99.9%
$24 (first TB)
$0.40
$5


S3 Standard
Eleven 9s
99.99%
99.9%
$23
$0.40
$5


EBS
99.8%
Unstated
99.99%
$25/$45/$100/$125+ (sc1/st1/gp2/io1)




EFS
‚ÄúHigh‚Äù
‚ÄúHigh‚Äù
‚Äì
$300




EC2 d2.xlarge instance store
Unstated
Unstated
‚Äì
$25.44
$0
$0



Especially notable items are in boldface. Sources: S3 pricing, S3 SLA, S3 FAQ, RRS info (note that this is considered deprecated), Glacier pricing, EBS availability and durability, EBS pricing, EFS pricing, EC2 SLA
EC2
EC2 Basics

üìí Homepage ‚àô Documentation ‚àô FAQ ‚àô Pricing (see also ec2instances.info)
EC2 (Elastic Compute Cloud) is AWS‚Äô offering of the most fundamental piece of cloud computing: A virtual private server. These ‚Äúinstances‚Äù can run most Linux, BSD, and Windows operating systems. Internally, they've used a heavily modified Xen virtualization. That said, new instance classes are being introduced with a KVM derived hypervisor instead, called Nitro. So far, this is limited to the C5 and M5 instance types. Lastly, there's a ""bare metal hypervisor"" available for i3.metal instances
The term ‚ÄúEC2‚Äù is sometimes used to refer to the servers themselves, but technically refers more broadly to a whole collection of supporting services, too, like load balancing (CLBs/ALBs/NLBs), IP addresses (EIPs), bootable images (AMIs), security groups, and network drives (EBS) (which we discuss individually in this guide).
üí∏EC2 pricing and cost management is a complicated topic. It can range from free (on the AWS free tier) to a lot, depending on your usage. Pricing is by instance type, by second or hour, and changes depending on AWS region and whether you are purchasing your instances On-Demand, on the Spot market or pre-purchasing (Reserved Instances).
Network Performance: For some instance types, AWS uses general terms like Low, Medium, and High to refer to network performance. Users have done benchmarking to provide expectations for what these terms can mean.

EC2 Alternatives and Lock-In

Running EC2 is akin to running a set of physical servers, as long as you don‚Äôt do automatic scaling or tooled cluster setup. If you just run a set of static instances, migrating to another VPS or dedicated server provider should not be too hard.
üö™Alternatives to EC2: The direct alternatives are Google Cloud, Microsoft Azure, Rackspace, DigitalOcean, AWS's own Lightsail offering, and other VPS providers, some of which offer similar APIs for setting up and removing instances. (See the comparisons above.)
Should you use Amazon Linux? AWS encourages use of their own Amazon Linux, which is evolved from Red Hat Enterprise Linux (RHEL) and CentOS. It‚Äôs used by many, but others are skeptical. Whatever you do, think this decision through carefully. It‚Äôs true Amazon Linux is heavily tested and better supported in the unlikely event you have deeper issues with OS and virtualization on EC2. But in general, many companies do just fine using a standard, non-Amazon Linux distribution, such as Ubuntu or CentOS. Using a standard Linux distribution means you have an exactly replicable environment should you use another hosting provider instead of (or in addition to) AWS. It‚Äôs also helpful if you wish to test deployments on local developer machines running the same standard Linux distribution (a practice that‚Äôs getting more common with Docker, too. Amazon now supports an official Amazon Linux Docker image, aimed at assisting with local development on a comparable environment, though this is new enough that it should be considered experimental). Note that the currently-in-testing Amazon Linux 2 supports on-premise deployments explicitly.
EC2 costs: See the section on this.

EC2 Tips


üîπPicking regions: When you first set up, consider which regions you want to use first. Many people in North America just automatically set up in the us-east-1 (N. Virginia) region, which is the default, but it‚Äôs worth considering if this is best up front. You'll want to evaluate service availability (some services are not available in all regions), costing (baseline costs also vary by region by up to 10-30% (generally lowest in us-east-1 for comparison purposes)), and compliance (various countries have differing regulations with regard to data privacy, for example).


Instance types: EC2 instances come in many types, corresponding to the capabilities of the virtual machine in CPU architecture and speed, RAM, disk sizes and types (SSD or magnetic), and network bandwidth.

Selecting instance types is complex since there are so many types. Additionally there are different generations, released over the years.
üîπUse the list at ec2instances.info to review costs and features. Amazon‚Äôs own list of instance types is hard to use, and doesn‚Äôt list features and price together, which makes it doubly difficult.
Prices vary a lot, so use ec2instances.info to determine the set of machines that meet your needs and ec2price.com to find the cheapest type in the region you‚Äôre working in. Depending on the timing and region, it might be much cheaper to rent an instance with more memory or CPU than the bare minimum.



Turn off your instances when they aren‚Äôt in use. For many situations such as testing or staging resources, you may not need your instances on 24/7, and you won‚Äôt need to pay EC2 running costs when they are suspended. Given that costs are calculated based on usage, this is a simple mechanism for cost savings. This can be achieved using Lambda and CloudWatch, an open source option like cloudcycler, or a SaaS provider like GorillaStack. (Note: if you turn off instances with an ephemeral root volume, any state will be lost when the instance is turned off. Therefore, for stateful applications it is safer to turn off EBS backed instances).


Dedicated instances and dedicated hosts are assigned hardware, instead of usual virtual instances. They are more expensive than virtual instances but can be preferable for performance, compliance, financial modeling, or licensing reasons.


32 bit vs 64 bit: A few micro, small, and medium instances are still available to use as 32-bit architecture. You‚Äôll be using 64-bit EC2 (‚Äúamd64‚Äù) instances nowadays, though smaller instances still support 32 bit (‚Äúi386‚Äù). Use 64 bit unless you have legacy constraints or other good reasons to use 32.


HVM vs PV: There are two kinds of virtualization technology used by EC2, hardware virtual machine (HVM) and paravirtual (PV). Historically, PV was the usual type, but now HVM is becoming the standard. If you want to use the newest instance types, you must use HVM. See the instance type matrix for details.


Operating system: To use EC2, you‚Äôll need to pick a base operating system. It can be Windows or Linux, such as Ubuntu or Amazon Linux. You do this with AMIs, which are covered in more detail in their own section below.


Limits: You can‚Äôt create arbitrary numbers of instances. Default limits on numbers of EC2 instances per account vary by instance type, as described in this list.


‚ùóUse termination protection: For any instances that are important and long-lived (in particular, aren't part of auto-scaling), enable termination protection. This is an important line of defense against user mistakes, such as accidentally terminating many instances instead of just one due to human error.


SSH key management:

When you start an instance, you need to have at least one ssh key pair set up, to bootstrap, i.e., allow you to ssh in the first time.
Aside from bootstrapping, you should manage keys yourself on the instances, assigning individual keys to individual users or services as appropriate.
Avoid reusing the original boot keys except by administrators when creating new instances.
Avoid sharing keys and add individual ssh keys for individual users.



GPU support: You can rent GPU-enabled instances on EC2 for use in machine learning or graphics rendering workloads.

There are three types of GPU-enabled instances currently available:

The P3 series offers NVIDIA Tesla V100 GPUs in 1, 4 and 8 GPU configurations targeting machine learning, scientific workloads, and other high performance computing applications.
The P2 series offers NVIDIA Tesla K80 GPUs in 1, 8 and 16 GPU configurations targeting machine learning, scientific workloads, and other high performance computing applications.
The G3 series offers NVIDIA Tesla M60 GPUs in 1, 2, or 4 GPU configurations targeting graphics and video encoding.


AWS offers two different AMIs that are targeted to GPU applications. In particular, they target deep learning workloads, but also provide access to more stripped-down driver-only base images.

AWS offers both an Amazon Linux Deep Learning AMI (based on Amazon Linux) as well as an Ubuntu Deep Learning AMI. Both come with most NVIDIA drivers and ancillary software (CUDA, CUBLAS, CuDNN, TensorFlow, PyTorch, etc.) installed to lower the barrier to usage.
‚õì Note that using these AMIs can lead to lock in due to the fact that you have no direct access to software configuration or versioning.
üî∏ The compendium of frameworks included can lead to long instance startup times and difficult-to-reason-about environments.


üîπAs with any expensive EC2 instance types, Spot instances can offer significant savings with GPU workloads when interruptions are tolerable.



All current EC2 instance types can take advantage of IPv6 addressing, so long as they are launched in a subnet with an allocated CIDR range in an IPv6-enabled VPC.


EC2 Gotchas and Limitations

‚ùóNever use ssh passwords. Just don‚Äôt do it; they are too insecure, and consequences of compromise too severe. Use keys instead. Read up on this and fully disable ssh password access to your ssh server by making sure 'PasswordAuthentication no' is in your /etc/ssh/sshd_config file. If you‚Äôre careful about managing ssh private keys everywhere they are stored, it is a major improvement on security over password-based authentication.
üî∏For all newer instance types, when selecting the AMI to use, be sure you select the HVM AMI, or it just won‚Äôt work.
‚ùóWhen creating an instance and using a new ssh key pair, make sure the ssh key permissions are correct.
üî∏Sometimes certain EC2 instances can get scheduled for retirement by AWS due to ‚Äúdetected degradation of the underlying hardware,‚Äù in which case you are given a couple of weeks to migrate to a new instance

If your instance root device is an EBS volume, you can typically stop and then start the instance which moves it to healthy host hardware, giving you control over timing of this event. Note however that you will lose any instance store volume data (ephemeral drives) if your instance type has instance store volumes.
The instance public IP (if it has one) will likely change unless you're using Elastic IPs. This could be a problem if other systems depend on the IP address.


üî∏Periodically you may find that your server or load balancer is receiving traffic for (presumably) a previous EC2 server that was running at the same IP address that you are handed out now (this may not matter, or it can be fixed by migrating to another new instance).
‚ùóIf the EC2 API itself is a critical dependency of your infrastructure (e.g. for automated server replacement, custom scaling algorithms, etc.) and you are running at a large scale or making many EC2 API calls, make sure that you understand when they might fail (calls to it are rate limited and the limits are not published and subject to change) and code and test against that possibility.
‚ùóMany newer EC2 instance types are either EBS-only, or backed by local NVMe disks assigned to the instance. Make sure to factor in EBS performance and costs when planning to use them.
‚ùóIf you're operating at significant scale, you may wish to break apart API calls that enumerate all of your resources, and instead operate either on individual resources, or a subset of the entire list. EC2 APIs will time out! Consider using filters to restrict what gets returned.
‚ùó‚è± Instances come in two types: Fixed Performance Instances (e.g. M3, C3, and R3) and Burstable Performance Instances (e.g. T2). A T2 instance receives CPU credits continuously, the rate of which depends on the instance size. T2 instances accrue CPU credits when they are idle, and use CPU credits when they are active. However, once an instance runs out of credits, you'll notice a severe degradation in performance. If you need consistently high CPU performance for applications such as video encoding, high volume websites or HPC applications, it is recommended to use Fixed Performance Instances.
Instance user-data is limited to 16 KB. (This limit applies to the data in raw form, not base64-encoded form.) If more data is needed, it can be downloaded from S3 by a user-data script.
Very new accounts may not be able to launch some instance types, such as GPU instances, because of an initially imposed ‚Äúsoft limit‚Äù of zero. This limit can be raised by making a support request. See AWS Service Limits for the method to make the support request. Note that this limit of zero is not currently documented.
Since multiple AWS instances all run on the same physical hardware, early cloud adopters encountered what became known as the Noisy Neighbor problem. This feeling of not getting what you are paying for led to user frustration, however ""steal"" may not be the best word to describe what's actually happening based on a detailed explanation of how the kernel determine steal time. Avoiding having CPU steal affect your application in the cloud may be best handled by properly designing your cloud architecture.
AWS introduced Dedicated Tenancy in 2011. This allows customers to have all resources from a single server. Some saw this as a way to solve the noisy neighbor problem since only that customer uses the CPU. This approach comes with a significant risk if that physical system needed any type of maintenance. If a customer had 20 instances running using shared tenancy and one underlying server needed maintenance, only the instance on that server would go offline. If that customer had 20 instances running using dedicated tenancy, when the underlying server needs maintenance, all 20 instances would go offline.
üî∏Only i3.metal type instances providing an ability to run Android x86 emulators on AWS at the moment.

CloudWatch
CloudWatch Basics

üìí Homepage ‚àô Documentation ‚àô FAQ ‚àô Pricing
CloudWatch monitors resources and applications, captures logs, and sends events.
CloudWatch monitoring is the standard mechanism for keeping tabs on AWS resources. A wide range of  metrics and dimensions are available via CloudWatch, allowing you to create time based graphs, alarms, and dashboards.

Alarms are the most practical use of CloudWatch, allowing you to trigger notifications from any given metric.
Alarms can trigger SNS notifications, Auto Scaling actions, or EC2 actions.
Alarms also support alerting when any M out of N datapoints cross the alarm threshold.
Publish and share graphs of metrics by creating customizable dashboard views.

Monitor and report on EC2 instance system check failure alarms.




Using CloudWatch Events:

Events create a mechanism to automate actions in various services on AWS. You can create event rules from instance states, AWS APIs, Auto Scaling, Run commands, deployments or time-based schedules (think Cron).
Triggered events can invoke Lambda functions, send SNS/SQS/Kinesis messages, or perform instance actions (terminate, restart, stop, or snapshot volumes).
Custom payloads can be sent to targets in JSON format, this is especially useful when triggering Lambdas.


Using CloudWatch Logs:

CloudWatch Logs is a streaming log storage system. By storing logs within AWS you have access to unlimited paid storage, but you also have the option of streaming logs directly to ElasticSearch or custom Lambdas.
A log agent installed on your servers will process logs over time and send them to CloudWatch Logs.
You can export logged data to S3 or stream results to other AWS services.
CloudWatch Logs can be encrypted using keys managed through KMS.


Detailed monitoring: Detailed monitoring for EC2 instances must be enabled to get granular metrics, and is billed under CloudWatch.

CloudWatch Alternatives and Lock-In

CloudWatch offers fairly basic functionality that doesn't create significant (additional) AWS lock-in. Most of the metrics provided by the service can be obtained through APIs that can be imported into other aggregation or visualization tools or services (many specifically provide CloudWatch data import services).
üö™ Alternatives to CloudWatch monitoring services include NewRelic, Datadog, Sumo Logic, Zabbix, Nagios, Ruxit, Elastic Stack, open source options such as StatsD or collectd with Graphite, and many others.
üö™ CloudWatch Log alternatives include Splunk, Sumo Logic, Loggly, LogDNA, Logstash, Papertrail, Elastic Stack, and other centralized logging solutions.

CloudWatch Tips

Some very common use cases for CloudWatch are billing alarms, instance or load balancer up/down alarms, and disk usage alerts.
You can use EC2Config to monitor watch memory and disk metrics on Windows platform instances. For Linux, there are example scripts that do the same thing.
You can publish your own metrics using the AWS API. Incurs additional cost.
You can stream directly from CloudWatch Logs to a Lambda or ElasticSearch cluster by creating subscriptions on Log Groups.
Don't forget to take advantage of the CloudWatch non-expiring free tier.

CloudWatch Gotchas and Limitations

üî∏Metrics in CloudWatch originate on the hypervisor. The hypervisor doesn't have access to OS information, so certain metrics (most notably memory utilization) are not available unless pushed to CloudWatch from inside the instance.
üî∏You can not use more than one metric for an alarm.
üî∏Notifications you receive from alarms will not have any contextual detail; they have only the specifics of the threshold, alarm state, and timing.
üî∏By default, CloudWatch metric resolution is 1 minute. If you send multiple values of a metric within the same minute, they will be aggregated into minimum, maximum, average and total (sum) per minute.
üê•In July 2017, a new high-resolution option was added for CloudWatch metrics and alarms. This feature allows you to record metrics with 1-second resolution, and to evaluate CloudWatch alarms every 10 seconds.

The blog post introducing this feature describes how to publish a high-resolution metric to CloudWatch. Note that when calling the PutMetricData API, StorageResolution is an attribute of each item you send in the MetricData array, not a direct parameter of the PutMetricData API call.


üî∏Data about metrics is kept in CloudWatch for 15 months, starting November 2016 (used to be 14 days). Minimum granularity increases after 15 days.

AMIs
AMI Basics

üìí User guide
AMIs (Amazon Machine Images) are immutable images that are used to launch preconfigured EC2 instances. They come in both public and private flavors. Access to public AMIs is either freely available (shared/community AMIs) or bought and sold in the AWS Marketplace.
Many operating system vendors publish ready-to-use base AMIs. For Ubuntu, see the Ubuntu AMI Finder. Amazon of course has AMIs for Amazon Linux.

AMI Tips

AMIs are built independently based on how they will be deployed. You must select AMIs that match your deployment when using them or creating them:

EBS or instance store
PV or HVM virtualization types
32 bit (‚Äúi386‚Äù) vs 64 bit (‚Äúamd64‚Äù) architecture


As discussed above, modern deployments will usually be with 64-bit EBS-backed HVM.
You can create your own custom AMI by snapshotting the state of an EC2 instance that you have modified.
AMIs backed by EBS storage have the necessary image data loaded into the EBS volume itself and don‚Äôt require an extra pull from S3, which results in EBS-backed instances coming up much faster than instance storage-backed ones.
AMIs are per region, so you must look up AMIs in your region, or copy your AMIs between regions with the AMI Copy feature.
As with other AWS resources, it‚Äôs wise to use tags to version AMIs and manage their lifecycle.
If you create your own AMIs, there is always some tension in choosing how much installation and configuration you want to ‚Äúbake‚Äù into them.

Baking less into your AMIs (for example, just a configuration management client that downloads, installs, and configures software on new EC2 instances when they are launched) allows you to minimize time spent automating AMI creation and managing the AMI lifecycle (you will likely be able to use fewer AMIs and will probably not need to update them as frequently), but results in longer waits before new instances are ready for use and results in a higher chance of launch-time installation or configuration failures.
Baking more into your AMIs (for example, pre-installing but not fully configuring common software along with a configuration management client that loads configuration settings at launch time) results in a faster launch time and fewer opportunities for your software installation and configuration to break at instance launch time but increases the need for you to create and manage a robust AMI creation pipeline.
Baking even more into your AMIs (for example, installing all required software as well and potentially also environment-specific configuration information) results in fast launch times and a much lower chance of instance launch-time failures but (without additional re-deployment and re-configuration considerations) can require time consuming AMI updates in order to update software or configuration as well as more complex AMI creation automation processes.


Which option you favor depends on how quickly you need to scale up capacity, and size and maturity of your team and product.

When instances boot fast, auto-scaled services require less spare capacity built in and can more quickly scale up in response to sudden increases in load. When setting up a service with autoscaling, consider baking more into your AMIs and backing them with the EBS storage option.
As systems become larger, it common to have more complex AMI management, such as a multi-stage AMI creation process in which few (ideally one) common base AMIs are infrequently regenerated when components that are common to all deployed services are updated and then a more frequently run ‚Äúservice-level‚Äù AMI generation process that includes installation and possibly configuration of application-specific software.


More thinking on AMI creation strategies here.
Use tools like Packer to simplify and automate AMI creation.
If you use RHEL instances and happen to have existing RHEL on-premise Red Hat subscriptions, then you could leverage Red Hat's Cloud Access program to migrate a portion of your subscriptions to AWS, and thereby not having AWS charge you for RHEL subscriptions a second time. You can either use your own self-created RHEL AMI's or Red Hat provided Gold Images that will be added to your private AMI's once you sign up for Red Hat Cloud Access.

AMI Gotchas and Limitations


üî∏Amazon Linux package versions: By default, instances based on Amazon Linux AMIs are configured point to the latest versions of packages in Amazon‚Äôs package repository. This means that the package versions that get installed are not locked and it is possible for changes, including breaking ones, to appear when applying updates in the future. If you bake your AMIs with updates already applied, this is unlikely to cause problems in running services whose instances are based on those AMIs ‚Äì breaks will appear at the earlier AMI-baking stage of your build process, and will need to be fixed or worked around before new AMIs can be generated. There is a ‚Äúlock on launch‚Äù feature that allows you to configure Amazon Linux instances to target the repository of a particular major version of the Amazon Linux AMI, reducing the likelihood that breaks caused by Amazon-initiated package version changes will occur at package install time but at the cost of not having updated packages get automatically installed by future update runs. Pairing use of the ‚Äúlock on launch‚Äù feature with a process to advance the Amazon Linux AMI at your discretion can give you tighter control over update behaviors and timings.


Cloud-Init Defaults: Oftentimes users create AMIs after performing customizations (albeit manually or via some tool such as Packer or Ansible).  If you're not careful to alter cloud-init settings that correspond to the system service (e.g. sshd, etc.) you've customized, you may find that your changes are no longer in effect after booting your new AMI for the first time, as cloud-init has overwritten them.
Some distros have different files than others, but all are generally located in /etc/cloud/, regardless of distro.  You will want to review these files carefully for your chosen distro before rolling your own AMIs.  A complete reference to cloud-init is available on the cloud-init site.  This is an advanced configuration mechanism, so test any changes made to these files in a sandbox prior to any serious usage.


Auto Scaling
Auto Scaling Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing at no additional charge
Auto Scaling Groups (ASGs) are used to control the number of instances in a service, reducing manual effort to provision or deprovision EC2 instances.
They can be configured through Scaling Policies to automatically increase or decrease instance counts based on metrics like CPU utilization, or based on a schedule.
There are three common ways of using ASGs - dynamic (automatically adjust instance count based on metrics for things like CPU utilization), static (maintain a specific instance count at all times), scheduled (maintain different instance counts at different times of day or on days of the week).
üí∏ASGs have no additional charge themselves; you pay for underlying EC2 and CloudWatch services.

Auto Scaling Tips

üí∏ Better matching your cluster size to your current resource requirements through use of ASGs can result in significant cost savings for many types of workloads.
Pairing ASGs with CLBs is a common pattern used to deal with changes in the amount of traffic a service receives.
Dynamic Auto Scaling is easiest to use with stateless, horizontally scalable services.
Even if you are not using ASGs to dynamically increase or decrease instance counts, you should seriously consider maintaining all instances inside of ASGs ‚Äì given a target instance count, the ASG will work to ensure that number of instances running is equal to that target, replacing instances for you if they die or are marked as being unhealthy. This results in consistent capacity and better stability for your service.
Autoscalers can be configured to terminate instances that a CLB or ALB has marked as being unhealthy.

Auto Scaling Gotchas and Limitations

üî∏ReplaceUnhealthy setting: By default, ASGs will kill instances that the EC2 instance manager considers to be unresponsive. It is possible for instances whose CPU is completely saturated for minutes at a time to appear to be unresponsive, causing an ASG with the default ReplaceUnhealthy setting turned on to replace them. When instances that are managed by ASGs are expected to consistently run with very high CPU, consider deactivating this setting. If you do so, however, detecting and killing unhealthy nodes will become your responsibility.

EBS
EBS Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing
EBS (Elastic Block Store) provides block level storage. That is, it offers storage volumes that can be attached as filesystems, like traditional network drives.
EBS volumes can only be attached to one EC2 instance at a time. In contrast, EFS can be shared but has a much higher price point (a comparison).

EBS Tips

‚è±RAID: Use RAID drives for increased performance.
‚è±A worthy read is AWS‚Äô post on EBS IO characteristics as well as their performance tips.
‚è±One can provision IOPS (that is, pay for a specific level of I/O operations per second) to ensure a particular level of performance for a disk.
‚è±A single gp2 EBS volume allows 16k IOPS max To get the maximum performance out of a gp2 EBS volume, it has to be of a maximum size and attached to an EBS-optimized EC2 instance.
üí∏Standard and gp2 EBS volumes improve IOPS with size. It may make sense for you to simply enlarge a volume instead of paying for better performance explicitly. This can in many cases reduce costs by 2/3.
A standard block size for an EBS volume is 16kb.

EBS Gotchas and Limitations

‚ùóEBS durability is reasonably good for a regular hardware drive (annual failure rate of between 0.1% - 0.2%). On the other hand, that is very poor if you don‚Äôt have backups! By contrast, S3 durability is extremely high. If you care about your data, back it up to S3 with snapshots.
üî∏EBS has an SLA with 99.99% uptime. See notes on high availability below.
‚ùóEBS volumes have a volume type indicating the physical storage type. The types called ‚Äústandard‚Äù (st1 or sc1) are actually old spinning-platter disks, which deliver only hundreds of IOPS ‚Äî not what you want unless you‚Äôre really trying to cut costs. Modern SSD-based gp2 or io1 are typically the options you want.
‚ùóWhen restoring a snapshot to create an EBS volume, blocks are lazily read from S3 the first time they're referenced. To avoid an initial period of high latency, you may wish to use dd or fio as per the official documentation.

EFS
EFS Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing
üê•EFS is Amazon‚Äôs network filesystem. It‚Äôs presented as an NFSv4.1 server. Any compatible NFSv4 client can mount it.
It is designed to be highly available and durable and each EFS file system object is redundantly stored across multiple availability zones.
EFS is designed to be used as a shared network drive and it can automatically scale up to petabytes of stored data and thousands of instances attached to it.
EFS can offer higher throughput (multiple gigabytes per second) and better durability and availability than EBS (see the comparison table), but with higher latency.
EFS is priced based on the volume of data stored, and costs much more than EBS; it's in the ballpark of three times as much compared to general purpose gp2 EBS volumes.
‚è± Performance is dependent on the volume of data stored, as is the price:

Like EBS, EFS uses a credit based system. Credits are earned at a rate of 50 KiB/s per GiB of storage and consumed in bursts during reading/writing files or metadata. Unlike EBS, operations on metadata (file size, owner, date, etc.) also consume credits. The BurstCreditBalance metric in CloudWatch should be monitored to make sure the file system doesn't run out of credits.
Throughput capacity during bursts is also dependent on size. Under 1 TiB, throughput can go up to 100 MiB/s. Above that, 100 MiB/s is added for each stored TiB. For instance, a file system storing 5 TiB would be able to burst at a rate of 500 MiB/s. Maximum throughput per EC2 instance is 250 MiB/s.
EFS has two performance modes that can only be set when a file system is created. One is ""General Purpose"", the other is ""Max I/O"". Max I/O scales higher, but at the cost of higher latency. When in doubt, use General Purpose, which is also the default. If the PercentIOLimit metric in CloudWatch hovers around 100%, Max I/O is recommended. Changing performance mode means creating a new EFS and migrating data.


High availability is achieved by having mount targets in different subnets / availability zones.

EFS Tips


With EFS being based on NFSv4.1, any directory on the EFS can be mounted directly, it doesn't have to be the root directory. One application could mount fs-12345678:/prog1, another fs-12345678:/prog2.


User and group level permissions can be used to control access to certain directories on the EFS file system.


‚è± Sharing EFS filesystems: One EFS filesystem can be used for multiple applications or services, but it should be considered carefully:
Pros:

Because performance is based on total size of stored files, having everything on one drive will increase performance for everyone. One application consuming credits faster than it can accumulate might be offset by another application that just stores files on EFS and rarely accesses them.

Cons:

Since credits are shared, if one application over-consumes them, it will affect the others.
A compromise is made with regards to security: all clients will have to have network access to the drive. Someone with root access on one client instance can mount any directory on the EFS and they have read-write access to all files on the drive, even if they don't have access to the applications hosted on other clients. There isn't a no-root-squash equivalent for EFS.



EFS Gotchas and Limitations

üî∏ A number of NFSv4.1 features are not supported and there are some limits to the service.
üî∏ As of 2017-08, EFS offers disk level encryption for new drives. For file systems created before that date, encryption can only be achieved by moving the data to a new EFS volume.
üî∏ An EFS file system can be mounted on premises over Direct Connect.
üî∏ An EFS file system can NOT be mounted over VPC peering or VPN, even if the VPN is running on top of Direct Connect.
üî∏ Using an EFS volume on Windows is not supported.
‚è± When a file is uploaded to EFS, it can take hours for EFS to update the details for billing and burst credit purposes.
üî∏‚è±  Metadata operations can be costly in terms of burst credit consumption. Recursively traversing a tree containing thousands of files can easily ramp up to tens or even hundreds of megabytes of burst credits being consumed, even if no file is being touched. Commands like find or chown -R can have an adverse impact on performance.

Load Balancers
Load Balancer Basics

AWS has 3 load balancing products - ‚ÄúClassic Load Balancers‚Äù (CLBs), ‚ÄúApplication Load Balancers‚Äù (ALBs), and ""Network Load Balancers"" (NLB).
Before the introduction of ALBs, ‚ÄúClassic Load Balancers‚Äù were known as ‚ÄúElastic Load Balancers‚Äù (ELBs), so older documentation, tooling, and blog posts may still reference ‚ÄúELBs‚Äù.
CLBs have been around since 2009, ALBs in 2016, NLBs were added in 2017 to AWS.
CLBs support TCP and HTTP load balancing. ALBs support HTTP load balancing only. NLBs support TCP layer 4 load balancing.
CLBs and ALBs can optionally handle termination for a single SSL certificate.
All can optionally perform active health checks of instances and remove them from the destination pool if they become unhealthy.
CLBs don't support complex / rule-based routing. ALBs support a (currently small) set of rule-based routing features. NLBs have most extensive routing options.
CLBs can only forward traffic to a single globally configured port on destination instances, while ALBs can forward to ports that are configured on a per-instance basis, better supporting routing to services on shared clusters with dynamic port assignment (like ECS or Mesos). NLBs support multiple ports on same IP; registering targets by IP address, including targets outside the VPC for the load balancer; ECS can select unused port for scheduling a task then register a target group using this port.
CLBs are supported in EC2 Classic as well as in VPCs while ALBs are supported in VPCs only.
ALBs can target groups of instances and IP based targets in the RFC1918 ranges allowing you to use on premise destinations via VPN or Direct Connect.

Load Balancer Tips

If you don‚Äôt have opinions on your load balancing up front, and don‚Äôt have complex load balancing needs like application-specific routing of requests, it‚Äôs reasonable just to use a CLB or ALB for load balancing instead.
Even if you don‚Äôt want to think about load balancing at all, because your architecture is so simple (say, just one server), put a load balancer in front of it anyway. This gives you more flexibility when upgrading, since you won‚Äôt have to change any DNS settings that will be slow to propagate, and also it lets you do a few things like terminate SSL more easily.
CLBs and ALBs have many IPs: Internally, an AWS load balancer is simply a collection of individual software load balancers hosted within EC2, with DNS load balancing traffic among them. The pool can contain many IPs, at least one per availability zone, and depending on traffic levels. They also support SSL termination, which is very convenient.
Scaling: CLBs and ALBs can scale to very high throughput, but scaling up is not instantaneous. If you‚Äôre expecting to be hit with a lot of traffic suddenly, it can make sense to load test them so they scale up in advance. You can also contact Amazon and have them ‚Äúpre-warm‚Äù the load balancer.
Client IPs: In general, if servers want to know true client IP addresses, load balancers must forward this information somehow. CLBs add the standard X-Forwarded-For header. When using a CLB as an HTTP load balancer, it‚Äôs possible to get the client‚Äôs IP address from this.
Using load balancers when deploying: One common pattern is to swap instances in the load balancer after spinning up a new stack with your latest version, keep old stack running for one or two hours, and either flip back to old stack in case of problems or tear it down.
Rotating Certificates while retaining ARN: Rotating IAM Server Certificates can be difficult as the standard practice is to upload a new one then update all resources with the new ARN. You can however retain the same ARN using the update-certificate call with the following process:


Upload a new IAM Server Certificate with a unique name (e.g fuzzy.com.new)
Rename the existing IAM Server Certificate (e.g fuzzy.com to fuzzy.com.expired)
Rename the new IAM Server Certificate to the name of the previously existing certificate (e.g fuzzy.com.new to fuzzy.com)
Jiggle the CLB/ALB Listener to pick up the change:

ALB: Invoke modify-listener with the existing details for the ALB Listener
CLB: Invoke create-load-balancer-listeners with the existing details for the CLB listener



Load Balancer Gotchas and Limitations

‚ùóCLBs and ALBs have no fixed external IP that all clients see. For most consumer apps this doesn‚Äôt matter, but enterprise customers of yours may want this. IPs will be different for each user, and will vary unpredictably for a single client over time (within the standard EC2 IP ranges). And similarly, never resolve a CLB name to an IP and put it as the value of an A record ‚Äî it will work for a while, then break!
‚ùóSome web clients or reverse proxies cache DNS lookups for a long time, which is problematic for CLBs and ALBs, since they change their IPs. This means after a few minutes, hours, or days, your client will stop working, unless you disable DNS caching. Watch out for Java‚Äôs settings and be sure to adjust them properly. Another example is nginx as a reverse proxy, which normally resolves backends only at start-up (although there is a way to get around this).
‚ùóIt‚Äôs not unheard of for IPs to be recycled between customers without a long cool-off period. So as a client, if you cache an IP and are not using SSL (to verify the server), you might get not just errors, but responses from completely different services or companies!
üî∏As an operator of a service behind a CLB or ALB, the latter phenomenon means you can also see puzzling or erroneous requests by clients of other companies. This is most common with clients using back-end APIs (since web browsers typically cache for a limited period).
‚ùóCLBs and ALBs take time to scale up, it does not handle sudden spikes in traffic well. Therefore, if you anticipate a spike, you need to ‚Äúpre-warm‚Äù the load balancer by gradually sending an increasing amount of traffic.
‚ùóTune your healthchecks carefully ‚Äî if you are too aggressive about deciding when to remove an instance and conservative about adding it back into the pool, the service that your load balancer is fronting may become inaccessible for seconds or minutes at a time. Be extra careful about this when an autoscaler is configured to terminate instances that are marked as being unhealthy by a managed load balancer.
‚ùóCLB HTTPS listeners don't support Server Name Indication (SNI). If you need SNI, you can work around this limitation by either providing a certificate with Subject Alternative Names (SANs) or by using TCP listeners and terminating SSL at your backend.
üî∏ There is a limit on the number of ALBs, CLBs and NLBs per region (separately). As of late 2017, the default limit for each is 20 per region. These limits can be easily raised for ALB and CLB, but AWS is quite reluctant to raise the limit on NLBs.
üî∏ If using a Network Load Balancer (NLB) then EC2 clients cannot connect to an NLB that resides in another VPC (VPC Peering) or AWS managed VPN unless the EC2 client is a C5, i3.metal or M5 instance type. For VPC peering, both VPCs must be in the same region. See Troubleshooting.

CLB
CLB Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing
Classic Load Balancers, formerly known as Elastic Load Balancers, are HTTP and TCP load balancers that are managed and scaled for you by Amazon.

CLB Tips

Best practices: This article is a must-read if you use CLBs heavily, and has a lot more detail.

CLB Gotchas and Limitations

In general, CLBs are not as ‚Äúsmart‚Äù as some load balancers, and don‚Äôt have fancy features or fine-grained control a traditional hardware load balancer would offer. For most common cases involving sessionless apps or cookie-based sessions over HTTP, or SSL termination, they work well.
üî∏By default, CLBs will refuse to route traffic from a load balancer in one Availability Zone (AZ) to a backend instance in another. This will cause 503s if the last instance in an AZ becomes unavailable, even if there are healthy instances in other zones. If you‚Äôre running fewer than two backend instances per AZ, you almost certainly want to enable cross-zone load balancing.
üî∏Complex rules for directing traffic are not supported. For example, you can‚Äôt direct traffic based on a regular expression in the URL, like HAProxy offers.
Apex DNS names: Once upon a time, you couldn‚Äôt assign a CLB to an apex DNS record (i.e. example.com instead of foo.example.com) because it needed to be an A record instead of a CNAME. This is now possible with a Route 53 alias record directly pointing to the load balancer.
üî∏CLBs use HTTP keep-alives on the internal side. This can cause an unexpected side effect: Requests from different clients, each in their own TCP connection on the external side, can end up on the same TCP connection on the internal side. Never assume that multiple requests on the same TCP connection are from the same client!
üî∏ Traffic between CLBs and back-end instances in the same subnet will have Network ACL rules evaluated (EC2 to EC2 traffic in the same subnet would not have Network ACL rules evaluated). If the default '0.0.0.0/0 ALLOW' rule is removed from the Network ACL applied to the subnet, a rule that allows traffic on both the health check port and any listener port must be added.
As of December 2016, CLBs launched in VPCs do not support IPv6 addressing. CLBs launched in EC2-Classic support both IPv4 and IPv6 with the ""dualstack"" DNS name.

ALB
ALB Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing
üê•Websockets and HTTP/2 are now supported.
üê•Internet Protocol Version 6 (IPv6) is now supported.
üê•Load Balancing via IP is now supported.
Prior to the Application Load Balancer, you were advised to use TCP instead of HTTP as the protocol to make it work (as described here) and use the obscure but useful Proxy Protocol (more on this) to pass client IPs over a TCP load balancer.

ALB Tips

Use ALBs to route to services that are hosted on shared clusters with dynamic port assignment (like ECS or Mesos).
ALBs support HTTP host-based routing (send HTTP requests for ‚Äúapi.mydomain.com‚Äù -> {target-group-1}, ‚Äúblog.mydomain.com‚Äù -> {target group 2}) as well as HTTP path-based routing (send HTTP requests for ‚Äú/api/*‚Äù ->  {target-group-1}, ‚Äú/blog/*‚Äù -> {target group 2}).

ALB Gotchas and Limitations

üî∏ALBs only support HTTP/2 over HTTPS (no plain-text HTTP/2).
üî∏ALBs only support HTTP/2 to external clients and not to internal resources (instances/containers).
ALBs support HTTP routing but not port-based TCP routing.
Instances in the ALB‚Äôs target groups have to either have a single, fixed healthcheck port (‚ÄúEC2 instance‚Äù-level healthcheck) or the healthcheck port for a target has to be the same as its application port (‚ÄúApplication instance‚Äù-level healthcheck) - you can't configure a per-target healthcheck port that is different than the application port.
ALBs are VPC-only (they are not available in EC2 Classic)
In a target group, if there is no healthy target, all requests are routed to all targets. For example, if you point a listener at a target group containing a single service that has a long initialization phase (during which the health checks would fail), requests will reach the service while it is still starting up.
üìú Although ALBs now support SNI, they only support 25 HTTPS certificates per Load Balancer. This limitation is not described here, so it might be subject to change.

Elastic Beanstalk
Elastic Beanstalk Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
EB (Elastic Beanstalk) is a PaaS (Platform as a Service) that helps developers create, deploy and scale web applications
EB handles deployment, configuration, provisioning, load balancing, auto-scaling, monitoring, and logging
EB creates AWS resources on your behalf but you retain full access and control of the underlying resources
üí∏ There is no cost to use EB but you will still be charged the full cost of the underlying AWS resources created by EB

Elastic Beanstalk Tips

To speed up deployment before launch or in a dev stage, turn off health checks and set the Deployment policy to All at once
If you have a configuration you want to re-use for multiple EB apps, you can save the current configuration using eb config save --cfg myEBConfig
By default, EB doesn't have any alarms. You'll need to add them yourself on metrics that you're monitoring.
By default, EB doesn't enable managed platform updates. Enable them in configuration to have EB automatically apply updates during a pre-specified maintenance window

Elastic Beanstalk Gotchas and Limitations

üî∏ Don't edit [apache|nginx] conf files manually on ec2 instances as they will be re-written on each deployment (use ebextensions instead)
üî∏ After creating an EB environment, it's no longer possible to change the Name tag
üî∏ EB will sometimes quarantine instances that cause multiple deployment issues. Despite being quarantined, EB will still deploy to them on subsequent deployments. To prevent this behavior, said instances will need to be terminated (or the underlying issue fixed)
File uploads are capped at 10MB for most default eb configurations - update nginx config to change
If you edit .elasticbeanstalk/saved_configs/, be aware that this is not kept in sync with the EB environment config. You'll need to manually fetch and save for changes to take effect

Elastic IPs
Elastic IP Basics

üìí Documentation ‚àô FAQ ‚àô Pricing
Elastic IPs are static IP addresses you can rent from AWS to assign to EC2 instances.

Elastic IP Tips

üîπPrefer load balancers to elastic IPs: For single-instance deployments, you could just assign elastic IP to an instance, give that IP a DNS name, and consider that your deployment. Most of the time, you should provision a load balancer instead:

It‚Äôs easy to add and remove instances from load balancers. It‚Äôs also quicker to add or remove instances from a load balancer than to reassign an elastic IP.
It‚Äôs more convenient to point DNS records to load balancers, instead of pointing them to specific IPs you manage manually. They can also be Route 53 aliases, which are easier to change and manage.
But in some situations, you do need to manage and fix IP addresses of EC2 instances, for example if a customer needs a fixed IP. These situations require elastic IPs.


Elastic IPs are limited to 5 per account. It‚Äôs possible to request more.
If an Elastic IP is not attached to an active resource there is a small hourly fee.
Elastic IPs are no extra charge as long as you‚Äôre using them. They have a (small) cost when not in use, which is a mechanism to prevent people from squatting on excessive numbers of IP addresses.

Elastic IP Gotchas and Limitations

üî∏There is officially no way to allocate a contiguous block of IP addresses, something you may desire when giving IPs to external users. Though when allocating at once, you may get lucky and have some be part of the same CIDR block. If this is important to you, you may want to bring your own IP, which is more involved than this guide will go into.

Glacier
Glacier Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
Glacier is a lower-cost alternative to S3 when data is infrequently accessed, such as for archival purposes.
It‚Äôs only useful for data that is rarely accessed. It generally takes 3-5 hours to fulfill a retrieval request.
AWS has not officially revealed the storage media used by Glacier; it may be low-spin hard drives or even tapes.
AWS has released an even more cost effective storate tier called Glacier Deep Archive that offers ~12 hour retrieval latencies, but costs roughly a thousand dollars per month per petabyte.

Glacier Tips

You can physically ship your data to Amazon to put on Glacier on a USB or eSATA HDD.

Glacier Gotchas and Limitations

üî∏Getting files off Glacier is glacially slow (typically 3-5 hours or more).
üî∏Due to a fixed overhead per file (you pay per PUT or GET operation), uploading and downloading many small files on/to Glacier might be very expensive. There is also a 32k storage overhead per file. Hence it‚Äôs a good idea is to archive files before upload.
üí∏Be aware of the per-object costs of archiving S3 data to Glacier. It costs $0.05 per 1,000 requests. If you have large numbers of S3 objects of relatively small size, it will take time to reach a break-even point (initial archiving cost versus lower storage pricing).

RDS
RDS Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing (see also ec2instances.info/rds/)
RDS is a managed relational database service, allowing you to deploy and scale databases more easily. It supports Oracle, Microsoft SQL Server, PostgreSQL, MySQL, MariaDB, and Amazon‚Äôs own Aurora.
RDS offers out of the box support for high availability and failover for your databases.

RDS Tips

If you're looking for the managed convenience of RDS for other data stores such as MongoDB or Cassandra, you may wish to consider third-party services from providers such as mLab, Compose, or InstaClustr.
üîπMake sure to create a new parameter group and option group for your database since the default parameter group does not allow dynamic configuration changes.
RDS instances start with a default timezone of UTC. If necessary, this can be changed to a different timezone.

RDS Gotchas and Limitations

‚è±RDS instances run on EBS volumes (either general-purpose or provisioned IOPS), and hence are constrained by EBS performance.
üî∏Verify what database features you need, as not everything you might want is available on RDS. For example, if you are using Postgres, check the list of supported features and extensions. If the features you need aren't supported by RDS, you'll have to deploy your database yourself.
üî∏If you use the failover support offered by RDS, keep in mind that it is based on DNS changes, and make sure that your client reacts to these changes appropriately. This is particularly important for Java, given how its DNS resolver‚Äôs TTL is configured by default.
üî∏DB migration to RDS: While importing your database into RDS ensure you take into consideration the maintenance window settings. If a backup is running at the same time, your import can take a considerably longer time than you would have expected.
Database sizes are limited to 6TB for all database engines except for SQL Server which has a 4TB limit and Aurora which supports up to 64TB databases.

RDS MySQL and MariaDB
RDS MySQL and MariaDB Basics


 RDS offers MySQL versions 5.5, 5.6, 5.7 and 5.8.



 RDS offers MariaDB versions 10.0, 10.1, 10.2 and 10.3.



RDS MySQL and MariaDB Tips

MySQL RDS allows access to binary logs.
Multi-AZ instances of MySQL transparently replicate data across AZs using DRBD. Automated backups of multi-AZ instances run off the backup instance to reduce latency spikes on the primary.
üî∏Performance Schema: While Performance Schema is enabled by default in MySQL 5.6.6 and later, it is disabled by default in all versions of RDS. If you wish to enable Performance Schema, a reboot of the RDS instance will be required.
üî∏MySQL vs MariaDB vs Aurora: If you prefer a MySQL-style database but are starting something new, you probably should consider Aurora and MariaDB as well. Aurora has increased availability and is the next-generation solution. That said, Aurora may not be that much faster than MySQL for certain workloads. MariaDB, the modern community fork of MySQL, likely now has the edge over MySQL for many purposes and is supported by RDS.

RDS MySQL and MariaDB Gotchas and Limitations

üî∏No SUPER privileges. RDS provides some stored procedures to perform some tasks that require SUPER privileges such as starting or stopping replication.
üî∏You can replicate to non-RDS instances of MySQL, but replication to these instances will break during AZ failovers.
üî∏There is no ability to manually CHANGE MASTER on replicas, so they must all be rebuilt after a failover of the master.
üî∏Most global options are exposed only via DB parameter groups. Some variables that were introduced in later MySQL dot releases such as avoid_temporal_upgrade in MySQL 5.6.24 are not made available in RDS's 5.6.x parameter group and making use of them requires an upgrade to MySQL 5.7.x.
üî∏RDS features such as Point-In-Time restore and snapshot restore are not supported on MyISAM tables. Ensure you lock and flush each MyISAM table before executing a snapshot or backup operation to ensure consistency.

RDS PostgreSQL
RDS PostgreSQL Basics

RDS offers PostgreSQL 9.3, 9.4, 9.5, 9.6, and 10.

RDS PostgreSQL Tips

Recently Logical Replication is being supported, both as subscriber and publisher.
Supports a relatively large range of native extensions.
RDS PostgreSQL 10 Supports native partitioning and most of the major features and tunables.
Supports connections over SSL.
Supports multi A-Z and Point-in-time recovery.

RDS PostgreSQL Gotchas and Limitations

No superuser privileges. RDS provides a role rds_superuser that can do most of the needed operations but there are some limitations.
Some major features are delayed compared to open source PostgreSQL.
By default RDS is spec‚Äôd with general purpose SSD , if you need better performance you have to spec provisioned IOPS SSD.
You can't use RDS as a replica outside RDS without using logical replication.
There are settings that cannot be changed and most of the settings that can change can only be changed using database parameter groups.
It‚Äôs harder to troubleshoot performance problems since you have no access to the host.
Be sure to verify that all the extensions you need are available. If you are using an extension not listed there, you will need to come up with a work around, or deploy your own database in EC2.
Many Postgres utilities and maintenance items expect command line access, that can usually be satisfied by using an external ec2 server.

RDS SQL Server
RDS SQL Server Basics

RDS offers SQL Server 2008 R2, 2012, 2014, 2016 and 2017 including Express, Web, Standard and Enterprise.

RDS SQL Server Tips

Recently added support for backup and restore to/from S3 which may make it an attractive DR option for on-premises installations.

RDS SQL Server Gotchas and Limitations

üî∏The user is granted only db_owner privileges for each database on the instance.
üî∏Storage cannot be expanded for existing databases. If you need more space, you must restore your database on a new instance with larger storage.
üî∏There is a 16TB database size limit for non-Express editions. There is also a minimum storage size, 20GB for Web and Express, 200GB for Standard and Enterprise.
üî∏Limited to 30 databases per instance

RDS Aurora
RDS Aurora Basics
Aurora is a cloud only database service designed to provide a distributed, fault-tolerant relational database with self-healing storage and auto-scaling up to 64TB per instance.  It currently comes in two versions, a MySQL compatible system, and a PostgreSQL compatible system.
RDS Aurora MySQL
RDS Aurora MySQL Basics

Amazon‚Äôs proprietary fork of MySQL intended to scale up for high concurrency workloads. Generally speaking, individual query performance under Aurora is not expected to improve significantly relative to MySQL or MariaDB, but Aurora is intended to maintain performance while executing many more queries concurrently than an equivalent MySQL or MariaDB server could handle.
Notable new features include:

Log-structured storage instead of B-trees to improve write performance.
Out-of-process buffer pool so that databases instances can be restarted without clearing the buffer pool.
The underlying physical storage is a specialized SSD array that automatically maintains 6 copies of your data across 3 AZs.
Aurora read replicas share the storage layer with the write master which significantly reduces replica lag, eliminates the need for the master to write and distribute the binary log for replication, and allows for zero-data-loss failovers from the master to a replica. The master and all the read replicas that share storage are known collectively as an Aurora cluster. Read replicas can span up to 5 regions.



RDS Aurora MySQL Tips

In order to take advantage of Aurora‚Äôs higher concurrency, applications should be configured with large database connection pools and should execute as many queries concurrently as possible. For example, Aurora servers have been tested to produce increasing performance on some OLTP workloads with up to 5,000 connections.
Aurora scales well with multiple CPUs and may require a large instance class for optimal performance.
The easiest migration path to Aurora is restoring a database snapshot from MySQL 5.6 or 5.7. The next easiest method is restoring a dump from a MySQL-compatible database such as MariaDB. For low-downtime migrations from other MySQL-compatible databases, you can set up an Aurora instance as a replica of your existing database. If none of those methods are options, Amazon offers a fee-based data migration service.
You can replicate from an Aurora cluster to MySQL or to another Aurora cluster. This requires binary logging to be enabled and is not as performant as native Aurora replication.
Because Aurora read replicas are the equivalent of a multi-AZ backup and they can be configured as zero-data-loss failover targets, there are fewer scenarios in which the creation of a multi-AZ Aurora instance is required.

RDS Aurora MySQL Gotchas and Limitations

üî∏Aurora 1.x is based on MySQL 5.6.x with some cherry-picking of later MySQL features. It is missing most 5.7 features as well as some online DDL features introduced in 5.6.17.
üî∏Aurora 2.x is based on MySQL 5.7.x
Aurora does not support GTID transactions in either the 5.6/Aurora 1.x or the 5.7/Aurora 2.x release lines.
Aurora maximum cluster size is 64 TB

RDS Aurora PostgreSQL
RDS Aurora PostgreSQL Basics

Amazon‚Äôs proprietary fork of PostgreSQL, intended to scale up for high concurrency workloads while maintaining ease of use. Currently based on PostgreSQL 9.6.
Higher throughput (up to 3x with similar hardware).
Automatic storage scale in 10GB increments up to 64TB.
Low latency read replicas that share the storage layer with the master which significantly reduces replica lag.
Point in time recovery.
Fast database snapshots.

RDS Aurora PostgreSQL Tips

Aurora Postgres by default is supposed to utilize high connection rates and for this reason connection pooling must be configured accordingly.
Because Aurora is based on PostgreSQL 9.6, it lacks features like declarative partitioning or logical replication.

RDS Aurora PostgreSQL Gotchas and Limitations

Aurora PostgreSQL falls behind normal RDS when it comes to available versions, so if you need features from the latest PostgreSQL version you might be better off with plain RDS.
Patching and bug fixing is separate from open source PostgreSQL.

ElastiCache
ElastiCache Basics

üìí Homepage ‚àô User
guide for Redis ‚àô User
guide for Memcached ‚àô
FAQ ‚àô
Pricing
ElastiCache is a managed in-memory cache service, that can be used to
store temporary data in a fast in-memory cache, typically in order to avoid
repeating the same computation multiple times when it could be reused.
It supports both the Memcached and
Redis open source in-memory cache software and exposes
them both using their native access APIs.
The main benefit is that AWS takes care of running, patching and optimizing
the cache nodes for you, so you just need to launch a cluster and configure
its endpoint in your application, while AWS will take of most of the operational
work of running the cache nodes.

ElastiCache Tips

Choose the
engine,
clustering configuration and instance
type
carefully based on your application needs. The documentation explains in
detail the pros, cons and limitations of each engine in order to help you
choose the best fit for your application. In a nutshell, Redis is
preferable for storing more complex data structures, while Memcached is just a
plain key/value store. The simplicity of Memcached allows it to be slightly
faster and allows it to scale out if needed, but Redis has more features which
you may use in your application.
For Memcached AWS provides enhanced SDKs for certain programming languages
which implement
auto-discovery,
a feature not available in the normal memcached client libraries.

ElastiCache Gotchas and Limitations

Since in some cases changing the cache clusters may have some restrictions,
like for
scaling
purposes, it may become a problem if they were launched using CloudFormation
in a stack that also contains other resources and you really need to change
the cache. In order to avoid getting your CloudFormation stacks in a
non-updateable state, it is recommended to launch ElastiCache clusters (just
like any other resource with similar constraints) in dedicated stacks which
can be replaced entirely with new stacks having the desired configuration.

DynamoDB
DynamoDB Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
DynamoDB is a NoSQL database with focuses on speed, flexibility, and scalability.
DynamoDB is priced on a combination of throughput and storage.

DynamoDB Alternatives and Lock-in

‚õì Unlike the technologies behind many other Amazon products, DynamoDB is a proprietary AWS product with no interface-compatible alternative available as an open source project. If you tightly couple your application to its API and featureset, it will take significant effort to replace.
The most commonly used alternative to DynamoDB is Cassandra.

DynamoDB Tips

There is a local version of DynamoDB provided for developer use.
DynamoDB Streams provides an ordered stream of changes to a table. Use it to replicate, back up, or drive events off of data
DynamoDB can be used as a simple locking service.
DynamoDB indexing can include primary keys, which can either be a single-attribute hash key or a composite hash-key range. You can also query non-primary key attributes using secondary indexes.
Data Types: DynamoDB supports three data types ‚Äì number, string, and binary ‚Äì in both scalar and multi-valued sets. DynamoDB can also support JSON.
As of late 2017, DynamoDB supports both global tables and backup / restore functionality.

DynamoDB Gotchas and Limitations

üî∏ DynamoDB doesn‚Äôt provide an easy way to bulk-load data (it is possible through Data Pipeline) and this has some unfortunate consequences. Since you need to use the regular service APIs to update existing or create new rows, it is common to temporarily turn up a destination table‚Äôs write throughput to speed import. But when the table‚Äôs write capacity is increased, DynamoDB may do an irreversible split of the partitions underlying the table, spreading the total table capacity evenly across the new generation of tables. Later, if the capacity is reduced, the capacity for each partition is also reduced but the total number of partitions is not, leaving less capacity for each partition. This leaves the table in a state where it much easier for hotspots to overwhelm individual partitions.
üî∏ It is important to make sure that DynamoDB resource limits are compatible with your dataset and workload. For example, the maximum size value that can be added to a DynamoDB table is 400 KB (larger items can be stored in S3 and a URL stored in DynamoDB).
üî∏ Dealing with time series data in DynamoDB can be challenging. A global secondary index together with down sampling timestamps can be a possible solution as explained here.
üî∏ DynamoDB does not allow an empty string as a valid attribute value. The most common work-around is to use a substitute value instead of leaving the field empty.
üî∏ When setting up fine grained policies for access to DynamoDB tables, be sure to include their secondary indices in the policy document as well.

ECS
ECS Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
ECS (EC2 Container Service) is a relatively new service (launched end of 2014) that manages clusters of services deployed via Docker.
See the Containers and AWS section for more context on containers.
ECS is growing in adoption, especially for companies that embrace microservices.
Deploying Docker directly in EC2 yourself is another common approach to using Docker on AWS. Using ECS is not required, and ECS does not (yet) seem to be the predominant way many companies are using Docker on AWS.
It‚Äôs also possible to use Elastic Beanstalk with Docker, which is reasonable if you‚Äôre already using Elastic Beanstalk.
Using Docker may change the way your services are deployed within EC2 or Elastic Beanstalk, but it does not radically change how most other services are used.
ECR (EC2 Container Registry) is Amazon‚Äôs managed Docker registry service. While simpler than running your own registry, it is missing some features that might be desired by some users:

Doesn‚Äôt support cross-region replication of images.

If you want fast fleet-wide pulls of large images, you‚Äôll need to push your image into a region-local registry.


Doesn‚Äôt support custom domains / certificates.


A container‚Äôs health is monitored via CLB or ALB. Those can also be used to address a containerized service. When using an ALB you do not need to handle port contention (i.e. services exposing the same port on the same host) since an ALB‚Äôs target groups can be associated with ECS-based services directly.
The Hitchhikers Guide to AWS ECS and Docker by J. Cole Morrison is an excellent article for Introduction to AWS ECS concepts.

ECS Tips

Log drivers: ECS supports multiple log drivers (awslogs, splunk, fluentd, syslog, json, ... ). Use awslogs for CloudWatch (make sure a group is made for the logs first). Drivers such as fluentd are not enabled by default. You can, install the agent and enable the driver by adding ECS_AVAILABLE_LOGGING_DRIVERS='[""awslogs"",""fluentd""]' to /etc/ecs/ecs.config.
This blog from Convox (and commentary) lists a number of common challenges with ECS as of early 2016.
It is possible to optimize disk clean up on ECS. By default, the unused containers are deleted after 3 hours and the unused images after 30 minutes. These settings can be changed by adding ECS_ENGINE_TASK_CLEANUP_WAIT_DURATION=10m and ECS_IMAGE_CLEANUP_INTERVAL=10m to /etc/ecs/ecs.config. More information on optimizing ECS disk cleanup.

ECS Alternatives and Lock-in

Kubernetes: Extensive container platform. Available as a hosted solution on Google Cloud (https://cloud.google.com/container-engine/) and AWS (https://tectonic.com/). AWS has a Kubernetes Quickstart (https://aws.amazon.com/quickstart/architecture/heptio-kubernetes/) developed in collaboration with Heptio.
Nomad: Orchestrator/Scheduler, tightly integrated in the Hashicorp stack (Consul, Vault, etc).

üöß Please help expand this incomplete section.
EKS
EKS Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing
EKS (Elastic Kubernetes Service) is a new service (launched June 2018) that provides managed Kubernetes Masters in a Highly Available pair to deploy K8s Services and Pods on top of EC2 based Kubernetes nodes.
See the Containers and AWS section for more context on containers.
EKS is AWS's solution to hosting Kubernetes natively on AWS. It is not a replacement for ECS directly but is in response to the large market dominance of Kubernetes.
EKS does not launch EC2 nodes and would have to be configured and setup either manually or via Cloudformation (or other automation solution)
EKS management is done through a utility called kubectl, and with Kube configuration files. These files will need to be configured to speak with the K8s Master with a certificate and URL. The AWS CLI can autogenerate the configuration file that kubect requires for communicating with the cluster.1
EKS authentication is integrated with IAM roles/permissions. The AWS CLI has an integrated sub-command for generating authentication tokens.2 This was formerly done via a custom plugin for kubectl called aws-iam-authenticator (formerly heptio-authenticator-aws).
EKS provides Calico from Tigera for securing workloads within a cluster using Kubernetes network policy.

EKS Tips

Multiple clusters can be supported by using different kubeconfig files.
AWS has a Kubernetes Quickstart developed in collaboration with Heptio.

EKS Alternatives and Lock-in

ECS: Amazon's native Container Scheduled platform released in 2014.  If you don't utilise containers today and are looking to get started, ECS is an excellent product.
Kubernetes: Extensive container platform. Available as a hosted solution on Google Cloud, AWS, Digital Ocean and Azure.
Nomad: Orchestrator/Scheduler, tightly integrated in the Hashicorp stack (Consul, Vault, etc).

EKS Gotchas and Limitations

Pods and Service configurations can rapidly consume IP addresses inside a VPC.  Proper care and maintenance should be applied to ensure IP exhaustion does not occur.
There is currently no integrated monitoring in CloudWatch for EKS pods or services, you will need to deploy a monitoring system that supports Kubernetes such as Prometheus.
Autoscaling based off CPU/Memory of a node is limited as you will not be aware of pending Services/Pods that cannot start. Using cluster-autoscaler can be useful for scaling based on Node resource usage and unschedulable Pods.
Prometheus is a very popular monitoring solution for K8s, metrics and alerts can be used to send events to Lambda, SQS or other solutions to take autoscaling actions.

Footnotes
1: https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html
2: https://aws.amazon.com/about-aws/whats-new/2019/05/amazon-eks-simplifies-kubernetes-cluster-authentication/
Fargate
Fargate Basics

üìí Homepage ‚àô FAQ ‚àô Pricing
Fargate allows you to manage and deploy containers without having to worry about running the underlying compute infrastructure
Fargate serves as a new backend (in addition to the legacy EC2 backend) on which ECS and EKS tasks can be run
Fargate and EC2 backends are called ""Launch Types""
Fargate allows you to treat containers as fundamental building blocks of your infrastructure

Fargate Tips

Fargate follows a similar mindset to Lambda, which lets you focus on applications, instead of dealing with underlying infrastructure
Fargate is supported by CloudFormation, aws-cli and ecs-cli
Fargate tasks can be launched alongside tasks that use EC2 Launch Type
üí∏Before creating a large Fargate deployment, make sure to estimate costs and compare them against alternative solution that uses traditional EC2 deployment - Fargate prices can be several times those of equivalently-sized EC2 instances. To evaluate both solutions based on potential costs, refer to pricing for EC2 and Fargate.

Fargate Alternatives and Lock-in

üö™Azure Container Instances: Available on Microsoft Azure in preview version, allows to run applications in containers without having to manage virtual machines

Fargate Gotchas and Limitations

As of April 2018, Fargate is available in multiple regions: us-east-1, us-east-2, us-west-2, and eu-west-1
As of January 2019, Fargate can only be used with ECS. Support for EKS was originally planned for 2018, but has yet to launch.
The smallest resource values that can be configured for an ECS Task that uses Fargate is 0.25 vCPU and 0.5 GB of memory
Task storage is ephemeral. After a Fargate task stops, the storage is deleted.

Lambda
Lambda Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
Lambda is AWS' serverless compute offering, allowing users to define Lambda functions in a selection of runtimes that can be invoked via a variety of triggers, including SNS notifications and API Gateway invocations. Lambda is the key service that enables 'serverless' architecture on AWS, alongside AWS API Gateway, AWS Batch, and AWS DynamoDB.

Lambda Tips

The idea behind 'serverless' is that users don't manage provisioning, scaling, or maintenance of the physical machines that host their application code. With Lambda, the machine that actually executes the user-defined function is abstracted as a 'container'. When defining a Lambda function, users are able to declare the amount of memory available to the function, which directly affects the physical hardware specification of the Lambda container.
Changing the amount of memory available to your Lambda functions also affects the amount of CPU power available to it.
While AWS does not offer hard guarantees around container reuse, in general it can be expected that an unaltered Lambda function will reuse a warm (previously used) container if called shortly after another invocation. Users can use this as a way to optimize their functions by smartly caching application data on initialization.
A Lambda that hasn't been invoked in some time may not have any warm containers left. In this case, the Lambda system will have to load and initialize the Lambda code in a 'cold start' scenario, which can add significant latency to Lambda invocations.
There are a few strategies to avoiding or mitigating cold starts, including keeping containers warm by periodic triggering and favoring lightweight runtimes such as Node as opposed to Java.
Lambda is integrated with AWS CloudWatch and provides a logger at runtime that publishes CloudWatch events.
Lambda offers out-of-the-box opt-in support for AWS X-Ray. X-Ray can help users diagnose Lambda issues by offering in-depth analysis of their Lambda's execution flow. This is especially useful when investigating issues calling other AWS services as X-Ray gives you a detailed and easy-to-parse visualization of the call graph.
Using timed CloudWatch events, users can use Lambda to run periodic jobs in a cron-like manner.
Events sent to Lambda that fail processing can be managed using a Dead Letter Queue (DLQ) in SQS.
More on serverless:

Martin Fowler's thoughts.
AWS Serverless Application Model (SAM), a simplification built on top of CloudFormation that can help to define, manage, and deploy serverless applications using Lambda.
Serverless, one of the most popular frameworks for building serverless applications using AWS Lambda and other serverless compute options.
Other helpful frameworks.



Lambda Alternatives and Lock-in

üö™Other clouds offer similar services with different names, including Google Cloud Functions, Azure Functions, and IBM OpenWhisk. Also if your are running Kubernetes another Lambda alternative is OpenFaaS

Lambda Gotchas and Limitations

üî∏Testing Lambdas, locally and remotely, can be a challenge. Several tools are available to make this easier, including the officially supported SAM Local.
üî∏Managing lots of Lambda functions is a workflow challenge, and tooling to manage Lambda deployments is still immature.
üî∏AWS‚Äô official workflow around managing function versioning and aliases is painful. One option is to avoid Lambda versioning by abstracting your deployment workflow outside of Lambda. One way this can be accomplished is by deploying your application in successive stages, with a distinct AWS account per stage, where each account only needs to be aware of the latest version, and rollbacks and updates are handled by external tooling.
üî∏As of Oct 2017, the minimum charge for a Lambda invocation is 100ms, so there is no cost-benefit to reducing your run time below that.
üî∏While adding/removing S3 buckets as triggers for Lambda function, this error may occur: ""There was an error creating the trigger: Configuration is ambiguously defined. Cannot have overlapping suffixes in two rules if the prefixes are overlapping for the same event type."" In this case, you can manually remove the Lambda event in the ""Events"" tab in the ""Properties"" section of the S3 bucket.
üî∏Managing the size of your deployment artifact can be a challenge, especially if using Java. Options to mitigate this include proguard and loading dependencies at runtime into /tmp.
When using DynamoDB as a trigger for your Lambda functions, this error may occur: ""PROBLEM: internal Lambda error. Please contact Lambda customer support."" This usually just means that Lambda can't detect anything in the DynamoDB stream within the last 48 hours. If the issue persists, deleting and recreating your trigger may help.
üî∏If your lambda needs access to resources in a VPC (for example ElastiCache or RDS), it will need to be deployed within it. This will increase cold-start times as an Elastic Network Interface (ENI) will have to be registered within the VPC for each concurrent function. AWS also has a relatively low initial limit (350) on the number ENI's that can be created within an VPC, however this can be increased to the 1000s if a good case is made to AWS support.
üî∏ Lambda has several resource limits as of 2017-06:

A 6MB request or response payload size.
A 50 MB limit on the compressed .zip/.jar file deployment package size.
A 250 MB limit on the code/dependencies in the package before compression.
A 500 MB limit on local storage in /tmp.



Lambda Code Samples

Fan-out is an example of using Lambda to ‚Äúfan-out‚Äù or copy data from one service, in this case Kinesis, to multiple other AWS data services. Destinations for fan-out data in the sample include IoT, SQS and more.
This AWS limit monitor using Lambdas shows use of multiple Lambdas for monitoring.
This Lambda ECS Worker Pattern shows use of Lambda in a workflow where data from S3 is picked up by the Lambda, pushed to a queue, then sent to ECS for more processing.
The Secure Pet Store is a sample Java application which uses Lambda and API Gateway with Cognito (for user identity).
aws-lambda-list is a list of ""hopefully useful AWS lambdas and lambda-related resources"". Quite a few code samples here; as usual, not guaranteed tested. Caveat Emptor.

üöß Please help expand this incomplete section.
API Gateway
API Gateway Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
API Gateway provides a scalable, secured front-end for service APIs, and can work with Lambda, Elastic Beanstalk, or regular EC2 services.
It allows ‚Äúserverless‚Äù deployment of applications built with Lambda.
üî∏Switching over deployments after upgrades can be tricky. There are no built-in mechanisms to have a single domain name migrate from one API gateway to another one. So it may be necessary to build an additional layer in front (even another API Gateway) to allow smooth migration from one deployment to another.

API Gateway Alternatives and Lock-In

Kong is an open-source, on-premises API and microservices gateway built on nginx with Lua. Kong is extensible through ‚Äúplugins‚Äù.
Tyk is an open-source API gateway implemented in Go and available in the cloud, on-premises or hybrid.

API Gateway Tips

üîπPrior to 2016-11, you could only send and receive plain text data (so people would base64-encode binary data), but binary data is now supported.
API Gateway supports the OpenApi specification (aka Swagger). This allows you to describe your API in a language-agnostic way and use various tools to generate code supporting your API.
Generating clients is extremely easy, either through the AWS console or using the get-sdk API.
API Gateway integrates with CloudWatch out-of-the-box, allowing for easy logging of requests and responses.

Note that if your request or response are too large, CloudWatch will truncate the log. For full request/reply logging, make sure to do so in your integration (e.g. Lambda).
A good practice when calling API Gateway APIs is to log the request ID on the client. You can later refer to these request IDs in CloudWatch for easier tracing and debugging.


There are multiple ways to secure your API, including built-in support for AWS Cognito. For most use-cases, Cognito is the easiest and simplest way to authenticate users.

Although you can roll your own solution using a custom authorizer, which is basically a Lambda you define that determines if a request is acceptable or not.


While API Gateway lends itself well to REST-style development, it's perfectly reasonable to implement an RPC-style API in API Gateway as well. Depending on your use-case, this can often lead to a much simpler API structure and smoother client experience.

RPC-style APIs are particularly useful when designing services that sit deeper in the stack and don't serve content directly to users.



API Gateway Gotchas and Limitations

üî∏API Gateway only supports encrypted (https) endpoints, and does not support unencrypted HTTP. (This is probably a good thing.)
üî∏API Gateway doesn‚Äôt support multi-region deployments for high availability. It is a service that is deployed in a single region but comes with a global endpoint that is served from AWS edge locations (similar to a CloudFront distribution). You cannot have multiple API Gateways with the same hostname in different AWS regions and use Route 53 to distribute the traffic. More in this forum post.
üî∏Integration timeout: All of the various integration types (eg: Lambda, HTTP) for API Gateway have timeouts, as described here. Unlike some limits, these timeouts can't be increased.
üî∏API Gateway returns a 504 status code for any network or low level transport related issue. When this happens, you may see a message in the CloudWatch logs for the request that includes the message: Execution failed due to an internal error. One possible reason for this error is that even though your backend server is up and running, it may be doing something outside of the HTTP specification (like not sending well-formed chunked messages). You can test by hitting your backend directly with the curl --raw -S -i <backend-endpoint-url> and seeing if it complains.
üî∏AWS X-Ray support exists but cumbersome to use. If you have other AWS services calling API Gateway, your trace will seemingly end there. API Gateway will also not appear as a node in your service map. More here.
üî∏Be careful using the export feature. The resulting Swagger template is often incomplete and doesn't integrate well with the Swagger extensions for things such as CORS.
üî∏Many changes to API Gateway resources need to be 'deployed' via console or API call. Unfortunately, API Gateway is terrible about notifying the user when changes are staged for deployment and what changes require deployment. If you've changed something about your API and it's not taking effect, there's a decent chance you just need to deploy it.

In particular, when deploying an API Gateway as part of a CloudFormation stack, changes will not automatically deploy unless the deployment resource itself was changed. You can change work around this by always changing the deployment resource on a CloudFormation update, or running a custom resource that ensures the deployment is made.
Alternatively, by using the Serverless Application Model definition for an API Gateway resource, you can always expect the API to be deployed on a stack update since SAM will generate a new deployment every time.


üî∏API Gateway does not support nested query parameters on method requests.
üî∏API Gateway limits number of resources to 300, as described here. This is something to be considered when you start using API Gateway as a platform where your team/organization deploys to the same API Gateway.

üöß Please help expand this incomplete section.
Step Functions
Step Functions Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
Step Functions is AWS‚Äô way to create state machines that manage a serverless workflow.

Step Functions Tips

A variety of structures are supported including branching, parallel operations and waits
Tasks represent the real work nodes and are frequently Lambda functions, but can be Activities which are externally driven tasks implemented any way you like.
State machines have data that ""flows"" through the steps and can be modified and added to as the state machine executes.
It's best if your tasks are idempotent, in part because you may want to re-run the state machine with the same input data during debugging
The AWS Console facilitates your examining the execution state at various steps.

The console lets you do this with a few steps:

select the ""input"" tab from the failed execution
copy the input data (JSON)
select the state machine name in the breadcrumbs
start a new execution, pasting the input data you copied previously





Step Functions Gotchas and Limitations

Step Functions are free tier eligible up to an initial 4000 transitions per month. Thereafter, the charge is $0.025 per 1000 state transitions.
You can have many, simultaneous, executions, but be aware of lambda throttling limits. This has been per-account, pre-region, but recently became settable per-lambda.
Step Function executions are limited to 25,000 events. Each step creates multiple events. This means that iterating a loop using Lambda is limited to an iteration count of around 3000 before needing to continue as a new execution.

Route 53
Route 53 Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
Route 53 is AWS‚Äô DNS service.

Route 53 Alternatives and Lock-In

Historically, AWS was slow to penetrate the DNS market (as it is often driven by perceived reliability and long-term vendor relationships) but Route 53 has matured and is becoming the standard option for many companies. Route 53 is cheap by historic DNS standards, as it has a fairly large global network with geographic DNS and other formerly ‚Äúpremium‚Äù features. It‚Äôs convenient if you are already using AWS.
‚õìGenerally you don‚Äôt get locked into a DNS provider for simple use cases, but increasingly become tied in once you use specific features like geographic routing or Route 53‚Äôs alias records.
üö™Many alternative DNS providers exist, ranging from long-standing premium brands like UltraDNS and Dyn to less well known, more modestly priced brands like DNSMadeEasy. Most DNS experts will tell you that the market is opaque enough that reliability and performance don‚Äôt really correlate well with price.
‚è±Route 53 is usually somewhere in the middle of the pack on performance tests, e.g. the SolveDNS reports.

Route 53 Tips

üîπKnow about Route 53‚Äôs ‚Äúalias‚Äù records:

Route 53 supports all the standard DNS record types, but note that alias resource record sets are not standard part of DNS, but a specific Route 53 feature. (It‚Äôs available from other DNS providers too, but each provider has a different name for it.)
Aliases are like an internal name (a bit like a CNAME) that is resolved internally on the server side. For example, traditionally you could have a CNAME to the DNS name of a CLB or ALB, but it‚Äôs often better to make an alias to the same load balancer. The effect is the same, but in the latter case, externally, all a client sees is the target the record points to.
It‚Äôs often wise to use alias record as an alternative to CNAMEs, since they can be updated instantly with an API call, without worrying about DNS propagation.
You can use them for CLBs/ALBs or any other resource where AWS supports it.
Somewhat confusingly, you can have CNAME and A aliases, depending on the type of the target.
Because aliases are extensions to regular DNS records, if exported, the output zone file will have additional non-standard ‚ÄúALIAS‚Äù lines in it.


Latency-based routing allows users around the globe to be automatically directed to the nearest AWS region where you are running, so that latency is reduced.
Understand that domain registration and DNS management (hosted zones) are two separate Route 53 services. When you buy/transfer a domain, Route 53 automatically assigns four name servers to it (e.g. ns-2.awsdns-00.com). Route 53 also offers to automatically create a hosted zone for DNS management, but you are not required do your DNS management in the same account or even in Route 53; you just need to create an NS record pointing to the servers assigned to your domain in Route 53.
One use case would be to put your domain registration (very mission critical) in a bastion account while managing the hosted zones within another account which is accessible by your applications.

Route 53 Gotchas and Limitations

üî∏Private Hosted Zone will only respond to DNS queries that originate from within a VPC. As a result Route53 will not respond to request made via a VPN or Direct connect. To get around this you will need to implement Hybrid Cloud DNS Solutions or use the Simple AD provided IP addresses to query the hosted zone.

CloudFormation
CloudFormation Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing at no additional charge
CloudFormation allows you to manage sets of resources from other AWS services grouped into stacks. CloudFormation allows you to define these stacks in a template using JSON or YAML. CloudFormation is one of the major services underpinning AWS' infrastructure as code capabilities and is crucial in enabling repeatable and consistent deployments of infrastructure.
üí∏CloudFormation itself has no additional charge; you pay for the underlying resources.

CloudFormation Alternatives and Lock-In

Hashicorp‚Äôs Terraform is a third-party alternative that can support other cloud platforms/providers including Azure and OpenStack.
üî∏Some AWS features may not be available in Terraform (e.g. multi-AZ ElastiCache using Redis), and you may have to resort to embedded CloudFormation templates.
Pulumi enables teams to define and deliver Cloud Native Infrastructure as Code on any cloud, with any language. From containers to serverless to Kubernetes to infrastructure.

CloudFormation Tips

Validate your stack in a different AWS account! CloudFormation truly shines when making multiple deployments of the same stack to different accounts and regions. A common practice is to deploy stacks in successive stages ending in a production rollout.
Avoid potentially time-consuming syntax errors from eating into your deployment time by running validate-template.
CloudFormation is sometimes slow to update what resources (and new features on old services) a user is able to define in the template. If you need to deploy a resource or feature that isn't supported by the template, CloudFormation allows running arbitrary code (using Lambda) on a stack create or update via custom resources.
Custom resources make CloudFormation into a truly powerful tool, as you can do all sorts of neat things quite easily such as sanity tests, initial configuration of Dynamo tables or S3 buckets, cleaning up old CloudWatch logs, etc.

For writing Custom Resources in Java, cfnresponse comes in very handy.
For writing Custom Resources in Javascript, AWS provides a good reference in the documentation.


CloudFormation offers a visual template designer that can be useful when getting up to speed with the template syntax.
By using StackSets, users can define and deploy an entire production application consisting of multiple stacks (one service per stack) in a single CloudFormation template.
If you're developing a serverless application (i.e., using Lambda, API Gateway) CloudFormation offers a simplified template format called SAM.
‚ùóUse a restrictive stack policy! Without one, you can inadvertently delete live production resources, probably causing a severe outage.
‚ùóTurn on termination protection on all of your stacks to avoid costly accidents!
The CloudFormation template reference is indispensable when discovering what is and isn't possible in a CloudFormation template.
Troposphere is a Python library that makes it much easier to create CloudFormation templates.

Currently supports AWS and OpenStack resource types.
Troposphere attempts to support all resources types that can be described in CloudFormation templates.
Built in error checking.
A recommended soft dependency is awacs, which allows you to generate AWS access policy in JSON by writing Python code.


stacker is a Python application that makes it easy to define, configure, orchestrate and manage dependencies for CloudFormation stacks across multiple user-defined environments.
If you are building different stacks with similar layers, it may be useful to build separate templates for each layer that you can reuse using AWS::CloudFormation::Stack.
üî∏Avoid hardcoding resource parameters that can potentially change. Use stack parameters as much as you can, and resort to default parameter values.
üîπUntil 2016, CloudFormation used only an awkward JSON format that makes both reading and debugging difficult. To use it effectively typically involved building additional tooling, including converting it to YAML, but now this is supported directly.
Wherever possible, export relevant physical IDs from your Stacks by defining Outputs in your CloudFormation Templates. These are the actual names assigned to the resources being created. Outputs can be returned from DescribeStack API calls, and get imported to other Stacks as part of the recent addition of cross-stack references.
-Note that importing outputs in a stack from another stack creates a hard dependency that is tracked by CloudFormation. You will not be able to delete the stack with the outputs until there are no importing stacks.
CloudFormation can be set up to send SNS notifications upon state changes, enabling programmatic handling of situations where stacks fail to build, or simple email alerts so the appropriate people are informed.
CloudFormation allows the use of conditionals when creating a stack.

One common way to leverage this capability is in support of multi-environment CloudFormation templates ‚Äì by configuring them to use ‚Äòif-else‚Äô statements on the value of a parameter passed in (e.g.  ‚Äúenv‚Äù), environment-specific values for things like VPC IDs, SecurityGroup IDs, and AMI names can be passed into reusable generic templates.


Version control your CloudFormation templates! In the Cloud, an application is the combination of the code written and the infrastructure it runs on. By version controlling both, it is easy to roll back to known good states.
Avoid naming your resources explicitly (e.g. DynamoDB tables). When deploying multiple stacks to the same AWS account, these names can come into conflict, potentially slowing down your testing. Prefer using resource references instead.
For things that shouldn't ever be deleted, you can set an explicit DeletionPolicy on the resource that will prevent the resource from being deleted even if the CloudFormation stack itself is deleted. This is useful for anything that can maintain expensive-to-rebuild state, such as DynamoDB tables, and things that are exposed to the outside world, such as API Gateway APIs.

CloudFormation Gotchas and Limitations

üî∏A given CloudFormation stack can end up in a wide variety of states. Error reporting is generally weak, and often times multiple observe-tweak-redeploy cycles are needed to get a working template. The internal state machine for all the varying states is extremely opaque.
üî∏Some cross-region operations are not possible in CloudFormation without using a custom resource, such as cross-region SNS subscriptions.
üî∏While having hand-made resources live alongside CloudFormation-created resources is inadvisable, it's sometimes unavoidable. If at all possible, leave ALL resource management up to a CloudFormation template and only provide read-only access to the console.
‚ùóModifications to stack resources made outside CloudFormation can potentially lead to stacks stuck in UPDATE_ROLLBACK_FAILED mode. Stacks in this state can be recovered using the continue-update-rollback command. This command can be initiated in the console or in the CLI. The --resources-to-skip parameter usable in the CLI can be useful if the continue-update-rollback command fails. New feature Drift Detection can be used to detect outside changes made to stack.
üî∏CloudFormation is useful but complex and with a variety of pain points. Many companies find alternate solutions, and many companies use it, but only with significant additional tooling.
üî∏CloudFormation can be very slow, especially for items like CloudFront distributions and Route53 CNAME entries.
üî∏It‚Äôs hard to assemble good CloudFormation configurations from existing state. AWS does offer a trick to do this, but it‚Äôs very clumsy.

CloudFormer also hasn't been updated in ages (as of Oct 2017), doesn't support templatizing many new services, and won't fully define even existing services that have since been updated. For example, Dynamo tables defined through CloudFormer won't contain TTL definitions or auto-scaling configuration. There is a third-party version of the tool with more supported resources called Former2.


üî∏Many users don‚Äôt use CloudFormation at all because of its limitations, or because they find other solutions preferable. Often there are other ways to accomplish the same goals, such as local scripts (Boto, Bash, Ansible, etc.) you manage yourself that build infrastructure, or Docker-based solutions (Convox, etc.).
üî∏Deploying large stacks (i.e., many resources) can be problematic due to unintuitive API limits. For instance, API Gateway's CreateDeployment API has a default limit of 3 requests per minute as of 1/12/2018. This limit is readily exceeded even in moderately-sized CloudFormation stacks. Creating CW alarms is another commonly seen limit (PutMetricAlarm, 3 tps as of 1/12/2018) especially when creating many autoscaling policies for DynamoDB. One way to work around this limit is to include CloudFormation 'DependsOn' clauses to artificially chain resource creation.
üî∏Creating/deleting stacks can be a little less clean than ideal. Some resources will leave behind traces in your AWS account even after deletion. E.g., Lambda will leave behind CloudWatch log groups that never expire.

VPCs, Network Security, and Security Groups
VPC Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Security groups ‚àô Pricing
VPC (Virtual Private Cloud) is the virtualized networking layer of your AWS systems.
Most AWS users should have a basic understanding of VPC concepts, but few need to get into all the details. VPC configurations can be trivial or extremely complex, depending on the extent of your network and security needs.
All modern AWS accounts (those created after 2013-12-04) are ‚ÄúEC2-VPC‚Äù accounts that support VPCs, and all instances will be in a default VPC. Older accounts may still be using ‚ÄúEC2-Classic‚Äù mode. Some features don‚Äôt work without VPCs, so you probably will want to migrate.

VPC and Network Security Tips


‚ùóSecurity groups are your first line of defense for your servers. Be extremely restrictive of what ports are open to all incoming connections. In general, if you use CLBs, ALBs or other load balancing, the only ports that need to be open to incoming traffic would be port 22 and whatever port your application uses. Security groups access policy is 'deny by default'.


Port hygiene: A good habit is to pick unique ports within an unusual range for each different kind of production service. For example, your web frontend might use 3010, your backend services 3020 and 3021, and your Postgres instances the usual 5432. Then make sure you have fine-grained security groups for each set of servers. This makes you disciplined about listing out your services, but also is more error-proof. For example, should you accidentally have an extra Apache server running on the default port 80 on a backend server, it will not be exposed.


Migrating from Classic: For migrating from older EC2-Classic deployments to modern EC2-VPC setup, this article may be of help.

You can migrate Elastic IPs between EC2-Classic and EC2-VPC.



For basic AWS use, one default VPC may be sufficient. But as you scale up, you should consider mapping out network topology more thoroughly. A good overview of best practices is here.


Consider controlling access to you private AWS resources through a VPN.

You get better visibility into and control of connection and connection attempts.
You expose a smaller surface area for attack compared to exposing separate (potentially authenticated) services over the public internet.

e.g. A bug in the YAML parser used by the Ruby on Rails admin site is much less serious when the admin site is only visible to the private network and accessed through VPN.


Another common pattern (especially as deployments get larger, security or regulatory requirements get more stringent, or team sizes increase) is to provide a bastion host behind a VPN through which all SSH connections need to transit.
For a cheap VPN to access private AWS resources, consider using a point-to-site software VPN such as OpenVPN. It can either be installed using the official AMI, though you are limited to 2 concurrent users on the free license, or it can be installed using the openvpn package on linux. The linux package allows for unlimited concurrent users but the installation is less straightforward. This OpenVPN installer script can help you install it and add client keys easily.



üîπConsider using other security groups as sources for security group rules instead of using CIDRs ‚Äî that way, all hosts in the source security group and only hosts in that security group are allowed access. This is a much more dynamic and secure way of managing security group rules.


VPC Flow Logs allow you to monitor the network traffic to, from, and within your VPC. Logs are stored in CloudWatch Logs groups, and can be used for security monitoring (with third party tools), performance evaluation, and forensic investigation.

See the VPC Flow Logs User Guide for basic information.
See the flowlogs-reader CLI tool and Python library to retrieve and work with VPC Flow Logs.



IPv6 is available in VPC. Along with this announcement came the introduction of the Egress-Only Internet Gateway. In cases where one would use NAT Gateways to enable egress-only traffic for their VPC in IPv4, one can use an Egress-Only Internet Gateway for the same purpose in IPv6.


Amazon provides an IPv6 CIDR block for your VPC at your request - at present you cannot implement your own IPv6 block if you happen to own one already.


New and existing VPCs can both use IPv6. Existing VPCs will need to be configured to have an IPv6 CIDR block associated with them, just as new VPCs do.


PrivateLink

üìíHomepage ‚àô User Guide ‚àô  Pricing
One of the uses for Private link is Interface VPC Endpoints deploys an ENI into your VPC and subnets which allows you direct access to the AWS API's as if the were accessible locally in your VPC without having to go out to the internet.
Another use case would be to expose a service of your own to other accounts in AWS through a VPC Endpoint Service

VPC and Network Security Gotchas and Limitations

üî∏VPCs are tied to one Region in one Account. Subnets are tied to one VPC and limited to one Availability Zone.
üî∏Security groups are tied to one VPC. If you are utilizing infrastructure in multiple VPCs you should make sure your configuration/deployment tools take that into account.
üî∏VPC Endpoints are currently only available for S3 and DynamoDB. If you have a security requirement to lockdown outbound traffic from your VPC you may want to use DNS filtering to control outbound traffic to other services.
‚ùóBe careful when choosing your VPC IP CIDR block: If you are going to need to make use of ClassicLink, make sure that your private IP range doesn‚Äôt overlap with that of EC2 Classic.
‚ùóIf you are going to peer VPCs, carefully consider the cost of data transfer between VPCs, since for some workloads and integrations, this can be prohibitively expensive.
‚ùóNew RDS instances require a subnet group within your VPC. If you‚Äôre using the default VPC this isn‚Äôt a concern, it will contain a subnet for each availability zone in your region. However, if you‚Äôre creating your own VPC and plan on using RDS, make sure you have at least two subnets within the VPC to act as the subnet group.
‚ùóIf you delete the default VPC, you can recreate it via the CLI or the console.
‚ùóBe careful with VPC VPN credentials! If lost or compromised, the VPN endpoint must be deleted and recreated. See the instructions for Replacing Compromised Credentials.
‚ùóSecurity Groups and Route Tables apply entries separately for IPv4 and IPv6, so one must ensure they add entries for both protocols accordingly.
üí∏Managed NAT gateways are a convenient alternative to
manually managing NAT instances, but they do come at a cost per gigabyte. Consider alternatives if you're transferring many terabytes from private subnets to the internet. If you transfer terabytes/petabytes of data from EC2 instances in private subnets to S3, avoid the NAT gateway data processing charge by setting up a Gateway Type VPC Endpoint and route the traffic to/from S3 through the VPC endpoints instead of going through the NAT gateways.

KMS
KMS Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
KMS (Key Management Service) is a secure service for creating, storing and auditing usage of cryptographic keys.
Service integration: KMS integrates with other AWS services: EBS, Elastic Transcoder, EMR, Redshift, RDS, SES, S3, WorkMail and Workspaces.
Encryption APIs: The Encrypt and Decrypt API allow you to encrypt and decrypt data on the KMS service side, never exposing the master key contents.
Data keys: The GenerateDataKey API generates a new key off of a master key. The data key contents are exposed to you so you can use it to encrypt and decrypt any size of data in your application layer. KMS does not store, manage or track data keys, you are responsible for this in your application.
üîπAuditing: Turn on CloudTrail to audit all KMS API events.
Access: Use key policies and IAM policies to grant different levels of KMS access. For example, you create an IAM policy that only allows a user to encrypt and decrypt with a specific key.

KMS Tips

üîπIt‚Äôs very common for companies to manage keys completely via home-grown mechanisms, but it‚Äôs far preferable to use a service such as KMS from the beginning, as it encourages more secure design and improves policies and processes around managing keys.
A good motivation and overview is in this AWS presentation.
The cryptographic details are in this AWS whitepaper.
This blog from Convox demonstrates why and how to use KMS for encryption at rest.

KMS Gotchas and Limitations

üî∏The Encrypt API only works with < 4KB of data. Larger data requires generating and managing a data key in your application layer.
üî∏KMS audit events are not available in the CloudTrail Lookup Events API. You need to look find them in the raw .json.gz files that CloudTrail saves in S3.
üî∏In order to encrypt a multi-part upload to S3, the KMS Key Policy needs to allow ‚Äúkms:Decrypt‚Äù and ‚Äúkms:GenerateDataKey*‚Äù in addition to ‚Äúkms:Encrypt‚Äù, otherwise the upload will fail with an ‚ÄúAccessDenied‚Äù error.
üî∏KMS keys are region specific ‚Äî they are stored and can only be used in the region in which they are created. They can't be transferred to other regions.
üî∏KMS keys have a key policy that must grant access to something to manage the key.  If you don't grant anything access to the key on creation, then you have to reach out to support to have the key policy reset Reduce the Risk of the Key Becoming Unmanagable.
üî∏If you use a key policy to grant access to IAM roles or users and then delete the user/role, recreating the user or role won't grant them permission to the key again.

CloudFront
CloudFront Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
CloudFront is AWS‚Äô content delivery network (CDN).
Its primary use is improving latency for end users through accessing cacheable content by hosting it at over 60 global edge locations.

CloudFront Alternatives and Lock-in

üö™CDNs are a highly fragmented market. CloudFront has grown to be a leader, but there are many alternatives that might better suit specific needs.

CloudFront Tips

üê•IPv6 is supported. This is a configurable setting, and is enabled by default on new CloudFront distributions. IPv6 support extends to the use of WAF with CloudFront.
üê•HTTP/2 is now supported! Clients must support TLS 1.2 and SNI.
While the most common use is for users to browse and download content (GET or HEAD methods) requests, CloudFront also supports (since 2013) uploaded data (POST, PUT, DELETE, OPTIONS, and PATCH).

You must enable this by specifying the allowed HTTP methods when you create the distribution.
Interestingly, the cost of accepting (uploaded) data is usually less than for sending (downloaded) data.


In its basic version, CloudFront supports SSL via the SNI extension to TLS, which is supported by all modern web browsers. If you need to support older browsers, you need to pay a few hundred dollars a month for dedicated IPs.

üí∏‚è±Consider invalidation needs carefully. CloudFront does support invalidation of objects from edge locations, but this typically takes many minutes to propagate to edge locations, and costs $0.005 per request after the first 1000 requests. (Some other CDNs support this better.)


Everyone should use TLS nowadays if possible. Ilya Grigorik‚Äôs table offers a good summary of features regarding TLS performance features of CloudFront.
An alternative to invalidation that is often easier to manage, and instant, is to configure the distribution to cache with query strings and then append unique query strings with versions onto assets that are updated frequently.
‚è±For good web performance, it is recommended to enable compression on CloudFront distributions if the origin is S3 or another source that does not already compress.

CloudFront Gotchas and Limitations

üî∏If using S3 as a backing store, remember that the endpoints for website hosting and for general S3 are different. Example: ‚Äúbucketname.s3.amazonaws.com‚Äù is a standard S3 serving endpoint, but to have redirect and error page support, you need to use the website hosting endpoint listed for that bucket, e.g. ‚Äúbucketname.s3-website-us-east-1.amazonaws.com‚Äù (or the appropriate region).
üî∏By default, CloudFront will not forward HTTP Host: headers through to your origin servers. This can be problematic for your origin if you run multiple sites switched with host headers. You can enable host header forwarding in the default cache behavior settings.
üî∏4096-bit SSL certificates: CloudFront do not support 4096-bit SSL certificates as of late 2016. If you are using an externally issued SSL certificate, you‚Äôll need to make sure it‚Äôs 2048 bits. See ongoing discussion.
Although connections from clients to CloudFront edge servers can make use of IPv6, connections to the origin server will continue to use IPv4.

DirectConnect
DirectConnect Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing
Direct Connect is a private, dedicated connection from your network(s) to AWS.

DirectConnect Tips

If your data center has a partnering relationship with AWS, setup is streamlined.
Use for more consistent predictable network performance guarantees (1 Gbps or 10 Gbps per link).
Use to peer your colocation, corporate, or physical datacenter network with your VPC(s).

Example: Extend corporate LDAP and/or Kerberos to EC2 instances running in a VPC.
Example: Make services that are hosted outside of AWS for financial, regulatory, or legacy reasons callable from within a VPC.



Redshift
Redshift Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
Redshift is AWS‚Äô managed data warehouse solution, which is massively parallel, scalable, and columnar. It is very widely used. It was built using ParAccel technology and exposes Postgres-compatible interfaces.

Redshift Alternatives and Lock-in

‚õìüö™Whatever data warehouse you select, your business will likely be locked in for a long time. Also (and not coincidentally) the data warehouse market is highly fragmented. Selecting a data warehouse is a choice to be made carefully, with research and awareness of the market landscape and what business intelligence tools you‚Äôll be using.

Redshift Tips

Although Redshift is mostly Postgres-compatible, its SQL dialect and performance profile are different.
Redshift supports only 12 primitive data types. (List of unsupported Postgres types)
It has a leader node and computation nodes (the leader node distributes queries to the computation ones). Note that some functions can be executed only on the lead node.
üîπMake sure to create a new cluster parameter group and option group for your database since the default parameter group does not allow dynamic configuration changes.
Major third-party BI tools support Redshift integration (see Quora).
Top 10 Performance Tuning Techniques for Amazon Redshift provides an excellent list of performance tuning techniques.
Amazon Redshift Utils contains useful utilities, scripts and views to simplify Redshift ops.
VACUUM regularly following a significant number of deletes or updates to reclaim space and improve query performance.
Avoid performing blanket VACUUM or ANALYZE operations at a cluster level. The checks on each table to determine whether VACUUM or ANALYZE action needs to be taken is wasteful. Only perform ANALYZE and VACUUM commands on the objects that require it. Utilize the Analyze & Vacuum Schema Utility to perform this work. The SQL to determine whether a table needs to be VACUUMed or ANALYZEd can be found in the Schema Utility README if you wish to create your own maintenance process.
Redshift provides various column compression options to optimize the stored data size. AWS strongly encourages users to use automatic compression at the COPY stage, when Redshift uses a sample of the data being ingested to analyze the column compression options. However, automatic compression can only be applied to an empty table with no data. Therefore, make sure the initial load batch is big enough to provide Redshift with a representative sample of the data (the default sample size is 100,000 rows).
Redshift uses columnar storage, hence it does not have indexing capabilities. You can, however, use distribution key and sortkey to improve performance. Redshift has two types of sort keys: compounding sort key and interleaved sort key.
A compound sort key is made up of all columns listed in the sort key definition. It is most useful when you have queries with operations using the prefix of the sortkey.
An interleaved sort key on the other hand gives equal weight to each column or a subset of columns in the sort key. So if you don't know ahead of time which column(s) you want to choose for sorting and filtering, this is a much better choice than the compound key. Here is an example using interleaved sort key.
üî∏‚è± Distribution strategies: Since data in Redshift is physically distributed among nodes, choosing the right data distribution key and distribution style is crucial for adequate query performance. There are three possible distribution style settings ‚Äî EVEN (the default), KEY, or ALL. Use KEY to collocate join key columns for tables which are joined in queries. Use ALL to place the data in small-sized tables on all cluster nodes.

Redshift Gotchas and Limitations

‚ùó‚è±While Redshift can handle heavy queries well, it does not scale horizontally, i.e. does not handle multiple queries in parallel. Therefore, if you expect a high parallel load, consider replicating or (if possible) sharding your data across multiple clusters.
üî∏ The leader node, which manages communications with client programs and all communication with compute nodes, is the single point of failure.
‚è±Although most Redshift queries parallelize well at the compute node level, certain stages are executed on the leader node, which can become the bottleneck.
üîπRedshift data commit transactions are very expensive and serialized at the cluster level. Therefore, consider grouping multiple mutation commands (COPY/INSERT/UPDATE) commands into a single transaction whenever possible.
üîπRedshift does not support multi-AZ deployments. Building multi-AZ clusters is not trivial. Here is an example using Kinesis.
üî∏Beware of storing multiple small tables in Redshift. The way Redshift tables are laid out on disk makes it impractical. The minimum space required to store a table (in MB) is nodes * slices/node * columns. For example, on a 16 node cluster an empty table with 20 columns will occupy 640MB on disk.
‚è± Query performance degrades significantly during data ingestion. WLM (Workload Management) tweaks help to some extent. However, if you need consistent read performance, consider having replica clusters (at the extra cost) and swap them during update.
‚ùó Never resize a live cluster. The resize operation can take hours depending on the dataset size. In rare cases, the operation may also get stuck and you'll end up having a non-functional cluster. The safer approach is to create a new cluster from a snapshot, resize the new cluster and shut down the old one.
üî∏Redshift has reserved keywords that are not present in Postgres (see full list here). Watch out for DELTA (Delta Encodings).
üî∏Redshift does not support many Postgres functions, most notably several date/time-related and aggregation functions. See the full list here.
üî∏ Uniqueness, primary key, and foreign key constraints on Redshift tables are informational only and are not enforced. They are, however, used by the query optimizer to generate query plans. NOT NULL column constraints are enforced. See here for more information on defining constraints.
üî∏Compression on sort key can result in significant performance impact. So if your Redshift queries involving sort key(s) are slow, you might want to consider removing compression on a sort key.
üîπ Choosing a sort key is very important since you can not change a table‚Äôs sort key after it is created. If you need to change the sort or distribution key of a table, you need to create a new table with the new key and move your data into it with a query like ‚Äúinsert into new_table select * from old_table‚Äù.
‚ùóüö™ When moving data with a query that looks like ‚Äúinsert into x select from y‚Äù, you need to have twice as much disk space available as table ‚Äúy‚Äù takes up on the cluster‚Äôs disks. Redshift first copies the data to disk and then to the new table. Here is a good article on how to this for big tables.

EMR
EMR Basics

üìí Homepage ‚àô Release guide ‚àô FAQ ‚àô Pricing
EMR (which used to stand for Elastic Map Reduce, but not anymore, since it now extends beyond map-reduce) is a service that offers managed deployment of Hadoop, HBase and Spark. It reduces the management burden of setting up and maintaining these services yourself.

EMR Alternatives and Lock-in

‚õìMost of EMR is based on open source technology that you can in principle deploy yourself. However, the job workflows and much other tooling is AWS-specific. Migrating from EMR to your own clusters is possible but not always trivial.

EMR Tips

EMR relies on many versions of Hadoop and other supporting software. Be sure to check which versions are in use.
‚è±Off-the-shelf EMR and Hadoop can have significant overhead when compared with efficient processing on a single machine. If your data is small and performance matters, you may wish to consider alternatives, as this post illustrates.
Python programmers may want to take a look at Yelp‚Äôs mrjob.
It takes time to tune performance of EMR jobs, which is why third-party services such as Qubole‚Äôs data service are gaining popularity as ways to improve performance or reduce costs.

EMR Gotchas and Limitations

üí∏‚ùóEMR costs can pile up quickly since it involves lots of instances, efficiency can be poor depending on cluster configuration and choice of workload, and accidents like hung jobs are costly. See the section on EC2 cost management, especially the tips there about Spot instances. This blog post has additional tips, but was written prior to the shift to per-second billing.
üí∏ Beware of ‚Äúdouble-dipping‚Äù. With EMR, you pay for the EC2 capacity and the service fees. In addition, EMR syncs task logs to S3, which means you pay for the storage and PUT requests at S3 standard rates. While the log files tend to be relatively small, every Hadoop job, depending on the size, generates thousands of log files that can quickly add up to thousands of dollars on the AWS bill. YARN‚Äôs log aggregation is not available on EMR.

Kinesis Streams
Kinesis Streams Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
Kinesis Streams (which used to be only called Kinesis, before Kinesis Firehose and Kinesis Analytics were launched) is a service that allows you to ingest high-throughput data streams for immediate or delayed processing by other AWS services.
Kinesis Streams‚Äô subcomponents are called shards. Each shard provides 1MB/s of write capacity and 2MB/s of read capacity at a maximum of 5 reads per second. A stream can have its shards programmatically increased or decreased based on a variety of metrics.
All records entered into a Kinesis Stream are assigned a unique sequence number as they are captured. The records in a Stream are ordered by this number, so any time-ordering is preserved.
This page summarizes key terms and concepts for Kinesis Streams.

Kinesis Streams Alternatives and Lock-in

üö™ Kinesis is most closely compared to Apache Kafka, an open-source data ingestion solution. It is possible to set up a Kafka cluster hosted on EC2 instances (or any other VPS), however you are responsible for managing and maintaining both Zookeeper and the Kafka brokers in a highly available configuration. Confluent has a good blog post with their recommendations on how to do this here, which has links on the bottom to several other blogs they have written on the subject.
‚õì Kinesis uses very AWS-specific APIs, so you should be aware of the potential future costs of migrating away from it, should you choose to use it.
An application that efficiently uses Kinesis Streams will scale the number of shards up and down based on the required streaming capacity. (Note there is no direct equivalent to this with Apache Kafka.)

Kinesis Streams Tips

The KCL (Kinesis Client Library) provides a skeleton interface for Java, Node, Python, Ruby and .NET programs to easily consume data from a Kinesis Stream. In order to start consuming data from a Stream, you only need to provide a config file to point at the correct Kinesis Stream, and functions for initialising the consumer, processing the records, and shutting down the consumer within the skeletons provided.

The KCL uses a DynamoDB table to keep track of which records have been processed by the KCL. This ensures that all records are processed ‚Äúat least once‚Äù. It is up to the developer to ensure that the program can handle doubly-processed records.
The KCL also uses DynamoDB to keep track of other KCL ‚Äúworkers‚Äù. It automatically shares the available Kinesis Shards across all the workers as equally as possible.



Kinesis Streams Gotchas and Limitations

üî∏‚è±  Kinesis Streams‚Äô shards each only permit 5 reads per second. If you are evenly distributing data across many shards, your read limit for the Stream will remain at 5 reads per second on aggregate, as each consuming application will need to check every single shard for new records. This puts a hard limit on the number of different consuming applications possible per Stream for a given maximum read latency.

For example, if you have 5 consuming applications reading data from one Stream with any number of shards, they cannot read with a latency of less than one second, as each of the 5 consumers will need to poll each shard every second, reaching the cap of 5 reads per second per shard.
This blog post further discusses the performance and limitations of Kinesis in production.


üí∏ Kinesis Streams are not included in the free tier. Make sure if you do any experimentation with it on a personal account, you shut down the stream or it may run up unexpected costs (~$11 per shard-month.)

Kinesis Firehose
Kinesis Firehose Gotchas and Limitations

üî∏ üìú When delivering from Firehose to Elasticsearch, the JSON document cannot contain an ‚Äú_id‚Äù property. Firehose will not attempt to deliver those documents and won't log any error.

Device Farm
Device Farm Basics

üìí Homepage ‚àô Developer guide ‚àô FAQ ‚àô Pricing
Device Farm is an AWS service that enables mobile app testing on real devices.
Supports iOS and Android (including Kindle Fire) devices, as well as the mobile web.
Supports remote device access in order to allow for interactive testing/debugging.

Device Farm Tips

AWS Mobile blog contains several examples of Device Farm usage for testing.
Device Farm offers a free trial for users who want to evaluate their service.
Device Farm offers two pricing models: Paying per device minute is useful for small usage levels or for situations where it‚Äòs hard to predict usage amount. Unmetered plans are useful in situations where active usage is expected from the beginning.
To minimize waiting time for device availability, one approach is to create several device pools with different devices, then randomly choose one of the unused device pools on every run.

Device Farm Gotchas and Limitations

‚ùóDevices don't have a SIM card and therefore can‚Äòt be used for testing SIM card-related features.
üî∏Device Farm supports testing for most popular languages/frameworks, but not for all. An actual list of supported frameworks and languages is presented on this page.
üî∏The API and CLI for Device Farm is quite a low level and may require developing additional tools or scripts on top of it.
üî∏AWS provide several tools and plugins for Device Farm, however, it doesn‚Äòt cover all cases or platforms. It may require developing specific tools or plugins to support specific requirements.
‚ùóIn general, Device Farm doesn‚Äòt have Android devices from Chinese companies like Huawei, Meizu, Lenovo, etc. An actual list of supported devices located here.
üî∏Device availibility is uneven. It depends on several factors including device popularity. Usually, more modern devices see higher demand, thus the waiting time for them will be higher compared to relatively old devices.

Mobile Hub
Mobile Hub Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing


Mobile Hub orchestrates multiple services to create an AWS backend for mobile and web applications.
Each project in Mobile Hub has one backend made up of configurable features, plus one or more applications.
Features include Analytics, Cloud Logic, Conversational Bots, Hosting and Streaming, NoSQL Database, User Data Storage and User Sign-In. Each feature uses one or two services to deliver a chunk of functionality.
Services used include API Gateway, CloudFront, Cognito, Device Farm, DynamoDB, Lambda, Lex, Pinpoint and S3.
Application SDKs exist for Android (Java), iOS (Swift), Web (JS) and React Native (JS). There is also a CLI for JavaScript applications.

Mobile Hub Tips

The Mobile Hub console has starter kits and tutorials for various app platforms.
The CLI allows local development of Lambda code (JS by default) with awsmobile {pull|push} commands, to sync from cloud to folder, and back again.
Mobile Hub itself is free, but each of the services has its own pricing model.

Mobile Hub Gotchas and Limitations

üî∏The Cloud API feature allows importing an existing Lambda function instead of defining a new one, but there are some rough edges with the CLI. Check the GitHub issues.
‚ùóMobile Hub uses CloudFormation under the covers, and gets confused when a service is changed outside of the Mobile Hub console.

IoT
IoT Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing


IoT is a platform for allowing clients such as IoT devices or software applications (examples) to communicate with the AWS cloud.
Clients are also called devices (or things) and include a wide variety of device types.  Roughly there are three categories of device types that interact with IoT services by sending message over an IoT protocol to the IoT Pub/Sub-style message broker, which is called the IoT Device Gateway:

Send messages only: For example, the AWS IoT Button on an eddystone beacon.
Send, receive, and process messages: For example, a simple processing board, such as a Raspberry Pi (quick start guide), or an AWS device, such as Echo or Echo Dot, which are designed to work with the AWS Alexa skills kit (a programmable voice-enabled service from AWS).


AWS has a useful quick-start (using the Console) and a slide presentation on core topics.


IoT terms:

AWS IoT Things (metadata for devices in a registry) and can store device state in a JSON document, which is called a device shadow.  Device metadata can also be stored in IoT Thing Types. This aids in device metadata management by allowing for reuse of device description and configuration for more than one device.  Note that IoT Thing Types can be deprecated, but not changed ‚Äî they are immutable.
AWS IoT Certificates (device authentication) are the logical association of a unique certificate to the logical representation of a device. This association can be done in the Console.  In addition, the public key of the certificate must be copied to the physical device. This covers the authentication of devices to a particular AWS Device Gateway (or message broker). You can associate an AWS IoT certificate with an IoT device or you can register your own CA (Certificate Authority) with AWS, generate your own certificate(s) and associate those certificates with your devices via the AWS Console or cli.
AWS IoT Policies (device/topic authorization) are JSON files that are associated to one or more AWS IoT certificates. This authorizes associated devices to publish and/or subscribe to messages from one or more MQTT topics.
AWS IoT Rules are SQL-like queries which allows for reuse of some or all device message data, as described in this presentation, which summarizes design patterns with for IoT Rules.
Shown below is a diagram which summarizes the flow of messages between the AWS IoT services:




IoT Greengrass

üìí Homepage
üê•Greengrass is a software platform that extends AWS IoT capabilities allowing Lambda functions to be run directly on local devices.  It also enables IoT devices to be able to securely communicate on a local network without having to connect to the cloud.

Greengrass includes a local pub/sub message manager that can buffer messages if connectivity is lost so that inbound and outbound messages to the cloud are preserved. Locally deployed Lambda functions can be triggered by local events, messages from the cloud, or other sources.
Greengrass includes secure authentication and authorization of devices within the local network and also between the local network and the AWS cloud. It also provides secure, over-the-air software updates of Lambda functions.


Greengrass core software includes a message manager object, Lambda runtime, local copy service for IoT Thing (or device) shadows, and a deployment agent to manage Greengrass group configuration.
Greengrass groups are containers for selected IoT devices settings, subscriptions and associated Lambda functions.  In a Greengrass group a device is either a Greengrass core or an IoT device which will be connected that particular Greengrass core.
The Greengrass core SDK enables Lambda functions to interact with the AWS Greengrass core on which they run in order to publish messages, interact with the local Thing Shadows service, or invoke other deployed Lambda functions.
The AWS Greengrass Core SDK only supports sending MQTT messages with QoS = 0.
Shown below is a diagram which shows the architecture of AWS IoT Greengrass services:


IoT Alternatives and Lock-in

AWS, Microsoft and Google have all introduced IoT-specific sets of cloud services since late 2015. AWS was first, moving their IoT services to general availability in Dec 2015. Microsoft released their set of IoT services for Azure in Feb 2016.  Google has only previewed, but not released their IoT services Android Things and Weave.
Issues of lock-in center around your devices ‚Äî  protocols (for example MQTT, AMQP), message formats (such as, JSON vs. Hex...) and security (certificates).

IoT Tips

Getting started with Buttons: One way to start is to use an AWS IoT Button.  AWS provides a number of code samples for use with their IoT Button, you can use the AWS IoT console, click the ‚Äúconnect AWS IoT button‚Äù link and you'll be taken to the  AWS Lambda console.  There you fill out your button‚Äôs serial number to associate it with a Lambda. (As of this writing, AWS IoT buttons are only available for sale in the US.)
Connections and protocols: It is important to understand the details of about the devices you wish to connect to the AWS IoT service, including how you will secure the device connections, the device protocols, and more. Cloud vendors differ significantly in their support for common IoT protocols, such as MQTT, AMQP, XMPP. AWS IoT supports secure MQTT, WebSockets and HTTPS.
Support for device security via certificate processing is a key differentiator in this space.  In August 2016, AWS added just-in-time registrations for IoT devices to their services.
Combining with other services: It‚Äôs common to use other AWS services, such as AWS Lambda, Kinesis and DynamoDB, although this is by no means required.  Sample IoT application reference architectures are in this screencast.
Testing tools:

To get started, AWS includes a lightweight MQTT client in the AWS IoT console. Here you can create and test sending and receiving messages to and from various MQTT topics.
When testing locally, if using MQTT, it may be helpful to download and use the open source Mosquitto broker tool for local testing with devices and/or device simulators
Use this MQTT load simulator to test device message load throughout your IoT solution.



IoT Gotchas and Limitations

üî∏IoT protocols: It is important to verify the exact type of support for your particular IoT device message protocol. For example, one commonly used IoT protocol is MQTT. Within MQTT there are three possible levels of QoS in MQTT.  AWS IoT supports MQTT QoS 0 (fire and forget, or at most once) and QoS 1(at least once, or includes confirmation), but not QoS 2 (exactly once, requires 4-step confirmation).  This is important in understanding how much code you‚Äôll need to write for your particular application message resolution needs.  Here is a presentation about the nuances of connecting.
üî∏The ecosystems to match IAM users or roles to IoT policies and their associated authorized AWS IoT devices are immature. Custom coding to enforce your security requirements is common.
‚ùóA common mistake is to misunderstand the importance of IoT device security.  It is imperative to associate each device with a unique certificate (public key). You can generate your own certificates and upload them to AWS, or you can use AWS generated IoT device certificates. It‚Äôs best to read and understand AWS‚Äôs own guidance on this topic.
üî∏There is only one AWS IoT Gateway (endpoint) per AWS account. For production scenarios, you‚Äôll probably need to set up multiple AWS accounts in order to separate device traffic for development, test and production. It‚Äôs interesting to note that the Azure IoT Gateway supports configuration of multiple endpoints, so that a single Azure account can be used with separate pub/sub endpoints for development, testing and production
üî∏Limits: Be aware of limits, including device message size, type, frequency, and number of AWS IoT rules.

IoT Code Samples

Simple Beer Service is a surprisingly useful code example using AWS IoT, Lambda, etc.
IoT-elf offers clean Python sample using the AWS IoT SDK.
IoT Button projects on Hackster include many different code samples for projects.
5 IoT code examples: a device simulator, MQTT sample, just in time registration, truck simulator, prediction data simulator.
AWS Alexa trivia voice example is a quick-start using Alexa voice capability and Lambda.
Some Raspberry Pi examples include the Beacon project, Danbo, and GoPiGo.

SES
SES Basics

üìí Homepage ‚àô Documentation ‚àô FAQ ‚àô Pricing
SES (or Simple Email Service) is a service that exposes SMTP endpoints for your application to directly integrate with.

SES Tips

üîπBounce Handling: Make sure you handle this early enough. Your ability to send emails can be removed if SES sees too many bounces.
üîπCredentials: Many developers get confused between SES credentials and AWS API keys. Make sure to enter SMTP credentials while using the SMTP APIs.

SES Gotchas and Limitations

üî∏Internet Access: SES SMTP endpoints are on the Internet and will not be accessible from a location without Internet access (e.g. a private subnet without NAT gateway route in the routing table). In such a case, set up an SMTP relay instance in a subnet with Internet access and configure your application to send emails to this SMTP relay instance rather than SES. The relay should have a forwarding rule to send all emails to SES). ‚ùóIf you are using a proxy instead of a NAT, confirm that your proxy service supports SMTP.

Certificate Manager
Certificate Manager Basics

üìí Homepage ‚àô User guide ‚àô FAQ ‚àô Pricing
Use the Certificate Manager to manage SSL/TLS certificates in other AWS services.
Supports importing existing certificates as well as issuing new ones.
Provides Domain Validated (DV) certificates. Validation is done by sending an email to 3 contact addresses in WHOIS and 5 common addresses for the domain, for each domain name present in the request. As of late 2017, this can also be done via DNS instead.
ACM will attempt to automatically renew a certificate issued by Amazon. It will first attempt to connect to the domain on HTTPS and check that the certificate used by the domain is the same with the certificate that it intends to renew. Failing that, it will check the DNS record used previously for validation. Failing that, ACM will attempt manual validation by sending emails to all domains in the certificate.

Certificate Manager Alternatives and Lock-in

‚õìCertificates issued by the Certificate Manager can‚Äôt be used outside of the services that support it. Imported certificates, however, can still be used elsewhere.

Certificate Manager Tips

üîπSupported services: Managed Load Balancers, CloudFront, API Gateway and Elastic Beanstalk.
üî∏During the domain validation process, if DNS validation is unsuccessful Certificate Manager will send an email to every contact address specified in the domain‚Äôs WHOIS record and up to five common administrative addresses. Some anti-spam filters can mark emails as spam because of this. You should check the spam folder of your email if you don‚Äôt receive a confirmation email.
üîπ Setting up a certificate for a test domain you don't have email set up on? You can now use DNS validation instead.
üîπRemember when requesting a wildcard domain that the request will not be valid for the level just below the wildcard, or any subdomains preceding the wildcard. Take for example an approved, issued certificate for *.bar.example.com. This would be valid for foo.bar.example.com but not bar.example.com. Likewise it would also not be valid for www.bar.foo.example.com. You would need to add each of these domains to the certificate request.

Certificate Manager Gotchas and Limitations

üî∏In order to use Certificate Manager for CloudFront distributions, the certificate must be issued or imported from us-east-1 (N. Virginia) region.
üî∏Certificates used with Elastic Load Balancers must be issued in the same region as the load balancer. Certificates can not be moved or copied between regions, as of July 2017. If a domain uses load balancers present in multiple regions, a different certificate must be requested for each region.
üî∏IoT has its own way of setting up certificates.
üî∏By default the maximum number of domains per certificate is 10. You can get this limit increased to a maximum of 100 by contacting AWS support. Note for every different domain you have on the requested cert, you'll need to press accept on an email sent to that domain. For example if you request a cert with 42 different domains or sub domains, you'll need to press accept on 42 different links.

üîπIf you request a limit increase to AWS support for this, they will respond to you asking to confirm this. Bypass this by saying in the body of your initial request:
""I acknowledge at the moment, there is no method to add or remove a name from a certificate. Instead, you must request a new certificate with the revised namelist and you must then re-approve all of the names in the certificate, even if they'd been previously approved.""


üî∏There is no way at the moment to add or remove a domain to/from an existing certificate. You must request a new certificate and re-approve it from each of the domains requested.

WAF
WAF Basics

üìí Homepage ‚àô Documentation ‚àô FAQ ‚àô Pricing
WAF (Web Application Firewall) is used in conjunction with the CloudFront and ALB services to inspect and block/allow web requests based on user-configurable conditions.
HTTPS and HTTP requests are supported with this service.
WAF's strength is in detecting malicious activity based on pattern-matching inputs for attacks such as SQL injections, XSS, etc.
WAF supports inspection of requests received through both IPv6 and IPv4.

WAF Tips

Getting a WAF API call history can be done through CloudTrail. This is enabled through the CloudTrail console.
It's also possible to get full
logs of all the web requests inspected

WAF Gotchas and Limitations

As of May 2019, AWS WAF is  available on Amazon CloudFront and in 12 commercial AWS regions: US East (N. Virginia), US East (Ohio), US West (Oregon), US West (N. California), EU (Ireland), EU (Frankfurt), EU (London), EU (Stockholm), Asia Pacific (Tokyo), Asia Pacific (Sydney), Asia Pacific (Singapore), and Asia Pacific (Seoul).

OpsWorks
OpsWorks Basics

üìí Homepage ‚àô Documentation ‚àô FAQ ‚àô Pricing: Stacks, Chef Automate, Puppet Enterprise
OpsWorks is a configuration management service that uses Chef or Puppet configuration management. It is broken out into three different services:

OpsWorks Stacks: The service lets you configure and launch stacks specific to your application's needs, and allows you to automate application deployments. Chef runs can be performed manually via the Execute Cookbooks command, otherwise they are only run as part of lifecycle events.

OpsWorks Stacks differs from standard configuration management services in that it also allows you to perform some infrastructure and application automation (such as creating Amazon EC2 instances and deploying applications via Chef cookbooks).


OpsWorks for Chef Automate: This service launches a dedicated Chef Automate server in your account, which can be used to associate nodes, upload coobook code, and configure systems. Automated patching, backups, OS updates, and minor Chef version upgrades are provided as part of the service. An AWS API is provided for associating/disassociating nodes. Chef runs can be scheduled on nodes using the chef-client cookbook.
OpsWorks for Puppet Enterprise: This service launches a dedicated Puppet Master in your account, which can be used to associate nodes, upload modules, and configure systems. Automated patching, backups, OS updates, and minor Puppet version upgrades are provided as part of the service. An AWS API is provided for associating/disassociating nodes. By default, the Puppet agent will run automatically every 30 minutes on associated nodes.


OpsWorks for Chef Automate and OpsWorks for Puppet Enterprise are strictly designed for configuration management, and do not provision infrastructure outside the Chef Server/Puppet Master that is created in our account.
All three OpsWorks services support managing both Amazon EC2 and on-premises infrastructure, however the implementation details differ slightly.

OpsWorks Stacks allows you to register instances and install the OpsWorks Agent to connect to your stack.
OpsWorks for Chef Automate and OpsWorks for Puppet Enterprise allow you to associate new or existing infrastructure using either the opsworks-cm:AssociateNode API action or the vendor-supported method for associating nodes to Chef Server or Puppet Enterprise.


Although OpsWorks will let you work with common Chef recipes or Puppet modules when creating your stacks, creating custom recipes will require familiarity with Chef or Puppet syntax. Chef/Puppet code is not supported as part of AWS Support.
As of December 2016, OpsWorks Stacks supports Chef versions 12, 11.10.4, 11.4.4 and 0.9.15.5.
As of December 2016, OpsWorks for Chef Automate uses Chef Server version 12.11.1 This is the current stable version of Chef.
Berkshelfcan be used  with Chef stacks of version 11.10 and later for managing cookbooks and their respective dependencies. However, on Chef 12.x stacks, Berkshelf must be installed by the stack administrator.
Running your own Chef environment may be an alternative to consider - some considerations are listed in this Bitlancer article.

OpsWorks Alternatives and Lock-in

Major competitors in Configuration Management include:

Chef
Puppet
Ansible.



OpsWorks Tips

OpsWorks Stacks and OpsWorks for Chef Automate use Chef cookbooks for configuration. Chef provides free training to learn syntax, best practices, etc. at https://learn.chef.io.
OpsWorks for Puppet Enterprise uses Puppet manifests for configuration. Puppet provides a very useful learning VM for download at https://learn.puppet.com/.

OpsWorks Gotchas and Limitations

OpsWorks Stacks is not available in the following regions:

Montreal
GovCloud
Beijing


OpsWorks for Chef Automate and OpsWorks for Puppet Enterprise are not available in the following regions:

Montreal
Sao Paulo
GovCloud
London
Paris
Seoul
Mumbai



Batch
Batch Basics

üìí Homepage ‚àô Documentation ‚àô FAQ ‚àô Pricing
AWS Batch is a service that offers an environment to run batch computing jobs. The service dynamically provisions the optimal compute resources needed by the jobs based on their resource requirements, and can scale up to hundreds of thousands of jobs.
These batch workloads have access to all other AWS services and features.
AWS Batch, coupled with spot instances can help run the jobs when appropriate capacity is available, providing for optimal utilization of compute resources.
The batch workloads are built as a Docker Image. These images can then pushed to the EC2 Container Registry (ECR), or any private repository that can be accessed from AWS.
A Job Definition has the workload's Docker Image URI, and also lets the users specify the environment details like vCPUs, memory, volume mappings, environment variables, parameters, retry strategy, container properties, and the job's IAM role.
The Compute Environments are EC2 clusters that provide the runtime for the batch workloads to execute in.
AWS Batch provides managed, as well as unmanaged compute environments. The Managed Environments are provisioned and managed by AWS, while the Unmanaged Environments are managed by the customers.
The Job Definitions are submitted to Job Queue(s) for execution. Each queue has a priority, and has at least one Compute Environment associated with it.
AWS Batch uses ECS to execute the containerized jobs.

Batch Tips

AWS Batch supports prioritization of jobs via the Job Queue Priority. Higher the number - higher the priority.
AWS Batch supports launching the Compute Environment into specific VPC and subnets.
A Compute Environment is same as an ECS Cluster.
There is no additional cost for AWS Batch. You only pay the cost associated with the AWS Services being used - like EC2 Instances and any resources consumed by the batch jobs.
Associate IAM Roles and policies with the Compute Environment to enable the containers access to other AWS resources.
üîπ Use Unmanaged Compute Environments if you need specialized resources like Dedicated Hosts, or EFS.

SQS
SQS Basics

üìí Homepage ‚àô Documentation ‚àô FAQ ‚àô Pricing 
SQS is a highly scalable, fully managed message queuing service from AWS.
SQS supports the pull model, where the producers queue the messages, and the consumers pull messages off the queue.
SQS provides a message visibility timeout, during which the message being processed will not be delivered to other consumers. If the consumer does not delete the message after processing, the message becomes available to other consumers upon reaching the message visibility timeout. This parameter is called VisibilityTimeout.
Each message can have up to 10 custom fields, or attributes.
SQS allows producers to set up to 15 minutes of delay before the messages are delivered to the consumers. This parameter is called DelaySeconds.
There are two types of queues supported by SQS -

Standard Queues

Guarantee at least once delivery of the messages.
Do not retain the order of delivery of the messages.


FIFO Queues

Guarantee only once delivery of the messages
Guarantee the order of the delivery of the messages




SQS supports fine grained access to various API calls and Queues via IAM policies.
The messages that fail to process can be put in a dead letter queue.

SQS Alternatives and Lock-In

Alternatives to SQS include Kafka, RabbitMQ, ActiveMQ and others.
Google Cloud Platform has Pub/Sub, and Azure has Azure Queue Service.
SQS vs SNS

SQS Tips

SNS can be used in combination of SQS to build a ‚Äúfan out‚Äù mechanism by having an SQS Queue subscribe to the SNS topic.
SQS supports encryption using AWS KMS.
Cloudwatch alarms can be creating using various SQS metrics to trigger autoscaling actions and/or notifications.

SQS Gotchas and Limitations

üî∏ SQS does not have a VPC endpoint (unlike S3 and DynamoDB), so SQS will need to be accessed using public SQS API endpoints.
üî∏ FIFO Queues are limited to 300 API calls per second.
üî∏ FIFO Queues cannot subscribe to an SNS topic.
üî∏ Standard Queues can deliver duplicate messages regardless of the visibility window. If only-once delivery is your only choice, then use FIFO queues, or build an additional layer to de-dupe the messages.
üî∏ You can send/receive messages in batch, however, there can only be maximum of 10 messages in a batch.

SNS
SNS Basics

üìí Homepage ‚àô Documentation ‚àô FAQ ‚àô Pricing
SNS (Simple Notification Service) is a pub/sub based, highly scalable, and fully managed messaging service that can also be used for mobile notifications.
SNS can push the messages down to the subscribers via SMS, Email, SQS, and HTTP/S transport protocols.
Producers publish messages to a SNS Topics, which can have many subscribers.
Each subscription has an associated protocol, which is used to notify the subscriber.
A copy of the message is sent to each subscriber using the associated protocol.
SNS can also invoke lambda functions.

SNS Alternatives and Lock-In

Popular alternatives to SNS are Kafka, Notification Hubs on Azure, and Pub/Sub on Google Cloud.
SNS vs SQS:

Both SNS and SQS are highly scalable, fully managed messaging services provided by AWS.
SQS supports a pull model, while SNS supports a push model. Consumers have to pull messages from an SQS Queue, while they're pushed the message from an SNS Topic.
An SQS message is intended to be processed by only one subscriber, while SNS topics can have many subscribers.
After processing, the SQS message is deleted from the queue by the subscriber to avoid being re-processed.
An SNS message is pushed to all subscribers of the topic at the same time, and is not available for deletion at the topic.
SNS supports multiple transport protocols of delivery of the messages to the subscribers, while SQS subscribers have to pull the messages off the queue over HTTPS.



SNS Tips

Fan-out architecture can be achieved by having multiple subscribers for a topic. This is particularly useful when events have to be fanned out to multiple, isolated systems.
SNS topics can be used to power webhooks with backoff support to subscribers over HTTP/S.
SQS queues can subscribe to SNS topics.
SNS is used to manage notifications for other AWS services like Autoscaling Groups' notifications, CloudWatch Alarms, etc.
SNS is frequently used as ‚Äúglue‚Äù between disparate systems‚Äî such as GitHub and AWS services.

SNS Gotchas and Limitations

üî∏ HTTP/S subscribers of SNS topics need to have public endpoints, as SNS does not support calling private endpoints (like those in a private subnet within a VPC).
üìú In a fan-out scenario, SSE-enabled SQS subscribers of an SNS topic will not receive the messages sent to the topic.

High Availability
This section covers tips and information on achieving high availability.
High Availability Tips

AWS offers two levels of redundancy, regions and availability zones (AZs).
When used correctly, regions and zones do allow for high availability. You may want to use non-AWS providers for larger business risk mitigation (i.e. not tying your company to one vendor), but reliability of AWS across regions is very high.
Multiple regions: Using multiple regions is complex, since it‚Äôs essentially like managing completely separate infrastructures. It is necessary for business-critical services with the highest levels of redundancy. However, for many applications (like your average consumer startup), deploying extensive redundancy across regions may be overkill.
The High Scalability Blog has a good guide to help you understand when you need to scale an application to multiple regions.
üîπMultiple AZs: Using AZs wisely is the primary tool for high availability!

A typical single-region high availability architecture would be to deploy in two or more availability zones, with load balancing in front, as in this AWS diagram.
The bulk of outages in AWS services affect one zone only. There have been rare outages affecting multiple zones simultaneously (for example, the great EBS failure of 2011) but in general most customers‚Äô outages are due to using only a single AZ for some infrastructure.
Consequently, design your architecture to minimize the impact of AZ outages, especially single-zone outages.
Deploy key infrastructure across at least two or three AZs. Replicating a single resource across more than three zones often won‚Äôt make sense if you have other backup mechanisms in place, like S3 snapshots.
A second or third AZ should significantly improve availability, but additional reliability of 4 or more AZs may not justify the costs or complexity (unless you have other reasons like capacity or Spot market prices).
üí∏Watch out for cross-AZ traffic costs. This can be an unpleasant surprise in architectures with large volume of traffic crossing AZ boundaries.
Deploy instances evenly across all available AZs, so that only a minimal fraction of your capacity is lost in case of an AZ outage.
If your architecture has single points of failure, put all of them into a single AZ. This may seem counter-intuitive, but it minimizes the likelihood of any one SPOF to go down on an outage of a single AZ.


EBS vs instance storage: For a number of years, EBSs had a poorer track record for availability than instance storage. For systems where individual instances can be killed and restarted easily, instance storage with sufficient redundancy could give higher availability overall. EBS has improved, and modern instance types (since 2015) are now EBS-only, so this approach, while helpful at one time, may be increasingly archaic.
Be sure to use and understand CLBs/ALBs appropriately. Many outages are due to not using load balancers, or misunderstanding or misconfiguring them.

High Availability Gotchas and Limitations

üî∏AZ naming differs from one customer account to the next. Your ‚Äúus-west-1a‚Äù is not the same as another customer‚Äôs ‚Äúus-west-1a‚Äù ‚Äî the letters are assigned to physical AZs randomly per account. This can also be a gotcha if you have multiple AWS accounts. Note that Zone IDs are consistent between accounts, and can be used to reliably align between AWS accounts.
üî∏üí∏Cross-AZ traffic is not free. At large scale, the costs add up to a significant amount of money. If possible, optimize your traffic to stay within the same AZ as much as possible.

Billing and Cost Management
Billing and Cost Visibility

AWS offers a free tier of service, that allows very limited usage of resources at no cost. For example, a micro instance and small amount of storage is available for no charge. Many services are only eligible for the free tier for the first twelve months that an account exists, but other services offer a free usage tier indefinitely. (If you have an old account but starting fresh, sign up for a new one to qualify for the free tier.) AWS Activate extends this to tens of thousands of dollars of free credits to startups in certain funds or accelerators.
You can set billing alerts to be notified of unexpected costs, such as costs exceeding the free tier. You can set these in a granular way.
AWS offers Cost Explorer, a tool to get better visibility into costs.
Unfortunately, the AWS console and billing tools are rarely enough to give good visibility into costs. For large accounts, the AWS billing console can time out or be too slow to use.
Tools:

üîπEnable billing reports and install an open source tool to help manage or monitor AWS resource utilization. Teevity Ice (originally written by Netflix) is probably the first one you should try. Check out docker-ice for a Dockerized version that eases installation.
üî∏One challenge with Ice is that it doesn‚Äôt cover amortized cost of reserved instances.
Other tools include Security Monkey and Cloud Custodian.
Use AWS Simple Monthly Calculator to get an estimate of usage charges for AWS services based on certain information you provide. Monthly charges will be based on your actual usage of AWS services, and may vary from the estimates the Calculator has provided.


Third-party services: Several companies offer services designed to help you gain insights into expenses or lower your AWS bill, such as Cloudability, CloudHealth Technologies, and ParkMyCloud. Some of these charge a percentage of your bill, which may be expensive. See the market landscape.
AWS‚Äôs Trusted Advisor is another service that can help with cost concerns.
Don‚Äôt be shy about asking your account manager for guidance in reducing your bill. It‚Äôs their job to keep you happily using AWS.
Tagging for cost visibility: As the infrastructure grows, a key part of managing costs is understanding where they lie. It‚Äôs strongly advisable to tag resources, and as complexity grows, group them effectively. If you set up billing allocation appropriately, you can then get visibility into expenses according to organization, product, individual engineer, or any other way that is helpful.
If you need to do custom analysis of raw billing data or want to feed it to a third party cost analysis service, enable the detailed billing report feature.
Multiple Amazon accounts can be linked for billing purposes using the Consolidated Billing feature. Large enterprises may need complex billing structures depending on ownership and approval processes.
Multiple Amazon accounts can be managed centrally using AWS Organizations.

AWS Data Transfer Costs

For deployments that involve significant network traffic, a large fraction of AWS expenses are around data transfer. Furthermore, costs of data transfer, within AZs, within regions, between regions, and into and out of AWS and the internet vary significantly depending on deployment choices.
Some of the most common gotchas:

üî∏AZ-to-AZ traffic: Note EC2 traffic between AZs is effectively the same as between regions. For example, deploying a Cassandra cluster across AZs is helpful for high availability, but can hurt on network costs.
üî∏Using public IPs when not necessary: If you use an Elastic IP or public IP address of an EC2 instance, you will incur network costs, even if it is accessed locally within the AZ.
üî∏Managed NAT Gateway data processing: Managed NAT Gateways are used to let traffic egress from private subnets--at a cost of 4.5¬¢ as a data processing fee layered on top of data transfer pricing. Past a certain point, running your own NAT instances becomes far more cost effective.
üî∏Some services do cross-AZ traffic for free: Many AWS services you'd not consider on their own merits offer a hidden value of free cross-AZ data transfer. EFS, RDS, MSK, and others are examples of this.


This figure gives an overview:


EC2 Cost Management

With EC2, there is a trade-off between engineering effort (more analysis, more tools, more complex architectures) and spend rate on AWS. If your EC2 costs are small, many of the efforts here are not worth the engineering time required to make them work. But once you know your costs will be growing in excess of an engineer‚Äôs salary, serious investment is often worthwhile.
Larger instances aren‚Äôt necessarily priced higher in the spot market ‚Äì therefore, you should look at the available options and determine which instances will be most cost effective for your jobs. See Bid Advisor.
üîπSpot instances:

EC2 Spot instances are a way to get EC2 resources at significant discount ‚Äî often many times cheaper than standard on-demand prices ‚Äî if you‚Äôre willing to accept the possibility that they be terminated with little to no warning.
Use Spot instances for potentially very significant discounts whenever you can use resources that may be restarted and don‚Äôt maintain long-term state.
The huge savings that you can get with Spot come at the cost of a significant increase in complexity when provisioning and reasoning about the availability of compute capacity.
Amazon maintains Spot prices at a market-driven fluctuating level, based on their inventory of unused capacity. Prices are typically low but can spike very high. See the price history to get a sense for this.
You set a bid price high to indicate how high you‚Äôre willing to pay, but you only pay the going rate, not the bid rate. If the market rate exceeds the bid, your instance may be terminated.
Prices are per instance type and per availability zone. The same instance type may have wildly different price in different zones at the same time. Different instance types can have very different prices, even for similarly powered instance types in the same zone.
Compare prices across instance types for better deals.
Use Spot instances whenever possible. Setting a high bid price will assure your machines stay up the vast majority of the time, at a fraction of the price of normal instances.
Get notified up to two minutes before price-triggered shutdown by polling your Spot instances‚Äô metadata, or by watching for the termination CloudWatch event.
Make sure your usage profile works well for Spot before investing heavily in tools to manage a particular configuration.


Spot fleet:

You can realize even bigger cost reductions at the same time as improvements to fleet stability relative to regular Spot usage by using Spot fleet to bid on instances across instance types, availability zones, and (through multiple Spot Fleet Requests) regions.
Spot fleet targets maintaining a specified (and weighted-by-instance-type) total capacity across a cluster of servers. If the Spot price of one instance type and availability zone combination rises above the weighted bid, it will rotate running instances out and bring up new ones of another type and location up in order to maintain the target capacity without going over target cluster cost.


Spot usage best practices:

Application profiling:

Profile your application to figure out its runtime characteristics. That would help give an understanding of the minimum cpu, memory, disk required. Having this information is critical before you try to optimize spot costs.
Once you know the minimum application requirements, instead of resorting to fixed instance types, you can bid across a variety of instance types (that gives you higher chances of getting a spot instance to run your application).E.g., If you know that 4 cpu cores are enough for your job, you can choose any instance type that is equal or above 4 cores and that has the least Spot price based on history. This helps you bid for instances with greater discount (less demand at that point).


Spot price monitoring and intelligence:

Spot Instance prices fluctuate depending on instance types, time of day, region and availability zone. The AWS CLI tools and API allow you to describe Spot price metadata given time, instance type, and region/AZ.
Based on history of Spot instance prices, you could potentially build a myriad of algorithms that would help you to pick an instance type in a way that optimizes cost, maximizes availability, or offers predictable performance.
You can also track the number of times an instance of certain type got taken away (out bid) and plot that in graphite to improve your algorithm based on time of day.


Spot machine resource utilization:

For running spiky workloads (spark, map reduce jobs) that are schedule based and where failure is non critical, Spot instances become the perfect candidates.
The time it takes to satisfy a Spot instance could vary between 2-10 mins depending on the type of instance and availability of machines in that AZ.
If you are running an infrastructure with hundreds of jobs of spiky nature, it is advisable to start pooling instances to optimize for cost, performance and most importantly time to acquire an instance.
Pooling implies creating and maintaining Spot instances so that they do not get terminated after use. This promotes re-use of Spot instances across jobs. This of course comes with the overhead of lifecycle management.
Pooling has its own set of metrics that can be tracked to optimize resource utilization, efficiency and cost.
Typical pooling implementations give anywhere between 45-60% cost optimizations and 40% reduction in spot instance creation time.
An excellent example of Pooling implementation described by Netflix (part1, part2)




Spot management gotchas

üî∏Lifetime: There is no guarantee for the lifetime of a Spot instance. It is purely based on bidding. If anyone outbids your price, the instance is taken away. Spot is not suitable for time sensitive jobs that have strong SLA. Instances will fail based on demand for Spot at that time. AWS provides a two-minute warning before Amazon EC2 must terminate your Spot instance.
üîπAPI return data: - The Spot price API returns Spot prices of varying granularity depending on the time range specified in the api call.E.g If the last 10 min worth of history is requested, the data is more fine grained. If the last 2 day worth of history is requested, the data is more coarser. Do not assume you will get all the data points. There will be skipped intervals.
‚ùóLifecycle management: Do not attempt any fancy Spot management unless absolutely necessary. If your entire usage is only a few machines and your cost is acceptable and your failure rate is lower, do not attempt to optimize. The pain for building/maintaining it is not worth just a few hundred dollar savings.


Reserved Instances: allow you to get significant discounts on EC2 compute hours in return for a commitment to pay for instance hours of a specific instance type in a specific AWS region and availability zone for a pre-established time frame (1 or 3 years). Further discounts can be realized through ‚Äúpartial‚Äù or ‚Äúall upfront‚Äù payment options.

Consider using Reserved Instances when you can predict your longer-term compute needs and need a stronger guarantee of compute availability and continuity than the (typically cheaper) Spot market can provide. However be aware that if your architecture changes your computing needs may change as well so long term contracts can seem attractive but may turn out to be cumbersome.
There are two types of Reserved Instances - Standard and Convertible. If you purchase excess Standard Reserved Instances, you may offer to ‚Äúsell back‚Äù unused Reserved Instances via the Reserved Instance Marketplace, this allows you to potentially recoup the cost of unused EC2 compute instance hours by selling them to other AWS customers.
Instance reservations are not tied to specific EC2 instances - they are applied at the billing level to eligible compute hours as they are consumed across all of the instances in an account.
üìúThere have been scattered reports of Convertible RI purchases needing to be exercised in a block-- namely, if you buy five convertible RIs in one purchase, you can't convert just two of them. Reach out to your account manager for clarification if this may impact you.


If you have multiple AWS accounts and have configured them to roll charges up to one account using the ‚ÄúConsolidated Billing‚Äù feature, you can expect unused Reserved Instance hours from one account to be applied to matching (region, availability zone, instance type) compute hours from another account.
If you have multiple AWS accounts that are linked with Consolidated Billing, plan on using reservations, and want unused reservation capacity to be able to apply to compute hours from other accounts, you‚Äôll need to create your instances in the availability zone with the same name across accounts. Keep in mind that when you have done this, your instances may not end up in the same physical data center across accounts - Amazon shuffles availability zones names across accounts in order to equalize resource utilization.
Make use of dynamic Auto Scaling, where possible, in order to better match your cluster size (and cost) to the current resource requirements of your service.
If you use RHEL instances and happen to have existing RHEL on-premise Red Hat subscriptions, then you can leverage Red Hat's Cloud Access program to migrate a portion of your on-premise subscriptions to AWS, and thereby saving on AWS charges for RHEL subscriptions. You can either use your own self-created RHEL AMI's or Red Hat provided Gold Images that will be added to your private AMI's once you sign up for Red Hat Cloud Access.

Further Reading
This section covers a few unusually useful or ‚Äúmust know about‚Äù resources or lists.

AWS

AWS In Plain English: A readable overview of all the AWS services.
Awesome AWS: A curated list of AWS tools and software.
AWS Tips I Wish I'd Known Before I Started: A list of tips from Rich Adams
AWS Whitepapers: A list of technical AWS whitepapers, covering topics such as architecture, security and economics.
Last Week in AWS: A weekly email newsletter covering the latest happenings in the AWS ecosystem.
AWS Geek: A blog by AWS Community Hero Jerry Hargrove, with notes and hand-drawn diagrams about various AWS services.


Books

Amazon Web Services in Action
AWS Lambda in Action
Serverless Architectures on AWS
Serverless Single Page Apps
The Terraform Book
AWS Scripted 2 book series
Amazon Web Services For Dummies
AWS System Administration
Python and AWS Cookbook
Resilience and Reliability on AWS
AWS documentation as Kindle ebooks


General references

AWS Well Architected Framework Guide: Amazon‚Äôs own 56 page guide to operational excellence - guidelines and checklists to validate baseline security, reliability, performance (including high availability) and cost optimization practices.
Awesome Microservices: A curated list of tools and technologies for microservice architectures. Worth browsing to learn about popular open source projects.
Is it fast yet?: Ilya Grigorik‚Äôs TLS performance overview
High Performance Browser Networking: A full, modern book on web network performance; a presentation on the HTTP/2 portion is here.



Disclaimer
The authors and contributors to this content cannot guarantee the validity of the information found here. Please make sure that you understand that the information provided here is being provided freely, and that no kind of agreement or contract is created between you and any persons associated with this content or project. The authors and contributors do not assume and hereby disclaim any liability to any party for any loss, damage, or disruption caused by errors or omissions in the information contained in, associated with, or linked from this content, whether such errors or omissions result from negligence, accident, or any other cause.
License

This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.
",open guide amazon web services join us credits contributing guidelines table contents purpose open guide scope legend aws general general information learning career development managing aws managing servers applications specific aws services basics tips gotchas alb amis api gateway auto scaling batch certificate manager clb elb cloudfront cloudformation cloudwatch device farm directconnect dynamodb ebs ec ecs eks efs elastic beanstalk elastic ips elasticache emr fargate glacier iot kinesis firehose kinesis streams kms lambda load balancers mobile hub opsworks rds rds aurora rds aurora mysql rds aurora postgresql rds mysql mariadb rds postgresql rds sql server redshift route security iam ses sns sqs step functions waf vpcs network security security groups special topics high availability billing cost management reading legal disclaimer license figures tables figure tools services market landscape selection thirdparty companiesproducts figure aws data transfer costs visual overview data transfer costs table service matrix aws services compare alternatives table aws product maturity releases aws product releases table storage durability availability price quantitative comparison open guide lot information aws already written people learn aws reading blog getting started guide referring standard aws references nonetheless trustworthy practical information recommendations arent easy come awss documentation great sprawling resource time read fully doesnt include anything official facts omits experiences engineers information blogs stack overflow also consistently date guide engineers use aws aims useful living reference consolidates links tips gotchas best practices arose discussion editing beers several engineers used aws extensively using guide please read license disclaimer please help early inprogress draft first attempt assembling information far comprehensive still likely omissions errors please help joining slack channel like talk aws general even questions discussion helps community guides improvements contributing guide guide open contributions unlike blog keep improving like open source effort combine efforts also review ensure high quality scope currently guide covers selected core services ec load balancers ebs iam partial details tips around services expect expand tutorial rather collection information read return beginners experienced goal guide brief keep dense use links practical basic facts concrete details advice gotchas folk knowledge current keep updating anyone contribute improvements thoughtful goal helpful rather present dry facts thoughtful opinion rationale welcome suggestions notes opinions based real experience extremely valuable believe possible guide format unlike venues guide sponsored aws awsaffiliated vendors written engineers use aws legend marks standardofficial aws pages docs important often overlooked tip serious gotcha used risks time resource costs significant critical security risks mistakes significant financial cost poor architectural choices fundamentally difficult correct regular gotcha limitation quirk used consequences things working breaking scaling gracefully undocumented feature folklore relatively new perhaps immature services features performance discussions lockin products decisions likely tie aws new significant way later moving nonaws alternative would costly terms engineering effort alternative nonaws options cost issues discussion gotchas mild warning attached full solution opinionated frameworks may take significant time understand andor might fit needs exactly opposite point solution cathedral nod raymonds metaphor colors indicate basics tips gotchas respectively areas correction improvement needed possibly link issue help general information use aws aws dominant public cloud computing provider general cloud computing refer one three types cloud public private hybrid aws public cloud provider since anyone use private clouds within single usually large organization many companies use hybrid private public clouds core features aws infrastructureasaservice iaas virtual machines supporting infrastructure cloud service models include platformasaservice paas typically fully managed services deploy customers applications softwareasaservice saas cloudbased applications aws offer products fit models business terms infrastructureasaservice variable cost model opex capex though prepurchased contracts still capex awss ttm revenue billion q according earnings results slide linked deck roughly amazoncoms total revenue slide deck ttm period main reasons use aws company building systems products may need scale technical knowhow want flexible tools youre significantly tied different infrastructure already dont internal regulatory compliance reasons cant use public cloudbased solution youre microsoftfirst tech stack dont specific reason use google cloud afford manage negotiate somewhat higher costs aws likely good option company reasons might point situations services preferable practice many tech startups well number modern large companies already benefit using aws many large enterprises partly migrating internal infrastructure azure google cloud aws costs billing cost management big topics entire section ec vs services users aws familiar ec aws flagship virtual server product possibly others like clbs aws products extend far beyond basic iaas often companies properly understand appreciate many aws services applied due sharply growing number services novelty complexity branding confusion fear lockin proprietary aws technology although bit daunting important technical decisionmakers companies understand breadth aws services make informed decisions hope guide help aws vs cloud providers aws dominant iaas provider market share estimate significant competition alternatives better suited companies gartner report good overview major cloud players google cloud platform gcp arrived later market aws vast resources used widely many companies including large ones gaining market share aws services similar analogous services gcp vice versa particular gcp offers advanced machine learningbased services like vision speech natural language apis common switch youre running happen spotify migrated aws google cloud discussion quora relative benefits particular note vpcs gcp global default subnetworks per region aws vpcs live within particular region gives gcp edge youre designing applications georeplication beginning also possible share one gcp vpc multiple projects roughly analogous aws accounts aws youd peer also possible peer gcp vpcs similar manner done aws microsoft azure de facto choice companies teams focused microsoft stack placed significant emphasis linux well china aws footprint relatively small market dominated alibabas alibaba cloud formerly called aliyun companies large scale may want reduce costs managing infrastructure example dropbox migrated infrastructure cloud providers digital ocean offer similar services sometimes greater ease use personalized support lower cost however none match breadth products mindshare market domination aws enjoys traditional managed hosting providers rackspace offer cloud solutions well aws vs paas goal put single service something relatively simple youre trying minimize time managing operations engineering consider platformasaservice heroku aws approach paas elastic beanstalk arguably complex especially simple use cases aws vs web hosting main goal host website blog dont expect building app complex service may wish consider one myriad web hosting services aws vs managed hosting traditionally many companies pay managed hosting providers maintain physical servers build deploy software top rented hardware makes sense businesses want direct control hardware due legacy performance special compliance constraints usually considered old fashioned unnecessary many developercentric startups younger tech companies complexity aws let build scale systems size largest companies complexity services used scale requires significant depth knowledge experience even simple use cases often require knowledge right aws simpler environment like heroku digital ocean guide may help geographic locations aws data centers dozen geographic locations known regions europe east asia north south america australia india also many edge locations globally reduced latency services like cloudfront see current list regions edge locations including upcoming ones infrastructure needs close physical proximity another service latency throughput reasons example latency ad exchange viability aws may depend location lockin use aws important aware depending aws services equivalents elsewhere lockin may completely fine company significant risk important business perspective make choice explicitly consider cost operational business continuity competitive risks tied aws aws dominant reliable vendor many companies comfortable using aws full extent others tell stories dangers cloud jail costs spiral generally aws services use lockin aws engineering resources time money take change providers future basic services like virtual servers standard databases usually easy migrate providers premises others like load balancers iam specific aws close equivalents providers key thing consider whether engineers architecting systems around specific aws services open source relatively interchangeable example lambda api gateway kinesis redshift dynamodb substantially equivalent open source commercial service equivalents ec rds mysql postgres emr elasticache less see noted combining aws cloud providers many customers combine aws nonaws services example legacy systems secure data might managed hosting provider systems aws company might use another provider everything else however small startups projects starting fresh typically stick aws google cloud hybrid cloud larger enterprises common hybrid deployments encompassing private cloud onpremises servers aws enterprise cloud providers like ibmbluemix microsoftazure netapp emc major customers uses aws google cloud awss list customers includes large numbers mainstream online properties major brands netflix pinterest spotify moving google cloud airbnb expedia yelp zynga comcast nokia bristolmyers squibb azures list customers includes companies nbc universal honeywell inc google clouds list customers large well includes mainstream sites snapchat best buy dominos sony music services use aws offers lot different services hundred last count customers use services heavily services lightly rest services youll use depends use cases choices differ substantially company company immature unpopular services aws service sounds promising doesnt mean use services narrow use case mature overly opinionated limitations building solution may better try give sense breaking products categories mustknow infrastructure typical small mediumsize users focus following services first manage use aws systems likely need know least little even dont use learn enough make choice intelligently iam user accounts identities need think accounts early ec virtual servers associated components including amis machine images load balancers clbs albs autoscaling capacity scaling adding removing servers based load ebs networkattached disks elastic ips assigned ip addresses storage files route dns domain registration vpc virtual networking network security colocation automatically use cloudfront cdn hosting content cloudwatch alerts paging monitoring managed services existing software solutions could run managed deployment rds managed relational databases managed mysql postgres amazons aurora database emr managed hadoop elasticsearch managed elasticsearch elasticache managed redis memcached optional important infrastructure key useful infrastructure components less widely known used may legitimate reasons prefer alternatives evaluate care sure fit needs lambda running small fully managed tasks serverless cloudtrail aws api logging audit often neglected important cloudformation templatized configuration collections aws resources elastic beanstalk fully managed paas deployment packaged java net php nodejs python ruby go docker applications efs network filesystem compatible nfsv ecs docker containercluster management note docker also used directly without ecs eks kubernetes k docker containercluster management ecr hosted private docker registry config aws configuration inventory history change notifications xray trace analysis debugging distributed applications microservices specialpurpose infrastructure services focused specific use cases evaluated apply situation many also proprietary architectures tend tie aws dynamodb lowlatency nosql keyvalue store glacier slow cheap alternative kinesis streaming distributed log service sqs message queueing service redshift data warehouse quicksight business intelligence service ses send receive email marketing transactions api gateway proxy manage secure api calls iot manage bidirectional communication http websockets mqtt aws clients often necessarily things like appliances sensors waf web firewall cloudfront deflect attacks kms store manage encryption keys securely inspector security audit trusted advisor automated tips reducing cost making improvements certificate manager manage ssltls certificates aws services fargate docker containers management backend ecs eks compound services similarly specific fullblown services tackle complex problems may tie usefulness depends requirements large significant need may already managed inhouse systems engineering teams machine learning machine learning model training classification lex automatic speech recognition asr natural language understanding nlu polly texttospeech engine cloud rekognition service image recognition data pipeline managed etl service swf managed state tracker distributed polyglot job workflow lumberyard game engine mobileapp development sns manage app push notifications enduser notifications cognito user authentication via facebook twitter etc device farm cloudbased device testing mobile analytics analytics solution app usage mobile hub comprehensive managed mobile app framework enterprise services relevant significant corporate cloudbased hybrid needs many smaller companies startups use solutions like google apps box larger companies may also nonaws solutions appstream windows apps cloud access many devices workspaces windows desktop cloud access many devices workdocs formerly zocalo enterprise document sharing workmail enterprise managed email calendaring service directory service microsoft active directory cloud direct connect dedicated network connection office data center aws storage gateway bridge onpremises cloud storage service catalog service approval compliance probablydontneedtoknow services bottom line informal polling indicates services broadly used often good reasons snowball want ship petabytes data amazon using physical appliance read snowmobile appliances great youve got exabyte scale data get amazon nothing beats tractor trailer full drives codecommit git service youre probably already using github solution stackshare informal stats codepipeline continuous integration likely another solution already codedeploy deployment code ec servers likely another solution opsworks management deployments using chef november puppet enterprise aws plain english offers friendly explanation different services tools services market landscape enough cloud big data enterprise companies products keep market landscape weve assembled landscape services far complete tries emphasize services popular aws practitioners services specifically help aws complementary tools almost anyone using aws must learn suggestions improve figure please file issue common concepts aws general reference covers bunch common concepts relevant multiple services aws allows deployments regions isolated geographic locations help reduce latency offer additional redundancy regions contain availability zonesazs typically first tool choice high availability azs physically separate one another even within region may span multiple physical data centers connected via low latency links natural disasters afflicting one affect others service api endpoints region endpoints differ service service services available region listed tables amazon resource names arns specially formatted identifiers identifying resources start arn used many services particular iam policies service matrix many services within aws least compared google cloud offerings internal google services often times could assemble thing open source software table effort listing rough correspondences remember table imperfect almost every case subtle differences features service aws google cloud google internal microsoft azure providers open source build openstack virtual server ec compute engine gce virtual machine digitalocean openstack nova paas elastic beanstalk app engine app engine web apps heroku appfog openshift meteor appscale cloud foundry convox serverless microservices lambda api gateway functions function apps pubnub blocks auth webtask kong tyk qinling container cluster manager ecs eks fargate container engine kubernetes borg omega container service kubernetes mesos aurora zun object storage cloud storage gfs storage account digitalocean spaces swift hdfs minio swift block storage ebs persistent disk storage account digitalocean volumes nfs cinder sql datastore rds cloud sql sql database mysql postgresql trove stores nosql well sharded rdbms cloud spanner f spanner azure database postgresql hyperscale citus crateio cockroachdb bigtable cloud bigtable bigtable hbase keyvalue store column store dynamodb cloud datastore megastore tables documentdb cassandra couchdb rethinkdb redis memory cache elasticache app engine memcache redis cache memcached redis search cloudsearch elasticsearch managed search algolia qbox elastic cloud elasticsearch solr data warehouse redshift bigquery dremel sql data warehouse oracle ibm sap hp many others greenplum business intelligence quicksight data studio power bi tableau lock manager dynamodb weak chubby lease blobs storage account zookeeper etcd consul message broker sqs sns iot pubsub pubsub service bus rabbitmq kafka mq streaming distributed log kinesis dataflow pubsub event hubs kafka streams apex flink spark streaming storm mapreduce emr dataproc mapreduce hdinsight datalake analytics qubole hadoop monitoring cloudwatch stackdriver monitoring borgmon monitor prometheus tracing xray stackdriver trace monitor application insights datadog new relic epsagon zipkin jaeger appdash metric management borgmon tsdb application insights graphite influxdb opentsdb grafana riemann prometheus cdn cloudfront cloud cdn cdn akamai fastly cloudflare limelight networks apache traffic server load balancer clbalb load balancing gfe load balancer application gateway nginx haproxy apache traffic server dns route dns dns bind email ses sendgrid mandrill postmark git hosting codecommit cloud source repositories visual studio team services github bitbucket gitlab user authentication cognito firebase authentication azure active directory oauthio mobile app analytics mobile analytics firebase analytics hockeyapp mixpanel mobile app testing device farm firebase test lab xamarin test cloud browserstack sauce labs testdroid managing ssltls certificates certificate manager lets encrypt comodo symantec globalsign automatic speech recognition natural language understanding transcribe asr lex nlu cloud speech api natural language api cognitive services aylien text analysis api ambiverse natural language understanding api stanfords core nlp suite apache opennlp apache uima spacy texttospeech engine cloud polly nuance vocalware ibm mimic espeak marytts image recognition rekognition vision api cognitive services ibm watson clarifai tensorflow opencv ocr text recognition textract documents rekognition photographs cloud vision api computer vision api tesseract language translation translate translate translator text api apertium file share sync workdocs google docs onedrive dropbox box citrix file share owncloud machine learning sagemaker deeplens ml ml engine auto ml ml studio watson ml data loss prevention macie cloud data loss prevention azure information protection please help fill table selected resources detail chart google internal mapreduce bigtable spanner f vs spanner bigtable vs megastore aws product maturity releases important know maturity aws product mostly complete list first release date links release notes recently released services first services available regions see table service original release availability cli support hipaa compliant pcidss compliant xray general lex preview polly general rekognition general athena general batch general database migration service general certificate manager general iot general waf general data pipeline general elasticsearch general aurora general service catalog general device farm general codepipeline general codecommit general api gateway general config general efs general machine learning general lambda general ecs general eks general kms general codedeploy general kinesis general cloudtrail general appstream preview cloudhsm general silk obsolete opsworks general redshift general elastic transcoder general glacier general cloudsearch general swf general storage gateway general dynamodb general directconnect general elasticache general cloudformation general ses general elastic beanstalk general route general iam general sns general emr general rds general vpc general snowball general snowmobile general cloudwatch general cloudfront general fulfillment web service obsolete simpledb nearly obsolete devpay general flexible payments service retired ec general sqs general general alexa top sites general httponly alexa web information service general httponly footnotes excludes use amazon api gateway caching rds mysql oracle postgresql engines mysqlcompatible aurora edition excludes lambdaedge includes ec systems manager includes elastic block storage ebs includes elastic load balancing includes transfer acceleration includes rds mysql oracle postgresql sql server mariadb includes autoscaling data analytics streams video streams firehose kubernetes uses custom cli podservice management called kubectl aws cli handles kubernetes master concerns iot core includes device management greengrass elasticache redis snowball snowball edge compliance many applications strict requirements around reliability security data privacy aws compliance page details awss certifications include pci dss level soc hipaa iso security cloud complex topic based shared responsibility model elements compliance provided aws provided company several thirdparty vendors offer assistance compliance security auditing aws substantial needs areas assistance good idea inside china aws services outside china generally accessible though times breakages service also aws services inside china getting help support forums many problems worth searching asking help discussion forums see known issue premium support aws offers several levels premium support first tier called developer support lets file support tickets hour turnaround time starts monthly spend reaches around changes surcharge bill higherlevel support services quite expensive increase bill many large effective companies never pay level support usually helpful midsize larger companies needing rapid turnaround deeper perplexing problems keep mind flexible architecture reduce need support shouldnt relying aws solve problems often example easily reprovision new server may urgent solve rare kernellevel issue unique one ec instance ebs volumes recent snapshots may able restore volume support rectify issue old volume services issue one availability zone case able rely redundant zone migrate services another zone larger customers also get access aws enterprise support dedicated technical account managers tams shorter response time slas definitely controversy useful paid support support staff dont always seem information authority solve problems brought attention often ability problem solved may depend relationship account rep account manager significant levels spend thousands us dollars plus per month may assigned may wish ask dedicated account manager great resource even youre paying premium support build good relationship make use questions problems guidance assign single point contact companys side avoid confusing overwhelming contact main web contact point aws many technical requests made via channels consulting managed services handson assistance aws established relationships many consulting partners managed service partners big consultants wont cheap depending needs may save costs long term helping set architecture effectively offering specific expertise eg security managed service providers provide longerterm fullservice management cloud resources aws professional services aws provides consulting services alone combination partners restrictions notes lots resources amazon limits actually helpful dont incur large costs accidentally request quotas increased opening support tickets limits easy raise noted sections additionally service limits published obtaining current limits usage limit information service may available service api trusted advisor neither case youll need contact support page awslimitchecker tools documentation provides nice summary available retrieval options limit tool also valuable automating limit checks aws terms service extensive much expected boilerplate contain important notes restrictions service particular restrictions using many aws services safetycritical systems appreciative legal humor may wish review clause related topics openstack private cloud alternative aws used large companies wish avoid public cloud offerings learning career development certifications certifications aws offers certifications professionals want demonstrate knowledge certified cloud practitioner certified solutions architect associate certified developer associate certified sysops administrator associate certified solutions architect professional certified devops engineer professional certified security specialty certified big data specialty certified advanced networking specialty certified machine learning specialty certified alexa skill builder specialty associate level certifications required prerequisites taking professional examinations longer case getting certified youre interested studying getting certifications practical overview tells lot need know official page faq training certifications training offered aws mainly instructorled onsite various thirdparty companies usually videobased training cloud guru cloudacademy linux academy need certification especially consulting companies working key tech roles large nontech companies certifications important credentials others including many tech companies startups certifications common considered necessary fact fairly silicon valley hiring managers engineers see negative signal resume certifications required access certificate lounges official aws events summits reinvent lounges typically provide power charging points seats relatively better coffee managing aws managing infrastructure state change great challenge using aws build complex systems devops general manage infrastructure state effectively time general boils three broad goals state infrastructure visibility know state infrastructure services using exactly also know anyone team make changes detect misconfigurations problems incidents service automation reconfigure infrastructure reproduce past configurations scale existing ones without lot extra manual work requiring knowledge thats someones head respond incidents easily automatically flexibility improve configurations scale new ways without significant effort add complexity using tools share review improve configurations within team much discuss really improve answers questions several approaches deploying infrastructure aws console complex automation tools thirdparty services attempt help achieve visibility automation flexibility aws configuration management first way people experiment aws via web interface aws console using console highly manual process often works automation flexibility youre going manage aws configurations manually sadly simple universal answers approach pros cons approaches taken different companies vary widely include directly using apis building tooling top using commandline tools using thirdparty tools services aws console aws console lets control much functionality aws via web interface ideally use aws console specific situations great readonly usage youre trying understand state system logging browsing helpful also reasonably workable small systems teams example one engineer setting one server doesnt change often useful operations youre going rarely like less month example onetime vpc setup probably wont revisit year case using console simplest approach think use console aws console convenient also enemy automation reproducibility team communication youre likely making change multiple times avoid console favor sort automation least path toward automation discussed next using console preclude automation wastes time later prevents documentation clarity standardization around processes team commandline tools aws commandline interface cli used via aws command basic way save automate aws operations dont underestimate power also advantage wellmaintained covers large proportion aws services date general whenever prefer command line aws console performing operations even absence fancier tools write simple bash scripts invoke aws specific arguments check git primitive effective way document operations youve performed improves automation allows code review sharing team gives others starting point future work use primarily interactive scripted consider instead using awsshell tool aws easier use autocompletion colorful ui still works command line youre using saws previous version program migrate awsshell apis sdks sdks using aws apis available major languages go ios java javascript python ruby php heavily used aws maintains short list awesomeaws list comprehensive current note support c still new retry logic important aspect consider whenever using sdks error handling heavy use wide variety failures programming errors throttling awsrelated outages failures expected occur sdks typically implement exponential backoff address may need understood adjusted time applications example often helpful alert error codes others dont use apis directly although aws documentation includes lots api details better use sdks preferred language access apis sdks mature robust wellmaintained something youd write boto good way automate operations custom way boto also known amazon sdk python boto previous version library wide use years newer version official support amazon prefer boto new projects boto contains variety apis operate either high level low level explanation low level apis client apis mapped aws cloud servicespecific apis service operations supported clients clients generated json service definition file high level option resource apis allows avoid calling network low level instead provide objectoriented way interact aws cloud services boto lot helpful features like waiters provide structure allows code wait changes occur cloud example creating ec instance need wait instance running order perform another task find writing bash script one two cli commands youre probably wrong stop consider writing boto script instead advantages check return codes easily success step depends success past steps grab interesting bits data responses like instance ids dns names add useful environment information example tag instances git revisions inject latest build identifier initialization script general visibility tagging resources essential practice especially organizations grow better understand resource usage example automation convention add tags org developer owns resource product resource supports label lifecycles temporary resources one deprovisioned future distinguish productioncritical infrastructure eg serving systems vs backend pipelines distinguish resources special security compliance requirements enabled allocate cost note cost allocation tags apply forwardlooking basis cant retroactively apply items already billed many years notorious tag limit per resource could raised caused many companies significant pain raised tags per resource aws introduced ability enforce tagging instance volume creation deprecating portions third party tools cloud custodian tags case sensitive environment environment two different tags automation setting tags likely sensible option significant scale bug asg console spaces tag names preserved type name space end get expected behavior probably true locations sdks also sure add trailing spaces tag keys unless really mean jul managing servers applications aws vs server configuration guide aws devops server configuration management general getting aws detail worth noting addition configuration management aws resources longstanding problem configuration management servers philosophy herokus twelvefactor app principles list established general best practices deploying applications pets vs cattle treat servers like cattle pets design systems infrastructure disposable minimally worrisome server unexpectedly destroyed concept immutable infrastructure extension idea minimize application state ec instances general instances able killed die unexpectedly minimal impact state application quickly move rds dynamodb efs data stores instance ebs also option though generally bootable volume ebs require manual automated remounting server configuration management large set open source tools managing configuration server instances generally dependent particular cloud infrastructure work variety linux many cases variety operating systems leading configuration management tools puppet chef ansible saltstack arent focus guide may mention relate aws containers aws docker containerization trend changing way many servers services deployed general containers designed way package applications dependencies known way build container including every library binary application needs outside kernel big advantage approach easy test validate container locally without worrying difference computer servers deploy consequence need fewer amis boot scripts deployments boot script need template fetches exported docker image runs companies embracing microservice architectures often turn containerbased deployments aws launched ecs service manage clusters via docker late though many people still deploy docker directly see ecs section details aws launched eks service manage kubernetes clusters mid though many people still deploy ecs use docker directly see eks section details visibility store track instance metadata instance id availability zone etc deployment info application build id git revision etc logs reports instance metadata service help collect aws data youll need use log management services sure set way view manage logs externally servers cloudbased services sumo logic splunk cloud scalyr logdna loggly easiest set use also expensive may factor depending much log data major open source alternatives include elasticsearch logstash kibana elastic stack graylog afford little data lots money dont special needs makes sense use hosted services whenever possible since setting scalable log processing systems notoriously time consuming track graph metrics aws console show simple graphs cloudwatch typically want track graph many kinds metrics cloudwatch applications collect export helpful metrics everywhere long volume manageable enough afford services like librato keenio datadog fancier features better user interfaces save lot time detailed comparison use prometheus graphite timeseries databases metrics open source grafana visualize dashboards stored metrics timeseries databases also open source tips managing servers timezone settings servers unless absolutely necessary always set timezone servers utc see instructions distribution ubuntu centos amazon linux numerous distributed systems rely time synchronization coordination utc provides universal reference plane subject daylight savings changes adjustments local time also save lot headache debugging elusive timezone issues provide coherent timeline events logging audit systems ntp accurate time using amazon linux comes preconfigured confirm servers configure ntp correctly avoid insidious time drift cause sorts issues breaking api calls misleading logs part automatic configuration every server time already drifted substantially generally seconds remember ntp wont shift back may need remediate manually example like ubuntu testing immutable infrastructure want proactive testing services ability cope instance termination failure helpful introduce random instance termination business hours expose issues time engineers available identify fix netflixs simian army specifically chaos monkey popular tool alternatively chaoslambda bbc lightweight option runs aws lambda security iam cover security basics first since configuring user accounts something usually early setting system security iam basics iam homepage user guide faq aws security blog one best sources news information aws security iam service use manage accounts permissioning aws managing security access control aws critical every aws administrator needs use understand iam least basic level iam identities include users people services using aws groups containers sets users permissions roles containers permissions assigned aws service instances permissions identities governed policies use aws predefined policies custom policies create iam manages various kinds authentication users software services may need authenticate aws including passwords log console username password real users access keys may use commandline tools two strings one id uppercase alphabetic string form axxxxxxxxxxxxxxxxxxx secret character mixedcase basestyle string often set services users access keys start akia normal keys access keys start asia sessiontemporary keys sts require additional sessiontoken parameter sent along id secret see documentation complete list access key prefixes multifactor authentication mfa highly recommended practice using keychain fob smartphone app second layer protection user authentication iam allows complex finegrained control permissions dividing users groups assigning permissions roles policy language used customize security policies finegrained way excellent high level overview iam policy concepts lives iam policies nutshell policy language complex errorprone json syntax thats quite confusing unless expert wise base trusted examples aws predefined managed policies beginning iam policy may simple large systems grow complexity need managed care make sure one person perhaps backup organization formally assigned ownership managing iam policies make sure every administrator works person changes reviewed goes long way avoiding accidental serious misconfigurations best give user service minimum privileges needed perform duties principle least privilege one foundations good security organize iam users groups according levels access need iam permission hierarchy explicit deny restrictive policy wins explicit allow access permissions resource explicitly given implicit deny permissions implicitly denied default test policy permissions via aws iam policy simulator tool tool particularly useful write custom policies security iam tips use iam create individual user accounts use iam accounts users beginning slightly work much way define different users groups different levels privilege want choose amazons default suggestions administrator power user etc allows credential revocation critical situations employee leaves key compromised revoke credentials little effort set active directory federation use organizational accounts aws enable mfa account always use mfa sooner better enabling already many users extra work unfortunately cant enforced software administrative policy established users use google authenticator app ios android support twofactor authentication root account consider hardware fob restrict use significant iam credentials much possible remember cloud loss highly capable iam credential could essentially mean game deployment users whole company use root user account initially create account create custom iam users andor roles use applications instead lock access use root credentials much possible ideally effectively offline critical deployments means attached actual mfa device physically secured rarely used turn cloudtrail one first things enable cloudtrail even security hawk little reason beginning data happening aws account need information youll likely also want set log management service search access logs use iam roles ec rather assign iam users applications like services sharing sensitive credentials define assign roles ec instances applications retrieve credentials instance metadata assign iam roles realm example development staging production youre setting role tied specific realm clean separation prevents example development instance connecting production database best practices aws list best practices worth reading full front iam reference interactive reference iam actions effects resources great open writing new trying understand existing iam policies multiple accounts decide whether want use multiple aws accounts research organize access across factors consider number users importance isolation resource limits permission granularity security api limits regulatory issues workload size infrastructure cost multiaccount overhead internal aws service management tools may need custom built adapted help use separate aws accounts independent parts infrastructure expect high rate aws api calls since aws throttles calls aws account level inspector automated security assessment service aws helps identify common security risks allows validation adhere certain security practices may help compliance trusted advisor addresses variety best practices also offers basic security checks around iam usage security group configurations mfa paid support tiers trusted advisor exposes additional checks around areas reserved instance optimization use kms managing keys aws offers kms securely managing encryption keys usually far better option handling key security see aws waf web application firewall help protect applications common attack patterns security auditing security monkey open source tool designed assist security audits scout open source tool uses aws apis assess environments security posture scout stable actively maintained export audit security settings audit security policies simply exporting settings using aws apis eg using boto script like secconfigpy talk reviewing monitoring changes manually automatically security iam gotchas limitations dont share user credentials remarkably common firsttime aws users create one account one set credentials access key password use sharing among engineers others within company easy dont insecure practice many reasons particular reduced ability revoke credentials peruser perservice basis example employee leaves key compromised lead serious complications instance metadata throttling instance metadata service rate limiting api calls deploy iam roles widely lots services may hit global account limits easily one solution code scripts cache reuse credentials locally short period say minutes example put awscredentials file must also refreshed automatically careful cache credentials long expire note dynamic metadata also changes time cached long time either iam operations slower api calls many seconds since aws needs propagate globally across regions uptime iams api historically lower instance metadata api wary incorporating dependency iams api critical paths subsystems example validate users iam group membership log instance arent careful precaching group membership maintaining back door might end locking users altogether api isnt available dont check aws credentials secrets git repository bots scan github looking credentials use scripts tools gitsecrets prevent anyone team checking sensitive information git repositories basics homepage developer guide faq pricing simple storage service aws standard cloud storage service offering file opaque blob storage arbitrary numbers files almost size tb prior maximum size gb larger sizes well supported via multipart support items objects placed named buckets stored names usually called keys main content value objects created deleted updated large objects streamed cannot modify parts value need update whole object partial data access work via select every object also metadata includes arbitrary keyvalue pairs used way similar http headers metadata systemdefined significant serving http content buckets cloudfront also define arbitrary metadata use uris although often bucket key names provided apis individually also common practice write location form sbucketnamepathtokey key pathtokey youll also see sn sa prefixes hadoop systems vs glacier ebs efs aws offers many storage services several besides offer filetype abstractions glacier cheaper infrequently accessed archival storage ebs unlike allows random access file contents via traditional filesystem attached one ec instance time efs network filesystem many instances connect higher cost see comparison table tips practical purposes consider capacity unlimited total size files number objects number objects bucket essentially also unlimited customers routinely millions objects permissions youre storing business data amazon important manage permissions sensibly companies like dow jones verizon saw data breaches due poorlychosen configuration sensitive data fixing later difficult task lot assets internal users different ways grant permissions access amazon content buckets iam policies use familiar identity authentication management permission scheme control access specific operations bucket policies grant deny permissions entire bucket might use hosting website make bucket publicly readable restrict access bucket ip address amazons sample bucket policies show number use cases policies come handy access control lists acls also applied every bucket object stored acls grant additional permissions beyond specified iam bucket policies acls used grant access another aws user predefined groups like general public powerful dangerous need inspect every object see access aws predefined access control groups allow access may youd expect names users everyone grants permission general public users defined aws account object available users retrieved simple http request form httpsamazonawscombucketnamefilename authorization signature required access data category authenticated users grants permissions anyone aws account limited users anyone sign aws intents purposes also open general public log delivery group used aws write logs buckets safe enable buckets need typical use case acl used conjunction requester pays functionality bucket permissions object permissions two different things independent private object public bucket seen listing bucket downloaded time public object private bucket wont seen bucket contents cant listed still downloaded anyone knows exact key users dont access set bucket permissions still make objects public sputobjectacl sputobjectversionacl permissions august aws added aws config rules ensure buckets secure aws config rules check security bucket policy bucketlevel acls still create object acls grant additional permissions including opening files whole world create new buckets different types data different sensitivity levels much less error prone complex permissions rules example data administrators like log data put new bucket administrators access guidance see secure amazon bucket deep dive access controls permissions work bucket naming buckets chosen global namespace across regions even though stores data whichever region select youll find many bucket names already taken creating bucket means taking ownership name delete bucket names restrictions bucket names used part hostname accessing bucket contents like bucketnamesuseastamazonawscom long name dns compliant common practice use company name acronym abbreviation prefix suffix prefer dnsstyle hierarchy bucket names please dont use check security measure highly insecure easily circumvented bucket names periods cause certificate mismatches used ssl use instead since conforms ssl expectations dns compliant versioning optional versioning support versions objects preserved bucket mostly useful want archive changes ability back mistakes caution lacks featureset full version control systems like git durability durability extremely high since internally keeps several replicas dont delete accident count losing data aws offers seemingly improbable durability rate mathematical calculation based independent failure rates levels replication true probability estimate either way good record durability note much higher durability ebs pricing depends storage requests transfer transfer putting data aws free youll pay way transfer ec region free transfer regions internet general free deletes free reduced redundancy infrequent access people use standard storage class storage classes lower cost reduced redundancy storage rrs effectively deprecated lower durability four nines standard note longer participates price reductions offers worse redundancy money standard result theres reason use infrequent access ia lets get cheaper storage exchange expensive access great archives like logs already processed might want look later get idea cost savings using infrequent access ia use infrequent access calculator intelligent tiering storage class designed optimize costs automatically moving data costeffective access tier without performance impact operational overhead one zone ia data accessed less frequently requires rapid access needed unlike storage classes store data minimum three availability zones azs one zoneia stores data single az costs less standardia glacier third alternative discussed separate product see comparison table performance maximizing performance means improving overall throughput terms bandwidth number operations per second highly scalable principle get arbitrarily high throughput good example sdistcp usually constrained pipe source andor level concurrency operations throughput course highest within aws ec instances buckets region bandwidth ec depends instance type see network performance column ecinstancesinfo throughput many objects extremely high data accessed distributed way many ec instances possible read write objects hundreds thousands instances however throughput limited objects accessed sequentially single instance individual operations take many milliseconds bandwidth instances limited therefore perform large numbers operations necessary use multiple worker threads connections individual instances larger jobs multiple ec instances well multipart uploads large objects want take advantage multipart uploading capabilities starting minimum chunk sizes mb large downloads also download chunks single large object parallel exploiting http get rangeheader capability list pagination listing contents happens responses per request buckets many millions objects listings take time key prefixes previously randomness beginning key names necessary order avoid hot spots longer necessary july data outside aws directconnect transfer acceleration help transfer acceleration pay equivalent months storage transfer either direction using nearer endpoints commandline applications ways use command line originally scmd best tool job still used heavily many regular aws commandline interface supports well useful situations scmd replacement greater emphasis performance via multithreading helpful large files large sets files also offers unixlike globbing support gui applications may prefer gui wish support gui access less technical users options aws console offer graphical way use use caution telling nontechnical people use however since without tight permissions offers access many aws features transmit good option macos use cases cyberduck good option macos windows support multipart uploads acls versioning lifecycle configuration storage classes server side encryption sses ssekms cloudfront tightly integrated cloudfront cdn see cloudfront section information well transfer acceleration static website hosting static website hosting option simply setting enables configurable http index error pages http redirect support public content simple way host static assets fully static website consider using cloudfront front assets like cdn cloudfront improves performance significantly ssl supported builtin amazonawscom domain supports serving sites custom domain ssl custom domain however cloudfront allows serve custom domain https amazon provides free sni ssltls certificates via amazon certificate manager sni work outdated browsersoperating systems alternatively provide certificate use cloudfront support browsersoperating systems fee including resources across domains fonts inside css files may need configure cors bucket serving resources since pretty much everything moving ssl nowadays likely want control domain probably want set cloudfront certificate front ignore aws example nonssl said youll need think invalidation updates cloudfront may wish include versions hashes filenames invalidation necessary data lifecycles managing data understanding lifecycle data important understanding data putting data bucket think lifecycle end life beginning general data different expiration policies stored separate prefixes top level example voluminous logs might need deleted automatically monthly data critical never deleted former separate bucket least separate folder wise thinking front save pain hard clean large collections files created many engineers varying lifecycles coherent organization alternatively set lifecycle policy archive old data glacier careful archiving large numbers small objects glacier since may actually cost also storage class called infrequent access durability standard discounted per gb suitable objects infrequently accessed data consistency understanding data consistency critical use multiple producers consumers data creation updates individual objects atomic youll never upload new object change object another client see part half change uncertainty lies clients clients see updates new objects create new object youll able read instantly called readafterwrite consistency well additional caveat read object exists create get eventual consistency readafterwrite apply list operations newly created objects guaranteed appear list operation right away updates objects overwrite delete object youre guaranteed eventual consistency ie change happen guarantee many use cases treating objects immutable ie deciding convention created deleted updated greatly simplify code uses avoiding complex state management note usstandard region weaker eventual consistency model newer regions readafterwrite finally corrected watch many old blogs mentioning slow updates practice eventual consistency usually means within seconds expect rare cases minutes hours filesystem general ss apis inherent limitations make hard use directly posixstyle filesystem still preserving ss object format example appending file requires rewriting cripples performance atomic rename directories mutual exclusion opening files hardlinks impossible sfs fuse filesystem goes ahead tries anyway performance limitations surprises reasons riofs c goofys go recent efforts attempt adopt different data storage format address issues likely improvements sfs sql discussion python implementation offers data deduplication snapshotting encryption one client time objectivefs discussion commercial solution supports filesystem features concurrent clients primarily using vpc consider setting vpc endpoint order allow vpchosted resources easily access without need extra network configuration hops crossregion replication feature replicating bucket one region another note already highly replicated within one region usually isnt necessary durability could useful compliance geographically distributed data storage lower latency strategy reduce regiontoregion bandwidth costs mirroring heavily used data second region ipv vs ipv long time supported ipv default endpoint httpsbucketsamazonawscom however aug supports ipv ipv use enable dualstack either preferred api client directly using url scheme httpsbucketsdualstackregionamazonawscom extends transfer acceleration well event notifications configured send sns notification sqs message aws lambda function bucket events limit individual users iam roles minimal required locations catalog approved locations otherwise tends become dumping ground people put data random locations cleaned years costing big bucks bucket deleted take hours bucket name created discussion gotchas limitations buckets sit outside vpc accessed anywhere world bucket policies set deny read permissions section carefully countless cases buckets exposed public many years notorious bucket limit per account could raised caused many companies significant pain request increases ask increase limit still capped generally per account careful make implicit assumptions transactionality sequencing updates objects never assume modify sequence objects clients see modifications sequence upload whole bunch files appear clients sla uptime use heavily youll inevitably see occasional error accessing storing data disks infrastructure fail availability usually restored seconds minutes although availability extremely high mentioned durability excellent uploading change make object causes full rewrite object avoid appendinglike behavior regular files eventual data consistency discussed surprising sometimes suffers internal replication issues object may visible subset machines depending endpoint hit usually resolve within seconds however weve seen isolated cases issue lingered hours mds multipart uploads etag header hash object many cases md hash however case general use multipart uploads one workaround compute mds put custom header done scmd incomplete multipart upload costs incomplete multipart uploads accrue storage charges even upload fails object created amazon others recommend using lifecycle policy clean incomplete uploads save storage costs note many may worth investigating whatevers failing regularly us standard region previously useast region also known us standard region replicated across coasts led greater variability latency effective jun longer case amazon regions support readafterwrite consistency amazon also renamed us standard region us east n virginia region consistent aws regional naming conventions authentication versions regions newer regions supports latest authentication file operation using cli sdk doesnt work one region works correctly another region make sure using latest authentication signature storage durability availability price illustration comparative features price table gives standard rrs ia comparison glacier ebs efs ec dxlarge instance store using virginia region sept durability per year availability designed availability sla storage per tb per month get retrieve per million write archive per million glacier eleven sloooow ia eleven rrs first tb standard eleven ebs unstated scstgpio efs high high ec dxlarge instance store unstated unstated especially notable items boldface sources pricing sla faq rrs info note considered deprecated glacier pricing ebs availability durability ebs pricing efs pricing ec sla ec ec basics homepage documentation faq pricing see also ecinstancesinfo ec elastic compute cloud aws offering fundamental piece cloud computing virtual private server instances run linux bsd windows operating systems internally theyve used heavily modified xen virtualization said new instance classes introduced kvm derived hypervisor instead called nitro far limited c instance types lastly theres bare metal hypervisor available imetal instances term ec sometimes used refer servers technically refers broadly whole collection supporting services like load balancing clbsalbsnlbs ip addresses eips bootable images amis security groups network drives ebs discuss individually guide ec pricing cost management complicated topic range free aws free tier lot depending usage pricing instance type second hour changes depending aws region whether purchasing instances ondemand spot market prepurchasing reserved instances network performance instance types aws uses general terms like low medium high refer network performance users done benchmarking provide expectations terms mean ec alternatives lockin running ec akin running set physical servers long dont automatic scaling tooled cluster setup run set static instances migrating another vps dedicated server provider hard alternatives ec direct alternatives google cloud microsoft azure rackspace digitalocean awss lightsail offering vps providers offer similar apis setting removing instances see comparisons use amazon linux aws encourages use amazon linux evolved red hat enterprise linux rhel centos used many others skeptical whatever think decision carefully true amazon linux heavily tested better supported unlikely event deeper issues os virtualization ec general many companies fine using standard nonamazon linux distribution ubuntu centos using standard linux distribution means exactly replicable environment use another hosting provider instead addition aws also helpful wish test deployments local developer machines running standard linux distribution practice thats getting common docker amazon supports official amazon linux docker image aimed assisting local development comparable environment though new enough considered experimental note currentlyintesting amazon linux supports onpremise deployments explicitly ec costs see section ec tips picking regions first set consider regions want use first many people north america automatically set useast n virginia region default worth considering best front youll want evaluate service availability services available regions costing baseline costs also vary region generally lowest useast comparison purposes compliance various countries differing regulations regard data privacy example instance types ec instances come many types corresponding capabilities virtual machine cpu architecture speed ram disk sizes types ssd magnetic network bandwidth selecting instance types complex since many types additionally different generations released years use list ecinstancesinfo review costs features amazons list instance types hard use doesnt list features price together makes doubly difficult prices vary lot use ecinstancesinfo determine set machines meet needs ecpricecom find cheapest type region youre working depending timing region might much cheaper rent instance memory cpu bare minimum turn instances arent use many situations testing staging resources may need instances wont need pay ec running costs suspended given costs calculated based usage simple mechanism cost savings achieved using lambda cloudwatch open source option like cloudcycler saas provider like gorillastack note turn instances ephemeral root volume state lost instance turned therefore stateful applications safer turn ebs backed instances dedicated instances dedicated hosts assigned hardware instead usual virtual instances expensive virtual instances preferable performance compliance financial modeling licensing reasons bit vs bit micro small medium instances still available use bit architecture youll using bit ec amd instances nowadays though smaller instances still support bit use bit unless legacy constraints good reasons use hvm vs pv two kinds virtualization technology used ec hardware virtual machine hvm paravirtual pv historically pv usual type hvm becoming standard want use newest instance types must use hvm see instance type matrix details operating system use ec youll need pick base operating system windows linux ubuntu amazon linux amis covered detail section limits cant create arbitrary numbers instances default limits numbers ec instances per account vary instance type described list use termination protection instances important longlived particular arent part autoscaling enable termination protection important line defense user mistakes accidentally terminating many instances instead one due human error ssh key management start instance need least one ssh key pair set bootstrap ie allow ssh first time aside bootstrapping manage keys instances assigning individual keys individual users services appropriate avoid reusing original boot keys except administrators creating new instances avoid sharing keys add individual ssh keys individual users gpu support rent gpuenabled instances ec use machine learning graphics rendering workloads three types gpuenabled instances currently available p series offers nvidia tesla v gpus gpu configurations targeting machine learning scientific workloads high performance computing applications p series offers nvidia tesla k gpus gpu configurations targeting machine learning scientific workloads high performance computing applications g series offers nvidia tesla gpus gpu configurations targeting graphics video encoding aws offers two different amis targeted gpu applications particular target deep learning workloads also provide access strippeddown driveronly base images aws offers amazon linux deep learning ami based amazon linux well ubuntu deep learning ami come nvidia drivers ancillary software cuda cublas cudnn tensorflow pytorch etc installed lower barrier usage note using amis lead lock due fact direct access software configuration versioning compendium frameworks included lead long instance startup times difficulttoreasonabout environments expensive ec instance types spot instances offer significant savings gpu workloads interruptions tolerable current ec instance types take advantage ipv addressing long launched subnet allocated cidr range ipvenabled vpc ec gotchas limitations never use ssh passwords dont insecure consequences compromise severe use keys instead read fully disable ssh password access ssh server making sure passwordauthentication etcsshsshdconfig file youre careful managing ssh private keys everywhere stored major improvement security passwordbased authentication newer instance types selecting ami use sure select hvm ami wont work creating instance using new ssh key pair make sure ssh key permissions correct sometimes certain ec instances get scheduled retirement aws due detected degradation underlying hardware case given couple weeks migrate new instance instance root device ebs volume typically stop start instance moves healthy host hardware giving control timing event note however lose instance store volume data ephemeral drives instance type instance store volumes instance public ip one likely change unless youre using elastic ips could problem systems depend ip address periodically may find server load balancer receiving traffic presumably previous ec server running ip address handed may matter fixed migrating another new instance ec api critical dependency infrastructure eg automated server replacement custom scaling algorithms etc running large scale making many ec api calls make sure understand might fail calls rate limited limits published subject change code test possibility many newer ec instance types either ebsonly backed local nvme disks assigned instance make sure factor ebs performance costs planning use youre operating significant scale may wish break apart api calls enumerate resources instead operate either individual resources subset entire list ec apis time consider using filters restrict gets returned instances come two types fixed performance instances eg c r burstable performance instances eg instance receives cpu credits continuously rate depends instance size instances accrue cpu credits idle use cpu credits active however instance runs credits youll notice severe degradation performance need consistently high cpu performance applications video encoding high volume websites hpc applications recommended use fixed performance instances instance userdata limited kb limit applies data raw form baseencoded form data needed downloaded userdata script new accounts may able launch instance types gpu instances initially imposed soft limit zero limit raised making support request see aws service limits method make support request note limit zero currently documented since multiple aws instances run physical hardware early cloud adopters encountered became known noisy neighbor problem feeling getting paying led user frustration however steal may best word describe whats actually happening based detailed explanation kernel determine steal time avoiding cpu steal affect application cloud may best handled properly designing cloud architecture aws introduced dedicated tenancy allows customers resources single server saw way solve noisy neighbor problem since customer uses cpu approach comes significant risk physical system needed type maintenance customer instances running using shared tenancy one underlying server needed maintenance instance server would go offline customer instances running using dedicated tenancy underlying server needs maintenance instances would go offline imetal type instances providing ability run android x emulators aws moment cloudwatch cloudwatch basics homepage documentation faq pricing cloudwatch monitors resources applications captures logs sends events cloudwatch monitoring standard mechanism keeping tabs aws resources wide range metrics dimensions available via cloudwatch allowing create time based graphs alarms dashboards alarms practical use cloudwatch allowing trigger notifications given metric alarms trigger sns notifications auto scaling actions ec actions alarms also support alerting n datapoints cross alarm threshold publish share graphs metrics creating customizable dashboard views monitor report ec instance system check failure alarms using cloudwatch events events create mechanism automate actions various services aws create event rules instance states aws apis auto scaling run commands deployments timebased schedules think cron triggered events invoke lambda functions send snssqskinesis messages perform instance actions terminate restart stop snapshot volumes custom payloads sent targets json format especially useful triggering lambdas using cloudwatch logs cloudwatch logs streaming log storage system storing logs within aws access unlimited paid storage also option streaming logs directly elasticsearch custom lambdas log agent installed servers process logs time send cloudwatch logs export logged data stream results aws services cloudwatch logs encrypted using keys managed kms detailed monitoring detailed monitoring ec instances must enabled get granular metrics billed cloudwatch cloudwatch alternatives lockin cloudwatch offers fairly basic functionality doesnt create significant additional aws lockin metrics provided service obtained apis imported aggregation visualization tools services many specifically provide cloudwatch data import services alternatives cloudwatch monitoring services include newrelic datadog sumo logic zabbix nagios ruxit elastic stack open source options statsd collectd graphite many others cloudwatch log alternatives include splunk sumo logic loggly logdna logstash papertrail elastic stack centralized logging solutions cloudwatch tips common use cases cloudwatch billing alarms instance load balancer updown alarms disk usage alerts use ecconfig monitor watch memory disk metrics windows platform instances linux example scripts thing publish metrics using aws api incurs additional cost stream directly cloudwatch logs lambda elasticsearch cluster creating subscriptions log groups dont forget take advantage cloudwatch nonexpiring free tier cloudwatch gotchas limitations metrics cloudwatch originate hypervisor hypervisor doesnt access os information certain metrics notably memory utilization available unless pushed cloudwatch inside instance use one metric alarm notifications receive alarms contextual detail specifics threshold alarm state timing default cloudwatch metric resolution minute send multiple values metric within minute aggregated minimum maximum average total sum per minute july new highresolution option added cloudwatch metrics alarms feature allows record metrics second resolution evaluate cloudwatch alarms every seconds blog post introducing feature describes publish highresolution metric cloudwatch note calling putmetricdata api storageresolution attribute item send metricdata array direct parameter putmetricdata api call data metrics kept cloudwatch months starting november used days minimum granularity increases days amis ami basics user guide amis amazon machine images immutable images used launch preconfigured ec instances come public private flavors access public amis either freely available sharedcommunity amis bought sold aws marketplace many operating system vendors publish readytouse base amis ubuntu see ubuntu ami finder amazon course amis amazon linux ami tips amis built independently based deployed must select amis match deployment using creating ebs instance store pv hvm virtualization types bit vs bit amd architecture discussed modern deployments usually bit ebsbacked hvm create custom ami snapshotting state ec instance modified amis backed ebs storage necessary image data loaded ebs volume dont require extra pull results ebsbacked instances coming much faster instance storagebacked ones amis per region must look amis region copy amis regions ami copy feature aws resources wise use tags version amis manage lifecycle create amis always tension choosing much installation configuration want bake baking less amis example configuration management client downloads installs configures software new ec instances launched allows minimize time spent automating ami creation managing ami lifecycle likely able use fewer amis probably need update frequently results longer waits new instances ready use results higher chance launchtime installation configuration failures baking amis example preinstalling fully configuring common software along configuration management client loads configuration settings launch time results faster launch time fewer opportunities software installation configuration break instance launch time increases need create manage robust ami creation pipeline baking even amis example installing required software well potentially also environmentspecific configuration information results fast launch times much lower chance instance launchtime failures without additional redeployment reconfiguration considerations require time consuming ami updates order update software configuration well complex ami creation automation processes option favor depends quickly need scale capacity size maturity team product instances boot fast autoscaled services require less spare capacity built quickly scale response sudden increases load setting service autoscaling consider baking amis backing ebs storage option systems become larger common complex ami management multistage ami creation process ideally one common base amis infrequently regenerated components common deployed services updated frequently run servicelevel ami generation process includes installation possibly configuration applicationspecific software thinking ami creation strategies use tools like packer simplify automate ami creation use rhel instances happen existing rhel onpremise red hat subscriptions could leverage red hats cloud access program migrate portion subscriptions aws thereby aws charge rhel subscriptions second time either use selfcreated rhel amis red hat provided gold images added private amis sign red hat cloud access ami gotchas limitations amazon linux package versions default instances based amazon linux amis configured point latest versions packages amazons package repository means package versions get installed locked possible changes including breaking ones appear applying updates future bake amis updates already applied unlikely cause problems running services whose instances based amis breaks appear earlier amibaking stage build process need fixed worked around new amis generated lock launch feature allows configure amazon linux instances target repository particular major version amazon linux ami reducing likelihood breaks caused amazoninitiated package version changes occur package install time cost updated packages get automatically installed future update runs pairing use lock launch feature process advance amazon linux ami discretion give tighter control update behaviors timings cloudinit defaults oftentimes users create amis performing customizations albeit manually via tool packer ansible youre careful alter cloudinit settings correspond system service eg sshd etc youve customized may find changes longer effect booting new ami first time cloudinit overwritten distros different files others generally located etccloud regardless distro want review files carefully chosen distro rolling amis complete reference cloudinit available cloudinit site advanced configuration mechanism test changes made files sandbox prior serious usage auto scaling auto scaling basics homepage user guide faq pricing additional charge auto scaling groups asgs used control number instances service reducing manual effort provision deprovision ec instances configured scaling policies automatically increase decrease instance counts based metrics like cpu utilization based schedule three common ways using asgs dynamic automatically adjust instance count based metrics things like cpu utilization static maintain specific instance count times scheduled maintain different instance counts different times day days week asgs additional charge pay underlying ec cloudwatch services auto scaling tips better matching cluster size current resource requirements use asgs result significant cost savings many types workloads pairing asgs clbs common pattern used deal changes amount traffic service receives dynamic auto scaling easiest use stateless horizontally scalable services even using asgs dynamically increase decrease instance counts seriously consider maintaining instances inside asgs given target instance count asg work ensure number instances running equal target replacing instances die marked unhealthy results consistent capacity better stability service autoscalers configured terminate instances clb alb marked unhealthy auto scaling gotchas limitations replaceunhealthy setting default asgs kill instances ec instance manager considers unresponsive possible instances whose cpu completely saturated minutes time appear unresponsive causing asg default replaceunhealthy setting turned replace instances managed asgs expected consistently run high cpu consider deactivating setting however detecting killing unhealthy nodes become responsibility ebs ebs basics homepage user guide faq pricing ebs elastic block store provides block level storage offers storage volumes attached filesystems like traditional network drives ebs volumes attached one ec instance time contrast efs shared much higher price point comparison ebs tips raid use raid drives increased performance worthy read aws post ebs io characteristics well performance tips one provision iops pay specific level io operations per second ensure particular level performance disk single gp ebs volume allows k iops max get maximum performance gp ebs volume maximum size attached ebsoptimized ec instance standard gp ebs volumes improve iops size may make sense simply enlarge volume instead paying better performance explicitly many cases reduce costs standard block size ebs volume kb ebs gotchas limitations ebs durability reasonably good regular hardware drive annual failure rate hand poor dont backups contrast durability extremely high care data back snapshots ebs sla uptime see notes high availability ebs volumes volume type indicating physical storage type types called standard st sc actually old spinningplatter disks deliver hundreds iops want unless youre really trying cut costs modern ssdbased gp io typically options want restoring snapshot create ebs volume blocks lazily read first time theyre referenced avoid initial period high latency may wish use dd fio per official documentation efs efs basics homepage user guide faq pricing efs amazons network filesystem presented nfsv server compatible nfsv client mount designed highly available durable efs file system object redundantly stored across multiple availability zones efs designed used shared network drive automatically scale petabytes stored data thousands instances attached efs offer higher throughput multiple gigabytes per second better durability availability ebs see comparison table higher latency efs priced based volume data stored costs much ebs ballpark three times much compared general purpose gp ebs volumes performance dependent volume data stored price like ebs efs uses credit based system credits earned rate kibs per gib storage consumed bursts readingwriting files metadata unlike ebs operations metadata file size owner date etc also consume credits burstcreditbalance metric cloudwatch monitored make sure file system doesnt run credits throughput capacity bursts also dependent size tib throughput go mibs mibs added stored tib instance file system storing tib would able burst rate mibs maximum throughput per ec instance mibs efs two performance modes set file system created one general purpose max io max io scales higher cost higher latency doubt use general purpose also default percentiolimit metric cloudwatch hovers around max io recommended changing performance mode means creating new efs migrating data high availability achieved mount targets different subnets availability zones efs tips efs based nfsv directory efs mounted directly doesnt root directory one application could mount fsprog another fsprog user group level permissions used control access certain directories efs file system sharing efs filesystems one efs filesystem used multiple applications services considered carefully pros performance based total size stored files everything one drive increase performance everyone one application consuming credits faster accumulate might offset another application stores files efs rarely accesses cons since credits shared one application overconsumes affect others compromise made regards security clients network access drive someone root access one client instance mount directory efs readwrite access files drive even dont access applications hosted clients isnt norootsquash equivalent efs efs gotchas limitations number nfsv features supported limits service efs offers disk level encryption new drives file systems created date encryption achieved moving data new efs volume efs file system mounted premises direct connect efs file system mounted vpc peering vpn even vpn running top direct connect using efs volume windows supported file uploaded efs take hours efs update details billing burst credit purposes metadata operations costly terms burst credit consumption recursively traversing tree containing thousands files easily ramp tens even hundreds megabytes burst credits consumed even file touched commands like find chown r adverse impact performance load balancers load balancer basics aws load balancing products classic load balancers clbs application load balancers albs network load balancers nlb introduction albs classic load balancers known elastic load balancers elbs older documentation tooling blog posts may still reference elbs clbs around since albs nlbs added aws clbs support tcp http load balancing albs support http load balancing nlbs support tcp layer load balancing clbs albs optionally handle termination single ssl certificate optionally perform active health checks instances remove destination pool become unhealthy clbs dont support complex rulebased routing albs support currently small set rulebased routing features nlbs extensive routing options clbs forward traffic single globally configured port destination instances albs forward ports configured perinstance basis better supporting routing services shared clusters dynamic port assignment like ecs mesos nlbs support multiple ports ip registering targets ip address including targets outside vpc load balancer ecs select unused port scheduling task register target group using port clbs supported ec classic well vpcs albs supported vpcs albs target groups instances ip based targets rfc ranges allowing use premise destinations via vpn direct connect load balancer tips dont opinions load balancing front dont complex load balancing needs like applicationspecific routing requests reasonable use clb alb load balancing instead even dont want think load balancing architecture simple say one server put load balancer front anyway gives flexibility upgrading since wont change dns settings slow propagate also lets things like terminate ssl easily clbs albs many ips internally aws load balancer simply collection individual software load balancers hosted within ec dns load balancing traffic among pool contain many ips least one per availability zone depending traffic levels also support ssl termination convenient scaling clbs albs scale high throughput scaling instantaneous youre expecting hit lot traffic suddenly make sense load test scale advance also contact amazon prewarm load balancer client ips general servers want know true client ip addresses load balancers must forward information somehow clbs add standard xforwardedfor header using clb http load balancer possible get clients ip address using load balancers deploying one common pattern swap instances load balancer spinning new stack latest version keep old stack running one two hours either flip back old stack case problems tear rotating certificates retaining arn rotating iam server certificates difficult standard practice upload new one update resources new arn however retain arn using updatecertificate call following process upload new iam server certificate unique name eg fuzzycomnew rename existing iam server certificate eg fuzzycom fuzzycomexpired rename new iam server certificate name previously existing certificate eg fuzzycomnew fuzzycom jiggle clbalb listener pick change alb invoke modifylistener existing details alb listener clb invoke createloadbalancerlisteners existing details clb listener load balancer gotchas limitations clbs albs fixed external ip clients see consumer apps doesnt matter enterprise customers may want ips different user vary unpredictably single client time within standard ec ip ranges similarly never resolve clb name ip put value record work break web clients reverse proxies cache dns lookups long time problematic clbs albs since change ips means minutes hours days client stop working unless disable dns caching watch javas settings sure adjust properly another example nginx reverse proxy normally resolves backends startup although way get around unheard ips recycled customers without long cooloff period client cache ip using ssl verify server might get errors responses completely different services companies operator service behind clb alb latter phenomenon means also see puzzling erroneous requests clients companies common clients using backend apis since web browsers typically cache limited period clbs albs take time scale handle sudden spikes traffic well therefore anticipate spike need prewarm load balancer gradually sending increasing amount traffic tune healthchecks carefully aggressive deciding remove instance conservative adding back pool service load balancer fronting may become inaccessible seconds minutes time extra careful autoscaler configured terminate instances marked unhealthy managed load balancer clb https listeners dont support server name indication sni need sni work around limitation either providing certificate subject alternative names sans using tcp listeners terminating ssl backend limit number albs clbs nlbs per region separately late default limit per region limits easily raised alb clb aws quite reluctant raise limit nlbs using network load balancer nlb ec clients cannot connect nlb resides another vpc vpc peering aws managed vpn unless ec client c imetal instance type vpc peering vpcs must region see troubleshooting clb clb basics homepage user guide faq pricing classic load balancers formerly known elastic load balancers http tcp load balancers managed scaled amazon clb tips best practices article mustread use clbs heavily lot detail clb gotchas limitations general clbs smart load balancers dont fancy features finegrained control traditional hardware load balancer would offer common cases involving sessionless apps cookiebased sessions http ssl termination work well default clbs refuse route traffic load balancer one availability zone az backend instance another cause last instance az becomes unavailable even healthy instances zones youre running fewer two backend instances per az almost certainly want enable crosszone load balancing complex rules directing traffic supported example cant direct traffic based regular expression url like haproxy offers apex dns names upon time couldnt assign clb apex dns record ie examplecom instead fooexamplecom needed record instead cname possible route alias record directly pointing load balancer clbs use http keepalives internal side cause unexpected side effect requests different clients tcp connection external side end tcp connection internal side never assume multiple requests tcp connection client traffic clbs backend instances subnet network acl rules evaluated ec ec traffic subnet would network acl rules evaluated default allow rule removed network acl applied subnet rule allows traffic health check port listener port must added december clbs launched vpcs support ipv addressing clbs launched ecclassic support ipv ipv dualstack dns name alb alb basics homepage user guide faq pricing websockets http supported internet protocol version ipv supported load balancing via ip supported prior application load balancer advised use tcp instead http protocol make work described use obscure useful proxy protocol pass client ips tcp load balancer alb tips use albs route services hosted shared clusters dynamic port assignment like ecs mesos albs support http hostbased routing send http requests apimydomaincom targetgroup blogmydomaincom target group well http pathbased routing send http requests api targetgroup blog target group alb gotchas limitations albs support http https plaintext http albs support http external clients internal resources instancescontainers albs support http routing portbased tcp routing instances albs target groups either single fixed healthcheck port ec instancelevel healthcheck healthcheck port target application port application instancelevel healthcheck cant configure pertarget healthcheck port different application port albs vpconly available ec classic target group healthy target requests routed targets example point listener target group containing single service long initialization phase health checks would fail requests reach service still starting although albs support sni support https certificates per load balancer limitation described might subject change elastic beanstalk elastic beanstalk basics homepage developer guide faq pricing eb elastic beanstalk paas platform service helps developers create deploy scale web applications eb handles deployment configuration provisioning load balancing autoscaling monitoring logging eb creates aws resources behalf retain full access control underlying resources cost use eb still charged full cost underlying aws resources created eb elastic beanstalk tips speed deployment launch dev stage turn health checks set deployment policy configuration want reuse multiple eb apps save current configuration using eb config save cfg myebconfig default eb doesnt alarms youll need add metrics youre monitoring default eb doesnt enable managed platform updates enable configuration eb automatically apply updates prespecified maintenance window elastic beanstalk gotchas limitations dont edit apachenginx conf files manually ec instances rewritten deployment use ebextensions instead creating eb environment longer possible change name tag eb sometimes quarantine instances cause multiple deployment issues despite quarantined eb still deploy subsequent deployments prevent behavior said instances need terminated underlying issue fixed file uploads capped mb default eb configurations update nginx config change edit elasticbeanstalksavedconfigs aware kept sync eb environment config youll need manually fetch save changes take effect elastic ips elastic ip basics documentation faq pricing elastic ips static ip addresses rent aws assign ec instances elastic ip tips prefer load balancers elastic ips singleinstance deployments could assign elastic ip instance give ip dns name consider deployment time provision load balancer instead easy add remove instances load balancers also quicker add remove instances load balancer reassign elastic ip convenient point dns records load balancers instead pointing specific ips manage manually also route aliases easier change manage situations need manage fix ip addresses ec instances example customer needs fixed ip situations require elastic ips elastic ips limited per account possible request elastic ip attached active resource small hourly fee elastic ips extra charge long youre using small cost use mechanism prevent people squatting excessive numbers ip addresses elastic ip gotchas limitations officially way allocate contiguous block ip addresses something may desire giving ips external users though allocating may get lucky part cidr block important may want bring ip involved guide go glacier glacier basics homepage developer guide faq pricing glacier lowercost alternative data infrequently accessed archival purposes useful data rarely accessed generally takes hours fulfill retrieval request aws officially revealed storage media used glacier may lowspin hard drives even tapes aws released even cost effective storate tier called glacier deep archive offers hour retrieval latencies costs roughly thousand dollars per month per petabyte glacier tips physically ship data amazon put glacier usb esata hdd glacier gotchas limitations getting files glacier glacially slow typically hours due fixed overhead per file pay per put get operation uploading downloading many small files onto glacier might expensive also k storage overhead per file hence good idea archive files upload aware perobject costs archiving data glacier costs per requests large numbers objects relatively small size take time reach breakeven point initial archiving cost versus lower storage pricing rds rds basics homepage user guide faq pricing see also ecinstancesinfords rds managed relational database service allowing deploy scale databases easily supports oracle microsoft sql server postgresql mysql mariadb amazons aurora rds offers box support high availability failover databases rds tips youre looking managed convenience rds data stores mongodb cassandra may wish consider thirdparty services providers mlab compose instaclustr make sure create new parameter group option group database since default parameter group allow dynamic configuration changes rds instances start default timezone utc necessary changed different timezone rds gotchas limitations rds instances run ebs volumes either generalpurpose provisioned iops hence constrained ebs performance verify database features need everything might want available rds example using postgres check list supported features extensions features need arent supported rds youll deploy database use failover support offered rds keep mind based dns changes make sure client reacts changes appropriately particularly important java given dns resolvers ttl configured default db migration rds importing database rds ensure take consideration maintenance window settings backup running time import take considerably longer time would expected database sizes limited tb database engines except sql server tb limit aurora supports tb databases rds mysql mariadb rds mysql mariadb basics rds offers mysql versions rds offers mariadb versions rds mysql mariadb tips mysql rds allows access binary logs multiaz instances mysql transparently replicate data across azs using drbd automated backups multiaz instances run backup instance reduce latency spikes primary performance schema performance schema enabled default mysql later disabled default versions rds wish enable performance schema reboot rds instance required mysql vs mariadb vs aurora prefer mysqlstyle database starting something new probably consider aurora mariadb well aurora increased availability nextgeneration solution said aurora may much faster mysql certain workloads mariadb modern community fork mysql likely edge mysql many purposes supported rds rds mysql mariadb gotchas limitations super privileges rds provides stored procedures perform tasks require super privileges starting stopping replication replicate nonrds instances mysql replication instances break az failovers ability manually change master replicas must rebuilt failover master global options exposed via db parameter groups variables introduced later mysql dot releases avoidtemporalupgrade mysql made available rdss x parameter group making use requires upgrade mysql x rds features pointintime restore snapshot restore supported myisam tables ensure lock flush myisam table executing snapshot backup operation ensure consistency rds postgresql rds postgresql basics rds offers postgresql rds postgresql tips recently logical replication supported subscriber publisher supports relatively large range native extensions rds postgresql supports native partitioning major features tunables supports connections ssl supports multi az pointintime recovery rds postgresql gotchas limitations superuser privileges rds provides role rdssuperuser needed operations limitations major features delayed compared open source postgresql default rds specd general purpose ssd need better performance spec provisioned iops ssd cant use rds replica outside rds without using logical replication settings cannot changed settings change changed using database parameter groups harder troubleshoot performance problems since access host sure verify extensions need available using extension listed need come work around deploy database ec many postgres utilities maintenance items expect command line access usually satisfied using external ec server rds sql server rds sql server basics rds offers sql server r including express web standard enterprise rds sql server tips recently added support backup restore tofrom may make attractive dr option onpremises installations rds sql server gotchas limitations user granted dbowner privileges database instance storage cannot expanded existing databases need space must restore database new instance larger storage tb database size limit nonexpress editions also minimum storage size gb web express gb standard enterprise limited databases per instance rds aurora rds aurora basics aurora cloud database service designed provide distributed faulttolerant relational database selfhealing storage autoscaling tb per instance currently comes two versions mysql compatible system postgresql compatible system rds aurora mysql rds aurora mysql basics amazons proprietary fork mysql intended scale high concurrency workloads generally speaking individual query performance aurora expected improve significantly relative mysql mariadb aurora intended maintain performance executing many queries concurrently equivalent mysql mariadb server could handle notable new features include logstructured storage instead btrees improve write performance outofprocess buffer pool databases instances restarted without clearing buffer pool underlying physical storage specialized ssd array automatically maintains copies data across azs aurora read replicas share storage layer write master significantly reduces replica lag eliminates need master write distribute binary log replication allows zerodataloss failovers master replica master read replicas share storage known collectively aurora cluster read replicas span regions rds aurora mysql tips order take advantage auroras higher concurrency applications configured large database connection pools execute many queries concurrently possible example aurora servers tested produce increasing performance oltp workloads connections aurora scales well multiple cpus may require large instance class optimal performance easiest migration path aurora restoring database snapshot mysql next easiest method restoring dump mysqlcompatible database mariadb lowdowntime migrations mysqlcompatible databases set aurora instance replica existing database none methods options amazon offers feebased data migration service replicate aurora cluster mysql another aurora cluster requires binary logging enabled performant native aurora replication aurora read replicas equivalent multiaz backup configured zerodataloss failover targets fewer scenarios creation multiaz aurora instance required rds aurora mysql gotchas limitations aurora x based mysql x cherrypicking later mysql features missing features well online ddl features introduced aurora x based mysql x aurora support gtid transactions either aurora x aurora x release lines aurora maximum cluster size tb rds aurora postgresql rds aurora postgresql basics amazons proprietary fork postgresql intended scale high concurrency workloads maintaining ease use currently based postgresql higher throughput x similar hardware automatic storage scale gb increments tb low latency read replicas share storage layer master significantly reduces replica lag point time recovery fast database snapshots rds aurora postgresql tips aurora postgres default supposed utilize high connection rates reason connection pooling must configured accordingly aurora based postgresql lacks features like declarative partitioning logical replication rds aurora postgresql gotchas limitations aurora postgresql falls behind normal rds comes available versions need features latest postgresql version might better plain rds patching bug fixing separate open source postgresql elasticache elasticache basics homepage user guide redis user guide memcached faq pricing elasticache managed inmemory cache service used store temporary data fast inmemory cache typically order avoid repeating computation multiple times could reused supports memcached redis open source inmemory cache software exposes using native access apis main benefit aws takes care running patching optimizing cache nodes need launch cluster configure endpoint application aws take operational work running cache nodes elasticache tips choose engine clustering configuration instance type carefully based application needs documentation explains detail pros cons limitations engine order help choose best fit application nutshell redis preferable storing complex data structures memcached plain keyvalue store simplicity memcached allows slightly faster allows scale needed redis features may use application memcached aws provides enhanced sdks certain programming languages implement autodiscovery feature available normal memcached client libraries elasticache gotchas limitations since cases changing cache clusters may restrictions like scaling purposes may become problem launched using cloudformation stack also contains resources really need change cache order avoid getting cloudformation stacks nonupdateable state recommended launch elasticache clusters like resource similar constraints dedicated stacks replaced entirely new stacks desired configuration dynamodb dynamodb basics homepage developer guide faq pricing dynamodb nosql database focuses speed flexibility scalability dynamodb priced combination throughput storage dynamodb alternatives lockin unlike technologies behind many amazon products dynamodb proprietary aws product interfacecompatible alternative available open source project tightly couple application api featureset take significant effort replace commonly used alternative dynamodb cassandra dynamodb tips local version dynamodb provided developer use dynamodb streams provides ordered stream changes table use replicate back drive events data dynamodb used simple locking service dynamodb indexing include primary keys either singleattribute hash key composite hashkey range also query nonprimary key attributes using secondary indexes data types dynamodb supports three data types number string binary scalar multivalued sets dynamodb also support json late dynamodb supports global tables backup restore functionality dynamodb gotchas limitations dynamodb doesnt provide easy way bulkload data possible data pipeline unfortunate consequences since need use regular service apis update existing create new rows common temporarily turn destination tables write throughput speed import tables write capacity increased dynamodb may irreversible split partitions underlying table spreading total table capacity evenly across new generation tables later capacity reduced capacity partition also reduced total number partitions leaving less capacity partition leaves table state much easier hotspots overwhelm individual partitions important make sure dynamodb resource limits compatible dataset workload example maximum size value added dynamodb table kb larger items stored url stored dynamodb dealing time series data dynamodb challenging global secondary index together sampling timestamps possible solution explained dynamodb allow empty string valid attribute value common workaround use substitute value instead leaving field empty setting fine grained policies access dynamodb tables sure include secondary indices policy document well ecs ecs basics homepage developer guide faq pricing ecs ec container service relatively new service launched end manages clusters services deployed via docker see containers aws section context containers ecs growing adoption especially companies embrace microservices deploying docker directly ec another common approach using docker aws using ecs required ecs yet seem predominant way many companies using docker aws also possible use elastic beanstalk docker reasonable youre already using elastic beanstalk using docker may change way services deployed within ec elastic beanstalk radically change services used ecr ec container registry amazons managed docker registry service simpler running registry missing features might desired users doesnt support crossregion replication images want fast fleetwide pulls large images youll need push image regionlocal registry doesnt support custom domains certificates containers health monitored via clb alb also used address containerized service using alb need handle port contention ie services exposing port host since albs target groups associated ecsbased services directly hitchhikers guide aws ecs docker j cole morrison excellent article introduction aws ecs concepts ecs tips log drivers ecs supports multiple log drivers awslogs splunk fluentd syslog json use awslogs cloudwatch make sure group made logs first drivers fluentd enabled default install agent enable driver adding ecsavailableloggingdriversawslogsfluentd etcecsecsconfig blog convox commentary lists number common challenges ecs early possible optimize disk clean ecs default unused containers deleted hours unused images minutes settings changed adding ecsenginetaskcleanupwaitdurationm ecsimagecleanupintervalm etcecsecsconfig information optimizing ecs disk cleanup ecs alternatives lockin kubernetes extensive container platform available hosted solution google cloud httpscloudgooglecomcontainerengine aws httpstectoniccom aws kubernetes quickstart httpsawsamazoncomquickstartarchitectureheptiokubernetes developed collaboration heptio nomad orchestratorscheduler tightly integrated hashicorp stack consul vault etc please help expand incomplete section eks eks basics homepage user guide faq pricing eks elastic kubernetes service new service launched june provides managed kubernetes masters highly available pair deploy ks services pods top ec based kubernetes nodes see containers aws section context containers eks awss solution hosting kubernetes natively aws replacement ecs directly response large market dominance kubernetes eks launch ec nodes would configured setup either manually via cloudformation automation solution eks management done utility called kubectl kube configuration files files need configured speak ks master certificate url aws cli autogenerate configuration file kubect requires communicating cluster eks authentication integrated iam rolespermissions aws cli integrated subcommand generating authentication tokens formerly done via custom plugin kubectl called awsiamauthenticator formerly heptioauthenticatoraws eks provides calico tigera securing workloads within cluster using kubernetes network policy eks tips multiple clusters supported using different kubeconfig files aws kubernetes quickstart developed collaboration heptio eks alternatives lockin ecs amazons native container scheduled platform released dont utilise containers today looking get started ecs excellent product kubernetes extensive container platform available hosted solution google cloud aws digital ocean azure nomad orchestratorscheduler tightly integrated hashicorp stack consul vault etc eks gotchas limitations pods service configurations rapidly consume ip addresses inside vpc proper care maintenance applied ensure ip exhaustion occur currently integrated monitoring cloudwatch eks pods services need deploy monitoring system supports kubernetes prometheus autoscaling based cpumemory node limited aware pending servicespods cannot start using clusterautoscaler useful scaling based node resource usage unschedulable pods prometheus popular monitoring solution ks metrics alerts used send events lambda sqs solutions take autoscaling actions footnotes httpsdocsawsamazoncomekslatestuserguidecreatekubeconfightml httpsawsamazoncomaboutawswhatsnewamazonekssimplifieskubernetesclusterauthentication fargate fargate basics homepage faq pricing fargate allows manage deploy containers without worry running underlying compute infrastructure fargate serves new backend addition legacy ec backend ecs eks tasks run fargate ec backends called launch types fargate allows treat containers fundamental building blocks infrastructure fargate tips fargate follows similar mindset lambda lets focus applications instead dealing underlying infrastructure fargate supported cloudformation awscli ecscli fargate tasks launched alongside tasks use ec launch type creating large fargate deployment make sure estimate costs compare alternative solution uses traditional ec deployment fargate prices several times equivalentlysized ec instances evaluate solutions based potential costs refer pricing ec fargate fargate alternatives lockin azure container instances available microsoft azure preview version allows run applications containers without manage virtual machines fargate gotchas limitations april fargate available multiple regions useast useast uswest euwest january fargate used ecs support eks originally planned yet launch smallest resource values configured ecs task uses fargate vcpu gb memory task storage ephemeral fargate task stops storage deleted lambda lambda basics homepage developer guide faq pricing lambda aws serverless compute offering allowing users define lambda functions selection runtimes invoked via variety triggers including sns notifications api gateway invocations lambda key service enables serverless architecture aws alongside aws api gateway aws batch aws dynamodb lambda tips idea behind serverless users dont manage provisioning scaling maintenance physical machines host application code lambda machine actually executes userdefined function abstracted container defining lambda function users able declare amount memory available function directly affects physical hardware specification lambda container changing amount memory available lambda functions also affects amount cpu power available aws offer hard guarantees around container reuse general expected unaltered lambda function reuse warm previously used container called shortly another invocation users use way optimize functions smartly caching application data initialization lambda hasnt invoked time may warm containers left case lambda system load initialize lambda code cold start scenario add significant latency lambda invocations strategies avoiding mitigating cold starts including keeping containers warm periodic triggering favoring lightweight runtimes node opposed java lambda integrated aws cloudwatch provides logger runtime publishes cloudwatch events lambda offers outofthebox optin support aws xray xray help users diagnose lambda issues offering indepth analysis lambdas execution flow especially useful investigating issues calling aws services xray gives detailed easytoparse visualization call graph using timed cloudwatch events users use lambda run periodic jobs cronlike manner events sent lambda fail processing managed using dead letter queue dlq sqs serverless martin fowlers thoughts aws serverless application model sam simplification built top cloudformation help define manage deploy serverless applications using lambda serverless one popular frameworks building serverless applications using aws lambda serverless compute options helpful frameworks lambda alternatives lockin clouds offer similar services different names including google cloud functions azure functions ibm openwhisk also running kubernetes another lambda alternative openfaas lambda gotchas limitations testing lambdas locally remotely challenge several tools available make easier including officially supported sam local managing lots lambda functions workflow challenge tooling manage lambda deployments still immature aws official workflow around managing function versioning aliases painful one option avoid lambda versioning abstracting deployment workflow outside lambda one way accomplished deploying application successive stages distinct aws account per stage account needs aware latest version rollbacks updates handled external tooling oct minimum charge lambda invocation ms costbenefit reducing run time addingremoving buckets triggers lambda function error may occur error creating trigger configuration ambiguously defined cannot overlapping suffixes two rules prefixes overlapping event type case manually remove lambda event events tab properties section bucket managing size deployment artifact challenge especially using java options mitigate include proguard loading dependencies runtime tmp using dynamodb trigger lambda functions error may occur problem internal lambda error please contact lambda customer support usually means lambda cant detect anything dynamodb stream within last hours issue persists deleting recreating trigger may help lambda needs access resources vpc example elasticache rds need deployed within increase coldstart times elastic network interface eni registered within vpc concurrent function aws also relatively low initial limit number enis created within vpc however increased good case made aws support lambda several resource limits mb request response payload size mb limit compressed zipjar file deployment package size mb limit codedependencies package compression mb limit local storage tmp lambda code samples fanout example using lambda fanout copy data one service case kinesis multiple aws data services destinations fanout data sample include iot sqs aws limit monitor using lambdas shows use multiple lambdas monitoring lambda ecs worker pattern shows use lambda workflow data picked lambda pushed queue sent ecs processing secure pet store sample java application uses lambda api gateway cognito user identity awslambdalist list hopefully useful aws lambdas lambdarelated resources quite code samples usual guaranteed tested caveat emptor please help expand incomplete section api gateway api gateway basics homepage developer guide faq pricing api gateway provides scalable secured frontend service apis work lambda elastic beanstalk regular ec services allows serverless deployment applications built lambda switching deployments upgrades tricky builtin mechanisms single domain name migrate one api gateway another one may necessary build additional layer front even another api gateway allow smooth migration one deployment another api gateway alternatives lockin kong opensource onpremises api microservices gateway built nginx lua kong extensible plugins tyk opensource api gateway implemented go available cloud onpremises hybrid api gateway tips prior could send receive plain text data people would baseencode binary data binary data supported api gateway supports openapi specification aka swagger allows describe api languageagnostic way use various tools generate code supporting api generating clients extremely easy either aws console using getsdk api api gateway integrates cloudwatch outofthebox allowing easy logging requests responses note request response large cloudwatch truncate log full requestreply logging make sure integration eg lambda good practice calling api gateway apis log request id client later refer request ids cloudwatch easier tracing debugging multiple ways secure api including builtin support aws cognito usecases cognito easiest simplest way authenticate users although roll solution using custom authorizer basically lambda define determines request acceptable api gateway lends well reststyle development perfectly reasonable implement rpcstyle api api gateway well depending usecase often lead much simpler api structure smoother client experience rpcstyle apis particularly useful designing services sit deeper stack dont serve content directly users api gateway gotchas limitations api gateway supports encrypted https endpoints support unencrypted http probably good thing api gateway doesnt support multiregion deployments high availability service deployed single region comes global endpoint served aws edge locations similar cloudfront distribution cannot multiple api gateways hostname different aws regions use route distribute traffic forum post integration timeout various integration types eg lambda http api gateway timeouts described unlike limits timeouts cant increased api gateway returns status code network low level transport related issue happens may see message cloudwatch logs request includes message execution failed due internal error one possible reason error even though backend server running may something outside http specification like sending wellformed chunked messages test hitting backend directly curl raw backendendpointurl seeing complains aws xray support exists cumbersome use aws services calling api gateway trace seemingly end api gateway also appear node service map careful using export feature resulting swagger template often incomplete doesnt integrate well swagger extensions things cors many changes api gateway resources need deployed via console api call unfortunately api gateway terrible notifying user changes staged deployment changes require deployment youve changed something api taking effect theres decent chance need deploy particular deploying api gateway part cloudformation stack changes automatically deploy unless deployment resource changed change work around always changing deployment resource cloudformation update running custom resource ensures deployment made alternatively using serverless application model definition api gateway resource always expect api deployed stack update since sam generate new deployment every time api gateway support nested query parameters method requests api gateway limits number resources described something considered start using api gateway platform teamorganization deploys api gateway please help expand incomplete section step functions step functions basics homepage developer guide faq pricing step functions aws way create state machines manage serverless workflow step functions tips variety structures supported including branching parallel operations waits tasks represent real work nodes frequently lambda functions activities externally driven tasks implemented way like state machines data flows steps modified added state machine executes best tasks idempotent part may want rerun state machine input data debugging aws console facilitates examining execution state various steps console lets steps select input tab failed execution copy input data json select state machine name breadcrumbs start new execution pasting input data copied previously step functions gotchas limitations step functions free tier eligible initial transitions per month thereafter charge per state transitions many simultaneous executions aware lambda throttling limits peraccount preregion recently became settable perlambda step function executions limited events step creates multiple events means iterating loop using lambda limited iteration count around needing continue new execution route route basics homepage developer guide faq pricing route aws dns service route alternatives lockin historically aws slow penetrate dns market often driven perceived reliability longterm vendor relationships route matured becoming standard option many companies route cheap historic dns standards fairly large global network geographic dns formerly premium features convenient already using aws generally dont get locked dns provider simple use cases increasingly become tied use specific features like geographic routing route alias records many alternative dns providers exist ranging longstanding premium brands like ultradns dyn less well known modestly priced brands like dnsmadeeasy dns experts tell market opaque enough reliability performance dont really correlate well price route usually somewhere middle pack performance tests eg solvedns reports route tips know route alias records route supports standard dns record types note alias resource record sets standard part dns specific route feature available dns providers provider different name aliases like internal name bit like cname resolved internally server side example traditionally could cname dns name clb alb often better make alias load balancer effect latter case externally client sees target record points often wise use alias record alternative cnames since updated instantly api call without worrying dns propagation use clbsalbs resource aws supports somewhat confusingly cname aliases depending type target aliases extensions regular dns records exported output zone file additional nonstandard alias lines latencybased routing allows users around globe automatically directed nearest aws region running latency reduced understand domain registration dns management hosted zones two separate route services buytransfer domain route automatically assigns four name servers eg nsawsdnscom route also offers automatically create hosted zone dns management required dns management account even route need create ns record pointing servers assigned domain route one use case would put domain registration mission critical bastion account managing hosted zones within another account accessible applications route gotchas limitations private hosted zone respond dns queries originate within vpc result route respond request made via vpn direct connect get around need implement hybrid cloud dns solutions use simple ad provided ip addresses query hosted zone cloudformation cloudformation basics homepage developer guide faq pricing additional charge cloudformation allows manage sets resources aws services grouped stacks cloudformation allows define stacks template using json yaml cloudformation one major services underpinning aws infrastructure code capabilities crucial enabling repeatable consistent deployments infrastructure cloudformation additional charge pay underlying resources cloudformation alternatives lockin hashicorps terraform thirdparty alternative support cloud platformsproviders including azure openstack aws features may available terraform eg multiaz elasticache using redis may resort embedded cloudformation templates pulumi enables teams define deliver cloud native infrastructure code cloud language containers serverless kubernetes infrastructure cloudformation tips validate stack different aws account cloudformation truly shines making multiple deployments stack different accounts regions common practice deploy stacks successive stages ending production rollout avoid potentially timeconsuming syntax errors eating deployment time running validatetemplate cloudformation sometimes slow update resources new features old services user able define template need deploy resource feature isnt supported template cloudformation allows running arbitrary code using lambda stack create update via custom resources custom resources make cloudformation truly powerful tool sorts neat things quite easily sanity tests initial configuration dynamo tables buckets cleaning old cloudwatch logs etc writing custom resources java cfnresponse comes handy writing custom resources javascript aws provides good reference documentation cloudformation offers visual template designer useful getting speed template syntax using stacksets users define deploy entire production application consisting multiple stacks one service per stack single cloudformation template youre developing serverless application ie using lambda api gateway cloudformation offers simplified template format called sam use restrictive stack policy without one inadvertently delete live production resources probably causing severe outage turn termination protection stacks avoid costly accidents cloudformation template reference indispensable discovering isnt possible cloudformation template troposphere python library makes much easier create cloudformation templates currently supports aws openstack resource types troposphere attempts support resources types described cloudformation templates built error checking recommended soft dependency awacs allows generate aws access policy json writing python code stacker python application makes easy define configure orchestrate manage dependencies cloudformation stacks across multiple userdefined environments building different stacks similar layers may useful build separate templates layer reuse using awscloudformationstack avoid hardcoding resource parameters potentially change use stack parameters much resort default parameter values cloudformation used awkward json format makes reading debugging difficult use effectively typically involved building additional tooling including converting yaml supported directly wherever possible export relevant physical ids stacks defining outputs cloudformation templates actual names assigned resources created outputs returned describestack api calls get imported stacks part recent addition crossstack references note importing outputs stack another stack creates hard dependency tracked cloudformation able delete stack outputs importing stacks cloudformation set send sns notifications upon state changes enabling programmatic handling situations stacks fail build simple email alerts appropriate people informed cloudformation allows use conditionals creating stack one common way leverage capability support multienvironment cloudformation templates configuring use ifelse statements value parameter passed eg env environmentspecific values things like vpc ids securitygroup ids ami names passed reusable generic templates version control cloudformation templates cloud application combination code written infrastructure runs version controlling easy roll back known good states avoid naming resources explicitly eg dynamodb tables deploying multiple stacks aws account names come conflict potentially slowing testing prefer using resource references instead things shouldnt ever deleted set explicit deletionpolicy resource prevent resource deleted even cloudformation stack deleted useful anything maintain expensivetorebuild state dynamodb tables things exposed outside world api gateway apis cloudformation gotchas limitations given cloudformation stack end wide variety states error reporting generally weak often times multiple observetweakredeploy cycles needed get working template internal state machine varying states extremely opaque crossregion operations possible cloudformation without using custom resource crossregion sns subscriptions handmade resources live alongside cloudformationcreated resources inadvisable sometimes unavoidable possible leave resource management cloudformation template provide readonly access console modifications stack resources made outside cloudformation potentially lead stacks stuck updaterollbackfailed mode stacks state recovered using continueupdaterollback command command initiated console cli resourcestoskip parameter usable cli useful continueupdaterollback command fails new feature drift detection used detect outside changes made stack cloudformation useful complex variety pain points many companies find alternate solutions many companies use significant additional tooling cloudformation slow especially items like cloudfront distributions route cname entries hard assemble good cloudformation configurations existing state aws offer trick clumsy cloudformer also hasnt updated ages oct doesnt support templatizing many new services wont fully define even existing services since updated example dynamo tables defined cloudformer wont contain ttl definitions autoscaling configuration thirdparty version tool supported resources called former many users dont use cloudformation limitations find solutions preferable often ways accomplish goals local scripts boto bash ansible etc manage build infrastructure dockerbased solutions convox etc deploying large stacks ie many resources problematic due unintuitive api limits instance api gateways createdeployment api default limit requests per minute limit readily exceeded even moderatelysized cloudformation stacks creating cw alarms another commonly seen limit putmetricalarm tps especially creating many autoscaling policies dynamodb one way work around limit include cloudformation dependson clauses artificially chain resource creation creatingdeleting stacks little less clean ideal resources leave behind traces aws account even deletion eg lambda leave behind cloudwatch log groups never expire vpcs network security security groups vpc basics homepage user guide faq security groups pricing vpc virtual private cloud virtualized networking layer aws systems aws users basic understanding vpc concepts need get details vpc configurations trivial extremely complex depending extent network security needs modern aws accounts created ecvpc accounts support vpcs instances default vpc older accounts may still using ecclassic mode features dont work without vpcs probably want migrate vpc network security tips security groups first line defense servers extremely restrictive ports open incoming connections general use clbs albs load balancing ports need open incoming traffic would port whatever port application uses security groups access policy deny default port hygiene good habit pick unique ports within unusual range different kind production service example web frontend might use backend services postgres instances usual make sure finegrained security groups set servers makes disciplined listing services also errorproof example accidentally extra apache server running default port backend server exposed migrating classic migrating older ecclassic deployments modern ecvpc setup article may help migrate elastic ips ecclassic ecvpc basic aws use one default vpc may sufficient scale consider mapping network topology thoroughly good overview best practices consider controlling access private aws resources vpn get better visibility control connection connection attempts expose smaller surface area attack compared exposing separate potentially authenticated services public internet eg bug yaml parser used ruby rails admin site much less serious admin site visible private network accessed vpn another common pattern especially deployments get larger security regulatory requirements get stringent team sizes increase provide bastion host behind vpn ssh connections need transit cheap vpn access private aws resources consider using pointtosite software vpn openvpn either installed using official ami though limited concurrent users free license installed using openvpn package linux linux package allows unlimited concurrent users installation less straightforward openvpn installer script help install add client keys easily consider using security groups sources security group rules instead using cidrs way hosts source security group hosts security group allowed access much dynamic secure way managing security group rules vpc flow logs allow monitor network traffic within vpc logs stored cloudwatch logs groups used security monitoring third party tools performance evaluation forensic investigation see vpc flow logs user guide basic information see flowlogsreader cli tool python library retrieve work vpc flow logs ipv available vpc along announcement came introduction egressonly internet gateway cases one would use nat gateways enable egressonly traffic vpc ipv one use egressonly internet gateway purpose ipv amazon provides ipv cidr block vpc request present cannot implement ipv block happen one already new existing vpcs use ipv existing vpcs need configured ipv cidr block associated new vpcs privatelink homepage user guide pricing one uses private link interface vpc endpoints deploys eni vpc subnets allows direct access aws apis accessible locally vpc without go internet another use case would expose service accounts aws vpc endpoint service vpc network security gotchas limitations vpcs tied one region one account subnets tied one vpc limited one availability zone security groups tied one vpc utilizing infrastructure multiple vpcs make sure configurationdeployment tools take account vpc endpoints currently available dynamodb security requirement lockdown outbound traffic vpc may want use dns filtering control outbound traffic services careful choosing vpc ip cidr block going need make use classiclink make sure private ip range doesnt overlap ec classic going peer vpcs carefully consider cost data transfer vpcs since workloads integrations prohibitively expensive new rds instances require subnet group within vpc youre using default vpc isnt concern contain subnet availability zone region however youre creating vpc plan using rds make sure least two subnets within vpc act subnet group delete default vpc recreate via cli console careful vpc vpn credentials lost compromised vpn endpoint must deleted recreated see instructions replacing compromised credentials security groups route tables apply entries separately ipv ipv one must ensure add entries protocols accordingly managed nat gateways convenient alternative manually managing nat instances come cost per gigabyte consider alternatives youre transferring many terabytes private subnets internet transfer terabytespetabytes data ec instances private subnets avoid nat gateway data processing charge setting gateway type vpc endpoint route traffic tofrom vpc endpoints instead going nat gateways kms kms basics homepage developer guide faq pricing kms key management service secure service creating storing auditing usage cryptographic keys service integration kms integrates aws services ebs elastic transcoder emr redshift rds ses workmail workspaces encryption apis encrypt decrypt api allow encrypt decrypt data kms service side never exposing master key contents data keys generatedatakey api generates new key master key data key contents exposed use encrypt decrypt size data application layer kms store manage track data keys responsible application auditing turn cloudtrail audit kms api events access use key policies iam policies grant different levels kms access example create iam policy allows user encrypt decrypt specific key kms tips common companies manage keys completely via homegrown mechanisms far preferable use service kms beginning encourages secure design improves policies processes around managing keys good motivation overview aws presentation cryptographic details aws whitepaper blog convox demonstrates use kms encryption rest kms gotchas limitations encrypt api works kb data larger data requires generating managing data key application layer kms audit events available cloudtrail lookup events api need look find raw jsongz files cloudtrail saves order encrypt multipart upload kms key policy needs allow kmsdecrypt kmsgeneratedatakey addition kmsencrypt otherwise upload fail accessdenied error kms keys region specific stored used region created cant transferred regions kms keys key policy must grant access something manage key dont grant anything access key creation reach support key policy reset reduce risk key becoming unmanagable use key policy grant access iam roles users delete userrole recreating user role wont grant permission key cloudfront cloudfront basics homepage developer guide faq pricing cloudfront aws content delivery network cdn primary use improving latency end users accessing cacheable content hosting global edge locations cloudfront alternatives lockin cdns highly fragmented market cloudfront grown leader many alternatives might better suit specific needs cloudfront tips ipv supported configurable setting enabled default new cloudfront distributions ipv support extends use waf cloudfront http supported clients must support tls sni common use users browse download content get head methods requests cloudfront also supports since uploaded data post put delete options patch must enable specifying allowed http methods create distribution interestingly cost accepting uploaded data usually less sending downloaded data basic version cloudfront supports ssl via sni extension tls supported modern web browsers need support older browsers need pay hundred dollars month dedicated ips consider invalidation needs carefully cloudfront support invalidation objects edge locations typically takes many minutes propagate edge locations costs per request first requests cdns support better everyone use tls nowadays possible ilya grigoriks table offers good summary features regarding tls performance features cloudfront alternative invalidation often easier manage instant configure distribution cache query strings append unique query strings versions onto assets updated frequently good web performance recommended enable compression cloudfront distributions origin another source already compress cloudfront gotchas limitations using backing store remember endpoints website hosting general different example bucketnamesamazonawscom standard serving endpoint redirect error page support need use website hosting endpoint listed bucket eg bucketnameswebsiteuseastamazonawscom appropriate region default cloudfront forward http host headers origin servers problematic origin run multiple sites switched host headers enable host header forwarding default cache behavior settings bit ssl certificates cloudfront support bit ssl certificates late using externally issued ssl certificate youll need make sure bits see ongoing discussion although connections clients cloudfront edge servers make use ipv connections origin server continue use ipv directconnect directconnect basics homepage user guide faq pricing direct connect private dedicated connection networks aws directconnect tips data center partnering relationship aws setup streamlined use consistent predictable network performance guarantees gbps gbps per link use peer colocation corporate physical datacenter network vpcs example extend corporate ldap andor kerberos ec instances running vpc example make services hosted outside aws financial regulatory legacy reasons callable within vpc redshift redshift basics homepage developer guide faq pricing redshift aws managed data warehouse solution massively parallel scalable columnar widely used built using paraccel technology exposes postgrescompatible interfaces redshift alternatives lockin whatever data warehouse select business likely locked long time also coincidentally data warehouse market highly fragmented selecting data warehouse choice made carefully research awareness market landscape business intelligence tools youll using redshift tips although redshift mostly postgrescompatible sql dialect performance profile different redshift supports primitive data types list unsupported postgres types leader node computation nodes leader node distributes queries computation ones note functions executed lead node make sure create new cluster parameter group option group database since default parameter group allow dynamic configuration changes major thirdparty bi tools support redshift integration see quora top performance tuning techniques amazon redshift provides excellent list performance tuning techniques amazon redshift utils contains useful utilities scripts views simplify redshift ops vacuum regularly following significant number deletes updates reclaim space improve query performance avoid performing blanket vacuum analyze operations cluster level checks table determine whether vacuum analyze action needs taken wasteful perform analyze vacuum commands objects require utilize analyze vacuum schema utility perform work sql determine whether table needs vacuumed analyzed found schema utility readme wish create maintenance process redshift provides various column compression options optimize stored data size aws strongly encourages users use automatic compression copy stage redshift uses sample data ingested analyze column compression options however automatic compression applied empty table data therefore make sure initial load batch big enough provide redshift representative sample data default sample size rows redshift uses columnar storage hence indexing capabilities however use distribution key sortkey improve performance redshift two types sort keys compounding sort key interleaved sort key compound sort key made columns listed sort key definition useful queries operations using prefix sortkey interleaved sort key hand gives equal weight column subset columns sort key dont know ahead time columns want choose sorting filtering much better choice compound key example using interleaved sort key distribution strategies since data redshift physically distributed among nodes choosing right data distribution key distribution style crucial adequate query performance three possible distribution style settings even default key use key collocate join key columns tables joined queries use place data smallsized tables cluster nodes redshift gotchas limitations redshift handle heavy queries well scale horizontally ie handle multiple queries parallel therefore expect high parallel load consider replicating possible sharding data across multiple clusters leader node manages communications client programs communication compute nodes single point failure although redshift queries parallelize well compute node level certain stages executed leader node become bottleneck redshift data commit transactions expensive serialized cluster level therefore consider grouping multiple mutation commands copyinsertupdate commands single transaction whenever possible redshift support multiaz deployments building multiaz clusters trivial example using kinesis beware storing multiple small tables redshift way redshift tables laid disk makes impractical minimum space required store table mb nodes slicesnode columns example node cluster empty table columns occupy mb disk query performance degrades significantly data ingestion wlm workload management tweaks help extent however need consistent read performance consider replica clusters extra cost swap update never resize live cluster resize operation take hours depending dataset size rare cases operation may also get stuck youll end nonfunctional cluster safer approach create new cluster snapshot resize new cluster shut old one redshift reserved keywords present postgres see full list watch delta delta encodings redshift support many postgres functions notably several datetimerelated aggregation functions see full list uniqueness primary key foreign key constraints redshift tables informational enforced however used query optimizer generate query plans null column constraints enforced see information defining constraints compression sort key result significant performance impact redshift queries involving sort keys slow might want consider removing compression sort key choosing sort key important since change tables sort key created need change sort distribution key table need create new table new key move data query like insert newtable select oldtable moving data query looks like insert x select need twice much disk space available table takes clusters disks redshift first copies data disk new table good article big tables emr emr basics homepage release guide faq pricing emr used stand elastic map reduce anymore since extends beyond mapreduce service offers managed deployment hadoop hbase spark reduces management burden setting maintaining services emr alternatives lockin emr based open source technology principle deploy however job workflows much tooling awsspecific migrating emr clusters possible always trivial emr tips emr relies many versions hadoop supporting software sure check versions use offtheshelf emr hadoop significant overhead compared efficient processing single machine data small performance matters may wish consider alternatives post illustrates python programmers may want take look yelps mrjob takes time tune performance emr jobs thirdparty services quboles data service gaining popularity ways improve performance reduce costs emr gotchas limitations emr costs pile quickly since involves lots instances efficiency poor depending cluster configuration choice workload accidents like hung jobs costly see section ec cost management especially tips spot instances blog post additional tips written prior shift persecond billing beware doubledipping emr pay ec capacity service fees addition emr syncs task logs means pay storage put requests standard rates log files tend relatively small every hadoop job depending size generates thousands log files quickly add thousands dollars aws bill yarns log aggregation available emr kinesis streams kinesis streams basics homepage developer guide faq pricing kinesis streams used called kinesis kinesis firehose kinesis analytics launched service allows ingest highthroughput data streams immediate delayed processing aws services kinesis streams subcomponents called shards shard provides mbs write capacity mbs read capacity maximum reads per second stream shards programmatically increased decreased based variety metrics records entered kinesis stream assigned unique sequence number captured records stream ordered number timeordering preserved page summarizes key terms concepts kinesis streams kinesis streams alternatives lockin kinesis closely compared apache kafka opensource data ingestion solution possible set kafka cluster hosted ec instances vps however responsible managing maintaining zookeeper kafka brokers highly available configuration confluent good blog post recommendations links bottom several blogs written subject kinesis uses awsspecific apis aware potential future costs migrating away choose use application efficiently uses kinesis streams scale number shards based required streaming capacity note direct equivalent apache kafka kinesis streams tips kcl kinesis client library provides skeleton interface java node python ruby net programs easily consume data kinesis stream order start consuming data stream need provide config file point correct kinesis stream functions initialising consumer processing records shutting consumer within skeletons provided kcl uses dynamodb table keep track records processed kcl ensures records processed least developer ensure program handle doublyprocessed records kcl also uses dynamodb keep track kcl workers automatically shares available kinesis shards across workers equally possible kinesis streams gotchas limitations kinesis streams shards permit reads per second evenly distributing data across many shards read limit stream remain reads per second aggregate consuming application need check every single shard new records puts hard limit number different consuming applications possible per stream given maximum read latency example consuming applications reading data one stream number shards cannot read latency less one second consumers need poll shard every second reaching cap reads per second per shard blog post discusses performance limitations kinesis production kinesis streams included free tier make sure experimentation personal account shut stream may run unexpected costs per shardmonth kinesis firehose kinesis firehose gotchas limitations delivering firehose elasticsearch json document cannot contain id property firehose attempt deliver documents wont log error device farm device farm basics homepage developer guide faq pricing device farm aws service enables mobile app testing real devices supports ios android including kindle fire devices well mobile web supports remote device access order allow interactive testingdebugging device farm tips aws mobile blog contains several examples device farm usage testing device farm offers free trial users want evaluate service device farm offers two pricing models paying per device minute useful small usage levels situations hard predict usage amount unmetered plans useful situations active usage expected beginning minimize waiting time device availability one approach create several device pools different devices randomly choose one unused device pools every run device farm gotchas limitations devices dont sim card therefore cant used testing sim cardrelated features device farm supports testing popular languagesframeworks actual list supported frameworks languages presented page api cli device farm quite low level may require developing additional tools scripts top aws provide several tools plugins device farm however doesnt cover cases platforms may require developing specific tools plugins support specific requirements general device farm doesnt android devices chinese companies like huawei meizu lenovo etc actual list supported devices located device availibility uneven depends several factors including device popularity usually modern devices see higher demand thus waiting time higher compared relatively old devices mobile hub mobile hub basics homepage user guide faq pricing mobile hub orchestrates multiple services create aws backend mobile web applications project mobile hub one backend made configurable features plus one applications features include analytics cloud logic conversational bots hosting streaming nosql database user data storage user signin feature uses one two services deliver chunk functionality services used include api gateway cloudfront cognito device farm dynamodb lambda lex pinpoint application sdks exist android java ios swift web js react native js also cli javascript applications mobile hub tips mobile hub console starter kits tutorials various app platforms cli allows local development lambda code js default awsmobile pullpush commands sync cloud folder back mobile hub free services pricing model mobile hub gotchas limitations cloud api feature allows importing existing lambda function instead defining new one rough edges cli check github issues mobile hub uses cloudformation covers gets confused service changed outside mobile hub console iot iot basics homepage user guide faq pricing iot platform allowing clients iot devices software applications examples communicate aws cloud clients also called devices things include wide variety device types roughly three categories device types interact iot services sending message iot protocol iot pubsubstyle message broker called iot device gateway send messages example aws iot button eddystone beacon send receive process messages example simple processing board raspberry pi quick start guide aws device echo echo dot designed work aws alexa skills kit programmable voiceenabled service aws aws useful quickstart using console slide presentation core topics iot terms aws iot things metadata devices registry store device state json document called device shadow device metadata also stored iot thing types aids device metadata management allowing reuse device description configuration one device note iot thing types deprecated changed immutable aws iot certificates device authentication logical association unique certificate logical representation device association done console addition public key certificate must copied physical device covers authentication devices particular aws device gateway message broker associate aws iot certificate iot device register ca certificate authority aws generate certificates associate certificates devices via aws console cli aws iot policies devicetopic authorization json files associated one aws iot certificates authorizes associated devices publish andor subscribe messages one mqtt topics aws iot rules sqllike queries allows reuse device message data described presentation summarizes design patterns iot rules shown diagram summarizes flow messages aws iot services iot greengrass homepage greengrass software platform extends aws iot capabilities allowing lambda functions run directly local devices also enables iot devices able securely communicate local network without connect cloud greengrass includes local pubsub message manager buffer messages connectivity lost inbound outbound messages cloud preserved locally deployed lambda functions triggered local events messages cloud sources greengrass includes secure authentication authorization devices within local network also local network aws cloud also provides secure overtheair software updates lambda functions greengrass core software includes message manager object lambda runtime local copy service iot thing device shadows deployment agent manage greengrass group configuration greengrass groups containers selected iot devices settings subscriptions associated lambda functions greengrass group device either greengrass core iot device connected particular greengrass core greengrass core sdk enables lambda functions interact aws greengrass core run order publish messages interact local thing shadows service invoke deployed lambda functions aws greengrass core sdk supports sending mqtt messages qos shown diagram shows architecture aws iot greengrass services iot alternatives lockin aws microsoft google introduced iotspecific sets cloud services since late aws first moving iot services general availability dec microsoft released set iot services azure feb google previewed released iot services android things weave issues lockin center around devices protocols example mqtt amqp message formats json vs hex security certificates iot tips getting started buttons one way start use aws iot button aws provides number code samples use iot button use aws iot console click connect aws iot button link youll taken aws lambda console fill buttons serial number associate lambda writing aws iot buttons available sale us connections protocols important understand details devices wish connect aws iot service including secure device connections device protocols cloud vendors differ significantly support common iot protocols mqtt amqp xmpp aws iot supports secure mqtt websockets https support device security via certificate processing key differentiator space august aws added justintime registrations iot devices services combining services common use aws services aws lambda kinesis dynamodb although means required sample iot application reference architectures screencast testing tools get started aws includes lightweight mqtt client aws iot console create test sending receiving messages various mqtt topics testing locally using mqtt may helpful download use open source mosquitto broker tool local testing devices andor device simulators use mqtt load simulator test device message load throughout iot solution iot gotchas limitations iot protocols important verify exact type support particular iot device message protocol example one commonly used iot protocol mqtt within mqtt three possible levels qos mqtt aws iot supports mqtt qos fire forget qos least includes confirmation qos exactly requires step confirmation important understanding much code youll need write particular application message resolution needs presentation nuances connecting ecosystems match iam users roles iot policies associated authorized aws iot devices immature custom coding enforce security requirements common common mistake misunderstand importance iot device security imperative associate device unique certificate public key generate certificates upload aws use aws generated iot device certificates best read understand awss guidance topic one aws iot gateway endpoint per aws account production scenarios youll probably need set multiple aws accounts order separate device traffic development test production interesting note azure iot gateway supports configuration multiple endpoints single azure account used separate pubsub endpoints development testing production limits aware limits including device message size type frequency number aws iot rules iot code samples simple beer service surprisingly useful code example using aws iot lambda etc iotelf offers clean python sample using aws iot sdk iot button projects hackster include many different code samples projects iot code examples device simulator mqtt sample time registration truck simulator prediction data simulator aws alexa trivia voice example quickstart using alexa voice capability lambda raspberry pi examples include beacon project danbo gopigo ses ses basics homepage documentation faq pricing ses simple email service service exposes smtp endpoints application directly integrate ses tips bounce handling make sure handle early enough ability send emails removed ses sees many bounces credentials many developers get confused ses credentials aws api keys make sure enter smtp credentials using smtp apis ses gotchas limitations internet access ses smtp endpoints internet accessible location without internet access eg private subnet without nat gateway route routing table case set smtp relay instance subnet internet access configure application send emails smtp relay instance rather ses relay forwarding rule send emails ses using proxy instead nat confirm proxy service supports smtp certificate manager certificate manager basics homepage user guide faq pricing use certificate manager manage ssltls certificates aws services supports importing existing certificates well issuing new ones provides domain validated dv certificates validation done sending email contact addresses whois common addresses domain domain name present request late also done via dns instead acm attempt automatically renew certificate issued amazon first attempt connect domain https check certificate used domain certificate intends renew failing check dns record used previously validation failing acm attempt manual validation sending emails domains certificate certificate manager alternatives lockin certificates issued certificate manager cant used outside services support imported certificates however still used elsewhere certificate manager tips supported services managed load balancers cloudfront api gateway elastic beanstalk domain validation process dns validation unsuccessful certificate manager send email every contact address specified domains whois record five common administrative addresses antispam filters mark emails spam check spam folder email dont receive confirmation email setting certificate test domain dont email set use dns validation instead remember requesting wildcard domain request valid level wildcard subdomains preceding wildcard take example approved issued certificate barexamplecom would valid foobarexamplecom barexamplecom likewise would also valid wwwbarfooexamplecom would need add domains certificate request certificate manager gotchas limitations order use certificate manager cloudfront distributions certificate must issued imported useast n virginia region certificates used elastic load balancers must issued region load balancer certificates moved copied regions july domain uses load balancers present multiple regions different certificate must requested region iot way setting certificates default maximum number domains per certificate get limit increased maximum contacting aws support note every different domain requested cert youll need press accept email sent domain example request cert different domains sub domains youll need press accept different links request limit increase aws support respond asking confirm bypass saying body initial request acknowledge moment method add remove name certificate instead must request new certificate revised namelist must reapprove names certificate even theyd previously approved way moment add remove domain tofrom existing certificate must request new certificate reapprove domains requested waf waf basics homepage documentation faq pricing waf web application firewall used conjunction cloudfront alb services inspect blockallow web requests based userconfigurable conditions https http requests supported service wafs strength detecting malicious activity based patternmatching inputs attacks sql injections xss etc waf supports inspection requests received ipv ipv waf tips getting waf api call history done cloudtrail enabled cloudtrail console also possible get full logs web requests inspected waf gotchas limitations may aws waf available amazon cloudfront commercial aws regions us east n virginia us east ohio us west oregon us west n california eu ireland eu frankfurt eu london eu stockholm asia pacific tokyo asia pacific sydney asia pacific singapore asia pacific seoul opsworks opsworks basics homepage documentation faq pricing stacks chef automate puppet enterprise opsworks configuration management service uses chef puppet configuration management broken three different services opsworks stacks service lets configure launch stacks specific applications needs allows automate application deployments chef runs performed manually via execute cookbooks command otherwise run part lifecycle events opsworks stacks differs standard configuration management services also allows perform infrastructure application automation creating amazon ec instances deploying applications via chef cookbooks opsworks chef automate service launches dedicated chef automate server account used associate nodes upload coobook code configure systems automated patching backups os updates minor chef version upgrades provided part service aws api provided associatingdisassociating nodes chef runs scheduled nodes using chefclient cookbook opsworks puppet enterprise service launches dedicated puppet master account used associate nodes upload modules configure systems automated patching backups os updates minor puppet version upgrades provided part service aws api provided associatingdisassociating nodes default puppet agent run automatically every minutes associated nodes opsworks chef automate opsworks puppet enterprise strictly designed configuration management provision infrastructure outside chef serverpuppet master created account three opsworks services support managing amazon ec onpremises infrastructure however implementation details differ slightly opsworks stacks allows register instances install opsworks agent connect stack opsworks chef automate opsworks puppet enterprise allow associate new existing infrastructure using either opsworkscmassociatenode api action vendorsupported method associating nodes chef server puppet enterprise although opsworks let work common chef recipes puppet modules creating stacks creating custom recipes require familiarity chef puppet syntax chefpuppet code supported part aws support december opsworks stacks supports chef versions december opsworks chef automate uses chef server version current stable version chef berkshelfcan used chef stacks version later managing cookbooks respective dependencies however chef x stacks berkshelf must installed stack administrator running chef environment may alternative consider considerations listed bitlancer article opsworks alternatives lockin major competitors configuration management include chef puppet ansible opsworks tips opsworks stacks opsworks chef automate use chef cookbooks configuration chef provides free training learn syntax best practices etc httpslearnchefio opsworks puppet enterprise uses puppet manifests configuration puppet provides useful learning vm download httpslearnpuppetcom opsworks gotchas limitations opsworks stacks available following regions montreal govcloud beijing opsworks chef automate opsworks puppet enterprise available following regions montreal sao paulo govcloud london paris seoul mumbai batch batch basics homepage documentation faq pricing aws batch service offers environment run batch computing jobs service dynamically provisions optimal compute resources needed jobs based resource requirements scale hundreds thousands jobs batch workloads access aws services features aws batch coupled spot instances help run jobs appropriate capacity available providing optimal utilization compute resources batch workloads built docker image images pushed ec container registry ecr private repository accessed aws job definition workloads docker image uri also lets users specify environment details like vcpus memory volume mappings environment variables parameters retry strategy container properties jobs iam role compute environments ec clusters provide runtime batch workloads execute aws batch provides managed well unmanaged compute environments managed environments provisioned managed aws unmanaged environments managed customers job definitions submitted job queues execution queue priority least one compute environment associated aws batch uses ecs execute containerized jobs batch tips aws batch supports prioritization jobs via job queue priority higher number higher priority aws batch supports launching compute environment specific vpc subnets compute environment ecs cluster additional cost aws batch pay cost associated aws services used like ec instances resources consumed batch jobs associate iam roles policies compute environment enable containers access aws resources use unmanaged compute environments need specialized resources like dedicated hosts efs sqs sqs basics homepage documentation faq pricing sqs highly scalable fully managed message queuing service aws sqs supports pull model producers queue messages consumers pull messages queue sqs provides message visibility timeout message processed delivered consumers consumer delete message processing message becomes available consumers upon reaching message visibility timeout parameter called visibilitytimeout message custom fields attributes sqs allows producers set minutes delay messages delivered consumers parameter called delayseconds two types queues supported sqs standard queues guarantee least delivery messages retain order delivery messages fifo queues guarantee delivery messages guarantee order delivery messages sqs supports fine grained access various api calls queues via iam policies messages fail process put dead letter queue sqs alternatives lockin alternatives sqs include kafka rabbitmq activemq others google cloud platform pubsub azure azure queue service sqs vs sns sqs tips sns used combination sqs build fan mechanism sqs queue subscribe sns topic sqs supports encryption using aws kms cloudwatch alarms creating using various sqs metrics trigger autoscaling actions andor notifications sqs gotchas limitations sqs vpc endpoint unlike dynamodb sqs need accessed using public sqs api endpoints fifo queues limited api calls per second fifo queues cannot subscribe sns topic standard queues deliver duplicate messages regardless visibility window onlyonce delivery choice use fifo queues build additional layer dedupe messages sendreceive messages batch however maximum messages batch sns sns basics homepage documentation faq pricing sns simple notification service pubsub based highly scalable fully managed messaging service also used mobile notifications sns push messages subscribers via sms email sqs https transport protocols producers publish messages sns topics many subscribers subscription associated protocol used notify subscriber copy message sent subscriber using associated protocol sns also invoke lambda functions sns alternatives lockin popular alternatives sns kafka notification hubs azure pubsub google cloud sns vs sqs sns sqs highly scalable fully managed messaging services provided aws sqs supports pull model sns supports push model consumers pull messages sqs queue theyre pushed message sns topic sqs message intended processed one subscriber sns topics many subscribers processing sqs message deleted queue subscriber avoid reprocessed sns message pushed subscribers topic time available deletion topic sns supports multiple transport protocols delivery messages subscribers sqs subscribers pull messages queue https sns tips fanout architecture achieved multiple subscribers topic particularly useful events fanned multiple isolated systems sns topics used power webhooks backoff support subscribers https sqs queues subscribe sns topics sns used manage notifications aws services like autoscaling groups notifications cloudwatch alarms etc sns frequently used glue disparate systems github aws services sns gotchas limitations https subscribers sns topics need public endpoints sns support calling private endpoints like private subnet within vpc fanout scenario sseenabled sqs subscribers sns topic receive messages sent topic high availability section covers tips information achieving high availability high availability tips aws offers two levels redundancy regions availability zones azs used correctly regions zones allow high availability may want use nonaws providers larger business risk mitigation ie tying company one vendor reliability aws across regions high multiple regions using multiple regions complex since essentially like managing completely separate infrastructures necessary businesscritical services highest levels redundancy however many applications like average consumer startup deploying extensive redundancy across regions may overkill high scalability blog good guide help understand need scale application multiple regions multiple azs using azs wisely primary tool high availability typical singleregion high availability architecture would deploy two availability zones load balancing front aws diagram bulk outages aws services affect one zone rare outages affecting multiple zones simultaneously example great ebs failure general customers outages due using single az infrastructure consequently design architecture minimize impact az outages especially singlezone outages deploy key infrastructure across least two three azs replicating single resource across three zones often wont make sense backup mechanisms place like snapshots second third az significantly improve availability additional reliability azs may justify costs complexity unless reasons like capacity spot market prices watch crossaz traffic costs unpleasant surprise architectures large volume traffic crossing az boundaries deploy instances evenly across available azs minimal fraction capacity lost case az outage architecture single points failure put single az may seem counterintuitive minimizes likelihood one spof go outage single az ebs vs instance storage number years ebss poorer track record availability instance storage systems individual instances killed restarted easily instance storage sufficient redundancy could give higher availability overall ebs improved modern instance types since ebsonly approach helpful one time may increasingly archaic sure use understand clbsalbs appropriately many outages due using load balancers misunderstanding misconfiguring high availability gotchas limitations az naming differs one customer account next uswesta another customers uswesta letters assigned physical azs randomly per account also gotcha multiple aws accounts note zone ids consistent accounts used reliably align aws accounts crossaz traffic free large scale costs add significant amount money possible optimize traffic stay within az much possible billing cost management billing cost visibility aws offers free tier service allows limited usage resources cost example micro instance small amount storage available charge many services eligible free tier first twelve months account exists services offer free usage tier indefinitely old account starting fresh sign new one qualify free tier aws activate extends tens thousands dollars free credits startups certain funds accelerators set billing alerts notified unexpected costs costs exceeding free tier set granular way aws offers cost explorer tool get better visibility costs unfortunately aws console billing tools rarely enough give good visibility costs large accounts aws billing console time slow use tools enable billing reports install open source tool help manage monitor aws resource utilization teevity ice originally written netflix probably first one try check dockerice dockerized version eases installation one challenge ice doesnt cover amortized cost reserved instances tools include security monkey cloud custodian use aws simple monthly calculator get estimate usage charges aws services based certain information provide monthly charges based actual usage aws services may vary estimates calculator provided thirdparty services several companies offer services designed help gain insights expenses lower aws bill cloudability cloudhealth technologies parkmycloud charge percentage bill may expensive see market landscape awss trusted advisor another service help cost concerns dont shy asking account manager guidance reducing bill job keep happily using aws tagging cost visibility infrastructure grows key part managing costs understanding lie strongly advisable tag resources complexity grows group effectively set billing allocation appropriately get visibility expenses according organization product individual engineer way helpful need custom analysis raw billing data want feed third party cost analysis service enable detailed billing report feature multiple amazon accounts linked billing purposes using consolidated billing feature large enterprises may need complex billing structures depending ownership approval processes multiple amazon accounts managed centrally using aws organizations aws data transfer costs deployments involve significant network traffic large fraction aws expenses around data transfer furthermore costs data transfer within azs within regions regions aws internet vary significantly depending deployment choices common gotchas aztoaz traffic note ec traffic azs effectively regions example deploying cassandra cluster across azs helpful high availability hurt network costs using public ips necessary use elastic ip public ip address ec instance incur network costs even accessed locally within az managed nat gateway data processing managed nat gateways used let traffic egress private subnetsat cost data processing fee layered top data transfer pricing past certain point running nat instances becomes far cost effective services crossaz traffic free many aws services youd consider merits offer hidden value free crossaz data transfer efs rds msk others examples figure gives overview ec cost management ec tradeoff engineering effort analysis tools complex architectures spend rate aws ec costs small many efforts worth engineering time required make work know costs growing excess engineers salary serious investment often worthwhile larger instances arent necessarily priced higher spot market therefore look available options determine instances cost effective jobs see bid advisor spot instances ec spot instances way get ec resources significant discount often many times cheaper standard ondemand prices youre willing accept possibility terminated little warning use spot instances potentially significant discounts whenever use resources may restarted dont maintain longterm state huge savings get spot come cost significant increase complexity provisioning reasoning availability compute capacity amazon maintains spot prices marketdriven fluctuating level based inventory unused capacity prices typically low spike high see price history get sense set bid price high indicate high youre willing pay pay going rate bid rate market rate exceeds bid instance may terminated prices per instance type per availability zone instance type may wildly different price different zones time different instance types different prices even similarly powered instance types zone compare prices across instance types better deals use spot instances whenever possible setting high bid price assure machines stay vast majority time fraction price normal instances get notified two minutes pricetriggered shutdown polling spot instances metadata watching termination cloudwatch event make sure usage profile works well spot investing heavily tools manage particular configuration spot fleet realize even bigger cost reductions time improvements fleet stability relative regular spot usage using spot fleet bid instances across instance types availability zones multiple spot fleet requests regions spot fleet targets maintaining specified weightedbyinstancetype total capacity across cluster servers spot price one instance type availability zone combination rises weighted bid rotate running instances bring new ones another type location order maintain target capacity without going target cluster cost spot usage best practices application profiling profile application figure runtime characteristics would help give understanding minimum cpu memory disk required information critical try optimize spot costs know minimum application requirements instead resorting fixed instance types bid across variety instance types gives higher chances getting spot instance run applicationeg know cpu cores enough job choose instance type equal cores least spot price based history helps bid instances greater discount less demand point spot price monitoring intelligence spot instance prices fluctuate depending instance types time day region availability zone aws cli tools api allow describe spot price metadata given time instance type regionaz based history spot instance prices could potentially build myriad algorithms would help pick instance type way optimizes cost maximizes availability offers predictable performance also track number times instance certain type got taken away bid plot graphite improve algorithm based time day spot machine resource utilization running spiky workloads spark map reduce jobs schedule based failure non critical spot instances become perfect candidates time takes satisfy spot instance could vary mins depending type instance availability machines az running infrastructure hundreds jobs spiky nature advisable start pooling instances optimize cost performance importantly time acquire instance pooling implies creating maintaining spot instances get terminated use promotes reuse spot instances across jobs course comes overhead lifecycle management pooling set metrics tracked optimize resource utilization efficiency cost typical pooling implementations give anywhere cost optimizations reduction spot instance creation time excellent example pooling implementation described netflix part part spot management gotchas lifetime guarantee lifetime spot instance purely based bidding anyone outbids price instance taken away spot suitable time sensitive jobs strong sla instances fail based demand spot time aws provides twominute warning amazon ec must terminate spot instance api return data spot price api returns spot prices varying granularity depending time range specified api calleg last min worth history requested data fine grained last day worth history requested data coarser assume get data points skipped intervals lifecycle management attempt fancy spot management unless absolutely necessary entire usage machines cost acceptable failure rate lower attempt optimize pain buildingmaintaining worth hundred dollar savings reserved instances allow get significant discounts ec compute hours return commitment pay instance hours specific instance type specific aws region availability zone preestablished time frame years discounts realized partial upfront payment options consider using reserved instances predict longerterm compute needs need stronger guarantee compute availability continuity typically cheaper spot market provide however aware architecture changes computing needs may change well long term contracts seem attractive may turn cumbersome two types reserved instances standard convertible purchase excess standard reserved instances may offer sell back unused reserved instances via reserved instance marketplace allows potentially recoup cost unused ec compute instance hours selling aws customers instance reservations tied specific ec instances applied billing level eligible compute hours consumed across instances account scattered reports convertible ri purchases needing exercised block namely buy five convertible ris one purchase cant convert two reach account manager clarification may impact multiple aws accounts configured roll charges one account using consolidated billing feature expect unused reserved instance hours one account applied matching region availability zone instance type compute hours another account multiple aws accounts linked consolidated billing plan using reservations want unused reservation capacity able apply compute hours accounts youll need create instances availability zone name across accounts keep mind done instances may end physical data center across accounts amazon shuffles availability zones names across accounts order equalize resource utilization make use dynamic auto scaling possible order better match cluster size cost current resource requirements service use rhel instances happen existing rhel onpremise red hat subscriptions leverage red hats cloud access program migrate portion onpremise subscriptions aws thereby saving aws charges rhel subscriptions either use selfcreated rhel amis red hat provided gold images added private amis sign red hat cloud access reading section covers unusually useful must know resources lists aws aws plain english readable overview aws services awesome aws curated list aws tools software aws tips wish id known started list tips rich adams aws whitepapers list technical aws whitepapers covering topics architecture security economics last week aws weekly email newsletter covering latest happenings aws ecosystem aws geek blog aws community hero jerry hargrove notes handdrawn diagrams various aws services books amazon web services action aws lambda action serverless architectures aws serverless single page apps terraform book aws scripted book series amazon web services dummies aws system administration python aws cookbook resilience reliability aws aws documentation kindle ebooks general references aws well architected framework guide amazons page guide operational excellence guidelines checklists validate baseline security reliability performance including high availability cost optimization practices awesome microservices curated list tools technologies microservice architectures worth browsing learn popular open source projects fast yet ilya grigoriks tls performance overview high performance browser networking full modern book web network performance presentation http portion disclaimer authors contributors content cannot guarantee validity information found please make sure understand information provided provided freely kind agreement contract created persons associated content project authors contributors assume hereby disclaim liability party loss damage disruption caused errors omissions information contained associated linked content whether errors omissions result negligence accident cause license work licensed creative commons attributionsharealike international license,open guid amazon web servic join us credit contribut guidelin tabl content purpos open guid scope legend aw gener gener inform learn career develop manag aw manag server applic specif aw servic basic tip gotcha alb ami api gateway auto scale batch certif manag clb elb cloudfront cloudform cloudwatch devic farm directconnect dynamodb eb ec ec ek ef elast beanstalk elast ip elasticach emr fargat glacier iot kinesi firehos kinesi stream km lambda load balanc mobil hub opswork rd rd aurora rd aurora mysql rd aurora postgresql rd mysql mariadb rd postgresql rd sql server redshift rout secur iam se sn sq step function waf vpc network secur secur group special topic high avail bill cost manag read legal disclaim licens figur tabl figur tool servic market landscap select thirdparti companiesproduct figur aw data transfer cost visual overview data transfer cost tabl servic matrix aw servic compar altern tabl aw product matur releas aw product releas tabl storag durabl avail price quantit comparison open guid lot inform aw alreadi written peopl learn aw read blog get start guid refer standard aw refer nonetheless trustworthi practic inform recommend arent easi come awss document great sprawl resourc time read fulli doesnt includ anyth offici fact omit experi engin inform blog stack overflow also consist date guid engin use aw aim use live refer consolid link tip gotcha best practic aros discuss edit beer sever engin use aw extens use guid pleas read licens disclaim pleas help earli inprogress draft first attempt assembl inform far comprehens still like omiss error pleas help join slack channel like talk aw gener even question discuss help commun guid improv contribut guid guid open contribut unlik blog keep improv like open sourc effort combin effort also review ensur high qualiti scope current guid cover select core servic ec load balanc eb iam partial detail tip around servic expect expand tutori rather collect inform read return beginn experienc goal guid brief keep dens use link practic basic fact concret detail advic gotcha folk knowledg current keep updat anyon contribut improv thought goal help rather present dri fact thought opinion rational welcom suggest note opinion base real experi extrem valuabl believ possibl guid format unlik venu guid sponsor aw awsaffili vendor written engin use aw legend mark standardoffici aw page doc import often overlook tip seriou gotcha use risk time resourc cost signific critic secur risk mistak signific financi cost poor architectur choic fundament difficult correct regular gotcha limit quirk use consequ thing work break scale grace undocu featur folklor rel new perhap immatur servic featur perform discuss lockin product decis like tie aw new signific way later move nonaw altern would costli term engin effort altern nonaw option cost issu discuss gotcha mild warn attach full solut opinion framework may take signific time understand andor might fit need exactli opposit point solut cathedr nod raymond metaphor color indic basic tip gotcha respect area correct improv need possibl link issu help gener inform use aw aw domin public cloud comput provid gener cloud comput refer one three type cloud public privat hybrid aw public cloud provid sinc anyon use privat cloud within singl usual larg organ mani compani use hybrid privat public cloud core featur aw infrastructureasaservic iaa virtual machin support infrastructur cloud servic model includ platformasaservic paa typic fulli manag servic deploy custom applic softwareasaservic saa cloudbas applic aw offer product fit model busi term infrastructureasaservic variabl cost model opex capex though prepurchas contract still capex awss ttm revenu billion q accord earn result slide link deck roughli amazoncom total revenu slide deck ttm period main reason use aw compani build system product may need scale technic knowhow want flexibl tool your significantli tie differ infrastructur alreadi dont intern regulatori complianc reason cant use public cloudbas solut your microsoftfirst tech stack dont specif reason use googl cloud afford manag negoti somewhat higher cost aw like good option compani reason might point situat servic prefer practic mani tech startup well number modern larg compani alreadi benefit use aw mani larg enterpris partli migrat intern infrastructur azur googl cloud aw cost bill cost manag big topic entir section ec vs servic user aw familiar ec aw flagship virtual server product possibl other like clb aw product extend far beyond basic iaa often compani properli understand appreci mani aw servic appli due sharpli grow number servic novelti complex brand confus fear lockin proprietari aw technolog although bit daunt import technic decisionmak compani understand breadth aw servic make inform decis hope guid help aw vs cloud provid aw domin iaa provid market share estim signific competit altern better suit compani gartner report good overview major cloud player googl cloud platform gcp arriv later market aw vast resourc use wide mani compani includ larg one gain market share aw servic similar analog servic gcp vice versa particular gcp offer advanc machin learningbas servic like vision speech natur languag api common switch your run happen spotifi migrat aw googl cloud discuss quora rel benefit particular note vpc gcp global default subnetwork per region aw vpc live within particular region give gcp edg your design applic georepl begin also possibl share one gcp vpc multipl project roughli analog aw account aw youd peer also possibl peer gcp vpc similar manner done aw microsoft azur de facto choic compani team focus microsoft stack place signific emphasi linux well china aw footprint rel small market domin alibaba alibaba cloud formerli call aliyun compani larg scale may want reduc cost manag infrastructur exampl dropbox migrat infrastructur cloud provid digit ocean offer similar servic sometim greater eas use person support lower cost howev none match breadth product mindshar market domin aw enjoy tradit manag host provid rackspac offer cloud solut well aw vs paa goal put singl servic someth rel simpl your tri minim time manag oper engin consid platformasaservic heroku aw approach paa elast beanstalk arguabl complex especi simpl use case aw vs web host main goal host websit blog dont expect build app complex servic may wish consid one myriad web host servic aw vs manag host tradit mani compani pay manag host provid maintain physic server build deploy softwar top rent hardwar make sens busi want direct control hardwar due legaci perform special complianc constraint usual consid old fashion unnecessari mani developercentr startup younger tech compani complex aw let build scale system size largest compani complex servic use scale requir signific depth knowledg experi even simpl use case often requir knowledg right aw simpler environ like heroku digit ocean guid may help geograph locat aw data center dozen geograph locat known region europ east asia north south america australia india also mani edg locat global reduc latenc servic like cloudfront see current list region edg locat includ upcom one infrastructur need close physic proxim anoth servic latenc throughput reason exampl latenc ad exchang viabil aw may depend locat lockin use aw import awar depend aw servic equival elsewher lockin may complet fine compani signific risk import busi perspect make choic explicitli consid cost oper busi continu competit risk tie aw aw domin reliabl vendor mani compani comfort use aw full extent other tell stori danger cloud jail cost spiral gener aw servic use lockin aw engin resourc time money take chang provid futur basic servic like virtual server standard databas usual easi migrat provid premis other like load balanc iam specif aw close equival provid key thing consid whether engin architect system around specif aw servic open sourc rel interchang exampl lambda api gateway kinesi redshift dynamodb substanti equival open sourc commerci servic equival ec rd mysql postgr emr elasticach less see note combin aw cloud provid mani custom combin aw nonaw servic exampl legaci system secur data might manag host provid system aw compani might use anoth provid everyth els howev small startup project start fresh typic stick aw googl cloud hybrid cloud larger enterpris common hybrid deploy encompass privat cloud onpremis server aw enterpris cloud provid like ibmbluemix microsoftazur netapp emc major custom use aw googl cloud awss list custom includ larg number mainstream onlin properti major brand netflix pinterest spotifi move googl cloud airbnb expedia yelp zynga comcast nokia bristolmy squibb azur list custom includ compani nbc univers honeywel inc googl cloud list custom larg well includ mainstream site snapchat best buy domino soni music servic use aw offer lot differ servic hundr last count custom use servic heavili servic lightli rest servic youll use depend use case choic differ substanti compani compani immatur unpopular servic aw servic sound promis doesnt mean use servic narrow use case matur overli opinion limit build solut may better tri give sens break product categori mustknow infrastructur typic small mediums user focu follow servic first manag use aw system like need know least littl even dont use learn enough make choic intellig iam user account ident need think account earli ec virtual server associ compon includ ami machin imag load balanc clb alb autosc capac scale ad remov server base load eb networkattach disk elast ip assign ip address storag file rout dn domain registr vpc virtual network network secur coloc automat use cloudfront cdn host content cloudwatch alert page monitor manag servic exist softwar solut could run manag deploy rd manag relat databas manag mysql postgr amazon aurora databas emr manag hadoop elasticsearch manag elasticsearch elasticach manag redi memcach option import infrastructur key use infrastructur compon less wide known use may legitim reason prefer altern evalu care sure fit need lambda run small fulli manag task serverless cloudtrail aw api log audit often neglect import cloudform templat configur collect aw resourc elast beanstalk fulli manag paa deploy packag java net php nodej python rubi go docker applic ef network filesystem compat nfsv ec docker containerclust manag note docker also use directli without ec ek kubernet k docker containerclust manag ecr host privat docker registri config aw configur inventori histori chang notif xray trace analysi debug distribut applic microservic specialpurpos infrastructur servic focus specif use case evalu appli situat mani also proprietari architectur tend tie aw dynamodb lowlat nosql keyvalu store glacier slow cheap altern kinesi stream distribut log servic sq messag queue servic redshift data warehous quicksight busi intellig servic se send receiv email market transact api gateway proxi manag secur api call iot manag bidirect commun http websocket mqtt aw client often necessarili thing like applianc sensor waf web firewal cloudfront deflect attack km store manag encrypt key secur inspector secur audit trust advisor autom tip reduc cost make improv certif manag manag ssltl certif aw servic fargat docker contain manag backend ec ek compound servic similarli specif fullblown servic tackl complex problem may tie use depend requir larg signific need may alreadi manag inhous system engin team machin learn machin learn model train classif lex automat speech recognit asr natur languag understand nlu polli texttospeech engin cloud rekognit servic imag recognit data pipelin manag etl servic swf manag state tracker distribut polyglot job workflow lumberyard game engin mobileapp develop sn manag app push notif endus notif cognito user authent via facebook twitter etc devic farm cloudbas devic test mobil analyt analyt solut app usag mobil hub comprehens manag mobil app framework enterpris servic relev signific corpor cloudbas hybrid need mani smaller compani startup use solut like googl app box larger compani may also nonaw solut appstream window app cloud access mani devic workspac window desktop cloud access mani devic workdoc formerli zocalo enterpris document share workmail enterpris manag email calendar servic directori servic microsoft activ directori cloud direct connect dedic network connect offic data center aw storag gateway bridg onpremis cloud storag servic catalog servic approv complianc probablydontneedtoknow servic bottom line inform poll indic servic broadli use often good reason snowbal want ship petabyt data amazon use physic applianc read snowmobil applianc great youv got exabyt scale data get amazon noth beat tractor trailer full drive codecommit git servic your probabl alreadi use github solut stackshar inform stat codepipelin continu integr like anoth solut alreadi codedeploy deploy code ec server like anoth solut opswork manag deploy use chef novemb puppet enterpris aw plain english offer friendli explan differ servic tool servic market landscap enough cloud big data enterpris compani product keep market landscap weve assembl landscap servic far complet tri emphas servic popular aw practition servic specif help aw complementari tool almost anyon use aw must learn suggest improv figur pleas file issu common concept aw gener refer cover bunch common concept relev multipl servic aw allow deploy region isol geograph locat help reduc latenc offer addit redund region contain avail zonesaz typic first tool choic high avail az physic separ one anoth even within region may span multipl physic data center connect via low latenc link natur disast afflict one affect other servic api endpoint region endpoint differ servic servic servic avail region list tabl amazon resourc name arn special format identifi identifi resourc start arn use mani servic particular iam polici servic matrix mani servic within aw least compar googl cloud offer intern googl servic often time could assembl thing open sourc softwar tabl effort list rough correspond rememb tabl imperfect almost everi case subtl differ featur servic aw googl cloud googl intern microsoft azur provid open sourc build openstack virtual server ec comput engin gce virtual machin digitalocean openstack nova paa elast beanstalk app engin app engin web app heroku appfog openshift meteor appscal cloud foundri convox serverless microservic lambda api gateway function function app pubnub block auth webtask kong tyk qinl contain cluster manag ec ek fargat contain engin kubernet borg omega contain servic kubernet meso aurora zun object storag cloud storag gf storag account digitalocean space swift hdf minio swift block storag eb persist disk storag account digitalocean volum nf cinder sql datastor rd cloud sql sql databas mysql postgresql trove store nosql well shard rdbm cloud spanner f spanner azur databas postgresql hyperscal citu crateio cockroachdb bigtabl cloud bigtabl bigtabl hbase keyvalu store column store dynamodb cloud datastor megastor tabl documentdb cassandra couchdb rethinkdb redi memori cach elasticach app engin memcach redi cach memcach redi search cloudsearch elasticsearch manag search algolia qbox elast cloud elasticsearch solr data warehous redshift bigqueri dremel sql data warehous oracl ibm sap hp mani other greenplum busi intellig quicksight data studio power bi tableau lock manag dynamodb weak chubbi leas blob storag account zookeep etcd consul messag broker sq sn iot pubsub pubsub servic bu rabbitmq kafka mq stream distribut log kinesi dataflow pubsub event hub kafka stream apex flink spark stream storm mapreduc emr dataproc mapreduc hdinsight datalak analyt qubol hadoop monitor cloudwatch stackdriv monitor borgmon monitor prometheu trace xray stackdriv trace monitor applic insight datadog new relic epsagon zipkin jaeger appdash metric manag borgmon tsdb applic insight graphit influxdb opentsdb grafana riemann prometheu cdn cloudfront cloud cdn cdn akamai fastli cloudflar limelight network apach traffic server load balanc clbalb load balanc gfe load balanc applic gateway nginx haproxi apach traffic server dn rout dn dn bind email se sendgrid mandril postmark git host codecommit cloud sourc repositori visual studio team servic github bitbucket gitlab user authent cognito firebas authent azur activ directori oauthio mobil app analyt mobil analyt firebas analyt hockeyapp mixpanel mobil app test devic farm firebas test lab xamarin test cloud browserstack sauc lab testdroid manag ssltl certif certif manag let encrypt comodo symantec globalsign automat speech recognit natur languag understand transcrib asr lex nlu cloud speech api natur languag api cognit servic aylien text analysi api ambivers natur languag understand api stanford core nlp suit apach opennlp apach uima spaci texttospeech engin cloud polli nuanc vocalwar ibm mimic espeak marytt imag recognit rekognit vision api cognit servic ibm watson clarifai tensorflow opencv ocr text recognit textract document rekognit photograph cloud vision api comput vision api tesseract languag translat translat translat translat text api apertium file share sync workdoc googl doc onedr dropbox box citrix file share owncloud machin learn sagemak deeplen ml ml engin auto ml ml studio watson ml data loss prevent maci cloud data loss prevent azur inform protect pleas help fill tabl select resourc detail chart googl intern mapreduc bigtabl spanner f vs spanner bigtabl vs megastor aw product matur releas import know matur aw product mostli complet list first releas date link releas note recent releas servic first servic avail region see tabl servic origin releas avail cli support hipaa compliant pcidss compliant xray gener lex preview polli gener rekognit gener athena gener batch gener databas migrat servic gener certif manag gener iot gener waf gener data pipelin gener elasticsearch gener aurora gener servic catalog gener devic farm gener codepipelin gener codecommit gener api gateway gener config gener ef gener machin learn gener lambda gener ec gener ek gener km gener codedeploy gener kinesi gener cloudtrail gener appstream preview cloudhsm gener silk obsolet opswork gener redshift gener elast transcod gener glacier gener cloudsearch gener swf gener storag gateway gener dynamodb gener directconnect gener elasticach gener cloudform gener se gener elast beanstalk gener rout gener iam gener sn gener emr gener rd gener vpc gener snowbal gener snowmobil gener cloudwatch gener cloudfront gener fulfil web servic obsolet simpledb nearli obsolet devpay gener flexibl payment servic retir ec gener sq gener gener alexa top site gener httponli alexa web inform servic gener httponli footnot exclud use amazon api gateway cach rd mysql oracl postgresql engin mysqlcompat aurora edit exclud lambdaedg includ ec system manag includ elast block storag eb includ elast load balanc includ transfer acceler includ rd mysql oracl postgresql sql server mariadb includ autosc data analyt stream video stream firehos kubernet use custom cli podservic manag call kubectl aw cli handl kubernet master concern iot core includ devic manag greengrass elasticach redi snowbal snowbal edg complianc mani applic strict requir around reliabl secur data privaci aw complianc page detail awss certif includ pci dss level soc hipaa iso secur cloud complex topic base share respons model element complianc provid aw provid compani sever thirdparti vendor offer assist complianc secur audit aw substanti need area assist good idea insid china aw servic outsid china gener access though time breakag servic also aw servic insid china get help support forum mani problem worth search ask help discuss forum see known issu premium support aw offer sever level premium support first tier call develop support let file support ticket hour turnaround time start monthli spend reach around chang surcharg bill higherlevel support servic quit expens increas bill mani larg effect compani never pay level support usual help midsiz larger compani need rapid turnaround deeper perplex problem keep mind flexibl architectur reduc need support shouldnt reli aw solv problem often exampl easili reprovis new server may urgent solv rare kernellevel issu uniqu one ec instanc eb volum recent snapshot may abl restor volum support rectifi issu old volum servic issu one avail zone case abl reli redund zone migrat servic anoth zone larger custom also get access aw enterpris support dedic technic account manag tam shorter respons time sla definit controversi use paid support support staff dont alway seem inform author solv problem brought attent often abil problem solv may depend relationship account rep account manag signific level spend thousand us dollar plu per month may assign may wish ask dedic account manag great resourc even your pay premium support build good relationship make use question problem guidanc assign singl point contact compani side avoid confus overwhelm contact main web contact point aw mani technic request made via channel consult manag servic handson assist aw establish relationship mani consult partner manag servic partner big consult wont cheap depend need may save cost long term help set architectur effect offer specif expertis eg secur manag servic provid provid longerterm fullservic manag cloud resourc aw profession servic aw provid consult servic alon combin partner restrict note lot resourc amazon limit actual help dont incur larg cost accident request quota increas open support ticket limit easi rais note section addit servic limit publish obtain current limit usag limit inform servic may avail servic api trust advisor neither case youll need contact support page awslimitcheck tool document provid nice summari avail retriev option limit tool also valuabl autom limit check aw term servic extens much expect boilerpl contain import note restrict servic particular restrict use mani aw servic safetycrit system appreci legal humor may wish review claus relat topic openstack privat cloud altern aw use larg compani wish avoid public cloud offer learn career develop certif certif aw offer certif profession want demonstr knowledg certifi cloud practition certifi solut architect associ certifi develop associ certifi sysop administr associ certifi solut architect profession certifi devop engin profession certifi secur specialti certifi big data specialti certifi advanc network specialti certifi machin learn specialti certifi alexa skill builder specialti associ level certif requir prerequisit take profession examin longer case get certifi your interest studi get certif practic overview tell lot need know offici page faq train certif train offer aw mainli instructorl onsit variou thirdparti compani usual videobas train cloud guru cloudacademi linux academi need certif especi consult compani work key tech role larg nontech compani certif import credenti other includ mani tech compani startup certif common consid necessari fact fairli silicon valley hire manag engin see neg signal resum certif requir access certif loung offici aw event summit reinvent loung typic provid power charg point seat rel better coffe manag aw manag infrastructur state chang great challeng use aw build complex system devop gener manag infrastructur state effect time gener boil three broad goal state infrastructur visibl know state infrastructur servic use exactli also know anyon team make chang detect misconfigur problem incid servic autom reconfigur infrastructur reproduc past configur scale exist one without lot extra manual work requir knowledg that someon head respond incid easili automat flexibl improv configur scale new way without signific effort add complex use tool share review improv configur within team much discuss realli improv answer question sever approach deploy infrastructur aw consol complex autom tool thirdparti servic attempt help achiev visibl autom flexibl aw configur manag first way peopl experi aw via web interfac aw consol use consol highli manual process often work autom flexibl your go manag aw configur manual sadli simpl univers answer approach pro con approach taken differ compani vari wide includ directli use api build tool top use commandlin tool use thirdparti tool servic aw consol aw consol let control much function aw via web interfac ideal use aw consol specif situat great readonli usag your tri understand state system log brows help also reason workabl small system team exampl one engin set one server doesnt chang often use oper your go rare like less month exampl onetim vpc setup probabl wont revisit year case use consol simplest approach think use consol aw consol conveni also enemi autom reproduc team commun your like make chang multipl time avoid consol favor sort autom least path toward autom discuss next use consol preclud autom wast time later prevent document clariti standard around process team commandlin tool aw commandlin interfac cli use via aw command basic way save autom aw oper dont underestim power also advantag wellmaintain cover larg proport aw servic date gener whenev prefer command line aw consol perform oper even absenc fancier tool write simpl bash script invok aw specif argument check git primit effect way document oper youv perform improv autom allow code review share team give other start point futur work use primarili interact script consid instead use awsshel tool aw easier use autocomplet color ui still work command line your use saw previou version program migrat awsshel api sdk sdk use aw api avail major languag go io java javascript python rubi php heavili use aw maintain short list awesomeaw list comprehens current note support c still new retri logic import aspect consid whenev use sdk error handl heavi use wide varieti failur program error throttl awsrel outag failur expect occur sdk typic implement exponenti backoff address may need understood adjust time applic exampl often help alert error code other dont use api directli although aw document includ lot api detail better use sdk prefer languag access api sdk matur robust wellmaintain someth youd write boto good way autom oper custom way boto also known amazon sdk python boto previou version librari wide use year newer version offici support amazon prefer boto new project boto contain varieti api oper either high level low level explan low level api client api map aw cloud servicespecif api servic oper support client client gener json servic definit file high level option resourc api allow avoid call network low level instead provid objectori way interact aw cloud servic boto lot help featur like waiter provid structur allow code wait chang occur cloud exampl creat ec instanc need wait instanc run order perform anoth task find write bash script one two cli command your probabl wrong stop consid write boto script instead advantag check return code easili success step depend success past step grab interest bit data respons like instanc id dn name add use environ inform exampl tag instanc git revis inject latest build identifi initi script gener visibl tag resourc essenti practic especi organ grow better understand resourc usag exampl autom convent add tag org develop own resourc product resourc support label lifecycl temporari resourc one deprovis futur distinguish productioncrit infrastructur eg serv system vs backend pipelin distinguish resourc special secur complianc requir enabl alloc cost note cost alloc tag appli forwardlook basi cant retroact appli item alreadi bill mani year notori tag limit per resourc could rais caus mani compani signific pain rais tag per resourc aw introduc abil enforc tag instanc volum creation deprec portion third parti tool cloud custodian tag case sensit environ environ two differ tag autom set tag like sensibl option signific scale bug asg consol space tag name preserv type name space end get expect behavior probabl true locat sdk also sure add trail space tag key unless realli mean jul manag server applic aw vs server configur guid aw devop server configur manag gener get aw detail worth note addit configur manag aw resourc longstand problem configur manag server philosophi heroku twelvefactor app principl list establish gener best practic deploy applic pet vs cattl treat server like cattl pet design system infrastructur dispos minim worrisom server unexpectedli destroy concept immut infrastructur extens idea minim applic state ec instanc gener instanc abl kill die unexpectedli minim impact state applic quickli move rd dynamodb ef data store instanc eb also option though gener bootabl volum eb requir manual autom remount server configur manag larg set open sourc tool manag configur server instanc gener depend particular cloud infrastructur work varieti linux mani case varieti oper system lead configur manag tool puppet chef ansibl saltstack arent focu guid may mention relat aw contain aw docker container trend chang way mani server servic deploy gener contain design way packag applic depend known way build contain includ everi librari binari applic need outsid kernel big advantag approach easi test valid contain local without worri differ comput server deploy consequ need fewer ami boot script deploy boot script need templat fetch export docker imag run compani embrac microservic architectur often turn containerbas deploy aw launch ec servic manag cluster via docker late though mani peopl still deploy docker directli see ec section detail aw launch ek servic manag kubernet cluster mid though mani peopl still deploy ec use docker directli see ek section detail visibl store track instanc metadata instanc id avail zone etc deploy info applic build id git revis etc log report instanc metadata servic help collect aw data youll need use log manag servic sure set way view manag log extern server cloudbas servic sumo logic splunk cloud scalyr logdna loggli easiest set use also expens may factor depend much log data major open sourc altern includ elasticsearch logstash kibana elast stack graylog afford littl data lot money dont special need make sens use host servic whenev possibl sinc set scalabl log process system notori time consum track graph metric aw consol show simpl graph cloudwatch typic want track graph mani kind metric cloudwatch applic collect export help metric everywher long volum manag enough afford servic like librato keenio datadog fancier featur better user interfac save lot time detail comparison use prometheu graphit timeseri databas metric open sourc grafana visual dashboard store metric timeseri databas also open sourc tip manag server timezon set server unless absolut necessari alway set timezon server utc see instruct distribut ubuntu cento amazon linux numer distribut system reli time synchron coordin utc provid univers refer plane subject daylight save chang adjust local time also save lot headach debug elus timezon issu provid coher timelin event log audit system ntp accur time use amazon linux come preconfigur confirm server configur ntp correctli avoid insidi time drift caus sort issu break api call mislead log part automat configur everi server time alreadi drift substanti gener second rememb ntp wont shift back may need remedi manual exampl like ubuntu test immut infrastructur want proactiv test servic abil cope instanc termin failur help introduc random instanc termin busi hour expos issu time engin avail identifi fix netflix simian armi specif chao monkey popular tool altern chaoslambda bbc lightweight option run aw lambda secur iam cover secur basic first sinc configur user account someth usual earli set system secur iam basic iam homepag user guid faq aw secur blog one best sourc news inform aw secur iam servic use manag account permiss aw manag secur access control aw critic everi aw administr need use understand iam least basic level iam ident includ user peopl servic use aw group contain set user permiss role contain permiss assign aw servic instanc permiss ident govern polici use aw predefin polici custom polici creat iam manag variou kind authent user softwar servic may need authent aw includ password log consol usernam password real user access key may use commandlin tool two string one id uppercas alphabet string form axxxxxxxxxxxxxxxxxxx secret charact mixedcas basestyl string often set servic user access key start akia normal key access key start asia sessiontemporari key st requir addit sessiontoken paramet sent along id secret see document complet list access key prefix multifactor authent mfa highli recommend practic use keychain fob smartphon app second layer protect user authent iam allow complex finegrain control permiss divid user group assign permiss role polici languag use custom secur polici finegrain way excel high level overview iam polici concept live iam polici nutshel polici languag complex errorpron json syntax that quit confus unless expert wise base trust exampl aw predefin manag polici begin iam polici may simpl larg system grow complex need manag care make sure one person perhap backup organ formal assign ownership manag iam polici make sure everi administr work person chang review goe long way avoid accident seriou misconfigur best give user servic minimum privileg need perform duti principl least privileg one foundat good secur organ iam user group accord level access need iam permiss hierarchi explicit deni restrict polici win explicit allow access permiss resourc explicitli given implicit deni permiss implicitli deni default test polici permiss via aw iam polici simul tool tool particularli use write custom polici secur iam tip use iam creat individu user account use iam account user begin slightli work much way defin differ user group differ level privileg want choos amazon default suggest administr power user etc allow credenti revoc critic situat employe leav key compromis revok credenti littl effort set activ directori feder use organiz account aw enabl mfa account alway use mfa sooner better enabl alreadi mani user extra work unfortun cant enforc softwar administr polici establish user use googl authent app io android support twofactor authent root account consid hardwar fob restrict use signific iam credenti much possibl rememb cloud loss highli capabl iam credenti could essenti mean game deploy user whole compani use root user account initi creat account creat custom iam user andor role use applic instead lock access use root credenti much possibl ideal effect offlin critic deploy mean attach actual mfa devic physic secur rare use turn cloudtrail one first thing enabl cloudtrail even secur hawk littl reason begin data happen aw account need inform youll like also want set log manag servic search access log use iam role ec rather assign iam user applic like servic share sensit credenti defin assign role ec instanc applic retriev credenti instanc metadata assign iam role realm exampl develop stage product your set role tie specif realm clean separ prevent exampl develop instanc connect product databas best practic aw list best practic worth read full front iam refer interact refer iam action effect resourc great open write new tri understand exist iam polici multipl account decid whether want use multipl aw account research organ access across factor consid number user import isol resourc limit permiss granular secur api limit regulatori issu workload size infrastructur cost multiaccount overhead intern aw servic manag tool may need custom built adapt help use separ aw account independ part infrastructur expect high rate aw api call sinc aw throttl call aw account level inspector autom secur assess servic aw help identifi common secur risk allow valid adher certain secur practic may help complianc trust advisor address varieti best practic also offer basic secur check around iam usag secur group configur mfa paid support tier trust advisor expos addit check around area reserv instanc optim use km manag key aw offer km secur manag encrypt key usual far better option handl key secur see aw waf web applic firewal help protect applic common attack pattern secur audit secur monkey open sourc tool design assist secur audit scout open sourc tool use aw api assess environ secur postur scout stabl activ maintain export audit secur set audit secur polici simpli export set use aw api eg use boto script like secconfigpi talk review monitor chang manual automat secur iam gotcha limit dont share user credenti remark common firsttim aw user creat one account one set credenti access key password use share among engin other within compani easi dont insecur practic mani reason particular reduc abil revok credenti perus perservic basi exampl employe leav key compromis lead seriou complic instanc metadata throttl instanc metadata servic rate limit api call deploy iam role wide lot servic may hit global account limit easili one solut code script cach reus credenti local short period say minut exampl put awscredenti file must also refresh automat care cach credenti long expir note dynam metadata also chang time cach long time either iam oper slower api call mani second sinc aw need propag global across region uptim iam api histor lower instanc metadata api wari incorpor depend iam api critic path subsystem exampl valid user iam group membership log instanc arent care precach group membership maintain back door might end lock user altogeth api isnt avail dont check aw credenti secret git repositori bot scan github look credenti use script tool gitsecret prevent anyon team check sensit inform git repositori basic homepag develop guid faq price simpl storag servic aw standard cloud storag servic offer file opaqu blob storag arbitrari number file almost size tb prior maximum size gb larger size well support via multipart support item object place name bucket store name usual call key main content valu object creat delet updat larg object stream cannot modifi part valu need updat whole object partial data access work via select everi object also metadata includ arbitrari keyvalu pair use way similar http header metadata systemdefin signific serv http content bucket cloudfront also defin arbitrari metadata use uri although often bucket key name provid api individu also common practic write locat form sbucketnamepathtokey key pathtokey youll also see sn sa prefix hadoop system vs glacier eb ef aw offer mani storag servic sever besid offer filetyp abstract glacier cheaper infrequ access archiv storag eb unlik allow random access file content via tradit filesystem attach one ec instanc time ef network filesystem mani instanc connect higher cost see comparison tabl tip practic purpos consid capac unlimit total size file number object number object bucket essenti also unlimit custom routin million object permiss your store busi data amazon import manag permiss sensibl compani like dow jone verizon saw data breach due poorlychosen configur sensit data fix later difficult task lot asset intern user differ way grant permiss access amazon content bucket iam polici use familiar ident authent manag permiss scheme control access specif oper bucket polici grant deni permiss entir bucket might use host websit make bucket publicli readabl restrict access bucket ip address amazon sampl bucket polici show number use case polici come handi access control list acl also appli everi bucket object store acl grant addit permiss beyond specifi iam bucket polici acl use grant access anoth aw user predefin group like gener public power danger need inspect everi object see access aw predefin access control group allow access may youd expect name user everyon grant permiss gener public user defin aw account object avail user retriev simpl http request form httpsamazonawscombucketnamefilenam author signatur requir access data categori authent user grant permiss anyon aw account limit user anyon sign aw intent purpos also open gener public log deliveri group use aw write log bucket safe enabl bucket need typic use case acl use conjunct request pay function bucket permiss object permiss two differ thing independ privat object public bucket seen list bucket download time public object privat bucket wont seen bucket content cant list still download anyon know exact key user dont access set bucket permiss still make object public sputobjectacl sputobjectversionacl permiss august aw ad aw config rule ensur bucket secur aw config rule check secur bucket polici bucketlevel acl still creat object acl grant addit permiss includ open file whole world creat new bucket differ type data differ sensit level much less error prone complex permiss rule exampl data administr like log data put new bucket administr access guidanc see secur amazon bucket deep dive access control permiss work bucket name bucket chosen global namespac across region even though store data whichev region select youll find mani bucket name alreadi taken creat bucket mean take ownership name delet bucket name restrict bucket name use part hostnam access bucket content like bucketnamesuseastamazonawscom long name dn compliant common practic use compani name acronym abbrevi prefix suffix prefer dnsstyle hierarchi bucket name pleas dont use check secur measur highli insecur easili circumv bucket name period caus certif mismatch use ssl use instead sinc conform ssl expect dn compliant version option version support version object preserv bucket mostli use want archiv chang abil back mistak caution lack featureset full version control system like git durabl durabl extrem high sinc intern keep sever replica dont delet accid count lose data aw offer seemingli improb durabl rate mathemat calcul base independ failur rate level replic true probabl estim either way good record durabl note much higher durabl eb price depend storag request transfer transfer put data aw free youll pay way transfer ec region free transfer region internet gener free delet free reduc redund infrequ access peopl use standard storag class storag class lower cost reduc redund storag rr effect deprec lower durabl four nine standard note longer particip price reduct offer wors redund money standard result there reason use infrequ access ia let get cheaper storag exchang expens access great archiv like log alreadi process might want look later get idea cost save use infrequ access ia use infrequ access calcul intellig tier storag class design optim cost automat move data costeffect access tier without perform impact oper overhead one zone ia data access less frequent requir rapid access need unlik storag class store data minimum three avail zone az one zoneia store data singl az cost less standardia glacier third altern discuss separ product see comparison tabl perform maxim perform mean improv overal throughput term bandwidth number oper per second highli scalabl principl get arbitrarili high throughput good exampl sdistcp usual constrain pipe sourc andor level concurr oper throughput cours highest within aw ec instanc bucket region bandwidth ec depend instanc type see network perform column ecinstancesinfo throughput mani object extrem high data access distribut way mani ec instanc possibl read write object hundr thousand instanc howev throughput limit object access sequenti singl instanc individu oper take mani millisecond bandwidth instanc limit therefor perform larg number oper necessari use multipl worker thread connect individu instanc larger job multipl ec instanc well multipart upload larg object want take advantag multipart upload capabl start minimum chunk size mb larg download also download chunk singl larg object parallel exploit http get rangehead capabl list pagin list content happen respons per request bucket mani million object list take time key prefix previous random begin key name necessari order avoid hot spot longer necessari juli data outsid aw directconnect transfer acceler help transfer acceler pay equival month storag transfer either direct use nearer endpoint commandlin applic way use command line origin scmd best tool job still use heavili mani regular aw commandlin interfac support well use situat scmd replac greater emphasi perform via multithread help larg file larg set file also offer unixlik glob support gui applic may prefer gui wish support gui access less technic user option aw consol offer graphic way use use caution tell nontechn peopl use howev sinc without tight permiss offer access mani aw featur transmit good option maco use case cyberduck good option maco window support multipart upload acl version lifecycl configur storag class server side encrypt ss ssekm cloudfront tightli integr cloudfront cdn see cloudfront section inform well transfer acceler static websit host static websit host option simpli set enabl configur http index error page http redirect support public content simpl way host static asset fulli static websit consid use cloudfront front asset like cdn cloudfront improv perform significantli ssl support builtin amazonawscom domain support serv site custom domain ssl custom domain howev cloudfront allow serv custom domain http amazon provid free sni ssltl certif via amazon certif manag sni work outdat browsersoper system altern provid certif use cloudfront support browsersoper system fee includ resourc across domain font insid css file may need configur cor bucket serv resourc sinc pretti much everyth move ssl nowaday like want control domain probabl want set cloudfront certif front ignor aw exampl nonssl said youll need think invalid updat cloudfront may wish includ version hash filenam invalid necessari data lifecycl manag data understand lifecycl data import understand data put data bucket think lifecycl end life begin gener data differ expir polici store separ prefix top level exampl volumin log might need delet automat monthli data critic never delet former separ bucket least separ folder wise think front save pain hard clean larg collect file creat mani engin vari lifecycl coher organ altern set lifecycl polici archiv old data glacier care archiv larg number small object glacier sinc may actual cost also storag class call infrequ access durabl standard discount per gb suitabl object infrequ access data consist understand data consist critic use multipl produc consum data creation updat individu object atom youll never upload new object chang object anoth client see part half chang uncertainti lie client client see updat new object creat new object youll abl read instantli call readafterwrit consist well addit caveat read object exist creat get eventu consist readafterwrit appli list oper newli creat object guarante appear list oper right away updat object overwrit delet object your guarante eventu consist ie chang happen guarante mani use case treat object immut ie decid convent creat delet updat greatli simplifi code use avoid complex state manag note usstandard region weaker eventu consist model newer region readafterwrit final correct watch mani old blog mention slow updat practic eventu consist usual mean within second expect rare case minut hour filesystem gener ss api inher limit make hard use directli posixstyl filesystem still preserv ss object format exampl append file requir rewrit crippl perform atom renam directori mutual exclus open file hardlink imposs sf fuse filesystem goe ahead tri anyway perform limit surpris reason riof c goofi go recent effort attempt adopt differ data storag format address issu like improv sf sql discuss python implement offer data dedupl snapshot encrypt one client time objectivef discuss commerci solut support filesystem featur concurr client primarili use vpc consid set vpc endpoint order allow vpchost resourc easili access without need extra network configur hop crossregion replic featur replic bucket one region anoth note alreadi highli replic within one region usual isnt necessari durabl could use complianc geograph distribut data storag lower latenc strategi reduc regiontoregion bandwidth cost mirror heavili use data second region ipv vs ipv long time support ipv default endpoint httpsbucketsamazonawscom howev aug support ipv ipv use enabl dualstack either prefer api client directli use url scheme httpsbucketsdualstackregionamazonawscom extend transfer acceler well event notif configur send sn notif sq messag aw lambda function bucket event limit individu user iam role minim requir locat catalog approv locat otherwis tend becom dump ground peopl put data random locat clean year cost big buck bucket delet take hour bucket name creat discuss gotcha limit bucket sit outsid vpc access anywher world bucket polici set deni read permiss section care countless case bucket expos public mani year notori bucket limit per account could rais caus mani compani signific pain request increas ask increas limit still cap gener per account care make implicit assumpt transaction sequenc updat object never assum modifi sequenc object client see modif sequenc upload whole bunch file appear client sla uptim use heavili youll inevit see occasion error access store data disk infrastructur fail avail usual restor second minut although avail extrem high mention durabl excel upload chang make object caus full rewrit object avoid appendinglik behavior regular file eventu data consist discuss surpris sometim suffer intern replic issu object may visibl subset machin depend endpoint hit usual resolv within second howev weve seen isol case issu linger hour md multipart upload etag header hash object mani case md hash howev case gener use multipart upload one workaround comput md put custom header done scmd incomplet multipart upload cost incomplet multipart upload accru storag charg even upload fail object creat amazon other recommend use lifecycl polici clean incomplet upload save storag cost note mani may worth investig whatev fail regularli us standard region previous useast region also known us standard region replic across coast led greater variabl latenc effect jun longer case amazon region support readafterwrit consist amazon also renam us standard region us east n virginia region consist aw region name convent authent version region newer region support latest authent file oper use cli sdk doesnt work one region work correctli anoth region make sure use latest authent signatur storag durabl avail price illustr compar featur price tabl give standard rr ia comparison glacier eb ef ec dxlarg instanc store use virginia region sept durabl per year avail design avail sla storag per tb per month get retriev per million write archiv per million glacier eleven sloooow ia eleven rr first tb standard eleven eb unstat scstgpio ef high high ec dxlarg instanc store unstat unstat especi notabl item boldfac sourc price sla faq rr info note consid deprec glacier price eb avail durabl eb price ef price ec sla ec ec basic homepag document faq price see also ecinstancesinfo ec elast comput cloud aw offer fundament piec cloud comput virtual privat server instanc run linux bsd window oper system intern theyv use heavili modifi xen virtual said new instanc class introduc kvm deriv hypervisor instead call nitro far limit c instanc type lastli there bare metal hypervisor avail imet instanc term ec sometim use refer server technic refer broadli whole collect support servic like load balanc clbsalbsnlb ip address eip bootabl imag ami secur group network drive eb discuss individu guid ec price cost manag complic topic rang free aw free tier lot depend usag price instanc type second hour chang depend aw region whether purchas instanc ondemand spot market prepurchas reserv instanc network perform instanc type aw use gener term like low medium high refer network perform user done benchmark provid expect term mean ec altern lockin run ec akin run set physic server long dont automat scale tool cluster setup run set static instanc migrat anoth vp dedic server provid hard altern ec direct altern googl cloud microsoft azur rackspac digitalocean awss lightsail offer vp provid offer similar api set remov instanc see comparison use amazon linux aw encourag use amazon linux evolv red hat enterpris linux rhel cento use mani other skeptic whatev think decis care true amazon linux heavili test better support unlik event deeper issu os virtual ec gener mani compani fine use standard nonamazon linux distribut ubuntu cento use standard linux distribut mean exactli replic environ use anoth host provid instead addit aw also help wish test deploy local develop machin run standard linux distribut practic that get common docker amazon support offici amazon linux docker imag aim assist local develop compar environ though new enough consid experiment note currentlyintest amazon linux support onpremis deploy explicitli ec cost see section ec tip pick region first set consid region want use first mani peopl north america automat set useast n virginia region default worth consid best front youll want evalu servic avail servic avail region cost baselin cost also vari region gener lowest useast comparison purpos complianc variou countri differ regul regard data privaci exampl instanc type ec instanc come mani type correspond capabl virtual machin cpu architectur speed ram disk size type ssd magnet network bandwidth select instanc type complex sinc mani type addit differ gener releas year use list ecinstancesinfo review cost featur amazon list instanc type hard use doesnt list featur price togeth make doubli difficult price vari lot use ecinstancesinfo determin set machin meet need ecpricecom find cheapest type region your work depend time region might much cheaper rent instanc memori cpu bare minimum turn instanc arent use mani situat test stage resourc may need instanc wont need pay ec run cost suspend given cost calcul base usag simpl mechan cost save achiev use lambda cloudwatch open sourc option like cloudcycl saa provid like gorillastack note turn instanc ephemer root volum state lost instanc turn therefor state applic safer turn eb back instanc dedic instanc dedic host assign hardwar instead usual virtual instanc expens virtual instanc prefer perform complianc financi model licens reason bit vs bit micro small medium instanc still avail use bit architectur youll use bit ec amd instanc nowaday though smaller instanc still support bit use bit unless legaci constraint good reason use hvm vs pv two kind virtual technolog use ec hardwar virtual machin hvm paravirtu pv histor pv usual type hvm becom standard want use newest instanc type must use hvm see instanc type matrix detail oper system use ec youll need pick base oper system window linux ubuntu amazon linux ami cover detail section limit cant creat arbitrari number instanc default limit number ec instanc per account vari instanc type describ list use termin protect instanc import longliv particular arent part autosc enabl termin protect import line defens user mistak accident termin mani instanc instead one due human error ssh key manag start instanc need least one ssh key pair set bootstrap ie allow ssh first time asid bootstrap manag key instanc assign individu key individu user servic appropri avoid reus origin boot key except administr creat new instanc avoid share key add individu ssh key individu user gpu support rent gpuenabl instanc ec use machin learn graphic render workload three type gpuenabl instanc current avail p seri offer nvidia tesla v gpu gpu configur target machin learn scientif workload high perform comput applic p seri offer nvidia tesla k gpu gpu configur target machin learn scientif workload high perform comput applic g seri offer nvidia tesla gpu gpu configur target graphic video encod aw offer two differ ami target gpu applic particular target deep learn workload also provid access strippeddown driveronli base imag aw offer amazon linux deep learn ami base amazon linux well ubuntu deep learn ami come nvidia driver ancillari softwar cuda cubla cudnn tensorflow pytorch etc instal lower barrier usag note use ami lead lock due fact direct access softwar configur version compendium framework includ lead long instanc startup time difficulttoreasonabout environ expens ec instanc type spot instanc offer signific save gpu workload interrupt toler current ec instanc type take advantag ipv address long launch subnet alloc cidr rang ipven vpc ec gotcha limit never use ssh password dont insecur consequ compromis sever use key instead read fulli disabl ssh password access ssh server make sure passwordauthent etcsshsshdconfig file your care manag ssh privat key everywher store major improv secur passwordbas authent newer instanc type select ami use sure select hvm ami wont work creat instanc use new ssh key pair make sure ssh key permiss correct sometim certain ec instanc get schedul retir aw due detect degrad underli hardwar case given coupl week migrat new instanc instanc root devic eb volum typic stop start instanc move healthi host hardwar give control time event note howev lose instanc store volum data ephemer drive instanc type instanc store volum instanc public ip one like chang unless your use elast ip could problem system depend ip address period may find server load balanc receiv traffic presum previou ec server run ip address hand may matter fix migrat anoth new instanc ec api critic depend infrastructur eg autom server replac custom scale algorithm etc run larg scale make mani ec api call make sure understand might fail call rate limit limit publish subject chang code test possibl mani newer ec instanc type either ebsonli back local nvme disk assign instanc make sure factor eb perform cost plan use your oper signific scale may wish break apart api call enumer resourc instead oper either individu resourc subset entir list ec api time consid use filter restrict get return instanc come two type fix perform instanc eg c r burstabl perform instanc eg instanc receiv cpu credit continu rate depend instanc size instanc accru cpu credit idl use cpu credit activ howev instanc run credit youll notic sever degrad perform need consist high cpu perform applic video encod high volum websit hpc applic recommend use fix perform instanc instanc userdata limit kb limit appli data raw form baseencod form data need download userdata script new account may abl launch instanc type gpu instanc initi impos soft limit zero limit rais make support request see aw servic limit method make support request note limit zero current document sinc multipl aw instanc run physic hardwar earli cloud adopt encount becam known noisi neighbor problem feel get pay led user frustrat howev steal may best word describ what actual happen base detail explan kernel determin steal time avoid cpu steal affect applic cloud may best handl properli design cloud architectur aw introduc dedic tenanc allow custom resourc singl server saw way solv noisi neighbor problem sinc custom use cpu approach come signific risk physic system need type mainten custom instanc run use share tenanc one underli server need mainten instanc server would go offlin custom instanc run use dedic tenanc underli server need mainten instanc would go offlin imet type instanc provid abil run android x emul aw moment cloudwatch cloudwatch basic homepag document faq price cloudwatch monitor resourc applic captur log send event cloudwatch monitor standard mechan keep tab aw resourc wide rang metric dimens avail via cloudwatch allow creat time base graph alarm dashboard alarm practic use cloudwatch allow trigger notif given metric alarm trigger sn notif auto scale action ec action alarm also support alert n datapoint cross alarm threshold publish share graph metric creat customiz dashboard view monitor report ec instanc system check failur alarm use cloudwatch event event creat mechan autom action variou servic aw creat event rule instanc state aw api auto scale run command deploy timebas schedul think cron trigger event invok lambda function send snssqskinesi messag perform instanc action termin restart stop snapshot volum custom payload sent target json format especi use trigger lambda use cloudwatch log cloudwatch log stream log storag system store log within aw access unlimit paid storag also option stream log directli elasticsearch custom lambda log agent instal server process log time send cloudwatch log export log data stream result aw servic cloudwatch log encrypt use key manag km detail monitor detail monitor ec instanc must enabl get granular metric bill cloudwatch cloudwatch altern lockin cloudwatch offer fairli basic function doesnt creat signific addit aw lockin metric provid servic obtain api import aggreg visual tool servic mani specif provid cloudwatch data import servic altern cloudwatch monitor servic includ newrel datadog sumo logic zabbix nagio ruxit elast stack open sourc option statsd collectd graphit mani other cloudwatch log altern includ splunk sumo logic loggli logdna logstash papertrail elast stack central log solut cloudwatch tip common use case cloudwatch bill alarm instanc load balanc updown alarm disk usag alert use ecconfig monitor watch memori disk metric window platform instanc linux exampl script thing publish metric use aw api incur addit cost stream directli cloudwatch log lambda elasticsearch cluster creat subscript log group dont forget take advantag cloudwatch nonexpir free tier cloudwatch gotcha limit metric cloudwatch origin hypervisor hypervisor doesnt access os inform certain metric notabl memori util avail unless push cloudwatch insid instanc use one metric alarm notif receiv alarm contextu detail specif threshold alarm state time default cloudwatch metric resolut minut send multipl valu metric within minut aggreg minimum maximum averag total sum per minut juli new highresolut option ad cloudwatch metric alarm featur allow record metric second resolut evalu cloudwatch alarm everi second blog post introduc featur describ publish highresolut metric cloudwatch note call putmetricdata api storageresolut attribut item send metricdata array direct paramet putmetricdata api call data metric kept cloudwatch month start novemb use day minimum granular increas day ami ami basic user guid ami amazon machin imag immut imag use launch preconfigur ec instanc come public privat flavor access public ami either freeli avail sharedcommun ami bought sold aw marketplac mani oper system vendor publish readytous base ami ubuntu see ubuntu ami finder amazon cours ami amazon linux ami tip ami built independ base deploy must select ami match deploy use creat eb instanc store pv hvm virtual type bit vs bit amd architectur discuss modern deploy usual bit ebsback hvm creat custom ami snapshot state ec instanc modifi ami back eb storag necessari imag data load eb volum dont requir extra pull result ebsback instanc come much faster instanc storageback one ami per region must look ami region copi ami region ami copi featur aw resourc wise use tag version ami manag lifecycl creat ami alway tension choos much instal configur want bake bake less ami exampl configur manag client download instal configur softwar new ec instanc launch allow minim time spent autom ami creation manag ami lifecycl like abl use fewer ami probabl need updat frequent result longer wait new instanc readi use result higher chanc launchtim instal configur failur bake ami exampl preinstal fulli configur common softwar along configur manag client load configur set launch time result faster launch time fewer opportun softwar instal configur break instanc launch time increas need creat manag robust ami creation pipelin bake even ami exampl instal requir softwar well potenti also environmentspecif configur inform result fast launch time much lower chanc instanc launchtim failur without addit redeploy reconfigur consider requir time consum ami updat order updat softwar configur well complex ami creation autom process option favor depend quickli need scale capac size matur team product instanc boot fast autosc servic requir less spare capac built quickli scale respons sudden increas load set servic autosc consid bake ami back eb storag option system becom larger common complex ami manag multistag ami creation process ideal one common base ami infrequ regener compon common deploy servic updat frequent run servicelevel ami gener process includ instal possibl configur applicationspecif softwar think ami creation strategi use tool like packer simplifi autom ami creation use rhel instanc happen exist rhel onpremis red hat subscript could leverag red hat cloud access program migrat portion subscript aw therebi aw charg rhel subscript second time either use selfcreat rhel ami red hat provid gold imag ad privat ami sign red hat cloud access ami gotcha limit amazon linux packag version default instanc base amazon linux ami configur point latest version packag amazon packag repositori mean packag version get instal lock possibl chang includ break one appear appli updat futur bake ami updat alreadi appli unlik caus problem run servic whose instanc base ami break appear earlier amibak stage build process need fix work around new ami gener lock launch featur allow configur amazon linux instanc target repositori particular major version amazon linux ami reduc likelihood break caus amazoniniti packag version chang occur packag instal time cost updat packag get automat instal futur updat run pair use lock launch featur process advanc amazon linux ami discret give tighter control updat behavior time cloudinit default oftentim user creat ami perform custom albeit manual via tool packer ansibl your care alter cloudinit set correspond system servic eg sshd etc youv custom may find chang longer effect boot new ami first time cloudinit overwritten distro differ file other gener locat etccloud regardless distro want review file care chosen distro roll ami complet refer cloudinit avail cloudinit site advanc configur mechan test chang made file sandbox prior seriou usag auto scale auto scale basic homepag user guid faq price addit charg auto scale group asg use control number instanc servic reduc manual effort provis deprovis ec instanc configur scale polici automat increas decreas instanc count base metric like cpu util base schedul three common way use asg dynam automat adjust instanc count base metric thing like cpu util static maintain specif instanc count time schedul maintain differ instanc count differ time day day week asg addit charg pay underli ec cloudwatch servic auto scale tip better match cluster size current resourc requir use asg result signific cost save mani type workload pair asg clb common pattern use deal chang amount traffic servic receiv dynam auto scale easiest use stateless horizont scalabl servic even use asg dynam increas decreas instanc count serious consid maintain instanc insid asg given target instanc count asg work ensur number instanc run equal target replac instanc die mark unhealthi result consist capac better stabil servic autoscal configur termin instanc clb alb mark unhealthi auto scale gotcha limit replaceunhealthi set default asg kill instanc ec instanc manag consid unrespons possibl instanc whose cpu complet satur minut time appear unrespons caus asg default replaceunhealthi set turn replac instanc manag asg expect consist run high cpu consid deactiv set howev detect kill unhealthi node becom respons eb eb basic homepag user guid faq price eb elast block store provid block level storag offer storag volum attach filesystem like tradit network drive eb volum attach one ec instanc time contrast ef share much higher price point comparison eb tip raid use raid drive increas perform worthi read aw post eb io characterist well perform tip one provis iop pay specif level io oper per second ensur particular level perform disk singl gp eb volum allow k iop max get maximum perform gp eb volum maximum size attach ebsoptim ec instanc standard gp eb volum improv iop size may make sens simpli enlarg volum instead pay better perform explicitli mani case reduc cost standard block size eb volum kb eb gotcha limit eb durabl reason good regular hardwar drive annual failur rate hand poor dont backup contrast durabl extrem high care data back snapshot eb sla uptim see note high avail eb volum volum type indic physic storag type type call standard st sc actual old spinningplatt disk deliv hundr iop want unless your realli tri cut cost modern ssdbase gp io typic option want restor snapshot creat eb volum block lazili read first time theyr referenc avoid initi period high latenc may wish use dd fio per offici document ef ef basic homepag user guid faq price ef amazon network filesystem present nfsv server compat nfsv client mount design highli avail durabl ef file system object redundantli store across multipl avail zone ef design use share network drive automat scale petabyt store data thousand instanc attach ef offer higher throughput multipl gigabyt per second better durabl avail eb see comparison tabl higher latenc ef price base volum data store cost much eb ballpark three time much compar gener purpos gp eb volum perform depend volum data store price like eb ef use credit base system credit earn rate kib per gib storag consum burst readingwrit file metadata unlik eb oper metadata file size owner date etc also consum credit burstcreditbal metric cloudwatch monitor make sure file system doesnt run credit throughput capac burst also depend size tib throughput go mib mib ad store tib instanc file system store tib would abl burst rate mib maximum throughput per ec instanc mib ef two perform mode set file system creat one gener purpos max io max io scale higher cost higher latenc doubt use gener purpos also default percentiolimit metric cloudwatch hover around max io recommend chang perform mode mean creat new ef migrat data high avail achiev mount target differ subnet avail zone ef tip ef base nfsv directori ef mount directli doesnt root directori one applic could mount fsprog anoth fsprog user group level permiss use control access certain directori ef file system share ef filesystem one ef filesystem use multipl applic servic consid care pro perform base total size store file everyth one drive increas perform everyon one applic consum credit faster accumul might offset anoth applic store file ef rare access con sinc credit share one applic overconsum affect other compromis made regard secur client network access drive someon root access one client instanc mount directori ef readwrit access file drive even dont access applic host client isnt norootsquash equival ef ef gotcha limit number nfsv featur support limit servic ef offer disk level encrypt new drive file system creat date encrypt achiev move data new ef volum ef file system mount premis direct connect ef file system mount vpc peer vpn even vpn run top direct connect use ef volum window support file upload ef take hour ef updat detail bill burst credit purpos metadata oper costli term burst credit consumpt recurs travers tree contain thousand file easili ramp ten even hundr megabyt burst credit consum even file touch command like find chown r advers impact perform load balanc load balanc basic aw load balanc product classic load balanc clb applic load balanc alb network load balanc nlb introduct alb classic load balanc known elast load balanc elb older document tool blog post may still refer elb clb around sinc alb nlb ad aw clb support tcp http load balanc alb support http load balanc nlb support tcp layer load balanc clb alb option handl termin singl ssl certif option perform activ health check instanc remov destin pool becom unhealthi clb dont support complex rulebas rout alb support current small set rulebas rout featur nlb extens rout option clb forward traffic singl global configur port destin instanc alb forward port configur perinst basi better support rout servic share cluster dynam port assign like ec meso nlb support multipl port ip regist target ip address includ target outsid vpc load balanc ec select unus port schedul task regist target group use port clb support ec classic well vpc alb support vpc alb target group instanc ip base target rfc rang allow use premis destin via vpn direct connect load balanc tip dont opinion load balanc front dont complex load balanc need like applicationspecif rout request reason use clb alb load balanc instead even dont want think load balanc architectur simpl say one server put load balanc front anyway give flexibl upgrad sinc wont chang dn set slow propag also let thing like termin ssl easili clb alb mani ip intern aw load balanc simpli collect individu softwar load balanc host within ec dn load balanc traffic among pool contain mani ip least one per avail zone depend traffic level also support ssl termin conveni scale clb alb scale high throughput scale instantan your expect hit lot traffic suddenli make sens load test scale advanc also contact amazon prewarm load balanc client ip gener server want know true client ip address load balanc must forward inform somehow clb add standard xforwardedfor header use clb http load balanc possibl get client ip address use load balanc deploy one common pattern swap instanc load balanc spin new stack latest version keep old stack run one two hour either flip back old stack case problem tear rotat certif retain arn rotat iam server certif difficult standard practic upload new one updat resourc new arn howev retain arn use updatecertif call follow process upload new iam server certif uniqu name eg fuzzycomnew renam exist iam server certif eg fuzzycom fuzzycomexpir renam new iam server certif name previous exist certif eg fuzzycomnew fuzzycom jiggl clbalb listen pick chang alb invok modifylisten exist detail alb listen clb invok createloadbalancerlisten exist detail clb listen load balanc gotcha limit clb alb fix extern ip client see consum app doesnt matter enterpris custom may want ip differ user vari unpredict singl client time within standard ec ip rang similarli never resolv clb name ip put valu record work break web client revers proxi cach dn lookup long time problemat clb alb sinc chang ip mean minut hour day client stop work unless disabl dn cach watch java set sure adjust properli anoth exampl nginx revers proxi normal resolv backend startup although way get around unheard ip recycl custom without long cooloff period client cach ip use ssl verifi server might get error respons complet differ servic compani oper servic behind clb alb latter phenomenon mean also see puzzl erron request client compani common client use backend api sinc web browser typic cach limit period clb alb take time scale handl sudden spike traffic well therefor anticip spike need prewarm load balanc gradual send increas amount traffic tune healthcheck care aggress decid remov instanc conserv ad back pool servic load balanc front may becom inaccess second minut time extra care autoscal configur termin instanc mark unhealthi manag load balanc clb http listen dont support server name indic sni need sni work around limit either provid certif subject altern name san use tcp listen termin ssl backend limit number alb clb nlb per region separ late default limit per region limit easili rais alb clb aw quit reluct rais limit nlb use network load balanc nlb ec client cannot connect nlb resid anoth vpc vpc peer aw manag vpn unless ec client c imet instanc type vpc peer vpc must region see troubleshoot clb clb basic homepag user guid faq price classic load balanc formerli known elast load balanc http tcp load balanc manag scale amazon clb tip best practic articl mustread use clb heavili lot detail clb gotcha limit gener clb smart load balanc dont fanci featur finegrain control tradit hardwar load balanc would offer common case involv sessionless app cookiebas session http ssl termin work well default clb refus rout traffic load balanc one avail zone az backend instanc anoth caus last instanc az becom unavail even healthi instanc zone your run fewer two backend instanc per az almost certainli want enabl crosszon load balanc complex rule direct traffic support exampl cant direct traffic base regular express url like haproxi offer apex dn name upon time couldnt assign clb apex dn record ie examplecom instead fooexamplecom need record instead cname possibl rout alia record directli point load balanc clb use http keepal intern side caus unexpect side effect request differ client tcp connect extern side end tcp connect intern side never assum multipl request tcp connect client traffic clb backend instanc subnet network acl rule evalu ec ec traffic subnet would network acl rule evalu default allow rule remov network acl appli subnet rule allow traffic health check port listen port must ad decemb clb launch vpc support ipv address clb launch ecclass support ipv ipv dualstack dn name alb alb basic homepag user guid faq price websocket http support internet protocol version ipv support load balanc via ip support prior applic load balanc advis use tcp instead http protocol make work describ use obscur use proxi protocol pass client ip tcp load balanc alb tip use alb rout servic host share cluster dynam port assign like ec meso alb support http hostbas rout send http request apimydomaincom targetgroup blogmydomaincom target group well http pathbas rout send http request api targetgroup blog target group alb gotcha limit alb support http http plaintext http alb support http extern client intern resourc instancescontain alb support http rout portbas tcp rout instanc alb target group either singl fix healthcheck port ec instancelevel healthcheck healthcheck port target applic port applic instancelevel healthcheck cant configur pertarget healthcheck port differ applic port alb vpconli avail ec classic target group healthi target request rout target exampl point listen target group contain singl servic long initi phase health check would fail request reach servic still start although alb support sni support http certif per load balanc limit describ might subject chang elast beanstalk elast beanstalk basic homepag develop guid faq price eb elast beanstalk paa platform servic help develop creat deploy scale web applic eb handl deploy configur provis load balanc autosc monitor log eb creat aw resourc behalf retain full access control underli resourc cost use eb still charg full cost underli aw resourc creat eb elast beanstalk tip speed deploy launch dev stage turn health check set deploy polici configur want reus multipl eb app save current configur use eb config save cfg myebconfig default eb doesnt alarm youll need add metric your monitor default eb doesnt enabl manag platform updat enabl configur eb automat appli updat prespecifi mainten window elast beanstalk gotcha limit dont edit apachenginx conf file manual ec instanc rewritten deploy use ebextens instead creat eb environ longer possibl chang name tag eb sometim quarantin instanc caus multipl deploy issu despit quarantin eb still deploy subsequ deploy prevent behavior said instanc need termin underli issu fix file upload cap mb default eb configur updat nginx config chang edit elasticbeanstalksavedconfig awar kept sync eb environ config youll need manual fetch save chang take effect elast ip elast ip basic document faq price elast ip static ip address rent aw assign ec instanc elast ip tip prefer load balanc elast ip singleinst deploy could assign elast ip instanc give ip dn name consid deploy time provis load balanc instead easi add remov instanc load balanc also quicker add remov instanc load balanc reassign elast ip conveni point dn record load balanc instead point specif ip manag manual also rout alias easier chang manag situat need manag fix ip address ec instanc exampl custom need fix ip situat requir elast ip elast ip limit per account possibl request elast ip attach activ resourc small hourli fee elast ip extra charg long your use small cost use mechan prevent peopl squat excess number ip address elast ip gotcha limit offici way alloc contigu block ip address someth may desir give ip extern user though alloc may get lucki part cidr block import may want bring ip involv guid go glacier glacier basic homepag develop guid faq price glacier lowercost altern data infrequ access archiv purpos use data rare access gener take hour fulfil retriev request aw offici reveal storag media use glacier may lowspin hard drive even tape aw releas even cost effect storat tier call glacier deep archiv offer hour retriev latenc cost roughli thousand dollar per month per petabyt glacier tip physic ship data amazon put glacier usb esata hdd glacier gotcha limit get file glacier glacial slow typic hour due fix overhead per file pay per put get oper upload download mani small file onto glacier might expens also k storag overhead per file henc good idea archiv file upload awar perobject cost archiv data glacier cost per request larg number object rel small size take time reach breakeven point initi archiv cost versu lower storag price rd rd basic homepag user guid faq price see also ecinstancesinford rd manag relat databas servic allow deploy scale databas easili support oracl microsoft sql server postgresql mysql mariadb amazon aurora rd offer box support high avail failov databas rd tip your look manag conveni rd data store mongodb cassandra may wish consid thirdparti servic provid mlab compos instaclustr make sure creat new paramet group option group databas sinc default paramet group allow dynam configur chang rd instanc start default timezon utc necessari chang differ timezon rd gotcha limit rd instanc run eb volum either generalpurpos provis iop henc constrain eb perform verifi databas featur need everyth might want avail rd exampl use postgr check list support featur extens featur need arent support rd youll deploy databas use failov support offer rd keep mind base dn chang make sure client react chang appropri particularli import java given dn resolv ttl configur default db migrat rd import databas rd ensur take consider mainten window set backup run time import take consider longer time would expect databas size limit tb databas engin except sql server tb limit aurora support tb databas rd mysql mariadb rd mysql mariadb basic rd offer mysql version rd offer mariadb version rd mysql mariadb tip mysql rd allow access binari log multiaz instanc mysql transpar replic data across az use drbd autom backup multiaz instanc run backup instanc reduc latenc spike primari perform schema perform schema enabl default mysql later disabl default version rd wish enabl perform schema reboot rd instanc requir mysql vs mariadb vs aurora prefer mysqlstyl databas start someth new probabl consid aurora mariadb well aurora increas avail nextgener solut said aurora may much faster mysql certain workload mariadb modern commun fork mysql like edg mysql mani purpos support rd rd mysql mariadb gotcha limit super privileg rd provid store procedur perform task requir super privileg start stop replic replic nonrd instanc mysql replic instanc break az failov abil manual chang master replica must rebuilt failov master global option expos via db paramet group variabl introduc later mysql dot releas avoidtemporalupgrad mysql made avail rdss x paramet group make use requir upgrad mysql x rd featur pointintim restor snapshot restor support myisam tabl ensur lock flush myisam tabl execut snapshot backup oper ensur consist rd postgresql rd postgresql basic rd offer postgresql rd postgresql tip recent logic replic support subscrib publish support rel larg rang nativ extens rd postgresql support nativ partit major featur tunabl support connect ssl support multi az pointintim recoveri rd postgresql gotcha limit superus privileg rd provid role rdssuperus need oper limit major featur delay compar open sourc postgresql default rd specd gener purpos ssd need better perform spec provis iop ssd cant use rd replica outsid rd without use logic replic set cannot chang set chang chang use databas paramet group harder troubleshoot perform problem sinc access host sure verifi extens need avail use extens list need come work around deploy databas ec mani postgr util mainten item expect command line access usual satisfi use extern ec server rd sql server rd sql server basic rd offer sql server r includ express web standard enterpris rd sql server tip recent ad support backup restor tofrom may make attract dr option onpremis instal rd sql server gotcha limit user grant dbowner privileg databas instanc storag cannot expand exist databas need space must restor databas new instanc larger storag tb databas size limit nonexpress edit also minimum storag size gb web express gb standard enterpris limit databas per instanc rd aurora rd aurora basic aurora cloud databas servic design provid distribut faulttoler relat databas selfheal storag autosc tb per instanc current come two version mysql compat system postgresql compat system rd aurora mysql rd aurora mysql basic amazon proprietari fork mysql intend scale high concurr workload gener speak individu queri perform aurora expect improv significantli rel mysql mariadb aurora intend maintain perform execut mani queri concurr equival mysql mariadb server could handl notabl new featur includ logstructur storag instead btree improv write perform outofprocess buffer pool databas instanc restart without clear buffer pool underli physic storag special ssd array automat maintain copi data across az aurora read replica share storag layer write master significantli reduc replica lag elimin need master write distribut binari log replic allow zerodataloss failov master replica master read replica share storag known collect aurora cluster read replica span region rd aurora mysql tip order take advantag aurora higher concurr applic configur larg databas connect pool execut mani queri concurr possibl exampl aurora server test produc increas perform oltp workload connect aurora scale well multipl cpu may requir larg instanc class optim perform easiest migrat path aurora restor databas snapshot mysql next easiest method restor dump mysqlcompat databas mariadb lowdowntim migrat mysqlcompat databas set aurora instanc replica exist databas none method option amazon offer feebas data migrat servic replic aurora cluster mysql anoth aurora cluster requir binari log enabl perform nativ aurora replic aurora read replica equival multiaz backup configur zerodataloss failov target fewer scenario creation multiaz aurora instanc requir rd aurora mysql gotcha limit aurora x base mysql x cherrypick later mysql featur miss featur well onlin ddl featur introduc aurora x base mysql x aurora support gtid transact either aurora x aurora x releas line aurora maximum cluster size tb rd aurora postgresql rd aurora postgresql basic amazon proprietari fork postgresql intend scale high concurr workload maintain eas use current base postgresql higher throughput x similar hardwar automat storag scale gb increment tb low latenc read replica share storag layer master significantli reduc replica lag point time recoveri fast databas snapshot rd aurora postgresql tip aurora postgr default suppos util high connect rate reason connect pool must configur accordingli aurora base postgresql lack featur like declar partit logic replic rd aurora postgresql gotcha limit aurora postgresql fall behind normal rd come avail version need featur latest postgresql version might better plain rd patch bug fix separ open sourc postgresql elasticach elasticach basic homepag user guid redi user guid memcach faq price elasticach manag inmemori cach servic use store temporari data fast inmemori cach typic order avoid repeat comput multipl time could reus support memcach redi open sourc inmemori cach softwar expos use nativ access api main benefit aw take care run patch optim cach node need launch cluster configur endpoint applic aw take oper work run cach node elasticach tip choos engin cluster configur instanc type care base applic need document explain detail pro con limit engin order help choos best fit applic nutshel redi prefer store complex data structur memcach plain keyvalu store simplic memcach allow slightli faster allow scale need redi featur may use applic memcach aw provid enhanc sdk certain program languag implement autodiscoveri featur avail normal memcach client librari elasticach gotcha limit sinc case chang cach cluster may restrict like scale purpos may becom problem launch use cloudform stack also contain resourc realli need chang cach order avoid get cloudform stack nonupdat state recommend launch elasticach cluster like resourc similar constraint dedic stack replac entir new stack desir configur dynamodb dynamodb basic homepag develop guid faq price dynamodb nosql databas focus speed flexibl scalabl dynamodb price combin throughput storag dynamodb altern lockin unlik technolog behind mani amazon product dynamodb proprietari aw product interfacecompat altern avail open sourc project tightli coupl applic api featureset take signific effort replac commonli use altern dynamodb cassandra dynamodb tip local version dynamodb provid develop use dynamodb stream provid order stream chang tabl use replic back drive event data dynamodb use simpl lock servic dynamodb index includ primari key either singleattribut hash key composit hashkey rang also queri nonprimari key attribut use secondari index data type dynamodb support three data type number string binari scalar multivalu set dynamodb also support json late dynamodb support global tabl backup restor function dynamodb gotcha limit dynamodb doesnt provid easi way bulkload data possibl data pipelin unfortun consequ sinc need use regular servic api updat exist creat new row common temporarili turn destin tabl write throughput speed import tabl write capac increas dynamodb may irrevers split partit underli tabl spread total tabl capac evenli across new gener tabl later capac reduc capac partit also reduc total number partit leav less capac partit leav tabl state much easier hotspot overwhelm individu partit import make sure dynamodb resourc limit compat dataset workload exampl maximum size valu ad dynamodb tabl kb larger item store url store dynamodb deal time seri data dynamodb challeng global secondari index togeth sampl timestamp possibl solut explain dynamodb allow empti string valid attribut valu common workaround use substitut valu instead leav field empti set fine grain polici access dynamodb tabl sure includ secondari indic polici document well ec ec basic homepag develop guid faq price ec ec contain servic rel new servic launch end manag cluster servic deploy via docker see contain aw section context contain ec grow adopt especi compani embrac microservic deploy docker directli ec anoth common approach use docker aw use ec requir ec yet seem predomin way mani compani use docker aw also possibl use elast beanstalk docker reason your alreadi use elast beanstalk use docker may chang way servic deploy within ec elast beanstalk radic chang servic use ecr ec contain registri amazon manag docker registri servic simpler run registri miss featur might desir user doesnt support crossregion replic imag want fast fleetwid pull larg imag youll need push imag regionloc registri doesnt support custom domain certif contain health monitor via clb alb also use address container servic use alb need handl port content ie servic expos port host sinc alb target group associ ecsbas servic directli hitchhik guid aw ec docker j cole morrison excel articl introduct aw ec concept ec tip log driver ec support multipl log driver awslog splunk fluentd syslog json use awslog cloudwatch make sure group made log first driver fluentd enabl default instal agent enabl driver ad ecsavailableloggingdriversawslogsfluentd etcecsecsconfig blog convox commentari list number common challeng ec earli possibl optim disk clean ec default unus contain delet hour unus imag minut set chang ad ecsenginetaskcleanupwaitdurationm ecsimagecleanupintervalm etcecsecsconfig inform optim ec disk cleanup ec altern lockin kubernet extens contain platform avail host solut googl cloud httpscloudgooglecomcontainerengin aw httpstectoniccom aw kubernet quickstart httpsawsamazoncomquickstartarchitectureheptiokubernet develop collabor heptio nomad orchestratorschedul tightli integr hashicorp stack consul vault etc pleas help expand incomplet section ek ek basic homepag user guid faq price ek elast kubernet servic new servic launch june provid manag kubernet master highli avail pair deploy ks servic pod top ec base kubernet node see contain aw section context contain ek awss solut host kubernet nativ aw replac ec directli respons larg market domin kubernet ek launch ec node would configur setup either manual via cloudform autom solut ek manag done util call kubectl kube configur file file need configur speak ks master certif url aw cli autogener configur file kubect requir commun cluster ek authent integr iam rolespermiss aw cli integr subcommand gener authent token formerli done via custom plugin kubectl call awsiamauthent formerli heptioauthenticatoraw ek provid calico tigera secur workload within cluster use kubernet network polici ek tip multipl cluster support use differ kubeconfig file aw kubernet quickstart develop collabor heptio ek altern lockin ec amazon nativ contain schedul platform releas dont utilis contain today look get start ec excel product kubernet extens contain platform avail host solut googl cloud aw digit ocean azur nomad orchestratorschedul tightli integr hashicorp stack consul vault etc ek gotcha limit pod servic configur rapidli consum ip address insid vpc proper care mainten appli ensur ip exhaust occur current integr monitor cloudwatch ek pod servic need deploy monitor system support kubernet prometheu autosc base cpumemori node limit awar pend servicespod cannot start use clusterautoscal use scale base node resourc usag unschedul pod prometheu popular monitor solut ks metric alert use send event lambda sq solut take autosc action footnot httpsdocsawsamazoncomekslatestuserguidecreatekubeconfightml httpsawsamazoncomaboutawswhatsnewamazonekssimplifieskubernetesclusterauthent fargat fargat basic homepag faq price fargat allow manag deploy contain without worri run underli comput infrastructur fargat serv new backend addit legaci ec backend ec ek task run fargat ec backend call launch type fargat allow treat contain fundament build block infrastructur fargat tip fargat follow similar mindset lambda let focu applic instead deal underli infrastructur fargat support cloudform awscli ecscli fargat task launch alongsid task use ec launch type creat larg fargat deploy make sure estim cost compar altern solut use tradit ec deploy fargat price sever time equivalentlys ec instanc evalu solut base potenti cost refer price ec fargat fargat altern lockin azur contain instanc avail microsoft azur preview version allow run applic contain without manag virtual machin fargat gotcha limit april fargat avail multipl region useast useast uswest euwest januari fargat use ec support ek origin plan yet launch smallest resourc valu configur ec task use fargat vcpu gb memori task storag ephemer fargat task stop storag delet lambda lambda basic homepag develop guid faq price lambda aw serverless comput offer allow user defin lambda function select runtim invok via varieti trigger includ sn notif api gateway invoc lambda key servic enabl serverless architectur aw alongsid aw api gateway aw batch aw dynamodb lambda tip idea behind serverless user dont manag provis scale mainten physic machin host applic code lambda machin actual execut userdefin function abstract contain defin lambda function user abl declar amount memori avail function directli affect physic hardwar specif lambda contain chang amount memori avail lambda function also affect amount cpu power avail aw offer hard guarante around contain reus gener expect unalt lambda function reus warm previous use contain call shortli anoth invoc user use way optim function smartli cach applic data initi lambda hasnt invok time may warm contain left case lambda system load initi lambda code cold start scenario add signific latenc lambda invoc strategi avoid mitig cold start includ keep contain warm period trigger favor lightweight runtim node oppos java lambda integr aw cloudwatch provid logger runtim publish cloudwatch event lambda offer outofthebox optin support aw xray xray help user diagnos lambda issu offer indepth analysi lambda execut flow especi use investig issu call aw servic xray give detail easytopars visual call graph use time cloudwatch event user use lambda run period job cronlik manner event sent lambda fail process manag use dead letter queue dlq sq serverless martin fowler thought aw serverless applic model sam simplif built top cloudform help defin manag deploy serverless applic use lambda serverless one popular framework build serverless applic use aw lambda serverless comput option help framework lambda altern lockin cloud offer similar servic differ name includ googl cloud function azur function ibm openwhisk also run kubernet anoth lambda altern openfaa lambda gotcha limit test lambda local remot challeng sever tool avail make easier includ offici support sam local manag lot lambda function workflow challeng tool manag lambda deploy still immatur aw offici workflow around manag function version alias pain one option avoid lambda version abstract deploy workflow outsid lambda one way accomplish deploy applic success stage distinct aw account per stage account need awar latest version rollback updat handl extern tool oct minimum charg lambda invoc ms costbenefit reduc run time addingremov bucket trigger lambda function error may occur error creat trigger configur ambigu defin cannot overlap suffix two rule prefix overlap event type case manual remov lambda event event tab properti section bucket manag size deploy artifact challeng especi use java option mitig includ proguard load depend runtim tmp use dynamodb trigger lambda function error may occur problem intern lambda error pleas contact lambda custom support usual mean lambda cant detect anyth dynamodb stream within last hour issu persist delet recreat trigger may help lambda need access resourc vpc exampl elasticach rd need deploy within increas coldstart time elast network interfac eni regist within vpc concurr function aw also rel low initi limit number eni creat within vpc howev increas good case made aw support lambda sever resourc limit mb request respons payload size mb limit compress zipjar file deploy packag size mb limit codedepend packag compress mb limit local storag tmp lambda code sampl fanout exampl use lambda fanout copi data one servic case kinesi multipl aw data servic destin fanout data sampl includ iot sq aw limit monitor use lambda show use multipl lambda monitor lambda ec worker pattern show use lambda workflow data pick lambda push queue sent ec process secur pet store sampl java applic use lambda api gateway cognito user ident awslambdalist list hope use aw lambda lambdarel resourc quit code sampl usual guarante test caveat emptor pleas help expand incomplet section api gateway api gateway basic homepag develop guid faq price api gateway provid scalabl secur frontend servic api work lambda elast beanstalk regular ec servic allow serverless deploy applic built lambda switch deploy upgrad tricki builtin mechan singl domain name migrat one api gateway anoth one may necessari build addit layer front even anoth api gateway allow smooth migrat one deploy anoth api gateway altern lockin kong opensourc onpremis api microservic gateway built nginx lua kong extens plugin tyk opensourc api gateway implement go avail cloud onpremis hybrid api gateway tip prior could send receiv plain text data peopl would baseencod binari data binari data support api gateway support openapi specif aka swagger allow describ api languageagnost way use variou tool gener code support api gener client extrem easi either aw consol use getsdk api api gateway integr cloudwatch outofthebox allow easi log request respons note request respons larg cloudwatch truncat log full requestrepli log make sure integr eg lambda good practic call api gateway api log request id client later refer request id cloudwatch easier trace debug multipl way secur api includ builtin support aw cognito usecas cognito easiest simplest way authent user although roll solut use custom author basic lambda defin determin request accept api gateway lend well reststyl develop perfectli reason implement rpcstyle api api gateway well depend usecas often lead much simpler api structur smoother client experi rpcstyle api particularli use design servic sit deeper stack dont serv content directli user api gateway gotcha limit api gateway support encrypt http endpoint support unencrypt http probabl good thing api gateway doesnt support multiregion deploy high avail servic deploy singl region come global endpoint serv aw edg locat similar cloudfront distribut cannot multipl api gateway hostnam differ aw region use rout distribut traffic forum post integr timeout variou integr type eg lambda http api gateway timeout describ unlik limit timeout cant increas api gateway return statu code network low level transport relat issu happen may see messag cloudwatch log request includ messag execut fail due intern error one possibl reason error even though backend server run may someth outsid http specif like send wellform chunk messag test hit backend directli curl raw backendendpointurl see complain aw xray support exist cumbersom use aw servic call api gateway trace seemingli end api gateway also appear node servic map care use export featur result swagger templat often incomplet doesnt integr well swagger extens thing cor mani chang api gateway resourc need deploy via consol api call unfortun api gateway terribl notifi user chang stage deploy chang requir deploy youv chang someth api take effect there decent chanc need deploy particular deploy api gateway part cloudform stack chang automat deploy unless deploy resourc chang chang work around alway chang deploy resourc cloudform updat run custom resourc ensur deploy made altern use serverless applic model definit api gateway resourc alway expect api deploy stack updat sinc sam gener new deploy everi time api gateway support nest queri paramet method request api gateway limit number resourc describ someth consid start use api gateway platform teamorgan deploy api gateway pleas help expand incomplet section step function step function basic homepag develop guid faq price step function aw way creat state machin manag serverless workflow step function tip varieti structur support includ branch parallel oper wait task repres real work node frequent lambda function activ extern driven task implement way like state machin data flow step modifi ad state machin execut best task idempot part may want rerun state machin input data debug aw consol facilit examin execut state variou step consol let step select input tab fail execut copi input data json select state machin name breadcrumb start new execut past input data copi previous step function gotcha limit step function free tier elig initi transit per month thereaft charg per state transit mani simultan execut awar lambda throttl limit peraccount preregion recent becam settabl perlambda step function execut limit event step creat multipl event mean iter loop use lambda limit iter count around need continu new execut rout rout basic homepag develop guid faq price rout aw dn servic rout altern lockin histor aw slow penetr dn market often driven perceiv reliabl longterm vendor relationship rout matur becom standard option mani compani rout cheap histor dn standard fairli larg global network geograph dn formerli premium featur conveni alreadi use aw gener dont get lock dn provid simpl use case increasingli becom tie use specif featur like geograph rout rout alia record mani altern dn provid exist rang longstand premium brand like ultradn dyn less well known modestli price brand like dnsmadeeasi dn expert tell market opaqu enough reliabl perform dont realli correl well price rout usual somewher middl pack perform test eg solvedn report rout tip know rout alia record rout support standard dn record type note alia resourc record set standard part dn specif rout featur avail dn provid provid differ name alias like intern name bit like cname resolv intern server side exampl tradit could cname dn name clb alb often better make alia load balanc effect latter case extern client see target record point often wise use alia record altern cname sinc updat instantli api call without worri dn propag use clbsalb resourc aw support somewhat confusingli cname alias depend type target alias extens regular dn record export output zone file addit nonstandard alia line latencybas rout allow user around globe automat direct nearest aw region run latenc reduc understand domain registr dn manag host zone two separ rout servic buytransf domain rout automat assign four name server eg nsawsdnscom rout also offer automat creat host zone dn manag requir dn manag account even rout need creat ns record point server assign domain rout one use case would put domain registr mission critic bastion account manag host zone within anoth account access applic rout gotcha limit privat host zone respond dn queri origin within vpc result rout respond request made via vpn direct connect get around need implement hybrid cloud dn solut use simpl ad provid ip address queri host zone cloudform cloudform basic homepag develop guid faq price addit charg cloudform allow manag set resourc aw servic group stack cloudform allow defin stack templat use json yaml cloudform one major servic underpin aw infrastructur code capabl crucial enabl repeat consist deploy infrastructur cloudform addit charg pay underli resourc cloudform altern lockin hashicorp terraform thirdparti altern support cloud platformsprovid includ azur openstack aw featur may avail terraform eg multiaz elasticach use redi may resort embed cloudform templat pulumi enabl team defin deliv cloud nativ infrastructur code cloud languag contain serverless kubernet infrastructur cloudform tip valid stack differ aw account cloudform truli shine make multipl deploy stack differ account region common practic deploy stack success stage end product rollout avoid potenti timeconsum syntax error eat deploy time run validatetempl cloudform sometim slow updat resourc new featur old servic user abl defin templat need deploy resourc featur isnt support templat cloudform allow run arbitrari code use lambda stack creat updat via custom resourc custom resourc make cloudform truli power tool sort neat thing quit easili saniti test initi configur dynamo tabl bucket clean old cloudwatch log etc write custom resourc java cfnrespons come handi write custom resourc javascript aw provid good refer document cloudform offer visual templat design use get speed templat syntax use stackset user defin deploy entir product applic consist multipl stack one servic per stack singl cloudform templat your develop serverless applic ie use lambda api gateway cloudform offer simplifi templat format call sam use restrict stack polici without one inadvert delet live product resourc probabl caus sever outag turn termin protect stack avoid costli accid cloudform templat refer indispens discov isnt possibl cloudform templat tropospher python librari make much easier creat cloudform templat current support aw openstack resourc type tropospher attempt support resourc type describ cloudform templat built error check recommend soft depend awac allow gener aw access polici json write python code stacker python applic make easi defin configur orchestr manag depend cloudform stack across multipl userdefin environ build differ stack similar layer may use build separ templat layer reus use awscloudformationstack avoid hardcod resourc paramet potenti chang use stack paramet much resort default paramet valu cloudform use awkward json format make read debug difficult use effect typic involv build addit tool includ convert yaml support directli wherev possibl export relev physic id stack defin output cloudform templat actual name assign resourc creat output return describestack api call get import stack part recent addit crossstack refer note import output stack anoth stack creat hard depend track cloudform abl delet stack output import stack cloudform set send sn notif upon state chang enabl programmat handl situat stack fail build simpl email alert appropri peopl inform cloudform allow use condit creat stack one common way leverag capabl support multienviron cloudform templat configur use ifels statement valu paramet pass eg env environmentspecif valu thing like vpc id securitygroup id ami name pass reusabl gener templat version control cloudform templat cloud applic combin code written infrastructur run version control easi roll back known good state avoid name resourc explicitli eg dynamodb tabl deploy multipl stack aw account name come conflict potenti slow test prefer use resourc refer instead thing shouldnt ever delet set explicit deletionpolici resourc prevent resourc delet even cloudform stack delet use anyth maintain expensivetorebuild state dynamodb tabl thing expos outsid world api gateway api cloudform gotcha limit given cloudform stack end wide varieti state error report gener weak often time multipl observetweakredeploy cycl need get work templat intern state machin vari state extrem opaqu crossregion oper possibl cloudform without use custom resourc crossregion sn subscript handmad resourc live alongsid cloudformationcr resourc inadvis sometim unavoid possibl leav resourc manag cloudform templat provid readonli access consol modif stack resourc made outsid cloudform potenti lead stack stuck updaterollbackfail mode stack state recov use continueupdaterollback command command initi consol cli resourcestoskip paramet usabl cli use continueupdaterollback command fail new featur drift detect use detect outsid chang made stack cloudform use complex varieti pain point mani compani find altern solut mani compani use signific addit tool cloudform slow especi item like cloudfront distribut rout cname entri hard assembl good cloudform configur exist state aw offer trick clumsi cloudform also hasnt updat age oct doesnt support templat mani new servic wont fulli defin even exist servic sinc updat exampl dynamo tabl defin cloudform wont contain ttl definit autosc configur thirdparti version tool support resourc call former mani user dont use cloudform limit find solut prefer often way accomplish goal local script boto bash ansibl etc manag build infrastructur dockerbas solut convox etc deploy larg stack ie mani resourc problemat due unintuit api limit instanc api gateway createdeploy api default limit request per minut limit readili exceed even moderatelys cloudform stack creat cw alarm anoth commonli seen limit putmetricalarm tp especi creat mani autosc polici dynamodb one way work around limit includ cloudform dependson claus artifici chain resourc creation creatingdelet stack littl less clean ideal resourc leav behind trace aw account even delet eg lambda leav behind cloudwatch log group never expir vpc network secur secur group vpc basic homepag user guid faq secur group price vpc virtual privat cloud virtual network layer aw system aw user basic understand vpc concept need get detail vpc configur trivial extrem complex depend extent network secur need modern aw account creat ecvpc account support vpc instanc default vpc older account may still use ecclass mode featur dont work without vpc probabl want migrat vpc network secur tip secur group first line defens server extrem restrict port open incom connect gener use clb alb load balanc port need open incom traffic would port whatev port applic use secur group access polici deni default port hygien good habit pick uniqu port within unusu rang differ kind product servic exampl web frontend might use backend servic postgr instanc usual make sure finegrain secur group set server make disciplin list servic also errorproof exampl accident extra apach server run default port backend server expos migrat classic migrat older ecclass deploy modern ecvpc setup articl may help migrat elast ip ecclass ecvpc basic aw use one default vpc may suffici scale consid map network topolog thoroughli good overview best practic consid control access privat aw resourc vpn get better visibl control connect connect attempt expos smaller surfac area attack compar expos separ potenti authent servic public internet eg bug yaml parser use rubi rail admin site much less seriou admin site visibl privat network access vpn anoth common pattern especi deploy get larger secur regulatori requir get stringent team size increas provid bastion host behind vpn ssh connect need transit cheap vpn access privat aw resourc consid use pointtosit softwar vpn openvpn either instal use offici ami though limit concurr user free licens instal use openvpn packag linux linux packag allow unlimit concurr user instal less straightforward openvpn instal script help instal add client key easili consid use secur group sourc secur group rule instead use cidr way host sourc secur group host secur group allow access much dynam secur way manag secur group rule vpc flow log allow monitor network traffic within vpc log store cloudwatch log group use secur monitor third parti tool perform evalu forens investig see vpc flow log user guid basic inform see flowlogsread cli tool python librari retriev work vpc flow log ipv avail vpc along announc came introduct egressonli internet gateway case one would use nat gateway enabl egressonli traffic vpc ipv one use egressonli internet gateway purpos ipv amazon provid ipv cidr block vpc request present cannot implement ipv block happen one alreadi new exist vpc use ipv exist vpc need configur ipv cidr block associ new vpc privatelink homepag user guid price one use privat link interfac vpc endpoint deploy eni vpc subnet allow direct access aw api access local vpc without go internet anoth use case would expos servic account aw vpc endpoint servic vpc network secur gotcha limit vpc tie one region one account subnet tie one vpc limit one avail zone secur group tie one vpc util infrastructur multipl vpc make sure configurationdeploy tool take account vpc endpoint current avail dynamodb secur requir lockdown outbound traffic vpc may want use dn filter control outbound traffic servic care choos vpc ip cidr block go need make use classiclink make sure privat ip rang doesnt overlap ec classic go peer vpc care consid cost data transfer vpc sinc workload integr prohibit expens new rd instanc requir subnet group within vpc your use default vpc isnt concern contain subnet avail zone region howev your creat vpc plan use rd make sure least two subnet within vpc act subnet group delet default vpc recreat via cli consol care vpc vpn credenti lost compromis vpn endpoint must delet recreat see instruct replac compromis credenti secur group rout tabl appli entri separ ipv ipv one must ensur add entri protocol accordingli manag nat gateway conveni altern manual manag nat instanc come cost per gigabyt consid altern your transfer mani terabyt privat subnet internet transfer terabytespetabyt data ec instanc privat subnet avoid nat gateway data process charg set gateway type vpc endpoint rout traffic tofrom vpc endpoint instead go nat gateway km km basic homepag develop guid faq price km key manag servic secur servic creat store audit usag cryptograph key servic integr km integr aw servic eb elast transcod emr redshift rd se workmail workspac encrypt api encrypt decrypt api allow encrypt decrypt data km servic side never expos master key content data key generatedatakey api gener new key master key data key content expos use encrypt decrypt size data applic layer km store manag track data key respons applic audit turn cloudtrail audit km api event access use key polici iam polici grant differ level km access exampl creat iam polici allow user encrypt decrypt specif key km tip common compani manag key complet via homegrown mechan far prefer use servic km begin encourag secur design improv polici process around manag key good motiv overview aw present cryptograph detail aw whitepap blog convox demonstr use km encrypt rest km gotcha limit encrypt api work kb data larger data requir gener manag data key applic layer km audit event avail cloudtrail lookup event api need look find raw jsongz file cloudtrail save order encrypt multipart upload km key polici need allow kmsdecrypt kmsgeneratedatakey addit kmsencrypt otherwis upload fail accessdeni error km key region specif store use region creat cant transfer region km key key polici must grant access someth manag key dont grant anyth access key creation reach support key polici reset reduc risk key becom unmanag use key polici grant access iam role user delet userrol recreat user role wont grant permiss key cloudfront cloudfront basic homepag develop guid faq price cloudfront aw content deliveri network cdn primari use improv latenc end user access cacheabl content host global edg locat cloudfront altern lockin cdn highli fragment market cloudfront grown leader mani altern might better suit specif need cloudfront tip ipv support configur set enabl default new cloudfront distribut ipv support extend use waf cloudfront http support client must support tl sni common use user brows download content get head method request cloudfront also support sinc upload data post put delet option patch must enabl specifi allow http method creat distribut interestingli cost accept upload data usual less send download data basic version cloudfront support ssl via sni extens tl support modern web browser need support older browser need pay hundr dollar month dedic ip consid invalid need care cloudfront support invalid object edg locat typic take mani minut propag edg locat cost per request first request cdn support better everyon use tl nowaday possibl ilya grigorik tabl offer good summari featur regard tl perform featur cloudfront altern invalid often easier manag instant configur distribut cach queri string append uniqu queri string version onto asset updat frequent good web perform recommend enabl compress cloudfront distribut origin anoth sourc alreadi compress cloudfront gotcha limit use back store rememb endpoint websit host gener differ exampl bucketnamesamazonawscom standard serv endpoint redirect error page support need use websit host endpoint list bucket eg bucketnameswebsiteuseastamazonawscom appropri region default cloudfront forward http host header origin server problemat origin run multipl site switch host header enabl host header forward default cach behavior set bit ssl certif cloudfront support bit ssl certif late use extern issu ssl certif youll need make sure bit see ongo discuss although connect client cloudfront edg server make use ipv connect origin server continu use ipv directconnect directconnect basic homepag user guid faq price direct connect privat dedic connect network aw directconnect tip data center partner relationship aw setup streamlin use consist predict network perform guarante gbp gbp per link use peer coloc corpor physic datacent network vpc exampl extend corpor ldap andor kerbero ec instanc run vpc exampl make servic host outsid aw financi regulatori legaci reason callabl within vpc redshift redshift basic homepag develop guid faq price redshift aw manag data warehous solut massiv parallel scalabl columnar wide use built use paraccel technolog expos postgrescompat interfac redshift altern lockin whatev data warehous select busi like lock long time also coincident data warehous market highli fragment select data warehous choic made care research awar market landscap busi intellig tool youll use redshift tip although redshift mostli postgrescompat sql dialect perform profil differ redshift support primit data type list unsupport postgr type leader node comput node leader node distribut queri comput one note function execut lead node make sure creat new cluster paramet group option group databas sinc default paramet group allow dynam configur chang major thirdparti bi tool support redshift integr see quora top perform tune techniqu amazon redshift provid excel list perform tune techniqu amazon redshift util contain use util script view simplifi redshift op vacuum regularli follow signific number delet updat reclaim space improv queri perform avoid perform blanket vacuum analyz oper cluster level check tabl determin whether vacuum analyz action need taken wast perform analyz vacuum command object requir util analyz vacuum schema util perform work sql determin whether tabl need vacuum analyz found schema util readm wish creat mainten process redshift provid variou column compress option optim store data size aw strongli encourag user use automat compress copi stage redshift use sampl data ingest analyz column compress option howev automat compress appli empti tabl data therefor make sure initi load batch big enough provid redshift repres sampl data default sampl size row redshift use columnar storag henc index capabl howev use distribut key sortkey improv perform redshift two type sort key compound sort key interleav sort key compound sort key made column list sort key definit use queri oper use prefix sortkey interleav sort key hand give equal weight column subset column sort key dont know ahead time column want choos sort filter much better choic compound key exampl use interleav sort key distribut strategi sinc data redshift physic distribut among node choos right data distribut key distribut style crucial adequ queri perform three possibl distribut style set even default key use key colloc join key column tabl join queri use place data smallsiz tabl cluster node redshift gotcha limit redshift handl heavi queri well scale horizont ie handl multipl queri parallel therefor expect high parallel load consid replic possibl shard data across multipl cluster leader node manag commun client program commun comput node singl point failur although redshift queri parallel well comput node level certain stage execut leader node becom bottleneck redshift data commit transact expens serial cluster level therefor consid group multipl mutat command copyinsertupd command singl transact whenev possibl redshift support multiaz deploy build multiaz cluster trivial exampl use kinesi bewar store multipl small tabl redshift way redshift tabl laid disk make impract minimum space requir store tabl mb node slicesnod column exampl node cluster empti tabl column occupi mb disk queri perform degrad significantli data ingest wlm workload manag tweak help extent howev need consist read perform consid replica cluster extra cost swap updat never resiz live cluster resiz oper take hour depend dataset size rare case oper may also get stuck youll end nonfunct cluster safer approach creat new cluster snapshot resiz new cluster shut old one redshift reserv keyword present postgr see full list watch delta delta encod redshift support mani postgr function notabl sever datetimerel aggreg function see full list uniqu primari key foreign key constraint redshift tabl inform enforc howev use queri optim gener queri plan null column constraint enforc see inform defin constraint compress sort key result signific perform impact redshift queri involv sort key slow might want consid remov compress sort key choos sort key import sinc chang tabl sort key creat need chang sort distribut key tabl need creat new tabl new key move data queri like insert newtabl select oldtabl move data queri look like insert x select need twice much disk space avail tabl take cluster disk redshift first copi data disk new tabl good articl big tabl emr emr basic homepag releas guid faq price emr use stand elast map reduc anymor sinc extend beyond mapreduc servic offer manag deploy hadoop hbase spark reduc manag burden set maintain servic emr altern lockin emr base open sourc technolog principl deploy howev job workflow much tool awsspecif migrat emr cluster possibl alway trivial emr tip emr reli mani version hadoop support softwar sure check version use offtheshelf emr hadoop signific overhead compar effici process singl machin data small perform matter may wish consid altern post illustr python programm may want take look yelp mrjob take time tune perform emr job thirdparti servic qubol data servic gain popular way improv perform reduc cost emr gotcha limit emr cost pile quickli sinc involv lot instanc effici poor depend cluster configur choic workload accid like hung job costli see section ec cost manag especi tip spot instanc blog post addit tip written prior shift persecond bill bewar doubledip emr pay ec capac servic fee addit emr sync task log mean pay storag put request standard rate log file tend rel small everi hadoop job depend size gener thousand log file quickli add thousand dollar aw bill yarn log aggreg avail emr kinesi stream kinesi stream basic homepag develop guid faq price kinesi stream use call kinesi kinesi firehos kinesi analyt launch servic allow ingest highthroughput data stream immedi delay process aw servic kinesi stream subcompon call shard shard provid mb write capac mb read capac maximum read per second stream shard programmat increas decreas base varieti metric record enter kinesi stream assign uniqu sequenc number captur record stream order number timeord preserv page summar key term concept kinesi stream kinesi stream altern lockin kinesi close compar apach kafka opensourc data ingest solut possibl set kafka cluster host ec instanc vp howev respons manag maintain zookeep kafka broker highli avail configur confluent good blog post recommend link bottom sever blog written subject kinesi use awsspecif api awar potenti futur cost migrat away choos use applic effici use kinesi stream scale number shard base requir stream capac note direct equival apach kafka kinesi stream tip kcl kinesi client librari provid skeleton interfac java node python rubi net program easili consum data kinesi stream order start consum data stream need provid config file point correct kinesi stream function initialis consum process record shut consum within skeleton provid kcl use dynamodb tabl keep track record process kcl ensur record process least develop ensur program handl doublyprocess record kcl also use dynamodb keep track kcl worker automat share avail kinesi shard across worker equal possibl kinesi stream gotcha limit kinesi stream shard permit read per second evenli distribut data across mani shard read limit stream remain read per second aggreg consum applic need check everi singl shard new record put hard limit number differ consum applic possibl per stream given maximum read latenc exampl consum applic read data one stream number shard cannot read latenc less one second consum need poll shard everi second reach cap read per second per shard blog post discuss perform limit kinesi product kinesi stream includ free tier make sure experiment person account shut stream may run unexpect cost per shardmonth kinesi firehos kinesi firehos gotcha limit deliv firehos elasticsearch json document cannot contain id properti firehos attempt deliv document wont log error devic farm devic farm basic homepag develop guid faq price devic farm aw servic enabl mobil app test real devic support io android includ kindl fire devic well mobil web support remot devic access order allow interact testingdebug devic farm tip aw mobil blog contain sever exampl devic farm usag test devic farm offer free trial user want evalu servic devic farm offer two price model pay per devic minut use small usag level situat hard predict usag amount unmet plan use situat activ usag expect begin minim wait time devic avail one approach creat sever devic pool differ devic randomli choos one unus devic pool everi run devic farm gotcha limit devic dont sim card therefor cant use test sim cardrel featur devic farm support test popular languagesframework actual list support framework languag present page api cli devic farm quit low level may requir develop addit tool script top aw provid sever tool plugin devic farm howev doesnt cover case platform may requir develop specif tool plugin support specif requir gener devic farm doesnt android devic chines compani like huawei meizu lenovo etc actual list support devic locat devic avail uneven depend sever factor includ devic popular usual modern devic see higher demand thu wait time higher compar rel old devic mobil hub mobil hub basic homepag user guid faq price mobil hub orchestr multipl servic creat aw backend mobil web applic project mobil hub one backend made configur featur plu one applic featur includ analyt cloud logic convers bot host stream nosql databas user data storag user signin featur use one two servic deliv chunk function servic use includ api gateway cloudfront cognito devic farm dynamodb lambda lex pinpoint applic sdk exist android java io swift web js react nativ js also cli javascript applic mobil hub tip mobil hub consol starter kit tutori variou app platform cli allow local develop lambda code js default awsmobil pullpush command sync cloud folder back mobil hub free servic price model mobil hub gotcha limit cloud api featur allow import exist lambda function instead defin new one rough edg cli check github issu mobil hub use cloudform cover get confus servic chang outsid mobil hub consol iot iot basic homepag user guid faq price iot platform allow client iot devic softwar applic exampl commun aw cloud client also call devic thing includ wide varieti devic type roughli three categori devic type interact iot servic send messag iot protocol iot pubsubstyl messag broker call iot devic gateway send messag exampl aw iot button eddyston beacon send receiv process messag exampl simpl process board raspberri pi quick start guid aw devic echo echo dot design work aw alexa skill kit programm voiceen servic aw aw use quickstart use consol slide present core topic iot term aw iot thing metadata devic registri store devic state json document call devic shadow devic metadata also store iot thing type aid devic metadata manag allow reus devic descript configur one devic note iot thing type deprec chang immut aw iot certif devic authent logic associ uniqu certif logic represent devic associ done consol addit public key certif must copi physic devic cover authent devic particular aw devic gateway messag broker associ aw iot certif iot devic regist ca certif author aw gener certif associ certif devic via aw consol cli aw iot polici devicetop author json file associ one aw iot certif author associ devic publish andor subscrib messag one mqtt topic aw iot rule sqllike queri allow reus devic messag data describ present summar design pattern iot rule shown diagram summar flow messag aw iot servic iot greengrass homepag greengrass softwar platform extend aw iot capabl allow lambda function run directli local devic also enabl iot devic abl secur commun local network without connect cloud greengrass includ local pubsub messag manag buffer messag connect lost inbound outbound messag cloud preserv local deploy lambda function trigger local event messag cloud sourc greengrass includ secur authent author devic within local network also local network aw cloud also provid secur overtheair softwar updat lambda function greengrass core softwar includ messag manag object lambda runtim local copi servic iot thing devic shadow deploy agent manag greengrass group configur greengrass group contain select iot devic set subscript associ lambda function greengrass group devic either greengrass core iot devic connect particular greengrass core greengrass core sdk enabl lambda function interact aw greengrass core run order publish messag interact local thing shadow servic invok deploy lambda function aw greengrass core sdk support send mqtt messag qo shown diagram show architectur aw iot greengrass servic iot altern lockin aw microsoft googl introduc iotspecif set cloud servic sinc late aw first move iot servic gener avail dec microsoft releas set iot servic azur feb googl preview releas iot servic android thing weav issu lockin center around devic protocol exampl mqtt amqp messag format json vs hex secur certif iot tip get start button one way start use aw iot button aw provid number code sampl use iot button use aw iot consol click connect aw iot button link youll taken aw lambda consol fill button serial number associ lambda write aw iot button avail sale us connect protocol import understand detail devic wish connect aw iot servic includ secur devic connect devic protocol cloud vendor differ significantli support common iot protocol mqtt amqp xmpp aw iot support secur mqtt websocket http support devic secur via certif process key differenti space august aw ad justintim registr iot devic servic combin servic common use aw servic aw lambda kinesi dynamodb although mean requir sampl iot applic refer architectur screencast test tool get start aw includ lightweight mqtt client aw iot consol creat test send receiv messag variou mqtt topic test local use mqtt may help download use open sourc mosquitto broker tool local test devic andor devic simul use mqtt load simul test devic messag load throughout iot solut iot gotcha limit iot protocol import verifi exact type support particular iot devic messag protocol exampl one commonli use iot protocol mqtt within mqtt three possibl level qo mqtt aw iot support mqtt qo fire forget qo least includ confirm qo exactli requir step confirm import understand much code youll need write particular applic messag resolut need present nuanc connect ecosystem match iam user role iot polici associ author aw iot devic immatur custom code enforc secur requir common common mistak misunderstand import iot devic secur imper associ devic uniqu certif public key gener certif upload aw use aw gener iot devic certif best read understand awss guidanc topic one aw iot gateway endpoint per aw account product scenario youll probabl need set multipl aw account order separ devic traffic develop test product interest note azur iot gateway support configur multipl endpoint singl azur account use separ pubsub endpoint develop test product limit awar limit includ devic messag size type frequenc number aw iot rule iot code sampl simpl beer servic surprisingli use code exampl use aw iot lambda etc iotelf offer clean python sampl use aw iot sdk iot button project hackster includ mani differ code sampl project iot code exampl devic simul mqtt sampl time registr truck simul predict data simul aw alexa trivia voic exampl quickstart use alexa voic capabl lambda raspberri pi exampl includ beacon project danbo gopigo se se basic homepag document faq price se simpl email servic servic expos smtp endpoint applic directli integr se tip bounc handl make sure handl earli enough abil send email remov se see mani bounc credenti mani develop get confus se credenti aw api key make sure enter smtp credenti use smtp api se gotcha limit internet access se smtp endpoint internet access locat without internet access eg privat subnet without nat gateway rout rout tabl case set smtp relay instanc subnet internet access configur applic send email smtp relay instanc rather se relay forward rule send email se use proxi instead nat confirm proxi servic support smtp certif manag certif manag basic homepag user guid faq price use certif manag manag ssltl certif aw servic support import exist certif well issu new one provid domain valid dv certif valid done send email contact address whoi common address domain domain name present request late also done via dn instead acm attempt automat renew certif issu amazon first attempt connect domain http check certif use domain certif intend renew fail check dn record use previous valid fail acm attempt manual valid send email domain certif certif manag altern lockin certif issu certif manag cant use outsid servic support import certif howev still use elsewher certif manag tip support servic manag load balanc cloudfront api gateway elast beanstalk domain valid process dn valid unsuccess certif manag send email everi contact address specifi domain whoi record five common administr address antispam filter mark email spam check spam folder email dont receiv confirm email set certif test domain dont email set use dn valid instead rememb request wildcard domain request valid level wildcard subdomain preced wildcard take exampl approv issu certif barexamplecom would valid foobarexamplecom barexamplecom likewis would also valid wwwbarfooexamplecom would need add domain certif request certif manag gotcha limit order use certif manag cloudfront distribut certif must issu import useast n virginia region certif use elast load balanc must issu region load balanc certif move copi region juli domain use load balanc present multipl region differ certif must request region iot way set certif default maximum number domain per certif get limit increas maximum contact aw support note everi differ domain request cert youll need press accept email sent domain exampl request cert differ domain sub domain youll need press accept differ link request limit increas aw support respond ask confirm bypass say bodi initi request acknowledg moment method add remov name certif instead must request new certif revis namelist must reapprov name certif even theyd previous approv way moment add remov domain tofrom exist certif must request new certif reapprov domain request waf waf basic homepag document faq price waf web applic firewal use conjunct cloudfront alb servic inspect blockallow web request base userconfigur condit http http request support servic waf strength detect malici activ base patternmatch input attack sql inject xss etc waf support inspect request receiv ipv ipv waf tip get waf api call histori done cloudtrail enabl cloudtrail consol also possibl get full log web request inspect waf gotcha limit may aw waf avail amazon cloudfront commerci aw region us east n virginia us east ohio us west oregon us west n california eu ireland eu frankfurt eu london eu stockholm asia pacif tokyo asia pacif sydney asia pacif singapor asia pacif seoul opswork opswork basic homepag document faq price stack chef autom puppet enterpris opswork configur manag servic use chef puppet configur manag broken three differ servic opswork stack servic let configur launch stack specif applic need allow autom applic deploy chef run perform manual via execut cookbook command otherwis run part lifecycl event opswork stack differ standard configur manag servic also allow perform infrastructur applic autom creat amazon ec instanc deploy applic via chef cookbook opswork chef autom servic launch dedic chef autom server account use associ node upload coobook code configur system autom patch backup os updat minor chef version upgrad provid part servic aw api provid associatingdisassoci node chef run schedul node use chefclient cookbook opswork puppet enterpris servic launch dedic puppet master account use associ node upload modul configur system autom patch backup os updat minor puppet version upgrad provid part servic aw api provid associatingdisassoci node default puppet agent run automat everi minut associ node opswork chef autom opswork puppet enterpris strictli design configur manag provis infrastructur outsid chef serverpuppet master creat account three opswork servic support manag amazon ec onpremis infrastructur howev implement detail differ slightli opswork stack allow regist instanc instal opswork agent connect stack opswork chef autom opswork puppet enterpris allow associ new exist infrastructur use either opsworkscmassociatenod api action vendorsupport method associ node chef server puppet enterpris although opswork let work common chef recip puppet modul creat stack creat custom recip requir familiar chef puppet syntax chefpuppet code support part aw support decemb opswork stack support chef version decemb opswork chef autom use chef server version current stabl version chef berkshelfcan use chef stack version later manag cookbook respect depend howev chef x stack berkshelf must instal stack administr run chef environ may altern consid consider list bitlanc articl opswork altern lockin major competitor configur manag includ chef puppet ansibl opswork tip opswork stack opswork chef autom use chef cookbook configur chef provid free train learn syntax best practic etc httpslearnchefio opswork puppet enterpris use puppet manifest configur puppet provid use learn vm download httpslearnpuppetcom opswork gotcha limit opswork stack avail follow region montreal govcloud beij opswork chef autom opswork puppet enterpris avail follow region montreal sao paulo govcloud london pari seoul mumbai batch batch basic homepag document faq price aw batch servic offer environ run batch comput job servic dynam provis optim comput resourc need job base resourc requir scale hundr thousand job batch workload access aw servic featur aw batch coupl spot instanc help run job appropri capac avail provid optim util comput resourc batch workload built docker imag imag push ec contain registri ecr privat repositori access aw job definit workload docker imag uri also let user specifi environ detail like vcpu memori volum map environ variabl paramet retri strategi contain properti job iam role comput environ ec cluster provid runtim batch workload execut aw batch provid manag well unmanag comput environ manag environ provis manag aw unmanag environ manag custom job definit submit job queue execut queue prioriti least one comput environ associ aw batch use ec execut container job batch tip aw batch support priorit job via job queue prioriti higher number higher prioriti aw batch support launch comput environ specif vpc subnet comput environ ec cluster addit cost aw batch pay cost associ aw servic use like ec instanc resourc consum batch job associ iam role polici comput environ enabl contain access aw resourc use unmanag comput environ need special resourc like dedic host ef sq sq basic homepag document faq price sq highli scalabl fulli manag messag queu servic aw sq support pull model produc queue messag consum pull messag queue sq provid messag visibl timeout messag process deliv consum consum delet messag process messag becom avail consum upon reach messag visibl timeout paramet call visibilitytimeout messag custom field attribut sq allow produc set minut delay messag deliv consum paramet call delaysecond two type queue support sq standard queue guarante least deliveri messag retain order deliveri messag fifo queue guarante deliveri messag guarante order deliveri messag sq support fine grain access variou api call queue via iam polici messag fail process put dead letter queue sq altern lockin altern sq includ kafka rabbitmq activemq other googl cloud platform pubsub azur azur queue servic sq vs sn sq tip sn use combin sq build fan mechan sq queue subscrib sn topic sq support encrypt use aw km cloudwatch alarm creat use variou sq metric trigger autosc action andor notif sq gotcha limit sq vpc endpoint unlik dynamodb sq need access use public sq api endpoint fifo queue limit api call per second fifo queue cannot subscrib sn topic standard queue deliv duplic messag regardless visibl window onlyonc deliveri choic use fifo queue build addit layer dedup messag sendrec messag batch howev maximum messag batch sn sn basic homepag document faq price sn simpl notif servic pubsub base highli scalabl fulli manag messag servic also use mobil notif sn push messag subscrib via sm email sq http transport protocol produc publish messag sn topic mani subscrib subscript associ protocol use notifi subscrib copi messag sent subscrib use associ protocol sn also invok lambda function sn altern lockin popular altern sn kafka notif hub azur pubsub googl cloud sn vs sq sn sq highli scalabl fulli manag messag servic provid aw sq support pull model sn support push model consum pull messag sq queue theyr push messag sn topic sq messag intend process one subscrib sn topic mani subscrib process sq messag delet queue subscrib avoid reprocess sn messag push subscrib topic time avail delet topic sn support multipl transport protocol deliveri messag subscrib sq subscrib pull messag queue http sn tip fanout architectur achiev multipl subscrib topic particularli use event fan multipl isol system sn topic use power webhook backoff support subscrib http sq queue subscrib sn topic sn use manag notif aw servic like autosc group notif cloudwatch alarm etc sn frequent use glue dispar system github aw servic sn gotcha limit http subscrib sn topic need public endpoint sn support call privat endpoint like privat subnet within vpc fanout scenario sseenabl sq subscrib sn topic receiv messag sent topic high avail section cover tip inform achiev high avail high avail tip aw offer two level redund region avail zone az use correctli region zone allow high avail may want use nonaw provid larger busi risk mitig ie tie compani one vendor reliabl aw across region high multipl region use multipl region complex sinc essenti like manag complet separ infrastructur necessari businesscrit servic highest level redund howev mani applic like averag consum startup deploy extens redund across region may overkil high scalabl blog good guid help understand need scale applic multipl region multipl az use az wise primari tool high avail typic singleregion high avail architectur would deploy two avail zone load balanc front aw diagram bulk outag aw servic affect one zone rare outag affect multipl zone simultan exampl great eb failur gener custom outag due use singl az infrastructur consequ design architectur minim impact az outag especi singlezon outag deploy key infrastructur across least two three az replic singl resourc across three zone often wont make sens backup mechan place like snapshot second third az significantli improv avail addit reliabl az may justifi cost complex unless reason like capac spot market price watch crossaz traffic cost unpleas surpris architectur larg volum traffic cross az boundari deploy instanc evenli across avail az minim fraction capac lost case az outag architectur singl point failur put singl az may seem counterintuit minim likelihood one spof go outag singl az eb vs instanc storag number year ebss poorer track record avail instanc storag system individu instanc kill restart easili instanc storag suffici redund could give higher avail overal eb improv modern instanc type sinc ebsonli approach help one time may increasingli archaic sure use understand clbsalb appropri mani outag due use load balanc misunderstand misconfigur high avail gotcha limit az name differ one custom account next uswesta anoth custom uswesta letter assign physic az randomli per account also gotcha multipl aw account note zone id consist account use reliabl align aw account crossaz traffic free larg scale cost add signific amount money possibl optim traffic stay within az much possibl bill cost manag bill cost visibl aw offer free tier servic allow limit usag resourc cost exampl micro instanc small amount storag avail charg mani servic elig free tier first twelv month account exist servic offer free usag tier indefinit old account start fresh sign new one qualifi free tier aw activ extend ten thousand dollar free credit startup certain fund acceler set bill alert notifi unexpect cost cost exceed free tier set granular way aw offer cost explor tool get better visibl cost unfortun aw consol bill tool rare enough give good visibl cost larg account aw bill consol time slow use tool enabl bill report instal open sourc tool help manag monitor aw resourc util teeviti ice origin written netflix probabl first one tri check dockeric docker version eas instal one challeng ice doesnt cover amort cost reserv instanc tool includ secur monkey cloud custodian use aw simpl monthli calcul get estim usag charg aw servic base certain inform provid monthli charg base actual usag aw servic may vari estim calcul provid thirdparti servic sever compani offer servic design help gain insight expens lower aw bill cloudabl cloudhealth technolog parkmycloud charg percentag bill may expens see market landscap awss trust advisor anoth servic help cost concern dont shi ask account manag guidanc reduc bill job keep happili use aw tag cost visibl infrastructur grow key part manag cost understand lie strongli advis tag resourc complex grow group effect set bill alloc appropri get visibl expens accord organ product individu engin way help need custom analysi raw bill data want feed third parti cost analysi servic enabl detail bill report featur multipl amazon account link bill purpos use consolid bill featur larg enterpris may need complex bill structur depend ownership approv process multipl amazon account manag central use aw organ aw data transfer cost deploy involv signific network traffic larg fraction aw expens around data transfer furthermor cost data transfer within az within region region aw internet vari significantli depend deploy choic common gotcha aztoaz traffic note ec traffic az effect region exampl deploy cassandra cluster across az help high avail hurt network cost use public ip necessari use elast ip public ip address ec instanc incur network cost even access local within az manag nat gateway data process manag nat gateway use let traffic egress privat subnetsat cost data process fee layer top data transfer price past certain point run nat instanc becom far cost effect servic crossaz traffic free mani aw servic youd consid merit offer hidden valu free crossaz data transfer ef rd msk other exampl figur give overview ec cost manag ec tradeoff engin effort analysi tool complex architectur spend rate aw ec cost small mani effort worth engin time requir make work know cost grow excess engin salari seriou invest often worthwhil larger instanc arent necessarili price higher spot market therefor look avail option determin instanc cost effect job see bid advisor spot instanc ec spot instanc way get ec resourc signific discount often mani time cheaper standard ondemand price your will accept possibl termin littl warn use spot instanc potenti signific discount whenev use resourc may restart dont maintain longterm state huge save get spot come cost signific increas complex provis reason avail comput capac amazon maintain spot price marketdriven fluctuat level base inventori unus capac price typic low spike high see price histori get sens set bid price high indic high your will pay pay go rate bid rate market rate exce bid instanc may termin price per instanc type per avail zone instanc type may wildli differ price differ zone time differ instanc type differ price even similarli power instanc type zone compar price across instanc type better deal use spot instanc whenev possibl set high bid price assur machin stay vast major time fraction price normal instanc get notifi two minut pricetrigg shutdown poll spot instanc metadata watch termin cloudwatch event make sure usag profil work well spot invest heavili tool manag particular configur spot fleet realiz even bigger cost reduct time improv fleet stabil rel regular spot usag use spot fleet bid instanc across instanc type avail zone multipl spot fleet request region spot fleet target maintain specifi weightedbyinstancetyp total capac across cluster server spot price one instanc type avail zone combin rise weight bid rotat run instanc bring new one anoth type locat order maintain target capac without go target cluster cost spot usag best practic applic profil profil applic figur runtim characterist would help give understand minimum cpu memori disk requir inform critic tri optim spot cost know minimum applic requir instead resort fix instanc type bid across varieti instanc type give higher chanc get spot instanc run applicationeg know cpu core enough job choos instanc type equal core least spot price base histori help bid instanc greater discount less demand point spot price monitor intellig spot instanc price fluctuat depend instanc type time day region avail zone aw cli tool api allow describ spot price metadata given time instanc type regionaz base histori spot instanc price could potenti build myriad algorithm would help pick instanc type way optim cost maxim avail offer predict perform also track number time instanc certain type got taken away bid plot graphit improv algorithm base time day spot machin resourc util run spiki workload spark map reduc job schedul base failur non critic spot instanc becom perfect candid time take satisfi spot instanc could vari min depend type instanc avail machin az run infrastructur hundr job spiki natur advis start pool instanc optim cost perform importantli time acquir instanc pool impli creat maintain spot instanc get termin use promot reus spot instanc across job cours come overhead lifecycl manag pool set metric track optim resourc util effici cost typic pool implement give anywher cost optim reduct spot instanc creation time excel exampl pool implement describ netflix part part spot manag gotcha lifetim guarante lifetim spot instanc pure base bid anyon outbid price instanc taken away spot suitabl time sensit job strong sla instanc fail base demand spot time aw provid twominut warn amazon ec must termin spot instanc api return data spot price api return spot price vari granular depend time rang specifi api calleg last min worth histori request data fine grain last day worth histori request data coarser assum get data point skip interv lifecycl manag attempt fanci spot manag unless absolut necessari entir usag machin cost accept failur rate lower attempt optim pain buildingmaintain worth hundr dollar save reserv instanc allow get signific discount ec comput hour return commit pay instanc hour specif instanc type specif aw region avail zone preestablish time frame year discount realiz partial upfront payment option consid use reserv instanc predict longerterm comput need need stronger guarante comput avail continu typic cheaper spot market provid howev awar architectur chang comput need may chang well long term contract seem attract may turn cumbersom two type reserv instanc standard convert purchas excess standard reserv instanc may offer sell back unus reserv instanc via reserv instanc marketplac allow potenti recoup cost unus ec comput instanc hour sell aw custom instanc reserv tie specif ec instanc appli bill level elig comput hour consum across instanc account scatter report convert ri purchas need exercis block name buy five convert ri one purchas cant convert two reach account manag clarif may impact multipl aw account configur roll charg one account use consolid bill featur expect unus reserv instanc hour one account appli match region avail zone instanc type comput hour anoth account multipl aw account link consolid bill plan use reserv want unus reserv capac abl appli comput hour account youll need creat instanc avail zone name across account keep mind done instanc may end physic data center across account amazon shuffl avail zone name across account order equal resourc util make use dynam auto scale possibl order better match cluster size cost current resourc requir servic use rhel instanc happen exist rhel onpremis red hat subscript leverag red hat cloud access program migrat portion onpremis subscript aw therebi save aw charg rhel subscript either use selfcreat rhel ami red hat provid gold imag ad privat ami sign red hat cloud access read section cover unusu use must know resourc list aw aw plain english readabl overview aw servic awesom aw curat list aw tool softwar aw tip wish id known start list tip rich adam aw whitepap list technic aw whitepap cover topic architectur secur econom last week aw weekli email newslett cover latest happen aw ecosystem aw geek blog aw commun hero jerri hargrov note handdrawn diagram variou aw servic book amazon web servic action aw lambda action serverless architectur aw serverless singl page app terraform book aw script book seri amazon web servic dummi aw system administr python aw cookbook resili reliabl aw aw document kindl ebook gener refer aw well architect framework guid amazon page guid oper excel guidelin checklist valid baselin secur reliabl perform includ high avail cost optim practic awesom microservic curat list tool technolog microservic architectur worth brows learn popular open sourc project fast yet ilya grigorik tl perform overview high perform browser network full modern book web network perform present http portion disclaim author contributor content cannot guarante valid inform found pleas make sure understand inform provid provid freeli kind agreement contract creat person associ content project author contributor assum herebi disclaim liabil parti loss damag disrupt caus error omiss inform contain associ link content whether error omiss result neglig accid caus licens work licens creativ common attributionsharealik intern licens,open guide amazon web service join u credit contributing guideline table content purpose open guide scope legend aws general general information learning career development managing aws managing server application specific aws service basic tip gotchas alb amis api gateway auto scaling batch certificate manager clb elb cloudfront cloudformation cloudwatch device farm directconnect dynamodb eb ec ec eks efs elastic beanstalk elastic ip elasticache emr fargate glacier iot kinesis firehose kinesis stream km lambda load balancer mobile hub opsworks rds rds aurora rds aurora mysql rds aurora postgresql rds mysql mariadb rds postgresql rds sql server redshift route security iam s sn sqs step function waf vpcs network security security group special topic high availability billing cost management reading legal disclaimer license figure table figure tool service market landscape selection thirdparty companiesproducts figure aws data transfer cost visual overview data transfer cost table service matrix aws service compare alternative table aws product maturity release aws product release table storage durability availability price quantitative comparison open guide lot information aws already written people learn aws reading blog getting started guide referring standard aws reference nonetheless trustworthy practical information recommendation arent easy come awss documentation great sprawling resource time read fully doesnt include anything official fact omits experience engineer information blog stack overflow also consistently date guide engineer use aws aim useful living reference consolidates link tip gotchas best practice arose discussion editing beer several engineer used aws extensively using guide please read license disclaimer please help early inprogress draft first attempt assembling information far comprehensive still likely omission error please help joining slack channel like talk aws general even question discussion help community guide improvement contributing guide guide open contribution unlike blog keep improving like open source effort combine effort also review ensure high quality scope currently guide cover selected core service ec load balancer eb iam partial detail tip around service expect expand tutorial rather collection information read return beginner experienced goal guide brief keep dense use link practical basic fact concrete detail advice gotchas folk knowledge current keep updating anyone contribute improvement thoughtful goal helpful rather present dry fact thoughtful opinion rationale welcome suggestion note opinion based real experience extremely valuable believe possible guide format unlike venue guide sponsored aws awsaffiliated vendor written engineer use aws legend mark standardofficial aws page doc important often overlooked tip serious gotcha used risk time resource cost significant critical security risk mistake significant financial cost poor architectural choice fundamentally difficult correct regular gotcha limitation quirk used consequence thing working breaking scaling gracefully undocumented feature folklore relatively new perhaps immature service feature performance discussion lockin product decision likely tie aws new significant way later moving nonaws alternative would costly term engineering effort alternative nonaws option cost issue discussion gotchas mild warning attached full solution opinionated framework may take significant time understand andor might fit need exactly opposite point solution cathedral nod raymonds metaphor color indicate basic tip gotchas respectively area correction improvement needed possibly link issue help general information use aws aws dominant public cloud computing provider general cloud computing refer one three type cloud public private hybrid aws public cloud provider since anyone use private cloud within single usually large organization many company use hybrid private public cloud core feature aws infrastructureasaservice iaa virtual machine supporting infrastructure cloud service model include platformasaservice paas typically fully managed service deploy customer application softwareasaservice saas cloudbased application aws offer product fit model business term infrastructureasaservice variable cost model opex capex though prepurchased contract still capex awss ttm revenue billion q according earnings result slide linked deck roughly amazoncoms total revenue slide deck ttm period main reason use aws company building system product may need scale technical knowhow want flexible tool youre significantly tied different infrastructure already dont internal regulatory compliance reason cant use public cloudbased solution youre microsoftfirst tech stack dont specific reason use google cloud afford manage negotiate somewhat higher cost aws likely good option company reason might point situation service preferable practice many tech startup well number modern large company already benefit using aws many large enterprise partly migrating internal infrastructure azure google cloud aws cost billing cost management big topic entire section ec v service user aws familiar ec aws flagship virtual server product possibly others like clbs aws product extend far beyond basic iaa often company properly understand appreciate many aws service applied due sharply growing number service novelty complexity branding confusion fear lockin proprietary aws technology although bit daunting important technical decisionmakers company understand breadth aws service make informed decision hope guide help aws v cloud provider aws dominant iaa provider market share estimate significant competition alternative better suited company gartner report good overview major cloud player google cloud platform gcp arrived later market aws vast resource used widely many company including large one gaining market share aws service similar analogous service gcp vice versa particular gcp offer advanced machine learningbased service like vision speech natural language apis common switch youre running happen spotify migrated aws google cloud discussion quora relative benefit particular note vpcs gcp global default subnetworks per region aws vpcs live within particular region give gcp edge youre designing application georeplication beginning also possible share one gcp vpc multiple project roughly analogous aws account aws youd peer also possible peer gcp vpcs similar manner done aws microsoft azure de facto choice company team focused microsoft stack placed significant emphasis linux well china aws footprint relatively small market dominated alibabas alibaba cloud formerly called aliyun company large scale may want reduce cost managing infrastructure example dropbox migrated infrastructure cloud provider digital ocean offer similar service sometimes greater ease use personalized support lower cost however none match breadth product mindshare market domination aws enjoys traditional managed hosting provider rackspace offer cloud solution well aws v paas goal put single service something relatively simple youre trying minimize time managing operation engineering consider platformasaservice heroku aws approach paas elastic beanstalk arguably complex especially simple use case aws v web hosting main goal host website blog dont expect building app complex service may wish consider one myriad web hosting service aws v managed hosting traditionally many company pay managed hosting provider maintain physical server build deploy software top rented hardware make sense business want direct control hardware due legacy performance special compliance constraint usually considered old fashioned unnecessary many developercentric startup younger tech company complexity aws let build scale system size largest company complexity service used scale requires significant depth knowledge experience even simple use case often require knowledge right aws simpler environment like heroku digital ocean guide may help geographic location aws data center dozen geographic location known region europe east asia north south america australia india also many edge location globally reduced latency service like cloudfront see current list region edge location including upcoming one infrastructure need close physical proximity another service latency throughput reason example latency ad exchange viability aws may depend location lockin use aws important aware depending aws service equivalent elsewhere lockin may completely fine company significant risk important business perspective make choice explicitly consider cost operational business continuity competitive risk tied aws aws dominant reliable vendor many company comfortable using aws full extent others tell story danger cloud jail cost spiral generally aws service use lockin aws engineering resource time money take change provider future basic service like virtual server standard database usually easy migrate provider premise others like load balancer iam specific aws close equivalent provider key thing consider whether engineer architecting system around specific aws service open source relatively interchangeable example lambda api gateway kinesis redshift dynamodb substantially equivalent open source commercial service equivalent ec rds mysql postgres emr elasticache le see noted combining aws cloud provider many customer combine aws nonaws service example legacy system secure data might managed hosting provider system aws company might use another provider everything else however small startup project starting fresh typically stick aws google cloud hybrid cloud larger enterprise common hybrid deployment encompassing private cloud onpremises server aws enterprise cloud provider like ibmbluemix microsoftazure netapp emc major customer us aws google cloud awss list customer includes large number mainstream online property major brand netflix pinterest spotify moving google cloud airbnb expedia yelp zynga comcast nokia bristolmyers squibb azure list customer includes company nbc universal honeywell inc google cloud list customer large well includes mainstream site snapchat best buy domino sony music service use aws offer lot different service hundred last count customer use service heavily service lightly rest service youll use depends use case choice differ substantially company company immature unpopular service aws service sound promising doesnt mean use service narrow use case mature overly opinionated limitation building solution may better try give sense breaking product category mustknow infrastructure typical small mediumsize user focus following service first manage use aws system likely need know least little even dont use learn enough make choice intelligently iam user account identity need think account early ec virtual server associated component including amis machine image load balancer clbs alb autoscaling capacity scaling adding removing server based load eb networkattached disk elastic ip assigned ip address storage file route dns domain registration vpc virtual networking network security colocation automatically use cloudfront cdn hosting content cloudwatch alert paging monitoring managed service existing software solution could run managed deployment rds managed relational database managed mysql postgres amazon aurora database emr managed hadoop elasticsearch managed elasticsearch elasticache managed redis memcached optional important infrastructure key useful infrastructure component le widely known used may legitimate reason prefer alternative evaluate care sure fit need lambda running small fully managed task serverless cloudtrail aws api logging audit often neglected important cloudformation templatized configuration collection aws resource elastic beanstalk fully managed paas deployment packaged java net php nodejs python ruby go docker application efs network filesystem compatible nfsv ec docker containercluster management note docker also used directly without ec eks kubernetes k docker containercluster management ecr hosted private docker registry config aws configuration inventory history change notification xray trace analysis debugging distributed application microservices specialpurpose infrastructure service focused specific use case evaluated apply situation many also proprietary architecture tend tie aws dynamodb lowlatency nosql keyvalue store glacier slow cheap alternative kinesis streaming distributed log service sqs message queueing service redshift data warehouse quicksight business intelligence service s send receive email marketing transaction api gateway proxy manage secure api call iot manage bidirectional communication http websockets mqtt aws client often necessarily thing like appliance sensor waf web firewall cloudfront deflect attack km store manage encryption key securely inspector security audit trusted advisor automated tip reducing cost making improvement certificate manager manage ssltls certificate aws service fargate docker container management backend ec eks compound service similarly specific fullblown service tackle complex problem may tie usefulness depends requirement large significant need may already managed inhouse system engineering team machine learning machine learning model training classification lex automatic speech recognition asr natural language understanding nlu polly texttospeech engine cloud rekognition service image recognition data pipeline managed etl service swf managed state tracker distributed polyglot job workflow lumberyard game engine mobileapp development sn manage app push notification enduser notification cognito user authentication via facebook twitter etc device farm cloudbased device testing mobile analytics analytics solution app usage mobile hub comprehensive managed mobile app framework enterprise service relevant significant corporate cloudbased hybrid need many smaller company startup use solution like google apps box larger company may also nonaws solution appstream window apps cloud access many device workspace window desktop cloud access many device workdocs formerly zocalo enterprise document sharing workmail enterprise managed email calendaring service directory service microsoft active directory cloud direct connect dedicated network connection office data center aws storage gateway bridge onpremises cloud storage service catalog service approval compliance probablydontneedtoknow service bottom line informal polling indicates service broadly used often good reason snowball want ship petabyte data amazon using physical appliance read snowmobile appliance great youve got exabyte scale data get amazon nothing beat tractor trailer full drive codecommit git service youre probably already using github solution stackshare informal stats codepipeline continuous integration likely another solution already codedeploy deployment code ec server likely another solution opsworks management deployment using chef november puppet enterprise aws plain english offer friendly explanation different service tool service market landscape enough cloud big data enterprise company product keep market landscape weve assembled landscape service far complete try emphasize service popular aws practitioner service specifically help aws complementary tool almost anyone using aws must learn suggestion improve figure please file issue common concept aws general reference cover bunch common concept relevant multiple service aws allows deployment region isolated geographic location help reduce latency offer additional redundancy region contain availability zonesazs typically first tool choice high availability az physically separate one another even within region may span multiple physical data center connected via low latency link natural disaster afflicting one affect others service api endpoint region endpoint differ service service service available region listed table amazon resource name arns specially formatted identifier identifying resource start arn used many service particular iam policy service matrix many service within aws least compared google cloud offering internal google service often time could assemble thing open source software table effort listing rough correspondence remember table imperfect almost every case subtle difference feature service aws google cloud google internal microsoft azure provider open source build openstack virtual server ec compute engine gce virtual machine digitalocean openstack nova paas elastic beanstalk app engine app engine web apps heroku appfog openshift meteor appscale cloud foundry convox serverless microservices lambda api gateway function function apps pubnub block auth webtask kong tyk qinling container cluster manager ec eks fargate container engine kubernetes borg omega container service kubernetes mesos aurora zun object storage cloud storage gfs storage account digitalocean space swift hdfs minio swift block storage eb persistent disk storage account digitalocean volume nfs cinder sql datastore rds cloud sql sql database mysql postgresql trove store nosql well sharded rdbms cloud spanner f spanner azure database postgresql hyperscale citus crateio cockroachdb bigtable cloud bigtable bigtable hbase keyvalue store column store dynamodb cloud datastore megastore table documentdb cassandra couchdb rethinkdb redis memory cache elasticache app engine memcache redis cache memcached redis search cloudsearch elasticsearch managed search algolia qbox elastic cloud elasticsearch solr data warehouse redshift bigquery dremel sql data warehouse oracle ibm sap hp many others greenplum business intelligence quicksight data studio power bi tableau lock manager dynamodb weak chubby lease blob storage account zookeeper etcd consul message broker sqs sn iot pubsub pubsub service bus rabbitmq kafka mq streaming distributed log kinesis dataflow pubsub event hub kafka stream apex flink spark streaming storm mapreduce emr dataproc mapreduce hdinsight datalake analytics qubole hadoop monitoring cloudwatch stackdriver monitoring borgmon monitor prometheus tracing xray stackdriver trace monitor application insight datadog new relic epsagon zipkin jaeger appdash metric management borgmon tsdb application insight graphite influxdb opentsdb grafana riemann prometheus cdn cloudfront cloud cdn cdn akamai fastly cloudflare limelight network apache traffic server load balancer clbalb load balancing gfe load balancer application gateway nginx haproxy apache traffic server dns route dns dns bind email s sendgrid mandrill postmark git hosting codecommit cloud source repository visual studio team service github bitbucket gitlab user authentication cognito firebase authentication azure active directory oauthio mobile app analytics mobile analytics firebase analytics hockeyapp mixpanel mobile app testing device farm firebase test lab xamarin test cloud browserstack sauce lab testdroid managing ssltls certificate certificate manager let encrypt comodo symantec globalsign automatic speech recognition natural language understanding transcribe asr lex nlu cloud speech api natural language api cognitive service aylien text analysis api ambiverse natural language understanding api stanford core nlp suite apache opennlp apache uima spacy texttospeech engine cloud polly nuance vocalware ibm mimic espeak marytts image recognition rekognition vision api cognitive service ibm watson clarifai tensorflow opencv ocr text recognition textract document rekognition photograph cloud vision api computer vision api tesseract language translation translate translate translator text api apertium file share sync workdocs google doc onedrive dropbox box citrix file share owncloud machine learning sagemaker deeplens ml ml engine auto ml ml studio watson ml data loss prevention macie cloud data loss prevention azure information protection please help fill table selected resource detail chart google internal mapreduce bigtable spanner f v spanner bigtable v megastore aws product maturity release important know maturity aws product mostly complete list first release date link release note recently released service first service available region see table service original release availability cli support hipaa compliant pcidss compliant xray general lex preview polly general rekognition general athena general batch general database migration service general certificate manager general iot general waf general data pipeline general elasticsearch general aurora general service catalog general device farm general codepipeline general codecommit general api gateway general config general efs general machine learning general lambda general ec general eks general km general codedeploy general kinesis general cloudtrail general appstream preview cloudhsm general silk obsolete opsworks general redshift general elastic transcoder general glacier general cloudsearch general swf general storage gateway general dynamodb general directconnect general elasticache general cloudformation general s general elastic beanstalk general route general iam general sn general emr general rds general vpc general snowball general snowmobile general cloudwatch general cloudfront general fulfillment web service obsolete simpledb nearly obsolete devpay general flexible payment service retired ec general sqs general general alexa top site general httponly alexa web information service general httponly footnote excludes use amazon api gateway caching rds mysql oracle postgresql engine mysqlcompatible aurora edition excludes lambdaedge includes ec system manager includes elastic block storage eb includes elastic load balancing includes transfer acceleration includes rds mysql oracle postgresql sql server mariadb includes autoscaling data analytics stream video stream firehose kubernetes us custom cli podservice management called kubectl aws cli handle kubernetes master concern iot core includes device management greengrass elasticache redis snowball snowball edge compliance many application strict requirement around reliability security data privacy aws compliance page detail awss certification include pci ds level soc hipaa iso security cloud complex topic based shared responsibility model element compliance provided aws provided company several thirdparty vendor offer assistance compliance security auditing aws substantial need area assistance good idea inside china aws service outside china generally accessible though time breakage service also aws service inside china getting help support forum many problem worth searching asking help discussion forum see known issue premium support aws offer several level premium support first tier called developer support let file support ticket hour turnaround time start monthly spend reach around change surcharge bill higherlevel support service quite expensive increase bill many large effective company never pay level support usually helpful midsize larger company needing rapid turnaround deeper perplexing problem keep mind flexible architecture reduce need support shouldnt relying aws solve problem often example easily reprovision new server may urgent solve rare kernellevel issue unique one ec instance eb volume recent snapshot may able restore volume support rectify issue old volume service issue one availability zone case able rely redundant zone migrate service another zone larger customer also get access aws enterprise support dedicated technical account manager tam shorter response time slas definitely controversy useful paid support support staff dont always seem information authority solve problem brought attention often ability problem solved may depend relationship account rep account manager significant level spend thousand u dollar plus per month may assigned may wish ask dedicated account manager great resource even youre paying premium support build good relationship make use question problem guidance assign single point contact company side avoid confusing overwhelming contact main web contact point aws many technical request made via channel consulting managed service handson assistance aws established relationship many consulting partner managed service partner big consultant wont cheap depending need may save cost long term helping set architecture effectively offering specific expertise eg security managed service provider provide longerterm fullservice management cloud resource aws professional service aws provides consulting service alone combination partner restriction note lot resource amazon limit actually helpful dont incur large cost accidentally request quota increased opening support ticket limit easy raise noted section additionally service limit published obtaining current limit usage limit information service may available service api trusted advisor neither case youll need contact support page awslimitchecker tool documentation provides nice summary available retrieval option limit tool also valuable automating limit check aws term service extensive much expected boilerplate contain important note restriction service particular restriction using many aws service safetycritical system appreciative legal humor may wish review clause related topic openstack private cloud alternative aws used large company wish avoid public cloud offering learning career development certification certification aws offer certification professional want demonstrate knowledge certified cloud practitioner certified solution architect associate certified developer associate certified sysops administrator associate certified solution architect professional certified devops engineer professional certified security specialty certified big data specialty certified advanced networking specialty certified machine learning specialty certified alexa skill builder specialty associate level certification required prerequisite taking professional examination longer case getting certified youre interested studying getting certification practical overview tell lot need know official page faq training certification training offered aws mainly instructorled onsite various thirdparty company usually videobased training cloud guru cloudacademy linux academy need certification especially consulting company working key tech role large nontech company certification important credential others including many tech company startup certification common considered necessary fact fairly silicon valley hiring manager engineer see negative signal resume certification required access certificate lounge official aws event summit reinvent lounge typically provide power charging point seat relatively better coffee managing aws managing infrastructure state change great challenge using aws build complex system devops general manage infrastructure state effectively time general boil three broad goal state infrastructure visibility know state infrastructure service using exactly also know anyone team make change detect misconfigurations problem incident service automation reconfigure infrastructure reproduce past configuration scale existing one without lot extra manual work requiring knowledge thats someone head respond incident easily automatically flexibility improve configuration scale new way without significant effort add complexity using tool share review improve configuration within team much discus really improve answer question several approach deploying infrastructure aws console complex automation tool thirdparty service attempt help achieve visibility automation flexibility aws configuration management first way people experiment aws via web interface aws console using console highly manual process often work automation flexibility youre going manage aws configuration manually sadly simple universal answer approach pro con approach taken different company vary widely include directly using apis building tooling top using commandline tool using thirdparty tool service aws console aws console let control much functionality aws via web interface ideally use aws console specific situation great readonly usage youre trying understand state system logging browsing helpful also reasonably workable small system team example one engineer setting one server doesnt change often useful operation youre going rarely like le month example onetime vpc setup probably wont revisit year case using console simplest approach think use console aws console convenient also enemy automation reproducibility team communication youre likely making change multiple time avoid console favor sort automation least path toward automation discussed next using console preclude automation waste time later prevents documentation clarity standardization around process team commandline tool aws commandline interface cli used via aws command basic way save automate aws operation dont underestimate power also advantage wellmaintained cover large proportion aws service date general whenever prefer command line aws console performing operation even absence fancier tool write simple bash script invoke aws specific argument check git primitive effective way document operation youve performed improves automation allows code review sharing team give others starting point future work use primarily interactive scripted consider instead using awsshell tool aws easier use autocompletion colorful ui still work command line youre using saw previous version program migrate awsshell apis sdks sdks using aws apis available major language go io java javascript python ruby php heavily used aws maintains short list awesomeaws list comprehensive current note support c still new retry logic important aspect consider whenever using sdks error handling heavy use wide variety failure programming error throttling awsrelated outage failure expected occur sdks typically implement exponential backoff address may need understood adjusted time application example often helpful alert error code others dont use apis directly although aws documentation includes lot api detail better use sdks preferred language access apis sdks mature robust wellmaintained something youd write boto good way automate operation custom way boto also known amazon sdk python boto previous version library wide use year newer version official support amazon prefer boto new project boto contains variety apis operate either high level low level explanation low level apis client apis mapped aws cloud servicespecific apis service operation supported client client generated json service definition file high level option resource apis allows avoid calling network low level instead provide objectoriented way interact aws cloud service boto lot helpful feature like waiter provide structure allows code wait change occur cloud example creating ec instance need wait instance running order perform another task find writing bash script one two cli command youre probably wrong stop consider writing boto script instead advantage check return code easily success step depends success past step grab interesting bit data response like instance id dns name add useful environment information example tag instance git revision inject latest build identifier initialization script general visibility tagging resource essential practice especially organization grow better understand resource usage example automation convention add tag org developer owns resource product resource support label lifecycles temporary resource one deprovisioned future distinguish productioncritical infrastructure eg serving system v backend pipeline distinguish resource special security compliance requirement enabled allocate cost note cost allocation tag apply forwardlooking basis cant retroactively apply item already billed many year notorious tag limit per resource could raised caused many company significant pain raised tag per resource aws introduced ability enforce tagging instance volume creation deprecating portion third party tool cloud custodian tag case sensitive environment environment two different tag automation setting tag likely sensible option significant scale bug asg console space tag name preserved type name space end get expected behavior probably true location sdks also sure add trailing space tag key unless really mean jul managing server application aws v server configuration guide aws devops server configuration management general getting aws detail worth noting addition configuration management aws resource longstanding problem configuration management server philosophy herokus twelvefactor app principle list established general best practice deploying application pet v cattle treat server like cattle pet design system infrastructure disposable minimally worrisome server unexpectedly destroyed concept immutable infrastructure extension idea minimize application state ec instance general instance able killed die unexpectedly minimal impact state application quickly move rds dynamodb efs data store instance eb also option though generally bootable volume eb require manual automated remounting server configuration management large set open source tool managing configuration server instance generally dependent particular cloud infrastructure work variety linux many case variety operating system leading configuration management tool puppet chef ansible saltstack arent focus guide may mention relate aws container aws docker containerization trend changing way many server service deployed general container designed way package application dependency known way build container including every library binary application need outside kernel big advantage approach easy test validate container locally without worrying difference computer server deploy consequence need fewer amis boot script deployment boot script need template fetch exported docker image run company embracing microservice architecture often turn containerbased deployment aws launched ec service manage cluster via docker late though many people still deploy docker directly see ec section detail aws launched eks service manage kubernetes cluster mid though many people still deploy ec use docker directly see eks section detail visibility store track instance metadata instance id availability zone etc deployment info application build id git revision etc log report instance metadata service help collect aws data youll need use log management service sure set way view manage log externally server cloudbased service sumo logic splunk cloud scalyr logdna loggly easiest set use also expensive may factor depending much log data major open source alternative include elasticsearch logstash kibana elastic stack graylog afford little data lot money dont special need make sense use hosted service whenever possible since setting scalable log processing system notoriously time consuming track graph metric aws console show simple graph cloudwatch typically want track graph many kind metric cloudwatch application collect export helpful metric everywhere long volume manageable enough afford service like librato keenio datadog fancier feature better user interface save lot time detailed comparison use prometheus graphite timeseries database metric open source grafana visualize dashboard stored metric timeseries database also open source tip managing server timezone setting server unless absolutely necessary always set timezone server utc see instruction distribution ubuntu centos amazon linux numerous distributed system rely time synchronization coordination utc provides universal reference plane subject daylight saving change adjustment local time also save lot headache debugging elusive timezone issue provide coherent timeline event logging audit system ntp accurate time using amazon linux come preconfigured confirm server configure ntp correctly avoid insidious time drift cause sort issue breaking api call misleading log part automatic configuration every server time already drifted substantially generally second remember ntp wont shift back may need remediate manually example like ubuntu testing immutable infrastructure want proactive testing service ability cope instance termination failure helpful introduce random instance termination business hour expose issue time engineer available identify fix netflixs simian army specifically chaos monkey popular tool alternatively chaoslambda bbc lightweight option run aws lambda security iam cover security basic first since configuring user account something usually early setting system security iam basic iam homepage user guide faq aws security blog one best source news information aws security iam service use manage account permissioning aws managing security access control aws critical every aws administrator need use understand iam least basic level iam identity include user people service using aws group container set user permission role container permission assigned aws service instance permission identity governed policy use aws predefined policy custom policy create iam manages various kind authentication user software service may need authenticate aws including password log console username password real user access key may use commandline tool two string one id uppercase alphabetic string form axxxxxxxxxxxxxxxxxxx secret character mixedcase basestyle string often set service user access key start akia normal key access key start asia sessiontemporary key sts require additional sessiontoken parameter sent along id secret see documentation complete list access key prefix multifactor authentication mfa highly recommended practice using keychain fob smartphone app second layer protection user authentication iam allows complex finegrained control permission dividing user group assigning permission role policy language used customize security policy finegrained way excellent high level overview iam policy concept life iam policy nutshell policy language complex errorprone json syntax thats quite confusing unless expert wise base trusted example aws predefined managed policy beginning iam policy may simple large system grow complexity need managed care make sure one person perhaps backup organization formally assigned ownership managing iam policy make sure every administrator work person change reviewed go long way avoiding accidental serious misconfigurations best give user service minimum privilege needed perform duty principle least privilege one foundation good security organize iam user group according level access need iam permission hierarchy explicit deny restrictive policy win explicit allow access permission resource explicitly given implicit deny permission implicitly denied default test policy permission via aws iam policy simulator tool tool particularly useful write custom policy security iam tip use iam create individual user account use iam account user beginning slightly work much way define different user group different level privilege want choose amazon default suggestion administrator power user etc allows credential revocation critical situation employee leaf key compromised revoke credential little effort set active directory federation use organizational account aws enable mfa account always use mfa sooner better enabling already many user extra work unfortunately cant enforced software administrative policy established user use google authenticator app io android support twofactor authentication root account consider hardware fob restrict use significant iam credential much possible remember cloud loss highly capable iam credential could essentially mean game deployment user whole company use root user account initially create account create custom iam user andor role use application instead lock access use root credential much possible ideally effectively offline critical deployment mean attached actual mfa device physically secured rarely used turn cloudtrail one first thing enable cloudtrail even security hawk little reason beginning data happening aws account need information youll likely also want set log management service search access log use iam role ec rather assign iam user application like service sharing sensitive credential define assign role ec instance application retrieve credential instance metadata assign iam role realm example development staging production youre setting role tied specific realm clean separation prevents example development instance connecting production database best practice aws list best practice worth reading full front iam reference interactive reference iam action effect resource great open writing new trying understand existing iam policy multiple account decide whether want use multiple aws account research organize access across factor consider number user importance isolation resource limit permission granularity security api limit regulatory issue workload size infrastructure cost multiaccount overhead internal aws service management tool may need custom built adapted help use separate aws account independent part infrastructure expect high rate aws api call since aws throttle call aws account level inspector automated security assessment service aws help identify common security risk allows validation adhere certain security practice may help compliance trusted advisor address variety best practice also offer basic security check around iam usage security group configuration mfa paid support tier trusted advisor expose additional check around area reserved instance optimization use km managing key aws offer km securely managing encryption key usually far better option handling key security see aws waf web application firewall help protect application common attack pattern security auditing security monkey open source tool designed assist security audit scout open source tool us aws apis ass environment security posture scout stable actively maintained export audit security setting audit security policy simply exporting setting using aws apis eg using boto script like secconfigpy talk reviewing monitoring change manually automatically security iam gotchas limitation dont share user credential remarkably common firsttime aws user create one account one set credential access key password use sharing among engineer others within company easy dont insecure practice many reason particular reduced ability revoke credential peruser perservice basis example employee leaf key compromised lead serious complication instance metadata throttling instance metadata service rate limiting api call deploy iam role widely lot service may hit global account limit easily one solution code script cache reuse credential locally short period say minute example put awscredentials file must also refreshed automatically careful cache credential long expire note dynamic metadata also change time cached long time either iam operation slower api call many second since aws need propagate globally across region uptime iams api historically lower instance metadata api wary incorporating dependency iams api critical path subsystem example validate user iam group membership log instance arent careful precaching group membership maintaining back door might end locking user altogether api isnt available dont check aws credential secret git repository bot scan github looking credential use script tool gitsecrets prevent anyone team checking sensitive information git repository basic homepage developer guide faq pricing simple storage service aws standard cloud storage service offering file opaque blob storage arbitrary number file almost size tb prior maximum size gb larger size well supported via multipart support item object placed named bucket stored name usually called key main content value object created deleted updated large object streamed cannot modify part value need update whole object partial data access work via select every object also metadata includes arbitrary keyvalue pair used way similar http header metadata systemdefined significant serving http content bucket cloudfront also define arbitrary metadata use uris although often bucket key name provided apis individually also common practice write location form sbucketnamepathtokey key pathtokey youll also see sn sa prefix hadoop system v glacier eb efs aws offer many storage service several besides offer filetype abstraction glacier cheaper infrequently accessed archival storage eb unlike allows random access file content via traditional filesystem attached one ec instance time efs network filesystem many instance connect higher cost see comparison table tip practical purpose consider capacity unlimited total size file number object number object bucket essentially also unlimited customer routinely million object permission youre storing business data amazon important manage permission sensibly company like dow jones verizon saw data breach due poorlychosen configuration sensitive data fixing later difficult task lot asset internal user different way grant permission access amazon content bucket iam policy use familiar identity authentication management permission scheme control access specific operation bucket policy grant deny permission entire bucket might use hosting website make bucket publicly readable restrict access bucket ip address amazon sample bucket policy show number use case policy come handy access control list acls also applied every bucket object stored acls grant additional permission beyond specified iam bucket policy acls used grant access another aws user predefined group like general public powerful dangerous need inspect every object see access aws predefined access control group allow access may youd expect name user everyone grant permission general public user defined aws account object available user retrieved simple http request form httpsamazonawscombucketnamefilename authorization signature required access data category authenticated user grant permission anyone aws account limited user anyone sign aws intent purpose also open general public log delivery group used aws write log bucket safe enable bucket need typical use case acl used conjunction requester pay functionality bucket permission object permission two different thing independent private object public bucket seen listing bucket downloaded time public object private bucket wont seen bucket content cant listed still downloaded anyone know exact key user dont access set bucket permission still make object public sputobjectacl sputobjectversionacl permission august aws added aws config rule ensure bucket secure aws config rule check security bucket policy bucketlevel acls still create object acls grant additional permission including opening file whole world create new bucket different type data different sensitivity level much le error prone complex permission rule example data administrator like log data put new bucket administrator access guidance see secure amazon bucket deep dive access control permission work bucket naming bucket chosen global namespace across region even though store data whichever region select youll find many bucket name already taken creating bucket mean taking ownership name delete bucket name restriction bucket name used part hostname accessing bucket content like bucketnamesuseastamazonawscom long name dns compliant common practice use company name acronym abbreviation prefix suffix prefer dnsstyle hierarchy bucket name please dont use check security measure highly insecure easily circumvented bucket name period cause certificate mismatch used ssl use instead since conforms ssl expectation dns compliant versioning optional versioning support version object preserved bucket mostly useful want archive change ability back mistake caution lack featureset full version control system like git durability durability extremely high since internally keep several replica dont delete accident count losing data aws offer seemingly improbable durability rate mathematical calculation based independent failure rate level replication true probability estimate either way good record durability note much higher durability eb pricing depends storage request transfer transfer putting data aws free youll pay way transfer ec region free transfer region internet general free deletes free reduced redundancy infrequent access people use standard storage class storage class lower cost reduced redundancy storage rrs effectively deprecated lower durability four nine standard note longer participates price reduction offer worse redundancy money standard result there reason use infrequent access ia let get cheaper storage exchange expensive access great archive like log already processed might want look later get idea cost saving using infrequent access ia use infrequent access calculator intelligent tiering storage class designed optimize cost automatically moving data costeffective access tier without performance impact operational overhead one zone ia data accessed le frequently requires rapid access needed unlike storage class store data minimum three availability zone az one zoneia store data single az cost le standardia glacier third alternative discussed separate product see comparison table performance maximizing performance mean improving overall throughput term bandwidth number operation per second highly scalable principle get arbitrarily high throughput good example sdistcp usually constrained pipe source andor level concurrency operation throughput course highest within aws ec instance bucket region bandwidth ec depends instance type see network performance column ecinstancesinfo throughput many object extremely high data accessed distributed way many ec instance possible read write object hundred thousand instance however throughput limited object accessed sequentially single instance individual operation take many millisecond bandwidth instance limited therefore perform large number operation necessary use multiple worker thread connection individual instance larger job multiple ec instance well multipart uploads large object want take advantage multipart uploading capability starting minimum chunk size mb large downloads also download chunk single large object parallel exploiting http get rangeheader capability list pagination listing content happens response per request bucket many million object listing take time key prefix previously randomness beginning key name necessary order avoid hot spot longer necessary july data outside aws directconnect transfer acceleration help transfer acceleration pay equivalent month storage transfer either direction using nearer endpoint commandline application way use command line originally scmd best tool job still used heavily many regular aws commandline interface support well useful situation scmd replacement greater emphasis performance via multithreading helpful large file large set file also offer unixlike globbing support gui application may prefer gui wish support gui access le technical user option aws console offer graphical way use use caution telling nontechnical people use however since without tight permission offer access many aws feature transmit good option macos use case cyberduck good option macos window support multipart uploads acls versioning lifecycle configuration storage class server side encryption ss ssekms cloudfront tightly integrated cloudfront cdn see cloudfront section information well transfer acceleration static website hosting static website hosting option simply setting enables configurable http index error page http redirect support public content simple way host static asset fully static website consider using cloudfront front asset like cdn cloudfront improves performance significantly ssl supported builtin amazonawscom domain support serving site custom domain ssl custom domain however cloudfront allows serve custom domain http amazon provides free sni ssltls certificate via amazon certificate manager sni work outdated browsersoperating system alternatively provide certificate use cloudfront support browsersoperating system fee including resource across domain font inside cs file may need configure cors bucket serving resource since pretty much everything moving ssl nowadays likely want control domain probably want set cloudfront certificate front ignore aws example nonssl said youll need think invalidation update cloudfront may wish include version hash filename invalidation necessary data lifecycles managing data understanding lifecycle data important understanding data putting data bucket think lifecycle end life beginning general data different expiration policy stored separate prefix top level example voluminous log might need deleted automatically monthly data critical never deleted former separate bucket least separate folder wise thinking front save pain hard clean large collection file created many engineer varying lifecycles coherent organization alternatively set lifecycle policy archive old data glacier careful archiving large number small object glacier since may actually cost also storage class called infrequent access durability standard discounted per gb suitable object infrequently accessed data consistency understanding data consistency critical use multiple producer consumer data creation update individual object atomic youll never upload new object change object another client see part half change uncertainty lie client client see update new object create new object youll able read instantly called readafterwrite consistency well additional caveat read object exists create get eventual consistency readafterwrite apply list operation newly created object guaranteed appear list operation right away update object overwrite delete object youre guaranteed eventual consistency ie change happen guarantee many use case treating object immutable ie deciding convention created deleted updated greatly simplify code us avoiding complex state management note usstandard region weaker eventual consistency model newer region readafterwrite finally corrected watch many old blog mentioning slow update practice eventual consistency usually mean within second expect rare case minute hour filesystem general s apis inherent limitation make hard use directly posixstyle filesystem still preserving s object format example appending file requires rewriting cripple performance atomic rename directory mutual exclusion opening file hardlinks impossible sfs fuse filesystem go ahead try anyway performance limitation surprise reason riofs c goofy go recent effort attempt adopt different data storage format address issue likely improvement sfs sql discussion python implementation offer data deduplication snapshotting encryption one client time objectivefs discussion commercial solution support filesystem feature concurrent client primarily using vpc consider setting vpc endpoint order allow vpchosted resource easily access without need extra network configuration hop crossregion replication feature replicating bucket one region another note already highly replicated within one region usually isnt necessary durability could useful compliance geographically distributed data storage lower latency strategy reduce regiontoregion bandwidth cost mirroring heavily used data second region ipv v ipv long time supported ipv default endpoint httpsbucketsamazonawscom however aug support ipv ipv use enable dualstack either preferred api client directly using url scheme httpsbucketsdualstackregionamazonawscom extends transfer acceleration well event notification configured send sn notification sqs message aws lambda function bucket event limit individual user iam role minimal required location catalog approved location otherwise tends become dumping ground people put data random location cleaned year costing big buck bucket deleted take hour bucket name created discussion gotchas limitation bucket sit outside vpc accessed anywhere world bucket policy set deny read permission section carefully countless case bucket exposed public many year notorious bucket limit per account could raised caused many company significant pain request increase ask increase limit still capped generally per account careful make implicit assumption transactionality sequencing update object never assume modify sequence object client see modification sequence upload whole bunch file appear client sla uptime use heavily youll inevitably see occasional error accessing storing data disk infrastructure fail availability usually restored second minute although availability extremely high mentioned durability excellent uploading change make object cause full rewrite object avoid appendinglike behavior regular file eventual data consistency discussed surprising sometimes suffers internal replication issue object may visible subset machine depending endpoint hit usually resolve within second however weve seen isolated case issue lingered hour md multipart uploads etag header hash object many case md hash however case general use multipart uploads one workaround compute md put custom header done scmd incomplete multipart upload cost incomplete multipart uploads accrue storage charge even upload fails object created amazon others recommend using lifecycle policy clean incomplete uploads save storage cost note many may worth investigating whatevers failing regularly u standard region previously useast region also known u standard region replicated across coast led greater variability latency effective jun longer case amazon region support readafterwrite consistency amazon also renamed u standard region u east n virginia region consistent aws regional naming convention authentication version region newer region support latest authentication file operation using cli sdk doesnt work one region work correctly another region make sure using latest authentication signature storage durability availability price illustration comparative feature price table give standard rrs ia comparison glacier eb efs ec dxlarge instance store using virginia region sept durability per year availability designed availability sla storage per tb per month get retrieve per million write archive per million glacier eleven sloooow ia eleven rrs first tb standard eleven eb unstated scstgpio efs high high ec dxlarge instance store unstated unstated especially notable item boldface source pricing sla faq rrs info note considered deprecated glacier pricing eb availability durability eb pricing efs pricing ec sla ec ec basic homepage documentation faq pricing see also ecinstancesinfo ec elastic compute cloud aws offering fundamental piece cloud computing virtual private server instance run linux bsd window operating system internally theyve used heavily modified xen virtualization said new instance class introduced kvm derived hypervisor instead called nitro far limited c instance type lastly there bare metal hypervisor available imetal instance term ec sometimes used refer server technically refers broadly whole collection supporting service like load balancing clbsalbsnlbs ip address eips bootable image amis security group network drive eb discus individually guide ec pricing cost management complicated topic range free aws free tier lot depending usage pricing instance type second hour change depending aws region whether purchasing instance ondemand spot market prepurchasing reserved instance network performance instance type aws us general term like low medium high refer network performance user done benchmarking provide expectation term mean ec alternative lockin running ec akin running set physical server long dont automatic scaling tooled cluster setup run set static instance migrating another vps dedicated server provider hard alternative ec direct alternative google cloud microsoft azure rackspace digitalocean awss lightsail offering vps provider offer similar apis setting removing instance see comparison use amazon linux aws encourages use amazon linux evolved red hat enterprise linux rhel centos used many others skeptical whatever think decision carefully true amazon linux heavily tested better supported unlikely event deeper issue o virtualization ec general many company fine using standard nonamazon linux distribution ubuntu centos using standard linux distribution mean exactly replicable environment use another hosting provider instead addition aws also helpful wish test deployment local developer machine running standard linux distribution practice thats getting common docker amazon support official amazon linux docker image aimed assisting local development comparable environment though new enough considered experimental note currentlyintesting amazon linux support onpremise deployment explicitly ec cost see section ec tip picking region first set consider region want use first many people north america automatically set useast n virginia region default worth considering best front youll want evaluate service availability service available region costing baseline cost also vary region generally lowest useast comparison purpose compliance various country differing regulation regard data privacy example instance type ec instance come many type corresponding capability virtual machine cpu architecture speed ram disk size type ssd magnetic network bandwidth selecting instance type complex since many type additionally different generation released year use list ecinstancesinfo review cost feature amazon list instance type hard use doesnt list feature price together make doubly difficult price vary lot use ecinstancesinfo determine set machine meet need ecpricecom find cheapest type region youre working depending timing region might much cheaper rent instance memory cpu bare minimum turn instance arent use many situation testing staging resource may need instance wont need pay ec running cost suspended given cost calculated based usage simple mechanism cost saving achieved using lambda cloudwatch open source option like cloudcycler saas provider like gorillastack note turn instance ephemeral root volume state lost instance turned therefore stateful application safer turn eb backed instance dedicated instance dedicated host assigned hardware instead usual virtual instance expensive virtual instance preferable performance compliance financial modeling licensing reason bit v bit micro small medium instance still available use bit architecture youll using bit ec amd instance nowadays though smaller instance still support bit use bit unless legacy constraint good reason use hvm v pv two kind virtualization technology used ec hardware virtual machine hvm paravirtual pv historically pv usual type hvm becoming standard want use newest instance type must use hvm see instance type matrix detail operating system use ec youll need pick base operating system window linux ubuntu amazon linux amis covered detail section limit cant create arbitrary number instance default limit number ec instance per account vary instance type described list use termination protection instance important longlived particular arent part autoscaling enable termination protection important line defense user mistake accidentally terminating many instance instead one due human error ssh key management start instance need least one ssh key pair set bootstrap ie allow ssh first time aside bootstrapping manage key instance assigning individual key individual user service appropriate avoid reusing original boot key except administrator creating new instance avoid sharing key add individual ssh key individual user gpu support rent gpuenabled instance ec use machine learning graphic rendering workload three type gpuenabled instance currently available p series offer nvidia tesla v gpus gpu configuration targeting machine learning scientific workload high performance computing application p series offer nvidia tesla k gpus gpu configuration targeting machine learning scientific workload high performance computing application g series offer nvidia tesla gpus gpu configuration targeting graphic video encoding aws offer two different amis targeted gpu application particular target deep learning workload also provide access strippeddown driveronly base image aws offer amazon linux deep learning ami based amazon linux well ubuntu deep learning ami come nvidia driver ancillary software cuda cublas cudnn tensorflow pytorch etc installed lower barrier usage note using amis lead lock due fact direct access software configuration versioning compendium framework included lead long instance startup time difficulttoreasonabout environment expensive ec instance type spot instance offer significant saving gpu workload interruption tolerable current ec instance type take advantage ipv addressing long launched subnet allocated cidr range ipvenabled vpc ec gotchas limitation never use ssh password dont insecure consequence compromise severe use key instead read fully disable ssh password access ssh server making sure passwordauthentication etcsshsshdconfig file youre careful managing ssh private key everywhere stored major improvement security passwordbased authentication newer instance type selecting ami use sure select hvm ami wont work creating instance using new ssh key pair make sure ssh key permission correct sometimes certain ec instance get scheduled retirement aws due detected degradation underlying hardware case given couple week migrate new instance instance root device eb volume typically stop start instance move healthy host hardware giving control timing event note however lose instance store volume data ephemeral drive instance type instance store volume instance public ip one likely change unless youre using elastic ip could problem system depend ip address periodically may find server load balancer receiving traffic presumably previous ec server running ip address handed may matter fixed migrating another new instance ec api critical dependency infrastructure eg automated server replacement custom scaling algorithm etc running large scale making many ec api call make sure understand might fail call rate limited limit published subject change code test possibility many newer ec instance type either ebsonly backed local nvme disk assigned instance make sure factor eb performance cost planning use youre operating significant scale may wish break apart api call enumerate resource instead operate either individual resource subset entire list ec apis time consider using filter restrict get returned instance come two type fixed performance instance eg c r burstable performance instance eg instance receives cpu credit continuously rate depends instance size instance accrue cpu credit idle use cpu credit active however instance run credit youll notice severe degradation performance need consistently high cpu performance application video encoding high volume website hpc application recommended use fixed performance instance instance userdata limited kb limit applies data raw form baseencoded form data needed downloaded userdata script new account may able launch instance type gpu instance initially imposed soft limit zero limit raised making support request see aws service limit method make support request note limit zero currently documented since multiple aws instance run physical hardware early cloud adopter encountered became known noisy neighbor problem feeling getting paying led user frustration however steal may best word describe whats actually happening based detailed explanation kernel determine steal time avoiding cpu steal affect application cloud may best handled properly designing cloud architecture aws introduced dedicated tenancy allows customer resource single server saw way solve noisy neighbor problem since customer us cpu approach come significant risk physical system needed type maintenance customer instance running using shared tenancy one underlying server needed maintenance instance server would go offline customer instance running using dedicated tenancy underlying server need maintenance instance would go offline imetal type instance providing ability run android x emulator aws moment cloudwatch cloudwatch basic homepage documentation faq pricing cloudwatch monitor resource application capture log sends event cloudwatch monitoring standard mechanism keeping tab aws resource wide range metric dimension available via cloudwatch allowing create time based graph alarm dashboard alarm practical use cloudwatch allowing trigger notification given metric alarm trigger sn notification auto scaling action ec action alarm also support alerting n datapoints cross alarm threshold publish share graph metric creating customizable dashboard view monitor report ec instance system check failure alarm using cloudwatch event event create mechanism automate action various service aws create event rule instance state aws apis auto scaling run command deployment timebased schedule think cron triggered event invoke lambda function send snssqskinesis message perform instance action terminate restart stop snapshot volume custom payload sent target json format especially useful triggering lambda using cloudwatch log cloudwatch log streaming log storage system storing log within aws access unlimited paid storage also option streaming log directly elasticsearch custom lambda log agent installed server process log time send cloudwatch log export logged data stream result aws service cloudwatch log encrypted using key managed km detailed monitoring detailed monitoring ec instance must enabled get granular metric billed cloudwatch cloudwatch alternative lockin cloudwatch offer fairly basic functionality doesnt create significant additional aws lockin metric provided service obtained apis imported aggregation visualization tool service many specifically provide cloudwatch data import service alternative cloudwatch monitoring service include newrelic datadog sumo logic zabbix nagios ruxit elastic stack open source option statsd collectd graphite many others cloudwatch log alternative include splunk sumo logic loggly logdna logstash papertrail elastic stack centralized logging solution cloudwatch tip common use case cloudwatch billing alarm instance load balancer updown alarm disk usage alert use ecconfig monitor watch memory disk metric window platform instance linux example script thing publish metric using aws api incurs additional cost stream directly cloudwatch log lambda elasticsearch cluster creating subscription log group dont forget take advantage cloudwatch nonexpiring free tier cloudwatch gotchas limitation metric cloudwatch originate hypervisor hypervisor doesnt access o information certain metric notably memory utilization available unless pushed cloudwatch inside instance use one metric alarm notification receive alarm contextual detail specific threshold alarm state timing default cloudwatch metric resolution minute send multiple value metric within minute aggregated minimum maximum average total sum per minute july new highresolution option added cloudwatch metric alarm feature allows record metric second resolution evaluate cloudwatch alarm every second blog post introducing feature describes publish highresolution metric cloudwatch note calling putmetricdata api storageresolution attribute item send metricdata array direct parameter putmetricdata api call data metric kept cloudwatch month starting november used day minimum granularity increase day amis ami basic user guide amis amazon machine image immutable image used launch preconfigured ec instance come public private flavor access public amis either freely available sharedcommunity amis bought sold aws marketplace many operating system vendor publish readytouse base amis ubuntu see ubuntu ami finder amazon course amis amazon linux ami tip amis built independently based deployed must select amis match deployment using creating eb instance store pv hvm virtualization type bit v bit amd architecture discussed modern deployment usually bit ebsbacked hvm create custom ami snapshotting state ec instance modified amis backed eb storage necessary image data loaded eb volume dont require extra pull result ebsbacked instance coming much faster instance storagebacked one amis per region must look amis region copy amis region ami copy feature aws resource wise use tag version amis manage lifecycle create amis always tension choosing much installation configuration want bake baking le amis example configuration management client downloads installs configures software new ec instance launched allows minimize time spent automating ami creation managing ami lifecycle likely able use fewer amis probably need update frequently result longer wait new instance ready use result higher chance launchtime installation configuration failure baking amis example preinstalling fully configuring common software along configuration management client load configuration setting launch time result faster launch time fewer opportunity software installation configuration break instance launch time increase need create manage robust ami creation pipeline baking even amis example installing required software well potentially also environmentspecific configuration information result fast launch time much lower chance instance launchtime failure without additional redeployment reconfiguration consideration require time consuming ami update order update software configuration well complex ami creation automation process option favor depends quickly need scale capacity size maturity team product instance boot fast autoscaled service require le spare capacity built quickly scale response sudden increase load setting service autoscaling consider baking amis backing eb storage option system become larger common complex ami management multistage ami creation process ideally one common base amis infrequently regenerated component common deployed service updated frequently run servicelevel ami generation process includes installation possibly configuration applicationspecific software thinking ami creation strategy use tool like packer simplify automate ami creation use rhel instance happen existing rhel onpremise red hat subscription could leverage red hat cloud access program migrate portion subscription aws thereby aws charge rhel subscription second time either use selfcreated rhel amis red hat provided gold image added private amis sign red hat cloud access ami gotchas limitation amazon linux package version default instance based amazon linux amis configured point latest version package amazon package repository mean package version get installed locked possible change including breaking one appear applying update future bake amis update already applied unlikely cause problem running service whose instance based amis break appear earlier amibaking stage build process need fixed worked around new amis generated lock launch feature allows configure amazon linux instance target repository particular major version amazon linux ami reducing likelihood break caused amazoninitiated package version change occur package install time cost updated package get automatically installed future update run pairing use lock launch feature process advance amazon linux ami discretion give tighter control update behavior timing cloudinit default oftentimes user create amis performing customizations albeit manually via tool packer ansible youre careful alter cloudinit setting correspond system service eg sshd etc youve customized may find change longer effect booting new ami first time cloudinit overwritten distros different file others generally located etccloud regardless distro want review file carefully chosen distro rolling amis complete reference cloudinit available cloudinit site advanced configuration mechanism test change made file sandbox prior serious usage auto scaling auto scaling basic homepage user guide faq pricing additional charge auto scaling group asgs used control number instance service reducing manual effort provision deprovision ec instance configured scaling policy automatically increase decrease instance count based metric like cpu utilization based schedule three common way using asgs dynamic automatically adjust instance count based metric thing like cpu utilization static maintain specific instance count time scheduled maintain different instance count different time day day week asgs additional charge pay underlying ec cloudwatch service auto scaling tip better matching cluster size current resource requirement use asgs result significant cost saving many type workload pairing asgs clbs common pattern used deal change amount traffic service receives dynamic auto scaling easiest use stateless horizontally scalable service even using asgs dynamically increase decrease instance count seriously consider maintaining instance inside asgs given target instance count asg work ensure number instance running equal target replacing instance die marked unhealthy result consistent capacity better stability service autoscalers configured terminate instance clb alb marked unhealthy auto scaling gotchas limitation replaceunhealthy setting default asgs kill instance ec instance manager considers unresponsive possible instance whose cpu completely saturated minute time appear unresponsive causing asg default replaceunhealthy setting turned replace instance managed asgs expected consistently run high cpu consider deactivating setting however detecting killing unhealthy node become responsibility eb eb basic homepage user guide faq pricing eb elastic block store provides block level storage offer storage volume attached filesystems like traditional network drive eb volume attached one ec instance time contrast efs shared much higher price point comparison eb tip raid use raid drive increased performance worthy read aws post eb io characteristic well performance tip one provision iop pay specific level io operation per second ensure particular level performance disk single gp eb volume allows k iop max get maximum performance gp eb volume maximum size attached ebsoptimized ec instance standard gp eb volume improve iop size may make sense simply enlarge volume instead paying better performance explicitly many case reduce cost standard block size eb volume kb eb gotchas limitation eb durability reasonably good regular hardware drive annual failure rate hand poor dont backup contrast durability extremely high care data back snapshot eb sla uptime see note high availability eb volume volume type indicating physical storage type type called standard st sc actually old spinningplatter disk deliver hundred iop want unless youre really trying cut cost modern ssdbased gp io typically option want restoring snapshot create eb volume block lazily read first time theyre referenced avoid initial period high latency may wish use dd fio per official documentation efs efs basic homepage user guide faq pricing efs amazon network filesystem presented nfsv server compatible nfsv client mount designed highly available durable efs file system object redundantly stored across multiple availability zone efs designed used shared network drive automatically scale petabyte stored data thousand instance attached efs offer higher throughput multiple gigabyte per second better durability availability eb see comparison table higher latency efs priced based volume data stored cost much eb ballpark three time much compared general purpose gp eb volume performance dependent volume data stored price like eb efs us credit based system credit earned rate kib per gib storage consumed burst readingwriting file metadata unlike eb operation metadata file size owner date etc also consume credit burstcreditbalance metric cloudwatch monitored make sure file system doesnt run credit throughput capacity burst also dependent size tib throughput go mib mib added stored tib instance file system storing tib would able burst rate mib maximum throughput per ec instance mib efs two performance mode set file system created one general purpose max io max io scale higher cost higher latency doubt use general purpose also default percentiolimit metric cloudwatch hovers around max io recommended changing performance mode mean creating new efs migrating data high availability achieved mount target different subnets availability zone efs tip efs based nfsv directory efs mounted directly doesnt root directory one application could mount fsprog another fsprog user group level permission used control access certain directory efs file system sharing efs filesystems one efs filesystem used multiple application service considered carefully pro performance based total size stored file everything one drive increase performance everyone one application consuming credit faster accumulate might offset another application store file efs rarely access con since credit shared one application overconsumes affect others compromise made regard security client network access drive someone root access one client instance mount directory efs readwrite access file drive even dont access application hosted client isnt norootsquash equivalent efs efs gotchas limitation number nfsv feature supported limit service efs offer disk level encryption new drive file system created date encryption achieved moving data new efs volume efs file system mounted premise direct connect efs file system mounted vpc peering vpn even vpn running top direct connect using efs volume window supported file uploaded efs take hour efs update detail billing burst credit purpose metadata operation costly term burst credit consumption recursively traversing tree containing thousand file easily ramp ten even hundred megabyte burst credit consumed even file touched command like find chown r adverse impact performance load balancer load balancer basic aws load balancing product classic load balancer clbs application load balancer alb network load balancer nlb introduction alb classic load balancer known elastic load balancer elbs older documentation tooling blog post may still reference elbs clbs around since alb nlbs added aws clbs support tcp http load balancing alb support http load balancing nlbs support tcp layer load balancing clbs alb optionally handle termination single ssl certificate optionally perform active health check instance remove destination pool become unhealthy clbs dont support complex rulebased routing alb support currently small set rulebased routing feature nlbs extensive routing option clbs forward traffic single globally configured port destination instance alb forward port configured perinstance basis better supporting routing service shared cluster dynamic port assignment like ec mesos nlbs support multiple port ip registering target ip address including target outside vpc load balancer ec select unused port scheduling task register target group using port clbs supported ec classic well vpcs alb supported vpcs alb target group instance ip based target rfc range allowing use premise destination via vpn direct connect load balancer tip dont opinion load balancing front dont complex load balancing need like applicationspecific routing request reasonable use clb alb load balancing instead even dont want think load balancing architecture simple say one server put load balancer front anyway give flexibility upgrading since wont change dns setting slow propagate also let thing like terminate ssl easily clbs alb many ip internally aws load balancer simply collection individual software load balancer hosted within ec dns load balancing traffic among pool contain many ip least one per availability zone depending traffic level also support ssl termination convenient scaling clbs alb scale high throughput scaling instantaneous youre expecting hit lot traffic suddenly make sense load test scale advance also contact amazon prewarm load balancer client ip general server want know true client ip address load balancer must forward information somehow clbs add standard xforwardedfor header using clb http load balancer possible get client ip address using load balancer deploying one common pattern swap instance load balancer spinning new stack latest version keep old stack running one two hour either flip back old stack case problem tear rotating certificate retaining arn rotating iam server certificate difficult standard practice upload new one update resource new arn however retain arn using updatecertificate call following process upload new iam server certificate unique name eg fuzzycomnew rename existing iam server certificate eg fuzzycom fuzzycomexpired rename new iam server certificate name previously existing certificate eg fuzzycomnew fuzzycom jiggle clbalb listener pick change alb invoke modifylistener existing detail alb listener clb invoke createloadbalancerlisteners existing detail clb listener load balancer gotchas limitation clbs alb fixed external ip client see consumer apps doesnt matter enterprise customer may want ip different user vary unpredictably single client time within standard ec ip range similarly never resolve clb name ip put value record work break web client reverse proxy cache dns lookup long time problematic clbs alb since change ip mean minute hour day client stop working unless disable dns caching watch java setting sure adjust properly another example nginx reverse proxy normally resolve backends startup although way get around unheard ip recycled customer without long cooloff period client cache ip using ssl verify server might get error response completely different service company operator service behind clb alb latter phenomenon mean also see puzzling erroneous request client company common client using backend apis since web browser typically cache limited period clbs alb take time scale handle sudden spike traffic well therefore anticipate spike need prewarm load balancer gradually sending increasing amount traffic tune healthchecks carefully aggressive deciding remove instance conservative adding back pool service load balancer fronting may become inaccessible second minute time extra careful autoscaler configured terminate instance marked unhealthy managed load balancer clb http listener dont support server name indication sni need sni work around limitation either providing certificate subject alternative name sans using tcp listener terminating ssl backend limit number alb clbs nlbs per region separately late default limit per region limit easily raised alb clb aws quite reluctant raise limit nlbs using network load balancer nlb ec client cannot connect nlb resides another vpc vpc peering aws managed vpn unless ec client c imetal instance type vpc peering vpcs must region see troubleshooting clb clb basic homepage user guide faq pricing classic load balancer formerly known elastic load balancer http tcp load balancer managed scaled amazon clb tip best practice article mustread use clbs heavily lot detail clb gotchas limitation general clbs smart load balancer dont fancy feature finegrained control traditional hardware load balancer would offer common case involving sessionless apps cookiebased session http ssl termination work well default clbs refuse route traffic load balancer one availability zone az backend instance another cause last instance az becomes unavailable even healthy instance zone youre running fewer two backend instance per az almost certainly want enable crosszone load balancing complex rule directing traffic supported example cant direct traffic based regular expression url like haproxy offer apex dns name upon time couldnt assign clb apex dns record ie examplecom instead fooexamplecom needed record instead cname possible route alias record directly pointing load balancer clbs use http keepalives internal side cause unexpected side effect request different client tcp connection external side end tcp connection internal side never assume multiple request tcp connection client traffic clbs backend instance subnet network acl rule evaluated ec ec traffic subnet would network acl rule evaluated default allow rule removed network acl applied subnet rule allows traffic health check port listener port must added december clbs launched vpcs support ipv addressing clbs launched ecclassic support ipv ipv dualstack dns name alb alb basic homepage user guide faq pricing websockets http supported internet protocol version ipv supported load balancing via ip supported prior application load balancer advised use tcp instead http protocol make work described use obscure useful proxy protocol pas client ip tcp load balancer alb tip use alb route service hosted shared cluster dynamic port assignment like ec mesos alb support http hostbased routing send http request apimydomaincom targetgroup blogmydomaincom target group well http pathbased routing send http request api targetgroup blog target group alb gotchas limitation alb support http http plaintext http alb support http external client internal resource instancescontainers alb support http routing portbased tcp routing instance alb target group either single fixed healthcheck port ec instancelevel healthcheck healthcheck port target application port application instancelevel healthcheck cant configure pertarget healthcheck port different application port alb vpconly available ec classic target group healthy target request routed target example point listener target group containing single service long initialization phase health check would fail request reach service still starting although alb support sni support http certificate per load balancer limitation described might subject change elastic beanstalk elastic beanstalk basic homepage developer guide faq pricing eb elastic beanstalk paas platform service help developer create deploy scale web application eb handle deployment configuration provisioning load balancing autoscaling monitoring logging eb creates aws resource behalf retain full access control underlying resource cost use eb still charged full cost underlying aws resource created eb elastic beanstalk tip speed deployment launch dev stage turn health check set deployment policy configuration want reuse multiple eb apps save current configuration using eb config save cfg myebconfig default eb doesnt alarm youll need add metric youre monitoring default eb doesnt enable managed platform update enable configuration eb automatically apply update prespecified maintenance window elastic beanstalk gotchas limitation dont edit apachenginx conf file manually ec instance rewritten deployment use ebextensions instead creating eb environment longer possible change name tag eb sometimes quarantine instance cause multiple deployment issue despite quarantined eb still deploy subsequent deployment prevent behavior said instance need terminated underlying issue fixed file uploads capped mb default eb configuration update nginx config change edit elasticbeanstalksavedconfigs aware kept sync eb environment config youll need manually fetch save change take effect elastic ip elastic ip basic documentation faq pricing elastic ip static ip address rent aws assign ec instance elastic ip tip prefer load balancer elastic ip singleinstance deployment could assign elastic ip instance give ip dns name consider deployment time provision load balancer instead easy add remove instance load balancer also quicker add remove instance load balancer reassign elastic ip convenient point dns record load balancer instead pointing specific ip manage manually also route alias easier change manage situation need manage fix ip address ec instance example customer need fixed ip situation require elastic ip elastic ip limited per account possible request elastic ip attached active resource small hourly fee elastic ip extra charge long youre using small cost use mechanism prevent people squatting excessive number ip address elastic ip gotchas limitation officially way allocate contiguous block ip address something may desire giving ip external user though allocating may get lucky part cidr block important may want bring ip involved guide go glacier glacier basic homepage developer guide faq pricing glacier lowercost alternative data infrequently accessed archival purpose useful data rarely accessed generally take hour fulfill retrieval request aws officially revealed storage medium used glacier may lowspin hard drive even tape aws released even cost effective storate tier called glacier deep archive offer hour retrieval latency cost roughly thousand dollar per month per petabyte glacier tip physically ship data amazon put glacier usb esata hdd glacier gotchas limitation getting file glacier glacially slow typically hour due fixed overhead per file pay per put get operation uploading downloading many small file onto glacier might expensive also k storage overhead per file hence good idea archive file upload aware perobject cost archiving data glacier cost per request large number object relatively small size take time reach breakeven point initial archiving cost versus lower storage pricing rds rds basic homepage user guide faq pricing see also ecinstancesinfords rds managed relational database service allowing deploy scale database easily support oracle microsoft sql server postgresql mysql mariadb amazon aurora rds offer box support high availability failover database rds tip youre looking managed convenience rds data store mongodb cassandra may wish consider thirdparty service provider mlab compose instaclustr make sure create new parameter group option group database since default parameter group allow dynamic configuration change rds instance start default timezone utc necessary changed different timezone rds gotchas limitation rds instance run eb volume either generalpurpose provisioned iop hence constrained eb performance verify database feature need everything might want available rds example using postgres check list supported feature extension feature need arent supported rds youll deploy database use failover support offered rds keep mind based dns change make sure client reacts change appropriately particularly important java given dns resolvers ttl configured default db migration rds importing database rds ensure take consideration maintenance window setting backup running time import take considerably longer time would expected database size limited tb database engine except sql server tb limit aurora support tb database rds mysql mariadb rds mysql mariadb basic rds offer mysql version rds offer mariadb version rds mysql mariadb tip mysql rds allows access binary log multiaz instance mysql transparently replicate data across az using drbd automated backup multiaz instance run backup instance reduce latency spike primary performance schema performance schema enabled default mysql later disabled default version rds wish enable performance schema reboot rds instance required mysql v mariadb v aurora prefer mysqlstyle database starting something new probably consider aurora mariadb well aurora increased availability nextgeneration solution said aurora may much faster mysql certain workload mariadb modern community fork mysql likely edge mysql many purpose supported rds rds mysql mariadb gotchas limitation super privilege rds provides stored procedure perform task require super privilege starting stopping replication replicate nonrds instance mysql replication instance break az failovers ability manually change master replica must rebuilt failover master global option exposed via db parameter group variable introduced later mysql dot release avoidtemporalupgrade mysql made available rdss x parameter group making use requires upgrade mysql x rds feature pointintime restore snapshot restore supported myisam table ensure lock flush myisam table executing snapshot backup operation ensure consistency rds postgresql rds postgresql basic rds offer postgresql rds postgresql tip recently logical replication supported subscriber publisher support relatively large range native extension rds postgresql support native partitioning major feature tunables support connection ssl support multi az pointintime recovery rds postgresql gotchas limitation superuser privilege rds provides role rdssuperuser needed operation limitation major feature delayed compared open source postgresql default rds specd general purpose ssd need better performance spec provisioned iop ssd cant use rds replica outside rds without using logical replication setting cannot changed setting change changed using database parameter group harder troubleshoot performance problem since access host sure verify extension need available using extension listed need come work around deploy database ec many postgres utility maintenance item expect command line access usually satisfied using external ec server rds sql server rds sql server basic rds offer sql server r including express web standard enterprise rds sql server tip recently added support backup restore tofrom may make attractive dr option onpremises installation rds sql server gotchas limitation user granted dbowner privilege database instance storage cannot expanded existing database need space must restore database new instance larger storage tb database size limit nonexpress edition also minimum storage size gb web express gb standard enterprise limited database per instance rds aurora rds aurora basic aurora cloud database service designed provide distributed faulttolerant relational database selfhealing storage autoscaling tb per instance currently come two version mysql compatible system postgresql compatible system rds aurora mysql rds aurora mysql basic amazon proprietary fork mysql intended scale high concurrency workload generally speaking individual query performance aurora expected improve significantly relative mysql mariadb aurora intended maintain performance executing many query concurrently equivalent mysql mariadb server could handle notable new feature include logstructured storage instead btrees improve write performance outofprocess buffer pool database instance restarted without clearing buffer pool underlying physical storage specialized ssd array automatically maintains copy data across az aurora read replica share storage layer write master significantly reduces replica lag eliminates need master write distribute binary log replication allows zerodataloss failovers master replica master read replica share storage known collectively aurora cluster read replica span region rds aurora mysql tip order take advantage aurora higher concurrency application configured large database connection pool execute many query concurrently possible example aurora server tested produce increasing performance oltp workload connection aurora scale well multiple cpu may require large instance class optimal performance easiest migration path aurora restoring database snapshot mysql next easiest method restoring dump mysqlcompatible database mariadb lowdowntime migration mysqlcompatible database set aurora instance replica existing database none method option amazon offer feebased data migration service replicate aurora cluster mysql another aurora cluster requires binary logging enabled performant native aurora replication aurora read replica equivalent multiaz backup configured zerodataloss failover target fewer scenario creation multiaz aurora instance required rds aurora mysql gotchas limitation aurora x based mysql x cherrypicking later mysql feature missing feature well online ddl feature introduced aurora x based mysql x aurora support gtid transaction either aurora x aurora x release line aurora maximum cluster size tb rds aurora postgresql rds aurora postgresql basic amazon proprietary fork postgresql intended scale high concurrency workload maintaining ease use currently based postgresql higher throughput x similar hardware automatic storage scale gb increment tb low latency read replica share storage layer master significantly reduces replica lag point time recovery fast database snapshot rds aurora postgresql tip aurora postgres default supposed utilize high connection rate reason connection pooling must configured accordingly aurora based postgresql lack feature like declarative partitioning logical replication rds aurora postgresql gotchas limitation aurora postgresql fall behind normal rds come available version need feature latest postgresql version might better plain rds patching bug fixing separate open source postgresql elasticache elasticache basic homepage user guide redis user guide memcached faq pricing elasticache managed inmemory cache service used store temporary data fast inmemory cache typically order avoid repeating computation multiple time could reused support memcached redis open source inmemory cache software expose using native access apis main benefit aws take care running patching optimizing cache node need launch cluster configure endpoint application aws take operational work running cache node elasticache tip choose engine clustering configuration instance type carefully based application need documentation explains detail pro con limitation engine order help choose best fit application nutshell redis preferable storing complex data structure memcached plain keyvalue store simplicity memcached allows slightly faster allows scale needed redis feature may use application memcached aws provides enhanced sdks certain programming language implement autodiscovery feature available normal memcached client library elasticache gotchas limitation since case changing cache cluster may restriction like scaling purpose may become problem launched using cloudformation stack also contains resource really need change cache order avoid getting cloudformation stack nonupdateable state recommended launch elasticache cluster like resource similar constraint dedicated stack replaced entirely new stack desired configuration dynamodb dynamodb basic homepage developer guide faq pricing dynamodb nosql database focus speed flexibility scalability dynamodb priced combination throughput storage dynamodb alternative lockin unlike technology behind many amazon product dynamodb proprietary aws product interfacecompatible alternative available open source project tightly couple application api featureset take significant effort replace commonly used alternative dynamodb cassandra dynamodb tip local version dynamodb provided developer use dynamodb stream provides ordered stream change table use replicate back drive event data dynamodb used simple locking service dynamodb indexing include primary key either singleattribute hash key composite hashkey range also query nonprimary key attribute using secondary index data type dynamodb support three data type number string binary scalar multivalued set dynamodb also support json late dynamodb support global table backup restore functionality dynamodb gotchas limitation dynamodb doesnt provide easy way bulkload data possible data pipeline unfortunate consequence since need use regular service apis update existing create new row common temporarily turn destination table write throughput speed import table write capacity increased dynamodb may irreversible split partition underlying table spreading total table capacity evenly across new generation table later capacity reduced capacity partition also reduced total number partition leaving le capacity partition leaf table state much easier hotspot overwhelm individual partition important make sure dynamodb resource limit compatible dataset workload example maximum size value added dynamodb table kb larger item stored url stored dynamodb dealing time series data dynamodb challenging global secondary index together sampling timestamps possible solution explained dynamodb allow empty string valid attribute value common workaround use substitute value instead leaving field empty setting fine grained policy access dynamodb table sure include secondary index policy document well ec ec basic homepage developer guide faq pricing ec ec container service relatively new service launched end manages cluster service deployed via docker see container aws section context container ec growing adoption especially company embrace microservices deploying docker directly ec another common approach using docker aws using ec required ec yet seem predominant way many company using docker aws also possible use elastic beanstalk docker reasonable youre already using elastic beanstalk using docker may change way service deployed within ec elastic beanstalk radically change service used ecr ec container registry amazon managed docker registry service simpler running registry missing feature might desired user doesnt support crossregion replication image want fast fleetwide pull large image youll need push image regionlocal registry doesnt support custom domain certificate container health monitored via clb alb also used address containerized service using alb need handle port contention ie service exposing port host since alb target group associated ecsbased service directly hitchhiker guide aws ec docker j cole morrison excellent article introduction aws ec concept ec tip log driver ec support multiple log driver awslogs splunk fluentd syslog json use awslogs cloudwatch make sure group made log first driver fluentd enabled default install agent enable driver adding ecsavailableloggingdriversawslogsfluentd etcecsecsconfig blog convox commentary list number common challenge ec early possible optimize disk clean ec default unused container deleted hour unused image minute setting changed adding ecsenginetaskcleanupwaitdurationm ecsimagecleanupintervalm etcecsecsconfig information optimizing ec disk cleanup ec alternative lockin kubernetes extensive container platform available hosted solution google cloud httpscloudgooglecomcontainerengine aws httpstectoniccom aws kubernetes quickstart httpsawsamazoncomquickstartarchitectureheptiokubernetes developed collaboration heptio nomad orchestratorscheduler tightly integrated hashicorp stack consul vault etc please help expand incomplete section eks eks basic homepage user guide faq pricing eks elastic kubernetes service new service launched june provides managed kubernetes master highly available pair deploy k service pod top ec based kubernetes node see container aws section context container eks awss solution hosting kubernetes natively aws replacement ec directly response large market dominance kubernetes eks launch ec node would configured setup either manually via cloudformation automation solution eks management done utility called kubectl kube configuration file file need configured speak k master certificate url aws cli autogenerate configuration file kubect requires communicating cluster eks authentication integrated iam rolespermissions aws cli integrated subcommand generating authentication token formerly done via custom plugin kubectl called awsiamauthenticator formerly heptioauthenticatoraws eks provides calico tigera securing workload within cluster using kubernetes network policy eks tip multiple cluster supported using different kubeconfig file aws kubernetes quickstart developed collaboration heptio eks alternative lockin ec amazon native container scheduled platform released dont utilise container today looking get started ec excellent product kubernetes extensive container platform available hosted solution google cloud aws digital ocean azure nomad orchestratorscheduler tightly integrated hashicorp stack consul vault etc eks gotchas limitation pod service configuration rapidly consume ip address inside vpc proper care maintenance applied ensure ip exhaustion occur currently integrated monitoring cloudwatch eks pod service need deploy monitoring system support kubernetes prometheus autoscaling based cpumemory node limited aware pending servicespods cannot start using clusterautoscaler useful scaling based node resource usage unschedulable pod prometheus popular monitoring solution k metric alert used send event lambda sqs solution take autoscaling action footnote httpsdocsawsamazoncomekslatestuserguidecreatekubeconfightml httpsawsamazoncomaboutawswhatsnewamazonekssimplifieskubernetesclusterauthentication fargate fargate basic homepage faq pricing fargate allows manage deploy container without worry running underlying compute infrastructure fargate serf new backend addition legacy ec backend ec eks task run fargate ec backends called launch type fargate allows treat container fundamental building block infrastructure fargate tip fargate follows similar mindset lambda let focus application instead dealing underlying infrastructure fargate supported cloudformation awscli ecscli fargate task launched alongside task use ec launch type creating large fargate deployment make sure estimate cost compare alternative solution us traditional ec deployment fargate price several time equivalentlysized ec instance evaluate solution based potential cost refer pricing ec fargate fargate alternative lockin azure container instance available microsoft azure preview version allows run application container without manage virtual machine fargate gotchas limitation april fargate available multiple region useast useast uswest euwest january fargate used ec support eks originally planned yet launch smallest resource value configured ec task us fargate vcpu gb memory task storage ephemeral fargate task stop storage deleted lambda lambda basic homepage developer guide faq pricing lambda aws serverless compute offering allowing user define lambda function selection runtimes invoked via variety trigger including sn notification api gateway invocation lambda key service enables serverless architecture aws alongside aws api gateway aws batch aws dynamodb lambda tip idea behind serverless user dont manage provisioning scaling maintenance physical machine host application code lambda machine actually executes userdefined function abstracted container defining lambda function user able declare amount memory available function directly affect physical hardware specification lambda container changing amount memory available lambda function also affect amount cpu power available aws offer hard guarantee around container reuse general expected unaltered lambda function reuse warm previously used container called shortly another invocation user use way optimize function smartly caching application data initialization lambda hasnt invoked time may warm container left case lambda system load initialize lambda code cold start scenario add significant latency lambda invocation strategy avoiding mitigating cold start including keeping container warm periodic triggering favoring lightweight runtimes node opposed java lambda integrated aws cloudwatch provides logger runtime publishes cloudwatch event lambda offer outofthebox optin support aws xray xray help user diagnose lambda issue offering indepth analysis lambda execution flow especially useful investigating issue calling aws service xray give detailed easytoparse visualization call graph using timed cloudwatch event user use lambda run periodic job cronlike manner event sent lambda fail processing managed using dead letter queue dlq sqs serverless martin fowler thought aws serverless application model sam simplification built top cloudformation help define manage deploy serverless application using lambda serverless one popular framework building serverless application using aws lambda serverless compute option helpful framework lambda alternative lockin cloud offer similar service different name including google cloud function azure function ibm openwhisk also running kubernetes another lambda alternative openfaas lambda gotchas limitation testing lambda locally remotely challenge several tool available make easier including officially supported sam local managing lot lambda function workflow challenge tooling manage lambda deployment still immature aws official workflow around managing function versioning alias painful one option avoid lambda versioning abstracting deployment workflow outside lambda one way accomplished deploying application successive stage distinct aws account per stage account need aware latest version rollback update handled external tooling oct minimum charge lambda invocation m costbenefit reducing run time addingremoving bucket trigger lambda function error may occur error creating trigger configuration ambiguously defined cannot overlapping suffix two rule prefix overlapping event type case manually remove lambda event event tab property section bucket managing size deployment artifact challenge especially using java option mitigate include proguard loading dependency runtime tmp using dynamodb trigger lambda function error may occur problem internal lambda error please contact lambda customer support usually mean lambda cant detect anything dynamodb stream within last hour issue persists deleting recreating trigger may help lambda need access resource vpc example elasticache rds need deployed within increase coldstart time elastic network interface eni registered within vpc concurrent function aws also relatively low initial limit number enis created within vpc however increased good case made aws support lambda several resource limit mb request response payload size mb limit compressed zipjar file deployment package size mb limit codedependencies package compression mb limit local storage tmp lambda code sample fanout example using lambda fanout copy data one service case kinesis multiple aws data service destination fanout data sample include iot sqs aws limit monitor using lambda show use multiple lambda monitoring lambda ec worker pattern show use lambda workflow data picked lambda pushed queue sent ec processing secure pet store sample java application us lambda api gateway cognito user identity awslambdalist list hopefully useful aws lambda lambdarelated resource quite code sample usual guaranteed tested caveat emptor please help expand incomplete section api gateway api gateway basic homepage developer guide faq pricing api gateway provides scalable secured frontend service apis work lambda elastic beanstalk regular ec service allows serverless deployment application built lambda switching deployment upgrade tricky builtin mechanism single domain name migrate one api gateway another one may necessary build additional layer front even another api gateway allow smooth migration one deployment another api gateway alternative lockin kong opensource onpremises api microservices gateway built nginx lua kong extensible plugins tyk opensource api gateway implemented go available cloud onpremises hybrid api gateway tip prior could send receive plain text data people would baseencode binary data binary data supported api gateway support openapi specification aka swagger allows describe api languageagnostic way use various tool generate code supporting api generating client extremely easy either aws console using getsdk api api gateway integrates cloudwatch outofthebox allowing easy logging request response note request response large cloudwatch truncate log full requestreply logging make sure integration eg lambda good practice calling api gateway apis log request id client later refer request id cloudwatch easier tracing debugging multiple way secure api including builtin support aws cognito usecases cognito easiest simplest way authenticate user although roll solution using custom authorizer basically lambda define determines request acceptable api gateway lends well reststyle development perfectly reasonable implement rpcstyle api api gateway well depending usecase often lead much simpler api structure smoother client experience rpcstyle apis particularly useful designing service sit deeper stack dont serve content directly user api gateway gotchas limitation api gateway support encrypted http endpoint support unencrypted http probably good thing api gateway doesnt support multiregion deployment high availability service deployed single region come global endpoint served aws edge location similar cloudfront distribution cannot multiple api gateway hostname different aws region use route distribute traffic forum post integration timeout various integration type eg lambda http api gateway timeouts described unlike limit timeouts cant increased api gateway return status code network low level transport related issue happens may see message cloudwatch log request includes message execution failed due internal error one possible reason error even though backend server running may something outside http specification like sending wellformed chunked message test hitting backend directly curl raw backendendpointurl seeing complains aws xray support exists cumbersome use aws service calling api gateway trace seemingly end api gateway also appear node service map careful using export feature resulting swagger template often incomplete doesnt integrate well swagger extension thing cors many change api gateway resource need deployed via console api call unfortunately api gateway terrible notifying user change staged deployment change require deployment youve changed something api taking effect there decent chance need deploy particular deploying api gateway part cloudformation stack change automatically deploy unless deployment resource changed change work around always changing deployment resource cloudformation update running custom resource ensures deployment made alternatively using serverless application model definition api gateway resource always expect api deployed stack update since sam generate new deployment every time api gateway support nested query parameter method request api gateway limit number resource described something considered start using api gateway platform teamorganization deploys api gateway please help expand incomplete section step function step function basic homepage developer guide faq pricing step function aws way create state machine manage serverless workflow step function tip variety structure supported including branching parallel operation wait task represent real work node frequently lambda function activity externally driven task implemented way like state machine data flow step modified added state machine executes best task idempotent part may want rerun state machine input data debugging aws console facilitates examining execution state various step console let step select input tab failed execution copy input data json select state machine name breadcrumb start new execution pasting input data copied previously step function gotchas limitation step function free tier eligible initial transition per month thereafter charge per state transition many simultaneous execution aware lambda throttling limit peraccount preregion recently became settable perlambda step function execution limited event step creates multiple event mean iterating loop using lambda limited iteration count around needing continue new execution route route basic homepage developer guide faq pricing route aws dns service route alternative lockin historically aws slow penetrate dns market often driven perceived reliability longterm vendor relationship route matured becoming standard option many company route cheap historic dns standard fairly large global network geographic dns formerly premium feature convenient already using aws generally dont get locked dns provider simple use case increasingly become tied use specific feature like geographic routing route alias record many alternative dns provider exist ranging longstanding premium brand like ultradns dyn le well known modestly priced brand like dnsmadeeasy dns expert tell market opaque enough reliability performance dont really correlate well price route usually somewhere middle pack performance test eg solvedns report route tip know route alias record route support standard dns record type note alias resource record set standard part dns specific route feature available dns provider provider different name alias like internal name bit like cname resolved internally server side example traditionally could cname dns name clb alb often better make alias load balancer effect latter case externally client see target record point often wise use alias record alternative cnames since updated instantly api call without worrying dns propagation use clbsalbs resource aws support somewhat confusingly cname alias depending type target alias extension regular dns record exported output zone file additional nonstandard alias line latencybased routing allows user around globe automatically directed nearest aws region running latency reduced understand domain registration dns management hosted zone two separate route service buytransfer domain route automatically assigns four name server eg nsawsdnscom route also offer automatically create hosted zone dns management required dns management account even route need create n record pointing server assigned domain route one use case would put domain registration mission critical bastion account managing hosted zone within another account accessible application route gotchas limitation private hosted zone respond dns query originate within vpc result route respond request made via vpn direct connect get around need implement hybrid cloud dns solution use simple ad provided ip address query hosted zone cloudformation cloudformation basic homepage developer guide faq pricing additional charge cloudformation allows manage set resource aws service grouped stack cloudformation allows define stack template using json yaml cloudformation one major service underpinning aws infrastructure code capability crucial enabling repeatable consistent deployment infrastructure cloudformation additional charge pay underlying resource cloudformation alternative lockin hashicorps terraform thirdparty alternative support cloud platformsproviders including azure openstack aws feature may available terraform eg multiaz elasticache using redis may resort embedded cloudformation template pulumi enables team define deliver cloud native infrastructure code cloud language container serverless kubernetes infrastructure cloudformation tip validate stack different aws account cloudformation truly shine making multiple deployment stack different account region common practice deploy stack successive stage ending production rollout avoid potentially timeconsuming syntax error eating deployment time running validatetemplate cloudformation sometimes slow update resource new feature old service user able define template need deploy resource feature isnt supported template cloudformation allows running arbitrary code using lambda stack create update via custom resource custom resource make cloudformation truly powerful tool sort neat thing quite easily sanity test initial configuration dynamo table bucket cleaning old cloudwatch log etc writing custom resource java cfnresponse come handy writing custom resource javascript aws provides good reference documentation cloudformation offer visual template designer useful getting speed template syntax using stacksets user define deploy entire production application consisting multiple stack one service per stack single cloudformation template youre developing serverless application ie using lambda api gateway cloudformation offer simplified template format called sam use restrictive stack policy without one inadvertently delete live production resource probably causing severe outage turn termination protection stack avoid costly accident cloudformation template reference indispensable discovering isnt possible cloudformation template troposphere python library make much easier create cloudformation template currently support aws openstack resource type troposphere attempt support resource type described cloudformation template built error checking recommended soft dependency awacs allows generate aws access policy json writing python code stacker python application make easy define configure orchestrate manage dependency cloudformation stack across multiple userdefined environment building different stack similar layer may useful build separate template layer reuse using awscloudformationstack avoid hardcoding resource parameter potentially change use stack parameter much resort default parameter value cloudformation used awkward json format make reading debugging difficult use effectively typically involved building additional tooling including converting yaml supported directly wherever possible export relevant physical id stack defining output cloudformation template actual name assigned resource created output returned describestack api call get imported stack part recent addition crossstack reference note importing output stack another stack creates hard dependency tracked cloudformation able delete stack output importing stack cloudformation set send sn notification upon state change enabling programmatic handling situation stack fail build simple email alert appropriate people informed cloudformation allows use conditionals creating stack one common way leverage capability support multienvironment cloudformation template configuring use ifelse statement value parameter passed eg env environmentspecific value thing like vpc id securitygroup id ami name passed reusable generic template version control cloudformation template cloud application combination code written infrastructure run version controlling easy roll back known good state avoid naming resource explicitly eg dynamodb table deploying multiple stack aws account name come conflict potentially slowing testing prefer using resource reference instead thing shouldnt ever deleted set explicit deletionpolicy resource prevent resource deleted even cloudformation stack deleted useful anything maintain expensivetorebuild state dynamodb table thing exposed outside world api gateway apis cloudformation gotchas limitation given cloudformation stack end wide variety state error reporting generally weak often time multiple observetweakredeploy cycle needed get working template internal state machine varying state extremely opaque crossregion operation possible cloudformation without using custom resource crossregion sn subscription handmade resource live alongside cloudformationcreated resource inadvisable sometimes unavoidable possible leave resource management cloudformation template provide readonly access console modification stack resource made outside cloudformation potentially lead stack stuck updaterollbackfailed mode stack state recovered using continueupdaterollback command command initiated console cli resourcestoskip parameter usable cli useful continueupdaterollback command fails new feature drift detection used detect outside change made stack cloudformation useful complex variety pain point many company find alternate solution many company use significant additional tooling cloudformation slow especially item like cloudfront distribution route cname entry hard assemble good cloudformation configuration existing state aws offer trick clumsy cloudformer also hasnt updated age oct doesnt support templatizing many new service wont fully define even existing service since updated example dynamo table defined cloudformer wont contain ttl definition autoscaling configuration thirdparty version tool supported resource called former many user dont use cloudformation limitation find solution preferable often way accomplish goal local script boto bash ansible etc manage build infrastructure dockerbased solution convox etc deploying large stack ie many resource problematic due unintuitive api limit instance api gateway createdeployment api default limit request per minute limit readily exceeded even moderatelysized cloudformation stack creating cw alarm another commonly seen limit putmetricalarm tps especially creating many autoscaling policy dynamodb one way work around limit include cloudformation dependson clause artificially chain resource creation creatingdeleting stack little le clean ideal resource leave behind trace aws account even deletion eg lambda leave behind cloudwatch log group never expire vpcs network security security group vpc basic homepage user guide faq security group pricing vpc virtual private cloud virtualized networking layer aws system aws user basic understanding vpc concept need get detail vpc configuration trivial extremely complex depending extent network security need modern aws account created ecvpc account support vpcs instance default vpc older account may still using ecclassic mode feature dont work without vpcs probably want migrate vpc network security tip security group first line defense server extremely restrictive port open incoming connection general use clbs alb load balancing port need open incoming traffic would port whatever port application us security group access policy deny default port hygiene good habit pick unique port within unusual range different kind production service example web frontend might use backend service postgres instance usual make sure finegrained security group set server make disciplined listing service also errorproof example accidentally extra apache server running default port backend server exposed migrating classic migrating older ecclassic deployment modern ecvpc setup article may help migrate elastic ip ecclassic ecvpc basic aws use one default vpc may sufficient scale consider mapping network topology thoroughly good overview best practice consider controlling access private aws resource vpn get better visibility control connection connection attempt expose smaller surface area attack compared exposing separate potentially authenticated service public internet eg bug yaml parser used ruby rail admin site much le serious admin site visible private network accessed vpn another common pattern especially deployment get larger security regulatory requirement get stringent team size increase provide bastion host behind vpn ssh connection need transit cheap vpn access private aws resource consider using pointtosite software vpn openvpn either installed using official ami though limited concurrent user free license installed using openvpn package linux linux package allows unlimited concurrent user installation le straightforward openvpn installer script help install add client key easily consider using security group source security group rule instead using cidrs way host source security group host security group allowed access much dynamic secure way managing security group rule vpc flow log allow monitor network traffic within vpc log stored cloudwatch log group used security monitoring third party tool performance evaluation forensic investigation see vpc flow log user guide basic information see flowlogsreader cli tool python library retrieve work vpc flow log ipv available vpc along announcement came introduction egressonly internet gateway case one would use nat gateway enable egressonly traffic vpc ipv one use egressonly internet gateway purpose ipv amazon provides ipv cidr block vpc request present cannot implement ipv block happen one already new existing vpcs use ipv existing vpcs need configured ipv cidr block associated new vpcs privatelink homepage user guide pricing one us private link interface vpc endpoint deploys eni vpc subnets allows direct access aws apis accessible locally vpc without go internet another use case would expose service account aws vpc endpoint service vpc network security gotchas limitation vpcs tied one region one account subnets tied one vpc limited one availability zone security group tied one vpc utilizing infrastructure multiple vpcs make sure configurationdeployment tool take account vpc endpoint currently available dynamodb security requirement lockdown outbound traffic vpc may want use dns filtering control outbound traffic service careful choosing vpc ip cidr block going need make use classiclink make sure private ip range doesnt overlap ec classic going peer vpcs carefully consider cost data transfer vpcs since workload integration prohibitively expensive new rds instance require subnet group within vpc youre using default vpc isnt concern contain subnet availability zone region however youre creating vpc plan using rds make sure least two subnets within vpc act subnet group delete default vpc recreate via cli console careful vpc vpn credential lost compromised vpn endpoint must deleted recreated see instruction replacing compromised credential security group route table apply entry separately ipv ipv one must ensure add entry protocol accordingly managed nat gateway convenient alternative manually managing nat instance come cost per gigabyte consider alternative youre transferring many terabyte private subnets internet transfer terabytespetabytes data ec instance private subnets avoid nat gateway data processing charge setting gateway type vpc endpoint route traffic tofrom vpc endpoint instead going nat gateway km km basic homepage developer guide faq pricing km key management service secure service creating storing auditing usage cryptographic key service integration km integrates aws service eb elastic transcoder emr redshift rds s workmail workspace encryption apis encrypt decrypt api allow encrypt decrypt data km service side never exposing master key content data key generatedatakey api generates new key master key data key content exposed use encrypt decrypt size data application layer km store manage track data key responsible application auditing turn cloudtrail audit km api event access use key policy iam policy grant different level km access example create iam policy allows user encrypt decrypt specific key km tip common company manage key completely via homegrown mechanism far preferable use service km beginning encourages secure design improves policy process around managing key good motivation overview aws presentation cryptographic detail aws whitepaper blog convox demonstrates use km encryption rest km gotchas limitation encrypt api work kb data larger data requires generating managing data key application layer km audit event available cloudtrail lookup event api need look find raw jsongz file cloudtrail save order encrypt multipart upload km key policy need allow kmsdecrypt kmsgeneratedatakey addition kmsencrypt otherwise upload fail accessdenied error km key region specific stored used region created cant transferred region km key key policy must grant access something manage key dont grant anything access key creation reach support key policy reset reduce risk key becoming unmanagable use key policy grant access iam role user delete userrole recreating user role wont grant permission key cloudfront cloudfront basic homepage developer guide faq pricing cloudfront aws content delivery network cdn primary use improving latency end user accessing cacheable content hosting global edge location cloudfront alternative lockin cdns highly fragmented market cloudfront grown leader many alternative might better suit specific need cloudfront tip ipv supported configurable setting enabled default new cloudfront distribution ipv support extends use waf cloudfront http supported client must support tl sni common use user browse download content get head method request cloudfront also support since uploaded data post put delete option patch must enable specifying allowed http method create distribution interestingly cost accepting uploaded data usually le sending downloaded data basic version cloudfront support ssl via sni extension tl supported modern web browser need support older browser need pay hundred dollar month dedicated ip consider invalidation need carefully cloudfront support invalidation object edge location typically take many minute propagate edge location cost per request first request cdns support better everyone use tl nowadays possible ilya grigoriks table offer good summary feature regarding tl performance feature cloudfront alternative invalidation often easier manage instant configure distribution cache query string append unique query string version onto asset updated frequently good web performance recommended enable compression cloudfront distribution origin another source already compress cloudfront gotchas limitation using backing store remember endpoint website hosting general different example bucketnamesamazonawscom standard serving endpoint redirect error page support need use website hosting endpoint listed bucket eg bucketnameswebsiteuseastamazonawscom appropriate region default cloudfront forward http host header origin server problematic origin run multiple site switched host header enable host header forwarding default cache behavior setting bit ssl certificate cloudfront support bit ssl certificate late using externally issued ssl certificate youll need make sure bit see ongoing discussion although connection client cloudfront edge server make use ipv connection origin server continue use ipv directconnect directconnect basic homepage user guide faq pricing direct connect private dedicated connection network aws directconnect tip data center partnering relationship aws setup streamlined use consistent predictable network performance guarantee gbps gbps per link use peer colocation corporate physical datacenter network vpcs example extend corporate ldap andor kerberos ec instance running vpc example make service hosted outside aws financial regulatory legacy reason callable within vpc redshift redshift basic homepage developer guide faq pricing redshift aws managed data warehouse solution massively parallel scalable columnar widely used built using paraccel technology expose postgrescompatible interface redshift alternative lockin whatever data warehouse select business likely locked long time also coincidentally data warehouse market highly fragmented selecting data warehouse choice made carefully research awareness market landscape business intelligence tool youll using redshift tip although redshift mostly postgrescompatible sql dialect performance profile different redshift support primitive data type list unsupported postgres type leader node computation node leader node distributes query computation one note function executed lead node make sure create new cluster parameter group option group database since default parameter group allow dynamic configuration change major thirdparty bi tool support redshift integration see quora top performance tuning technique amazon redshift provides excellent list performance tuning technique amazon redshift utils contains useful utility script view simplify redshift ops vacuum regularly following significant number deletes update reclaim space improve query performance avoid performing blanket vacuum analyze operation cluster level check table determine whether vacuum analyze action need taken wasteful perform analyze vacuum command object require utilize analyze vacuum schema utility perform work sql determine whether table need vacuumed analyzed found schema utility readme wish create maintenance process redshift provides various column compression option optimize stored data size aws strongly encourages user use automatic compression copy stage redshift us sample data ingested analyze column compression option however automatic compression applied empty table data therefore make sure initial load batch big enough provide redshift representative sample data default sample size row redshift us columnar storage hence indexing capability however use distribution key sortkey improve performance redshift two type sort key compounding sort key interleaved sort key compound sort key made column listed sort key definition useful query operation using prefix sortkey interleaved sort key hand give equal weight column subset column sort key dont know ahead time column want choose sorting filtering much better choice compound key example using interleaved sort key distribution strategy since data redshift physically distributed among node choosing right data distribution key distribution style crucial adequate query performance three possible distribution style setting even default key use key collocate join key column table joined query use place data smallsized table cluster node redshift gotchas limitation redshift handle heavy query well scale horizontally ie handle multiple query parallel therefore expect high parallel load consider replicating possible sharding data across multiple cluster leader node manages communication client program communication compute node single point failure although redshift query parallelize well compute node level certain stage executed leader node become bottleneck redshift data commit transaction expensive serialized cluster level therefore consider grouping multiple mutation command copyinsertupdate command single transaction whenever possible redshift support multiaz deployment building multiaz cluster trivial example using kinesis beware storing multiple small table redshift way redshift table laid disk make impractical minimum space required store table mb node slicesnode column example node cluster empty table column occupy mb disk query performance degrades significantly data ingestion wlm workload management tweak help extent however need consistent read performance consider replica cluster extra cost swap update never resize live cluster resize operation take hour depending dataset size rare case operation may also get stuck youll end nonfunctional cluster safer approach create new cluster snapshot resize new cluster shut old one redshift reserved keywords present postgres see full list watch delta delta encoding redshift support many postgres function notably several datetimerelated aggregation function see full list uniqueness primary key foreign key constraint redshift table informational enforced however used query optimizer generate query plan null column constraint enforced see information defining constraint compression sort key result significant performance impact redshift query involving sort key slow might want consider removing compression sort key choosing sort key important since change table sort key created need change sort distribution key table need create new table new key move data query like insert newtable select oldtable moving data query look like insert x select need twice much disk space available table take cluster disk redshift first copy data disk new table good article big table emr emr basic homepage release guide faq pricing emr used stand elastic map reduce anymore since extends beyond mapreduce service offer managed deployment hadoop hbase spark reduces management burden setting maintaining service emr alternative lockin emr based open source technology principle deploy however job workflow much tooling awsspecific migrating emr cluster possible always trivial emr tip emr relies many version hadoop supporting software sure check version use offtheshelf emr hadoop significant overhead compared efficient processing single machine data small performance matter may wish consider alternative post illustrates python programmer may want take look yelp mrjob take time tune performance emr job thirdparty service quboles data service gaining popularity way improve performance reduce cost emr gotchas limitation emr cost pile quickly since involves lot instance efficiency poor depending cluster configuration choice workload accident like hung job costly see section ec cost management especially tip spot instance blog post additional tip written prior shift persecond billing beware doubledipping emr pay ec capacity service fee addition emr syncs task log mean pay storage put request standard rate log file tend relatively small every hadoop job depending size generates thousand log file quickly add thousand dollar aws bill yarn log aggregation available emr kinesis stream kinesis stream basic homepage developer guide faq pricing kinesis stream used called kinesis kinesis firehose kinesis analytics launched service allows ingest highthroughput data stream immediate delayed processing aws service kinesis stream subcomponents called shard shard provides mb write capacity mb read capacity maximum read per second stream shard programmatically increased decreased based variety metric record entered kinesis stream assigned unique sequence number captured record stream ordered number timeordering preserved page summarizes key term concept kinesis stream kinesis stream alternative lockin kinesis closely compared apache kafka opensource data ingestion solution possible set kafka cluster hosted ec instance vps however responsible managing maintaining zookeeper kafka broker highly available configuration confluent good blog post recommendation link bottom several blog written subject kinesis us awsspecific apis aware potential future cost migrating away choose use application efficiently us kinesis stream scale number shard based required streaming capacity note direct equivalent apache kafka kinesis stream tip kcl kinesis client library provides skeleton interface java node python ruby net program easily consume data kinesis stream order start consuming data stream need provide config file point correct kinesis stream function initialising consumer processing record shutting consumer within skeleton provided kcl us dynamodb table keep track record processed kcl ensures record processed least developer ensure program handle doublyprocessed record kcl also us dynamodb keep track kcl worker automatically share available kinesis shard across worker equally possible kinesis stream gotchas limitation kinesis stream shard permit read per second evenly distributing data across many shard read limit stream remain read per second aggregate consuming application need check every single shard new record put hard limit number different consuming application possible per stream given maximum read latency example consuming application reading data one stream number shard cannot read latency le one second consumer need poll shard every second reaching cap read per second per shard blog post discus performance limitation kinesis production kinesis stream included free tier make sure experimentation personal account shut stream may run unexpected cost per shardmonth kinesis firehose kinesis firehose gotchas limitation delivering firehose elasticsearch json document cannot contain id property firehose attempt deliver document wont log error device farm device farm basic homepage developer guide faq pricing device farm aws service enables mobile app testing real device support io android including kindle fire device well mobile web support remote device access order allow interactive testingdebugging device farm tip aws mobile blog contains several example device farm usage testing device farm offer free trial user want evaluate service device farm offer two pricing model paying per device minute useful small usage level situation hard predict usage amount unmetered plan useful situation active usage expected beginning minimize waiting time device availability one approach create several device pool different device randomly choose one unused device pool every run device farm gotchas limitation device dont sim card therefore cant used testing sim cardrelated feature device farm support testing popular languagesframeworks actual list supported framework language presented page api cli device farm quite low level may require developing additional tool script top aws provide several tool plugins device farm however doesnt cover case platform may require developing specific tool plugins support specific requirement general device farm doesnt android device chinese company like huawei meizu lenovo etc actual list supported device located device availibility uneven depends several factor including device popularity usually modern device see higher demand thus waiting time higher compared relatively old device mobile hub mobile hub basic homepage user guide faq pricing mobile hub orchestrates multiple service create aws backend mobile web application project mobile hub one backend made configurable feature plus one application feature include analytics cloud logic conversational bot hosting streaming nosql database user data storage user signin feature us one two service deliver chunk functionality service used include api gateway cloudfront cognito device farm dynamodb lambda lex pinpoint application sdks exist android java io swift web j react native j also cli javascript application mobile hub tip mobile hub console starter kit tutorial various app platform cli allows local development lambda code j default awsmobile pullpush command sync cloud folder back mobile hub free service pricing model mobile hub gotchas limitation cloud api feature allows importing existing lambda function instead defining new one rough edge cli check github issue mobile hub us cloudformation cover get confused service changed outside mobile hub console iot iot basic homepage user guide faq pricing iot platform allowing client iot device software application example communicate aws cloud client also called device thing include wide variety device type roughly three category device type interact iot service sending message iot protocol iot pubsubstyle message broker called iot device gateway send message example aws iot button eddystone beacon send receive process message example simple processing board raspberry pi quick start guide aws device echo echo dot designed work aws alexa skill kit programmable voiceenabled service aws aws useful quickstart using console slide presentation core topic iot term aws iot thing metadata device registry store device state json document called device shadow device metadata also stored iot thing type aid device metadata management allowing reuse device description configuration one device note iot thing type deprecated changed immutable aws iot certificate device authentication logical association unique certificate logical representation device association done console addition public key certificate must copied physical device cover authentication device particular aws device gateway message broker associate aws iot certificate iot device register ca certificate authority aws generate certificate associate certificate device via aws console cli aws iot policy devicetopic authorization json file associated one aws iot certificate authorizes associated device publish andor subscribe message one mqtt topic aws iot rule sqllike query allows reuse device message data described presentation summarizes design pattern iot rule shown diagram summarizes flow message aws iot service iot greengrass homepage greengrass software platform extends aws iot capability allowing lambda function run directly local device also enables iot device able securely communicate local network without connect cloud greengrass includes local pubsub message manager buffer message connectivity lost inbound outbound message cloud preserved locally deployed lambda function triggered local event message cloud source greengrass includes secure authentication authorization device within local network also local network aws cloud also provides secure overtheair software update lambda function greengrass core software includes message manager object lambda runtime local copy service iot thing device shadow deployment agent manage greengrass group configuration greengrass group container selected iot device setting subscription associated lambda function greengrass group device either greengrass core iot device connected particular greengrass core greengrass core sdk enables lambda function interact aws greengrass core run order publish message interact local thing shadow service invoke deployed lambda function aws greengrass core sdk support sending mqtt message qos shown diagram show architecture aws iot greengrass service iot alternative lockin aws microsoft google introduced iotspecific set cloud service since late aws first moving iot service general availability dec microsoft released set iot service azure feb google previewed released iot service android thing weave issue lockin center around device protocol example mqtt amqp message format json v hex security certificate iot tip getting started button one way start use aws iot button aws provides number code sample use iot button use aws iot console click connect aws iot button link youll taken aws lambda console fill button serial number associate lambda writing aws iot button available sale u connection protocol important understand detail device wish connect aws iot service including secure device connection device protocol cloud vendor differ significantly support common iot protocol mqtt amqp xmpp aws iot support secure mqtt websockets http support device security via certificate processing key differentiator space august aws added justintime registration iot device service combining service common use aws service aws lambda kinesis dynamodb although mean required sample iot application reference architecture screencast testing tool get started aws includes lightweight mqtt client aws iot console create test sending receiving message various mqtt topic testing locally using mqtt may helpful download use open source mosquitto broker tool local testing device andor device simulator use mqtt load simulator test device message load throughout iot solution iot gotchas limitation iot protocol important verify exact type support particular iot device message protocol example one commonly used iot protocol mqtt within mqtt three possible level qos mqtt aws iot support mqtt qos fire forget qos least includes confirmation qos exactly requires step confirmation important understanding much code youll need write particular application message resolution need presentation nuance connecting ecosystem match iam user role iot policy associated authorized aws iot device immature custom coding enforce security requirement common common mistake misunderstand importance iot device security imperative associate device unique certificate public key generate certificate upload aws use aws generated iot device certificate best read understand awss guidance topic one aws iot gateway endpoint per aws account production scenario youll probably need set multiple aws account order separate device traffic development test production interesting note azure iot gateway support configuration multiple endpoint single azure account used separate pubsub endpoint development testing production limit aware limit including device message size type frequency number aws iot rule iot code sample simple beer service surprisingly useful code example using aws iot lambda etc iotelf offer clean python sample using aws iot sdk iot button project hackster include many different code sample project iot code example device simulator mqtt sample time registration truck simulator prediction data simulator aws alexa trivia voice example quickstart using alexa voice capability lambda raspberry pi example include beacon project danbo gopigo s s basic homepage documentation faq pricing s simple email service service expose smtp endpoint application directly integrate s tip bounce handling make sure handle early enough ability send email removed s see many bounce credential many developer get confused s credential aws api key make sure enter smtp credential using smtp apis s gotchas limitation internet access s smtp endpoint internet accessible location without internet access eg private subnet without nat gateway route routing table case set smtp relay instance subnet internet access configure application send email smtp relay instance rather s relay forwarding rule send email s using proxy instead nat confirm proxy service support smtp certificate manager certificate manager basic homepage user guide faq pricing use certificate manager manage ssltls certificate aws service support importing existing certificate well issuing new one provides domain validated dv certificate validation done sending email contact address whois common address domain domain name present request late also done via dns instead acm attempt automatically renew certificate issued amazon first attempt connect domain http check certificate used domain certificate intends renew failing check dns record used previously validation failing acm attempt manual validation sending email domain certificate certificate manager alternative lockin certificate issued certificate manager cant used outside service support imported certificate however still used elsewhere certificate manager tip supported service managed load balancer cloudfront api gateway elastic beanstalk domain validation process dns validation unsuccessful certificate manager send email every contact address specified domain whois record five common administrative address antispam filter mark email spam check spam folder email dont receive confirmation email setting certificate test domain dont email set use dns validation instead remember requesting wildcard domain request valid level wildcard subdomains preceding wildcard take example approved issued certificate barexamplecom would valid foobarexamplecom barexamplecom likewise would also valid wwwbarfooexamplecom would need add domain certificate request certificate manager gotchas limitation order use certificate manager cloudfront distribution certificate must issued imported useast n virginia region certificate used elastic load balancer must issued region load balancer certificate moved copied region july domain us load balancer present multiple region different certificate must requested region iot way setting certificate default maximum number domain per certificate get limit increased maximum contacting aws support note every different domain requested cert youll need press accept email sent domain example request cert different domain sub domain youll need press accept different link request limit increase aws support respond asking confirm bypass saying body initial request acknowledge moment method add remove name certificate instead must request new certificate revised namelist must reapprove name certificate even theyd previously approved way moment add remove domain tofrom existing certificate must request new certificate reapprove domain requested waf waf basic homepage documentation faq pricing waf web application firewall used conjunction cloudfront alb service inspect blockallow web request based userconfigurable condition http http request supported service wafs strength detecting malicious activity based patternmatching input attack sql injection x etc waf support inspection request received ipv ipv waf tip getting waf api call history done cloudtrail enabled cloudtrail console also possible get full log web request inspected waf gotchas limitation may aws waf available amazon cloudfront commercial aws region u east n virginia u east ohio u west oregon u west n california eu ireland eu frankfurt eu london eu stockholm asia pacific tokyo asia pacific sydney asia pacific singapore asia pacific seoul opsworks opsworks basic homepage documentation faq pricing stack chef automate puppet enterprise opsworks configuration management service us chef puppet configuration management broken three different service opsworks stack service let configure launch stack specific application need allows automate application deployment chef run performed manually via execute cookbook command otherwise run part lifecycle event opsworks stack differs standard configuration management service also allows perform infrastructure application automation creating amazon ec instance deploying application via chef cookbook opsworks chef automate service launch dedicated chef automate server account used associate node upload coobook code configure system automated patching backup o update minor chef version upgrade provided part service aws api provided associatingdisassociating node chef run scheduled node using chefclient cookbook opsworks puppet enterprise service launch dedicated puppet master account used associate node upload module configure system automated patching backup o update minor puppet version upgrade provided part service aws api provided associatingdisassociating node default puppet agent run automatically every minute associated node opsworks chef automate opsworks puppet enterprise strictly designed configuration management provision infrastructure outside chef serverpuppet master created account three opsworks service support managing amazon ec onpremises infrastructure however implementation detail differ slightly opsworks stack allows register instance install opsworks agent connect stack opsworks chef automate opsworks puppet enterprise allow associate new existing infrastructure using either opsworkscmassociatenode api action vendorsupported method associating node chef server puppet enterprise although opsworks let work common chef recipe puppet module creating stack creating custom recipe require familiarity chef puppet syntax chefpuppet code supported part aws support december opsworks stack support chef version december opsworks chef automate us chef server version current stable version chef berkshelfcan used chef stack version later managing cookbook respective dependency however chef x stack berkshelf must installed stack administrator running chef environment may alternative consider consideration listed bitlancer article opsworks alternative lockin major competitor configuration management include chef puppet ansible opsworks tip opsworks stack opsworks chef automate use chef cookbook configuration chef provides free training learn syntax best practice etc httpslearnchefio opsworks puppet enterprise us puppet manifest configuration puppet provides useful learning vm download httpslearnpuppetcom opsworks gotchas limitation opsworks stack available following region montreal govcloud beijing opsworks chef automate opsworks puppet enterprise available following region montreal sao paulo govcloud london paris seoul mumbai batch batch basic homepage documentation faq pricing aws batch service offer environment run batch computing job service dynamically provision optimal compute resource needed job based resource requirement scale hundred thousand job batch workload access aws service feature aws batch coupled spot instance help run job appropriate capacity available providing optimal utilization compute resource batch workload built docker image image pushed ec container registry ecr private repository accessed aws job definition workload docker image uri also let user specify environment detail like vcpus memory volume mapping environment variable parameter retry strategy container property job iam role compute environment ec cluster provide runtime batch workload execute aws batch provides managed well unmanaged compute environment managed environment provisioned managed aws unmanaged environment managed customer job definition submitted job queue execution queue priority least one compute environment associated aws batch us ec execute containerized job batch tip aws batch support prioritization job via job queue priority higher number higher priority aws batch support launching compute environment specific vpc subnets compute environment ec cluster additional cost aws batch pay cost associated aws service used like ec instance resource consumed batch job associate iam role policy compute environment enable container access aws resource use unmanaged compute environment need specialized resource like dedicated host efs sqs sqs basic homepage documentation faq pricing sqs highly scalable fully managed message queuing service aws sqs support pull model producer queue message consumer pull message queue sqs provides message visibility timeout message processed delivered consumer consumer delete message processing message becomes available consumer upon reaching message visibility timeout parameter called visibilitytimeout message custom field attribute sqs allows producer set minute delay message delivered consumer parameter called delayseconds two type queue supported sqs standard queue guarantee least delivery message retain order delivery message fifo queue guarantee delivery message guarantee order delivery message sqs support fine grained access various api call queue via iam policy message fail process put dead letter queue sqs alternative lockin alternative sqs include kafka rabbitmq activemq others google cloud platform pubsub azure azure queue service sqs v sn sqs tip sn used combination sqs build fan mechanism sqs queue subscribe sn topic sqs support encryption using aws km cloudwatch alarm creating using various sqs metric trigger autoscaling action andor notification sqs gotchas limitation sqs vpc endpoint unlike dynamodb sqs need accessed using public sqs api endpoint fifo queue limited api call per second fifo queue cannot subscribe sn topic standard queue deliver duplicate message regardless visibility window onlyonce delivery choice use fifo queue build additional layer dedupe message sendreceive message batch however maximum message batch sn sn basic homepage documentation faq pricing sn simple notification service pubsub based highly scalable fully managed messaging service also used mobile notification sn push message subscriber via sm email sqs http transport protocol producer publish message sn topic many subscriber subscription associated protocol used notify subscriber copy message sent subscriber using associated protocol sn also invoke lambda function sn alternative lockin popular alternative sn kafka notification hub azure pubsub google cloud sn v sqs sn sqs highly scalable fully managed messaging service provided aws sqs support pull model sn support push model consumer pull message sqs queue theyre pushed message sn topic sqs message intended processed one subscriber sn topic many subscriber processing sqs message deleted queue subscriber avoid reprocessed sn message pushed subscriber topic time available deletion topic sn support multiple transport protocol delivery message subscriber sqs subscriber pull message queue http sn tip fanout architecture achieved multiple subscriber topic particularly useful event fanned multiple isolated system sn topic used power webhooks backoff support subscriber http sqs queue subscribe sn topic sn used manage notification aws service like autoscaling group notification cloudwatch alarm etc sn frequently used glue disparate system github aws service sn gotchas limitation http subscriber sn topic need public endpoint sn support calling private endpoint like private subnet within vpc fanout scenario sseenabled sqs subscriber sn topic receive message sent topic high availability section cover tip information achieving high availability high availability tip aws offer two level redundancy region availability zone az used correctly region zone allow high availability may want use nonaws provider larger business risk mitigation ie tying company one vendor reliability aws across region high multiple region using multiple region complex since essentially like managing completely separate infrastructure necessary businesscritical service highest level redundancy however many application like average consumer startup deploying extensive redundancy across region may overkill high scalability blog good guide help understand need scale application multiple region multiple az using az wisely primary tool high availability typical singleregion high availability architecture would deploy two availability zone load balancing front aws diagram bulk outage aws service affect one zone rare outage affecting multiple zone simultaneously example great eb failure general customer outage due using single az infrastructure consequently design architecture minimize impact az outage especially singlezone outage deploy key infrastructure across least two three az replicating single resource across three zone often wont make sense backup mechanism place like snapshot second third az significantly improve availability additional reliability az may justify cost complexity unless reason like capacity spot market price watch crossaz traffic cost unpleasant surprise architecture large volume traffic crossing az boundary deploy instance evenly across available az minimal fraction capacity lost case az outage architecture single point failure put single az may seem counterintuitive minimizes likelihood one spof go outage single az eb v instance storage number year ebs poorer track record availability instance storage system individual instance killed restarted easily instance storage sufficient redundancy could give higher availability overall eb improved modern instance type since ebsonly approach helpful one time may increasingly archaic sure use understand clbsalbs appropriately many outage due using load balancer misunderstanding misconfiguring high availability gotchas limitation az naming differs one customer account next uswesta another customer uswesta letter assigned physical az randomly per account also gotcha multiple aws account note zone id consistent account used reliably align aws account crossaz traffic free large scale cost add significant amount money possible optimize traffic stay within az much possible billing cost management billing cost visibility aws offer free tier service allows limited usage resource cost example micro instance small amount storage available charge many service eligible free tier first twelve month account exists service offer free usage tier indefinitely old account starting fresh sign new one qualify free tier aws activate extends ten thousand dollar free credit startup certain fund accelerator set billing alert notified unexpected cost cost exceeding free tier set granular way aws offer cost explorer tool get better visibility cost unfortunately aws console billing tool rarely enough give good visibility cost large account aws billing console time slow use tool enable billing report install open source tool help manage monitor aws resource utilization teevity ice originally written netflix probably first one try check dockerice dockerized version eas installation one challenge ice doesnt cover amortized cost reserved instance tool include security monkey cloud custodian use aws simple monthly calculator get estimate usage charge aws service based certain information provide monthly charge based actual usage aws service may vary estimate calculator provided thirdparty service several company offer service designed help gain insight expense lower aws bill cloudability cloudhealth technology parkmycloud charge percentage bill may expensive see market landscape awss trusted advisor another service help cost concern dont shy asking account manager guidance reducing bill job keep happily using aws tagging cost visibility infrastructure grows key part managing cost understanding lie strongly advisable tag resource complexity grows group effectively set billing allocation appropriately get visibility expense according organization product individual engineer way helpful need custom analysis raw billing data want feed third party cost analysis service enable detailed billing report feature multiple amazon account linked billing purpose using consolidated billing feature large enterprise may need complex billing structure depending ownership approval process multiple amazon account managed centrally using aws organization aws data transfer cost deployment involve significant network traffic large fraction aws expense around data transfer furthermore cost data transfer within az within region region aws internet vary significantly depending deployment choice common gotchas aztoaz traffic note ec traffic az effectively region example deploying cassandra cluster across az helpful high availability hurt network cost using public ip necessary use elastic ip public ip address ec instance incur network cost even accessed locally within az managed nat gateway data processing managed nat gateway used let traffic egress private subnetsat cost data processing fee layered top data transfer pricing past certain point running nat instance becomes far cost effective service crossaz traffic free many aws service youd consider merit offer hidden value free crossaz data transfer efs rds msk others example figure give overview ec cost management ec tradeoff engineering effort analysis tool complex architecture spend rate aws ec cost small many effort worth engineering time required make work know cost growing excess engineer salary serious investment often worthwhile larger instance arent necessarily priced higher spot market therefore look available option determine instance cost effective job see bid advisor spot instance ec spot instance way get ec resource significant discount often many time cheaper standard ondemand price youre willing accept possibility terminated little warning use spot instance potentially significant discount whenever use resource may restarted dont maintain longterm state huge saving get spot come cost significant increase complexity provisioning reasoning availability compute capacity amazon maintains spot price marketdriven fluctuating level based inventory unused capacity price typically low spike high see price history get sense set bid price high indicate high youre willing pay pay going rate bid rate market rate exceeds bid instance may terminated price per instance type per availability zone instance type may wildly different price different zone time different instance type different price even similarly powered instance type zone compare price across instance type better deal use spot instance whenever possible setting high bid price assure machine stay vast majority time fraction price normal instance get notified two minute pricetriggered shutdown polling spot instance metadata watching termination cloudwatch event make sure usage profile work well spot investing heavily tool manage particular configuration spot fleet realize even bigger cost reduction time improvement fleet stability relative regular spot usage using spot fleet bid instance across instance type availability zone multiple spot fleet request region spot fleet target maintaining specified weightedbyinstancetype total capacity across cluster server spot price one instance type availability zone combination rise weighted bid rotate running instance bring new one another type location order maintain target capacity without going target cluster cost spot usage best practice application profiling profile application figure runtime characteristic would help give understanding minimum cpu memory disk required information critical try optimize spot cost know minimum application requirement instead resorting fixed instance type bid across variety instance type give higher chance getting spot instance run applicationeg know cpu core enough job choose instance type equal core least spot price based history help bid instance greater discount le demand point spot price monitoring intelligence spot instance price fluctuate depending instance type time day region availability zone aws cli tool api allow describe spot price metadata given time instance type regionaz based history spot instance price could potentially build myriad algorithm would help pick instance type way optimizes cost maximizes availability offer predictable performance also track number time instance certain type got taken away bid plot graphite improve algorithm based time day spot machine resource utilization running spiky workload spark map reduce job schedule based failure non critical spot instance become perfect candidate time take satisfy spot instance could vary min depending type instance availability machine az running infrastructure hundred job spiky nature advisable start pooling instance optimize cost performance importantly time acquire instance pooling implies creating maintaining spot instance get terminated use promotes reuse spot instance across job course come overhead lifecycle management pooling set metric tracked optimize resource utilization efficiency cost typical pooling implementation give anywhere cost optimization reduction spot instance creation time excellent example pooling implementation described netflix part part spot management gotchas lifetime guarantee lifetime spot instance purely based bidding anyone outbids price instance taken away spot suitable time sensitive job strong sla instance fail based demand spot time aws provides twominute warning amazon ec must terminate spot instance api return data spot price api return spot price varying granularity depending time range specified api calleg last min worth history requested data fine grained last day worth history requested data coarser assume get data point skipped interval lifecycle management attempt fancy spot management unless absolutely necessary entire usage machine cost acceptable failure rate lower attempt optimize pain buildingmaintaining worth hundred dollar saving reserved instance allow get significant discount ec compute hour return commitment pay instance hour specific instance type specific aws region availability zone preestablished time frame year discount realized partial upfront payment option consider using reserved instance predict longerterm compute need need stronger guarantee compute availability continuity typically cheaper spot market provide however aware architecture change computing need may change well long term contract seem attractive may turn cumbersome two type reserved instance standard convertible purchase excess standard reserved instance may offer sell back unused reserved instance via reserved instance marketplace allows potentially recoup cost unused ec compute instance hour selling aws customer instance reservation tied specific ec instance applied billing level eligible compute hour consumed across instance account scattered report convertible ri purchase needing exercised block namely buy five convertible ri one purchase cant convert two reach account manager clarification may impact multiple aws account configured roll charge one account using consolidated billing feature expect unused reserved instance hour one account applied matching region availability zone instance type compute hour another account multiple aws account linked consolidated billing plan using reservation want unused reservation capacity able apply compute hour account youll need create instance availability zone name across account keep mind done instance may end physical data center across account amazon shuffle availability zone name across account order equalize resource utilization make use dynamic auto scaling possible order better match cluster size cost current resource requirement service use rhel instance happen existing rhel onpremise red hat subscription leverage red hat cloud access program migrate portion onpremise subscription aws thereby saving aws charge rhel subscription either use selfcreated rhel amis red hat provided gold image added private amis sign red hat cloud access reading section cover unusually useful must know resource list aws aws plain english readable overview aws service awesome aws curated list aws tool software aws tip wish id known started list tip rich adam aws whitepapers list technical aws whitepapers covering topic architecture security economics last week aws weekly email newsletter covering latest happening aws ecosystem aws geek blog aws community hero jerry hargrove note handdrawn diagram various aws service book amazon web service action aws lambda action serverless architecture aws serverless single page apps terraform book aws scripted book series amazon web service dummy aws system administration python aws cookbook resilience reliability aws aws documentation kindle ebooks general reference aws well architected framework guide amazon page guide operational excellence guideline checklist validate baseline security reliability performance including high availability cost optimization practice awesome microservices curated list tool technology microservice architecture worth browsing learn popular open source project fast yet ilya grigoriks tl performance overview high performance browser networking full modern book web network performance presentation http portion disclaimer author contributor content cannot guarantee validity information found please make sure understand information provided provided freely kind agreement contract created person associated content project author contributor assume hereby disclaim liability party loss damage disruption caused error omission information contained associated linked content whether error omission result negligence accident cause license work licensed creative common attributionsharealike international license
63,Shell,GitHub - shengxinjing/programmer-job-blacklist: Á®ãÂ∫èÂëòÊâæÂ∑•‰ΩúÈªëÂêçÂçïÔºåÊç¢Â∑•‰ΩúÂíåÂΩìÊäÄÊúØÂêà‰ºô‰∫∫ÈúÄË∞®ÊÖéÂïä Êõ¥Êñ∞ÊúâËµû,"Á®ãÂ∫èÂëòÊâæÂ∑•‰ΩúÈªëÂêçÂçï
üêåÊàë‰πüÂè™ÊòØÂõ¥ËßÇÁæ§‰ºóÔºåËÉåÂêéÁöÑÁúüÁõ∏Â§ßÂÆ∂Ëá™Â∑±Âà§Êñ≠ÔºåÊàëÂè™ÊòØÂçïÁ∫ØÁöÑÊî∂Ëóè‰∏Ä‰∫õÈìæÊé•Ôºå‰∏çÂñúÂãøÂñ∑ÔºåÊ¨¢ËøéÂ§ßÂÆ∂ÂÖ≥Ê≥®ÊàëÂæÆÂçöÂíåÊèê issues Êù•ÂèÇ‰∏éÁª¥Êä§Ëøô‰∏™ÂêçÂçï
ÊúÄËøëÁöÑ‰∫ãÊÉÖ ËÆ©ÊàëÊÑèËØÜÂà∞ Êúâ‰∫õÂêåË°å‰πüÊòØÂä£ËøπÊñëÊñëÔºåÈúÄË¶ÅËÆ∞ÂΩï‰∏Ä‰∏ã ‰ª•ÂêéÂ§ßÂÆ∂ÊãõËÅòÊ≥®ÊÑè
ÂÜôÂú®ÂâçÈù¢
Ë∞¢Ë∞¢ issues ÊèêÈÜí
È¶ñÂÖàÔºåÊØè‰∏Ä‰∏™Á®ãÂ∫èÁåøÔºåÊØè‰∏Ä‰∏™ÂÖ¨Âè∏ÈÉΩÊúâÈªëÁÇπÔºå‰ΩÜÊòØÂ¶ÇÊûúÊääÈªëÁÇπÊîæÂ§ß‰∫ÜÔºåÈªëÂêçÂçïÂ∞±Ê≤°Â≠òÂú®ÁöÑÊÑè‰πâ‰∫Ü„ÄÇÂ∞±ÊãøËøôÂá†‰∏™‰æãÂ≠êÊù•Âêß


‰∏ñÁ∫™‰Ω≥ÁºòËÆ§‰∏∫ÁôΩÂ∏ΩÂ≠êÔºåÊòØËøùÊ≥ïÁöÑ

ËôΩÁÑ∂Ëøô‰ª∂‰∫ãÊòØÊàëÊÄíÂºÄ repo ÁöÑËµ∑Âõ†Ôºå‰ΩÜÊòØ‰ªñÊ≤°ÊúâÊãñÊ¨†ÂëòÂ∑•Â∑•ËµÑÊàñ‰∏ç‰ªòÂ∑•ËµÑ



‰∏éÂàõÂßã‰∫∫ËØ¥ÁöÑËÇ°‰ªΩÔºåÈÇ£ÊòØ‰∏™‰∫∫‰∫âÂèñÁöÑ‰∫ã

‰πüÊ≤°ÊãñÊ¨†Â∑•ËµÑÊàñ‰∏ç‰ªòÂ∑•ËµÑ
Âè™ÊòØËÆ∞‰Ωè‰ª•ÂêéËÆ∞ÂæóÁïô‰∏™ÂøÉÁúºÔºåÂíåÂêà‰ºô‰∫∫‰∏çÊòØÂè™ÂÜô‰ª£Á†ÅÂ∞±ÂèØ‰ª•ÁöÑ



Âçé‰∏∫Ê∏ÖÁêÜ 34 Â≤Å‰ª•‰∏äÂëòÂ∑•Ôºå‰πüÊòØÊåâÁÖßÂêàÂêåË£ÅÂëòÔºåÁªôËµîÂÅø

Â§ßÂÖ¨Âè∏Êõ¥Êñ∞Êç¢‰ª£ÔºåË£ÅÂëòÊ≤°Êúâ‰ªª‰ΩïÈóÆÈ¢òÔºå‰∏çË£ÅÂëòÁöÑÂÖ¨Âè∏Êó©ÊôöÂÄíÈó≠
Âçé‰∏∫‰πüÊ≤°ÊúâÊãñÊ¨†Â∑•ËµÑ
Âè™ÊòØÊàë‰∏™‰∫∫ËßâÂæóÔºåÂõ†‰∏∫Ëøô‰ª∂‰∫ãÔºå‰∏çÊÉ≥ÂéªÂçé‰∏∫Â∑•‰Ωú ‰ªÖÊ≠§ËÄåÂ∑≤ÔºåÂÆ≥ÊÄïÂà∞‰∫Ü34Â∞±Ë¢´Âπ≤Êéâ



Êúâ‰∫õ‰∫ãÊÉÖÔºåÂ∫îËØ•Ë¢´ËÆ∞‰Ωè


Á®ãÂ∫èÂëòÈªëÂêçÂçï

Â¶Ç‰ΩïÁúãÂæÖÊë©ÊãúÂâçÁ´ØË¥üË¥£‰∫∫Â∞èÊò•ÔºàÂº†ËÄÄÊò•ÔºâÁñë‰ººÊÄßÈ™öÊâ∞Â•≥‰∏ãÂ±ûÔºü

ÊôÆÈÄöÁ®ãÂ∫èÂëò


Êù≠Â∑ûÊúâËµû

Â¶Ç‰ΩïÁúãÂæÖ‚ÄúÊúâËµû‚ÄùÂπ¥‰ºöÂÖ¨ÂºÄÂÆ£Â∏É996Â∑•‰ΩúÂà∂Ôºü
ÊúâËµû‰ºöÂæóÂà∞Ê≥ïÂæãÁöÑÊÉ©ÁΩöÂêóÔºü
ËÑâËÑâÂåøÂêçÂå∫ÁöÑÊúâËµûÂëòÂ∑•



‰æøÂà©ËúÇ

Âπ¥Â∫ïÁªÑÁªáÊï∞Â≠¶ËÄÉËØïÔºåËÄÉËØï‰∏çÂèäÊ†ºÂ∞±ÂºÄÈô§„ÄÇ
ËÑâËÑâÂåøÂêçÂå∫ÁöÑ‰æøÂà©ËúÇ



‰∏äÊµ∑Á¢ßÂçé‰ø°ÊÅØÊäÄÊúØÊúâÈôêÂÖ¨Âè∏

AndroidÂºÄÂèëËÄÖÁöÑËâ∞ÈöæËÆ®Ëñ™Ë∑ØÁ®ã



‰∏ñÁ∫™‰Ω≥Áºò

ÁôΩÂ∏Ω‰∫ã‰ª∂



Ë•øÂ±±Â±Ö

Â¶Ç‰ΩïÁúãÂæÖË•øÂ±±Â±ÖËøëÊúüÁöÑÂ§ßËßÑÊ®°„ÄåÂäùÈÄÄ„Äç



ÁôæÂ∫¶Êó†‰∫∫ËΩ¶

Â¶Ç‰ΩïÁúãÂæÖ‰∏∫‰∫ÜÊåëÊàòÁôæÂ∫¶Êó†‰∫∫ËΩ¶ÂÆâÂÖ®ÊÄßÔºåÊùéÂΩ¶ÂÆèËØï‰πòÊó∂ËÆ©Â∑•Á®ãÂ∏à‰∫∫‰∏∫Êã¶ËΩ¶Ôºü



Ëß¶ÊéßÁßëÊäÄ

Â¶Ç‰ΩïÁúãÂæÖËß¶Êéß‰∏éÂªñÂ§ßËß£Á∫¶Ôºü



Âçé‰∏∫

Âçé‰∏∫Ê∏ÖÁêÜ 34 Â≤Å‰ª•‰∏äÂëòÂ∑•
‰ªªÊ≠£ÈùûÂõûÂ∫îÂçé‰∏∫Ê∏ÖÁêÜËÄÅÂëòÂ∑•ÔºöÂçé‰∏∫‰∏çÂÖªÂêÉÁôΩÈ•≠ÁöÑ‰∫∫



Èü≥ÊÇ¶Âè∞

‰Ω†‰∏∫‰ªÄ‰πà‰ªéÈü≥ÊÇ¶Âè∞Á¶ªËÅåÔºü



Áè†Êµ∑Êó∂‰ª£‰∫íËÅî

Âú®Áè†Êµ∑Êó∂‰ª£‰∫íËÅî(‰ºòÂìÅÁßëÊäÄ)Â∑•‰ΩúÊòØÊÄéÊ†∑‰∏ÄÁï™‰ΩìÈ™å
Á¨¨‰∏ÄÊ¨°Âê¨ËØ¥Â∑•ËµÑÂèØ‰ª•ÊâìÂÖ´Êäò



ÈòøÈáåÈíâÈíâ

Â¶Ç‰ΩïÁúãÂæÖÈòøÈáå„ÄåÊ≠•Êï∞Âû´Â∫ïÁΩöÁ´ô‰∏ÄÂë®„Äç



4399

‰Ω†‰∏∫‰ªÄ‰πà‰ªé 4399 Á¶ªËÅåÔºü



ÈÖ∑Ê¥æ

Â¶Ç‰ΩïÁúãÂæÖÈÖ∑Ê¥æÂú®ÊØï‰∏öÂÖ•ËÅåÂâçÂ§ïÁñë‰ººËß£Á∫¶ 300 ‰ΩôÂêçÊ†°ÊãõÂ∫îÂ±äÊØï‰∏öÁîüÔºü



ËõãÂ£≥ÂÖ¨ÂØì

ÊàëÂú®ËõãÂ£≥ÂÖ¨ÂØìÁöÑÊâìÂ∑•ËÆ∞ÂΩï



ÊòéÊòüË°£Ê©±

Â¶Ç‰ΩïÁúãÂæÖÊòéÊòüË°£Ê©±ÊúâÈí±ÊêûVRËØïË°£Èó¥ÔºåÂç¥ÊãñÊ¨†ÂëòÂ∑•Â∑•ËµÑËææ1Âπ¥‰ª•‰∏äÔºü
ËÖæËÆØÊñ∞Èóª

ÈªÑÊôìÊòéÊäïÁöÑÊòéÊòüË°£Ê©±Ë¢´ÁàÜÈïøÊúüÊãñÊ¨†Ëñ™ËµÑ ÂëòÂ∑•Â∑≤Ê±ÇÂä©Ê≥ïÂæãËß£ÂÜ≥
Ê¨†Ê¨æÊ¨†Ëñ™Ê≤°ËûçËµÑÔºåÊòéÊòüË°£Ê©±ËÄÅÊùøË¶ÅÊê∫Â∞è‰∏âË∑ëË∑Ø‰∫ÜÔºü


Êñ∞Êµ™Ë¥¢Áªè

ÊòéÊòüË°£Ê©±ÁîüÊ≠ªÂ±Ä:ÊãñÊ¨†ÂëòÂ∑•Â∑•ËµÑ ËÆ§‰∏∫ËÆ®Ëñ™ÁöÑÊòØËêΩ‰∫ï‰∏ãÁü≥|ËûçËµÑ|Âº†Êô®|ÊµôÊ±üÊ∞∏Âº∫_Êñ∞Êµ™Ë¥¢Áªè_Êñ∞Êµ™ÁΩë





ÊäÄÊúØÂêà‰ºô‰∫∫

Èùí‰∫ë

Áü•‰πéÔºö‰Ω†Â¶Ç‰ΩïÁúãÈùí‰∫ëÂëòÂ∑•ÊúüÊùÉÂêàÂêåÊ¨∫ËØà‰∫ã‰ª∂Ôºü


Ë°£Ê†ºÈπø

‰Ωú‰∏∫‰∏Ä‰∏™ÊäÄÊúØÂêà‰ºô‰∫∫ÔºåÂ¶ÇÊûúÁ¢∞Âà∞‰∫ÜËøôÊ†∑ÁöÑÂÖ¨Âè∏ËøôÊ†∑ÁöÑ‰∫ãÊÉÖÔºå‰Ω†ËØ•ÊÄé‰πàÂäûÔºü
Ë¢´„ÄåÊäÄÊúØÂêà‰ºô‰∫∫„ÄçÈîÄÊØÅÂà†Èô§‰ª£Á†ÅÊï∞ÊçÆ„ÄÅÂÖ≥ÂÅúÊúçÂä°Âô®ÔºåÊíïÈÄºÂèçÂí¨ÊòØ‰∏ÄÁßç‰ªÄ‰πàÊ†∑ÁöÑ‰ΩìÈ™åÔºü


‰∏ÅÈ¶ôÂõ≠

Â¶Ç‰ΩïÁúãÂæÖÂÜØÂ§ßËæâÔºàFenngÔºâ‰ªé‰∏ÅÈ¶ôÂõ≠Á¶ªËÅåÔºü


4399

ÊõπÊîøÔºàcaozÔºâÊòØ‰∏çÊòØË¢´ 4399 ÁöÑËî°ÊñáËÉúÁöÑËôöÂÅáÊâøËØ∫Ê¨∫È™ó‰∫ÜÔºü
Â¶Ç‰ΩïÁúãÂæÖËî°ÊñáËÉúÊääÊõπÊîøÁªôÂùë‰∫ÜËøô‰ª∂‰∫ãÔºü


55Êµ∑Ê∑ò

Âú® 55 Êµ∑Ê∑òÂ∑•‰ΩúÊòØÊÄé‰πàÊ†∑‰∏ÄÁßç‰ΩìÈ™åÔºü


ÂºÇ‰π°Â•ΩÂ±Ö

Â¶Ç‰ΩïÁúãÂæÖÂºÇ‰π°Â•ΩÂ±ÖËÄÅÊùøÂ®òÊéßÂëäÁ®ãÂ∫èÂëòÂà†‰ª£Á†ÅÔºü
Êàë‰∏∫‰ªÄ‰πà‚ÄúÊòéÁõÆÂº†ËÉÜ‚ÄùÂú∞ÂíåÂºÇ‰π°Â•ΩÂ±ÖÊíïÈÄºÔºüÂõ†‰∏∫ÊàëÊòØÂçÉÂçÉ‰∏á‰∏áÊôÆÈÄöÁ®ãÂ∫èÂëòÁöÑ‰∏ÄÂêç


Âåó‰∫¨Â±ïÁ®ãÁßëÊäÄ

Â∞±ÁÆóËÄÅÂÖ¨‰∏ÄÊØõÈí±ËÇ°‰ªΩÈÉΩÊ≤°ÊãøÂà∞ÔºåÂú®ÊàëÂøÉÈáåÔºå‰ªñ‰æùÁÑ∂ÊòØÊúÄÁâõÈÄºÁöÑÂàõ‰∏öËÄÖ
Â¶Ç‰ΩïËØÑ‰ª∑„ÄäÂ∞±ÁÆóËÄÅÂÖ¨‰∏ÄÊØõÈí±ËÇ°‰ªΩÈÉΩÊ≤°ÊãøÂà∞ÔºåÂú®ÊàëÂøÉÈáåÔºå‰ªñ‰æùÁÑ∂ÊòØÊúÄÁâõÈÄºÁöÑÂàõ‰∏öËÄÖ„ÄãÈáåÈù¢Ëøô‰Ωç CEO ÁöÑÊâÄ‰ΩúÊâÄ‰∏∫Ôºü
ÂØπÈÇ£‰∏™Âàõ‰∏öËÄÖÁöÑÂ¶ªÂ≠êÊèê‰∏Ä‰∏™ÈóÆÈ¢òÔºå‰∏Ä‰∏™Âª∫ËÆÆ
‰Ωú‰∏∫Èô§ÂΩì‰∫ã‰∫∫Â§ñÊúÄÊúâÊùÉÂäõÂèëË®ÄÁöÑ‰∫∫ÔºåË∞àË∞à„ÄäÂ∞±ÁÆóËÄÅÂÖ¨‰∏ÄÊØõÈí±ËÇ°‰ªΩÈÉΩÊ≤°ÊãøÂà∞ÔºåÂú®ÊàëÂøÉÈáåÔºå‰ªñ‰æùÁÑ∂ÊòØÊúÄÁâõÈÄºÁöÑÂàõ‰∏öËÄÖ„Äã


‰πêÊõºÂ§öÁßëÊäÄ

Â¶Ç‰ΩïËØÑ‰ª∑ÊàêÈÉΩ‰πêÊõºÂ§öÂÖ¨Âè∏Êâì‰∫∫‰∫ã‰ª∂Ôºü
ÊÄé‰πàÁúãÂæÖ„ÄäË°óÁØÆ„ÄãÊâãÊ∏∏Á†îÂèëÂïÜÔºåÊàêÈÉΩ‰πêÊõºÂ§öÁßëÊäÄËøëÊó•ÂèëÁîüÁöÑÊÆ¥ÊâìÁ®ãÂ∫èÂëò‰∫ã‰ª∂Ôºü


Âåó‰∫¨ËÅöÈÅìÁßëÊäÄÊúâÈôêÂÖ¨Âè∏

Ê±â‰∏úÂÆòÂú∫ÁÆó‰ªÄ‰πàÔºåÊàëË¢´ÂàõÊäïÂúà‚ÄúÊöóÁÆó‚ÄùÁöÑÁªèÂéÜÔºåÊ≤ô‰π¶ËÆ∞ÈÉΩÊû∂‰∏ç‰Ωè



‰∏çÁ°ÆÂÆöÁöÑ

Á•ûËàüÊ∑±Âú≥ÊÄªÈÉ®

Á•ûËàüÁîµËÑëÊ∑±Âú≥ÊÄªÈÉ®ÊòØÂê¶Â∏∏Âú®Ê†°Êãõ‰πãÂêéÂá∫Áé∞Â§ßËßÑÊ®°Á¶ªËÅåÔºü‰∏∫‰ªÄ‰πàÔºüÂ¶Ç‰ΩïËØÑ‰ª∑Ôºü



ÈÄâÂÖ¨Âè∏

Âª∫ËÆÆÂ§ßÂÆ∂Âú®ÈÄâÊã©ÂÖ¨Âè∏ÁöÑÊó∂ÂÄôÊë∏Êë∏Â∫ïÂ≠ê http://tianyancha.com ÔºåÂèëÁé∞ÊúâÈóÆÈ¢òÁõ¥Êé•ÈóÆË¥üË¥£‰∫∫ÁúÅÁöÑÂêÉÂìëÂ∑¥‰∫è„ÄÇ
Áü•‰πéÂêàÈõÜÔºöÊúâÂì™‰∫õÂÖ¨Âè∏Áªô‰Ω†Áïô‰∏ã„ÄåËøòÂ•ΩÊ≤°ÂéªËøôÂÆ∂ÂÖ¨Âè∏„ÄçÁöÑÂç∞Ë±°Ôºü

ÂΩìÊäÄÊúØÂêà‰ºô‰∫∫Âª∫ËÆÆ

ÈÄâËá™ÂÜØÂ§ßËæâÁöÑÂæÆÂçö Âè™ÂÜô‰ª£Á†ÅÂíåÂΩìÂêà‰ºô‰∫∫ÔºåËøòÊòØÊúâÂæàÂ§ßÂ∑ÆÂà´ÁöÑÔºåÊàëËßâÂæó‰∏äÈù¢ÁöÑÂª∫ËÆÆÂæà‰∏≠ËÇØ

ÊúÄÂêé


ÊúÄÂêéËØ¥‰∏Ä‰∏ãÂøÉÂæóÔºåÁ´üÁÑ∂ËøòÊúâÂ∏åÊúõ GitHub Â§ÑÁêÜËøô‰∏™ repoÔºåÂéüÂõ†ÊòØÊÉ≥Áª¥Êä§githubËøô‰ªΩÁ∫ØÂáÄÔºåËøòÊää GitHub Ë¢´Â¢ôÂíåÊàëÊåÇÈí©ÔºåÊàëÁúüÊòØÈÜâ‰∫ÜÔºåÂ∞±ÂÉè‰∏ÄÁæ§ÂæÖÂÆ∞ÁöÑÁæîÁæäÔºåÂøÉÊÉ≥ÁùÄÂè™Ë¶ÅËÄÅÂÆû‰∏ÄÁÇπÔºåÂÆ∞ÁöÑÂ∞±ÊòØÂà´‰∫∫‰∏çÊòØÊàë‰∏ÄÊ†∑


ÊàëÂè™ÊòØËÆ∞ÂΩï‰∏Ä‰∏ãËá™Â∑±ÁúãÂà∞ËøáÁöÑ‰∫ã‰ª∂ÔºåÊàëËá™Â∑±‰∏ãÊ¨°Êç¢Â∑•‰ΩúÁöÑÊó∂ÂÄôÈò≤Ê≠¢Ë∏©ÂùëÔºå‰ªÖÊ≠§ËÄåÂ∑≤


Êàë‰πüÊ≤°ÊúâÈÇ£‰πàÊÑ§‰∏ñÂ´â‰øóÔºåÊØîÂ¶ÇÊàë‰ª•ÂêéÊç¢Â∑•‰ΩúÔºåËøòÊòØ‰ºöËÄÉËôëÁôæÂ∫¶ÈòøÈáåÁöÑÔºå‰ΩÜÊòØ‰ºöÈÅøÂÖç‰∏äÈù¢Âá∫Áé∞ÁöÑÂùëÔºåÊØîÂ¶ÇÁôæÂ∫¶Êó†‰∫∫ËΩ¶ÊàëÂ∞±‰∏çÂéªÂï¶ÔºåÈòøÈáåÁöÑÂÖ∂‰ªñÂæàÂ§öÈÉ®Èó®ËøòÊòØÂæàÊ£íÁöÑÔºåÂ∏åÊúõÂà∞Êó∂ÂÄô‰∏ç‰ºöÂõ†‰∏∫Ëøô‰∏™ÂêçÂçïÊääÊàë pass ÂêßüòÇ



Ê±ÇstarÔºåÊîØÊåÅÊàëÁªßÁª≠ÊääËøô‰∏™ÂêçÂçïÁª¥Êä§‰∏ãÂéª,Ë∞¢Ë∞¢ÊîØÊåÅ

",issues issues repo android vr fenng caoz ceo httptianyanchacom github repogithub github pass star,issu issu repo android vr fenng caoz ceo httptianyanchacom github repogithub github pass star,issue issue repo android vr fenng caoz ceo httptianyanchacom github repogithub github pas star
64,Shell,GitHub - tldr-pages/tldr: üìö Simplified and community-driven man pages,"tldr






A collection of simplified and community-driven man pages.
Install it with npm install -g tldr
or try the web client.
What is tldr?
New to the command-line world? Or just a little rusty?
Or perhaps you can't always remember the arguments to lsof, or tar?
Maybe it doesn't help that the first option explained in man tar is:
-b blocksize
   Specify the block size, in 512-byte records, for tape drive I/O.
   As a rule, this argument is only needed when reading from or writing to tape drives,
   and usually not even then as the default block size of 20 records (10240 bytes) is very common.

Surely people could benefit from simplified man pages
focused on practical examples.
How about:

This repository is just that: an ever-growing collection of examples
for the most common UNIX / Linux / macOS / SunOS commands.
Clients
You can access these pages on your computer using one of the following clients:

Alfred Workflow
Android clients:

tldroid, available on
Google Play (outdated)


Bash clients:

tldr
tldr-bash-client


C# client
C++ client:
brew install tldr
Chrome Extension available on
Chrome Web Store
Crystal client:
brew install porras/tap/tlcr
Dart client:
pub global activate tldr
Dash docset:
Open Preferences > Downloads > User Contributed and find tldr pages in the list
Docker images:

tldr-docker- Run the tldr command via a docker container: alias tldr='docker run --rm -it -v ~/.tldr/:/root/.tldr/ nutellinoit/tldr'


Elixir client
(binaries not yet available)
Emacs client, available on
MELPA
Go clients:

github.com/pranavraja/tldr:
go get github.com/pranavraja/tldr
(or platform binaries)
4d63.com/tldr:
go get 4d63.com/tldr or brew install 4d63/tldr/tldr
(or platform binaries)
github.com/elecprog/tldr:
go get github.com/elecprog/tldr
(or platform binaries)
github.com/isacikgoz/tldr:
go get github.com/isacikgoz/tldr
(or platform binaries)


iOS clients:

tldr-man-page, available on
App Store
tldr-pages, available on
App Store


Haskell client:
stack install tldr
Node.js client:
npm install -g tldr
OCaml client: opam install tldr
Perl5 client:
cpanm App::tldr
PHP client:
composer global require brainmaestro/tldr
Python clients:

tldr-python-client:
pip install tldr or pacman -S tldr on Arch Linux
tldr.py:
pip install tldr.py


R client:
devtools::install_github('kirillseva/tldrrr')
Ruby client:
gem install tldrb
Rust client:
cargo install tealdeer
Vim Client
Visual Studio Code extension available on Visual Studio Code Marketplace
Web clients:

tldr.jsx: http://tldr.ostera.io/
DistroWatch



There is also a comprehensive
list of clients in our Wiki.
Contributing

Your favourite command isn't covered?
You can think of more examples for an existing command?

Contributions are most welcome!
We strive to maintain a welcoming and collaborative community.
Have a look at the contributing guidelines, and go ahead!
Similar projects


Cheat
allows you to create and view interactive cheatsheets on the command-line.
It was designed to help remind *nix system administrators of options
for commands that they use frequently, but not frequently enough to remember.


Bro pages
are a highly readable supplement to man pages.
Bro pages show concise, common-case examples for Unix commands.
The examples are submitted by the user base, and can be voted up or down;
the best entries are what people see first when they look up a command.


eg
provides detailed examples with explanations on the command line.
Examples come from the repository, but eg supports displaying
custom examples and commands alongside the defaults.


What does ""tldr"" mean?
TL;DR stands for ""Too Long; Didn't Read"".
It originates in Internet slang, where it is used to indicate that a long text
(or parts of it) has been skipped as too lengthy.
Read more in Wikipedia's TL;DR article.
",tldr collection simplified communitydriven man pages install npm install g tldr try web client tldr new commandline world little rusty perhaps cant always remember arguments lsof tar maybe doesnt help first option explained man tar b blocksize specify block size byte records tape drive io rule argument needed reading writing tape drives usually even default block size records bytes common surely people could benefit simplified man pages focused practical examples repository evergrowing collection examples common unix linux macos sunos commands clients access pages computer using one following clients alfred workflow android clients tldroid available google play outdated bash clients tldr tldrbashclient c client c client brew install tldr chrome extension available chrome web store crystal client brew install porrastaptlcr dart client pub global activate tldr dash docset open preferences downloads user contributed find tldr pages list docker images tldrdocker run tldr command via docker container alias tldrdocker run rm v tldrroottldr nutellinoittldr elixir client binaries yet available emacs client available melpa go clients githubcompranavrajatldr go get githubcompranavrajatldr platform binaries dcomtldr go get dcomtldr brew install dtldrtldr platform binaries githubcomelecprogtldr go get githubcomelecprogtldr platform binaries githubcomisacikgoztldr go get githubcomisacikgoztldr platform binaries ios clients tldrmanpage available app store tldrpages available app store haskell client stack install tldr nodejs client npm install g tldr ocaml client opam install tldr perl client cpanm apptldr php client composer global require brainmaestrotldr python clients tldrpythonclient pip install tldr pacman tldr arch linux tldrpy pip install tldrpy r client devtoolsinstallgithubkirillsevatldrrr ruby client gem install tldrb rust client cargo install tealdeer vim client visual studio code extension available visual studio code marketplace web clients tldrjsx httptldrosteraio distrowatch also comprehensive list clients wiki contributing favourite command isnt covered think examples existing command contributions welcome strive maintain welcoming collaborative community look contributing guidelines go ahead similar projects cheat allows create view interactive cheatsheets commandline designed help remind nix system administrators options commands use frequently frequently enough remember bro pages highly readable supplement man pages bro pages show concise commoncase examples unix commands examples submitted user base voted best entries people see first look command eg provides detailed examples explanations command line examples come repository eg supports displaying custom examples commands alongside defaults tldr mean tldr stands long didnt read originates internet slang used indicate long text parts skipped lengthy read wikipedias tldr article,tldr collect simplifi communitydriven man page instal npm instal g tldr tri web client tldr new commandlin world littl rusti perhap cant alway rememb argument lsof tar mayb doesnt help first option explain man tar b blocksiz specifi block size byte record tape drive io rule argument need read write tape drive usual even default block size record byte common sure peopl could benefit simplifi man page focus practic exampl repositori evergrow collect exampl common unix linux maco suno command client access page comput use one follow client alfr workflow android client tldroid avail googl play outdat bash client tldr tldrbashclient c client c client brew instal tldr chrome extens avail chrome web store crystal client brew instal porrastaptlcr dart client pub global activ tldr dash docset open prefer download user contribut find tldr page list docker imag tldrdocker run tldr command via docker contain alia tldrdocker run rm v tldrroottldr nutellinoittldr elixir client binari yet avail emac client avail melpa go client githubcompranavrajatldr go get githubcompranavrajatldr platform binari dcomtldr go get dcomtldr brew instal dtldrtldr platform binari githubcomelecprogtldr go get githubcomelecprogtldr platform binari githubcomisacikgoztldr go get githubcomisacikgoztldr platform binari io client tldrmanpag avail app store tldrpage avail app store haskel client stack instal tldr nodej client npm instal g tldr ocaml client opam instal tldr perl client cpanm apptldr php client compos global requir brainmaestrotldr python client tldrpythoncli pip instal tldr pacman tldr arch linux tldrpi pip instal tldrpi r client devtoolsinstallgithubkirillsevatldrrr rubi client gem instal tldrb rust client cargo instal tealdeer vim client visual studio code extens avail visual studio code marketplac web client tldrjsx httptldrosteraio distrowatch also comprehens list client wiki contribut favourit command isnt cover think exampl exist command contribut welcom strive maintain welcom collabor commun look contribut guidelin go ahead similar project cheat allow creat view interact cheatsheet commandlin design help remind nix system administr option command use frequent frequent enough rememb bro page highli readabl supplement man page bro page show concis commoncas exampl unix command exampl submit user base vote best entri peopl see first look command eg provid detail exampl explan command line exampl come repositori eg support display custom exampl command alongsid default tldr mean tldr stand long didnt read origin internet slang use indic long text part skip lengthi read wikipedia tldr articl,tldr collection simplified communitydriven man page install npm install g tldr try web client tldr new commandline world little rusty perhaps cant always remember argument lsof tar maybe doesnt help first option explained man tar b blocksize specify block size byte record tape drive io rule argument needed reading writing tape drive usually even default block size record byte common surely people could benefit simplified man page focused practical example repository evergrowing collection example common unix linux macos sunos command client access page computer using one following client alfred workflow android client tldroid available google play outdated bash client tldr tldrbashclient c client c client brew install tldr chrome extension available chrome web store crystal client brew install porrastaptlcr dart client pub global activate tldr dash docset open preference downloads user contributed find tldr page list docker image tldrdocker run tldr command via docker container alias tldrdocker run rm v tldrroottldr nutellinoittldr elixir client binary yet available emacs client available melpa go client githubcompranavrajatldr go get githubcompranavrajatldr platform binary dcomtldr go get dcomtldr brew install dtldrtldr platform binary githubcomelecprogtldr go get githubcomelecprogtldr platform binary githubcomisacikgoztldr go get githubcomisacikgoztldr platform binary io client tldrmanpage available app store tldrpages available app store haskell client stack install tldr nodejs client npm install g tldr ocaml client opam install tldr perl client cpanm apptldr php client composer global require brainmaestrotldr python client tldrpythonclient pip install tldr pacman tldr arch linux tldrpy pip install tldrpy r client devtoolsinstallgithubkirillsevatldrrr ruby client gem install tldrb rust client cargo install tealdeer vim client visual studio code extension available visual studio code marketplace web client tldrjsx httptldrosteraio distrowatch also comprehensive list client wiki contributing favourite command isnt covered think example existing command contribution welcome strive maintain welcoming collaborative community look contributing guideline go ahead similar project cheat allows create view interactive cheatsheets commandline designed help remind nix system administrator option command use frequently frequently enough remember bro page highly readable supplement man page bro page show concise commoncase example unix command example submitted user base voted best entry people see first look command eg provides detailed example explanation command line example come repository eg support displaying custom example command alongside default tldr mean tldr stand long didnt read originates internet slang used indicate long text part skipped lengthy read wikipedias tldr article
65,Shell,GitHub - dylanaraps/pure-bash-bible: üìñ A collection of pure bash alternatives to external processes.,"NEW: pure sh bible (üìñ A collection of pure POSIX sh alternatives to external processes).


pure bash bible A collection of pure bash alternatives to external
processes.
 






The goal of this book is to document commonly-known and lesser-known methods of doing various tasks using only built-in bash features. Using the snippets from this bible can help remove unneeded dependencies from scripts and in most cases make them faster. I came across these tips and discovered a few while developing neofetch, pxltrm and other smaller projects.
The snippets below are linted using shellcheck and tests have been written where applicable. Want to contribute? Read the CONTRIBUTING.md. It outlines how the unit tests work and what is required when adding snippets to the bible.
See something incorrectly described, buggy or outright wrong? Open an issue or send a pull request. If the bible is missing something, open an issue and a solution will be found.

This book is also available to purchase on leanpub. https://leanpub.com/bash
Or you can buy me a coffee.
  


Table of Contents

FOREWORD
STRINGS

Trim leading and trailing white-space from string
Trim all white-space from string and truncate spaces
Use regex on a string
Split a string on a delimiter
Change a string to lowercase
Change a string to uppercase
Reverse a string case
Trim quotes from a string
Strip all instances of pattern from string
Strip first occurrence of pattern from string
Strip pattern from start of string
Strip pattern from end of string
Percent-encode a string
Decode a percent-encoded string
Check if string contains a sub-string
Check if string starts with sub-string
Check if string ends with sub-string


ARRAYS

Reverse an array
Remove duplicate array elements
Random array element
Cycle through an array
Toggle between two values


LOOPS

Loop over a range of numbers
Loop over a variable range of numbers
Loop over an array
Loop over an array with an index
Loop over the contents of a file
Loop over files and directories


FILE HANDLING

Read a file to a string
Read a file to an array (by line)
Get the first N lines of a file
Get the last N lines of a file
Get the number of lines in a file
Count files or directories in directory
Create an empty file
Extract lines between two markers


FILE PATHS

Get the directory name of a file path
Get the base-name of a file path


VARIABLES

Assign and access a variable using a variable
Name a variable based on another variable


ESCAPE SEQUENCES

Text Colors
Text Attributes
Cursor Movement
Erasing Text


PARAMETER EXPANSION

Indirection
Replacement
Length
Expansion
Case Modification
Default Value


BRACE EXPANSION

Ranges
String Lists


CONDITIONAL EXPRESSIONS

File Conditionals
File Comparisons
Variable Conditionals
Variable Comparisons


ARITHMETIC OPERATORS

Assignment
Arithmetic
Bitwise
Logical
Miscellaneous


ARITHMETIC

Simpler syntax to set variables
Ternary Tests


TRAPS

Do something on script exit
Ignore terminal interrupt (CTRL+C, SIGINT)
React to window resize
Do something before every command
Do something when a shell function or a sourced file finishes executing


PERFORMANCE

Disable Unicode


OBSOLETE SYNTAX

Shebang
Command Substitution
Function Declaration


INTERNAL VARIABLES

Get the location to the bash binary
Get the version of the current running bash process
Open the user's preferred text editor
Get the name of the current function
Get the host-name of the system
Get the architecture of the Operating System
Get the name of the Operating System / Kernel
Get the current working directory
Get the number of seconds the script has been running
Get a pseudorandom integer


INFORMATION ABOUT THE TERMINAL

Get the terminal size in lines and columns (from a script)
Get the terminal size in pixels
Get the current cursor position


CONVERSION

Convert a hex color to RGB
Convert an RGB color to hex


CODE GOLF

Shorter for loop syntax
Shorter infinite loops
Shorter function declaration
Shorter if syntax
Simpler case statement to set variable


OTHER

Use read as an alternative to the sleep command
Check if a program is in the user's PATH
Get the current date using strftime
Get the username of the current user
Generate a UUID V4
Progress bars
Get the list of functions in a script
Bypass shell aliases
Bypass shell functions
Run a command in the background


AFTERWORD


FOREWORD
A collection of pure bash alternatives to external processes and programs. The bash scripting language is more powerful than people realise and most tasks can be accomplished without depending on external programs.
Calling an external process in bash is expensive and excessive use will cause a noticeable slowdown. Scripts and programs written using built-in methods (where applicable) will be faster, require fewer dependencies and afford a better understanding of the language itself.
The contents of this book provide a reference for solving problems encountered when writing programs and scripts in bash. Examples are in function formats showcasing how to incorporate these solutions into code.
STRINGS
Trim leading and trailing white-space from string
This is an alternative to sed, awk, perl and other tools. The
function below works by finding all leading and trailing white-space and
removing it from the start and end of the string. The : built-in is used in place of a temporary variable.
Example Function:
trim_string() {
    # Usage: trim_string ""   example   string    ""
    : ""${1#""${1%%[![:space:]]*}""}""
    : ""${_%""${_##*[![:space:]]}""}""
    printf '%s\n' ""$_""
}
Example Usage:
$ trim_string ""    Hello,  World    ""
Hello,  World

$ name=""   John Black  ""
$ trim_string ""$name""
John Black
Trim all white-space from string and truncate spaces
This is an alternative to sed, awk, perl and other tools. The
function below works by abusing word splitting to create a new string
without leading/trailing white-space and with truncated spaces.
Example Function:
# shellcheck disable=SC2086,SC2048
trim_all() {
    # Usage: trim_all ""   example   string    ""
    set -f
    set -- $*
    printf '%s\n' ""$*""
    set +f
}
Example Usage:
$ trim_all ""    Hello,    World    ""
Hello, World

$ name=""   John   Black  is     my    name.    ""
$ trim_all ""$name""
John Black is my name.
Use regex on a string
The result of bash's regex matching can be used to replace sed for a
large number of use-cases.
CAVEAT: This is one of the few platform dependent bash features.
bash will use whatever regex engine is installed on the user's system.
Stick to POSIX regex features if aiming for compatibility.
CAVEAT: This example only prints the first matching group. When using
multiple capture groups some modification is needed.
Example Function:
regex() {
    # Usage: regex ""string"" ""regex""
    [[ $1 =~ $2 ]] && printf '%s\n' ""${BASH_REMATCH[1]}""
}
Example Usage:
$ # Trim leading white-space.
$ regex '    hello' '^\s*(.*)'
hello

$ # Validate a hex color.
$ regex ""#FFFFFF"" '^(#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3}))$'
#FFFFFF

$ # Validate a hex color (invalid).
$ regex ""red"" '^(#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3}))$'
# no output (invalid)
Example Usage in script:
is_hex_color() {
    if [[ $1 =~ ^(#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3}))$ ]]; then
        printf '%s\n' ""${BASH_REMATCH[1]}""
    else
        printf '%s\n' ""error: $1 is an invalid color.""
        return 1
    fi
}

read -r color
is_hex_color ""$color"" || color=""#FFFFFF""

# Do stuff.
Split a string on a delimiter
CAVEAT: Requires bash 4+
This is an alternative to cut, awk and other tools.
Example Function:
split() {
   # Usage: split ""string"" ""delimiter""
   IFS=$'\n' read -d """" -ra arr <<< ""${1//$2/$'\n'}""
   printf '%s\n' ""${arr[@]}""
}
Example Usage:
$ split ""apples,oranges,pears,grapes"" "",""
apples
oranges
pears
grapes

$ split ""1, 2, 3, 4, 5"" "", ""
1
2
3
4
5

# Multi char delimiters work too!
$ split ""hello---world---my---name---is---john"" ""---""
hello
world
my
name
is
john
Change a string to lowercase
CAVEAT: Requires bash 4+
Example Function:
lower() {
    # Usage: lower ""string""
    printf '%s\n' ""${1,,}""
}
Example Usage:
$ lower ""HELLO""
hello

$ lower ""HeLlO""
hello

$ lower ""hello""
hello
Change a string to uppercase
CAVEAT: Requires bash 4+
Example Function:
upper() {
    # Usage: upper ""string""
    printf '%s\n' ""${1^^}""
}
Example Usage:
$ upper ""hello""
HELLO

$ upper ""HeLlO""
HELLO

$ upper ""HELLO""
HELLO
Reverse a string case
CAVEAT: Requires bash 4+
Example Function:
reverse_case() {
    # Usage: reverse_case ""string""
    printf '%s\n' ""${1~~}""
}
Example Usage:
$ reverse_case ""hello""
HELLO

$ reverse_case ""HeLlO""
hElLo

$ reverse_case ""HELLO""
hello
Trim quotes from a string
Example Function:
trim_quotes() {
    # Usage: trim_quotes ""string""
    : ""${1//\'}""
    printf '%s\n' ""${_//\""}""
}
Example Usage:
$ var=""'Hello', \""World\""""
$ trim_quotes ""$var""
Hello, World
Strip all instances of pattern from string
Example Function:
strip_all() {
    # Usage: strip_all ""string"" ""pattern""
    printf '%s\n' ""${1//$2}""
}
Example Usage:
$ strip_all ""The Quick Brown Fox"" ""[aeiou]""
Th Qck Brwn Fx

$ strip_all ""The Quick Brown Fox"" ""[[:space:]]""
TheQuickBrownFox

$ strip_all ""The Quick Brown Fox"" ""Quick ""
The Brown Fox
Strip first occurrence of pattern from string
Example Function:
strip() {
    # Usage: strip ""string"" ""pattern""
    printf '%s\n' ""${1/$2}""
}
Example Usage:
$ strip ""The Quick Brown Fox"" ""[aeiou]""
Th Quick Brown Fox

$ strip ""The Quick Brown Fox"" ""[[:space:]]""
TheQuick Brown Fox
Strip pattern from start of string
Example Function:
lstrip() {
    # Usage: lstrip ""string"" ""pattern""
    printf '%s\n' ""${1##$2}""
}
Example Usage:
$ lstrip ""The Quick Brown Fox"" ""The ""
Quick Brown Fox
Strip pattern from end of string
Example Function:
rstrip() {
    # Usage: rstrip ""string"" ""pattern""
    printf '%s\n' ""${1%%$2}""
}
Example Usage:
$ rstrip ""The Quick Brown Fox"" "" Fox""
The Quick Brown
Percent-encode a string
Example Function:
urlencode() {
    # Usage: urlencode ""string""
    local LC_ALL=C
    for (( i = 0; i < ${#1}; i++ )); do
        : ""${1:i:1}""
        case ""$_"" in
            [a-zA-Z0-9.~_-])
                printf '%s' ""$_""
            ;;

            *)
                printf '%%%02X' ""'$_""
            ;;
        esac
    done
    printf '\n'
}
Example Usage:
$ urlencode ""https://github.com/dylanaraps/pure-bash-bible""
https%3A%2F%2Fgithub.com%2Fdylanaraps%2Fpure-bash-bible
Decode a percent-encoded string
Example Function:
urldecode() {
    # Usage: urldecode ""string""
    : ""${1//+/ }""
    printf '%b\n' ""${_//%/\\x}""
}
Example Usage:
$ urldecode ""https%3A%2F%2Fgithub.com%2Fdylanaraps%2Fpure-bash-bible""
https://github.com/dylanaraps/pure-bash-bible
Check if string contains a sub-string
Using a test:
if [[ $var == *sub_string* ]]; then
    printf '%s\n' ""sub_string is in var.""
fi

# Inverse (substring not in string).
if [[ $var != *sub_string* ]]; then
    printf '%s\n' ""sub_string is not in var.""
fi

# This works for arrays too!
if [[ ${arr[*]} == *sub_string* ]]; then
    printf '%s\n' ""sub_string is in array.""
fi
Using a case statement:
case ""$var"" in
    *sub_string*)
        # Do stuff
    ;;

    *sub_string2*)
        # Do more stuff
    ;;

    *)
        # Else
    ;;
esac
Check if string starts with sub-string
if [[ $var == sub_string* ]]; then
    printf '%s\n' ""var starts with sub_string.""
fi

# Inverse (var does not start with sub_string).
if [[ $var != sub_string* ]]; then
    printf '%s\n' ""var does not start with sub_string.""
fi
Check if string ends with sub-string
if [[ $var == *sub_string ]]; then
    printf '%s\n' ""var ends with sub_string.""
fi

# Inverse (var does not end with sub_string).
if [[ $var != *sub_string ]]; then
    printf '%s\n' ""var does not end with sub_string.""
fi
ARRAYS
Reverse an array
Enabling extdebug allows access to the BASH_ARGV array which stores
the current function‚Äôs arguments in reverse.
CAVEAT: Requires shopt -s compat44 in bash 5.0+.
Example Function:
reverse_array() {
    # Usage: reverse_array ""array""
    shopt -s extdebug
    f()(printf '%s\n' ""${BASH_ARGV[@]}""); f ""$@""
    shopt -u extdebug
}
Example Usage:
$ reverse_array 1 2 3 4 5
5
4
3
2
1

$ arr=(red blue green)
$ reverse_array ""${arr[@]}""
green
blue
red
Remove duplicate array elements
Create a temporary associative array. When setting associative array
values and a duplicate assignment occurs, bash overwrites the key. This
allows us to effectively remove array duplicates.
CAVEAT: Requires bash 4+
CAVEAT: List order may not stay the same.
Example Function:
remove_array_dups() {
    # Usage: remove_array_dups ""array""
    declare -A tmp_array

    for i in ""$@""; do
        [[ $i ]] && IFS="" "" tmp_array[""${i:- }""]=1
    done

    printf '%s\n' ""${!tmp_array[@]}""
}
Example Usage:
$ remove_array_dups 1 1 2 2 3 3 3 3 3 4 4 4 4 4 5 5 5 5 5 5
1
2
3
4
5

$ arr=(red red green blue blue)
$ remove_array_dups ""${arr[@]}""
red
green
blue
Random array element
Example Function:
random_array_element() {
    # Usage: random_array_element ""array""
    local arr=(""$@"")
    printf '%s\n' ""${arr[RANDOM % $#]}""
}
Example Usage:
$ array=(red green blue yellow brown)
$ random_array_element ""${array[@]}""
yellow

# Multiple arguments can also be passed.
$ random_array_element 1 2 3 4 5 6 7
3
Cycle through an array
Each time the printf is called, the next array element is printed. When
the print hits the last array element it starts from the first element
again.
arr=(a b c d)

cycle() {
    printf '%s ' ""${arr[${i:=0}]}""
    ((i=i>=${#arr[@]}-1?0:++i))
}
Toggle between two values
This works the same as above, this is just a different use case.
arr=(true false)

cycle() {
    printf '%s ' ""${arr[${i:=0}]}""
    ((i=i>=${#arr[@]}-1?0:++i))
}
LOOPS
Loop over a range of numbers
Alternative to seq.
# Loop from 0-100 (no variable support).
for i in {0..100}; do
    printf '%s\n' ""$i""
done
Loop over a variable range of numbers
Alternative to seq.
# Loop from 0-VAR.
VAR=50
for ((i=0;i<=VAR;i++)); do
    printf '%s\n' ""$i""
done
Loop over an array
arr=(apples oranges tomatoes)

# Just elements.
for element in ""${arr[@]}""; do
    printf '%s\n' ""$element""
done
Loop over an array with an index
arr=(apples oranges tomatoes)

# Elements and index.
for i in ""${!arr[@]}""; do
    printf '%s\n' ""${arr[i]}""
done

# Alternative method.
for ((i=0;i<${#arr[@]};i++)); do
    printf '%s\n' ""${arr[i]}""
done
Loop over the contents of a file
while read -r line; do
    printf '%s\n' ""$line""
done < ""file""
Loop over files and directories
Don‚Äôt use ls.
# Greedy example.
for file in *; do
    printf '%s\n' ""$file""
done

# PNG files in dir.
for file in ~/Pictures/*.png; do
    printf '%s\n' ""$file""
done

# Iterate over directories.
for dir in ~/Downloads/*/; do
    printf '%s\n' ""$dir""
done

# Brace Expansion.
for file in /path/to/parentdir/{file1,file2,subdir/file3}; do
    printf '%s\n' ""$file""
done

# Iterate recursively.
shopt -s globstar
for file in ~/Pictures/**/*; do
    printf '%s\n' ""$file""
done
shopt -u globstar
FILE HANDLING
CAVEAT: bash does not handle binary data properly in versions < 4.4.
Read a file to a string
Alternative to the cat command.
file_data=""$(<""file"")""
Read a file to an array (by line)
Alternative to the cat command.
# Bash <4 (discarding empty lines).
IFS=$'\n' read -d """" -ra file_data < ""file""

# Bash <4 (preserving empty lines).
while read -r line; do
    file_data+=(""$line"")
done < ""file""

# Bash 4+
mapfile -t file_data < ""file""
Get the first N lines of a file
Alternative to the head command.
CAVEAT: Requires bash 4+
Example Function:
head() {
    # Usage: head ""n"" ""file""
    mapfile -tn ""$1"" line < ""$2""
    printf '%s\n' ""${line[@]}""
}
Example Usage:
$ head 2 ~/.bashrc
# Prompt
PS1='‚ûú '

$ head 1 ~/.bashrc
# Prompt
Get the last N lines of a file
Alternative to the tail command.
CAVEAT: Requires bash 4+
Example Function:
tail() {
    # Usage: tail ""n"" ""file""
    mapfile -tn 0 line < ""$2""
    printf '%s\n' ""${line[@]: -$1}""
}
Example Usage:
$ tail 2 ~/.bashrc
# Enable tmux.
# [[ -z ""$TMUX""  ]] && exec tmux

$ tail 1 ~/.bashrc
# [[ -z ""$TMUX""  ]] && exec tmux
Get the number of lines in a file
Alternative to wc -l.
Example Function (bash 4):
lines() {
    # Usage: lines ""file""
    mapfile -tn 0 lines < ""$1""
    printf '%s\n' ""${#lines[@]}""
}
Example Function (bash 3):
This method uses less memory than the mapfile method and works in bash 3 but it is slower for bigger files.
lines_loop() {
    # Usage: lines_loop ""file""
    count=0
    while IFS= read -r _; do
        ((count++))
    done < ""$1""
    printf '%s\n' ""$count""
}
Example Usage:
$ lines ~/.bashrc
48

$ lines_loop ~/.bashrc
48
Count files or directories in directory
This works by passing the output of the glob to the function and then counting the number of arguments.
Example Function:
count() {
    # Usage: count /path/to/dir/*
    #        count /path/to/dir/*/
    printf '%s\n' ""$#""
}
Example Usage:
# Count all files in dir.
$ count ~/Downloads/*
232

# Count all dirs in dir.
$ count ~/Downloads/*/
45

# Count all jpg files in dir.
$ count ~/Pictures/*.jpg
64
Create an empty file
Alternative to touch.
# Shortest.
>file

# Longer alternatives:
:>file
echo -n >file
printf '' >file
Extract lines between two markers
Example Function:
extract() {
    # Usage: extract file ""opening marker"" ""closing marker""
    while IFS=$'\n' read -r line; do
        [[ $extract && $line != ""$3"" ]] &&
            printf '%s\n' ""$line""

        [[ $line == ""$2"" ]] && extract=1
        [[ $line == ""$3"" ]] && extract=
    done < ""$1""
}
Example Usage:
# Extract code blocks from MarkDown file.
$ extract ~/projects/pure-bash/README.md '```sh' '```'
# Output here...
FILE PATHS
Get the directory name of a file path
Alternative to the dirname command.
Example Function:
dirname() {
    # Usage: dirname ""path""
    local tmp=${1:-.}

    [[ $tmp != *[!/]* ]] && {
        printf '/\n'
        return
    }

    tmp=${tmp%%""${tmp##*[!/]}""}

    [[ $tmp != */* ]] && {
        printf '.\n'
        return
    }

    tmp=${tmp%/*}
    tmp=${tmp%%""${tmp##*[!/]}""}

    printf '%s\n' ""${tmp:-/}""
}
Example Usage:
$ dirname ~/Pictures/Wallpapers/1.jpg
/home/black/Pictures/Wallpapers

$ dirname ~/Pictures/Downloads/
/home/black/Pictures
Get the base-name of a file path
Alternative to the basename command.
Example Function:
basename() {
    # Usage: basename ""path"" [""suffix""]
    local tmp

    tmp=${1%""${1##*[!/]}""}
    tmp=${tmp##*/}
    tmp=${tmp%""${2/""$tmp""}""}

    printf '%s\n' ""${tmp:-/}""
}
Example Usage:
$ basename ~/Pictures/Wallpapers/1.jpg
1.jpg

$ basename ~/Pictures/Wallpapers/1.jpg .jpg
1

$ basename ~/Pictures/Downloads/
Downloads
VARIABLES
Assign and access a variable using a variable
$ hello_world=""value""

# Create the variable name.
$ var=""world""
$ ref=""hello_$var""

# Print the value of the variable name stored in 'hello_$var'.
$ printf '%s\n' ""${!ref}""
value
Alternatively, on bash 4.3+:
$ hello_world=""value""
$ var=""world""

# Declare a nameref.
$ declare -n ref=hello_$var

$ printf '%s\n' ""$ref""
value
Name a variable based on another variable
$ var=""world""
$ declare ""hello_$var=value""
$ printf '%s\n' ""$hello_world""
value
ESCAPE SEQUENCES
Contrary to popular belief, there is no issue in utilizing raw escape sequences. Using tput abstracts the same ANSI sequences as if printed manually. Worse still, tput is not actually portable. There are a number of tput variants each with different commands and syntaxes (try tput setaf 3 on a FreeBSD system). Raw sequences are fine.
Text Colors
NOTE: Sequences requiring RGB values only work in True-Color Terminal Emulators.



Sequence
What does it do?
Value




\e[38;5;<NUM>m
Set text foreground color.
0-255


\e[48;5;<NUM>m
Set text background color.
0-255


\e[38;2;<R>;<G>;<B>m
Set text foreground color to RGB color.
R, G, B


\e[48;2;<R>;<G>;<B>m
Set text background color to RGB color.
R, G, B



Text Attributes
NOTE: Prepend 2 to any code below to turn it's effect off
(examples: 21=bold text off, 22=faint text off, 23=italic text off).



Sequence
What does it do?




\e[m
Reset text formatting and colors.


\e[1m
Bold text.


\e[2m
Faint text.


\e[3m
Italic text.


\e[4m
Underline text.


\e[5m
Blinking text.


\e[7m
Highlighted text.


\e[8m
Hidden text.


\e[9m
Strike-through text.



Cursor Movement



Sequence
What does it do?
Value




\e[<LINE>;<COLUMN>H
Move cursor to absolute position.
line, column


\e[H
Move cursor to home position (0,0).



\e[<NUM>A
Move cursor up N lines.
num


\e[<NUM>B
Move cursor down N lines.
num


\e[<NUM>C
Move cursor right N columns.
num


\e[<NUM>D
Move cursor left N columns.
num


\e[s
Save cursor position.



\e[u
Restore cursor position.




Erasing Text



Sequence
What does it do?




\e[K
Erase from cursor position to end of line.


\e[1K
Erase from cursor position to start of line.


\e[2K
Erase the entire current line.


\e[J
Erase from the current line to the bottom of the screen.


\e[1J
Erase from the current line to the top of the screen.


\e[2J
Clear the screen.


\e[2J\e[H
Clear the screen and move cursor to 0,0.



PARAMETER EXPANSION
Indirection



Parameter
What does it do?




${!VAR}
Access a variable based on the value of VAR.


${!VAR*}
Expand to IFS separated list of variable names starting with VAR.


${!VAR@}
Expand to IFS separated list of variable names starting with VAR. If double-quoted, each variable name expands to a separate word.



Replacement



Parameter
What does it do?




${VAR#PATTERN}
Remove shortest match of pattern from start of string.


${VAR##PATTERN}
Remove longest match of pattern from start of string.


${VAR%PATTERN}
Remove shortest match of pattern from end of string.


${VAR%%PATTERN}
Remove longest match of pattern from end of string.


${VAR/PATTERN/REPLACE}
Replace first match with string.


${VAR//PATTERN/REPLACE}
Replace all matches with string.


${VAR/PATTERN}
Remove first match.


${VAR//PATTERN}
Remove all matches.



Length



Parameter
What does it do?




${#VAR}
Length of var in characters.


${#ARR[@]}
Length of array in elements.



Expansion



Parameter
What does it do?




${VAR:OFFSET}
Remove first N chars from variable.


${VAR:OFFSET:LENGTH}
Get substring from N character to N character.  (${VAR:10:10}: Get sub-string from char 10 to char 20)


${VAR:: OFFSET}
Get first N chars from variable.


${VAR:: -OFFSET}
Remove last N chars from variable.


${VAR: -OFFSET}
Get last N chars from variable.


${VAR:OFFSET:-OFFSET}
Cut first N chars and last N chars.



Case Modification



Parameter
What does it do?
CAVEAT




${VAR^}
Uppercase first character.
bash 4+


${VAR^^}
Uppercase all characters.
bash 4+


${VAR,}
Lowercase first character.
bash 4+


${VAR,,}
Lowercase all characters.
bash 4+


${VAR~}
Reverse case of first character.
bash 4+


${VAR~~}
Reverse case of all characters.
bash 4+



Default Value



Parameter
What does it do?




${VAR:-STRING}
If VAR is empty or unset, use STRING as its value.


${VAR-STRING}
If VAR is unset, use STRING as its value.


${VAR:=STRING}
If VAR is empty or unset, set the value of VAR to STRING.


${VAR=STRING}
If VAR is unset, set the value of VAR to STRING.


${VAR:+STRING}
If VAR is not empty, use STRING as its value.


${VAR+STRING}
If VAR is set, use STRING as its value.


${VAR:?STRING}
Display an error if empty or unset.


${VAR?STRING}
Display an error if unset.



BRACE EXPANSION
Ranges
# Syntax: {<START>..<END>}

# Print numbers 1-100.
echo {1..100}

# Print range of floats.
echo 1.{1..9}

# Print chars a-z.
echo {a..z}
echo {A..Z}

# Nesting.
echo {A..Z}{0..9}

# Print zero-padded numbers.
# CAVEAT: bash 4+
echo {01..100}

# Change increment amount.
# Syntax: {<START>..<END>..<INCREMENT>}
# CAVEAT: bash 4+
echo {1..10..2} # Increment by 2.
String Lists
echo {apples,oranges,pears,grapes}

# Example Usage:
# Remove dirs Movies, Music and ISOS from ~/Downloads/.
rm -rf ~/Downloads/{Movies,Music,ISOS}
CONDITIONAL EXPRESSIONS
File Conditionals



Expression
Value
What does it do?




-a
file
If file exists.


-b
file
If file exists and is a block special file.


-c
file
If file exists and is a character special file.


-d
file
If file exists and is a directory.


-e
file
If file exists.


-f
file
If file exists and is a regular file.


-g
file
If file exists and its set-group-id bit is set.


-h
file
If file exists and is a symbolic link.


-k
file
If file exists and its sticky-bit is set


-p
file
If file exists and is a named pipe (FIFO).


-r
file
If file exists and is readable.


-s
file
If file exists and its size is greater than zero.


-t
fd
If file descriptor is open and refers to a terminal.


-u
file
If file exists and its set-user-id bit is set.


-w
file
If file exists and is writable.


-x
file
If file exists and is executable.


-G
file
If file exists and is owned by the effective group ID.


-L
file
If file exists and is a symbolic link.


-N
file
If file exists and has been modified since last read.


-O
file
If file exists and is owned by the effective user ID.


-S
file
If file exists and is a socket.



File Comparisons



Expression
What does it do?




file -ef file2
If both files refer to the same inode and device numbers.


file -nt file2
If file is newer than file2 (uses modification time) or file exists and file2 does not.


file -ot file2
If file is older than file2 (uses modification time) or file2 exists and file does not.



Variable Conditionals



Expression
Value
What does it do?




-o
opt
If shell option is enabled.


-v
var
If variable has a value assigned.


-R
var
If variable is a name reference.


-z
var
If the length of string is zero.


-n
var
If the length of string is non-zero.



Variable Comparisons



Expression
What does it do?




var = var2
Equal to.


var == var2
Equal to (synonym for =).


var != var2
Not equal to.


var < var2
Less than (in ASCII alphabetical order.)


var > var2
Greater than (in ASCII alphabetical order.)



ARITHMETIC OPERATORS
Assignment



Operators
What does it do?




=
Initialize or change the value of a variable.



Arithmetic



Operators
What does it do?




+
Addition


-
Subtraction


*
Multiplication


/
Division


**
Exponentiation


%
Modulo


+=
Plus-Equal (Increment a variable.)


-=
Minus-Equal (Decrement a variable.)


*=
Times-Equal (Multiply a variable.)


/=
Slash-Equal (Divide a variable.)


%=
Mod-Equal (Remainder of dividing a variable.)



Bitwise



Operators
What does it do?




<<
Bitwise Left Shift


<<=
Left-Shift-Equal


>>
Bitwise Right Shift


>>=
Right-Shift-Equal


&
Bitwise AND


&=
Bitwise AND-Equal


|
Bitwise OR


|=
Bitwise OR-Equal


~
Bitwise NOT


^
Bitwise XOR


^=
Bitwise XOR-Equal



Logical



Operators
What does it do?




!
NOT


&&
AND


||
OR



Miscellaneous



Operators
What does it do?
Example




,
Comma Separator
((a=1,b=2,c=3))



ARITHMETIC
Simpler syntax to set variables
# Simple math
((var=1+2))

# Decrement/Increment variable
((var++))
((var--))
((var+=1))
((var-=1))

# Using variables
((var=var2*arr[2]))
Ternary Tests
# Set the value of var to var2 if var2 is greater than var.
# var: variable to set.
# var2>var: Condition to test.
# ?var2: If the test succeeds.
# :var: If the test fails.
((var=var2>var?var2:var))
TRAPS
Traps allow a script to execute code on various signals. In pxltrm (a pixel art editor written in bash)  traps are used to redraw the user interface on window resize. Another use case is cleaning up temporary files on script exit.
Traps should be added near the start of scripts so any early errors are also caught.
NOTE: For a full list of signals, see trap -l.
Do something on script exit
# Clear screen on script exit.
trap 'printf \\e[2J\\e[H\\e[m' EXIT
Ignore terminal interrupt (CTRL+C, SIGINT)
trap '' INT
React to window resize
# Call a function on window resize.
trap 'code_here' SIGWINCH
Do something before every command
trap 'code_here' DEBUG
Do something when a shell function or a sourced file finishes executing
trap 'code_here' RETURN
PERFORMANCE
Disable Unicode
If unicode is not required, it can be disabled for a performance increase. Results may vary however there have been noticeable improvements in neofetch and other programs.
# Disable unicode.
LC_ALL=C
LANG=C
OBSOLETE SYNTAX
Shebang
Use #!/usr/bin/env bash instead of #!/bin/bash.

The former searches the user's PATH to find the bash binary.
The latter assumes it is always installed to /bin/ which can cause issues.

NOTE: There are times when one may have a good reason for using #!/bin/bash or another direct path to the binary.
# Right:

    #!/usr/bin/env bash

# Less right:

    #!/bin/bash
Command Substitution
Use $() instead of ` `.
# Right.
var=""$(command)""

# Wrong.
var=`command`

# $() can easily be nested whereas `` cannot.
var=""$(command ""$(command)"")""
Function Declaration
Do not use the function keyword, it reduces compatibility with older versions of bash.
# Right.
do_something() {
    # ...
}

# Wrong.
function do_something() {
    # ...
}
INTERNAL VARIABLES
Get the location to the bash binary
""$BASH""
Get the version of the current running bash process
# As a string.
""$BASH_VERSION""

# As an array.
""${BASH_VERSINFO[@]}""
Open the user's preferred text editor
""$EDITOR"" ""$file""

# NOTE: This variable may be empty, set a fallback value.
""${EDITOR:-vi}"" ""$file""
Get the name of the current function
# Current function.
""${FUNCNAME[0]}""

# Parent function.
""${FUNCNAME[1]}""

# So on and so forth.
""${FUNCNAME[2]}""
""${FUNCNAME[3]}""

# All functions including parents.
""${FUNCNAME[@]}""
Get the host-name of the system
""$HOSTNAME""

# NOTE: This variable may be empty.
# Optionally set a fallback to the hostname command.
""${HOSTNAME:-$(hostname)}""
Get the architecture of the Operating System
""$HOSTTYPE""
Get the name of the Operating System / Kernel
This can be used to add conditional support for different Operating
Systems without needing to call uname.
""$OSTYPE""
Get the current working directory
This is an alternative to the pwd built-in.
""$PWD""
Get the number of seconds the script has been running
""$SECONDS""
Get a pseudorandom integer
Each time $RANDOM is used, a different integer between 0 and 32767 is returned. This variable should not be used for anything related to security (this includes encryption keys etc).
""$RANDOM""
INFORMATION ABOUT THE TERMINAL
Get the terminal size in lines and columns (from a script)
This is handy when writing scripts in pure bash and stty/tput can‚Äôt be
called.
Example Function:
get_term_size() {
    # Usage: get_term_size

    # (:;:) is a micro sleep to ensure the variables are
    # exported immediately.
    shopt -s checkwinsize; (:;:)
    printf '%s\n' ""$LINES $COLUMNS""
}
Example Usage:
# Output: LINES COLUMNS
$ get_term_size
15 55
Get the terminal size in pixels
CAVEAT: This does not work in some terminal emulators.
Example Function:
get_window_size() {
    # Usage: get_window_size
    printf '%b' ""${TMUX:+\\ePtmux;\\e}\\e[14t${TMUX:+\\e\\\\}""
    IFS=';t' read -d t -t 0.05 -sra term_size
    printf '%s\n' ""${term_size[1]}x${term_size[2]}""
}
Example Usage:
# Output: WIDTHxHEIGHT
$ get_window_size
1200x800

# Output (fail):
$ get_window_size
x
Get the current cursor position
This is useful when creating a TUI in pure bash.
Example Function:
get_cursor_pos() {
    # Usage: get_cursor_pos
    IFS='[;' read -p $'\e[6n' -d R -rs _ y x _
    printf '%s\n' ""$x $y""
}
Example Usage:
# Output: X Y
$ get_cursor_pos
1 8
CONVERSION
Convert a hex color to RGB
Example Function:
hex_to_rgb() {
    # Usage: hex_to_rgb ""#FFFFFF""
    #        hex_to_rgb ""000000""
    : ""${1/\#}""
    ((r=16#${_:0:2},g=16#${_:2:2},b=16#${_:4:2}))
    printf '%s\n' ""$r $g $b""
}
Example Usage:
$ hex_to_rgb ""#FFFFFF""
255 255 255
Convert an RGB color to hex
Example Function:
rgb_to_hex() {
    # Usage: rgb_to_hex ""r"" ""g"" ""b""
    printf '#%02x%02x%02x\n' ""$1"" ""$2"" ""$3""
}
Example Usage:
$ rgb_to_hex ""255"" ""255"" ""255""
#FFFFFF
CODE GOLF
Shorter for loop syntax
# Tiny C Style.
for((;i++<10;)){ echo ""$i"";}

# Undocumented method.
for i in {1..10};{ echo ""$i"";}

# Expansion.
for i in {1..10}; do echo ""$i""; done

# C Style.
for((i=0;i<=10;i++)); do echo ""$i""; done
Shorter infinite loops
# Normal method
while :; do echo hi; done

# Shorter
for((;;)){ echo hi;}
Shorter function declaration
# Normal method
f(){ echo hi;}

# Using a subshell
f()(echo hi)

# Using arithmetic
# This can be used to assign integer values.
# Example: f a=1
#          f a++
f()(($1))

# Using tests, loops etc.
# NOTE: ‚Äòwhile‚Äô, ‚Äòuntil‚Äô, ‚Äòcase‚Äô, ‚Äò(())‚Äô, ‚Äò[[]]‚Äô can also be used.
f()if true; then echo ""$1""; fi
f()for i in ""$@""; do echo ""$i""; done
Shorter if syntax
# One line
# Note: The 3rd statement may run when the 1st is true
[[ $var == hello ]] && echo hi || echo bye
[[ $var == hello ]] && { echo hi; echo there; } || echo bye

# Multi line (no else, single statement)
# Note: The exit status may not be the same as with an if statement
[[ $var == hello ]] &&
    echo hi

# Multi line (no else)
[[ $var == hello ]] && {
    echo hi
    # ...
}
Simpler case statement to set variable
The : built-in can be used to avoid repeating variable= in a case statement. The $_ variable stores the last argument of the last command. : always succeeds so it can be used to store the variable value.
# Modified snippet from Neofetch.
case ""$OSTYPE"" in
    ""darwin""*)
        : ""MacOS""
    ;;

    ""linux""*)
        : ""Linux""
    ;;

    *""bsd""* | ""dragonfly"" | ""bitrig"")
        : ""BSD""
    ;;

    ""cygwin"" | ""msys"" | ""win32"")
        : ""Windows""
    ;;

    *)
        printf '%s\n' ""Unknown OS detected, aborting..."" >&2
        exit 1
    ;;
esac

# Finally, set the variable.
os=""$_""
OTHER
Use read as an alternative to the sleep command
Surprisingly, sleep is an external command and not a bash built-in.
CAVEAT: Requires bash 4+
Example Function:
read_sleep() {
    # Usage: read_sleep 1
    #        read_sleep 0.2
    read -rt ""$1"" <> <(:) || :
}
Example Usage:
read_sleep 1
read_sleep 0.1
read_sleep 30
For performance-critical situations, where it is not economic to open and close an excessive number of file descriptors, the allocation of a file descriptor may be done only once for all invocations of read:
(See the generic original implementation at https://blog.dhampir.no/content/sleeping-without-a-subprocess-in-bash-and-how-to-sleep-forever)
exec {sleep_fd}<> <(:)
while some_quick_test; do
    # equivalent of sleep 0.001
    read -t 0.001 -u $sleep_fd
done
Check if a program is in the user's PATH
# There are 3 ways to do this and either one can be used.
type -p executable_name &>/dev/null
hash executable_name &>/dev/null
command -v executable_name &>/dev/null

# As a test.
if type -p executable_name &>/dev/null; then
    # Program is in PATH.
fi

# Inverse.
if ! type -p executable_name &>/dev/null; then
    # Program is not in PATH.
fi

# Example (Exit early if program is not installed).
if ! type -p convert &>/dev/null; then
    printf '%s\n' ""error: convert is not installed, exiting...""
    exit 1
fi
Get the current date using strftime
Bash‚Äôs printf has a built-in method of getting the date which can be used in place of the date command.
CAVEAT: Requires bash 4+
Example Function:
date() {
    # Usage: date ""format""
    # See: 'man strftime' for format.
    printf ""%($1)T\\n"" ""-1""
}
Example Usage:
# Using above function.
$ date ""%a %d %b  - %l:%M %p""
Fri 15 Jun  - 10:00 AM

# Using printf directly.
$ printf '%(%a %d %b  - %l:%M %p)T\n' ""-1""
Fri 15 Jun  - 10:00 AM

# Assigning a variable using printf.
$ printf -v date '%(%a %d %b  - %l:%M %p)T\n' '-1'
$ printf '%s\n' ""$date""
Fri 15 Jun  - 10:00 AM
Get the username of the current user
CAVEAT: Requires bash 4.4+
$ : \\u
# Expand the parameter as if it were a prompt string.
$ printf '%s\n' ""${_@P}""
black
Generate a UUID V4
CAVEAT: The generated value is not cryptographically secure.
Example Function:
uuid() {
    # Usage: uuid
    C=""89ab""

    for ((N=0;N<16;++N)); do
        B=""$((RANDOM%256))""

        case ""$N"" in
            6)  printf '4%x' ""$((B%16))"" ;;
            8)  printf '%c%x' ""${C:$RANDOM%${#C}:1}"" ""$((B%16))"" ;;

            3|5|7|9)
                printf '%02x-' ""$B""
            ;;

            *)
                printf '%02x' ""$B""
            ;;
        esac
    done

    printf '\n'
}
Example Usage:
$ uuid
d5b6c731-1310-4c24-9fe3-55d556d44374
Progress bars
This is a simple way of drawing progress bars without needing a for loop
in the function itself.
Example Function:
bar() {
    # Usage: bar 1 10
    #            ^----- Elapsed Percentage (0-100).
    #               ^-- Total length in chars.
    ((elapsed=$1*$2/100))

    # Create the bar with spaces.
    printf -v prog  ""%${elapsed}s""
    printf -v total ""%$(($2-elapsed))s""

    printf '%s\r' ""[${prog// /-}${total}]""
}
Example Usage:
for ((i=0;i<=100;i++)); do
    # Pure bash micro sleeps (for the example).
    (:;:) && (:;:) && (:;:) && (:;:) && (:;:)

    # Print the bar.
    bar ""$i"" ""10""
done

printf '\n'
Get the list of functions in a script
get_functions() {
    # Usage: get_functions
    IFS=$'\n' read -d """" -ra functions < <(declare -F)
    printf '%s\n' ""${functions[@]//declare -f }""
}
Bypass shell aliases
# alias
ls

# command
# shellcheck disable=SC1001
\ls
Bypass shell functions
# function
ls

# command
command ls
Run a command in the background
This will run the given command and keep it running, even after the terminal or SSH connection is terminated. All output is ignored.
bkr() {
    (nohup ""$@"" &>/dev/null &)
}

bkr ./some_script.sh # some_script.sh is now running in the background
AFTERWORD
Thanks for reading! If this bible helped you in any way and you'd like to give back, consider donating. Donations give me the time to make this the best resource possible. Can't donate? That's OK, star the repo and share it with your friends!

Rock on. ü§ò
",new pure sh bible collection pure posix sh alternatives external processes pure bash bible collection pure bash alternatives external processes goal book document commonlyknown lesserknown methods various tasks using builtin bash features using snippets bible help remove unneeded dependencies scripts cases make faster came across tips discovered developing neofetch pxltrm smaller projects snippets linted using shellcheck tests written applicable want contribute read contributingmd outlines unit tests work required adding snippets bible see something incorrectly described buggy outright wrong open issue send pull request bible missing something open issue solution found book also available purchase leanpub httpsleanpubcombash buy coffee table contents foreword strings trim leading trailing whitespace string trim whitespace string truncate spaces use regex string split string delimiter change string lowercase change string uppercase reverse string case trim quotes string strip instances pattern string strip first occurrence pattern string strip pattern start string strip pattern end string percentencode string decode percentencoded string check string contains substring check string starts substring check string ends substring arrays reverse array remove duplicate array elements random array element cycle array toggle two values loops loop range numbers loop variable range numbers loop array loop array index loop contents file loop files directories file handling read file string read file array line get first n lines file get last n lines file get number lines file count files directories directory create empty file extract lines two markers file paths get directory name file path get basename file path variables assign access variable using variable name variable based another variable escape sequences text colors text attributes cursor movement erasing text parameter expansion indirection replacement length expansion case modification default value brace expansion ranges string lists conditional expressions file conditionals file comparisons variable conditionals variable comparisons arithmetic operators assignment arithmetic bitwise logical miscellaneous arithmetic simpler syntax set variables ternary tests traps something script exit ignore terminal interrupt ctrlc sigint react window resize something every command something shell function sourced file finishes executing performance disable unicode obsolete syntax shebang command substitution function declaration internal variables get location bash binary get version current running bash process open users preferred text editor get name current function get hostname system get architecture operating system get name operating system kernel get current working directory get number seconds script running get pseudorandom integer information terminal get terminal size lines columns script get terminal size pixels get current cursor position conversion convert hex color rgb convert rgb color hex code golf shorter loop syntax shorter infinite loops shorter function declaration shorter syntax simpler case statement set variable use read alternative sleep command check program users path get current date using strftime get username current user generate uuid v progress bars get list functions script bypass shell aliases bypass shell functions run command background afterword foreword collection pure bash alternatives external processes programs bash scripting language powerful people realise tasks accomplished without depending external programs calling external process bash expensive excessive use cause noticeable slowdown scripts programs written using builtin methods applicable faster require fewer dependencies afford better understanding language contents book provide reference solving problems encountered writing programs scripts bash examples function formats showcasing incorporate solutions code strings trim leading trailing whitespace string alternative sed awk perl tools function works finding leading trailing whitespace removing start end string builtin used place temporary variable example function trimstring usage trimstring example string space space printf sn example usage trimstring hello world hello world name john black trimstring name john black trim whitespace string truncate spaces alternative sed awk perl tools function works abusing word splitting create new string without leadingtrailing whitespace truncated spaces example function shellcheck disablescsc trimall usage trimall example string set f set printf sn set f example usage trimall hello world hello world name john black name trimall name john black name use regex string result bashs regex matching used replace sed large number usecases caveat one platform dependent bash features bash use whatever regex engine installed users system stick posix regex features aiming compatibility caveat example prints first matching group using multiple capture groups modification needed example function regex usage regex string regex printf sn bashrematch example usage trim leading whitespace regex hello hello validate hex color regex ffffff afafafaf ffffff validate hex color invalid regex red afafafaf output invalid example usage script ishexcolor afafafaf printf sn bashrematch else printf sn error invalid color return fi read r color ishexcolor color colorffffff stuff split string delimiter caveat requires bash alternative cut awk tools example function split usage split string delimiter ifsn read ra arr n printf sn arr example usage split applesorangespearsgrapes apples oranges pears grapes split multi char delimiters work split helloworldmynameisjohn hello world name john change string lowercase caveat requires bash example function lower usage lower string printf sn example usage lower hello hello lower hello hello lower hello hello change string uppercase caveat requires bash example function upper usage upper string printf sn example usage upper hello hello upper hello hello upper hello hello reverse string case caveat requires bash example function reversecase usage reversecase string printf sn example usage reversecase hello hello reversecase hello hello reversecase hello hello trim quotes string example function trimquotes usage trimquotes string printf sn example usage varhello world trimquotes var hello world strip instances pattern string example function stripall usage stripall string pattern printf sn example usage stripall quick brown fox aeiou th qck brwn fx stripall quick brown fox space thequickbrownfox stripall quick brown fox quick brown fox strip first occurrence pattern string example function strip usage strip string pattern printf sn example usage strip quick brown fox aeiou th quick brown fox strip quick brown fox space thequick brown fox strip pattern start string example function lstrip usage lstrip string pattern printf sn example usage lstrip quick brown fox quick brown fox strip pattern end string example function rstrip usage rstrip string pattern printf sn example usage rstrip quick brown fox fox quick brown percentencode string example function urlencode usage urlencode string local lcallc case azaz printf printf x esac done printf n example usage urlencode httpsgithubcomdylanarapspurebashbible httpsaffgithubcomfdylanarapsfpurebashbible decode percentencoded string example function urldecode usage urldecode string printf bn x example usage urldecode httpsaffgithubcomfdylanarapsfpurebashbible httpsgithubcomdylanarapspurebashbible check string contains substring using test var substring printf sn substring var fi inverse substring string var substring printf sn substring var fi works arrays arr substring printf sn substring array fi using case statement case var substring stuff substring stuff else esac check string starts substring var substring printf sn var starts substring fi inverse var start substring var substring printf sn var start substring fi check string ends substring var substring printf sn var ends substring fi inverse var end substring var substring printf sn var end substring fi arrays reverse array enabling extdebug allows access bashargv array stores current functions arguments reverse caveat requires shopt compat bash example function reversearray usage reversearray array shopt extdebug fprintf sn bashargv f shopt u extdebug example usage reversearray arrred blue green reversearray arr green blue red remove duplicate array elements create temporary associative array setting associative array values duplicate assignment occurs bash overwrites key allows us effectively remove array duplicates caveat requires bash caveat list order may stay example function removearraydups usage removearraydups array declare tmparray ifs tmparrayi done printf sn tmparray example usage removearraydups arrred red green blue blue removearraydups arr red green blue random array element example function randomarrayelement usage randomarrayelement array local arr printf sn arrrandom example usage arrayred green blue yellow brown randomarrayelement array yellow multiple arguments also passed randomarrayelement cycle array time printf called next array element printed print hits last array element starts first element arra b c cycle printf arri iiarri toggle two values works different use case arrtrue false cycle printf arri iiarri loops loop range numbers alternative seq loop variable support printf sn done loop variable range numbers alternative seq loop var var iivari printf sn done loop array arrapples oranges tomatoes elements element arr printf sn element done loop array index arrapples oranges tomatoes elements index arr printf sn arri done alternative method iiarri printf sn arri done loop contents file read r line printf sn line done file loop files directories dont use ls greedy example file printf sn file done png files dir file picturespng printf sn file done iterate directories dir downloads printf sn dir done brace expansion file pathtoparentdirfilefilesubdirfile printf sn file done iterate recursively shopt globstar file pictures printf sn file done shopt u globstar file handling caveat bash handle binary data properly versions read file string alternative cat command filedatafile read file array line alternative cat command bash discarding empty lines ifsn read ra filedata file bash preserving empty lines read r line filedataline done file bash mapfile filedata file get first n lines file alternative head command caveat requires bash example function head usage head n file mapfile tn line printf sn line example usage head bashrc prompt ps head bashrc prompt get last n lines file alternative tail command caveat requires bash example function tail usage tail n file mapfile tn line printf sn line example usage tail bashrc enable tmux z tmux exec tmux tail bashrc z tmux exec tmux get number lines file alternative wc l example function bash lines usage lines file mapfile tn lines printf sn lines example function bash method uses less memory mapfile method works bash slower bigger files linesloop usage linesloop file count ifs read r count done printf sn count example usage lines bashrc linesloop bashrc count files directories directory works passing output glob function counting number arguments example function count usage count pathtodir count pathtodir printf sn example usage count files dir count downloads count dirs dir count downloads count jpg files dir count picturesjpg create empty file alternative touch shortest file longer alternatives file echo n file printf file extract lines two markers example function extract usage extract file opening marker closing marker ifsn read r line extract line printf sn line line extract line extract done example usage extract code blocks markdown file extract projectspurebashreadmemd sh output file paths get directory name file path alternative dirname command example function dirname usage dirname path local tmp tmp printf n return tmptmptmp tmp printf n return tmptmp tmptmptmp printf sn tmp example usage dirname pictureswallpapersjpg homeblackpictureswallpapers dirname picturesdownloads homeblackpictures get basename file path alternative basename command example function basename usage basename path suffix local tmp tmp tmptmp tmptmptmp printf sn tmp example usage basename pictureswallpapersjpg jpg basename pictureswallpapersjpg jpg basename picturesdownloads downloads variables assign access variable using variable helloworldvalue create variable name varworld refhellovar print value variable name stored hellovar printf sn ref value alternatively bash helloworldvalue varworld declare nameref declare n refhellovar printf sn ref value name variable based another variable varworld declare hellovarvalue printf sn helloworld value escape sequences contrary popular belief issue utilizing raw escape sequences using tput abstracts ansi sequences printed manually worse still tput actually portable number tput variants different commands syntaxes try tput setaf freebsd system raw sequences fine text colors note sequences requiring rgb values work truecolor terminal emulators sequence value enumm set text foreground color enumm set text background color ergbm set text foreground color rgb color r g b ergbm set text background color rgb color r g b text attributes note prepend code turn effect examples bold text faint text italic text sequence em reset text formatting colors em bold text em faint text em italic text em underline text em blinking text em highlighted text em hidden text em strikethrough text cursor movement sequence value elinecolumnh move cursor absolute position line column eh move cursor home position enuma move cursor n lines num enumb move cursor n lines num enumc move cursor right n columns num enumd move cursor left n columns num es save cursor position eu restore cursor position erasing text sequence ek erase cursor position end line ek erase cursor position start line ek erase entire current line ej erase current line bottom screen ej erase current line top screen ej clear screen ejeh clear screen move cursor parameter expansion indirection parameter var access variable based value var var expand ifs separated list variable names starting var var expand ifs separated list variable names starting var doublequoted variable name expands separate word replacement parameter varpattern remove shortest match pattern start string varpattern remove longest match pattern start string varpattern remove shortest match pattern end string varpattern remove longest match pattern end string varpatternreplace replace first match string varpatternreplace replace matches string varpattern remove first match varpattern remove matches length parameter var length var characters arr length array elements expansion parameter varoffset remove first n chars variable varoffsetlength get substring n character n character var get substring char char var offset get first n chars variable var offset remove last n chars variable var offset get last n chars variable varoffsetoffset cut first n chars last n chars case modification parameter caveat var uppercase first character bash var uppercase characters bash var lowercase first character bash var lowercase characters bash var reverse case first character bash var reverse case characters bash default value parameter varstring var empty unset use string value varstring var unset use string value varstring var empty unset set value var string varstring var unset set value var string varstring var empty use string value varstring var set use string value varstring display error empty unset varstring display error unset brace expansion ranges syntax startend print numbers echo print range floats echo print chars az echo az echo az nesting echo az print zeropadded numbers caveat bash echo change increment amount syntax startendincrement caveat bash echo increment string lists echo applesorangespearsgrapes example usage remove dirs movies music isos downloads rm rf downloadsmoviesmusicisos conditional expressions file conditionals expression value file file exists b file file exists block special file c file file exists character special file file file exists directory e file file exists f file file exists regular file g file file exists setgroupid bit set h file file exists symbolic link k file file exists stickybit set p file file exists named pipe fifo r file file exists readable file file exists size greater zero fd file descriptor open refers terminal u file file exists setuserid bit set w file file exists writable x file file exists executable g file file exists owned effective group id l file file exists symbolic link n file file exists modified since last read file file exists owned effective user id file file exists socket file comparisons expression file ef file files refer inode device numbers file nt file file newer file uses modification time file exists file file ot file file older file uses modification time file exists file variable conditionals expression value opt shell option enabled v var variable value assigned r var variable name reference z var length string zero n var length string nonzero variable comparisons expression var var equal var var equal synonym var var equal var var less ascii alphabetical order var var greater ascii alphabetical order arithmetic operators assignment operators initialize change value variable arithmetic operators addition subtraction multiplication division exponentiation modulo plusequal increment variable minusequal decrement variable timesequal multiply variable slashequal divide variable modequal remainder dividing variable bitwise operators bitwise left shift leftshiftequal bitwise right shift rightshiftequal bitwise bitwise andequal bitwise bitwise orequal bitwise bitwise xor bitwise xorequal logical operators miscellaneous operators example comma separator abc arithmetic simpler syntax set variables simple math var decrementincrement variable var var var var using variables varvararr ternary tests set value var var var greater var var variable set varvar condition test var test succeeds var test fails varvarvarvarvar traps traps allow script execute code various signals pxltrm pixel art editor written bash traps used redraw user interface window resize another use case cleaning temporary files script exit traps added near start scripts early errors also caught note full list signals see trap l something script exit clear screen script exit trap printf ejehem exit ignore terminal interrupt ctrlc sigint trap int react window resize call function window resize trap codehere sigwinch something every command trap codehere debug something shell function sourced file finishes executing trap codehere return performance disable unicode unicode required disabled performance increase results may vary however noticeable improvements neofetch programs disable unicode lcallc langc obsolete syntax shebang use usrbinenv bash instead binbash former searches users path find bash binary latter assumes always installed bin cause issues note times one may good reason using binbash another direct path binary right usrbinenv bash less right binbash command substitution use instead right varcommand wrong varcommand easily nested whereas cannot varcommand command function declaration use function keyword reduces compatibility older versions bash right dosomething wrong function dosomething internal variables get location bash binary bash get version current running bash process string bashversion array bashversinfo open users preferred text editor editor file note variable may empty set fallback value editorvi file get name current function current function funcname parent function funcname forth funcname funcname functions including parents funcname get hostname system hostname note variable may empty optionally set fallback hostname command hostnamehostname get architecture operating system hosttype get name operating system kernel used add conditional support different operating systems without needing call uname ostype get current working directory alternative pwd builtin pwd get number seconds script running seconds get pseudorandom integer time random used different integer returned variable used anything related security includes encryption keys etc random information terminal get terminal size lines columns script handy writing scripts pure bash sttytput cant called example function gettermsize usage gettermsize micro sleep ensure variables exported immediately shopt checkwinsize printf sn lines columns example usage output lines columns gettermsize get terminal size pixels caveat work terminal emulators example function getwindowsize usage getwindowsize printf b tmuxeptmuxeettmuxe ifst read sra termsize printf sn termsizextermsize example usage output widthxheight getwindowsize x output fail getwindowsize x get current cursor position useful creating tui pure bash example function getcursorpos usage getcursorpos ifs read p en r rs x printf sn x example usage output x getcursorpos conversion convert hex color rgb example function hextorgb usage hextorgb ffffff hextorgb rgb printf sn r g b example usage hextorgb ffffff convert rgb color hex example function rgbtohex usage rgbtohex r g b printf xxxn example usage rgbtohex ffffff code golf shorter loop syntax tiny c style fori echo undocumented method echo expansion echo done c style foriii echo done shorter infinite loops normal method echo hi done shorter echo hi shorter function declaration normal method f echo hi using subshell fecho hi using arithmetic used assign integer values example f f f using tests loops etc note case also used fif true echo fi ffor echo done shorter syntax one line note rd statement may run st true var hello echo hi echo bye var hello echo hi echo echo bye multi line else single statement note exit status may statement var hello echo hi multi line else var hello echo hi simpler case statement set variable builtin used avoid repeating variable case statement variable stores last argument last command always succeeds used store variable value modified snippet neofetch case ostype darwin macos linux linux bsd dragonfly bitrig bsd cygwin msys win windows printf sn unknown os detected aborting exit esac finally set variable os use read alternative sleep command surprisingly sleep external command bash builtin caveat requires bash example function readsleep usage readsleep readsleep read rt example usage readsleep readsleep readsleep performancecritical situations economic open close excessive number file descriptors allocation file descriptor may done invocations read see generic original implementation httpsblogdhampirnocontentsleepingwithoutasubprocessinbashandhowtosleepforever exec sleepfd somequicktest equivalent sleep read u sleepfd done check program users path ways either one used type p executablename devnull hash executablename devnull command v executablename devnull test type p executablename devnull program path fi inverse type p executablename devnull program path fi example exit early program installed type p convert devnull printf sn error convert installed exiting exit fi get current date using strftime bashs printf builtin method getting date used place date command caveat requires bash example function date usage date format see man strftime format printf tn example usage using function date b lm p fri jun using printf directly printf b lm ptn fri jun assigning variable using printf printf v date b lm ptn printf sn date fri jun get username current user caveat requires bash u expand parameter prompt string printf sn p black generate uuid v caveat generated value cryptographically secure example function uuid usage uuid cab nnn brandom case n printf x b printf cx crandomc b printf x b printf x b esac done printf n example usage uuid dbccfedd progress bars simple way drawing progress bars without needing loop function example function bar usage bar elapsed percentage total length chars elapsed create bar spaces printf v prog elapseds printf v total elapseds printf sr prog total example usage iii pure bash micro sleeps example print bar bar done printf n get list functions script getfunctions usage getfunctions ifsn read ra functions declare f printf sn functionsdeclare f bypass shell aliases alias ls command shellcheck disablesc ls bypass shell functions function ls command command ls run command background run given command keep running even terminal ssh connection terminated output ignored bkr nohup devnull bkr somescriptsh somescriptsh running background afterword thanks reading bible helped way youd like give back consider donating donations give time make best resource possible cant donate thats ok star repo share friends rock,new pure sh bibl collect pure posix sh altern extern process pure bash bibl collect pure bash altern extern process goal book document commonlyknown lesserknown method variou task use builtin bash featur use snippet bibl help remov unneed depend script case make faster came across tip discov develop neofetch pxltrm smaller project snippet lint use shellcheck test written applic want contribut read contributingmd outlin unit test work requir ad snippet bibl see someth incorrectli describ buggi outright wrong open issu send pull request bibl miss someth open issu solut found book also avail purchas leanpub httpsleanpubcombash buy coffe tabl content foreword string trim lead trail whitespac string trim whitespac string truncat space use regex string split string delimit chang string lowercas chang string uppercas revers string case trim quot string strip instanc pattern string strip first occurr pattern string strip pattern start string strip pattern end string percentencod string decod percentencod string check string contain substr check string start substr check string end substr array revers array remov duplic array element random array element cycl array toggl two valu loop loop rang number loop variabl rang number loop array loop array index loop content file loop file directori file handl read file string read file array line get first n line file get last n line file get number line file count file directori directori creat empti file extract line two marker file path get directori name file path get basenam file path variabl assign access variabl use variabl name variabl base anoth variabl escap sequenc text color text attribut cursor movement eras text paramet expans indirect replac length expans case modif default valu brace expans rang string list condit express file condit file comparison variabl condit variabl comparison arithmet oper assign arithmet bitwis logic miscellan arithmet simpler syntax set variabl ternari test trap someth script exit ignor termin interrupt ctrlc sigint react window resiz someth everi command someth shell function sourc file finish execut perform disabl unicod obsolet syntax shebang command substitut function declar intern variabl get locat bash binari get version current run bash process open user prefer text editor get name current function get hostnam system get architectur oper system get name oper system kernel get current work directori get number second script run get pseudorandom integ inform termin get termin size line column script get termin size pixel get current cursor posit convers convert hex color rgb convert rgb color hex code golf shorter loop syntax shorter infinit loop shorter function declar shorter syntax simpler case statement set variabl use read altern sleep command check program user path get current date use strftime get usernam current user gener uuid v progress bar get list function script bypass shell alias bypass shell function run command background afterword foreword collect pure bash altern extern process program bash script languag power peopl realis task accomplish without depend extern program call extern process bash expens excess use caus notic slowdown script program written use builtin method applic faster requir fewer depend afford better understand languag content book provid refer solv problem encount write program script bash exampl function format showcas incorpor solut code string trim lead trail whitespac string altern sed awk perl tool function work find lead trail whitespac remov start end string builtin use place temporari variabl exampl function trimstr usag trimstr exampl string space space printf sn exampl usag trimstr hello world hello world name john black trimstr name john black trim whitespac string truncat space altern sed awk perl tool function work abus word split creat new string without leadingtrail whitespac truncat space exampl function shellcheck disablescsc trimal usag trimal exampl string set f set printf sn set f exampl usag trimal hello world hello world name john black name trimal name john black name use regex string result bash regex match use replac sed larg number usecas caveat one platform depend bash featur bash use whatev regex engin instal user system stick posix regex featur aim compat caveat exampl print first match group use multipl captur group modif need exampl function regex usag regex string regex printf sn bashrematch exampl usag trim lead whitespac regex hello hello valid hex color regex ffffff afafafaf ffffff valid hex color invalid regex red afafafaf output invalid exampl usag script ishexcolor afafafaf printf sn bashrematch els printf sn error invalid color return fi read r color ishexcolor color colorffffff stuff split string delimit caveat requir bash altern cut awk tool exampl function split usag split string delimit ifsn read ra arr n printf sn arr exampl usag split applesorangespearsgrap appl orang pear grape split multi char delimit work split helloworldmynameisjohn hello world name john chang string lowercas caveat requir bash exampl function lower usag lower string printf sn exampl usag lower hello hello lower hello hello lower hello hello chang string uppercas caveat requir bash exampl function upper usag upper string printf sn exampl usag upper hello hello upper hello hello upper hello hello revers string case caveat requir bash exampl function reversecas usag reversecas string printf sn exampl usag reversecas hello hello reversecas hello hello reversecas hello hello trim quot string exampl function trimquot usag trimquot string printf sn exampl usag varhello world trimquot var hello world strip instanc pattern string exampl function stripal usag stripal string pattern printf sn exampl usag stripal quick brown fox aeiou th qck brwn fx stripal quick brown fox space thequickbrownfox stripal quick brown fox quick brown fox strip first occurr pattern string exampl function strip usag strip string pattern printf sn exampl usag strip quick brown fox aeiou th quick brown fox strip quick brown fox space thequick brown fox strip pattern start string exampl function lstrip usag lstrip string pattern printf sn exampl usag lstrip quick brown fox quick brown fox strip pattern end string exampl function rstrip usag rstrip string pattern printf sn exampl usag rstrip quick brown fox fox quick brown percentencod string exampl function urlencod usag urlencod string local lcallc case azaz printf printf x esac done printf n exampl usag urlencod httpsgithubcomdylanarapspurebashb httpsaffgithubcomfdylanarapsfpurebashb decod percentencod string exampl function urldecod usag urldecod string printf bn x exampl usag urldecod httpsaffgithubcomfdylanarapsfpurebashb httpsgithubcomdylanarapspurebashb check string contain substr use test var substr printf sn substr var fi invers substr string var substr printf sn substr var fi work array arr substr printf sn substr array fi use case statement case var substr stuff substr stuff els esac check string start substr var substr printf sn var start substr fi invers var start substr var substr printf sn var start substr fi check string end substr var substr printf sn var end substr fi invers var end substr var substr printf sn var end substr fi array revers array enabl extdebug allow access bashargv array store current function argument revers caveat requir shopt compat bash exampl function reversearray usag reversearray array shopt extdebug fprintf sn bashargv f shopt u extdebug exampl usag reversearray arr blue green reversearray arr green blue red remov duplic array element creat temporari associ array set associ array valu duplic assign occur bash overwrit key allow us effect remov array duplic caveat requir bash caveat list order may stay exampl function removearraydup usag removearraydup array declar tmparray if tmparrayi done printf sn tmparray exampl usag removearraydup arr red green blue blue removearraydup arr red green blue random array element exampl function randomarrayel usag randomarrayel array local arr printf sn arrrandom exampl usag arrayr green blue yellow brown randomarrayel array yellow multipl argument also pass randomarrayel cycl array time printf call next array element print print hit last array element start first element arra b c cycl printf arri iiarri toggl two valu work differ use case arrtru fals cycl printf arri iiarri loop loop rang number altern seq loop variabl support printf sn done loop variabl rang number altern seq loop var var iivari printf sn done loop array arrappl orang tomato element element arr printf sn element done loop array index arrappl orang tomato element index arr printf sn arri done altern method iiarri printf sn arri done loop content file read r line printf sn line done file loop file directori dont use ls greedi exampl file printf sn file done png file dir file picturespng printf sn file done iter directori dir download printf sn dir done brace expans file pathtoparentdirfilefilesubdirfil printf sn file done iter recurs shopt globstar file pictur printf sn file done shopt u globstar file handl caveat bash handl binari data properli version read file string altern cat command filedatafil read file array line altern cat command bash discard empti line ifsn read ra filedata file bash preserv empti line read r line filedatalin done file bash mapfil filedata file get first n line file altern head command caveat requir bash exampl function head usag head n file mapfil tn line printf sn line exampl usag head bashrc prompt ps head bashrc prompt get last n line file altern tail command caveat requir bash exampl function tail usag tail n file mapfil tn line printf sn line exampl usag tail bashrc enabl tmux z tmux exec tmux tail bashrc z tmux exec tmux get number line file altern wc l exampl function bash line usag line file mapfil tn line printf sn line exampl function bash method use less memori mapfil method work bash slower bigger file linesloop usag linesloop file count if read r count done printf sn count exampl usag line bashrc linesloop bashrc count file directori directori work pass output glob function count number argument exampl function count usag count pathtodir count pathtodir printf sn exampl usag count file dir count download count dir dir count download count jpg file dir count picturesjpg creat empti file altern touch shortest file longer altern file echo n file printf file extract line two marker exampl function extract usag extract file open marker close marker ifsn read r line extract line printf sn line line extract line extract done exampl usag extract code block markdown file extract projectspurebashreadmemd sh output file path get directori name file path altern dirnam command exampl function dirnam usag dirnam path local tmp tmp printf n return tmptmptmp tmp printf n return tmptmp tmptmptmp printf sn tmp exampl usag dirnam pictureswallpapersjpg homeblackpictureswallpap dirnam picturesdownload homeblackpictur get basenam file path altern basenam command exampl function basenam usag basenam path suffix local tmp tmp tmptmp tmptmptmp printf sn tmp exampl usag basenam pictureswallpapersjpg jpg basenam pictureswallpapersjpg jpg basenam picturesdownload download variabl assign access variabl use variabl helloworldvalu creat variabl name varworld refhellovar print valu variabl name store hellovar printf sn ref valu altern bash helloworldvalu varworld declar nameref declar n refhellovar printf sn ref valu name variabl base anoth variabl varworld declar hellovarvalu printf sn helloworld valu escap sequenc contrari popular belief issu util raw escap sequenc use tput abstract ansi sequenc print manual wors still tput actual portabl number tput variant differ command syntax tri tput setaf freebsd system raw sequenc fine text color note sequenc requir rgb valu work truecolor termin emul sequenc valu enumm set text foreground color enumm set text background color ergbm set text foreground color rgb color r g b ergbm set text background color rgb color r g b text attribut note prepend code turn effect exampl bold text faint text ital text sequenc em reset text format color em bold text em faint text em ital text em underlin text em blink text em highlight text em hidden text em strikethrough text cursor movement sequenc valu elinecolumnh move cursor absolut posit line column eh move cursor home posit enuma move cursor n line num enumb move cursor n line num enumc move cursor right n column num enumd move cursor left n column num es save cursor posit eu restor cursor posit eras text sequenc ek eras cursor posit end line ek eras cursor posit start line ek eras entir current line ej eras current line bottom screen ej eras current line top screen ej clear screen ejeh clear screen move cursor paramet expans indirect paramet var access variabl base valu var var expand if separ list variabl name start var var expand if separ list variabl name start var doublequot variabl name expand separ word replac paramet varpattern remov shortest match pattern start string varpattern remov longest match pattern start string varpattern remov shortest match pattern end string varpattern remov longest match pattern end string varpatternreplac replac first match string varpatternreplac replac match string varpattern remov first match varpattern remov match length paramet var length var charact arr length array element expans paramet varoffset remov first n char variabl varoffsetlength get substr n charact n charact var get substr char char var offset get first n char variabl var offset remov last n char variabl var offset get last n char variabl varoffsetoffset cut first n char last n char case modif paramet caveat var uppercas first charact bash var uppercas charact bash var lowercas first charact bash var lowercas charact bash var revers case first charact bash var revers case charact bash default valu paramet varstr var empti unset use string valu varstr var unset use string valu varstr var empti unset set valu var string varstr var unset set valu var string varstr var empti use string valu varstr var set use string valu varstr display error empti unset varstr display error unset brace expans rang syntax startend print number echo print rang float echo print char az echo az echo az nest echo az print zeropad number caveat bash echo chang increment amount syntax startendincr caveat bash echo increment string list echo applesorangespearsgrap exampl usag remov dir movi music iso download rm rf downloadsmoviesmusiciso condit express file condit express valu file file exist b file file exist block special file c file file exist charact special file file file exist directori e file file exist f file file exist regular file g file file exist setgroupid bit set h file file exist symbol link k file file exist stickybit set p file file exist name pipe fifo r file file exist readabl file file exist size greater zero fd file descriptor open refer termin u file file exist setuserid bit set w file file exist writabl x file file exist execut g file file exist own effect group id l file file exist symbol link n file file exist modifi sinc last read file file exist own effect user id file file exist socket file comparison express file ef file file refer inod devic number file nt file file newer file use modif time file exist file file ot file file older file use modif time file exist file variabl condit express valu opt shell option enabl v var variabl valu assign r var variabl name refer z var length string zero n var length string nonzero variabl comparison express var var equal var var equal synonym var var equal var var less ascii alphabet order var var greater ascii alphabet order arithmet oper assign oper initi chang valu variabl arithmet oper addit subtract multipl divis exponenti modulo plusequ increment variabl minusequ decrement variabl timesequ multipli variabl slashequ divid variabl modequ remaind divid variabl bitwis oper bitwis left shift leftshiftequ bitwis right shift rightshiftequ bitwis bitwis andequ bitwis bitwis orequ bitwis bitwis xor bitwis xorequ logic oper miscellan oper exampl comma separ abc arithmet simpler syntax set variabl simpl math var decrementincr variabl var var var var use variabl varvararr ternari test set valu var var var greater var var variabl set varvar condit test var test succe var test fail varvarvarvarvar trap trap allow script execut code variou signal pxltrm pixel art editor written bash trap use redraw user interfac window resiz anoth use case clean temporari file script exit trap ad near start script earli error also caught note full list signal see trap l someth script exit clear screen script exit trap printf ejehem exit ignor termin interrupt ctrlc sigint trap int react window resiz call function window resiz trap codeher sigwinch someth everi command trap codeher debug someth shell function sourc file finish execut trap codeher return perform disabl unicod unicod requir disabl perform increas result may vari howev notic improv neofetch program disabl unicod lcallc langc obsolet syntax shebang use usrbinenv bash instead binbash former search user path find bash binari latter assum alway instal bin caus issu note time one may good reason use binbash anoth direct path binari right usrbinenv bash less right binbash command substitut use instead right varcommand wrong varcommand easili nest wherea cannot varcommand command function declar use function keyword reduc compat older version bash right dosometh wrong function dosometh intern variabl get locat bash binari bash get version current run bash process string bashvers array bashversinfo open user prefer text editor editor file note variabl may empti set fallback valu editorvi file get name current function current function funcnam parent function funcnam forth funcnam funcnam function includ parent funcnam get hostnam system hostnam note variabl may empti option set fallback hostnam command hostnamehostnam get architectur oper system hosttyp get name oper system kernel use add condit support differ oper system without need call unam ostyp get current work directori altern pwd builtin pwd get number second script run second get pseudorandom integ time random use differ integ return variabl use anyth relat secur includ encrypt key etc random inform termin get termin size line column script handi write script pure bash sttytput cant call exampl function getterms usag getterms micro sleep ensur variabl export immedi shopt checkwins printf sn line column exampl usag output line column getterms get termin size pixel caveat work termin emul exampl function getwindows usag getwindows printf b tmuxeptmuxeettmux ifst read sra termsiz printf sn termsizexterms exampl usag output widthxheight getwindows x output fail getwindows x get current cursor posit use creat tui pure bash exampl function getcursorpo usag getcursorpo if read p en r rs x printf sn x exampl usag output x getcursorpo convers convert hex color rgb exampl function hextorgb usag hextorgb ffffff hextorgb rgb printf sn r g b exampl usag hextorgb ffffff convert rgb color hex exampl function rgbtohex usag rgbtohex r g b printf xxxn exampl usag rgbtohex ffffff code golf shorter loop syntax tini c style fori echo undocu method echo expans echo done c style foriii echo done shorter infinit loop normal method echo hi done shorter echo hi shorter function declar normal method f echo hi use subshel fecho hi use arithmet use assign integ valu exampl f f f use test loop etc note case also use fif true echo fi ffor echo done shorter syntax one line note rd statement may run st true var hello echo hi echo bye var hello echo hi echo echo bye multi line els singl statement note exit statu may statement var hello echo hi multi line els var hello echo hi simpler case statement set variabl builtin use avoid repeat variabl case statement variabl store last argument last command alway succe use store variabl valu modifi snippet neofetch case ostyp darwin maco linux linux bsd dragonfli bitrig bsd cygwin msi win window printf sn unknown os detect abort exit esac final set variabl os use read altern sleep command surprisingli sleep extern command bash builtin caveat requir bash exampl function readsleep usag readsleep readsleep read rt exampl usag readsleep readsleep readsleep performancecrit situat econom open close excess number file descriptor alloc file descriptor may done invoc read see gener origin implement httpsblogdhampirnocontentsleepingwithoutasubprocessinbashandhowtosleepforev exec sleepfd somequicktest equival sleep read u sleepfd done check program user path way either one use type p executablenam devnul hash executablenam devnul command v executablenam devnul test type p executablenam devnul program path fi invers type p executablenam devnul program path fi exampl exit earli program instal type p convert devnul printf sn error convert instal exit exit fi get current date use strftime bash printf builtin method get date use place date command caveat requir bash exampl function date usag date format see man strftime format printf tn exampl usag use function date b lm p fri jun use printf directli printf b lm ptn fri jun assign variabl use printf printf v date b lm ptn printf sn date fri jun get usernam current user caveat requir bash u expand paramet prompt string printf sn p black gener uuid v caveat gener valu cryptograph secur exampl function uuid usag uuid cab nnn brandom case n printf x b printf cx crandomc b printf x b printf x b esac done printf n exampl usag uuid dbccfedd progress bar simpl way draw progress bar without need loop function exampl function bar usag bar elaps percentag total length char elaps creat bar space printf v prog elaps printf v total elaps printf sr prog total exampl usag iii pure bash micro sleep exampl print bar bar done printf n get list function script getfunct usag getfunct ifsn read ra function declar f printf sn functionsdeclar f bypass shell alias alia ls command shellcheck disablesc ls bypass shell function function ls command command ls run command background run given command keep run even termin ssh connect termin output ignor bkr nohup devnul bkr somescriptsh somescriptsh run background afterword thank read bibl help way youd like give back consid donat donat give time make best resourc possibl cant donat that ok star repo share friend rock,new pure sh bible collection pure posix sh alternative external process pure bash bible collection pure bash alternative external process goal book document commonlyknown lesserknown method various task using builtin bash feature using snippet bible help remove unneeded dependency script case make faster came across tip discovered developing neofetch pxltrm smaller project snippet linted using shellcheck test written applicable want contribute read contributingmd outline unit test work required adding snippet bible see something incorrectly described buggy outright wrong open issue send pull request bible missing something open issue solution found book also available purchase leanpub httpsleanpubcombash buy coffee table content foreword string trim leading trailing whitespace string trim whitespace string truncate space use regex string split string delimiter change string lowercase change string uppercase reverse string case trim quote string strip instance pattern string strip first occurrence pattern string strip pattern start string strip pattern end string percentencode string decode percentencoded string check string contains substring check string start substring check string end substring array reverse array remove duplicate array element random array element cycle array toggle two value loop loop range number loop variable range number loop array loop array index loop content file loop file directory file handling read file string read file array line get first n line file get last n line file get number line file count file directory directory create empty file extract line two marker file path get directory name file path get basename file path variable assign access variable using variable name variable based another variable escape sequence text color text attribute cursor movement erasing text parameter expansion indirection replacement length expansion case modification default value brace expansion range string list conditional expression file conditionals file comparison variable conditionals variable comparison arithmetic operator assignment arithmetic bitwise logical miscellaneous arithmetic simpler syntax set variable ternary test trap something script exit ignore terminal interrupt ctrlc sigint react window resize something every command something shell function sourced file finish executing performance disable unicode obsolete syntax shebang command substitution function declaration internal variable get location bash binary get version current running bash process open user preferred text editor get name current function get hostname system get architecture operating system get name operating system kernel get current working directory get number second script running get pseudorandom integer information terminal get terminal size line column script get terminal size pixel get current cursor position conversion convert hex color rgb convert rgb color hex code golf shorter loop syntax shorter infinite loop shorter function declaration shorter syntax simpler case statement set variable use read alternative sleep command check program user path get current date using strftime get username current user generate uuid v progress bar get list function script bypass shell alias bypass shell function run command background afterword foreword collection pure bash alternative external process program bash scripting language powerful people realise task accomplished without depending external program calling external process bash expensive excessive use cause noticeable slowdown script program written using builtin method applicable faster require fewer dependency afford better understanding language content book provide reference solving problem encountered writing program script bash example function format showcasing incorporate solution code string trim leading trailing whitespace string alternative sed awk perl tool function work finding leading trailing whitespace removing start end string builtin used place temporary variable example function trimstring usage trimstring example string space space printf sn example usage trimstring hello world hello world name john black trimstring name john black trim whitespace string truncate space alternative sed awk perl tool function work abusing word splitting create new string without leadingtrailing whitespace truncated space example function shellcheck disablescsc trimall usage trimall example string set f set printf sn set f example usage trimall hello world hello world name john black name trimall name john black name use regex string result bash regex matching used replace sed large number usecases caveat one platform dependent bash feature bash use whatever regex engine installed user system stick posix regex feature aiming compatibility caveat example print first matching group using multiple capture group modification needed example function regex usage regex string regex printf sn bashrematch example usage trim leading whitespace regex hello hello validate hex color regex ffffff afafafaf ffffff validate hex color invalid regex red afafafaf output invalid example usage script ishexcolor afafafaf printf sn bashrematch else printf sn error invalid color return fi read r color ishexcolor color colorffffff stuff split string delimiter caveat requires bash alternative cut awk tool example function split usage split string delimiter ifsn read ra arr n printf sn arr example usage split applesorangespearsgrapes apple orange pear grape split multi char delimiters work split helloworldmynameisjohn hello world name john change string lowercase caveat requires bash example function lower usage lower string printf sn example usage lower hello hello lower hello hello lower hello hello change string uppercase caveat requires bash example function upper usage upper string printf sn example usage upper hello hello upper hello hello upper hello hello reverse string case caveat requires bash example function reversecase usage reversecase string printf sn example usage reversecase hello hello reversecase hello hello reversecase hello hello trim quote string example function trimquotes usage trimquotes string printf sn example usage varhello world trimquotes var hello world strip instance pattern string example function stripall usage stripall string pattern printf sn example usage stripall quick brown fox aeiou th qck brwn fx stripall quick brown fox space thequickbrownfox stripall quick brown fox quick brown fox strip first occurrence pattern string example function strip usage strip string pattern printf sn example usage strip quick brown fox aeiou th quick brown fox strip quick brown fox space thequick brown fox strip pattern start string example function lstrip usage lstrip string pattern printf sn example usage lstrip quick brown fox quick brown fox strip pattern end string example function rstrip usage rstrip string pattern printf sn example usage rstrip quick brown fox fox quick brown percentencode string example function urlencode usage urlencode string local lcallc case azaz printf printf x esac done printf n example usage urlencode httpsgithubcomdylanarapspurebashbible httpsaffgithubcomfdylanarapsfpurebashbible decode percentencoded string example function urldecode usage urldecode string printf bn x example usage urldecode httpsaffgithubcomfdylanarapsfpurebashbible httpsgithubcomdylanarapspurebashbible check string contains substring using test var substring printf sn substring var fi inverse substring string var substring printf sn substring var fi work array arr substring printf sn substring array fi using case statement case var substring stuff substring stuff else esac check string start substring var substring printf sn var start substring fi inverse var start substring var substring printf sn var start substring fi check string end substring var substring printf sn var end substring fi inverse var end substring var substring printf sn var end substring fi array reverse array enabling extdebug allows access bashargv array store current function argument reverse caveat requires shopt compat bash example function reversearray usage reversearray array shopt extdebug fprintf sn bashargv f shopt u extdebug example usage reversearray arrred blue green reversearray arr green blue red remove duplicate array element create temporary associative array setting associative array value duplicate assignment occurs bash overwrites key allows u effectively remove array duplicate caveat requires bash caveat list order may stay example function removearraydups usage removearraydups array declare tmparray ifs tmparrayi done printf sn tmparray example usage removearraydups arrred red green blue blue removearraydups arr red green blue random array element example function randomarrayelement usage randomarrayelement array local arr printf sn arrrandom example usage arrayred green blue yellow brown randomarrayelement array yellow multiple argument also passed randomarrayelement cycle array time printf called next array element printed print hit last array element start first element arra b c cycle printf arri iiarri toggle two value work different use case arrtrue false cycle printf arri iiarri loop loop range number alternative seq loop variable support printf sn done loop variable range number alternative seq loop var var iivari printf sn done loop array arrapples orange tomato element element arr printf sn element done loop array index arrapples orange tomato element index arr printf sn arri done alternative method iiarri printf sn arri done loop content file read r line printf sn line done file loop file directory dont use l greedy example file printf sn file done png file dir file picturespng printf sn file done iterate directory dir downloads printf sn dir done brace expansion file pathtoparentdirfilefilesubdirfile printf sn file done iterate recursively shopt globstar file picture printf sn file done shopt u globstar file handling caveat bash handle binary data properly version read file string alternative cat command filedatafile read file array line alternative cat command bash discarding empty line ifsn read ra filedata file bash preserving empty line read r line filedataline done file bash mapfile filedata file get first n line file alternative head command caveat requires bash example function head usage head n file mapfile tn line printf sn line example usage head bashrc prompt p head bashrc prompt get last n line file alternative tail command caveat requires bash example function tail usage tail n file mapfile tn line printf sn line example usage tail bashrc enable tmux z tmux exec tmux tail bashrc z tmux exec tmux get number line file alternative wc l example function bash line usage line file mapfile tn line printf sn line example function bash method us le memory mapfile method work bash slower bigger file linesloop usage linesloop file count ifs read r count done printf sn count example usage line bashrc linesloop bashrc count file directory directory work passing output glob function counting number argument example function count usage count pathtodir count pathtodir printf sn example usage count file dir count downloads count dirs dir count downloads count jpg file dir count picturesjpg create empty file alternative touch shortest file longer alternative file echo n file printf file extract line two marker example function extract usage extract file opening marker closing marker ifsn read r line extract line printf sn line line extract line extract done example usage extract code block markdown file extract projectspurebashreadmemd sh output file path get directory name file path alternative dirname command example function dirname usage dirname path local tmp tmp printf n return tmptmptmp tmp printf n return tmptmp tmptmptmp printf sn tmp example usage dirname pictureswallpapersjpg homeblackpictureswallpapers dirname picturesdownloads homeblackpictures get basename file path alternative basename command example function basename usage basename path suffix local tmp tmp tmptmp tmptmptmp printf sn tmp example usage basename pictureswallpapersjpg jpg basename pictureswallpapersjpg jpg basename picturesdownloads downloads variable assign access variable using variable helloworldvalue create variable name varworld refhellovar print value variable name stored hellovar printf sn ref value alternatively bash helloworldvalue varworld declare nameref declare n refhellovar printf sn ref value name variable based another variable varworld declare hellovarvalue printf sn helloworld value escape sequence contrary popular belief issue utilizing raw escape sequence using tput abstract ansi sequence printed manually worse still tput actually portable number tput variant different command syntax try tput setaf freebsd system raw sequence fine text color note sequence requiring rgb value work truecolor terminal emulator sequence value enumm set text foreground color enumm set text background color ergbm set text foreground color rgb color r g b ergbm set text background color rgb color r g b text attribute note prepend code turn effect example bold text faint text italic text sequence em reset text formatting color em bold text em faint text em italic text em underline text em blinking text em highlighted text em hidden text em strikethrough text cursor movement sequence value elinecolumnh move cursor absolute position line column eh move cursor home position enuma move cursor n line num enumb move cursor n line num enumc move cursor right n column num enumd move cursor left n column num e save cursor position eu restore cursor position erasing text sequence ek erase cursor position end line ek erase cursor position start line ek erase entire current line ej erase current line bottom screen ej erase current line top screen ej clear screen ejeh clear screen move cursor parameter expansion indirection parameter var access variable based value var var expand ifs separated list variable name starting var var expand ifs separated list variable name starting var doublequoted variable name expands separate word replacement parameter varpattern remove shortest match pattern start string varpattern remove longest match pattern start string varpattern remove shortest match pattern end string varpattern remove longest match pattern end string varpatternreplace replace first match string varpatternreplace replace match string varpattern remove first match varpattern remove match length parameter var length var character arr length array element expansion parameter varoffset remove first n char variable varoffsetlength get substring n character n character var get substring char char var offset get first n char variable var offset remove last n char variable var offset get last n char variable varoffsetoffset cut first n char last n char case modification parameter caveat var uppercase first character bash var uppercase character bash var lowercase first character bash var lowercase character bash var reverse case first character bash var reverse case character bash default value parameter varstring var empty unset use string value varstring var unset use string value varstring var empty unset set value var string varstring var unset set value var string varstring var empty use string value varstring var set use string value varstring display error empty unset varstring display error unset brace expansion range syntax startend print number echo print range float echo print char az echo az echo az nesting echo az print zeropadded number caveat bash echo change increment amount syntax startendincrement caveat bash echo increment string list echo applesorangespearsgrapes example usage remove dirs movie music isos downloads rm rf downloadsmoviesmusicisos conditional expression file conditionals expression value file file exists b file file exists block special file c file file exists character special file file file exists directory e file file exists f file file exists regular file g file file exists setgroupid bit set h file file exists symbolic link k file file exists stickybit set p file file exists named pipe fifo r file file exists readable file file exists size greater zero fd file descriptor open refers terminal u file file exists setuserid bit set w file file exists writable x file file exists executable g file file exists owned effective group id l file file exists symbolic link n file file exists modified since last read file file exists owned effective user id file file exists socket file comparison expression file ef file file refer inode device number file nt file file newer file us modification time file exists file file ot file file older file us modification time file exists file variable conditionals expression value opt shell option enabled v var variable value assigned r var variable name reference z var length string zero n var length string nonzero variable comparison expression var var equal var var equal synonym var var equal var var le ascii alphabetical order var var greater ascii alphabetical order arithmetic operator assignment operator initialize change value variable arithmetic operator addition subtraction multiplication division exponentiation modulo plusequal increment variable minusequal decrement variable timesequal multiply variable slashequal divide variable modequal remainder dividing variable bitwise operator bitwise left shift leftshiftequal bitwise right shift rightshiftequal bitwise bitwise andequal bitwise bitwise orequal bitwise bitwise xor bitwise xorequal logical operator miscellaneous operator example comma separator abc arithmetic simpler syntax set variable simple math var decrementincrement variable var var var var using variable varvararr ternary test set value var var var greater var var variable set varvar condition test var test succeeds var test fails varvarvarvarvar trap trap allow script execute code various signal pxltrm pixel art editor written bash trap used redraw user interface window resize another use case cleaning temporary file script exit trap added near start script early error also caught note full list signal see trap l something script exit clear screen script exit trap printf ejehem exit ignore terminal interrupt ctrlc sigint trap int react window resize call function window resize trap codehere sigwinch something every command trap codehere debug something shell function sourced file finish executing trap codehere return performance disable unicode unicode required disabled performance increase result may vary however noticeable improvement neofetch program disable unicode lcallc langc obsolete syntax shebang use usrbinenv bash instead binbash former search user path find bash binary latter assumes always installed bin cause issue note time one may good reason using binbash another direct path binary right usrbinenv bash le right binbash command substitution use instead right varcommand wrong varcommand easily nested whereas cannot varcommand command function declaration use function keyword reduces compatibility older version bash right dosomething wrong function dosomething internal variable get location bash binary bash get version current running bash process string bashversion array bashversinfo open user preferred text editor editor file note variable may empty set fallback value editorvi file get name current function current function funcname parent function funcname forth funcname funcname function including parent funcname get hostname system hostname note variable may empty optionally set fallback hostname command hostnamehostname get architecture operating system hosttype get name operating system kernel used add conditional support different operating system without needing call uname ostype get current working directory alternative pwd builtin pwd get number second script running second get pseudorandom integer time random used different integer returned variable used anything related security includes encryption key etc random information terminal get terminal size line column script handy writing script pure bash sttytput cant called example function gettermsize usage gettermsize micro sleep ensure variable exported immediately shopt checkwinsize printf sn line column example usage output line column gettermsize get terminal size pixel caveat work terminal emulator example function getwindowsize usage getwindowsize printf b tmuxeptmuxeettmuxe ifst read sra termsize printf sn termsizextermsize example usage output widthxheight getwindowsize x output fail getwindowsize x get current cursor position useful creating tui pure bash example function getcursorpos usage getcursorpos ifs read p en r r x printf sn x example usage output x getcursorpos conversion convert hex color rgb example function hextorgb usage hextorgb ffffff hextorgb rgb printf sn r g b example usage hextorgb ffffff convert rgb color hex example function rgbtohex usage rgbtohex r g b printf xxxn example usage rgbtohex ffffff code golf shorter loop syntax tiny c style fori echo undocumented method echo expansion echo done c style foriii echo done shorter infinite loop normal method echo hi done shorter echo hi shorter function declaration normal method f echo hi using subshell fecho hi using arithmetic used assign integer value example f f f using test loop etc note case also used fif true echo fi ffor echo done shorter syntax one line note rd statement may run st true var hello echo hi echo bye var hello echo hi echo echo bye multi line else single statement note exit status may statement var hello echo hi multi line else var hello echo hi simpler case statement set variable builtin used avoid repeating variable case statement variable store last argument last command always succeeds used store variable value modified snippet neofetch case ostype darwin macos linux linux bsd dragonfly bitrig bsd cygwin msys win window printf sn unknown o detected aborting exit esac finally set variable o use read alternative sleep command surprisingly sleep external command bash builtin caveat requires bash example function readsleep usage readsleep readsleep read rt example usage readsleep readsleep readsleep performancecritical situation economic open close excessive number file descriptor allocation file descriptor may done invocation read see generic original implementation httpsblogdhampirnocontentsleepingwithoutasubprocessinbashandhowtosleepforever exec sleepfd somequicktest equivalent sleep read u sleepfd done check program user path way either one used type p executablename devnull hash executablename devnull command v executablename devnull test type p executablename devnull program path fi inverse type p executablename devnull program path fi example exit early program installed type p convert devnull printf sn error convert installed exiting exit fi get current date using strftime bash printf builtin method getting date used place date command caveat requires bash example function date usage date format see man strftime format printf tn example usage using function date b lm p fri jun using printf directly printf b lm ptn fri jun assigning variable using printf printf v date b lm ptn printf sn date fri jun get username current user caveat requires bash u expand parameter prompt string printf sn p black generate uuid v caveat generated value cryptographically secure example function uuid usage uuid cab nnn brandom case n printf x b printf cx crandomc b printf x b printf x b esac done printf n example usage uuid dbccfedd progress bar simple way drawing progress bar without needing loop function example function bar usage bar elapsed percentage total length char elapsed create bar space printf v prog elapseds printf v total elapseds printf sr prog total example usage iii pure bash micro sleep example print bar bar done printf n get list function script getfunctions usage getfunctions ifsn read ra function declare f printf sn functionsdeclare f bypass shell alias alias l command shellcheck disablesc l bypass shell function function l command command l run command background run given command keep running even terminal ssh connection terminated output ignored bkr nohup devnull bkr somescriptsh somescriptsh running background afterword thanks reading bible helped way youd like give back consider donating donation give time make best resource possible cant donate thats ok star repo share friend rock
66,Shell,GitHub - nvie/gitflow: Git extensions to provide high-level repository operations for Vincent Driessen's branching model.,"git-flow
A collection of Git extensions to provide high-level repository operations
for Vincent Driessen's branching model.
Getting started
For the best introduction to get started with git flow, please read Jeff
Kreeftmeijer's blog post:
http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/
Or have a look at one of these screen casts:

How to use a scalable Git branching model called git-flow (by Build a Module)
A short introduction to git-flow (by Mark Derricutt)
On the path with git-flow (by Dave Bock)

Installing git-flow
See the Wiki for up-to-date Installation Instructions.
Integration with your shell
For those who use the Bash or
ZSH shell, please check out the excellent work on the
git-flow-completion project
by bobthecow. It offers tab-completion for all
git-flow subcommands and branch names.
FAQ
See the FAQ section of the project
Wiki.
Please help out
This project is still under development. Feedback and suggestions are very
welcome and I encourage you to use the Issues
list on Github to provide that
feedback.
Feel free to fork this repo and to commit your additions. For a list of all
contributors, please see the AUTHORS file.
Any questions, tips, or general discussion can be posted to our Google group:
http://groups.google.com/group/gitflow-users
Contributing
Fork the repository.  Then, run:
git clone --recursive git@github.com:<username>/gitflow.git
cd gitflow
git branch master origin/master
git flow init -d
git flow feature start <your feature>

Then, do work and commit your changes.  Hint: export PATH=`pwd`:$PATH
from within the gitflow directory makes sure you're using the version of
gitflow you're currently developing.
git flow feature publish <your feature>

When done, open a pull request to your feature branch.
License terms
git-flow is published under the liberal terms of the BSD License, see the
LICENSE file. Although the BSD License does not require you to share
any modifications you make to the source code, you are very much encouraged and
invited to contribute back your modifications to the community, preferably
in a Github fork, of course.
Initialization
To initialize a new repo with the basic branch structure, use:
	git flow init [-d]

This will then interactively prompt you with some questions on which branches
you would like to use as development and production branches, and how you
would like your prefixes be named. You may simply press Return on any of
those questions to accept the (sane) default suggestions.
The -d flag will accept all defaults.
Creating feature/release/hotfix/support branches


To list/start/finish feature branches, use:
  git flow feature
  git flow feature start <name> [<base>]
  git flow feature finish <name>

For feature branches, the <base> arg must be a commit on develop.


To push/pull a feature branch to the remote repository, use:
  git flow feature publish <name>
    git flow feature pull <remote> <name>



To list/start/finish release branches, use:
  git flow release
  git flow release start <release> [<base>]
  git flow release finish <release>

For release branches, the <base> arg must be a commit on develop.


To list/start/finish hotfix branches, use:
  git flow hotfix
  git flow hotfix start <release> [<base>]
  git flow hotfix finish <release>

For hotfix branches, the <base> arg must be a commit on master.


To list/start support branches, use:
  git flow support
  git flow support start <release> <base>

For support branches, the <base> arg must be a commit on master.


Showing your appreciation
A few people already requested it, so now it's here: a Flattr button.
Of course, the best way to show your appreciation for the original
blog post or the git-flow tool itself remains
contributing to the community.  If you'd like to show your appreciation in
another way, however, consider Flattr'ing me:

",gitflow collection git extensions provide highlevel repository operations vincent driessens branching model getting started best introduction get started git flow please read jeff kreeftmeijers blog post httpjeffkreeftmeijercomwhyarentyouusinggitflow look one screen casts use scalable git branching model called gitflow build module short introduction gitflow mark derricutt path gitflow dave bock installing gitflow see wiki uptodate installation instructions integration shell use bash zsh shell please check excellent work gitflowcompletion project bobthecow offers tabcompletion gitflow subcommands branch names faq see faq section project wiki please help project still development feedback suggestions welcome encourage use issues list github provide feedback feel free fork repo commit additions list contributors please see authors file questions tips general discussion posted google group httpgroupsgooglecomgroupgitflowusers contributing fork repository run git clone recursive gitgithubcomusernamegitflowgit cd gitflow git branch master originmaster git flow init git flow feature start feature work commit changes hint export pathpwdpath within gitflow directory makes sure youre using version gitflow youre currently developing git flow feature publish feature done open pull request feature branch license terms gitflow published liberal terms bsd license see license file although bsd license require share modifications make source code much encouraged invited contribute back modifications community preferably github fork course initialization initialize new repo basic branch structure use &#9; git flow init interactively prompt questions branches would like use development production branches would like prefixes named may simply press return questions accept sane default suggestions flag accept defaults creating featurereleasehotfixsupport branches liststartfinish feature branches use git flow feature git flow feature start name base git flow feature finish name feature branches base arg must commit develop pushpull feature branch remote repository use git flow feature publish name git flow feature pull remote name liststartfinish release branches use git flow release git flow release start release base git flow release finish release release branches base arg must commit develop liststartfinish hotfix branches use git flow hotfix git flow hotfix start release base git flow hotfix finish release hotfix branches base arg must commit master liststart support branches use git flow support git flow support start release base support branches base arg must commit master showing appreciation people already requested flattr button course best way show appreciation original blog post gitflow tool remains contributing community youd like show appreciation another way however consider flattring,gitflow collect git extens provid highlevel repositori oper vincent driessen branch model get start best introduct get start git flow pleas read jeff kreeftmeij blog post httpjeffkreeftmeijercomwhyarentyouusinggitflow look one screen cast use scalabl git branch model call gitflow build modul short introduct gitflow mark derricutt path gitflow dave bock instal gitflow see wiki uptod instal instruct integr shell use bash zsh shell pleas check excel work gitflowcomplet project bobthecow offer tabcomplet gitflow subcommand branch name faq see faq section project wiki pleas help project still develop feedback suggest welcom encourag use issu list github provid feedback feel free fork repo commit addit list contributor pleas see author file question tip gener discuss post googl group httpgroupsgooglecomgroupgitflowus contribut fork repositori run git clone recurs gitgithubcomusernamegitflowgit cd gitflow git branch master originmast git flow init git flow featur start featur work commit chang hint export pathpwdpath within gitflow directori make sure your use version gitflow your current develop git flow featur publish featur done open pull request featur branch licens term gitflow publish liber term bsd licens see licens file although bsd licens requir share modif make sourc code much encourag invit contribut back modif commun prefer github fork cours initi initi new repo basic branch structur use &#9; git flow init interact prompt question branch would like use develop product branch would like prefix name may simpli press return question accept sane default suggest flag accept default creat featurereleasehotfixsupport branch liststartfinish featur branch use git flow featur git flow featur start name base git flow featur finish name featur branch base arg must commit develop pushpul featur branch remot repositori use git flow featur publish name git flow featur pull remot name liststartfinish releas branch use git flow releas git flow releas start releas base git flow releas finish releas releas branch base arg must commit develop liststartfinish hotfix branch use git flow hotfix git flow hotfix start releas base git flow hotfix finish releas hotfix branch base arg must commit master liststart support branch use git flow support git flow support start releas base support branch base arg must commit master show appreci peopl alreadi request flattr button cours best way show appreci origin blog post gitflow tool remain contribut commun youd like show appreci anoth way howev consid flattr,gitflow collection git extension provide highlevel repository operation vincent driessens branching model getting started best introduction get started git flow please read jeff kreeftmeijers blog post httpjeffkreeftmeijercomwhyarentyouusinggitflow look one screen cast use scalable git branching model called gitflow build module short introduction gitflow mark derricutt path gitflow dave bock installing gitflow see wiki uptodate installation instruction integration shell use bash zsh shell please check excellent work gitflowcompletion project bobthecow offer tabcompletion gitflow subcommands branch name faq see faq section project wiki please help project still development feedback suggestion welcome encourage use issue list github provide feedback feel free fork repo commit addition list contributor please see author file question tip general discussion posted google group httpgroupsgooglecomgroupgitflowusers contributing fork repository run git clone recursive gitgithubcomusernamegitflowgit cd gitflow git branch master originmaster git flow init git flow feature start feature work commit change hint export pathpwdpath within gitflow directory make sure youre using version gitflow youre currently developing git flow feature publish feature done open pull request feature branch license term gitflow published liberal term bsd license see license file although bsd license require share modification make source code much encouraged invited contribute back modification community preferably github fork course initialization initialize new repo basic branch structure use &#9; git flow init interactively prompt question branch would like use development production branch would like prefix named may simply press return question accept sane default suggestion flag accept default creating featurereleasehotfixsupport branch liststartfinish feature branch use git flow feature git flow feature start name base git flow feature finish name feature branch base arg must commit develop pushpull feature branch remote repository use git flow feature publish name git flow feature pull remote name liststartfinish release branch use git flow release git flow release start release base git flow release finish release release branch base arg must commit develop liststartfinish hotfix branch use git flow hotfix git flow hotfix start release base git flow hotfix finish release hotfix branch base arg must commit master liststart support branch use git flow support git flow support start release base support branch base arg must commit master showing appreciation people already requested flattr button course best way show appreciation original blog post gitflow tool remains contributing community youd like show appreciation another way however consider flattring
67,Shell,"GitHub - mathiasbynens/dotfiles: .files, including ~/.macos ‚Äî sensible hacker defaults for macOS","Mathias‚Äôs dotfiles

Installation
Warning: If you want to give these dotfiles a try, you should first fork this repository, review the code, and remove things you don‚Äôt want or need. Don‚Äôt blindly use my settings unless you know what that entails. Use at your own risk!
Using Git and the bootstrap script
You can clone the repository wherever you want. (I like to keep it in ~/Projects/dotfiles, with ~/dotfiles as a symlink.) The bootstrapper script will pull in the latest version and copy the files to your home folder.
git clone https://github.com/mathiasbynens/dotfiles.git && cd dotfiles && source bootstrap.sh
To update, cd into your local dotfiles repository and then:
source bootstrap.sh
Alternatively, to update while avoiding the confirmation prompt:
set -- -f; source bootstrap.sh
Git-free install
To install these dotfiles without Git:
cd; curl -#L https://github.com/mathiasbynens/dotfiles/tarball/master | tar -xzv --strip-components 1 --exclude={README.md,bootstrap.sh,.osx,LICENSE-MIT.txt}
To update later on, just run that command again.
Specify the $PATH
If ~/.path exists, it will be sourced along with the other files, before any feature testing (such as detecting which version of ls is being used) takes place.
Here‚Äôs an example ~/.path file that adds /usr/local/bin to the $PATH:
export PATH=""/usr/local/bin:$PATH""
Add custom commands without creating a new fork
If ~/.extra exists, it will be sourced along with the other files. You can use this to add a few custom commands without the need to fork this entire repository, or to add commands you don‚Äôt want to commit to a public repository.
My ~/.extra looks something like this:
# Git credentials
# Not in the repository, to prevent people from accidentally committing under my name
GIT_AUTHOR_NAME=""Mathias Bynens""
GIT_COMMITTER_NAME=""$GIT_AUTHOR_NAME""
git config --global user.name ""$GIT_AUTHOR_NAME""
GIT_AUTHOR_EMAIL=""mathias@mailinator.com""
GIT_COMMITTER_EMAIL=""$GIT_AUTHOR_EMAIL""
git config --global user.email ""$GIT_AUTHOR_EMAIL""
You could also use ~/.extra to override settings, functions and aliases from my dotfiles repository. It‚Äôs probably better to fork this repository instead, though.
Sensible macOS defaults
When setting up a new Mac, you may want to set some sensible macOS defaults:
./.macos
Install Homebrew formulae
When setting up a new Mac, you may want to install some common Homebrew formulae (after installing Homebrew, of course):
./brew.sh
Some of the functionality of these dotfiles depends on formulae installed by brew.sh. If you don‚Äôt plan to run brew.sh, you should look carefully through the script and manually install any particularly important ones. A good example is Bash/Git completion: the dotfiles use a special version from Homebrew.
Feedback
Suggestions/improvements
welcome!
Author








Mathias Bynens



Thanks to‚Ä¶

@ptb and his macOS Setup repository
Ben Alman and his dotfiles repository
CƒÉtƒÉlin Mari»ô and his dotfiles repository
Gianni Chiappetta for sharing his amazing collection of dotfiles
Jan Moesen and his ancient .bash_profile + shiny tilde repository
Lauri ‚ÄòLri‚Äô Ranta for sharing loads of hidden preferences
Matijs Brinkhuis and his dotfiles repository
Nicolas Gallagher and his dotfiles repository
Sindre Sorhus
Tom Ryder and his dotfiles repository
Kevin Suttle and his dotfiles repository and macOS-Defaults project, which aims to provide better documentation for ~/.macos
Haralan Dobrev
Anyone who contributed a patch or made a helpful suggestion

",mathiass dotfiles installation warning want give dotfiles try first fork repository review code remove things dont want need dont blindly use settings unless know entails use risk using git bootstrap script clone repository wherever want like keep projectsdotfiles dotfiles symlink bootstrapper script pull latest version copy files home folder git clone httpsgithubcommathiasbynensdotfilesgit cd dotfiles source bootstrapsh update cd local dotfiles repository source bootstrapsh alternatively update avoiding confirmation prompt set f source bootstrapsh gitfree install install dotfiles without git cd curl l httpsgithubcommathiasbynensdotfilestarballmaster tar xzv stripcomponents excludereadmemdbootstrapshosxlicensemittxt update later run command specify path path exists sourced along files feature testing detecting version ls used takes place heres example path file adds usrlocalbin path export pathusrlocalbinpath add custom commands without creating new fork extra exists sourced along files use add custom commands without need fork entire repository add commands dont want commit public repository extra looks something like git credentials repository prevent people accidentally committing name gitauthornamemathias bynens gitcommitternamegitauthorname git config global username gitauthorname gitauthoremailmathiasmailinatorcom gitcommitteremailgitauthoremail git config global useremail gitauthoremail could also use extra override settings functions aliases dotfiles repository probably better fork repository instead though sensible macos defaults setting new mac may want set sensible macos defaults macos install homebrew formulae setting new mac may want install common homebrew formulae installing homebrew course brewsh functionality dotfiles depends formulae installed brewsh dont plan run brewsh look carefully script manually install particularly important ones good example bashgit completion dotfiles use special version homebrew feedback suggestionsimprovements welcome author mathias bynens thanks ptb macos setup repository ben alman dotfiles repository catalin maris dotfiles repository gianni chiappetta sharing amazing collection dotfiles jan moesen ancient bashprofile shiny tilde repository lauri lri ranta sharing loads hidden preferences matijs brinkhuis dotfiles repository nicolas gallagher dotfiles repository sindre sorhus tom ryder dotfiles repository kevin suttle dotfiles repository macosdefaults project aims provide better documentation macos haralan dobrev anyone contributed patch made helpful suggestion,mathiass dotfil instal warn want give dotfil tri first fork repositori review code remov thing dont want need dont blindli use set unless know entail use risk use git bootstrap script clone repositori wherev want like keep projectsdotfil dotfil symlink bootstrapp script pull latest version copi file home folder git clone httpsgithubcommathiasbynensdotfilesgit cd dotfil sourc bootstrapsh updat cd local dotfil repositori sourc bootstrapsh altern updat avoid confirm prompt set f sourc bootstrapsh gitfre instal instal dotfil without git cd curl l httpsgithubcommathiasbynensdotfilestarballmast tar xzv stripcompon excludereadmemdbootstrapshosxlicensemittxt updat later run command specifi path path exist sourc along file featur test detect version ls use take place here exampl path file add usrlocalbin path export pathusrlocalbinpath add custom command without creat new fork extra exist sourc along file use add custom command without need fork entir repositori add command dont want commit public repositori extra look someth like git credenti repositori prevent peopl accident commit name gitauthornamemathia bynen gitcommitternamegitauthornam git config global usernam gitauthornam gitauthoremailmathiasmailinatorcom gitcommitteremailgitauthoremail git config global useremail gitauthoremail could also use extra overrid set function alias dotfil repositori probabl better fork repositori instead though sensibl maco default set new mac may want set sensibl maco default maco instal homebrew formula set new mac may want instal common homebrew formula instal homebrew cours brewsh function dotfil depend formula instal brewsh dont plan run brewsh look care script manual instal particularli import one good exampl bashgit complet dotfil use special version homebrew feedback suggestionsimprov welcom author mathia bynen thank ptb maco setup repositori ben alman dotfil repositori catalin mari dotfil repositori gianni chiappetta share amaz collect dotfil jan moesen ancient bashprofil shini tild repositori lauri lri ranta share load hidden prefer matij brinkhui dotfil repositori nicola gallagh dotfil repositori sindr sorhu tom ryder dotfil repositori kevin suttl dotfil repositori macosdefault project aim provid better document maco haralan dobrev anyon contribut patch made help suggest,mathias dotfiles installation warning want give dotfiles try first fork repository review code remove thing dont want need dont blindly use setting unless know entail use risk using git bootstrap script clone repository wherever want like keep projectsdotfiles dotfiles symlink bootstrapper script pull latest version copy file home folder git clone httpsgithubcommathiasbynensdotfilesgit cd dotfiles source bootstrapsh update cd local dotfiles repository source bootstrapsh alternatively update avoiding confirmation prompt set f source bootstrapsh gitfree install install dotfiles without git cd curl l httpsgithubcommathiasbynensdotfilestarballmaster tar xzv stripcomponents excludereadmemdbootstrapshosxlicensemittxt update later run command specify path path exists sourced along file feature testing detecting version l used take place here example path file add usrlocalbin path export pathusrlocalbinpath add custom command without creating new fork extra exists sourced along file use add custom command without need fork entire repository add command dont want commit public repository extra look something like git credential repository prevent people accidentally committing name gitauthornamemathias bynens gitcommitternamegitauthorname git config global username gitauthorname gitauthoremailmathiasmailinatorcom gitcommitteremailgitauthoremail git config global useremail gitauthoremail could also use extra override setting function alias dotfiles repository probably better fork repository instead though sensible macos default setting new mac may want set sensible macos default macos install homebrew formula setting new mac may want install common homebrew formula installing homebrew course brewsh functionality dotfiles depends formula installed brewsh dont plan run brewsh look carefully script manually install particularly important one good example bashgit completion dotfiles use special version homebrew feedback suggestionsimprovements welcome author mathias bynens thanks ptb macos setup repository ben alman dotfiles repository catalin mari dotfiles repository gianni chiappetta sharing amazing collection dotfiles jan moesen ancient bashprofile shiny tilde repository lauri lri ranta sharing load hidden preference matijs brinkhuis dotfiles repository nicolas gallagher dotfiles repository sindre sorhus tom ryder dotfiles repository kevin suttle dotfiles repository macosdefaults project aim provide better documentation macos haralan dobrev anyone contributed patch made helpful suggestion
68,Shell,"GitHub - StreisandEffect/streisand: Streisand sets up a new server running your choice of WireGuard, OpenConnect, OpenSSH, OpenVPN, Shadowsocks, sslh, Stunnel, or a Tor bridge. It also generates custom instructions for all of these services. At the end of the run you are given an HTML file with instructions that can be shared with friends, family members, and fellow activists.","Streisand




English, Fran√ßais, ÁÆÄ‰Ωì‰∏≠Êñá, –†—É—Å—Å–∫–∏–π | Mirror



Streisand
Silence censorship. Automate the effect.
The Internet can be a little unfair. It's way too easy for ISPs, telecoms, politicians, and corporations to block access to the sites and information that you care about. But breaking through these restrictions is tough. Or is it?
If you have an account with a cloud computing provider, Streisand can set up a new node with many censorship-resistant VPN services nearly automatically. You'll need a little experience with a Unix command-line. (But without Streisand, it could take days for a skilled Unix administrator to configure these services securely!) At the end, you'll have a private website with software and instructions.
Here's what a sample Streisand server looks like.
There's a list of supported cloud providers; experts may be able to use Streisand to install on many other cloud providers.
VPN services
One type of tool that people use to avoid network censorship is a Virtual Private Network (VPN). There are many kinds of VPNs.
Not all network censorship is alike; in some places, it changes from day to day. Streisand provides many different VPN services to try. (You don't have to install them all, though.)
Some Streisand services include add-ons for further censorship and throttling resistance:

OpenSSH

Tinyproxy may be used as an HTTP proxy.


OpenConnect / Cisco AnyConnect

This protocol is widely used by multi-national corporations, and might not be blocked.


OpenVPN

Stunnel add-on available.


Shadowsocks,

The V2ray-plugin is installed to provide robust traffic evasion on hostile networks (especially those implementing quality of service (QOS) throttling).


A private Tor bridge relay

Obfsproxy with obfs4 available as an add-on.


WireGuard, a modern high-performance protocol.

See also:

A more technical list of features
A more technical list of services


Cloud providers

Amazon Web Services (AWS)
Microsoft Azure
Digital Ocean
Google Compute Engine (GCE)
Linode
Rackspace

Other providers
We recommend using one of the above providers. If you are an expert and can set up a fresh Ubuntu 16.04 server elsewhere, there are ""localhost"" and ""existing remote server"" installation methods. For more information, see the advanced installation instructions.
Installation
You need command-line access to a Unix system. You can use Linux, BSD, or macOS; on Windows 10, the Windows Subsystem for Linux (WSL) counts as Linux.
Once you're ready, see the full installation instructions.
Things we want to do better
Aside from a good deal of cleanup, we could really use:

Easier setup.
Faster adoption of new censorship-avoidance tools

We're looking for help with both.
If there is something that you think Streisand should do, or if you find a bug in its documentation or execution, please file a report on the Issue Tracker.
Core Contributors

Jay Carlson (@nopdotcom)
Nick Clarke (@nickolasclarke)
Joshua Lund (@jlund)
Ali Makki (@alimakki)
Daniel McCarney (@cpu)
Corban Raun (@CorbanR)

Acknowledgements
Jason A. Donenfeld deserves a lot of credit for being brave enough to reimagine what a modern VPN should look like and for coming up with something as good as WireGuard. He has our sincere thanks for all of his patient help and high-quality feedback.
We are grateful to Trevor Smith for his massive contributions. He suggested the Gateway approach, provided tons of invaluable feedback, made everything look better, and developed the HTML template that served as the inspiration to take things to the next level before Streisand's public release.
Huge thanks to Paul Wouters of The Libreswan Project for his generous help troubleshooting the L2TP/IPsec setup.
Starcadian's 'Sunset Blood' album was played on repeat approximately 300 times during the first few months of work on the project in early 2014.
",streisand english francais mirror streisand silence censorship automate effect internet little unfair way easy isps telecoms politicians corporations block access sites information care breaking restrictions tough account cloud computing provider streisand set new node many censorshipresistant vpn services nearly automatically youll need little experience unix commandline without streisand could take days skilled unix administrator configure services securely end youll private website software instructions heres sample streisand server looks like theres list supported cloud providers experts may able use streisand install many cloud providers vpn services one type tool people use avoid network censorship virtual private network vpn many kinds vpns network censorship alike places changes day day streisand provides many different vpn services try dont install though streisand services include addons censorship throttling resistance openssh tinyproxy may used http proxy openconnect cisco anyconnect protocol widely used multinational corporations might blocked openvpn stunnel addon available shadowsocks vrayplugin installed provide robust traffic evasion hostile networks especially implementing quality service qos throttling private tor bridge relay obfsproxy obfs available addon wireguard modern highperformance protocol see also technical list features technical list services cloud providers amazon web services aws microsoft azure digital ocean google compute engine gce linode rackspace providers recommend using one providers expert set fresh ubuntu server elsewhere localhost existing remote server installation methods information see advanced installation instructions installation need commandline access unix system use linux bsd macos windows windows subsystem linux wsl counts linux youre ready see full installation instructions things want better aside good deal cleanup could really use easier setup faster adoption new censorshipavoidance tools looking help something think streisand find bug documentation execution please file report issue tracker core contributors jay carlson nopdotcom nick clarke nickolasclarke joshua lund jlund ali makki alimakki daniel mccarney cpu corban raun corbanr acknowledgements jason donenfeld deserves lot credit brave enough reimagine modern vpn look like coming something good wireguard sincere thanks patient help highquality feedback grateful trevor smith massive contributions suggested gateway approach provided tons invaluable feedback made everything look better developed html template served inspiration take things next level streisands public release huge thanks paul wouters libreswan project generous help troubleshooting ltpipsec setup starcadians sunset blood album played repeat approximately times first months work project early,streisand english francai mirror streisand silenc censorship autom effect internet littl unfair way easi isp telecom politician corpor block access site inform care break restrict tough account cloud comput provid streisand set new node mani censorshipresist vpn servic nearli automat youll need littl experi unix commandlin without streisand could take day skill unix administr configur servic secur end youll privat websit softwar instruct here sampl streisand server look like there list support cloud provid expert may abl use streisand instal mani cloud provid vpn servic one type tool peopl use avoid network censorship virtual privat network vpn mani kind vpn network censorship alik place chang day day streisand provid mani differ vpn servic tri dont instal though streisand servic includ addon censorship throttl resist openssh tinyproxi may use http proxi openconnect cisco anyconnect protocol wide use multin corpor might block openvpn stunnel addon avail shadowsock vrayplugin instal provid robust traffic evas hostil network especi implement qualiti servic qo throttl privat tor bridg relay obfsproxi obf avail addon wireguard modern highperform protocol see also technic list featur technic list servic cloud provid amazon web servic aw microsoft azur digit ocean googl comput engin gce linod rackspac provid recommend use one provid expert set fresh ubuntu server elsewher localhost exist remot server instal method inform see advanc instal instruct instal need commandlin access unix system use linux bsd maco window window subsystem linux wsl count linux your readi see full instal instruct thing want better asid good deal cleanup could realli use easier setup faster adopt new censorshipavoid tool look help someth think streisand find bug document execut pleas file report issu tracker core contributor jay carlson nopdotcom nick clark nickolasclark joshua lund jlund ali makki alimakki daniel mccarney cpu corban raun corbanr acknowledg jason donenfeld deserv lot credit brave enough reimagin modern vpn look like come someth good wireguard sincer thank patient help highqual feedback grate trevor smith massiv contribut suggest gateway approach provid ton invalu feedback made everyth look better develop html templat serv inspir take thing next level streisand public releas huge thank paul wouter libreswan project gener help troubleshoot ltpipsec setup starcadian sunset blood album play repeat approxim time first month work project earli,streisand english francais mirror streisand silence censorship automate effect internet little unfair way easy isps telecom politician corporation block access site information care breaking restriction tough account cloud computing provider streisand set new node many censorshipresistant vpn service nearly automatically youll need little experience unix commandline without streisand could take day skilled unix administrator configure service securely end youll private website software instruction here sample streisand server look like there list supported cloud provider expert may able use streisand install many cloud provider vpn service one type tool people use avoid network censorship virtual private network vpn many kind vpns network censorship alike place change day day streisand provides many different vpn service try dont install though streisand service include addons censorship throttling resistance openssh tinyproxy may used http proxy openconnect cisco anyconnect protocol widely used multinational corporation might blocked openvpn stunnel addon available shadowsocks vrayplugin installed provide robust traffic evasion hostile network especially implementing quality service qos throttling private tor bridge relay obfsproxy obfs available addon wireguard modern highperformance protocol see also technical list feature technical list service cloud provider amazon web service aws microsoft azure digital ocean google compute engine gce linode rackspace provider recommend using one provider expert set fresh ubuntu server elsewhere localhost existing remote server installation method information see advanced installation instruction installation need commandline access unix system use linux bsd macos window window subsystem linux wsl count linux youre ready see full installation instruction thing want better aside good deal cleanup could really use easier setup faster adoption new censorshipavoidance tool looking help something think streisand find bug documentation execution please file report issue tracker core contributor jay carlson nopdotcom nick clarke nickolasclarke joshua lund jlund ali makki alimakki daniel mccarney cpu corban raun corbanr acknowledgement jason donenfeld deserves lot credit brave enough reimagine modern vpn look like coming something good wireguard sincere thanks patient help highquality feedback grateful trevor smith massive contribution suggested gateway approach provided ton invaluable feedback made everything look better developed html template served inspiration take thing next level streisand public release huge thanks paul wouters libreswan project generous help troubleshooting ltpipsec setup starcadians sunset blood album played repeat approximately time first month work project early
69,Shell,GitHub - pi-hole/pi-hole: A black hole for Internet advertisements,"

Network-wide ad blocking via your own Linux hardware

The Pi-hole¬Æ is a DNS sinkhole that protects your devices from unwanted content, without installing any client-side software.

Easy-to-install: our versatile installer walks you through the process, and takes less than ten minutes
Resolute: content is blocked in non-browser locations, such as ad-laden mobile apps and smart TVs
Responsive: seamlessly speeds up the feel of everyday browsing by caching DNS queries
Lightweight: runs smoothly with minimal hardware and software requirements
Robust: a command line interface that is quality assured for interoperability
Insightful: a beautiful responsive Web Interface dashboard to view and control your Pi-hole
Versatile: can optionally function as a DHCP server, ensuring all your devices are protected automatically
Scalable: capable of handling hundreds of millions of queries when installed on server-grade hardware
Modern: blocks ads over both IPv4 and IPv6
Free: open source software which helps ensure you are the sole person in control of your privacy





One-Step Automated Install
Those who want to get started quickly and conveniently may install Pi-hole using the following command:
curl -sSL https://install.pi-hole.net | bash
Alternative Install Methods
Piping to bash is controversial, as it prevents you from reading code that is about to run on your system. Therefore, we provide these alternative installation methods which allow code review before installation:
Method 1: Clone our repository and run
git clone --depth 1 https://github.com/pi-hole/pi-hole.git Pi-hole
cd ""Pi-hole/automated install/""
sudo bash basic-install.sh

Method 2: Manually download the installer and run
wget -O basic-install.sh https://install.pi-hole.net
sudo bash basic-install.sh

Post-install: Make your network take advantage of Pi-hole
Once the installer has been run, you will need to configure your router to have DHCP clients use Pi-hole as their DNS server which ensures that all devices connecting to your network will have content blocked without any further intervention.
If your router does not support setting the DNS server, you can use Pi-hole's built-in DHCP server; just be sure to disable DHCP on your router first (if it has that feature available).
As a last resort, you can always manually set each device to use Pi-hole as their DNS server.

Pi-hole is free, but powered by your support
There are many reoccurring costs involved with maintaining free, open source, and privacy-respecting software; expenses which our volunteer developers pitch in to cover out-of-pocket. This is just one example of how strongly we feel about our software, as well as the importance of keeping it maintained.
Make no mistake: your support is absolutely vital to help keep us innovating!
Donations
Sending a donation using our links below is extremely helpful in offsetting a portion of our monthly expenses:

 Donate via PayPal
 Bitcoin, Bitcoin Cash, Ethereum, Litecoin

Alternative support
If you'd rather not donate (which is okay!), there are other ways you can help support us:

Patreon Become a patron for rewards
Digital Ocean affiliate link
Stickermule earn a $10 credit after your first purchase
Pi-hole Swag Store affiliate link
Amazon affiliate link
DNS Made Easy affiliate link
Vultr affiliate link
Spreading the word about our software, and how you have benefited from it

Contributing via GitHub
We welcome everyone to contribute to issue reports, suggest new features, and create pull requests.
If you have something to add - anything from a typo through to a whole new feature, we're happy to check it out! Just make sure to fill out our template when submitting your request; the questions that it asks will help the volunteers quickly understand what you're aiming to achieve.
You'll find that the install script and the debug script have an abundance of comments, which will help you better understand how Pi-hole works. They're also a valuable resource to those who want to learn how to write scripts or code a program! We encourage anyone who likes to tinker to read through it and submit a pull request for us to review.
Presentations about Pi-hole
Word-of-mouth continues to help our project grow immensely, and so we are helping make this easier for people.
If you are going to be presenting Pi-hole at a conference, meetup or even a school project, get in touch with us so we can hook you up with free swag to hand out to your audience!

Getting in touch with us
While we are primarily reachable on our Discourse User Forum, we can also be found on a variety of social media outlets. Please be sure to check the FAQ's before starting a new discussion, as we do not have the spare time to reply to every request for assistance.

Frequently Asked Questions
Pi-hole Wiki
Feature Requests
Discourse User Forum
Reddit
Gitter (Real-time chat)
Twitter
YouTube
Facebook


Breakdown of Features
The Command Line Interface
The pihole command has all the functionality necessary to be able to fully administer the Pi-hole, without the need of the Web Interface. It's fast, user-friendly, and auditable by anyone with an understanding of bash.

Some notable features include:

Whitelisting, Blacklisting and Wildcards
Debugging utility
Viewing the live log file
Real-time Statistics via ssh or your TFT LCD screen
Updating Ad Lists
Querying Ad Lists for blocked domains
Enabling and Disabling Pi-hole
... and many more!

You can read our Core Feature Breakdown, as well as read up on example usage for more information.
The Web Interface Dashboard
This optional dashboard allows you to view stats, change settings, and configure your Pi-hole. It's the power of the Command Line Interface, with none of the learning curve!

Some notable features include:

Mobile friendly interface
Password protection
Detailed graphs and doughnut charts
Top lists of domains and clients
A filterable and sortable query log
Long Term Statistics to view data over user-defined time ranges
The ability to easily manage and configure Pi-hole features
... and all the main features of the Command Line Interface!

There are several ways to access the dashboard:

http://<IP_ADDPRESS_OF_YOUR_PI_HOLE>/admin/
http://pi.hole/admin/ (when using Pi-hole as your DNS server)
http://pi.hole/ (when using Pi-hole as your DNS server)

Faster-than-light Engine
FTLDNS is a lightweight, purpose-built daemon used to provide statistics needed for the Web Interface, and its API can be easily integrated into your own projects. As the name implies, FTLDNS does this all very quickly!
Some of the statistics you can integrate include:

Total number of domains being blocked
Total number of DNS queries today
Total number of ads blocked today
Percentage of ads blocked
Unique domains
Queries forwarded (to your chosen upstream DNS server)
Queries cached
Unique clients

The API can be accessed via telnet, the Web (admin/api.php) and Command Line (pihole -c -j). You can out find more details over here.

The Origin Of Pi-hole
Pi-hole being an advertising-aware DNS/Web server, makes use of the following technologies:

dnsmasq - a lightweight DNS and DHCP server
curl - A command line tool for transferring data with URL syntax
lighttpd - web server designed and optimized for high performance
php - a popular general-purpose web scripting language
AdminLTE Dashboard - premium admin control panel based on Bootstrap 3.x

While quite outdated at this point, this original blog post about Pi-hole goes into great detail about how Pi-hole was originally set up and how it works. Syntactically, it's no longer accurate, but the same basic principles and logic still apply to Pi-hole's current state.

Coverage

Lifehacker: Turn A Raspberry Pi Into An Ad Blocker With A Single Command (Feburary, 2015)
MakeUseOf: Adblock Everywhere: The Raspberry Pi-Hole Way (March, 2015)
Catchpoint: Ad-Blocking on Apple iOS9: Valuing the End User Experience (September, 2015)
Security Now Netcast: Pi-hole (October, 2015)
TekThing: Raspberry Pi-Hole Makes Ads Disappear! (December, 2015)
Foolish Tech Show (December, 2015)
Block Ads on All Home Devices for $53.18 (December, 2015)
Pi-Hole for Ubuntu 14.04 (December, 2015)
MacObserver Podcast 585 (December, 2015)
The Defrag Show: Endoscope USB Camera, The Final [HoloLens] Vote, Adblock Pi and more (January, 2016)
Adafruit: Pi-hole is a black hole for internet ads (March, 2016)
Digital Trends: 5 Fun, Easy Projects You Can Try With a $35 Raspberry Pi (March, 2016)
Adafruit: Raspberry Pi Quick Look at Pi Hole ad blocking server with Tony D (June, 2016)
Devacron: OrangePi Zero as an Ad-Block server with Pi-Hole (December, 2016)
Linux Pro: The Hole Truth (July, 2017)
Adafruit: installing Pi-hole on a Pi Zero W (August, 2017)
CryptoAUSTRALIA: How We Tried 5 Privacy Focused Raspberry Pi Projects (October, 2017)
CryptoAUSTRALIA: Pi-hole Workshop (November, 2017)
Know How 355: Killing ads with a Raspberry Pi-Hole! (November, 2017)
Hobohouse: Block Advertising on your Network with Pi-hole and Raspberry Pi (March, 2018)
Scott Helme: Securing DNS across all of my devices with Pi-Hole + DNS-over-HTTPS + 1.1.1.1 (April, 2018)
Scott Helme: Catching and dealing with naughty devices on my home network (April, 2018)
Bloomberg Business Week: Brotherhood of the Ad blockers (May, 2018)
Software Engineering Daily: Interview with the creator of Pi-hole (May, 2018)
Raspberry Pi: Block ads at home using Pi-hole and a Raspberry Pi (July, 2018)
Troy Hunt: Mmm... Pi-hole... (September, 2018)
PEBKAK Podcast: Interview With Jacob Salmela (October, 2018)


Pi-hole Projects

The Big Blocklist Collection
Pie in the Sky-Hole
Copernicus: Windows Tray Application
Magic Mirror with DNS Filtering
Windows DNS Swapper

",networkwide ad blocking via linux hardware pihole dns sinkhole protects devices unwanted content without installing clientside software easytoinstall versatile installer walks process takes less ten minutes resolute content blocked nonbrowser locations adladen mobile apps smart tvs responsive seamlessly speeds feel everyday browsing caching dns queries lightweight runs smoothly minimal hardware software requirements robust command line interface quality assured interoperability insightful beautiful responsive web interface dashboard view control pihole versatile optionally function dhcp server ensuring devices protected automatically scalable capable handling hundreds millions queries installed servergrade hardware modern blocks ads ipv ipv free open source software helps ensure sole person control privacy onestep automated install want get started quickly conveniently may install pihole using following command curl ssl httpsinstallpiholenet bash alternative install methods piping bash controversial prevents reading code run system therefore provide alternative installation methods allow code review installation method clone repository run git clone depth httpsgithubcompiholepiholegit pihole cd piholeautomated install sudo bash basicinstallsh method manually download installer run wget basicinstallsh httpsinstallpiholenet sudo bash basicinstallsh postinstall make network take advantage pihole installer run need configure router dhcp clients use pihole dns server ensures devices connecting network content blocked without intervention router support setting dns server use piholes builtin dhcp server sure disable dhcp router first feature available last resort always manually set device use pihole dns server pihole free powered support many reoccurring costs involved maintaining free open source privacyrespecting software expenses volunteer developers pitch cover outofpocket one example strongly feel software well importance keeping maintained make mistake support absolutely vital help keep us innovating donations sending donation using links extremely helpful offsetting portion monthly expenses donate via paypal bitcoin bitcoin cash ethereum litecoin alternative support youd rather donate okay ways help support us patreon become patron rewards digital ocean affiliate link stickermule earn credit first purchase pihole swag store affiliate link amazon affiliate link dns made easy affiliate link vultr affiliate link spreading word software benefited contributing via github welcome everyone contribute issue reports suggest new features create pull requests something add anything typo whole new feature happy check make sure fill template submitting request questions asks help volunteers quickly understand youre aiming achieve youll find install script debug script abundance comments help better understand pihole works theyre also valuable resource want learn write scripts code program encourage anyone likes tinker read submit pull request us review presentations pihole wordofmouth continues help project grow immensely helping make easier people going presenting pihole conference meetup even school project get touch us hook free swag hand audience getting touch us primarily reachable discourse user forum also found variety social media outlets please sure check faqs starting new discussion spare time reply every request assistance frequently asked questions pihole wiki feature requests discourse user forum reddit gitter realtime chat twitter youtube facebook breakdown features command line interface pihole command functionality necessary able fully administer pihole without need web interface fast userfriendly auditable anyone understanding bash notable features include whitelisting blacklisting wildcards debugging utility viewing live log file realtime statistics via ssh tft lcd screen updating ad lists querying ad lists blocked domains enabling disabling pihole many read core feature breakdown well read example usage information web interface dashboard optional dashboard allows view stats change settings configure pihole power command line interface none learning curve notable features include mobile friendly interface password protection detailed graphs doughnut charts top lists domains clients filterable sortable query log long term statistics view data userdefined time ranges ability easily manage configure pihole features main features command line interface several ways access dashboard httpipaddpressofyourpiholeadmin httppiholeadmin using pihole dns server httppihole using pihole dns server fasterthanlight engine ftldns lightweight purposebuilt daemon used provide statistics needed web interface api easily integrated projects name implies ftldns quickly statistics integrate include total number domains blocked total number dns queries today total number ads blocked today percentage ads blocked unique domains queries forwarded chosen upstream dns server queries cached unique clients api accessed via telnet web adminapiphp command line pihole c j find details origin pihole pihole advertisingaware dnsweb server makes use following technologies dnsmasq lightweight dns dhcp server curl command line tool transferring data url syntax lighttpd web server designed optimized high performance php popular generalpurpose web scripting language adminlte dashboard premium admin control panel based bootstrap x quite outdated point original blog post pihole goes great detail pihole originally set works syntactically longer accurate basic principles logic still apply piholes current state coverage lifehacker turn raspberry pi ad blocker single command feburary makeuseof adblock everywhere raspberry pihole way march catchpoint adblocking apple ios valuing end user experience september security netcast pihole october tekthing raspberry pihole makes ads disappear december foolish tech show december block ads home devices december pihole ubuntu december macobserver podcast december defrag show endoscope usb camera final hololens vote adblock pi january adafruit pihole black hole internet ads march digital trends fun easy projects try raspberry pi march adafruit raspberry pi quick look pi hole ad blocking server tony june devacron orangepi zero adblock server pihole december linux pro hole truth july adafruit installing pihole pi zero w august cryptoaustralia tried privacy focused raspberry pi projects october cryptoaustralia pihole workshop november know killing ads raspberry pihole november hobohouse block advertising network pihole raspberry pi march scott helme securing dns across devices pihole dnsoverhttps april scott helme catching dealing naughty devices home network april bloomberg business week brotherhood ad blockers may software engineering daily interview creator pihole may raspberry pi block ads home using pihole raspberry pi july troy hunt mmm pihole september pebkak podcast interview jacob salmela october pihole projects big blocklist collection pie skyhole copernicus windows tray application magic mirror dns filtering windows dns swapper,networkwid ad block via linux hardwar pihol dn sinkhol protect devic unwant content without instal clientsid softwar easytoinstal versatil instal walk process take less ten minut resolut content block nonbrows locat adladen mobil app smart tv respons seamlessli speed feel everyday brows cach dn queri lightweight run smoothli minim hardwar softwar requir robust command line interfac qualiti assur interoper insight beauti respons web interfac dashboard view control pihol versatil option function dhcp server ensur devic protect automat scalabl capabl handl hundr million queri instal servergrad hardwar modern block ad ipv ipv free open sourc softwar help ensur sole person control privaci onestep autom instal want get start quickli conveni may instal pihol use follow command curl ssl httpsinstallpiholenet bash altern instal method pipe bash controversi prevent read code run system therefor provid altern instal method allow code review instal method clone repositori run git clone depth httpsgithubcompiholepiholegit pihol cd piholeautom instal sudo bash basicinstallsh method manual download instal run wget basicinstallsh httpsinstallpiholenet sudo bash basicinstallsh postinstal make network take advantag pihol instal run need configur router dhcp client use pihol dn server ensur devic connect network content block without intervent router support set dn server use pihol builtin dhcp server sure disabl dhcp router first featur avail last resort alway manual set devic use pihol dn server pihol free power support mani reoccur cost involv maintain free open sourc privacyrespect softwar expens volunt develop pitch cover outofpocket one exampl strongli feel softwar well import keep maintain make mistak support absolut vital help keep us innov donat send donat use link extrem help offset portion monthli expens donat via paypal bitcoin bitcoin cash ethereum litecoin altern support youd rather donat okay way help support us patreon becom patron reward digit ocean affili link stickermul earn credit first purchas pihol swag store affili link amazon affili link dn made easi affili link vultr affili link spread word softwar benefit contribut via github welcom everyon contribut issu report suggest new featur creat pull request someth add anyth typo whole new featur happi check make sure fill templat submit request question ask help volunt quickli understand your aim achiev youll find instal script debug script abund comment help better understand pihol work theyr also valuabl resourc want learn write script code program encourag anyon like tinker read submit pull request us review present pihol wordofmouth continu help project grow immens help make easier peopl go present pihol confer meetup even school project get touch us hook free swag hand audienc get touch us primarili reachabl discours user forum also found varieti social media outlet pleas sure check faq start new discuss spare time repli everi request assist frequent ask question pihol wiki featur request discours user forum reddit gitter realtim chat twitter youtub facebook breakdown featur command line interfac pihol command function necessari abl fulli administ pihol without need web interfac fast userfriendli audit anyon understand bash notabl featur includ whitelist blacklist wildcard debug util view live log file realtim statist via ssh tft lcd screen updat ad list queri ad list block domain enabl disabl pihol mani read core featur breakdown well read exampl usag inform web interfac dashboard option dashboard allow view stat chang set configur pihol power command line interfac none learn curv notabl featur includ mobil friendli interfac password protect detail graph doughnut chart top list domain client filter sortabl queri log long term statist view data userdefin time rang abil easili manag configur pihol featur main featur command line interfac sever way access dashboard httpipaddpressofyourpiholeadmin httppiholeadmin use pihol dn server httppihol use pihol dn server fasterthanlight engin ftldn lightweight purposebuilt daemon use provid statist need web interfac api easili integr project name impli ftldn quickli statist integr includ total number domain block total number dn queri today total number ad block today percentag ad block uniqu domain queri forward chosen upstream dn server queri cach uniqu client api access via telnet web adminapiphp command line pihol c j find detail origin pihol pihol advertisingawar dnsweb server make use follow technolog dnsmasq lightweight dn dhcp server curl command line tool transfer data url syntax lighttpd web server design optim high perform php popular generalpurpos web script languag adminlt dashboard premium admin control panel base bootstrap x quit outdat point origin blog post pihol goe great detail pihol origin set work syntact longer accur basic principl logic still appli pihol current state coverag lifehack turn raspberri pi ad blocker singl command feburari makeuseof adblock everywher raspberri pihol way march catchpoint adblock appl io valu end user experi septemb secur netcast pihol octob tekth raspberri pihol make ad disappear decemb foolish tech show decemb block ad home devic decemb pihol ubuntu decemb macobserv podcast decemb defrag show endoscop usb camera final hololen vote adblock pi januari adafruit pihol black hole internet ad march digit trend fun easi project tri raspberri pi march adafruit raspberri pi quick look pi hole ad block server toni june devacron orangepi zero adblock server pihol decemb linux pro hole truth juli adafruit instal pihol pi zero w august cryptoaustralia tri privaci focus raspberri pi project octob cryptoaustralia pihol workshop novemb know kill ad raspberri pihol novemb hobohous block advertis network pihol raspberri pi march scott helm secur dn across devic pihol dnsoverhttp april scott helm catch deal naughti devic home network april bloomberg busi week brotherhood ad blocker may softwar engin daili interview creator pihol may raspberri pi block ad home use pihol raspberri pi juli troy hunt mmm pihol septemb pebkak podcast interview jacob salmela octob pihol project big blocklist collect pie skyhol copernicu window tray applic magic mirror dn filter window dn swapper,networkwide ad blocking via linux hardware pihole dns sinkhole protects device unwanted content without installing clientside software easytoinstall versatile installer walk process take le ten minute resolute content blocked nonbrowser location adladen mobile apps smart tv responsive seamlessly speed feel everyday browsing caching dns query lightweight run smoothly minimal hardware software requirement robust command line interface quality assured interoperability insightful beautiful responsive web interface dashboard view control pihole versatile optionally function dhcp server ensuring device protected automatically scalable capable handling hundred million query installed servergrade hardware modern block ad ipv ipv free open source software help ensure sole person control privacy onestep automated install want get started quickly conveniently may install pihole using following command curl ssl httpsinstallpiholenet bash alternative install method piping bash controversial prevents reading code run system therefore provide alternative installation method allow code review installation method clone repository run git clone depth httpsgithubcompiholepiholegit pihole cd piholeautomated install sudo bash basicinstallsh method manually download installer run wget basicinstallsh httpsinstallpiholenet sudo bash basicinstallsh postinstall make network take advantage pihole installer run need configure router dhcp client use pihole dns server ensures device connecting network content blocked without intervention router support setting dns server use piholes builtin dhcp server sure disable dhcp router first feature available last resort always manually set device use pihole dns server pihole free powered support many reoccurring cost involved maintaining free open source privacyrespecting software expense volunteer developer pitch cover outofpocket one example strongly feel software well importance keeping maintained make mistake support absolutely vital help keep u innovating donation sending donation using link extremely helpful offsetting portion monthly expense donate via paypal bitcoin bitcoin cash ethereum litecoin alternative support youd rather donate okay way help support u patreon become patron reward digital ocean affiliate link stickermule earn credit first purchase pihole swag store affiliate link amazon affiliate link dns made easy affiliate link vultr affiliate link spreading word software benefited contributing via github welcome everyone contribute issue report suggest new feature create pull request something add anything typo whole new feature happy check make sure fill template submitting request question asks help volunteer quickly understand youre aiming achieve youll find install script debug script abundance comment help better understand pihole work theyre also valuable resource want learn write script code program encourage anyone like tinker read submit pull request u review presentation pihole wordofmouth continues help project grow immensely helping make easier people going presenting pihole conference meetup even school project get touch u hook free swag hand audience getting touch u primarily reachable discourse user forum also found variety social medium outlet please sure check faq starting new discussion spare time reply every request assistance frequently asked question pihole wiki feature request discourse user forum reddit gitter realtime chat twitter youtube facebook breakdown feature command line interface pihole command functionality necessary able fully administer pihole without need web interface fast userfriendly auditable anyone understanding bash notable feature include whitelisting blacklisting wildcards debugging utility viewing live log file realtime statistic via ssh tft lcd screen updating ad list querying ad list blocked domain enabling disabling pihole many read core feature breakdown well read example usage information web interface dashboard optional dashboard allows view stats change setting configure pihole power command line interface none learning curve notable feature include mobile friendly interface password protection detailed graph doughnut chart top list domain client filterable sortable query log long term statistic view data userdefined time range ability easily manage configure pihole feature main feature command line interface several way access dashboard httpipaddpressofyourpiholeadmin httppiholeadmin using pihole dns server httppihole using pihole dns server fasterthanlight engine ftldns lightweight purposebuilt daemon used provide statistic needed web interface api easily integrated project name implies ftldns quickly statistic integrate include total number domain blocked total number dns query today total number ad blocked today percentage ad blocked unique domain query forwarded chosen upstream dns server query cached unique client api accessed via telnet web adminapiphp command line pihole c j find detail origin pihole pihole advertisingaware dnsweb server make use following technology dnsmasq lightweight dns dhcp server curl command line tool transferring data url syntax lighttpd web server designed optimized high performance php popular generalpurpose web scripting language adminlte dashboard premium admin control panel based bootstrap x quite outdated point original blog post pihole go great detail pihole originally set work syntactically longer accurate basic principle logic still apply piholes current state coverage lifehacker turn raspberry pi ad blocker single command feburary makeuseof adblock everywhere raspberry pihole way march catchpoint adblocking apple io valuing end user experience september security netcast pihole october tekthing raspberry pihole make ad disappear december foolish tech show december block ad home device december pihole ubuntu december macobserver podcast december defrag show endoscope usb camera final hololens vote adblock pi january adafruit pihole black hole internet ad march digital trend fun easy project try raspberry pi march adafruit raspberry pi quick look pi hole ad blocking server tony june devacron orangepi zero adblock server pihole december linux pro hole truth july adafruit installing pihole pi zero w august cryptoaustralia tried privacy focused raspberry pi project october cryptoaustralia pihole workshop november know killing ad raspberry pihole november hobohouse block advertising network pihole raspberry pi march scott helme securing dns across device pihole dnsoverhttps april scott helme catching dealing naughty device home network april bloomberg business week brotherhood ad blocker may software engineering daily interview creator pihole may raspberry pi block ad home using pihole raspberry pi july troy hunt mmm pihole september pebkak podcast interview jacob salmela october pihole project big blocklist collection pie skyhole copernicus window tray application magic mirror dns filtering window dns swapper
70,Shell,GitHub - dokku/dokku: A docker-powered PaaS that helps you build and manage the lifecycle of applications,"Dokku









Docker powered mini-Heroku. The smallest PaaS implementation you've ever seen.
Sponsors
Become a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]






























Backers
Support us with a monthly donation and help us continue our activities. [Become a backer]






























Requirements
A fresh VM running any of the following operating systems:

Ubuntu x64 - Any currently supported release
Debian 8.2+ x64
CentOS 7 x64 (experimental)
Arch Linux x64 (experimental)

An SSH keypair that can be used for application deployment. If this exists before installation, it will be automatically imported into dokku.
Otherwise, you will need to import the keypair manually after installation using dokku ssh-keys:add.
Installation
To install the latest stable release, run the following commands as a user who has access to sudo:
wget https://raw.githubusercontent.com/dokku/dokku/v0.19.11/bootstrap.sh
sudo DOKKU_TAG=v0.19.11 bash bootstrap.sh
You can then proceed to the ip address or domain name associated with your server to complete the web-based installation.
If you wish for a more unattended installation method, see these docs.
Upgrade
View the docs for upgrading from an older version of Dokku.
Documentation
Full documentation - including advanced installation docs - are available online at http://dokku.viewdocs.io/dokku/.
Support
You can use Github Issues, check Troubleshooting in the documentation, or join us on freenode in #dokku.
Contribution
After checking Github Issues, the Troubleshooting Guide or having a chat with us on freenode in #dokku, feel free to fork and create a Pull Request.
While we may not merge your PR as is, they serve to start conversations and improve the general Dokku experience for all users.
License
MIT License ¬© Jeff Lindsay
",dokku docker powered miniheroku smallest paas implementation youve ever seen sponsors become sponsor get logo readme github link site become sponsor backers support us monthly donation help us continue activities become backer requirements fresh vm running following operating systems ubuntu x currently supported release debian x centos x experimental arch linux x experimental ssh keypair used application deployment exists installation automatically imported dokku otherwise need import keypair manually installation using dokku sshkeysadd installation install latest stable release run following commands user access sudo wget httpsrawgithubusercontentcomdokkudokkuvbootstrapsh sudo dokkutagv bash bootstrapsh proceed ip address domain name associated server complete webbased installation wish unattended installation method see docs upgrade view docs upgrading older version dokku documentation full documentation including advanced installation docs available online httpdokkuviewdocsiodokku support use github issues check troubleshooting documentation join us freenode dokku contribution checking github issues troubleshooting guide chat us freenode dokku feel free fork create pull request may merge pr serve start conversations improve general dokku experience users license mit license jeff lindsay,dokku docker power miniheroku smallest paa implement youv ever seen sponsor becom sponsor get logo readm github link site becom sponsor backer support us monthli donat help us continu activ becom backer requir fresh vm run follow oper system ubuntu x current support releas debian x cento x experiment arch linux x experiment ssh keypair use applic deploy exist instal automat import dokku otherwis need import keypair manual instal use dokku sshkeysadd instal instal latest stabl releas run follow command user access sudo wget httpsrawgithubusercontentcomdokkudokkuvbootstrapsh sudo dokkutagv bash bootstrapsh proceed ip address domain name associ server complet webbas instal wish unattend instal method see doc upgrad view doc upgrad older version dokku document full document includ advanc instal doc avail onlin httpdokkuviewdocsiodokku support use github issu check troubleshoot document join us freenod dokku contribut check github issu troubleshoot guid chat us freenod dokku feel free fork creat pull request may merg pr serv start convers improv gener dokku experi user licens mit licens jeff lindsay,dokku docker powered miniheroku smallest paas implementation youve ever seen sponsor become sponsor get logo readme github link site become sponsor backer support u monthly donation help u continue activity become backer requirement fresh vm running following operating system ubuntu x currently supported release debian x centos x experimental arch linux x experimental ssh keypair used application deployment exists installation automatically imported dokku otherwise need import keypair manually installation using dokku sshkeysadd installation install latest stable release run following command user access sudo wget httpsrawgithubusercontentcomdokkudokkuvbootstrapsh sudo dokkutagv bash bootstrapsh proceed ip address domain name associated server complete webbased installation wish unattended installation method see doc upgrade view doc upgrading older version dokku documentation full documentation including advanced installation doc available online httpdokkuviewdocsiodokku support use github issue check troubleshooting documentation join u freenode dokku contribution checking github issue troubleshooting guide chat u freenode dokku feel free fork create pull request may merge pr serve start conversation improve general dokku experience user license mit license jeff lindsay
71,Shell,GitHub - powerline/fonts: Patched fonts for Powerline users.,"Powerline fonts
This repository contains pre-patched and adjusted fonts for usage with
the Powerline statusline plugin.

Installation
Run ./install.sh to install all Powerline Fonts or see the documentation for details.

Quick installation
If you are running a Debian or Ubuntu based Linux distribution, there should
be a package available to install the Powerline Fonts with the following command:
sudo apt-get install fonts-powerline

For fedora (tested on 28) or redhat based Linux distribution, there should also be a package available to install with the following command:
sudo dnf install powerline-fonts

On other environments, you can copy and paste these commands to your terminal. Comments are fine too.
# clone
git clone https://github.com/powerline/fonts.git --depth=1
# install
cd fonts
./install.sh
# clean-up a bit
cd ..
rm -rf fonts


Uninstall
Run ./uninstall.sh to uninstall all Powerline Fonts. You can also copy
the quick installation commands changing only the line ./install.sh to
./uninstall.sh.
In both cases, please make sure you are working with the exact same version
of Powerline fonts you had checked out while installing.

Font Families


Powerline Font Family
Formerly Known As
License



3270
3270
BSD/CCAS 3.0

Anonymice Powerline
Anonymous Pro
SIL Open Font License, Version 1.1

Arimo Powerline
Arimo
Apache License, Version 2.0

Cousine Powerline
Cousine
Apache License, Version 2.0

D2Coding for Powerline
D2Coding
SIL Open Font License, Version 1.1

DejaVu Sans Mono for Powerline
DejaVu Sans Mono
DejaVu Fonts License, Version 1.0

Droid Sans Mono for Powerline
Droid Sans Mono
Apache License, Version 2.0

Droid Sans Mono Dotted for Powerline
Droid Sans Mono Dotted
Apache License, Version 2.0

Droid Sans Mono Slashed for Powerline
Droid Sans Mono Slashed
Apache License, Version 2.0

Fira Mono for Powerline
Fira Mono
SIL OPEN FONT LICENSE Version 1.1

Go Mono for Powerline
Go Mono
Go's License

Hack
Hack
SIL OFL, v1.1 + Bitstream License

Inconsolata for Powerline
Inconsolata
SIL Open Font License, Version 1.0

Inconsolata-dz for Powerline
Inconsolata-dz
SIL Open Font License, Version 1.0

Inconsolata-g for Powerline
Inconsolata-g
SIL Open Font License, Version 1.0

Input Mono
Input Mono
Input‚Äôs license

Liberation Mono Powerline
Liberation Mono
SIL Open Font License, Version 1.1

ProFontWindows
ProFont for Powerline
MIT License

Meslo for Powerline
Meslo
Apache License, Version 2.0

Source Code Pro for Powerline
Source Code Pro
SIL Open Font License, Version 1.1

Meslo Dotted for Powerline
Meslo Dotted
Apache License, Version 2.0

Meslo Slashed for Powerline
Meslo Dotted
Apache License, Version 2.0

Monofur for Powerline
Monofur
Freeware

Noto Mono for Powerline
Noto Mono
SIL Open Font License, Version 1.1

Roboto Mono for Powerline
Roboto Mono
Apache License, Version 2.0

Symbol Neu Powerline
Symbol Neu
Apache License, Version 2.0

Terminess Powerline
Terminus
SIL Open Font License, Version 1.1

Tinos Powerline
Tinos
Apache License, Version 2.0

Ubuntu Mono derivative Powerline
Ubuntu Mono
Ubuntu Font License, Version 1.0

Space Mono for Powerline
Space Mono
SIL Open Font License, Version 1.1



iTerm2 users need to set both the Regular font and the Non-ASCII Font in
""iTerm > Preferences > Profiles > Text"" to use a patched font (per this issue).

Fontconfig
In some distributions, Terminess Powerline is ignored by default and must be
explicitly allowed. A fontconfig file is provided which enables it. Copy this
file
from the fontconfig directory to your home folder under ~/.config/fontconfig/conf.d
(create it if it doesn't exist) and re-run fc-cache -vf.
",powerline fonts repository contains prepatched adjusted fonts usage powerline statusline plugin installation run installsh install powerline fonts see documentation details quick installation running debian ubuntu based linux distribution package available install powerline fonts following command sudo aptget install fontspowerline fedora tested redhat based linux distribution also package available install following command sudo dnf install powerlinefonts environments copy paste commands terminal comments fine clone git clone httpsgithubcompowerlinefontsgit depth install cd fonts installsh cleanup bit cd rm rf fonts uninstall run uninstallsh uninstall powerline fonts also copy quick installation commands changing line installsh uninstallsh cases please make sure working exact version powerline fonts checked installing font families powerline font family formerly known license bsdccas anonymice powerline anonymous pro sil open font license version arimo powerline arimo apache license version cousine powerline cousine apache license version dcoding powerline dcoding sil open font license version dejavu sans mono powerline dejavu sans mono dejavu fonts license version droid sans mono powerline droid sans mono apache license version droid sans mono dotted powerline droid sans mono dotted apache license version droid sans mono slashed powerline droid sans mono slashed apache license version fira mono powerline fira mono sil open font license version go mono powerline go mono gos license hack hack sil ofl v bitstream license inconsolata powerline inconsolata sil open font license version inconsolatadz powerline inconsolatadz sil open font license version inconsolatag powerline inconsolatag sil open font license version input mono input mono inputs license liberation mono powerline liberation mono sil open font license version profontwindows profont powerline mit license meslo powerline meslo apache license version source code pro powerline source code pro sil open font license version meslo dotted powerline meslo dotted apache license version meslo slashed powerline meslo dotted apache license version monofur powerline monofur freeware noto mono powerline noto mono sil open font license version roboto mono powerline roboto mono apache license version symbol neu powerline symbol neu apache license version terminess powerline terminus sil open font license version tinos powerline tinos apache license version ubuntu mono derivative powerline ubuntu mono ubuntu font license version space mono powerline space mono sil open font license version iterm users need set regular font nonascii font iterm preferences profiles text use patched font per issue fontconfig distributions terminess powerline ignored default must explicitly allowed fontconfig file provided enables copy file fontconfig directory home folder configfontconfigconfd create doesnt exist rerun fccache vf,powerlin font repositori contain prepatch adjust font usag powerlin statuslin plugin instal run installsh instal powerlin font see document detail quick instal run debian ubuntu base linux distribut packag avail instal powerlin font follow command sudo aptget instal fontspowerlin fedora test redhat base linux distribut also packag avail instal follow command sudo dnf instal powerlinefont environ copi past command termin comment fine clone git clone httpsgithubcompowerlinefontsgit depth instal cd font installsh cleanup bit cd rm rf font uninstal run uninstallsh uninstal powerlin font also copi quick instal command chang line installsh uninstallsh case pleas make sure work exact version powerlin font check instal font famili powerlin font famili formerli known licens bsdcca anonymic powerlin anonym pro sil open font licens version arimo powerlin arimo apach licens version cousin powerlin cousin apach licens version dcode powerlin dcode sil open font licens version dejavu san mono powerlin dejavu san mono dejavu font licens version droid san mono powerlin droid san mono apach licens version droid san mono dot powerlin droid san mono dot apach licens version droid san mono slash powerlin droid san mono slash apach licens version fira mono powerlin fira mono sil open font licens version go mono powerlin go mono go licens hack hack sil ofl v bitstream licens inconsolata powerlin inconsolata sil open font licens version inconsolatadz powerlin inconsolatadz sil open font licens version inconsolatag powerlin inconsolatag sil open font licens version input mono input mono input licens liber mono powerlin liber mono sil open font licens version profontwindow profont powerlin mit licens meslo powerlin meslo apach licens version sourc code pro powerlin sourc code pro sil open font licens version meslo dot powerlin meslo dot apach licens version meslo slash powerlin meslo dot apach licens version monofur powerlin monofur freewar noto mono powerlin noto mono sil open font licens version roboto mono powerlin roboto mono apach licens version symbol neu powerlin symbol neu apach licens version termi powerlin terminu sil open font licens version tino powerlin tino apach licens version ubuntu mono deriv powerlin ubuntu mono ubuntu font licens version space mono powerlin space mono sil open font licens version iterm user need set regular font nonascii font iterm prefer profil text use patch font per issu fontconfig distribut termi powerlin ignor default must explicitli allow fontconfig file provid enabl copi file fontconfig directori home folder configfontconfigconfd creat doesnt exist rerun fccach vf,powerline font repository contains prepatched adjusted font usage powerline statusline plugin installation run installsh install powerline font see documentation detail quick installation running debian ubuntu based linux distribution package available install powerline font following command sudo aptget install fontspowerline fedora tested redhat based linux distribution also package available install following command sudo dnf install powerlinefonts environment copy paste command terminal comment fine clone git clone httpsgithubcompowerlinefontsgit depth install cd font installsh cleanup bit cd rm rf font uninstall run uninstallsh uninstall powerline font also copy quick installation command changing line installsh uninstallsh case please make sure working exact version powerline font checked installing font family powerline font family formerly known license bsdccas anonymice powerline anonymous pro sil open font license version arimo powerline arimo apache license version cousine powerline cousine apache license version dcoding powerline dcoding sil open font license version dejavu sans mono powerline dejavu sans mono dejavu font license version droid sans mono powerline droid sans mono apache license version droid sans mono dotted powerline droid sans mono dotted apache license version droid sans mono slashed powerline droid sans mono slashed apache license version fira mono powerline fira mono sil open font license version go mono powerline go mono go license hack hack sil ofl v bitstream license inconsolata powerline inconsolata sil open font license version inconsolatadz powerline inconsolatadz sil open font license version inconsolatag powerline inconsolatag sil open font license version input mono input mono input license liberation mono powerline liberation mono sil open font license version profontwindows profont powerline mit license meslo powerline meslo apache license version source code pro powerline source code pro sil open font license version meslo dotted powerline meslo dotted apache license version meslo slashed powerline meslo dotted apache license version monofur powerline monofur freeware noto mono powerline noto mono sil open font license version roboto mono powerline roboto mono apache license version symbol neu powerline symbol neu apache license version terminess powerline terminus sil open font license version tinos powerline tinos apache license version ubuntu mono derivative powerline ubuntu mono ubuntu font license version space mono powerline space mono sil open font license version iterm user need set regular font nonascii font iterm preference profile text use patched font per issue fontconfig distribution terminess powerline ignored default must explicitly allowed fontconfig file provided enables copy file fontconfig directory home folder configfontconfigconfd create doesnt exist rerun fccache vf
72,Shell,GitHub - pyenv/pyenv: Simple Python version management,"Simple Python Version Management: pyenv


pyenv lets you easily switch between multiple versions of Python. It's
simple, unobtrusive, and follows the UNIX tradition of single-purpose
tools that do one thing well.
This project was forked from rbenv and
ruby-build, and modified for Python.

pyenv does...

Let you change the global Python version on a per-user basis.
Provide support for per-project Python versions.
Allow you to override the Python version with an environment
variable.
Search commands from multiple versions of Python at a time.
This may be helpful to test across Python versions with tox.

In contrast with pythonbrew and pythonz, pyenv does not...

Depend on Python itself. pyenv was made from pure shell scripts.
There is no bootstrap problem of Python.
Need to be loaded into your shell. Instead, pyenv's shim
approach works by adding a directory to your $PATH.
Manage virtualenv. Of course, you can create virtualenv
yourself, or pyenv-virtualenv
to automate the process.


Table of Contents

How It Works

Understanding PATH
Understanding Shims
Choosing the Python Version
Locating the Python Installation


Installation

Basic GitHub Checkout

Upgrading
Homebrew on macOS
Advanced Configuration
Uninstalling Python Versions




Command Reference
Development

Version History
License




How It Works
At a high level, pyenv intercepts Python commands using shim
executables injected into your PATH, determines which Python version
has been specified by your application, and passes your commands along
to the correct Python installation.
Understanding PATH
When you run a command like python or pip, your operating system
searches through a list of directories to find an executable file with
that name. This list of directories lives in an environment variable
called PATH, with each directory in the list separated by a colon:
/usr/local/bin:/usr/bin:/bin

Directories in PATH are searched from left to right, so a matching
executable in a directory at the beginning of the list takes
precedence over another one at the end. In this example, the
/usr/local/bin directory will be searched first, then /usr/bin,
then /bin.
Understanding Shims
pyenv works by inserting a directory of shims at the front of your
PATH:
$(pyenv root)/shims:/usr/local/bin:/usr/bin:/bin

Through a process called rehashing, pyenv maintains shims in that
directory to match every Python command across every installed version
of Python‚Äîpython, pip, and so on.
Shims are lightweight executables that simply pass your command along
to pyenv. So with pyenv installed, when you run, say, pip, your
operating system will do the following:

Search your PATH for an executable file named pip
Find the pyenv shim named pip at the beginning of your PATH
Run the shim named pip, which in turn passes the command along to
pyenv

Choosing the Python Version
When you execute a shim, pyenv determines which Python version to use by
reading it from the following sources, in this order:


The PYENV_VERSION environment variable (if specified). You can use
the pyenv shell command to set this environment
variable in your current shell session.


The application-specific .python-version file in the current
directory (if present). You can modify the current directory's
.python-version file with the pyenv local
command.


The first .python-version file found (if any) by searching each parent
directory, until reaching the root of your filesystem.


The global $(pyenv root)/version file. You can modify this file using
the pyenv global command. If the global version
file is not present, pyenv assumes you want to use the ""system""
Python. (In other words, whatever version would run if pyenv weren't in your
PATH.)


NOTE: You can activate multiple versions at the same time, including multiple
versions of Python2 or Python3 simultaneously. This allows for parallel usage of
Python2 and Python3, and is required with tools like tox. For example, to set
your path to first use your system Python and Python3 (set to 2.7.9 and 3.4.2
in this example), but also have Python 3.3.6, 3.2, and 2.5 available on your
PATH, one would first pyenv install the missing versions, then set pyenv global system 3.3.6 3.2 2.5. At this point, one should be able to find the full
executable path to each of these using pyenv which, e.g. pyenv which python2.5
(should display $(pyenv root)/versions/2.5/bin/python2.5), or pyenv which python3.4 (should display path to system Python3). You can also specify multiple
versions in a .python-version file, separated by newlines or any whitespace.
Locating the Python Installation
Once pyenv has determined which version of Python your application has
specified, it passes the command along to the corresponding Python
installation.
Each Python version is installed into its own directory under
$(pyenv root)/versions.
For example, you might have these versions installed:

$(pyenv root)/versions/2.7.8/
$(pyenv root)/versions/3.4.2/
$(pyenv root)/versions/pypy-2.4.0/

As far as pyenv is concerned, version names are simply the directories in
$(pyenv root)/versions.
Managing Virtual Environments
There is a pyenv plugin named pyenv-virtualenv which comes with various features to help pyenv users to manage virtual environments created by virtualenv or Anaconda.
Because the activate script of those virtual environments are relying on mutating $PATH variable of user's interactive shell, it will intercept pyenv's shim style command execution hooks.
We'd recommend to install pyenv-virtualenv as well if you have some plan to play with those virtual environments.

Installation
If you're on macOS, consider installing with Homebrew.
If you're on Windows, consider using @kirankotari's pyenv-win fork. (pyenv does not work on windows outside the Windows Subsystem for Linux)
The automatic installer
Visit my other project:
https://github.com/pyenv/pyenv-installer
Basic GitHub Checkout
This will get you going with the latest version of pyenv and make it
easy to fork and contribute any changes back upstream.


Check out pyenv where you want it installed.
A good place to choose is $HOME/.pyenv (but you can install it somewhere else).
 $ git clone https://github.com/pyenv/pyenv.git ~/.pyenv



Define environment variable PYENV_ROOT to point to the path where
pyenv repo is cloned and add $PYENV_ROOT/bin to your $PATH for access
to the pyenv command-line utility.
$ echo 'export PYENV_ROOT=""$HOME/.pyenv""' >> ~/.bash_profile
$ echo 'export PATH=""$PYENV_ROOT/bin:$PATH""' >> ~/.bash_profile

Zsh note: Modify your ~/.zshenv file instead of ~/.bash_profile.
Ubuntu and Fedora note: Modify your ~/.bashrc file instead of ~/.bash_profile.
Proxy note: If you use a proxy, export http_proxy and HTTPS_PROXY too.



Add pyenv init to your shell to enable shims and autocompletion.
Please make sure eval ""$(pyenv init -)"" is placed toward the end of the shell
configuration file since it manipulates PATH during the initialization.
$ echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval ""$(pyenv init -)""\nfi' >> ~/.bash_profile

Zsh note: Modify your ~/.zshenv file instead of ~/.bash_profile.
fish note: Use pyenv init - | source instead of eval (pyenv init -).
Ubuntu and Fedora note: Modify your ~/.bashrc file instead of ~/.bash_profile.

General warning: There are some systems where the BASH_ENV variable is configured
to point to .bashrc. On such systems you should almost certainly put the abovementioned line
eval ""$(pyenv init -)"" into .bash_profile, and not into .bashrc. Otherwise you
may observe strange behaviour, such as pyenv getting into an infinite loop.
See #264 for details.


Restart your shell so the path changes take effect.
You can now begin using pyenv.
$ exec ""$SHELL""


Install Python build dependencies before attempting to install a new Python version.  The
pyenv wiki provides suggested installation packages
and commands for various operating systems.


Install Python versions into $(pyenv root)/versions.
For example, to download and install Python 2.7.8, run:
$ pyenv install 2.7.8
NOTE: If you need to pass configure option to build, please use
CONFIGURE_OPTS environment variable.
NOTE: If you want to use proxy to download, please use http_proxy and https_proxy
environment variable.
NOTE: If you are having trouble installing a python version,
please visit the wiki page about
Common Build Problems


Upgrading
If you've installed pyenv using the instructions above, you can
upgrade your installation at any time using git.
To upgrade to the latest development version of pyenv, use git pull:
$ cd $(pyenv root)
$ git pull
To upgrade to a specific release of pyenv, check out the corresponding tag:
$ cd $(pyenv root)
$ git fetch
$ git tag
v0.1.0
$ git checkout v0.1.0
Uninstalling pyenv
The simplicity of pyenv makes it easy to temporarily disable it, or
uninstall from the system.

To disable pyenv managing your Python versions, simply remove the
pyenv init line from your shell startup configuration. This will
remove pyenv shims directory from PATH, and future invocations like
python will execute the system Python version, as before pyenv.

pyenv will still be accessible on the command line, but your Python
apps won't be affected by version switching.


To completely uninstall pyenv, perform step (1) and then remove
its root directory. This will delete all Python versions that were
installed under $(pyenv root)/versions/ directory:
rm -rf $(pyenv root)
If you've installed pyenv using a package manager, as a final step
perform the pyenv package removal. For instance, for Homebrew:
 brew uninstall pyenv



Homebrew on macOS
You can also install pyenv using the Homebrew
package manager for macOS.
$ brew update
$ brew install pyenv

To upgrade pyenv in the future, use upgrade instead of install.
Then follow the rest of the post-installation steps under Basic GitHub Checkout above, starting with #3 (""Add pyenv init to your shell to enable shims and autocompletion"").
Advanced Configuration
Skip this section unless you must know what every line in your shell
profile is doing.
pyenv init is the only command that crosses the line of loading
extra commands into your shell. Coming from rvm, some of you might be
opposed to this idea. Here's what pyenv init actually does:


Sets up your shims path. This is the only requirement for pyenv to
function properly. You can do this by hand by prepending
$(pyenv root)/shims to your $PATH.


Installs autocompletion. This is entirely optional but pretty
useful. Sourcing $(pyenv root)/completions/pyenv.bash will set that
up. There is also a $(pyenv root)/completions/pyenv.zsh for Zsh
users.


Rehashes shims. From time to time you'll need to rebuild your
shim files. Doing this on init makes sure everything is up to
date. You can always run pyenv rehash manually.


Installs the sh dispatcher. This bit is also optional, but allows
pyenv and plugins to change variables in your current shell, making
commands like pyenv shell possible. The sh dispatcher doesn't do
anything crazy like override cd or hack your shell prompt, but if
for some reason you need pyenv to be a real script rather than a
shell function, you can safely skip it.


To see exactly what happens under the hood for yourself, run pyenv init -.
Uninstalling Python Versions
As time goes on, you will accumulate Python versions in your
$(pyenv root)/versions directory.
To remove old Python versions, pyenv uninstall command to automate
the removal process.
Alternatively, simply rm -rf the directory of the version you want
to remove. You can find the directory of a particular Python version
with the pyenv prefix command, e.g. pyenv prefix 2.6.8.

Command Reference
See COMMANDS.md.

Environment variables
You can affect how pyenv operates with the following settings:



name
default
description




PYENV_VERSION

Specifies the Python version to be used.Also see pyenv shell


PYENV_ROOT
~/.pyenv
Defines the directory under which Python versions and shims reside.Also see pyenv root


PYENV_DEBUG

Outputs debug information.Also as: pyenv --debug <subcommand>


PYENV_HOOK_PATH
see wiki
Colon-separated list of paths searched for pyenv hooks.


PYENV_DIR
$PWD
Directory to start searching for .python-version files.


PYTHON_BUILD_ARIA2_OPTS

Used to pass additional parameters to aria2.If the aria2c binary is available on PATH, pyenv uses aria2c instead of curl or wget to download the Python Source code. If you have an unstable internet connection, you can use this variable to instruct aria2 to accelerate the download.In most cases, you will only need to use -x 10 -k 1M as value to PYTHON_BUILD_ARIA2_OPTS environment variable



Development
The pyenv source code is hosted on
GitHub.  It's clean, modular,
and easy to understand, even if you're not a shell hacker.
Tests are executed using Bats:
$ bats test
$ bats/test/<file>.bats

Please feel free to submit pull requests and file bugs on the issue
tracker.
Version History
See CHANGELOG.md.
License
The MIT License
",simple python version management pyenv pyenv lets easily switch multiple versions python simple unobtrusive follows unix tradition singlepurpose tools one thing well project forked rbenv rubybuild modified python pyenv let change global python version peruser basis provide support perproject python versions allow override python version environment variable search commands multiple versions python time may helpful test across python versions tox contrast pythonbrew pythonz pyenv depend python pyenv made pure shell scripts bootstrap problem python need loaded shell instead pyenvs shim approach works adding directory path manage virtualenv course create virtualenv pyenvvirtualenv automate process table contents works understanding path understanding shims choosing python version locating python installation installation basic github checkout upgrading homebrew macos advanced configuration uninstalling python versions command reference development version history license works high level pyenv intercepts python commands using shim executables injected path determines python version specified application passes commands along correct python installation understanding path run command like python pip operating system searches list directories find executable file name list directories lives environment variable called path directory list separated colon usrlocalbinusrbinbin directories path searched left right matching executable directory beginning list takes precedence another one end example usrlocalbin directory searched first usrbin bin understanding shims pyenv works inserting directory shims front path pyenv rootshimsusrlocalbinusrbinbin process called rehashing pyenv maintains shims directory match every python command across every installed version pythonpython pip shims lightweight executables simply pass command along pyenv pyenv installed run say pip operating system following search path executable file named pip find pyenv shim named pip beginning path run shim named pip turn passes command along pyenv choosing python version execute shim pyenv determines python version use reading following sources order pyenvversion environment variable specified use pyenv shell command set environment variable current shell session applicationspecific pythonversion file current directory present modify current directorys pythonversion file pyenv local command first pythonversion file found searching parent directory reaching root filesystem global pyenv rootversion file modify file using pyenv global command global version file present pyenv assumes want use system python words whatever version would run pyenv werent path note activate multiple versions time including multiple versions python python simultaneously allows parallel usage python python required tools like tox example set path first use system python python set example also python available path one would first pyenv install missing versions set pyenv global system point one able find full executable path using pyenv eg pyenv python display pyenv rootversionsbinpython pyenv python display path system python also specify multiple versions pythonversion file separated newlines whitespace locating python installation pyenv determined version python application specified passes command along corresponding python installation python version installed directory pyenv rootversions example might versions installed pyenv rootversions pyenv rootversions pyenv rootversionspypy far pyenv concerned version names simply directories pyenv rootversions managing virtual environments pyenv plugin named pyenvvirtualenv comes various features help pyenv users manage virtual environments created virtualenv anaconda activate script virtual environments relying mutating path variable users interactive shell intercept pyenvs shim style command execution hooks wed recommend install pyenvvirtualenv well plan play virtual environments installation youre macos consider installing homebrew youre windows consider using kirankotaris pyenvwin fork pyenv work windows outside windows subsystem linux automatic installer visit project httpsgithubcompyenvpyenvinstaller basic github checkout get going latest version pyenv make easy fork contribute changes back upstream check pyenv want installed good place choose homepyenv install somewhere else git clone httpsgithubcompyenvpyenvgit pyenv define environment variable pyenvroot point path pyenv repo cloned add pyenvrootbin path access pyenv commandline utility echo export pyenvroothomepyenv bashprofile echo export pathpyenvrootbinpath bashprofile zsh note modify zshenv file instead bashprofile ubuntu fedora note modify bashrc file instead bashprofile proxy note use proxy export httpproxy httpsproxy add pyenv init shell enable shims autocompletion please make sure eval pyenv init placed toward end shell configuration file since manipulates path initialization echo e command v pyenv devnull thenn eval pyenv init nfi bashprofile zsh note modify zshenv file instead bashprofile fish note use pyenv init source instead eval pyenv init ubuntu fedora note modify bashrc file instead bashprofile general warning systems bashenv variable configured point bashrc systems almost certainly put abovementioned line eval pyenv init bashprofile bashrc otherwise may observe strange behaviour pyenv getting infinite loop see details restart shell path changes take effect begin using pyenv exec shell install python build dependencies attempting install new python version pyenv wiki provides suggested installation packages commands various operating systems install python versions pyenv rootversions example download install python run pyenv install note need pass configure option build please use configureopts environment variable note want use proxy download please use httpproxy httpsproxy environment variable note trouble installing python version please visit wiki page common build problems upgrading youve installed pyenv using instructions upgrade installation time using git upgrade latest development version pyenv use git pull cd pyenv root git pull upgrade specific release pyenv check corresponding tag cd pyenv root git fetch git tag v git checkout v uninstalling pyenv simplicity pyenv makes easy temporarily disable uninstall system disable pyenv managing python versions simply remove pyenv init line shell startup configuration remove pyenv shims directory path future invocations like python execute system python version pyenv pyenv still accessible command line python apps wont affected version switching completely uninstall pyenv perform step remove root directory delete python versions installed pyenv rootversions directory rm rf pyenv root youve installed pyenv using package manager final step perform pyenv package removal instance homebrew brew uninstall pyenv homebrew macos also install pyenv using homebrew package manager macos brew update brew install pyenv upgrade pyenv future use upgrade instead install follow rest postinstallation steps basic github checkout starting add pyenv init shell enable shims autocompletion advanced configuration skip section unless must know every line shell profile pyenv init command crosses line loading extra commands shell coming rvm might opposed idea heres pyenv init actually sets shims path requirement pyenv function properly hand prepending pyenv rootshims path installs autocompletion entirely optional pretty useful sourcing pyenv rootcompletionspyenvbash set also pyenv rootcompletionspyenvzsh zsh users rehashes shims time time youll need rebuild shim files init makes sure everything date always run pyenv rehash manually installs sh dispatcher bit also optional allows pyenv plugins change variables current shell making commands like pyenv shell possible sh dispatcher doesnt anything crazy like override cd hack shell prompt reason need pyenv real script rather shell function safely skip see exactly happens hood run pyenv init uninstalling python versions time goes accumulate python versions pyenv rootversions directory remove old python versions pyenv uninstall command automate removal process alternatively simply rm rf directory version want remove find directory particular python version pyenv prefix command eg pyenv prefix command reference see commandsmd environment variables affect pyenv operates following settings name default description pyenvversion specifies python version usedalso see pyenv shell pyenvroot pyenv defines directory python versions shims residealso see pyenv root pyenvdebug outputs debug informationalso pyenv debug subcommand pyenvhookpath see wiki colonseparated list paths searched pyenv hooks pyenvdir pwd directory start searching pythonversion files pythonbuildariaopts used pass additional parameters ariaif ariac binary available path pyenv uses ariac instead curl wget download python source code unstable internet connection use variable instruct aria accelerate downloadin cases need use x k value pythonbuildariaopts environment variable development pyenv source code hosted github clean modular easy understand even youre shell hacker tests executed using bats bats test batstestfilebats please feel free submit pull requests file bugs issue tracker version history see changelogmd license mit license,simpl python version manag pyenv pyenv let easili switch multipl version python simpl unobtrus follow unix tradit singlepurpos tool one thing well project fork rbenv rubybuild modifi python pyenv let chang global python version perus basi provid support perproject python version allow overrid python version environ variabl search command multipl version python time may help test across python version tox contrast pythonbrew pythonz pyenv depend python pyenv made pure shell script bootstrap problem python need load shell instead pyenv shim approach work ad directori path manag virtualenv cours creat virtualenv pyenvvirtualenv autom process tabl content work understand path understand shim choos python version locat python instal instal basic github checkout upgrad homebrew maco advanc configur uninstal python version command refer develop version histori licens work high level pyenv intercept python command use shim execut inject path determin python version specifi applic pass command along correct python instal understand path run command like python pip oper system search list directori find execut file name list directori live environ variabl call path directori list separ colon usrlocalbinusrbinbin directori path search left right match execut directori begin list take preced anoth one end exampl usrlocalbin directori search first usrbin bin understand shim pyenv work insert directori shim front path pyenv rootshimsusrlocalbinusrbinbin process call rehash pyenv maintain shim directori match everi python command across everi instal version pythonpython pip shim lightweight execut simpli pass command along pyenv pyenv instal run say pip oper system follow search path execut file name pip find pyenv shim name pip begin path run shim name pip turn pass command along pyenv choos python version execut shim pyenv determin python version use read follow sourc order pyenvvers environ variabl specifi use pyenv shell command set environ variabl current shell session applicationspecif pythonvers file current directori present modifi current directori pythonvers file pyenv local command first pythonvers file found search parent directori reach root filesystem global pyenv rootvers file modifi file use pyenv global command global version file present pyenv assum want use system python word whatev version would run pyenv werent path note activ multipl version time includ multipl version python python simultan allow parallel usag python python requir tool like tox exampl set path first use system python python set exampl also python avail path one would first pyenv instal miss version set pyenv global system point one abl find full execut path use pyenv eg pyenv python display pyenv rootversionsbinpython pyenv python display path system python also specifi multipl version pythonvers file separ newlin whitespac locat python instal pyenv determin version python applic specifi pass command along correspond python instal python version instal directori pyenv rootvers exampl might version instal pyenv rootvers pyenv rootvers pyenv rootversionspypi far pyenv concern version name simpli directori pyenv rootvers manag virtual environ pyenv plugin name pyenvvirtualenv come variou featur help pyenv user manag virtual environ creat virtualenv anaconda activ script virtual environ reli mutat path variabl user interact shell intercept pyenv shim style command execut hook wed recommend instal pyenvvirtualenv well plan play virtual environ instal your maco consid instal homebrew your window consid use kirankotari pyenvwin fork pyenv work window outsid window subsystem linux automat instal visit project httpsgithubcompyenvpyenvinstal basic github checkout get go latest version pyenv make easi fork contribut chang back upstream check pyenv want instal good place choos homepyenv instal somewher els git clone httpsgithubcompyenvpyenvgit pyenv defin environ variabl pyenvroot point path pyenv repo clone add pyenvrootbin path access pyenv commandlin util echo export pyenvroothomepyenv bashprofil echo export pathpyenvrootbinpath bashprofil zsh note modifi zshenv file instead bashprofil ubuntu fedora note modifi bashrc file instead bashprofil proxi note use proxi export httpproxi httpsproxi add pyenv init shell enabl shim autocomplet pleas make sure eval pyenv init place toward end shell configur file sinc manipul path initi echo e command v pyenv devnul thenn eval pyenv init nfi bashprofil zsh note modifi zshenv file instead bashprofil fish note use pyenv init sourc instead eval pyenv init ubuntu fedora note modifi bashrc file instead bashprofil gener warn system bashenv variabl configur point bashrc system almost certainli put abovement line eval pyenv init bashprofil bashrc otherwis may observ strang behaviour pyenv get infinit loop see detail restart shell path chang take effect begin use pyenv exec shell instal python build depend attempt instal new python version pyenv wiki provid suggest instal packag command variou oper system instal python version pyenv rootvers exampl download instal python run pyenv instal note need pass configur option build pleas use configureopt environ variabl note want use proxi download pleas use httpproxi httpsproxi environ variabl note troubl instal python version pleas visit wiki page common build problem upgrad youv instal pyenv use instruct upgrad instal time use git upgrad latest develop version pyenv use git pull cd pyenv root git pull upgrad specif releas pyenv check correspond tag cd pyenv root git fetch git tag v git checkout v uninstal pyenv simplic pyenv make easi temporarili disabl uninstal system disabl pyenv manag python version simpli remov pyenv init line shell startup configur remov pyenv shim directori path futur invoc like python execut system python version pyenv pyenv still access command line python app wont affect version switch complet uninstal pyenv perform step remov root directori delet python version instal pyenv rootvers directori rm rf pyenv root youv instal pyenv use packag manag final step perform pyenv packag remov instanc homebrew brew uninstal pyenv homebrew maco also instal pyenv use homebrew packag manag maco brew updat brew instal pyenv upgrad pyenv futur use upgrad instead instal follow rest postinstal step basic github checkout start add pyenv init shell enabl shim autocomplet advanc configur skip section unless must know everi line shell profil pyenv init command cross line load extra command shell come rvm might oppos idea here pyenv init actual set shim path requir pyenv function properli hand prepend pyenv rootshim path instal autocomplet entir option pretti use sourc pyenv rootcompletionspyenvbash set also pyenv rootcompletionspyenvzsh zsh user rehash shim time time youll need rebuild shim file init make sure everyth date alway run pyenv rehash manual instal sh dispatch bit also option allow pyenv plugin chang variabl current shell make command like pyenv shell possibl sh dispatch doesnt anyth crazi like overrid cd hack shell prompt reason need pyenv real script rather shell function safe skip see exactli happen hood run pyenv init uninstal python version time goe accumul python version pyenv rootvers directori remov old python version pyenv uninstal command autom remov process altern simpli rm rf directori version want remov find directori particular python version pyenv prefix command eg pyenv prefix command refer see commandsmd environ variabl affect pyenv oper follow set name default descript pyenvvers specifi python version usedalso see pyenv shell pyenvroot pyenv defin directori python version shim residealso see pyenv root pyenvdebug output debug informationalso pyenv debug subcommand pyenvhookpath see wiki colonsepar list path search pyenv hook pyenvdir pwd directori start search pythonvers file pythonbuildariaopt use pass addit paramet ariaif ariac binari avail path pyenv use ariac instead curl wget download python sourc code unstabl internet connect use variabl instruct aria acceler downloadin case need use x k valu pythonbuildariaopt environ variabl develop pyenv sourc code host github clean modular easi understand even your shell hacker test execut use bat bat test batstestfilebat pleas feel free submit pull request file bug issu tracker version histori see changelogmd licens mit licens,simple python version management pyenv pyenv let easily switch multiple version python simple unobtrusive follows unix tradition singlepurpose tool one thing well project forked rbenv rubybuild modified python pyenv let change global python version peruser basis provide support perproject python version allow override python version environment variable search command multiple version python time may helpful test across python version tox contrast pythonbrew pythonz pyenv depend python pyenv made pure shell script bootstrap problem python need loaded shell instead pyenvs shim approach work adding directory path manage virtualenv course create virtualenv pyenvvirtualenv automate process table content work understanding path understanding shim choosing python version locating python installation installation basic github checkout upgrading homebrew macos advanced configuration uninstalling python version command reference development version history license work high level pyenv intercept python command using shim executables injected path determines python version specified application pass command along correct python installation understanding path run command like python pip operating system search list directory find executable file name list directory life environment variable called path directory list separated colon usrlocalbinusrbinbin directory path searched left right matching executable directory beginning list take precedence another one end example usrlocalbin directory searched first usrbin bin understanding shim pyenv work inserting directory shim front path pyenv rootshimsusrlocalbinusrbinbin process called rehashing pyenv maintains shim directory match every python command across every installed version pythonpython pip shim lightweight executables simply pas command along pyenv pyenv installed run say pip operating system following search path executable file named pip find pyenv shim named pip beginning path run shim named pip turn pass command along pyenv choosing python version execute shim pyenv determines python version use reading following source order pyenvversion environment variable specified use pyenv shell command set environment variable current shell session applicationspecific pythonversion file current directory present modify current directory pythonversion file pyenv local command first pythonversion file found searching parent directory reaching root filesystem global pyenv rootversion file modify file using pyenv global command global version file present pyenv assumes want use system python word whatever version would run pyenv werent path note activate multiple version time including multiple version python python simultaneously allows parallel usage python python required tool like tox example set path first use system python python set example also python available path one would first pyenv install missing version set pyenv global system point one able find full executable path using pyenv eg pyenv python display pyenv rootversionsbinpython pyenv python display path system python also specify multiple version pythonversion file separated newlines whitespace locating python installation pyenv determined version python application specified pass command along corresponding python installation python version installed directory pyenv rootversions example might version installed pyenv rootversions pyenv rootversions pyenv rootversionspypy far pyenv concerned version name simply directory pyenv rootversions managing virtual environment pyenv plugin named pyenvvirtualenv come various feature help pyenv user manage virtual environment created virtualenv anaconda activate script virtual environment relying mutating path variable user interactive shell intercept pyenvs shim style command execution hook wed recommend install pyenvvirtualenv well plan play virtual environment installation youre macos consider installing homebrew youre window consider using kirankotaris pyenvwin fork pyenv work window outside window subsystem linux automatic installer visit project httpsgithubcompyenvpyenvinstaller basic github checkout get going latest version pyenv make easy fork contribute change back upstream check pyenv want installed good place choose homepyenv install somewhere else git clone httpsgithubcompyenvpyenvgit pyenv define environment variable pyenvroot point path pyenv repo cloned add pyenvrootbin path access pyenv commandline utility echo export pyenvroothomepyenv bashprofile echo export pathpyenvrootbinpath bashprofile zsh note modify zshenv file instead bashprofile ubuntu fedora note modify bashrc file instead bashprofile proxy note use proxy export httpproxy httpsproxy add pyenv init shell enable shim autocompletion please make sure eval pyenv init placed toward end shell configuration file since manipulates path initialization echo e command v pyenv devnull thenn eval pyenv init nfi bashprofile zsh note modify zshenv file instead bashprofile fish note use pyenv init source instead eval pyenv init ubuntu fedora note modify bashrc file instead bashprofile general warning system bashenv variable configured point bashrc system almost certainly put abovementioned line eval pyenv init bashprofile bashrc otherwise may observe strange behaviour pyenv getting infinite loop see detail restart shell path change take effect begin using pyenv exec shell install python build dependency attempting install new python version pyenv wiki provides suggested installation package command various operating system install python version pyenv rootversions example download install python run pyenv install note need pas configure option build please use configureopts environment variable note want use proxy download please use httpproxy httpsproxy environment variable note trouble installing python version please visit wiki page common build problem upgrading youve installed pyenv using instruction upgrade installation time using git upgrade latest development version pyenv use git pull cd pyenv root git pull upgrade specific release pyenv check corresponding tag cd pyenv root git fetch git tag v git checkout v uninstalling pyenv simplicity pyenv make easy temporarily disable uninstall system disable pyenv managing python version simply remove pyenv init line shell startup configuration remove pyenv shim directory path future invocation like python execute system python version pyenv pyenv still accessible command line python apps wont affected version switching completely uninstall pyenv perform step remove root directory delete python version installed pyenv rootversions directory rm rf pyenv root youve installed pyenv using package manager final step perform pyenv package removal instance homebrew brew uninstall pyenv homebrew macos also install pyenv using homebrew package manager macos brew update brew install pyenv upgrade pyenv future use upgrade instead install follow rest postinstallation step basic github checkout starting add pyenv init shell enable shim autocompletion advanced configuration skip section unless must know every line shell profile pyenv init command cross line loading extra command shell coming rvm might opposed idea here pyenv init actually set shim path requirement pyenv function properly hand prepending pyenv rootshims path installs autocompletion entirely optional pretty useful sourcing pyenv rootcompletionspyenvbash set also pyenv rootcompletionspyenvzsh zsh user rehash shim time time youll need rebuild shim file init make sure everything date always run pyenv rehash manually installs sh dispatcher bit also optional allows pyenv plugins change variable current shell making command like pyenv shell possible sh dispatcher doesnt anything crazy like override cd hack shell prompt reason need pyenv real script rather shell function safely skip see exactly happens hood run pyenv init uninstalling python version time go accumulate python version pyenv rootversions directory remove old python version pyenv uninstall command automate removal process alternatively simply rm rf directory version want remove find directory particular python version pyenv prefix command eg pyenv prefix command reference see commandsmd environment variable affect pyenv operates following setting name default description pyenvversion specifies python version usedalso see pyenv shell pyenvroot pyenv defines directory python version shim residealso see pyenv root pyenvdebug output debug informationalso pyenv debug subcommand pyenvhookpath see wiki colonseparated list path searched pyenv hook pyenvdir pwd directory start searching pythonversion file pythonbuildariaopts used pas additional parameter ariaif ariac binary available path pyenv us ariac instead curl wget download python source code unstable internet connection use variable instruct aria accelerate downloadin case need use x k value pythonbuildariaopts environment variable development pyenv source code hosted github clean modular easy understand even youre shell hacker test executed using bat bat test batstestfilebats please feel free submit pull request file bug issue tracker version history see changelogmd license mit license
73,Shell,GitHub - Neilpang/acme.sh: A pure Unix shell script implementing ACME client protocol,"An ACME Shell script: acme.sh 
 

An ACME protocol client written purely in Shell (Unix shell) language.
Full ACME protocol implementation.
Support ACME v1 and ACME v2
Support ACME v2 wildcard certs
Simple, powerful and very easy to use. You only need 3 minutes to learn it.
Bash, dash and sh compatible.
Simplest shell script for Let's Encrypt free certificate client.
Purely written in Shell with no dependencies on python or the official Let's Encrypt client.
Just one script to issue, renew and install your certificates automatically.
DOES NOT require root/sudoer access.
Docker friendly
IPv6 support
Cron job notifications for renewal or error etc.

It's probably the easiest & smartest shell script to automatically issue & renew the free certificates from Let's Encrypt.
Wiki: https://github.com/Neilpang/acme.sh/wiki
For Docker Fans: acme.sh üíï Docker 
Twitter: @neilpangxa
‰∏≠ÊñáËØ¥Êòé
Who:

FreeBSD.org
ruby-china.org
Proxmox
pfsense
webfaction
Loadbalancer.org
discourse.org
Centminmod
splynx
archlinux
opnsense.org
CentOS Web Panel
lnmp.org
more...

Tested OS



NO
Status
Platform




1

Ubuntu


2

Debian


3

CentOS


4

Windows (cygwin with curl, openssl and crontab included)


5

FreeBSD


6

pfsense


7

openSUSE


8

Alpine Linux (with curl)


9

Archlinux


10

fedora


11

Kali Linux


12

Oracle Linux


13

Proxmox https://pve.proxmox.com/wiki/HTTPSCertificateConfiguration#Let.27s_Encrypt_using_acme.sh


14
-----
Cloud Linux  https://github.com/Neilpang/le/issues/111


15

OpenBSD


16

Mageia


17
-----
OpenWRT: Tested and working. See wiki page


18

SunOS/Solaris


19

Gentoo Linux


20

Mac OSX



For all build statuses, check our weekly build project:
https://github.com/Neilpang/acmetest
Supported CA

Letsencrypt.org CA(default)
BuyPass.com CA
Pebble strict Mode

Supported modes

Webroot mode
Standalone mode
Standalone tls-alpn mode
Apache mode
Nginx mode
DNS mode
DNS alias mode
Stateless mode

1. How to install
1. Install online
Check this project: https://github.com/Neilpang/get.acme.sh
curl https://get.acme.sh | sh
Or:
wget -O -  https://get.acme.sh | sh
2. Or, Install from git
Clone this project and launch installation:
git clone https://github.com/Neilpang/acme.sh.git
cd ./acme.sh
./acme.sh --install
You don't have to be root then, although it is recommended.
Advanced Installation: https://github.com/Neilpang/acme.sh/wiki/How-to-install
The installer will perform 3 actions:

Create and copy acme.sh to your home dir ($HOME): ~/.acme.sh/.
All certs will be placed in this folder too.
Create alias for: acme.sh=~/.acme.sh/acme.sh.
Create daily cron job to check and renew the certs if needed.

Cron entry example:
0 0 * * * ""/home/user/.acme.sh""/acme.sh --cron --home ""/home/user/.acme.sh"" > /dev/null
After the installation, you must close the current terminal and reopen it to make the alias take effect.
Ok, you are ready to issue certs now.
Show help message:
root@v1:~# acme.sh -h
2. Just issue a cert
Example 1: Single domain.
acme.sh --issue -d example.com -w /home/wwwroot/example.com
or:
acme.sh --issue -d example.com -w /home/username/public_html
or:
acme.sh --issue -d example.com -w /var/www/html
Example 2: Multiple domains in the same cert.
acme.sh --issue -d example.com -d www.example.com -d cp.example.com -w /home/wwwroot/example.com
The parameter /home/wwwroot/example.com or /home/username/public_html or /var/www/html is the web root folder where you host your website files. You MUST have write access to this folder.
Second argument ""example.com"" is the main domain you want to issue the cert for.
You must have at least one domain there.
You must point and bind all the domains to the same webroot dir: /home/wwwroot/example.com.
The certs will be placed in ~/.acme.sh/example.com/
The certs will be renewed automatically every 60 days.
More examples: https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert
3. Install the cert to Apache/Nginx etc.
After the cert is generated, you probably want to install/copy the cert to your Apache/Nginx or other servers.
You MUST use this command to copy the certs to the target files, DO NOT use the certs files in ~/.acme.sh/ folder, they are for internal use only, the folder structure may change in the future.
Apache example:
acme.sh --install-cert -d example.com \
--cert-file      /path/to/certfile/in/apache/cert.pem  \
--key-file       /path/to/keyfile/in/apache/key.pem  \
--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \
--reloadcmd     ""service apache2 force-reload""
Nginx example:
acme.sh --install-cert -d example.com \
--key-file       /path/to/keyfile/in/nginx/key.pem  \
--fullchain-file /path/to/fullchain/nginx/cert.pem \
--reloadcmd     ""service nginx force-reload""
Only the domain is required, all the other parameters are optional.
The ownership and permission info of existing files are preserved. You can pre-create the files to define the ownership and permission.
Install/copy the cert/key to the production Apache or Nginx path.
The cert will be renewed every 60 days by default (which is configurable). Once the cert is renewed, the Apache/Nginx service will be reloaded automatically by the command: service apache2 force-reload or service nginx force-reload.
Please take care:  The reloadcmd is very important. The cert can be automatically renewed, but, without a correct 'reloadcmd' the cert may not be flushed to your server(like nginx or apache), then your website will not be able to show renewed cert in 60 days.
4. Use Standalone server to issue cert
(requires you to be root/sudoer or have permission to listen on port 80 (TCP))
Port 80 (TCP) MUST be free to listen on, otherwise you will be prompted to free it and try again.
acme.sh --issue --standalone -d example.com -d www.example.com -d cp.example.com
More examples: https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert
5. Use Standalone ssl server to issue cert
(requires you to be root/sudoer or have permission to listen on port 443 (TCP))
Port 443 (TCP) MUST be free to listen on, otherwise you will be prompted to free it and try again.
acme.sh --issue --alpn -d example.com -d www.example.com -d cp.example.com
More examples: https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert
6. Use Apache mode
(requires you to be root/sudoer, since it is required to interact with Apache server)
If you are running a web server, Apache or Nginx, it is recommended to use the Webroot mode.
Particularly, if you are running an Apache server, you can use Apache mode instead. This mode doesn't write any files to your web root folder.
Just set string ""apache"" as the second argument and it will force use of apache plugin automatically.
acme.sh --issue --apache -d example.com -d www.example.com -d cp.example.com
This apache mode is only to issue the cert, it will not change your apache config files.
You will need to configure your website config files to use the cert by yourself.
We don't want to mess your apache server, don't worry.
More examples: https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert
7. Use Nginx mode
(requires you to be root/sudoer, since it is required to interact with Nginx server)
If you are running a web server, Apache or Nginx, it is recommended to use the Webroot mode.
Particularly, if you are running an nginx server, you can use nginx mode instead. This mode doesn't write any files to your web root folder.
Just set string ""nginx"" as the second argument.
It will configure nginx server automatically to verify the domain and then restore the nginx config to the original version.
So, the config is not changed.
acme.sh --issue --nginx -d example.com -d www.example.com -d cp.example.com
This nginx mode is only to issue the cert, it will not change your nginx config files.
You will need to configure your website config files to use the cert by yourself.
We don't want to mess your nginx server, don't worry.
More examples: https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert
8. Automatic DNS API integration
If your DNS provider supports API access, we can use that API to automatically issue the certs.
You don't have to do anything manually!
Currently acme.sh supports most of the dns providers:
https://github.com/Neilpang/acme.sh/wiki/dnsapi
9. Use DNS manual mode:
See: https://github.com/Neilpang/acme.sh/wiki/dns-manual-mode first.
If your dns provider doesn't support any api access, you can add the txt record by your hand.
acme.sh --issue --dns -d example.com -d www.example.com -d cp.example.com
You should get an output like below:
Add the following txt record:
Domain:_acme-challenge.example.com
Txt value:9ihDbjYfTExAYeDs4DBUeuTo18KBzwvTEjUnSwd32-c

Add the following txt record:
Domain:_acme-challenge.www.example.com
Txt value:9ihDbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Please add those txt records to the domains. Waiting for the dns to take effect.
Then just rerun with renew argument:
acme.sh --renew -d example.com
Ok, it's done.
Take care, this is dns manual mode, it can not be renewed automatically. you will have to add a new txt record to your domain by your hand when you renew your cert.
Please use dns api mode instead.
10. Issue ECC certificates
Let's Encrypt can now issue ECDSA certificates.
And we support them too!
Just set the keylength parameter with a prefix ec-.
For example:
Single domain ECC certificate
acme.sh --issue -w /home/wwwroot/example.com -d example.com --keylength ec-256
SAN multi domain ECC certificate
acme.sh --issue -w /home/wwwroot/example.com -d example.com -d www.example.com --keylength ec-256
Please look at the keylength parameter above.
Valid values are:

ec-256 (prime256v1, ""ECDSA P-256"")
ec-384 (secp384r1,  ""ECDSA P-384"")
ec-521 (secp521r1,  ""ECDSA P-521"", which is not supported by Let's Encrypt yet.)

11. Issue Wildcard certificates
It's simple, just give a wildcard domain as the -d parameter.
acme.sh  --issue -d example.com  -d '*.example.com'  --dns dns_cf
12. How to renew the certs
No, you don't need to renew the certs manually. All the certs will be renewed automatically every 60 days.
However, you can also force to renew a cert:
acme.sh --renew -d example.com --force
or, for ECC cert:
acme.sh --renew -d example.com --force --ecc
13. How to stop cert renewal
To stop renewal of a cert, you can execute the following to remove the cert from the renewal list:
acme.sh --remove -d example.com [--ecc]
The cert/key file is not removed from the disk.
You can remove the respective directory (e.g. ~/.acme.sh/example.com) by yourself.
14. How to upgrade acme.sh
acme.sh is in constant development, so it's strongly recommended to use the latest code.
You can update acme.sh to the latest code:
acme.sh --upgrade
You can also enable auto upgrade:
acme.sh --upgrade --auto-upgrade
Then acme.sh will be kept up to date automatically.
Disable auto upgrade:
acme.sh --upgrade --auto-upgrade 0
15. Issue a cert from an existing CSR
https://github.com/Neilpang/acme.sh/wiki/Issue-a-cert-from-existing-CSR
16. Send notifications in cronjob
https://github.com/Neilpang/acme.sh/wiki/notify
17. Under the Hood
Speak ACME language using shell, directly to ""Let's Encrypt"".
TODO:
18. Acknowledgments

Acme-tiny: https://github.com/diafygi/acme-tiny
ACME protocol: https://github.com/ietf-wg-acme/acme

Contributors
Code Contributors
This project exists thanks to all the people who contribute. [Contribute].

Financial Contributors
Become a financial contributor and help us sustain our community. [Contribute]
Individuals

Organizations
Support this project with your organization. Your logo will show up here with a link to your website. [Contribute]










19. License & Others
License is GPLv3
Please Star and Fork me.
Issues and pull requests are welcome.
20. Donate
Your donation makes acme.sh better:

PayPal/Alipay(ÊîØ‰ªòÂÆù)/Wechat(ÂæÆ‰ø°): https://donate.acme.sh/

Donate List
",acme shell script acmesh acme protocol client written purely shell unix shell language full acme protocol implementation support acme v acme v support acme v wildcard certs simple powerful easy use need minutes learn bash dash sh compatible simplest shell script lets encrypt free certificate client purely written shell dependencies python official lets encrypt client one script issue renew install certificates automatically require rootsudoer access docker friendly ipv support cron job notifications renewal error etc probably easiest smartest shell script automatically issue renew free certificates lets encrypt wiki httpsgithubcomneilpangacmeshwiki docker fans acmesh docker twitter neilpangxa freebsdorg rubychinaorg proxmox pfsense webfaction loadbalancerorg discourseorg centminmod splynx archlinux opnsenseorg centos web panel lnmporg tested os status platform ubuntu debian centos windows cygwin curl openssl crontab included freebsd pfsense opensuse alpine linux curl archlinux fedora kali linux oracle linux proxmox httpspveproxmoxcomwikihttpscertificateconfigurationletsencryptusingacmesh cloud linux httpsgithubcomneilpangleissues openbsd mageia openwrt tested working see wiki page sunossolaris gentoo linux mac osx build statuses check weekly build project httpsgithubcomneilpangacmetest supported ca letsencryptorg cadefault buypasscom ca pebble strict mode supported modes webroot mode standalone mode standalone tlsalpn mode apache mode nginx mode dns mode dns alias mode stateless mode install install online check project httpsgithubcomneilpanggetacmesh curl httpsgetacmesh sh wget httpsgetacmesh sh install git clone project launch installation git clone httpsgithubcomneilpangacmeshgit cd acmesh acmesh install dont root although recommended advanced installation httpsgithubcomneilpangacmeshwikihowtoinstall installer perform actions create copy acmesh home dir home acmesh certs placed folder create alias acmeshacmeshacmesh create daily cron job check renew certs needed cron entry example homeuseracmeshacmesh cron home homeuseracmesh devnull installation must close current terminal reopen make alias take effect ok ready issue certs show help message rootv acmesh h issue cert example single domain acmesh issue examplecom w homewwwrootexamplecom acmesh issue examplecom w homeusernamepublichtml acmesh issue examplecom w varwwwhtml example multiple domains cert acmesh issue examplecom wwwexamplecom cpexamplecom w homewwwrootexamplecom parameter homewwwrootexamplecom homeusernamepublichtml varwwwhtml web root folder host website files must write access folder second argument examplecom main domain want issue cert must least one domain must point bind domains webroot dir homewwwrootexamplecom certs placed acmeshexamplecom certs renewed automatically every days examples httpsgithubcomneilpangacmeshwikihowtoissueacert install cert apachenginx etc cert generated probably want installcopy cert apachenginx servers must use command copy certs target files use certs files acmesh folder internal use folder structure may change future apache example acmesh installcert examplecom certfile pathtocertfileinapachecertpem keyfile pathtokeyfileinapachekeypem fullchainfile pathtofullchaincertfileapachefullchainpem reloadcmd service apache forcereload nginx example acmesh installcert examplecom keyfile pathtokeyfileinnginxkeypem fullchainfile pathtofullchainnginxcertpem reloadcmd service nginx forcereload domain required parameters optional ownership permission info existing files preserved precreate files define ownership permission installcopy certkey production apache nginx path cert renewed every days default configurable cert renewed apachenginx service reloaded automatically command service apache forcereload service nginx forcereload please take care reloadcmd important cert automatically renewed without correct reloadcmd cert may flushed serverlike nginx apache website able show renewed cert days use standalone server issue cert requires rootsudoer permission listen port tcp port tcp must free listen otherwise prompted free try acmesh issue standalone examplecom wwwexamplecom cpexamplecom examples httpsgithubcomneilpangacmeshwikihowtoissueacert use standalone ssl server issue cert requires rootsudoer permission listen port tcp port tcp must free listen otherwise prompted free try acmesh issue alpn examplecom wwwexamplecom cpexamplecom examples httpsgithubcomneilpangacmeshwikihowtoissueacert use apache mode requires rootsudoer since required interact apache server running web server apache nginx recommended use webroot mode particularly running apache server use apache mode instead mode doesnt write files web root folder set string apache second argument force use apache plugin automatically acmesh issue apache examplecom wwwexamplecom cpexamplecom apache mode issue cert change apache config files need configure website config files use cert dont want mess apache server dont worry examples httpsgithubcomneilpangacmeshwikihowtoissueacert use nginx mode requires rootsudoer since required interact nginx server running web server apache nginx recommended use webroot mode particularly running nginx server use nginx mode instead mode doesnt write files web root folder set string nginx second argument configure nginx server automatically verify domain restore nginx config original version config changed acmesh issue nginx examplecom wwwexamplecom cpexamplecom nginx mode issue cert change nginx config files need configure website config files use cert dont want mess nginx server dont worry examples httpsgithubcomneilpangacmeshwikihowtoissueacert automatic dns api integration dns provider supports api access use api automatically issue certs dont anything manually currently acmesh supports dns providers httpsgithubcomneilpangacmeshwikidnsapi use dns manual mode see httpsgithubcomneilpangacmeshwikidnsmanualmode first dns provider doesnt support api access add txt record hand acmesh issue dns examplecom wwwexamplecom cpexamplecom get output like add following txt record domainacmechallengeexamplecom txt valueihdbjyftexayedsdbueutokbzwvtejunswdc add following txt record domainacmechallengewwwexamplecom txt valueihdbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx please add txt records domains waiting dns take effect rerun renew argument acmesh renew examplecom ok done take care dns manual mode renewed automatically add new txt record domain hand renew cert please use dns api mode instead issue ecc certificates lets encrypt issue ecdsa certificates support set keylength parameter prefix ec example single domain ecc certificate acmesh issue w homewwwrootexamplecom examplecom keylength ec san multi domain ecc certificate acmesh issue w homewwwrootexamplecom examplecom wwwexamplecom keylength ec please look keylength parameter valid values ec primev ecdsa p ec secpr ecdsa p ec secpr ecdsa p supported lets encrypt yet issue wildcard certificates simple give wildcard domain parameter acmesh issue examplecom examplecom dns dnscf renew certs dont need renew certs manually certs renewed automatically every days however also force renew cert acmesh renew examplecom force ecc cert acmesh renew examplecom force ecc stop cert renewal stop renewal cert execute following remove cert renewal list acmesh remove examplecom ecc certkey file removed disk remove respective directory eg acmeshexamplecom upgrade acmesh acmesh constant development strongly recommended use latest code update acmesh latest code acmesh upgrade also enable auto upgrade acmesh upgrade autoupgrade acmesh kept date automatically disable auto upgrade acmesh upgrade autoupgrade issue cert existing csr httpsgithubcomneilpangacmeshwikiissueacertfromexistingcsr send notifications cronjob httpsgithubcomneilpangacmeshwikinotify hood speak acme language using shell directly lets encrypt todo acknowledgments acmetiny httpsgithubcomdiafygiacmetiny acme protocol httpsgithubcomietfwgacmeacme contributors code contributors project exists thanks people contribute contribute financial contributors become financial contributor help us sustain community contribute individuals organizations support project organization logo show link website contribute license others license gplv please star fork issues pull requests welcome donate donation makes acmesh better paypalalipaywechat httpsdonateacmesh donate list,acm shell script acmesh acm protocol client written pure shell unix shell languag full acm protocol implement support acm v acm v support acm v wildcard cert simpl power easi use need minut learn bash dash sh compat simplest shell script let encrypt free certif client pure written shell depend python offici let encrypt client one script issu renew instal certif automat requir rootsudo access docker friendli ipv support cron job notif renew error etc probabl easiest smartest shell script automat issu renew free certif let encrypt wiki httpsgithubcomneilpangacmeshwiki docker fan acmesh docker twitter neilpangxa freebsdorg rubychinaorg proxmox pfsens webfact loadbalancerorg discourseorg centminmod splynx archlinux opnsenseorg cento web panel lnmporg test os statu platform ubuntu debian cento window cygwin curl openssl crontab includ freebsd pfsens opensus alpin linux curl archlinux fedora kali linux oracl linux proxmox httpspveproxmoxcomwikihttpscertificateconfigurationletsencryptusingacmesh cloud linux httpsgithubcomneilpangleissu openbsd mageia openwrt test work see wiki page sunossolari gentoo linux mac osx build status check weekli build project httpsgithubcomneilpangacmetest support ca letsencryptorg cadefault buypasscom ca pebbl strict mode support mode webroot mode standalon mode standalon tlsalpn mode apach mode nginx mode dn mode dn alia mode stateless mode instal instal onlin check project httpsgithubcomneilpanggetacmesh curl httpsgetacmesh sh wget httpsgetacmesh sh instal git clone project launch instal git clone httpsgithubcomneilpangacmeshgit cd acmesh acmesh instal dont root although recommend advanc instal httpsgithubcomneilpangacmeshwikihowtoinstal instal perform action creat copi acmesh home dir home acmesh cert place folder creat alia acmeshacmeshacmesh creat daili cron job check renew cert need cron entri exampl homeuseracmeshacmesh cron home homeuseracmesh devnul instal must close current termin reopen make alia take effect ok readi issu cert show help messag rootv acmesh h issu cert exampl singl domain acmesh issu examplecom w homewwwrootexamplecom acmesh issu examplecom w homeusernamepublichtml acmesh issu examplecom w varwwwhtml exampl multipl domain cert acmesh issu examplecom wwwexamplecom cpexamplecom w homewwwrootexamplecom paramet homewwwrootexamplecom homeusernamepublichtml varwwwhtml web root folder host websit file must write access folder second argument examplecom main domain want issu cert must least one domain must point bind domain webroot dir homewwwrootexamplecom cert place acmeshexamplecom cert renew automat everi day exampl httpsgithubcomneilpangacmeshwikihowtoissueacert instal cert apachenginx etc cert gener probabl want installcopi cert apachenginx server must use command copi cert target file use cert file acmesh folder intern use folder structur may chang futur apach exampl acmesh installcert examplecom certfil pathtocertfileinapachecertpem keyfil pathtokeyfileinapachekeypem fullchainfil pathtofullchaincertfileapachefullchainpem reloadcmd servic apach forcereload nginx exampl acmesh installcert examplecom keyfil pathtokeyfileinnginxkeypem fullchainfil pathtofullchainnginxcertpem reloadcmd servic nginx forcereload domain requir paramet option ownership permiss info exist file preserv precreat file defin ownership permiss installcopi certkey product apach nginx path cert renew everi day default configur cert renew apachenginx servic reload automat command servic apach forcereload servic nginx forcereload pleas take care reloadcmd import cert automat renew without correct reloadcmd cert may flush serverlik nginx apach websit abl show renew cert day use standalon server issu cert requir rootsudo permiss listen port tcp port tcp must free listen otherwis prompt free tri acmesh issu standalon examplecom wwwexamplecom cpexamplecom exampl httpsgithubcomneilpangacmeshwikihowtoissueacert use standalon ssl server issu cert requir rootsudo permiss listen port tcp port tcp must free listen otherwis prompt free tri acmesh issu alpn examplecom wwwexamplecom cpexamplecom exampl httpsgithubcomneilpangacmeshwikihowtoissueacert use apach mode requir rootsudo sinc requir interact apach server run web server apach nginx recommend use webroot mode particularli run apach server use apach mode instead mode doesnt write file web root folder set string apach second argument forc use apach plugin automat acmesh issu apach examplecom wwwexamplecom cpexamplecom apach mode issu cert chang apach config file need configur websit config file use cert dont want mess apach server dont worri exampl httpsgithubcomneilpangacmeshwikihowtoissueacert use nginx mode requir rootsudo sinc requir interact nginx server run web server apach nginx recommend use webroot mode particularli run nginx server use nginx mode instead mode doesnt write file web root folder set string nginx second argument configur nginx server automat verifi domain restor nginx config origin version config chang acmesh issu nginx examplecom wwwexamplecom cpexamplecom nginx mode issu cert chang nginx config file need configur websit config file use cert dont want mess nginx server dont worri exampl httpsgithubcomneilpangacmeshwikihowtoissueacert automat dn api integr dn provid support api access use api automat issu cert dont anyth manual current acmesh support dn provid httpsgithubcomneilpangacmeshwikidnsapi use dn manual mode see httpsgithubcomneilpangacmeshwikidnsmanualmod first dn provid doesnt support api access add txt record hand acmesh issu dn examplecom wwwexamplecom cpexamplecom get output like add follow txt record domainacmechallengeexamplecom txt valueihdbjyftexayedsdbueutokbzwvtejunswdc add follow txt record domainacmechallengewwwexamplecom txt valueihdbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx pleas add txt record domain wait dn take effect rerun renew argument acmesh renew examplecom ok done take care dn manual mode renew automat add new txt record domain hand renew cert pleas use dn api mode instead issu ecc certif let encrypt issu ecdsa certif support set keylength paramet prefix ec exampl singl domain ecc certif acmesh issu w homewwwrootexamplecom examplecom keylength ec san multi domain ecc certif acmesh issu w homewwwrootexamplecom examplecom wwwexamplecom keylength ec pleas look keylength paramet valid valu ec primev ecdsa p ec secpr ecdsa p ec secpr ecdsa p support let encrypt yet issu wildcard certif simpl give wildcard domain paramet acmesh issu examplecom examplecom dn dnscf renew cert dont need renew cert manual cert renew automat everi day howev also forc renew cert acmesh renew examplecom forc ecc cert acmesh renew examplecom forc ecc stop cert renew stop renew cert execut follow remov cert renew list acmesh remov examplecom ecc certkey file remov disk remov respect directori eg acmeshexamplecom upgrad acmesh acmesh constant develop strongli recommend use latest code updat acmesh latest code acmesh upgrad also enabl auto upgrad acmesh upgrad autoupgrad acmesh kept date automat disabl auto upgrad acmesh upgrad autoupgrad issu cert exist csr httpsgithubcomneilpangacmeshwikiissueacertfromexistingcsr send notif cronjob httpsgithubcomneilpangacmeshwikinotifi hood speak acm languag use shell directli let encrypt todo acknowledg acmetini httpsgithubcomdiafygiacmetini acm protocol httpsgithubcomietfwgacmeacm contributor code contributor project exist thank peopl contribut contribut financi contributor becom financi contributor help us sustain commun contribut individu organ support project organ logo show link websit contribut licens other licens gplv pleas star fork issu pull request welcom donat donat make acmesh better paypalalipaywechat httpsdonateacmesh donat list,acme shell script acmesh acme protocol client written purely shell unix shell language full acme protocol implementation support acme v acme v support acme v wildcard cert simple powerful easy use need minute learn bash dash sh compatible simplest shell script let encrypt free certificate client purely written shell dependency python official let encrypt client one script issue renew install certificate automatically require rootsudoer access docker friendly ipv support cron job notification renewal error etc probably easiest smartest shell script automatically issue renew free certificate let encrypt wiki httpsgithubcomneilpangacmeshwiki docker fan acmesh docker twitter neilpangxa freebsdorg rubychinaorg proxmox pfsense webfaction loadbalancerorg discourseorg centminmod splynx archlinux opnsenseorg centos web panel lnmporg tested o status platform ubuntu debian centos window cygwin curl openssl crontab included freebsd pfsense opensuse alpine linux curl archlinux fedora kali linux oracle linux proxmox httpspveproxmoxcomwikihttpscertificateconfigurationletsencryptusingacmesh cloud linux httpsgithubcomneilpangleissues openbsd mageia openwrt tested working see wiki page sunossolaris gentoo linux mac osx build status check weekly build project httpsgithubcomneilpangacmetest supported ca letsencryptorg cadefault buypasscom ca pebble strict mode supported mode webroot mode standalone mode standalone tlsalpn mode apache mode nginx mode dns mode dns alias mode stateless mode install install online check project httpsgithubcomneilpanggetacmesh curl httpsgetacmesh sh wget httpsgetacmesh sh install git clone project launch installation git clone httpsgithubcomneilpangacmeshgit cd acmesh acmesh install dont root although recommended advanced installation httpsgithubcomneilpangacmeshwikihowtoinstall installer perform action create copy acmesh home dir home acmesh cert placed folder create alias acmeshacmeshacmesh create daily cron job check renew cert needed cron entry example homeuseracmeshacmesh cron home homeuseracmesh devnull installation must close current terminal reopen make alias take effect ok ready issue cert show help message rootv acmesh h issue cert example single domain acmesh issue examplecom w homewwwrootexamplecom acmesh issue examplecom w homeusernamepublichtml acmesh issue examplecom w varwwwhtml example multiple domain cert acmesh issue examplecom wwwexamplecom cpexamplecom w homewwwrootexamplecom parameter homewwwrootexamplecom homeusernamepublichtml varwwwhtml web root folder host website file must write access folder second argument examplecom main domain want issue cert must least one domain must point bind domain webroot dir homewwwrootexamplecom cert placed acmeshexamplecom cert renewed automatically every day example httpsgithubcomneilpangacmeshwikihowtoissueacert install cert apachenginx etc cert generated probably want installcopy cert apachenginx server must use command copy cert target file use cert file acmesh folder internal use folder structure may change future apache example acmesh installcert examplecom certfile pathtocertfileinapachecertpem keyfile pathtokeyfileinapachekeypem fullchainfile pathtofullchaincertfileapachefullchainpem reloadcmd service apache forcereload nginx example acmesh installcert examplecom keyfile pathtokeyfileinnginxkeypem fullchainfile pathtofullchainnginxcertpem reloadcmd service nginx forcereload domain required parameter optional ownership permission info existing file preserved precreate file define ownership permission installcopy certkey production apache nginx path cert renewed every day default configurable cert renewed apachenginx service reloaded automatically command service apache forcereload service nginx forcereload please take care reloadcmd important cert automatically renewed without correct reloadcmd cert may flushed serverlike nginx apache website able show renewed cert day use standalone server issue cert requires rootsudoer permission listen port tcp port tcp must free listen otherwise prompted free try acmesh issue standalone examplecom wwwexamplecom cpexamplecom example httpsgithubcomneilpangacmeshwikihowtoissueacert use standalone ssl server issue cert requires rootsudoer permission listen port tcp port tcp must free listen otherwise prompted free try acmesh issue alpn examplecom wwwexamplecom cpexamplecom example httpsgithubcomneilpangacmeshwikihowtoissueacert use apache mode requires rootsudoer since required interact apache server running web server apache nginx recommended use webroot mode particularly running apache server use apache mode instead mode doesnt write file web root folder set string apache second argument force use apache plugin automatically acmesh issue apache examplecom wwwexamplecom cpexamplecom apache mode issue cert change apache config file need configure website config file use cert dont want mess apache server dont worry example httpsgithubcomneilpangacmeshwikihowtoissueacert use nginx mode requires rootsudoer since required interact nginx server running web server apache nginx recommended use webroot mode particularly running nginx server use nginx mode instead mode doesnt write file web root folder set string nginx second argument configure nginx server automatically verify domain restore nginx config original version config changed acmesh issue nginx examplecom wwwexamplecom cpexamplecom nginx mode issue cert change nginx config file need configure website config file use cert dont want mess nginx server dont worry example httpsgithubcomneilpangacmeshwikihowtoissueacert automatic dns api integration dns provider support api access use api automatically issue cert dont anything manually currently acmesh support dns provider httpsgithubcomneilpangacmeshwikidnsapi use dns manual mode see httpsgithubcomneilpangacmeshwikidnsmanualmode first dns provider doesnt support api access add txt record hand acmesh issue dns examplecom wwwexamplecom cpexamplecom get output like add following txt record domainacmechallengeexamplecom txt valueihdbjyftexayedsdbueutokbzwvtejunswdc add following txt record domainacmechallengewwwexamplecom txt valueihdbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx please add txt record domain waiting dns take effect rerun renew argument acmesh renew examplecom ok done take care dns manual mode renewed automatically add new txt record domain hand renew cert please use dns api mode instead issue ecc certificate let encrypt issue ecdsa certificate support set keylength parameter prefix ec example single domain ecc certificate acmesh issue w homewwwrootexamplecom examplecom keylength ec san multi domain ecc certificate acmesh issue w homewwwrootexamplecom examplecom wwwexamplecom keylength ec please look keylength parameter valid value ec primev ecdsa p ec secpr ecdsa p ec secpr ecdsa p supported let encrypt yet issue wildcard certificate simple give wildcard domain parameter acmesh issue examplecom examplecom dns dnscf renew cert dont need renew cert manually cert renewed automatically every day however also force renew cert acmesh renew examplecom force ecc cert acmesh renew examplecom force ecc stop cert renewal stop renewal cert execute following remove cert renewal list acmesh remove examplecom ecc certkey file removed disk remove respective directory eg acmeshexamplecom upgrade acmesh acmesh constant development strongly recommended use latest code update acmesh latest code acmesh upgrade also enable auto upgrade acmesh upgrade autoupgrade acmesh kept date automatically disable auto upgrade acmesh upgrade autoupgrade issue cert existing csr httpsgithubcomneilpangacmeshwikiissueacertfromexistingcsr send notification cronjob httpsgithubcomneilpangacmeshwikinotify hood speak acme language using shell directly let encrypt todo acknowledgment acmetiny httpsgithubcomdiafygiacmetiny acme protocol httpsgithubcomietfwgacmeacme contributor code contributor project exists thanks people contribute contribute financial contributor become financial contributor help u sustain community contribute individual organization support project organization logo show link website contribute license others license gplv please star fork issue pull request welcome donate donation make acmesh better paypalalipaywechat httpsdonateacmesh donate list
74,Shell,"GitHub - mbadolato/iTerm2-Color-Schemes: Over 200 terminal color schemes/themes for iTerm/iTerm2. Includes ports to Terminal, Konsole, PuTTY, Xresources, XRDB, Remmina, Termite, XFCE, Tilda, FreeBSD VT, Terminator, Kitty, MobaXterm, LXTerminal, Microsoft's Windows Terminal, Visual Studio","iTerm Color Schemes

Intro
Installation Instructions
Contribute
Screenshots
Credits
Extra

X11 Installation
Konsole color schemes
Terminator color schemes
Mac OS Terminal color schemes
PuTTY color schemes
Xfce Terminal color schemes
FreeBSD vt(4) color schemes
Previewing color schemes
MobaXterm color schemes
LXTerminal color schemes



Intro
This is a set of color schemes for iTerm (aka iTerm2). It also includes ports to Terminal, Konsole, PuTTY, Xresources, XRDB, Remmina, Termite, XFCE, Tilda, FreeBSD VT, Terminator, Kitty, MobaXterm, LXTerminal, Microsoft's Windows Terminal, Visual Studio
Screenshots below and in the screenshots directory.
Installation Instructions
There are 2 ways to install an iTerm theme (both go to the same configuration location):


Direct way via keyboard shortcut:

Launch iTerm 2. Get the latest version at iterm2.com
Type CMD+i (‚åò+i)
Navigate to Colors tab
Click on Color Presets
Click on Import
Click on the schemes folder
Select the .itermcolors profiles you would like to import
Click on Color Presets and choose a color scheme



Via iTerm preferences

Launch iTerm 2. Get the latest version at iterm2.com
Click on iTerm2 menu title
Select Preferences... option
Select Profiles
Navigate to Colors tab
Click on Color Presets
Click on Import
Select the .itermcolors file(s) of the schemes you'd like to use
Click on Color Presets and choose a color scheme



Contribute
Have a great iTerm theme? Send it to me via a Pull Request! To export your theme settings:

Launch iTerm 2
Type CMD+i (‚åò+i)
Navigate to Colors tab
Click on Color Presets
Click on Export
Save the .itermcolors file

To include a screenshot, please generate the output using the screenshotTable.sh script in the tools directory.
For screenshot consistency, please have your font set to 13pt Monaco and no transparency on the window
It would also be very helpful if you cd tools/ and run python3 update_all.py to generate all formats of your scheme
Screenshots
3024 Day

3024 Night

AdventureTime

Afterglow

AlienBlood

Andromeda

Argonaut

Arthur

AtelierSulphurpool

Atom

Atom One Light

ayu

ayu Light

Batman

Belafonte Day

Belafonte Night

BirdsOfParadise

Blazer

Bluloco Dark

Bluloco Light

Borland

Breeze

Bright Lights

Broadcast

Brogrammer

Builtin Dark

Builtin Light

Builtin Pastel Dark

Builtin Solarized Dark

Builtin Solarized Light

Builtin Tango Dark

Builtin Tango Light

C64

Calamity

Chalk

Chalkboard

ChallengerDeep

Chester

Ciapre

CLRS

Cobalt Neon

Cobalt2

CrayonPonyFish

Cyberpunk

Dark Pastel

Dark+

Darkside

Deep

Desert

DimmedMonokai

DotGov

Dracula

Duotone Dark

Earthsong

Elemental

Elementary

ENCOM

Espresso

Espresso Libre

Fahrenheit

Fideloper

FirefoxDev

Firewatch

FishTank

Flat

Flatland

Floraverse

Forest Blue

Framer

FrontEndDelight

FunForrest

Galaxy

Github

Glacier

Grape

Grass

Gruvbox Dark

Hacktober

Hardcore

Harper

Highway

Hipster Green

Hivacruz

Homebrew

Hopscotch

Hopscotch 256

Hurtado

Hybrid

IC_Green_PPL

IC_Orange_PPL

IDEA Drak

idleToes

IR_Black

Jackie Brown

Japanesque

Jellybeans

JetBrains Darcula

Kibble

Kolorit

Lab Fox

Later This Evening

Lavandula

LiquidCarbon

LiquidCarbonTransparent

LiquidCarbonTransparentInverse

LoveLace

Man Page

Material

MaterialDark

MaterialOcean

Mathias

Medallion

Midnight In Mojave

Misterioso

Molokai

MonaLisa

Monokai Remastered

Monokai Soda

Monokai Vivid

N0tch2k

Neopolitan

Neutron

NightLion v1

NightLion v2

Night Owlish Light

Novel

Nocturnal Winter

Obsidian

Ocean

OceanicMaterial

Ollie

One Half Dark

One Half Light

Operator Mono Dark

Pandora

Parasio Dark

PaulMillr

Pencil Dark

Pencil Light

Piatto Light

Pnevma

Primary

Pro

Pro Light

Purple Peter

Purple Rain

Rebecca

Red Alert

Red Planet

Red Sands

Relaxed

Rippedcasts

Royal

Ryuuko

Seafoam Pastel

SeaShells

Seti

Shaman

Shades-Of-Purple

Slate

SleepyHollow

Snazzy

Smyck

SoftServer

Solarized Darcula (With background image)

Solarized Darcula (Without background image)

Solarized Dark - Patched
Some applications assume the ANSI color code 8 is a gray color. Solarized treats
this code as equal to the background. This theme is for people who prefer the
former. See issues #59, #62, and #63 for
more information.

Solarized Dark Higher Contrast

SpaceGray

SpaceGray Eighties

SpaceGray Eighties Dull

Spacedust

Spiderman

Spring

Square

Subliminal

Sundried

Symfonic

synthwave

Tango Adapted

Tango Half Adapted

Teerb

Terminal Basic

Thayer Bright

The Hulk

Tomorrow

Tomorrow Night

Tomorrow Night Blue

Tomorrow Night Bright

Tomorrow Night Eighties

Tomorrow Night Burns

ToyChest

Treehouse

Twilight

Ubuntu

UltraViolent

Under The Sea

Unikitty

Urple

Vaughn

VibrantInk

Violet Light

Violet Dark

WarmNeon

Wez

Whimsy

WildCherry

Wombat

Wryan

Zenburn

Credits
The schemes Novel, Espresso, Grass, Homebrew, Ocean, Pro, Man Page, Red Sands, and Terminal Basic are ports of the schemes of the same name included with the Mac Terminal application. All of Terminal's schemes have now been ported, with the exception of ""Solid Colors"" (random backgrounds, which iTerm doesn't support) and ""Aerogel"" (which is hideous).
The scheme Violet was created by ashfinal.
The scheme idleToes was inspired by the idleFingers TextMate theme and suggested for inclusion by Seth Wilson.
The scheme Zenburn was inspired by the Zenburn version created by Suraj N. Kurapati.
The scheme Symfonic was inspired by the color scheme used in the documentation for the Symfony PHP Framework.
The synthwave theme was created by brettstil
The scheme Github was inspired by the color theme palette used at Github for their UI and in some of their mascot images.
The scheme Solarized Darcula was inspired by the color theme created by @rickhanlonii. There are two screenshots below; one with a background and one without. The background image is included in the backgrounds/ directory and the image must be manually set on the profile's Preferences->Window tab. It's hard to see from the screenshot, but it looks great!
The theme Hurtado was found here.
The theme Molokai was based on the vim colorscheme of the same name.
The theme Monokai Soda was found here.
The theme Monokai Vivid was created by vitalymak.
The theme Neopolitan was created by daytonn
The theme Subliminal was created by gdsrosa
The themes Solarized Dark and Solarized Light come from the official Solarized web site
The Obsidian theme was on my hard drive and I don't recall where it came from. If anyone knows, ping me and I'll link back to the author(s).
The Spacedust theme was created by mhallendal and ported to iTerm by Couto
The theme Mathias was created by mathiasbynens
The LiquidCarbon themes were created by markcho
The NightLion themes were created by Curvve Media
The Tomorrow themes were created by chriskempson
The Tomorrow Night Burns theme were created by ashwinv11
The Twilight theme was created by stefri
The Teerb theme was created by Teerb
The IR_Black theme was found here
The Misterioso theme was created by flooose
The Hybrid theme was found here
The Thayer Bright theme was found here
The Shades Of Purple theme was found here and ported by fr3fou
The Spring theme was found here
The Smyck theme was found here
The Forest Blue theme was found here
The Cobalt2 theme was created by wesbos
The Operator Mono Dark was ported from vharadkou by dreamyguy
The WarmNeon theme was ported from PyCharm by firewut
The SpaceGray theme was created by ryentzer
The Jellybeans theme was created by qtpi
The PaulMillr theme was created by paulmillr and ported to iTerm by me
The Harper theme was created by idleberg
The CLRS theme was created by jasonlong
The Dracula theme was created by zenorocha
The themes AdventureTime, AlienBlood, BirdsOfParadise, Ciapre, CrayonPonyFish, DimmedMonokai, Earthsong, Elemental, FishTank, FrontEndDelight, FunForrest, Grape, Highway, IC_Green_PPL, IC_Orange_PPL, Lavandula, Medallion, MonaLisa, Ollie, Royal, SeaShells, Shaman, SleepyHollow, SoftServer, Sundried, ToyChest, Treehouse, and Urple were created by zdj
The Japanesque theme was created by aereal
The Seti theme was created by jesseweed and ported to iTerm2 by philduffy and slightly modified to make the ANSI blacks have a little more contrast
The Hipster Green and Jackie Brown themes were created by Unkulunkulu
The Chalk theme was created by achalv
The Pencil Dark and Pencil Light themes were created by mattly
The Flat theme was created by ahmetsulek
The Atom, Brogrammer, Glacier and Darkside themes were created by bahlo
The Afterglow theme was created by yabatadesign
The Broadcast theme was created by vinkla
The Arthur, N0tch2k, Pnevma, Square, and Wryan themes were created by baskerville
The Belafonte Day, Belafonte Night, Paraiso Dark, and C64 themes were created by idleberg
The 3024 Day and 3024 Night themes were created by 0x3024
The Argonaut theme was created by effkay
The Espresso Libre theme was created by jurgemaister
The Hardcore theme was created by hardcore
The Rippedcasts theme was created by mdw123
The Solorized Dark Higher Contrast theme was created by heisters
The VibrantInk theme was created by asanghi
The Wez theme was created by wez
The Wombat theme was created by djoyner
The WildCherry theme was created by mashaal
The Flatland theme was created by realchaseadams
The Neutron theme was created by Ch4s3
The Fideloper theme was inspired by Fideloper
The Later This Evening theme was created by vilhalmer
The Galaxy theme was created by jglovier
The Slate theme was created by deneshshan
The SpaceGray Eighties and SpaceGray Eighties Dull themes were created by mhkeller
The Borland theme was created by delip
The Cobalt Neon theme was created by vazquez
The AtelierSulphurpool theme was created by atelierbram
The Batman, Spiderman, and The Hulk themes were created by pyrophos
The ENCOM theme was created by Josh Braun
The Floraverse theme was created by papayakitty
The Material and MaterialDark themes were created by stoeffel
The OceanicMaterial theme was created by rahulpatel
The MaterialOcean theme was found here and was ported by fr3fou
The AtomOneLight theme was created by iamstarkov
The Piatto Light theme was created by kovv
The DotGov theme was inspired by the color palette used in the U.S. Web Design Standards
The DuoTone Dark theme was created by chibicode based on simurai's duotone-dark Atom theme.
The JetBrains Darcula theme was created by vitstr
The Bright Lights theme was created by tw15egan
The Ubuntu theme was inspired by default Ubuntu's console colors. Created by Maximus and ported to iTerm2 by stepin.
The Under The Sea theme was created by peterpme
The One Half themes were created by sonph, based on Atom's One with some tweakings.
The FirefoxDev theme was created by Or3stis
The Ryuuko theme was created by dylanaraps and added by iandrewt
The Firewatch theme was created by Sebastian Szturo as an atom syntax theme and ported to an iTerm scheme by Ben Styles. It was originally inspired by the Firewatch game.
The Pandora theme was created by milosmatic
The Elementary OS  theme was created by elementary.io and added by 987poiuytrewq
The Gruvbox Dark  theme was created by morhetz and added by mcchrish
The Ayu and Ayu Light  themes were created by alebcay
The Deep  theme was created by ADoyle
The Red Planet theme was created by ibrokemypie based on eliquious's Red Planet Sublime Text theme.
The Tango Adapted theme and its slightly less bright counterpart Tango Half Adapted were created by crowsonkb, based on iTerm2's Tango Light theme.
The Pro Light theme was adapted from the Pro theme by crowsonkb using her iterm_schemer tool.
The Fahrenheit theme was created by jonascarpay based on fcpg's vim-fahrenheit Vim theme.
The Calamity theme was created by Pustur
The Purple Peter theme was created by DeChamp
The Purple Rain theme was created by msorre2
The ChallengerDeep theme was found here and ported to iTerm by eendroroy
The Hopscotch theme was created by Jan T. Sott
The Hivacruz theme was created by Yann Defretin
The Nocturnal Winter theme was created by Shriram Balaji
The Rebecca theme was created vic based on his emacs rebecca-theme
The Whimsy theme was created by Rod
The Chester theme was created by KH
The Kolorit theme was created by thomaspaulmann
The Cyberpunk theme was created by Murderlon
The LoveLace theme was created by nalanbar based on a dotfile from elenapan
The Framer theme was created by markogresak based on Framer Syntax Theme provided by Framer.
The Lab Fox theme was created by theatlasroom inspired by the Gitlab design system
The Unikitty theme was created by jakebathman
The Primary theme was created by jayanthkoushik based on Google's vim colorscheme.
The Andromeda theme was created by memije based on EliverLara's Andromeda VS Code theme.
The Night Owlish Light theme was created by praveenpuglia based on sdras's Night Owl VS Code theme.
The Midnight In Mojave theme was created by OberstKrueger based on the colors outlined in the Human Interface Guidelines
The Breeze theme was based on the Breeze color scheme by KDE and ported to iTerm by nieltg
If there are other color schemes you'd like to see included, drop me a line!
Extra
X11 Installation
To install under the X Window System:


Import the .xrdb file of the scheme you'd like to use:
  #include ""/home/mbadolato/iTerm2-Color-Schemes/xrdb/Blazer.xrdb""



Use the #defines provided by the imported .xrdb file:
  Rxvt*color0:       Ansi_0_Color
  Rxvt*color1:       Ansi_1_Color
  Rxvt*color2:       Ansi_2_Color
  Rxvt*color3:       Ansi_3_Color
  Rxvt*color4:       Ansi_4_Color
  Rxvt*color5:       Ansi_5_Color
  Rxvt*color6:       Ansi_6_Color
  Rxvt*color7:       Ansi_7_Color
  Rxvt*color8:       Ansi_8_Color
  Rxvt*color9:       Ansi_9_Color
  Rxvt*color10:      Ansi_10_Color
  Rxvt*color11:      Ansi_11_Color
  Rxvt*color12:      Ansi_12_Color
  Rxvt*color13:      Ansi_13_Color
  Rxvt*color14:      Ansi_14_Color
  Rxvt*color15:      Ansi_15_Color
  Rxvt*colorBD:      Bold_Color
  Rxvt*colorIT:      Italic_Color
  Rxvt*colorUL:      Underline_Color
  Rxvt*foreground:   Foreground_Color
  Rxvt*background:   Background_Color
  Rxvt*cursorColor:  Cursor_Color

  XTerm*color0:      Ansi_0_Color
  XTerm*color1:      Ansi_1_Color
  XTerm*color2:      Ansi_2_Color
  XTerm*color3:      Ansi_3_Color
  XTerm*color4:      Ansi_4_Color
  XTerm*color5:      Ansi_5_Color
  XTerm*color6:      Ansi_6_Color
  XTerm*color7:      Ansi_7_Color
  XTerm*color8:      Ansi_8_Color
  XTerm*color9:      Ansi_9_Color
  XTerm*color10:     Ansi_10_Color
  XTerm*color11:     Ansi_11_Color
  XTerm*color12:     Ansi_12_Color
  XTerm*color13:     Ansi_13_Color
  XTerm*color14:     Ansi_14_Color
  XTerm*color15:     Ansi_15_Color
  XTerm*colorBD:     Bold_Color
  XTerm*colorIT:     Italic_Color
  XTerm*colorUL:     Underline_Color
  XTerm*foreground:  Foreground_Color
  XTerm*background:  Background_Color
  XTerm*cursorColor: Cursor_Color



Store the above snippets in a file and pass it in:
  $ xrdb -merge YOUR_FILE_CONTAINING_ABOVE_SNIPPETS



Open new XTerm or Rxvt windows to see the changes.


Adapt this procedure to other terminals as needed.


Terminator color schemes
Edit your Terminator configuration file (located in: $HOME/.config/terminator/config) and add the configurations for the theme(s) you'd like to use the [profiles] section. The terminator/ directory contains the config snippets you'll need. Just paste the configurations into the [profiles] sections, and you're good to go!
At a minimum, this is all you need. You can customize the fonts and other aspects as well, if you wish. See the Terminator documentation for more details.
An example config file that includes the code snippet for the Symfonic theme would look like this:
[global_config]
    [keybindings]
    [profiles]
      [[default]]
        palette = ""#1a1a1a:#f4005f:#98e024:#fa8419:#9d65ff:#f4005f:#58d1eb:#c4c5b5:#625e4c:#f4005f:#98e024:#e0d561:#9d65ff:#f4005f:#58d1eb:#f6f6ef""
        background_image = None
        use_system_font = False
        cursor_color = ""#f6f7ec""
        foreground_color = ""#c4c5b5""
        font = Source Code Pro Light 11
        background_color = ""#1a1a1a""
      [[Symfonic]]
        palette = ""#000000:#dc322f:#56db3a:#ff8400:#0084d4:#b729d9:#ccccff:#ffffff:#1b1d21:#dc322f:#56db3a:#ff8400:#0084d4:#b729d9:#ccccff:#ffffff""
        background_color = ""#000000""
        cursor_color = ""#dc322f""
        foreground_color = ""#ffffff""
        background_image = None
    [layouts]
      [[default]]
        [[[child1]]]
          type = Terminal
          parent = window0
        [[[window0]]]
          type = Window
          parent = """"
    [plugins]
Konsole color schemes
Copy the themes from the konsole directory to $HOME/.config/konsole (in some versions of KDE, the theme directory may be located at $HOME/.local/share/konsole), restart Konsole and choose your new theme from the profile preferences window.
If you want to make the themes available to all users, copy the .colorscheme files to /usr/share/konsole.
Terminal color schemes
Just double click on selected theme in terminal directory
PuTTY color schemes
New Session Method
This method creates a new blank session with JUST colors set properly.
Download the appropriate colorscheme.reg file and import the registry changes by right-clicking and choosing Merge. Choose ""Yes"" when prompted if you're sure. Color scheme will show up as a new PuTTY session with all defaults except entries at Window > Colours > Adjust the precise colours PuTTY displays.
Modify Session Method
This method modifies an existing session and changes JUST the color settings.
Download the appropriate colorscheme.reg file. Open the file with a text editor and change the color scheme portion (Molokai below) to match the session you want to modify:
[HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\Molokai]
- CHANGE TO (EXAMPLE) -
[HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\root@localhost]

NOTE: Some special characters will need to be changed to their Percent-encoded representation (IE, Space as %20). To quickly find the right session name view the top-level entries at HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\ with regedit.exe.
Other PuTTY Recommendations
Window > Apprearance
	Font: Consolas, bold, 14-point
	Font quality:
		( ) Antialiased     ( ) Non-Antialiased
		(O) ClearType       ( ) Default
Window > Colours
	[X] Allow terminal to specify ANSI colours
	[X] Allow terminal to use xterm 256-colour mode
	Indicate bolded text by changing:
		( ) The font   (O) The colour   ( ) Both
	[ ] Attempt to use logical palettes
	[ ] Use system colours

Xfce Terminal color schemes
Copy the colorschemes folder to ~/.local/share/xfce4/terminal/ and restart Terminal.
FreeBSD vt color schemes
Append your favourite theme from freebsd_vt/ to /boot/loader.conf
or /boot/loader.conf.local and reboot.
MobaXterm color schemes
Copy the theme content form mobaxterm/ and paste the content to your MobaXterm.ini in the corresponding place. ([Colors])
LXTerminal color schemes
Copy the theme content form lxterminal/ and paste the content to your lxterminal in the corresponding place. ([general])
Visual Studio Code (vscode) color schemes
Copy the theme content into your UserSettings.json
Previewing color schemes
preview.rb is a simple script that allows you to preview
the color schemes without having to import them. It parses .itermcolors files
and applies the colors to the current session using iTerm's proprietary
escape codes. As noted in
the linked page, it doesn't run on tmux or screen.
# Apply AdventureTime scheme to the current session
tools/preview.rb schemes/AdventureTime.itermcolors

# Apply the schemes in turn.
# - Press (almost) any key to advance; hit CTRL-C or ESC to stop
# - Press the delete key to go back
tools/preview.rb schemes/*

iTerm Color Schemes | iTerm2 Color Schemes | iTerm 2 Color Schemes | iTerm Themes | iTerm2 Themes | iTerm 2 Themes

",iterm color schemes intro installation instructions contribute screenshots credits extra x installation konsole color schemes terminator color schemes mac os terminal color schemes putty color schemes xfce terminal color schemes freebsd vt color schemes previewing color schemes mobaxterm color schemes lxterminal color schemes intro set color schemes iterm aka iterm also includes ports terminal konsole putty xresources xrdb remmina termite xfce tilda freebsd vt terminator kitty mobaxterm lxterminal microsofts windows terminal visual studio screenshots screenshots directory installation instructions ways install iterm theme go configuration location direct way via keyboard shortcut launch iterm get latest version itermcom type cmdi navigate colors tab click color presets click import click schemes folder select itermcolors profiles would like import click color presets choose color scheme via iterm preferences launch iterm get latest version itermcom click iterm menu title select preferences option select profiles navigate colors tab click color presets click import select itermcolors files schemes youd like use click color presets choose color scheme contribute great iterm theme send via pull request export theme settings launch iterm type cmdi navigate colors tab click color presets click export save itermcolors file include screenshot please generate output using screenshottablesh script tools directory screenshot consistency please font set pt monaco transparency window would also helpful cd tools run python updateallpy generate formats scheme screenshots day night adventuretime afterglow alienblood andromeda argonaut arthur ateliersulphurpool atom atom one light ayu ayu light batman belafonte day belafonte night birdsofparadise blazer bluloco dark bluloco light borland breeze bright lights broadcast brogrammer builtin dark builtin light builtin pastel dark builtin solarized dark builtin solarized light builtin tango dark builtin tango light c calamity chalk chalkboard challengerdeep chester ciapre clrs cobalt neon cobalt crayonponyfish cyberpunk dark pastel dark darkside deep desert dimmedmonokai dotgov dracula duotone dark earthsong elemental elementary encom espresso espresso libre fahrenheit fideloper firefoxdev firewatch fishtank flat flatland floraverse forest blue framer frontenddelight funforrest galaxy github glacier grape grass gruvbox dark hacktober hardcore harper highway hipster green hivacruz homebrew hopscotch hopscotch hurtado hybrid icgreenppl icorangeppl idea drak idletoes irblack jackie brown japanesque jellybeans jetbrains darcula kibble kolorit lab fox later evening lavandula liquidcarbon liquidcarbontransparent liquidcarbontransparentinverse lovelace man page material materialdark materialocean mathias medallion midnight mojave misterioso molokai monalisa monokai remastered monokai soda monokai vivid ntchk neopolitan neutron nightlion v nightlion v night owlish light novel nocturnal winter obsidian ocean oceanicmaterial ollie one half dark one half light operator mono dark pandora parasio dark paulmillr pencil dark pencil light piatto light pnevma primary pro pro light purple peter purple rain rebecca red alert red planet red sands relaxed rippedcasts royal ryuuko seafoam pastel seashells seti shaman shadesofpurple slate sleepyhollow snazzy smyck softserver solarized darcula background image solarized darcula without background image solarized dark patched applications assume ansi color code gray color solarized treats code equal background theme people prefer former see issues information solarized dark higher contrast spacegray spacegray eighties spacegray eighties dull spacedust spiderman spring square subliminal sundried symfonic synthwave tango adapted tango half adapted teerb terminal basic thayer bright hulk tomorrow tomorrow night tomorrow night blue tomorrow night bright tomorrow night eighties tomorrow night burns toychest treehouse twilight ubuntu ultraviolent sea unikitty urple vaughn vibrantink violet light violet dark warmneon wez whimsy wildcherry wombat wryan zenburn credits schemes novel espresso grass homebrew ocean pro man page red sands terminal basic ports schemes name included mac terminal application terminals schemes ported exception solid colors random backgrounds iterm doesnt support aerogel hideous scheme violet created ashfinal scheme idletoes inspired idlefingers textmate theme suggested inclusion seth wilson scheme zenburn inspired zenburn version created suraj n kurapati scheme symfonic inspired color scheme used documentation symfony php framework synthwave theme created brettstil scheme github inspired color theme palette used github ui mascot images scheme solarized darcula inspired color theme created rickhanlonii two screenshots one background one without background image included backgrounds directory image must manually set profiles preferenceswindow tab hard see screenshot looks great theme hurtado found theme molokai based vim colorscheme name theme monokai soda found theme monokai vivid created vitalymak theme neopolitan created daytonn theme subliminal created gdsrosa themes solarized dark solarized light come official solarized web site obsidian theme hard drive dont recall came anyone knows ping ill link back authors spacedust theme created mhallendal ported iterm couto theme mathias created mathiasbynens liquidcarbon themes created markcho nightlion themes created curvve media tomorrow themes created chriskempson tomorrow night burns theme created ashwinv twilight theme created stefri teerb theme created teerb irblack theme found misterioso theme created flooose hybrid theme found thayer bright theme found shades purple theme found ported frfou spring theme found smyck theme found forest blue theme found cobalt theme created wesbos operator mono dark ported vharadkou dreamyguy warmneon theme ported pycharm firewut spacegray theme created ryentzer jellybeans theme created qtpi paulmillr theme created paulmillr ported iterm harper theme created idleberg clrs theme created jasonlong dracula theme created zenorocha themes adventuretime alienblood birdsofparadise ciapre crayonponyfish dimmedmonokai earthsong elemental fishtank frontenddelight funforrest grape highway icgreenppl icorangeppl lavandula medallion monalisa ollie royal seashells shaman sleepyhollow softserver sundried toychest treehouse urple created zdj japanesque theme created aereal seti theme created jesseweed ported iterm philduffy slightly modified make ansi blacks little contrast hipster green jackie brown themes created unkulunkulu chalk theme created achalv pencil dark pencil light themes created mattly flat theme created ahmetsulek atom brogrammer glacier darkside themes created bahlo afterglow theme created yabatadesign broadcast theme created vinkla arthur ntchk pnevma square wryan themes created baskerville belafonte day belafonte night paraiso dark c themes created idleberg day night themes created x argonaut theme created effkay espresso libre theme created jurgemaister hardcore theme created hardcore rippedcasts theme created mdw solorized dark higher contrast theme created heisters vibrantink theme created asanghi wez theme created wez wombat theme created djoyner wildcherry theme created mashaal flatland theme created realchaseadams neutron theme created chs fideloper theme inspired fideloper later evening theme created vilhalmer galaxy theme created jglovier slate theme created deneshshan spacegray eighties spacegray eighties dull themes created mhkeller borland theme created delip cobalt neon theme created vazquez ateliersulphurpool theme created atelierbram batman spiderman hulk themes created pyrophos encom theme created josh braun floraverse theme created papayakitty material materialdark themes created stoeffel oceanicmaterial theme created rahulpatel materialocean theme found ported frfou atomonelight theme created iamstarkov piatto light theme created kovv dotgov theme inspired color palette used us web design standards duotone dark theme created chibicode based simurais duotonedark atom theme jetbrains darcula theme created vitstr bright lights theme created twegan ubuntu theme inspired default ubuntus console colors created maximus ported iterm stepin sea theme created peterpme one half themes created sonph based atoms one tweakings firefoxdev theme created orstis ryuuko theme created dylanaraps added iandrewt firewatch theme created sebastian szturo atom syntax theme ported iterm scheme ben styles originally inspired firewatch game pandora theme created milosmatic elementary os theme created elementaryio added poiuytrewq gruvbox dark theme created morhetz added mcchrish ayu ayu light themes created alebcay deep theme created adoyle red planet theme created ibrokemypie based eliquiouss red planet sublime text theme tango adapted theme slightly less bright counterpart tango half adapted created crowsonkb based iterms tango light theme pro light theme adapted pro theme crowsonkb using itermschemer tool fahrenheit theme created jonascarpay based fcpgs vimfahrenheit vim theme calamity theme created pustur purple peter theme created dechamp purple rain theme created msorre challengerdeep theme found ported iterm eendroroy hopscotch theme created jan sott hivacruz theme created yann defretin nocturnal winter theme created shriram balaji rebecca theme created vic based emacs rebeccatheme whimsy theme created rod chester theme created kh kolorit theme created thomaspaulmann cyberpunk theme created murderlon lovelace theme created nalanbar based dotfile elenapan framer theme created markogresak based framer syntax theme provided framer lab fox theme created theatlasroom inspired gitlab design system unikitty theme created jakebathman primary theme created jayanthkoushik based googles vim colorscheme andromeda theme created memije based eliverlaras andromeda vs code theme night owlish light theme created praveenpuglia based sdrass night owl vs code theme midnight mojave theme created oberstkrueger based colors outlined human interface guidelines breeze theme based breeze color scheme kde ported iterm nieltg color schemes youd like see included drop line extra x installation install x window system import xrdb file scheme youd like use include homembadolatoitermcolorschemesxrdbblazerxrdb use defines provided imported xrdb file rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolorbd boldcolor rxvtcolorit italiccolor rxvtcolorul underlinecolor rxvtforeground foregroundcolor rxvtbackground backgroundcolor rxvtcursorcolor cursorcolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolorbd boldcolor xtermcolorit italiccolor xtermcolorul underlinecolor xtermforeground foregroundcolor xtermbackground backgroundcolor xtermcursorcolor cursorcolor store snippets file pass xrdb merge yourfilecontainingabovesnippets open new xterm rxvt windows see changes adapt procedure terminals needed terminator color schemes edit terminator configuration file located homeconfigterminatorconfig add configurations themes youd like use profiles section terminator directory contains config snippets youll need paste configurations profiles sections youre good go minimum need customize fonts aspects well wish see terminator documentation details example config file includes code snippet symfonic theme would look like globalconfig keybindings profiles default palette aaaffefadffffdebccbecffeeddffffdebffef backgroundimage none usesystemfont false cursorcolor ffec foregroundcolor ccb font source code pro light backgroundcolor aaa symfonic palette dcfdbaffdbdccccffffffffbddcfdbaffdbdccccffffffff backgroundcolor cursorcolor dcf foregroundcolor ffffff backgroundimage none layouts default child type terminal parent window window type window parent plugins konsole color schemes copy themes konsole directory homeconfigkonsole versions kde theme directory may located homelocalsharekonsole restart konsole choose new theme profile preferences window want make themes available users copy colorscheme files usrsharekonsole terminal color schemes double click selected theme terminal directory putty color schemes new session method method creates new blank session colors set properly download appropriate colorschemereg file import registry changes rightclicking choosing merge choose yes prompted youre sure color scheme show new putty session defaults except entries window colours adjust precise colours putty displays modify session method method modifies existing session changes color settings download appropriate colorschemereg file open file text editor change color scheme portion molokai match session want modify hkeycurrentusersoftwaresimontathamputtysessionsmolokai change example hkeycurrentusersoftwaresimontathamputtysessionsrootlocalhost note special characters need changed percentencoded representation ie space quickly find right session name view toplevel entries hkeycurrentusersoftwaresimontathamputtysessions regeditexe putty recommendations window apprearance &#9; font consolas bold point &#9; font quality &#9; &#9; antialiased nonantialiased &#9; &#9; cleartype default window colours &#9; x allow terminal specify ansi colours &#9; x allow terminal use xterm colour mode &#9; indicate bolded text changing &#9; &#9; font colour &#9; attempt use logical palettes &#9; use system colours xfce terminal color schemes copy colorschemes folder localsharexfceterminal restart terminal freebsd vt color schemes append favourite theme freebsdvt bootloaderconf bootloaderconflocal reboot mobaxterm color schemes copy theme content form mobaxterm paste content mobaxtermini corresponding place colors lxterminal color schemes copy theme content form lxterminal paste content lxterminal corresponding place general visual studio code vscode color schemes copy theme content usersettingsjson previewing color schemes previewrb simple script allows preview color schemes without import parses itermcolors files applies colors current session using iterms proprietary escape codes noted linked page doesnt run tmux screen apply adventuretime scheme current session toolspreviewrb schemesadventuretimeitermcolors apply schemes turn press almost key advance hit ctrlc esc stop press delete key go back toolspreviewrb schemes iterm color schemes iterm color schemes iterm color schemes iterm themes iterm themes iterm themes,iterm color scheme intro instal instruct contribut screenshot credit extra x instal konsol color scheme termin color scheme mac os termin color scheme putti color scheme xfce termin color scheme freebsd vt color scheme preview color scheme mobaxterm color scheme lxtermin color scheme intro set color scheme iterm aka iterm also includ port termin konsol putti xresourc xrdb remmina termit xfce tilda freebsd vt termin kitti mobaxterm lxtermin microsoft window termin visual studio screenshot screenshot directori instal instruct way instal iterm theme go configur locat direct way via keyboard shortcut launch iterm get latest version itermcom type cmdi navig color tab click color preset click import click scheme folder select itermcolor profil would like import click color preset choos color scheme via iterm prefer launch iterm get latest version itermcom click iterm menu titl select prefer option select profil navig color tab click color preset click import select itermcolor file scheme youd like use click color preset choos color scheme contribut great iterm theme send via pull request export theme set launch iterm type cmdi navig color tab click color preset click export save itermcolor file includ screenshot pleas gener output use screenshottablesh script tool directori screenshot consist pleas font set pt monaco transpar window would also help cd tool run python updateallpi gener format scheme screenshot day night adventuretim afterglow alienblood andromeda argonaut arthur ateliersulphurpool atom atom one light ayu ayu light batman belafont day belafont night birdsofparadis blazer bluloco dark bluloco light borland breez bright light broadcast brogramm builtin dark builtin light builtin pastel dark builtin solar dark builtin solar light builtin tango dark builtin tango light c calam chalk chalkboard challengerdeep chester ciapr clr cobalt neon cobalt crayonponyfish cyberpunk dark pastel dark darksid deep desert dimmedmonokai dotgov dracula duoton dark earthsong element elementari encom espresso espresso libr fahrenheit fidelop firefoxdev firewatch fishtank flat flatland floravers forest blue framer frontenddelight funforrest galaxi github glacier grape grass gruvbox dark hacktob hardcor harper highway hipster green hivacruz homebrew hopscotch hopscotch hurtado hybrid icgreenppl icorangeppl idea drak idleto irblack jacki brown japanesqu jellybean jetbrain darcula kibbl kolorit lab fox later even lavandula liquidcarbon liquidcarbontranspar liquidcarbontransparentinvers lovelac man page materi materialdark materialocean mathia medallion midnight mojav misterioso molokai monalisa monokai remast monokai soda monokai vivid ntchk neopolitan neutron nightlion v nightlion v night owlish light novel nocturn winter obsidian ocean oceanicmateri olli one half dark one half light oper mono dark pandora parasio dark paulmillr pencil dark pencil light piatto light pnevma primari pro pro light purpl peter purpl rain rebecca red alert red planet red sand relax rippedcast royal ryuuko seafoam pastel seashel seti shaman shadesofpurpl slate sleepyhollow snazzi smyck softserv solar darcula background imag solar darcula without background imag solar dark patch applic assum ansi color code gray color solar treat code equal background theme peopl prefer former see issu inform solar dark higher contrast spacegray spacegray eighti spacegray eighti dull spacedust spiderman spring squar sublimin sundri symfon synthwav tango adapt tango half adapt teerb termin basic thayer bright hulk tomorrow tomorrow night tomorrow night blue tomorrow night bright tomorrow night eighti tomorrow night burn toychest treehous twilight ubuntu ultraviol sea unikitti urpl vaughn vibrantink violet light violet dark warmneon wez whimsi wildcherri wombat wryan zenburn credit scheme novel espresso grass homebrew ocean pro man page red sand termin basic port scheme name includ mac termin applic termin scheme port except solid color random background iterm doesnt support aerogel hideou scheme violet creat ashfin scheme idleto inspir idlefing textmat theme suggest inclus seth wilson scheme zenburn inspir zenburn version creat suraj n kurapati scheme symfon inspir color scheme use document symfoni php framework synthwav theme creat brettstil scheme github inspir color theme palett use github ui mascot imag scheme solar darcula inspir color theme creat rickhanlonii two screenshot one background one without background imag includ background directori imag must manual set profil preferenceswindow tab hard see screenshot look great theme hurtado found theme molokai base vim colorschem name theme monokai soda found theme monokai vivid creat vitalymak theme neopolitan creat daytonn theme sublimin creat gdsrosa theme solar dark solar light come offici solar web site obsidian theme hard drive dont recal came anyon know ping ill link back author spacedust theme creat mhallend port iterm couto theme mathia creat mathiasbynen liquidcarbon theme creat markcho nightlion theme creat curvv media tomorrow theme creat chriskempson tomorrow night burn theme creat ashwinv twilight theme creat stefri teerb theme creat teerb irblack theme found misterioso theme creat flooos hybrid theme found thayer bright theme found shade purpl theme found port frfou spring theme found smyck theme found forest blue theme found cobalt theme creat wesbo oper mono dark port vharadk dreamyguy warmneon theme port pycharm firewut spacegray theme creat ryentzer jellybean theme creat qtpi paulmillr theme creat paulmillr port iterm harper theme creat idleberg clr theme creat jasonlong dracula theme creat zenorocha theme adventuretim alienblood birdsofparadis ciapr crayonponyfish dimmedmonokai earthsong element fishtank frontenddelight funforrest grape highway icgreenppl icorangeppl lavandula medallion monalisa olli royal seashel shaman sleepyhollow softserv sundri toychest treehous urpl creat zdj japanesqu theme creat aereal seti theme creat jessewe port iterm philduffi slightli modifi make ansi black littl contrast hipster green jacki brown theme creat unkulunkulu chalk theme creat achalv pencil dark pencil light theme creat mattli flat theme creat ahmetsulek atom brogramm glacier darksid theme creat bahlo afterglow theme creat yabatadesign broadcast theme creat vinkla arthur ntchk pnevma squar wryan theme creat baskervil belafont day belafont night paraiso dark c theme creat idleberg day night theme creat x argonaut theme creat effkay espresso libr theme creat jurgemaist hardcor theme creat hardcor rippedcast theme creat mdw solor dark higher contrast theme creat heister vibrantink theme creat asanghi wez theme creat wez wombat theme creat djoyner wildcherri theme creat mashaal flatland theme creat realchaseadam neutron theme creat ch fidelop theme inspir fidelop later even theme creat vilhalm galaxi theme creat jglovier slate theme creat deneshshan spacegray eighti spacegray eighti dull theme creat mhkeller borland theme creat delip cobalt neon theme creat vazquez ateliersulphurpool theme creat atelierbram batman spiderman hulk theme creat pyropho encom theme creat josh braun floravers theme creat papayakitti materi materialdark theme creat stoeffel oceanicmateri theme creat rahulpatel materialocean theme found port frfou atomonelight theme creat iamstarkov piatto light theme creat kovv dotgov theme inspir color palett use us web design standard duoton dark theme creat chibicod base simurai duotonedark atom theme jetbrain darcula theme creat vitstr bright light theme creat twegan ubuntu theme inspir default ubuntu consol color creat maximu port iterm stepin sea theme creat peterpm one half theme creat sonph base atom one tweak firefoxdev theme creat orsti ryuuko theme creat dylanarap ad iandrewt firewatch theme creat sebastian szturo atom syntax theme port iterm scheme ben style origin inspir firewatch game pandora theme creat milosmat elementari os theme creat elementaryio ad poiuytrewq gruvbox dark theme creat morhetz ad mcchrish ayu ayu light theme creat alebcay deep theme creat adoyl red planet theme creat ibrokemypi base eliquiouss red planet sublim text theme tango adapt theme slightli less bright counterpart tango half adapt creat crowsonkb base iterm tango light theme pro light theme adapt pro theme crowsonkb use itermschem tool fahrenheit theme creat jonascarpay base fcpg vimfahrenheit vim theme calam theme creat pustur purpl peter theme creat dechamp purpl rain theme creat msorr challengerdeep theme found port iterm eendroroy hopscotch theme creat jan sott hivacruz theme creat yann defretin nocturn winter theme creat shriram balaji rebecca theme creat vic base emac rebeccathem whimsi theme creat rod chester theme creat kh kolorit theme creat thomaspaulmann cyberpunk theme creat murderlon lovelac theme creat nalanbar base dotfil elenapan framer theme creat markogresak base framer syntax theme provid framer lab fox theme creat theatlasroom inspir gitlab design system unikitti theme creat jakebathman primari theme creat jayanthkoushik base googl vim colorschem andromeda theme creat memij base eliverlara andromeda vs code theme night owlish light theme creat praveenpuglia base sdrass night owl vs code theme midnight mojav theme creat oberstkrueg base color outlin human interfac guidelin breez theme base breez color scheme kde port iterm nieltg color scheme youd like see includ drop line extra x instal instal x window system import xrdb file scheme youd like use includ homembadolatoitermcolorschemesxrdbblazerxrdb use defin provid import xrdb file rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolorbd boldcolor rxvtcolorit italiccolor rxvtcolorul underlinecolor rxvtforeground foregroundcolor rxvtbackground backgroundcolor rxvtcursorcolor cursorcolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolorbd boldcolor xtermcolorit italiccolor xtermcolorul underlinecolor xtermforeground foregroundcolor xtermbackground backgroundcolor xtermcursorcolor cursorcolor store snippet file pass xrdb merg yourfilecontainingabovesnippet open new xterm rxvt window see chang adapt procedur termin need termin color scheme edit termin configur file locat homeconfigterminatorconfig add configur theme youd like use profil section termin directori contain config snippet youll need past configur profil section your good go minimum need custom font aspect well wish see termin document detail exampl config file includ code snippet symfon theme would look like globalconfig keybind profil default palett aaaffefadffffdebccbecffeeddffffdebffef backgroundimag none usesystemfont fals cursorcolor ffec foregroundcolor ccb font sourc code pro light backgroundcolor aaa symfon palett dcfdbaffdbdccccffffffffbddcfdbaffdbdccccffffffff backgroundcolor cursorcolor dcf foregroundcolor ffffff backgroundimag none layout default child type termin parent window window type window parent plugin konsol color scheme copi theme konsol directori homeconfigkonsol version kde theme directori may locat homelocalsharekonsol restart konsol choos new theme profil prefer window want make theme avail user copi colorschem file usrsharekonsol termin color scheme doubl click select theme termin directori putti color scheme new session method method creat new blank session color set properli download appropri colorschemereg file import registri chang rightclick choos merg choos ye prompt your sure color scheme show new putti session default except entri window colour adjust precis colour putti display modifi session method method modifi exist session chang color set download appropri colorschemereg file open file text editor chang color scheme portion molokai match session want modifi hkeycurrentusersoftwaresimontathamputtysessionsmolokai chang exampl hkeycurrentusersoftwaresimontathamputtysessionsrootlocalhost note special charact need chang percentencod represent ie space quickli find right session name view toplevel entri hkeycurrentusersoftwaresimontathamputtysess regeditex putti recommend window apprear &#9; font consola bold point &#9; font qualiti &#9; &#9; antialias nonantialias &#9; &#9; cleartyp default window colour &#9; x allow termin specifi ansi colour &#9; x allow termin use xterm colour mode &#9; indic bold text chang &#9; &#9; font colour &#9; attempt use logic palett &#9; use system colour xfce termin color scheme copi colorschem folder localsharexfcetermin restart termin freebsd vt color scheme append favourit theme freebsdvt bootloaderconf bootloaderconfloc reboot mobaxterm color scheme copi theme content form mobaxterm past content mobaxtermini correspond place color lxtermin color scheme copi theme content form lxtermin past content lxtermin correspond place gener visual studio code vscode color scheme copi theme content usersettingsjson preview color scheme previewrb simpl script allow preview color scheme without import pars itermcolor file appli color current session use iterm proprietari escap code note link page doesnt run tmux screen appli adventuretim scheme current session toolspreviewrb schemesadventuretimeitermcolor appli scheme turn press almost key advanc hit ctrlc esc stop press delet key go back toolspreviewrb scheme iterm color scheme iterm color scheme iterm color scheme iterm theme iterm theme iterm theme,iterm color scheme intro installation instruction contribute screenshots credit extra x installation konsole color scheme terminator color scheme mac o terminal color scheme putty color scheme xfce terminal color scheme freebsd vt color scheme previewing color scheme mobaxterm color scheme lxterminal color scheme intro set color scheme iterm aka iterm also includes port terminal konsole putty xresources xrdb remmina termite xfce tilda freebsd vt terminator kitty mobaxterm lxterminal microsofts window terminal visual studio screenshots screenshots directory installation instruction way install iterm theme go configuration location direct way via keyboard shortcut launch iterm get latest version itermcom type cmdi navigate color tab click color presets click import click scheme folder select itermcolors profile would like import click color presets choose color scheme via iterm preference launch iterm get latest version itermcom click iterm menu title select preference option select profile navigate color tab click color presets click import select itermcolors file scheme youd like use click color presets choose color scheme contribute great iterm theme send via pull request export theme setting launch iterm type cmdi navigate color tab click color presets click export save itermcolors file include screenshot please generate output using screenshottablesh script tool directory screenshot consistency please font set pt monaco transparency window would also helpful cd tool run python updateallpy generate format scheme screenshots day night adventuretime afterglow alienblood andromeda argonaut arthur ateliersulphurpool atom atom one light ayu ayu light batman belafonte day belafonte night birdsofparadise blazer bluloco dark bluloco light borland breeze bright light broadcast brogrammer builtin dark builtin light builtin pastel dark builtin solarized dark builtin solarized light builtin tango dark builtin tango light c calamity chalk chalkboard challengerdeep chester ciapre clrs cobalt neon cobalt crayonponyfish cyberpunk dark pastel dark darkside deep desert dimmedmonokai dotgov dracula duotone dark earthsong elemental elementary encom espresso espresso libre fahrenheit fideloper firefoxdev firewatch fishtank flat flatland floraverse forest blue framer frontenddelight funforrest galaxy github glacier grape grass gruvbox dark hacktober hardcore harper highway hipster green hivacruz homebrew hopscotch hopscotch hurtado hybrid icgreenppl icorangeppl idea drak idletoes irblack jackie brown japanesque jellybeans jetbrains darcula kibble kolorit lab fox later evening lavandula liquidcarbon liquidcarbontransparent liquidcarbontransparentinverse lovelace man page material materialdark materialocean mathias medallion midnight mojave misterioso molokai monalisa monokai remastered monokai soda monokai vivid ntchk neopolitan neutron nightlion v nightlion v night owlish light novel nocturnal winter obsidian ocean oceanicmaterial ollie one half dark one half light operator mono dark pandora parasio dark paulmillr pencil dark pencil light piatto light pnevma primary pro pro light purple peter purple rain rebecca red alert red planet red sand relaxed rippedcasts royal ryuuko seafoam pastel seashell seti shaman shadesofpurple slate sleepyhollow snazzy smyck softserver solarized darcula background image solarized darcula without background image solarized dark patched application assume ansi color code gray color solarized treat code equal background theme people prefer former see issue information solarized dark higher contrast spacegray spacegray eighty spacegray eighty dull spacedust spiderman spring square subliminal sundried symfonic synthwave tango adapted tango half adapted teerb terminal basic thayer bright hulk tomorrow tomorrow night tomorrow night blue tomorrow night bright tomorrow night eighty tomorrow night burn toychest treehouse twilight ubuntu ultraviolent sea unikitty urple vaughn vibrantink violet light violet dark warmneon wez whimsy wildcherry wombat wryan zenburn credit scheme novel espresso grass homebrew ocean pro man page red sand terminal basic port scheme name included mac terminal application terminal scheme ported exception solid color random background iterm doesnt support aerogel hideous scheme violet created ashfinal scheme idletoes inspired idlefingers textmate theme suggested inclusion seth wilson scheme zenburn inspired zenburn version created suraj n kurapati scheme symfonic inspired color scheme used documentation symfony php framework synthwave theme created brettstil scheme github inspired color theme palette used github ui mascot image scheme solarized darcula inspired color theme created rickhanlonii two screenshots one background one without background image included background directory image must manually set profile preferenceswindow tab hard see screenshot look great theme hurtado found theme molokai based vim colorscheme name theme monokai soda found theme monokai vivid created vitalymak theme neopolitan created daytonn theme subliminal created gdsrosa theme solarized dark solarized light come official solarized web site obsidian theme hard drive dont recall came anyone know ping ill link back author spacedust theme created mhallendal ported iterm couto theme mathias created mathiasbynens liquidcarbon theme created markcho nightlion theme created curvve medium tomorrow theme created chriskempson tomorrow night burn theme created ashwinv twilight theme created stefri teerb theme created teerb irblack theme found misterioso theme created flooose hybrid theme found thayer bright theme found shade purple theme found ported frfou spring theme found smyck theme found forest blue theme found cobalt theme created wesbos operator mono dark ported vharadkou dreamyguy warmneon theme ported pycharm firewut spacegray theme created ryentzer jellybeans theme created qtpi paulmillr theme created paulmillr ported iterm harper theme created idleberg clrs theme created jasonlong dracula theme created zenorocha theme adventuretime alienblood birdsofparadise ciapre crayonponyfish dimmedmonokai earthsong elemental fishtank frontenddelight funforrest grape highway icgreenppl icorangeppl lavandula medallion monalisa ollie royal seashell shaman sleepyhollow softserver sundried toychest treehouse urple created zdj japanesque theme created aereal seti theme created jesseweed ported iterm philduffy slightly modified make ansi black little contrast hipster green jackie brown theme created unkulunkulu chalk theme created achalv pencil dark pencil light theme created mattly flat theme created ahmetsulek atom brogrammer glacier darkside theme created bahlo afterglow theme created yabatadesign broadcast theme created vinkla arthur ntchk pnevma square wryan theme created baskerville belafonte day belafonte night paraiso dark c theme created idleberg day night theme created x argonaut theme created effkay espresso libre theme created jurgemaister hardcore theme created hardcore rippedcasts theme created mdw solorized dark higher contrast theme created heisters vibrantink theme created asanghi wez theme created wez wombat theme created djoyner wildcherry theme created mashaal flatland theme created realchaseadams neutron theme created chs fideloper theme inspired fideloper later evening theme created vilhalmer galaxy theme created jglovier slate theme created deneshshan spacegray eighty spacegray eighty dull theme created mhkeller borland theme created delip cobalt neon theme created vazquez ateliersulphurpool theme created atelierbram batman spiderman hulk theme created pyrophos encom theme created josh braun floraverse theme created papayakitty material materialdark theme created stoeffel oceanicmaterial theme created rahulpatel materialocean theme found ported frfou atomonelight theme created iamstarkov piatto light theme created kovv dotgov theme inspired color palette used u web design standard duotone dark theme created chibicode based simurais duotonedark atom theme jetbrains darcula theme created vitstr bright light theme created twegan ubuntu theme inspired default ubuntus console color created maximus ported iterm stepin sea theme created peterpme one half theme created sonph based atom one tweakings firefoxdev theme created orstis ryuuko theme created dylanaraps added iandrewt firewatch theme created sebastian szturo atom syntax theme ported iterm scheme ben style originally inspired firewatch game pandora theme created milosmatic elementary o theme created elementaryio added poiuytrewq gruvbox dark theme created morhetz added mcchrish ayu ayu light theme created alebcay deep theme created adoyle red planet theme created ibrokemypie based eliquiouss red planet sublime text theme tango adapted theme slightly le bright counterpart tango half adapted created crowsonkb based iterms tango light theme pro light theme adapted pro theme crowsonkb using itermschemer tool fahrenheit theme created jonascarpay based fcpgs vimfahrenheit vim theme calamity theme created pustur purple peter theme created dechamp purple rain theme created msorre challengerdeep theme found ported iterm eendroroy hopscotch theme created jan sott hivacruz theme created yann defretin nocturnal winter theme created shriram balaji rebecca theme created vic based emacs rebeccatheme whimsy theme created rod chester theme created kh kolorit theme created thomaspaulmann cyberpunk theme created murderlon lovelace theme created nalanbar based dotfile elenapan framer theme created markogresak based framer syntax theme provided framer lab fox theme created theatlasroom inspired gitlab design system unikitty theme created jakebathman primary theme created jayanthkoushik based google vim colorscheme andromeda theme created memije based eliverlaras andromeda v code theme night owlish light theme created praveenpuglia based sdrass night owl v code theme midnight mojave theme created oberstkrueger based color outlined human interface guideline breeze theme based breeze color scheme kde ported iterm nieltg color scheme youd like see included drop line extra x installation install x window system import xrdb file scheme youd like use include homembadolatoitermcolorschemesxrdbblazerxrdb use defines provided imported xrdb file rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolor ansicolor rxvtcolorbd boldcolor rxvtcolorit italiccolor rxvtcolorul underlinecolor rxvtforeground foregroundcolor rxvtbackground backgroundcolor rxvtcursorcolor cursorcolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolor ansicolor xtermcolorbd boldcolor xtermcolorit italiccolor xtermcolorul underlinecolor xtermforeground foregroundcolor xtermbackground backgroundcolor xtermcursorcolor cursorcolor store snippet file pas xrdb merge yourfilecontainingabovesnippets open new xterm rxvt window see change adapt procedure terminal needed terminator color scheme edit terminator configuration file located homeconfigterminatorconfig add configuration theme youd like use profile section terminator directory contains config snippet youll need paste configuration profile section youre good go minimum need customize font aspect well wish see terminator documentation detail example config file includes code snippet symfonic theme would look like globalconfig keybindings profile default palette aaaffefadffffdebccbecffeeddffffdebffef backgroundimage none usesystemfont false cursorcolor ffec foregroundcolor ccb font source code pro light backgroundcolor aaa symfonic palette dcfdbaffdbdccccffffffffbddcfdbaffdbdccccffffffff backgroundcolor cursorcolor dcf foregroundcolor ffffff backgroundimage none layout default child type terminal parent window window type window parent plugins konsole color scheme copy theme konsole directory homeconfigkonsole version kde theme directory may located homelocalsharekonsole restart konsole choose new theme profile preference window want make theme available user copy colorscheme file usrsharekonsole terminal color scheme double click selected theme terminal directory putty color scheme new session method method creates new blank session color set properly download appropriate colorschemereg file import registry change rightclicking choosing merge choose yes prompted youre sure color scheme show new putty session default except entry window colour adjust precise colour putty display modify session method method modifies existing session change color setting download appropriate colorschemereg file open file text editor change color scheme portion molokai match session want modify hkeycurrentusersoftwaresimontathamputtysessionsmolokai change example hkeycurrentusersoftwaresimontathamputtysessionsrootlocalhost note special character need changed percentencoded representation ie space quickly find right session name view toplevel entry hkeycurrentusersoftwaresimontathamputtysessions regeditexe putty recommendation window apprearance &#9; font consolas bold point &#9; font quality &#9; &#9; antialiased nonantialiased &#9; &#9; cleartype default window colour &#9; x allow terminal specify ansi colour &#9; x allow terminal use xterm colour mode &#9; indicate bolded text changing &#9; &#9; font colour &#9; attempt use logical palette &#9; use system colour xfce terminal color scheme copy colorschemes folder localsharexfceterminal restart terminal freebsd vt color scheme append favourite theme freebsdvt bootloaderconf bootloaderconflocal reboot mobaxterm color scheme copy theme content form mobaxterm paste content mobaxtermini corresponding place color lxterminal color scheme copy theme content form lxterminal paste content lxterminal corresponding place general visual studio code vscode color scheme copy theme content usersettingsjson previewing color scheme previewrb simple script allows preview color scheme without import par itermcolors file applies color current session using iterms proprietary escape code noted linked page doesnt run tmux screen apply adventuretime scheme current session toolspreviewrb schemesadventuretimeitermcolors apply scheme turn press almost key advance hit ctrlc esc stop press delete key go back toolspreviewrb scheme iterm color scheme iterm color scheme iterm color scheme iterm theme iterm theme iterm theme
75,Shell,GitHub - fish-shell/fish-shell: The user-friendly command line shell.,"fish - the friendly interactive shell 
fish is a smart and user-friendly command line shell for macOS, Linux, and the rest of the family.
fish includes features like syntax highlighting, autosuggest-as-you-type, and fancy tab completions
that just work, with no configuration required.
For more on fish's design philosophy, see the design document.
Quick Start
fish generally works like other shells, like bash or zsh. A few important differences can be found at https://fishshell.com/docs/current/tutorial.html by searching for the magic phrase ""unlike other shells"".
Detailed user documentation is available by running help within fish, and also at https://fishshell.com/docs/current/index.html
You can quickly play with fish right in your browser by clicking the button below:

Getting fish
macOS
fish can be installed:

using Homebrew: brew install fish
using MacPorts: sudo port install fish
using the installer from fishshell.com
as a standalone app from fishshell.com

Packages for Linux
Packages for Debian, Fedora, openSUSE, and Red Hat Enterprise Linux/CentOS are available from the
openSUSE Build
Service.
Packages for Ubuntu are available from the fish
PPA, and can be installed using the
following commands:
sudo apt-add-repository ppa:fish-shell/release-3
sudo apt-get update
sudo apt-get install fish

Instructions for other distributions may be found at fishshell.com.
Windows

On Windows 10, fish can be installed under the WSL Windows Subsystem for Linux with sudo apt install fish or from source with the instructions below.
Fish can also be installed on all versions of Windows using Cygwin (from the Shells category).

Building from source
If packages are not available for your platform, GPG-signed tarballs are available from
fishshell.com and fish-shell on
GitHub.  See the Building section for instructions.
Running fish
Once installed, run fish from your current shell to try fish out!
Dependencies
Running fish requires:

curses or ncurses (preinstalled on most *nix systems)
some common *nix system utilities (currently mktemp), in addition to the basic POSIX utilities (cat, cut, dirname, ls, mkdir, mkfifo, rm, sort, tee, tr, uname and sed at least, but the full coreutils plus find, sed and awk is preferred)
gettext (library and gettext command), if compiled with translation support

The following optional features also have specific requirements:

builtin commands that have the --help option or print usage messages require ul and either nroff or mandoc for display
automated completion generation from manual pages requires Python (2.7+ or 3.3+) and possibly the
backports.lzma module for Python 2.7
the fish_config web configuration tool requires Python (2.7+ or 3.3 +) and a web browser
system clipboard integration (with the default Ctrl-V and Ctrl-X bindings) require either the
xsel, xclip, wl-copy/wl-paste or pbcopy/pbpaste utilities
full completions for yarn and npm require the all-the-package-names NPM module

Switching to fish
If you wish to use fish as your default shell, use the following command:
chsh -s /usr/local/bin/fish

chsh will prompt you for your password and change your default shell. (Substitute /usr/local/bin/fish with whatever path fish was installed to, if it differs.) Log out, then log in again for the changes to take effect.
Use the following command if fish isn't already added to /etc/shells to permit fish to be your login shell:
echo /usr/local/bin/fish | sudo tee -a /etc/shells

To switch your default shell back, you can run chsh -s /bin/bash (substituting /bin/bash with /bin/tcsh or /bin/zsh as appropriate).
Building
Dependencies
Compiling fish requires:

a C++11 compiler (g++ 4.8 or later, or clang 3.3 or later)
CMake (version 3.2 or later)
a curses implementation such as ncurses (headers and libraries)
PCRE2 (headers and libraries) - a copy is included with fish
gettext (headers and libraries) - optional, for translation support

Sphinx is also optionally required to build the documentation from a cloned git repository.
Building from source (all platforms) - Makefile generator
To install into /usr/local, run:
mkdir build; cd build
cmake ..
make
sudo make install
The install directory can be changed using the -DCMAKE_INSTALL_PREFIX parameter for cmake.
Building from source (macOS) - Xcode
mkdir build; cd build
cmake .. -G Xcode
An Xcode project will now be available in the build subdirectory. You can open it with Xcode,
or run the following to build and install in /usr/local:
xcodebuild
xcodebuild -scheme install
The install directory can be changed using the -DCMAKE_INSTALL_PREFIX parameter for cmake.
Help, it didn't build!
If fish reports that it could not find curses, try installing a curses development package and build again.
On Debian or Ubuntu you want:
sudo apt-get install build-essential cmake ncurses-dev libncurses5-dev libpcre2-dev gettext

On RedHat, CentOS, or Amazon EC2:
sudo yum install ncurses-devel

Contributing Changes to the Code
See the Guide for Developers.
Contact Us
Questions, comments, rants and raves can be posted to the official fish mailing list at https://lists.sourceforge.net/lists/listinfo/fish-users or join us on our gitter.im channel. Or use the fish tag on Stackoverflow for questions related to fish script and the fish tag on Superuser for all other questions (e.g., customizing colors, changing key bindings).
Found a bug? Have an awesome idea? Please open an issue.
",fish friendly interactive shell fish smart userfriendly command line shell macos linux rest family fish includes features like syntax highlighting autosuggestasyoutype fancy tab completions work configuration required fishs design philosophy see design document quick start fish generally works like shells like bash zsh important differences found httpsfishshellcomdocscurrenttutorialhtml searching magic phrase unlike shells detailed user documentation available running help within fish also httpsfishshellcomdocscurrentindexhtml quickly play fish right browser clicking button getting fish macos fish installed using homebrew brew install fish using macports sudo port install fish using installer fishshellcom standalone app fishshellcom packages linux packages debian fedora opensuse red hat enterprise linuxcentos available opensuse build service packages ubuntu available fish ppa installed using following commands sudo aptaddrepository ppafishshellrelease sudo aptget update sudo aptget install fish instructions distributions may found fishshellcom windows windows fish installed wsl windows subsystem linux sudo apt install fish source instructions fish also installed versions windows using cygwin shells category building source packages available platform gpgsigned tarballs available fishshellcom fishshell github see building section instructions running fish installed run fish current shell try fish dependencies running fish requires curses ncurses preinstalled nix systems common nix system utilities currently mktemp addition basic posix utilities cat cut dirname ls mkdir mkfifo rm sort tee tr uname sed least full coreutils plus find sed awk preferred gettext library gettext command compiled translation support following optional features also specific requirements builtin commands help option print usage messages require ul either nroff mandoc display automated completion generation manual pages requires python possibly backportslzma module python fishconfig web configuration tool requires python web browser system clipboard integration default ctrlv ctrlx bindings require either xsel xclip wlcopywlpaste pbcopypbpaste utilities full completions yarn npm require allthepackagenames npm module switching fish wish use fish default shell use following command chsh usrlocalbinfish chsh prompt password change default shell substitute usrlocalbinfish whatever path fish installed differs log log changes take effect use following command fish isnt already added etcshells permit fish login shell echo usrlocalbinfish sudo tee etcshells switch default shell back run chsh binbash substituting binbash bintcsh binzsh appropriate building dependencies compiling fish requires c compiler g later clang later cmake version later curses implementation ncurses headers libraries pcre headers libraries copy included fish gettext headers libraries optional translation support sphinx also optionally required build documentation cloned git repository building source platforms makefile generator install usrlocal run mkdir build cd build cmake make sudo make install install directory changed using dcmakeinstallprefix parameter cmake building source macos xcode mkdir build cd build cmake g xcode xcode project available build subdirectory open xcode run following build install usrlocal xcodebuild xcodebuild scheme install install directory changed using dcmakeinstallprefix parameter cmake help didnt build fish reports could find curses try installing curses development package build debian ubuntu want sudo aptget install buildessential cmake ncursesdev libncursesdev libpcredev gettext redhat centos amazon ec sudo yum install ncursesdevel contributing changes code see guide developers contact us questions comments rants raves posted official fish mailing list httpslistssourceforgenetlistslistinfofishusers join us gitterim channel use fish tag stackoverflow questions related fish script fish tag superuser questions eg customizing colors changing key bindings found bug awesome idea please open issue,fish friendli interact shell fish smart userfriendli command line shell maco linux rest famili fish includ featur like syntax highlight autosuggestasyoutyp fanci tab complet work configur requir fish design philosophi see design document quick start fish gener work like shell like bash zsh import differ found httpsfishshellcomdocscurrenttutorialhtml search magic phrase unlik shell detail user document avail run help within fish also httpsfishshellcomdocscurrentindexhtml quickli play fish right browser click button get fish maco fish instal use homebrew brew instal fish use macport sudo port instal fish use instal fishshellcom standalon app fishshellcom packag linux packag debian fedora opensus red hat enterpris linuxcento avail opensus build servic packag ubuntu avail fish ppa instal use follow command sudo aptaddrepositori ppafishshellreleas sudo aptget updat sudo aptget instal fish instruct distribut may found fishshellcom window window fish instal wsl window subsystem linux sudo apt instal fish sourc instruct fish also instal version window use cygwin shell categori build sourc packag avail platform gpgsign tarbal avail fishshellcom fishshel github see build section instruct run fish instal run fish current shell tri fish depend run fish requir curs ncurs preinstal nix system common nix system util current mktemp addit basic posix util cat cut dirnam ls mkdir mkfifo rm sort tee tr unam sed least full coreutil plu find sed awk prefer gettext librari gettext command compil translat support follow option featur also specif requir builtin command help option print usag messag requir ul either nroff mandoc display autom complet gener manual page requir python possibl backportslzma modul python fishconfig web configur tool requir python web browser system clipboard integr default ctrlv ctrlx bind requir either xsel xclip wlcopywlpast pbcopypbpast util full complet yarn npm requir allthepackagenam npm modul switch fish wish use fish default shell use follow command chsh usrlocalbinfish chsh prompt password chang default shell substitut usrlocalbinfish whatev path fish instal differ log log chang take effect use follow command fish isnt alreadi ad etcshel permit fish login shell echo usrlocalbinfish sudo tee etcshel switch default shell back run chsh binbash substitut binbash bintcsh binzsh appropri build depend compil fish requir c compil g later clang later cmake version later curs implement ncurs header librari pcre header librari copi includ fish gettext header librari option translat support sphinx also option requir build document clone git repositori build sourc platform makefil gener instal usrloc run mkdir build cd build cmake make sudo make instal instal directori chang use dcmakeinstallprefix paramet cmake build sourc maco xcode mkdir build cd build cmake g xcode xcode project avail build subdirectori open xcode run follow build instal usrloc xcodebuild xcodebuild scheme instal instal directori chang use dcmakeinstallprefix paramet cmake help didnt build fish report could find curs tri instal curs develop packag build debian ubuntu want sudo aptget instal buildessenti cmake ncursesdev libncursesdev libpcredev gettext redhat cento amazon ec sudo yum instal ncursesdevel contribut chang code see guid develop contact us question comment rant rave post offici fish mail list httpslistssourceforgenetlistslistinfofishus join us gitterim channel use fish tag stackoverflow question relat fish script fish tag superus question eg custom color chang key bind found bug awesom idea pleas open issu,fish friendly interactive shell fish smart userfriendly command line shell macos linux rest family fish includes feature like syntax highlighting autosuggestasyoutype fancy tab completion work configuration required fish design philosophy see design document quick start fish generally work like shell like bash zsh important difference found httpsfishshellcomdocscurrenttutorialhtml searching magic phrase unlike shell detailed user documentation available running help within fish also httpsfishshellcomdocscurrentindexhtml quickly play fish right browser clicking button getting fish macos fish installed using homebrew brew install fish using macports sudo port install fish using installer fishshellcom standalone app fishshellcom package linux package debian fedora opensuse red hat enterprise linuxcentos available opensuse build service package ubuntu available fish ppa installed using following command sudo aptaddrepository ppafishshellrelease sudo aptget update sudo aptget install fish instruction distribution may found fishshellcom window window fish installed wsl window subsystem linux sudo apt install fish source instruction fish also installed version window using cygwin shell category building source package available platform gpgsigned tarballs available fishshellcom fishshell github see building section instruction running fish installed run fish current shell try fish dependency running fish requires curse ncurses preinstalled nix system common nix system utility currently mktemp addition basic posix utility cat cut dirname l mkdir mkfifo rm sort tee tr uname sed least full coreutils plus find sed awk preferred gettext library gettext command compiled translation support following optional feature also specific requirement builtin command help option print usage message require ul either nroff mandoc display automated completion generation manual page requires python possibly backportslzma module python fishconfig web configuration tool requires python web browser system clipboard integration default ctrlv ctrlx binding require either xsel xclip wlcopywlpaste pbcopypbpaste utility full completion yarn npm require allthepackagenames npm module switching fish wish use fish default shell use following command chsh usrlocalbinfish chsh prompt password change default shell substitute usrlocalbinfish whatever path fish installed differs log log change take effect use following command fish isnt already added etcshells permit fish login shell echo usrlocalbinfish sudo tee etcshells switch default shell back run chsh binbash substituting binbash bintcsh binzsh appropriate building dependency compiling fish requires c compiler g later clang later cmake version later curse implementation ncurses header library pcre header library copy included fish gettext header library optional translation support sphinx also optionally required build documentation cloned git repository building source platform makefile generator install usrlocal run mkdir build cd build cmake make sudo make install install directory changed using dcmakeinstallprefix parameter cmake building source macos xcode mkdir build cd build cmake g xcode xcode project available build subdirectory open xcode run following build install usrlocal xcodebuild xcodebuild scheme install install directory changed using dcmakeinstallprefix parameter cmake help didnt build fish report could find curse try installing curse development package build debian ubuntu want sudo aptget install buildessential cmake ncursesdev libncursesdev libpcredev gettext redhat centos amazon ec sudo yum install ncursesdevel contributing change code see guide developer contact u question comment rant raf posted official fish mailing list httpslistssourceforgenetlistslistinfofishusers join u gitterim channel use fish tag stackoverflow question related fish script fish tag superuser question eg customizing color changing key binding found bug awesome idea please open issue
76,Shell,GitHub - charlax/professional-programming: A collection of full-stack resources for programmers.,"
Table of Contents

Professional Programming

Contributing to this list
Must-read books
Must-read articles
Other general material and list of resources

Courses


Topics

Algorithm and data structures
API design
Attitude, habits, mindset
Automation
Biases
Career growth
Characters sets
Coding & code quality
Computer science
Configuration
Databases
Data formats
Data science
Debugging
Design (visual, UX, UI)
Design (OO modeling, architecture, patterns, anti-patterns, etc.)

Design: simplicity


Dev environment & tools
Diversity & inclusion
Documentation
Dotfiles
Editors & IDE
Engineering management
Exercises
Incident response (alerting, outages, firefighting)
Internet
Interviewing
Learning & memorizing
Low-level
Network
Problem solving
Project management
Programming languages

Python
JavaScript
FP vs. OOP


Over-engineering
Reading
Releasing & deploying
Security
Shell
System architecture

Scalability
Stability
Resiliency


Site Reliability Engineering (SRE)
Technical debt
Testing
Tools
Version control (Git)
Work ethics, productivity & work/life balance
Web development
Writing
Writing for performance


Concepts



Professional Programming

Give me six hours to chop down a tree and I will spend the first four sharpening the axe. (Abraham Lincoln)

A collection of full-stack resources for programmers.
The goal of this page is to make you a more proficient developer. You'll find only resources that I've found truly inspiring, or that have become timeless classics.
This page is not meant to be comprehensive. I am trying to keep it light and not too overwhelming. The selection of articles is opinionated.
Contributing to this list
Feel free to open a PR to contribute! I will not be adding everything: as stated above, I am trying to keep the list concise.
Must-read books
I've found these books incredibly inspiring:

The Pragmatic Programmer: From Journeyman to
Master üìñ: hands-on the most inspiring and useful book I've read about programming.
Code Complete: A Practical Handbook of Software
Construction üìñ: a nice addition to The Pragmatic Programmer, gives you the necessary framework to talk about code.
Release It! üìñ: this books goes beyond code and gives you best practices for building production-ready software. It will give you about 3 years worth of real-world experience.
Scalability Rules: 50 Principles for Scaling Web
Sites üìñ
The Linux Programming Interface: A Linux and UNIX System Programming Handbook üìñ: outside of teaching you almost everything you need to know about Linux, this book will give you insights into how software evolves, and the value of having simple & elegant interfaces.
Structure and interpretation of Computer Programs (free) üìñ: One of the most influential textbooks in Computer Science (written and used at MIT), SICP has been influential in CS education. Byte recommended SICP ""for professional programmers who are really interested in their profession"".

There are some free books available, including:

Professional software development üìñ: pretty complete and a good companion to this page. The free chapters are mostly focused on software development processes: design, testing, code writing, etc. - and not so much about tech itself.
List of free programming books

Must-read articles

Practical Advice for New Software Engineers
On Being A Senior Engineer
Lessons Learned in Software Development: one of those articles that give you years of hard-earned lessons, all in one short article. Must read.
Things I Learnt The Hard Way

Spec first, then code
Tests make better APIs
Future thinking is future trashing
Documentation is a love letter to your future self
Sometimes, it's better to let the application crash than do nothing
Understand and stay away of cargo cult
""Right tool for the job"" is just to push an agenda
Learn the basics functional programming
ALWAYS use timezones with your dates
ALWAYS use UTF-8
Create libraries
Learn to monitor
Explicit is better than implicit
Companies look for specialists but keep generalists longer
The best secure way to deal with user data is not to capture it
When it's time to stop, it's time to stop
You're responsible for the use of your code
Don't tell ""It's done"" when it's not
Pay attention on how people react to you
Beware of micro-aggressions
Keep a list of ""Things I Don't Know""


Signs that you're a good programmer
Signs that you're a bad programmer
7 absolute truths I unlearned as junior developer

Early in your career, you can learn 10x more in a supportive team in 1 year, than coding on your own
Every company has problems, every company has technical debt.
Being overly opinionated on topics you lack real-world experience with is pretty arrogant.
Many conference talks cover proof of concepts rather than real-world scenarios.
Dealing with legacy is completely normal.
Architecture is more important than nitpicking.
Focus on automation over documentation where appropriate.
Having some technical debt is healthy.
Senior engineers must develop many skills besides programming.
We‚Äôre all still junior in some areas.


How to Build Good Software

A good high-level summary of fundamental engineering practices.
The root cause of bad software has less to do with specific engineering choices, and more to do with how development projects are managed.
There is no such thing as platonically good engineering: it depends on your needs and the practical problems you encounter.
Software should be treated not as a static product, but as a living manifestation of the development team‚Äôs collective understanding.
Software projects rarely fail because they are too small; they fail because they get too big.
Beware of bureaucratic goals masquerading as problem statements. If our end goal is to make citizens‚Äô lives better, we need to explicitly acknowledge the things that are making their lives worse.
Building software is not about avoiding failure; it is about strategically failing as fast as possible to get the information you need to build something good.



Other general material and list of resources

The Imposter's Handbook - $30. From the author: ""Don't have a CS Degree? Neither do I - That's why I wrote this book.""
mr-mig/every-programmer-should-know: a collection of (mostly) technical things every software developer should know
Famous Laws Of Software Development

Courses

Google Tech Dev Guide

Topics
Algorithm and data structures

Read the CLRS. You can watch and download the course on OCW - there are newer courses as well.
Or The Algorithm Design Manual
Try out some algorithms on Project Euler

Let's be honest: algorithms can be a pretty dry topic. This quora question lists some funnier learning alternative, including:

Grokking Algorithms
Essential Algorithms

API design

Why you should use links, not keys, to represent relationships in APIs, Martin Nally, Google

""Using links instead of foreign keys to express relationships in APIs reduces the amount of information a client needs to know to use an API, and reduces the ways in which clients and servers are coupled to each other.""



Attitude, habits, mindset

Mastering Programming, Kent Beck.
The traits of a proficient programmer
The tao of programming: a set of parables about programming.
Taking Ownership Is The Most Effective Way to Get What You Want
Finding Time to Become a Better Developer
Ten minutes a day: how Alex Allain wrote a book in less than 200 hours, by writing 10 minutes every day.

Automation

Automation Should Be Like Iron Man, Not Ultron

Biases
Biases don't only apply to hiring. For instance, the fundamental attribution bias also applies when criticizing somebody's code written a long time ago, in a totally different context.

Cognitive bias cheat sheet. #hiring

Career growth

The Conjoined Triangles of Senior-Level Development looks into how to define a senior engineer.
Ten Principles for Growth as an Engineer, Dan Heller.
Don't Call Yourself a Programmer, Patrick McKenzie.
On being an Engineering Manager
The career advice I wish I had at 25

A career is a marathon, not a sprint
Most success comes from repetition, not new things
If work was really so great all the rich people would have the jobs
Management is about people, not things
Genuinely listen to others
Recognise that staff are people with finite emotional capacity
Don‚Äôt just network with people your own age
Never sacrifice personal ethics for a work reason
Recognise that failure is learning


Career advice I wish I‚Äôd been given when I was young

Don‚Äôt focus too much on long-term plans.
Find good thinkers and cold-call the ones you most admire.
Assign a high value to productivity over your whole lifespan.
Don‚Äôt over-optimise things that aren‚Äôt your top priority.
Read a lot, and read things that people around you aren‚Äôt reading.
Reflect seriously on what problem to prioritise solving.
Read more history.


Why Good Developers are Promoted into Unhappiness, Rob Walling. Or why management might not be for you.
A guide to using your career to help solve the world‚Äôs most pressing problems

Characters sets

The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)

Coding & code quality

Write code that is easy to delete, not easy to extend
The Ten Commandments of Egoless Programming
Clean Code: A Handbook of Agile Software Craftsmanship üìñ, Robert C. Martin. Describes numerous useful best practices. A bit long. There's also a clean code cheatsheet.
What Software Craftsmanship is about

We‚Äôre tired of writing crap.
We will not accept the stupid old lie about cleaning things up later.
We will not believe the claim that quick means dirty.
We will not allow anyone to force us to behave unprofessionally.



Computer science

What every computer science major should know
Teach Yourself Computer Science: an opinionated set of the best CS resources.

Configuration

The downsides of JSON for config files, Martin Tournoij.

Can't add comments
Excessive quotation and syntax noise
Using DC (declarative configuration) to control logic is often not a good idea.



Databases

A plain english introduction to CAP Theorem
NOSQL Patterns
NoSQL Databases: a Survey and Decision Guidance
Safe Operations For High Volume PostgreSQL (this is for PostgreSQL but works great for other DBs as well).
Zero downtime database migrations (code examples are using Rails but this works great for any programming language)
SQL styleguide
Algorithms Behind Modern Storage Systems, ACM Queue
Let's Build a Simple Database

Data formats

Falsehoods Programmers Believe About Phone Numbers, Google's libphonenumber.
Rules for Autocomplete: rough specifications for autocomplete fields

Data science

A dirty dozen: twelve common metric interpretation pitfalls in online controlled experiments

Debugging

Rubber Duck Problem Solving
Rubber Ducking
Five Whys
The Infinite Hows: this provides a strong criticism of the five whys method.
Linux Performance Analysis in 60,000 Milliseconds

Design (visual, UX, UI)
I highly recommend reading The Non-Designer's Design Book. This is a pretty short book that will give you some very actionable design advices.

If you're working on data, Edward Tufte's The Visual Display of Quantitative Information is considered a classic.
The Universal Principles of Design will give you enough vocabulary and concepts to describe design challenges into words.
Microsoft's Rest API guidelines
Book recommendations from HackerNews

Articles :

10 Usability Heuristics Every Designer Should Know

Visibility of System Status
The Match Between The System And The Real World
Every system should have a clear emergency exit
Don't forget that people spend 90% of their time interacting with other apps
Recognition Rather Than Recall (recognition = shallow form of retrieval from memory, e.g. a familiar person, recall = deeper retrieval)
‚ÄùPerfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.‚Äù ‚Äì Antoine de Saint-Exupery
Help Users Recognize, Diagnose, And Recover From Errors



Design (OO modeling, architecture, patterns, anti-patterns, etc.)
Here's a list of good books:

Design Patterns: Elements of Reusable Object-Oriented Software: dubbed ""the gang of four"", this is almost a required reading for any developer. A lot of those are a bit overkill for Python (because everything is an object, and dynamic typing), but the main idea (composition is better than inheritance) definitely is a good philosophy.
Patterns of Enterprise Application Architecture: learn about how database are used in real world applications. Mike Bayer's SQLAlchemy has been heavily influenced by this book.
Domain-Driven Design: Tackling Complexity in the Heart of Software üìñ, Eric Evans
Clean Architecture üìñ, Robert C. Martin. Uncle Bob proposes an architecture that leverages the Single Responsibility Principle to its fullest. A great way to start a new codebase. Also checkout the clean architecture cheatsheet.

One of the absolute references on architecture is Martin Fowler: checkout his Software Architecture Guide.
Articles:

101 Design Patterns & Tips for Developers
Python Design Patterns: For Sleek And Fashionable Code: a pretty simple introduction to common design patterns (Facade, Adapter, Decorator). A more complete list of design patterns implementation in Python on Github. Also a book here.
SourceMaking's Design Patterns seems to be a good web resource too.
O'Reilly's How to make mistakes in Python
Education of a Programmer: a developer's thoughts after 35 years in the industry. There's a particularly good section about design & complexity (see ""the end to end argument"", ""layering and componentization"").
Google's API Design Guide: a general guide to design networked API.
Domain-driven design, Wikipedia.
On the Spectrum of Abstraction üéû, Cheng Lou
The ‚ÄúBug-O‚Äù Notation, Dan Abramov

I maintain a list of antipatterns on another repo. This is a highly recommended read.

Inheritance vs. composition: a concrete example in Python. Another slightly longer one here. One last one, in Python 3.
Composition Instead Of Inheritance
Complexity and Strategy: interesting perspective on complexity and flexibility with really good examples (e.g. Google Apps Suite vs. Microsoft Office).


You can use an eraser on the drafting table or a sledge hammer on the construction site. (Frank Lloyd Wright)

Design: simplicity

Simple Made Easy üéû, Rich Hickey. This is an incredibly inspiring talk redefining simplicity, ease and complexity, and showing that solutions that look easy may actually harm your design.

Dev environment & tools

Awesome Dev Env

Tools

Glances: An eye on your system
HTTPie: a CLI, cURL-like tool for humans
jq: command-line JSON processor
tmux: terminal multiplexer
htop: an interactive process viewer for Linux

Diversity & inclusion
Check out my list of management
resources.
Documentation

Documentation-Driven Development
Writing automated tests for your documentation: this should be required, IMO. Testing code samples in your documentation ensures they never get outdated.
Documentation is king, Kenneth Reitz
Keep a Changelog

Dotfiles

Awesome dotfiles
My dotfiles

Articles

Setting Up a Mac Dev Machine From Zero to Hero With Dotfiles

Editors & IDE

Sublime Text essential plugins and resources
vim-awesome
Bram Moolenaar (Vim author), Seven habits of effective text editing (presentation). This is about Vim but it contains good lessons about why investing time in learning how to be productive with your text editors pays off.
VScode is one of the most popular text editors as of writing. Visual Studio Code Can Do That?, Smashing Magazine.

Engineering management
Checkout my list of management
resources.
Exercises
The best way to learn is to learn by doing.

danistefanovic/build-your-own-x: build your own (insert technology here)
The elevator programming game

Incident response (alerting, outages, firefighting)

Incident Response at Heroku
Blameless PostMortems and a Just Culture
My Philosophy on Alerting
A great example of a postmortem from Gitlab (01/31/2017) for an outage during which an engineer's action caused the irremediable loss of 6 hours of data.

Internet

How Does the Internet Work?
How the web works

Interviewing
Note: this is about you as an interviewee, not as an interviewer. To check out my list of resources for interviewers, go to my engineering-management repository.

System design interview for IT company
Technical Interview Megarepo: study materials for SE/CS technical interviews
How to Win the Coding Interview
I spent 3 months applying to jobs after a coding bootcamp. Here‚Äôs what I learned.
Top 10 algorithms in Interview Questions
Questions to ask your interviewer
Interactive Python coding interview challenges
Tech Interview Handbook

See also the exercises section in this document.
Learning & memorizing
Learn how to learn!

How I Rewired My Brain to Become Fluent in Math: subtitled the building blocks of understanding are memorization and repetition.
One Sure-Fire Way to Improve Your Coding: reading code!
Tips for learning programming
You can increase your intelligence: 5 ways to maximize your cognitive potential: forgive the clickbait title, it‚Äôs actually a good article.
How to ask good questions, Julia Evans.
Stop Learning Frameworks
Learning How to Learn: powerful mental tools to help you master tough subjects
Why books don‚Äôt work, Andy Matuschak.

""As a medium, books are surprisingly bad at conveying knowledge, and readers mostly don‚Äôt realize it.""
""In learning sciences, we call this model ‚Äútransmissionism.‚Äù It‚Äôs the notion that knowledge can be directly transmitted from teacher to student, like transcribing text from one page onto another. If only!""
""By re-testing yourself on material you‚Äôve learned over expanding intervals, you can cheaply and reliably commit huge volumes of information to long-term memory.""


Strategies, Tips, and Tricks for Anki: those advices work for any tool actually

Add images. Our brains are wired visually, so this helps retention.
Don't add things you don't understand.
Don't add cards memorizing entire lists.
Write it out. For wrong answers, I'll write it on paper. The act of writing is meditative. I really enjoy this.
Keep on asking yourself why? why does this work? why does it work this way? Force yourself to understand the root of a topic.
Cornell Method: when reading a topic, write out questions on the margins to quiz yourself.
Pretend you have to teach it
Use mnemonics phrases like PEMDAS for lists and other hard-to-remember topics.
Delete cards that don't make sense or you don't want to remember anymore.


Effective learning: Twenty rules of formulating knowledge

Build upon the basics
Stick to the minimum information principle: the material you learn must be formulated in as simple way as it is
Cloze deletion is easy and effective: Kaleida's mission was to create a ... It finally produced one, called Script X. But it took three years
Graphic deletion is as good as cloze deletion
Avoid sets
Avoid enumerations
Combat interference - even the simplest items can be completely intractable if they are similar to other items. Use examples, context cues, vivid illustrations, refer to emotions, and to your personal life
Personalize and provide examples - personalization might be the most effective way of building upon other memories. Your personal life is a gold mine of facts and events to refer to. As long as you build a collection for yourself, use personalization richly to build upon well established memories
Provide sources - sources help you manage the learning process, updating your knowledge, judging its reliability, or importance
Prioritize - effective learning is all about prioritizing.


How to Remember Anything You Really Want to Remember, Backed by Science

Quiz yourself
Summarize and share with someone else.
Connect what you just learned to experiences you previously had.



Richard Feynman's Learning Strategy:

Step 1: Continually ask ""Why?‚Äù
Step 2: When you learn something, learn it to where you can explain it to a child.
Step 3: Instead of arbitrarily memorizing things, look for the explanation that makes it obvious.


Most people overestimate what they can do in 1 year and underestimate what they can do in a decade.
‚Äì Bill Gates


Frankly, though, I think most people can learn a lot more than they think they can. They sell themselves short without trying.
One bit of advice: it is important to view knowledge as sort of a semantic tree‚Ää‚Äî‚Äämake sure you understand the fundamental principles, ie the trunk and big branches, before you get into the details/leaves or there is nothing for them to hang on to.
‚Äî Elon Musk


""Experience is something you don't get until just after you need it.""
‚Äï Steven Wright

Low-level

Back to Basics, Joel Spolsky. Explains why learning low level programming is important.

I think that some of the biggest mistakes people make even at the highest architectural levels come from having a weak or broken understanding of a few simple things at the very lowest levels.



Network

The Great Confusion About URIs

A URI is a string of characters that identifies a resource. Its syntax is <scheme>:<authority><path>?<query>#<fragment>, where only <scheme> and <path> are mandatory. URL and URN are URIs.
A URL is a string of characters that identifies a resource located on a computer network. Its syntax depends on its scheme. E.g. mailto:billg@microsoft.com.
A URN is a string of characters that uniquely identifies a resource. Its syntax is urn:<namespace identifier>:<namespace specific string>. E.g. urn:isbn:9780062301239



Problem solving

Dealing with Hard Problems

Project management
See Project management section on my engineering-management list of resources.
Programming languages
I would recommend learning:

JavaScript and maybe another interpreted language (Python, Ruby, etc.). Interpreted languages are useful for quick one-off automation scripts, and fastest to write for interviews. JavaScript is ubiquitous.
A compiled language (Java, C, C++...).
A more recent language to see where the industry is going (as of writing, Go, Swift, Rust, Elixir...).
A language that has first-class support for functional programming (Haskell, Scala, Clojure...).

A bit more reading:

A brief, incomplete, mostly wrong history of programming languages
Types
Resources To Help You To Create Programming Languages
Effective Programs - 10 Years of Clojure üéû, Rich Hickey. The author of Clojure reflects on his programming experience and explains the rationale behind some of Clojure's key design decisions.
Learn more programming languages, even if you won't use them, Thorsten Ball

These new perspectives, these ideas and patterns ‚Äî they linger, they stay with you, even if you end up in another language. And that is powerful enough to keep on learning new languages, because one of the best things that can happen to you when you‚Äôre trying to solve a problem is a change of perspective.




There are only two kinds of languages: the ones people complain about and the ones nobody uses.

-- Bjarne Stroustrup (C++ creator)
Python
For Python feel free to checkout my professional Python education repository.
JavaScript
JavaScript is such a pervasive language that it's almost required learning.

mbeaudru/modern-js-cheatsheet: cheatsheet for the JavaScript knowledge you will frequently encounter in modern projects.

FP vs. OOP

Jargon from the functional programming world
Goodbye, Object Oriented Programming
Functional Programming & Haskell: some good reasons to learn FP!
Functional Programming Fundamentals: short introduction to FP and its advantages.
OO vs FP, Robert C. Martin, The Clean Code Blog. A pretty interesting take on the differences between OOP and FP from an expert in OOP.

OO is not about state. Objects are bags of functions, not bags of data.
Functional Programs, like OO Programs, are composed of functions that operate on data.
FP imposes discipline upon assignment.
OO imposes discipline on function pointers.
The principles of software design still apply, regardless of your programming style. The fact that you‚Äôve decided to use a language that doesn‚Äôt have an assignment operator does not mean that you can ignore the Single Responsibility Principle.



Over-engineering

10 modern software over-engineering mistakes
A good example of over-engineering: the Juicero press (April 2017)


‚ÄúA complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over, beginning with a working simple system.‚Äù

John Gall, General systemantics, an essay on how systems work, and especially how they fail..., 1975 (this quote is sometime referred as ""Galls' law"")

""Software engineering is what happens to programming
when you add time and other programmers.""

Rob Pike, Go at Google: Language Design in the Service of Software Engineering
Reading

Papers we love: papers from the computer science community to read and discuss. Can be a good source of inspiration of solving your design problems.
The morning paper: one CS research paper explained every morning.

Releasing & deploying

How We Release So Frequently
How to deploy software, Zach Holman
BlueGreenDeployment, Martin Fowler
Move fast and break nothing, Zach Holman
Flipping out, flickr. One of the first articles about feature flags.
Production Readiness Checklist, Gruntwork
Checklist: what had to be done before deploying microservices to production

Security

Penetration Testing Tools Cheat Sheet
My First 10 Minutes On a Server - Primer for Securing Ubuntu
A practical guide to securing macOS
Web Developer Security Checklist
Reckon you've seen some stupid security things?: everything not to do.

Shell

Awesome Shell
Bash Hackers Wiki
dylanaraps/pure-bash-bible: a collection of pure bash alternatives to external processes.
Master the command line, in one page must read

System architecture

High Scalability: great blog about system architecture, its weekly review article are packed with numerous insights and interesting technology reviews. Checkout the all-times favorites.
6 Rules of thumb to build blazing fast web server applications
Deep Lessons From Google And EBay On Building Ecosystems Of Microservices
Service oriented architecture: scaling the Uber engineering codebase as we grow
The twelve-factor app
Scalable Web Architecture and Distributed Systems
Introduction to Architecting Systems for Scale
A Distributed Systems Reading List
Services Engineering Reading List
System Design Cheatsheet
The Log: What every software engineer should know about real-time data's unifying abstraction: one of those classical articles that everyone should read.
Learn how to design large scale systems. Prep for the system design interview (Github repo)
Turning the database outside-out with Apache Samza
Building Microservices üìñ, Sam Newman (quite complete discussion of microservices)
Designing Data-Intensive Applications

Scalability

I already mentioned the book Scalability rules above, but there's also a presentation about it.

Stability

I already mentioned the book Release it! above. There's also a presentation from the author.

Resiliency

The Walking Dead - A Survival Guide to Resilient Applications
Defensive Programming & Resilient systems in Real World (TM)
Full Stack Fest: Architectural Patterns of Resilient Distributed Systems
Resilience Engineering Notes: comprehensive list of resources on resilience engineering

Site Reliability Engineering (SRE)
Books:

Site Reliability Engineering üìñ

Written by members of Google's SRE team, with a comprehensive analysis of the entire software lifecycle - how to build, deploy, monitor, and maintain large scale systems.



Articles:

Graduating from Bootcamp and interested in becoming a Site Reliability Engineer?: a great collection of resources to learn about SRE.
Operating a Large, Distributed System in a Reliable Way: Practices I Learned

A good summary of processes to implement.



Technical debt

TechnicalDebt, Martin Fowler.

Testing

Why bother writing tests at all?, Dave Cheney. A good intro to the topic.

Even if you don‚Äôt, someone will test your software
The majority of testing should be performed by development teams
Manual testing should not be the majority of your testing because manual testing is O(n)
Tests are the critical component that ensure you can always ship your master branch
Tests lock in behaviour
Tests give you confidence to change someone else‚Äôs code


Testing Strategies in a Microservices Architecture (Martin Fowler) is an awesome resources explaining how to test a service properly.
A Quick Puzzle to Test Your Problem Solving... and a great way to learn about confirmation bias and why you're mostly writing positive test cases.
The test pyramid
Just Say No to More End-to-End Tests
End-To-End Testing Considered Harmful
Move fast and don't break things (presentation)
Eradicating Non-Determinism in Tests, Martin Fowler
""I get paid for code that works, not for tests""
Software Testing Anti-patterns, Kostis Kapelonis.
Write tests. Not too many. Mostly integration. for a contrarian take about unit testing...
Testing is Not for Beginners: why learning to test is hard. This shouldn't demotivate you though!

Tools

DevDocs API Documentation: a repository for multiple API docs (see also Dash for macOS).
DevChecklist: a collaborative space for sharing checklists that help ensure software quality

Version control (Git)

Git Cheat Sheet
git-tips
Git from the inside out

Work ethics, productivity & work/life balance

Your non-linear problem of 90% utilization, Jason Cohen: why constantly running at 90% utilization is actually counter-productive.
Evidence-based advice on how to be successful in any jobs: most self-help advices are not research-based. The ones listed in this article are.
The Complete Guide to Deep Work

The ability to perform deep work is becoming increasingly rare at exactly the same time it is becoming increasingly valuable in our economy.
Choose Your Deep Work Strategy
Build a Deep Work Routine
Discipline #1: Focus on the Wildly Important
Discipline #2: Act on the Lead Measures
Discipline #4: Create a Cadence of Accountability
Our Ability for Deep Work is Finite
The Craftsman Approach to Tool Selection
Stop Using Social Media
Get Your Boss on Board With Deep Work


Every productivity thought I've ever had, as concisely as possible

Context intentionality as the key difference between home and every other place on planet earth
Rules are about exceptions



Web development

grab/front-end-guide: a study guide and introduction to the modern front end stack.
Maintainable CSS
Front-End Developer Handbook 2019, Cody Lindley
A Directory of design and front-end resources

Writing

Undervalued Software Engineering Skills: Writing Well

From the HN discussion: ""Writing a couple of pages of design docs or an Amazon-style 6 pager or whatever might take a few days of work, but can save weeks or more of wasted implementation time when you realise your system design was flawed or it doesn't address any real user needs.""



Writing for performance

Numbers Everyone Should Know
Latency numbers every programmer should know
Rob Pike's 5 Rules of Programming

Concepts
Glossary

DDD
TDD
BDD
CAP theorem
OOP
YAGNI
DRY
KISS
SOLID
GRASP
Make it run, make it right, make it fast

",table contents professional programming contributing list mustread books mustread articles general material list resources courses topics algorithm data structures api design attitude habits mindset automation biases career growth characters sets coding code quality computer science configuration databases data formats data science debugging design visual ux ui design oo modeling architecture patterns antipatterns etc design simplicity dev environment tools diversity inclusion documentation dotfiles editors ide engineering management exercises incident response alerting outages firefighting internet interviewing learning memorizing lowlevel network problem solving project management programming languages python javascript fp vs oop overengineering reading releasing deploying security shell system architecture scalability stability resiliency site reliability engineering sre technical debt testing tools version control git work ethics productivity worklife balance web development writing writing performance concepts professional programming give six hours chop tree spend first four sharpening axe abraham lincoln collection fullstack resources programmers goal page make proficient developer youll find resources ive found truly inspiring become timeless classics page meant comprehensive trying keep light overwhelming selection articles opinionated contributing list feel free open pr contribute adding everything stated trying keep list concise mustread books ive found books incredibly inspiring pragmatic programmer journeyman master handson inspiring useful book ive read programming code complete practical handbook software construction nice addition pragmatic programmer gives necessary framework talk code release books goes beyond code gives best practices building productionready software give years worth realworld experience scalability rules principles scaling web sites linux programming interface linux unix system programming handbook outside teaching almost everything need know linux book give insights software evolves value simple elegant interfaces structure interpretation computer programs free one influential textbooks computer science written used mit sicp influential cs education byte recommended sicp professional programmers really interested profession free books available including professional software development pretty complete good companion page free chapters mostly focused software development processes design testing code writing etc much tech list free programming books mustread articles practical advice new software engineers senior engineer lessons learned software development one articles give years hardearned lessons one short article must read things learnt hard way spec first code tests make better apis future thinking future trashing documentation love letter future self sometimes better let application crash nothing understand stay away cargo cult right tool job push agenda learn basics functional programming always use timezones dates always use utf create libraries learn monitor explicit better implicit companies look specialists keep generalists longer best secure way deal user data capture time stop time stop youre responsible use code dont tell done pay attention people react beware microaggressions keep list things dont know signs youre good programmer signs youre bad programmer absolute truths unlearned junior developer early career learn x supportive team year coding every company problems every company technical debt overly opinionated topics lack realworld experience pretty arrogant many conference talks cover proof concepts rather realworld scenarios dealing legacy completely normal architecture important nitpicking focus automation documentation appropriate technical debt healthy senior engineers must develop many skills besides programming still junior areas build good software good highlevel summary fundamental engineering practices root cause bad software less specific engineering choices development projects managed thing platonically good engineering depends needs practical problems encounter software treated static product living manifestation development teams collective understanding software projects rarely fail small fail get big beware bureaucratic goals masquerading problem statements end goal make citizens lives better need explicitly acknowledge things making lives worse building software avoiding failure strategically failing fast possible get information need build something good general material list resources imposters handbook author dont cs degree neither thats wrote book mrmigeveryprogrammershouldknow collection mostly technical things every software developer know famous laws software development courses google tech dev guide topics algorithm data structures read clrs watch download course ocw newer courses well algorithm design manual try algorithms project euler lets honest algorithms pretty dry topic quora question lists funnier learning alternative including grokking algorithms essential algorithms api design use links keys represent relationships apis martin nally google using links instead foreign keys express relationships apis reduces amount information client needs know use api reduces ways clients servers coupled attitude habits mindset mastering programming kent beck traits proficient programmer tao programming set parables programming taking ownership effective way get want finding time become better developer ten minutes day alex allain wrote book less hours writing minutes every day automation automation like iron man ultron biases biases dont apply hiring instance fundamental attribution bias also applies criticizing somebodys code written long time ago totally different context cognitive bias cheat sheet hiring career growth conjoined triangles seniorlevel development looks define senior engineer ten principles growth engineer dan heller dont call programmer patrick mckenzie engineering manager career advice wish career marathon sprint success comes repetition new things work really great rich people would jobs management people things genuinely listen others recognise staff people finite emotional capacity dont network people age never sacrifice personal ethics work reason recognise failure learning career advice wish id given young dont focus much longterm plans find good thinkers coldcall ones admire assign high value productivity whole lifespan dont overoptimise things arent top priority read lot read things people around arent reading reflect seriously problem prioritise solving read history good developers promoted unhappiness rob walling management might guide using career help solve worlds pressing problems characters sets absolute minimum every software developer absolutely positively must know unicode character sets excuses coding code quality write code easy delete easy extend ten commandments egoless programming clean code handbook agile software craftsmanship robert c martin describes numerous useful best practices bit long theres also clean code cheatsheet software craftsmanship tired writing crap accept stupid old lie cleaning things later believe claim quick means dirty allow anyone force us behave unprofessionally computer science every computer science major know teach computer science opinionated set best cs resources configuration downsides json config files martin tournoij cant add comments excessive quotation syntax noise using dc declarative configuration control logic often good idea databases plain english introduction cap theorem nosql patterns nosql databases survey decision guidance safe operations high volume postgresql postgresql works great dbs well zero downtime database migrations code examples using rails works great programming language sql styleguide algorithms behind modern storage systems acm queue lets build simple database data formats falsehoods programmers believe phone numbers googles libphonenumber rules autocomplete rough specifications autocomplete fields data science dirty dozen twelve common metric interpretation pitfalls online controlled experiments debugging rubber duck problem solving rubber ducking five whys infinite hows provides strong criticism five whys method linux performance analysis milliseconds design visual ux ui highly recommend reading nondesigners design book pretty short book give actionable design advices youre working data edward tuftes visual display quantitative information considered classic universal principles design give enough vocabulary concepts describe design challenges words microsofts rest api guidelines book recommendations hackernews articles usability heuristics every designer know visibility system status match system real world every system clear emergency exit dont forget people spend time interacting apps recognition rather recall recognition shallow form retrieval memory eg familiar person recall deeper retrieval perfection achieved nothing add nothing left take away antoine de saintexupery help users recognize diagnose recover errors design oo modeling architecture patterns antipatterns etc heres list good books design patterns elements reusable objectoriented software dubbed gang four almost required reading developer lot bit overkill python everything object dynamic typing main idea composition better inheritance definitely good philosophy patterns enterprise application architecture learn database used real world applications mike bayers sqlalchemy heavily influenced book domaindriven design tackling complexity heart software eric evans clean architecture robert c martin uncle bob proposes architecture leverages single responsibility principle fullest great way start new codebase also checkout clean architecture cheatsheet one absolute references architecture martin fowler checkout software architecture guide articles design patterns tips developers python design patterns sleek fashionable code pretty simple introduction common design patterns facade adapter decorator complete list design patterns implementation python github also book sourcemakings design patterns seems good web resource oreillys make mistakes python education programmer developers thoughts years industry theres particularly good section design complexity see end end argument layering componentization googles api design guide general guide design networked api domaindriven design wikipedia spectrum abstraction cheng lou bugo notation dan abramov maintain list antipatterns another repo highly recommended read inheritance vs composition concrete example python another slightly longer one one last one python composition instead inheritance complexity strategy interesting perspective complexity flexibility really good examples eg google apps suite vs microsoft office use eraser drafting table sledge hammer construction site frank lloyd wright design simplicity simple made easy rich hickey incredibly inspiring talk redefining simplicity ease complexity showing solutions look easy may actually harm design dev environment tools awesome dev env tools glances eye system httpie cli curllike tool humans jq commandline json processor tmux terminal multiplexer htop interactive process viewer linux diversity inclusion check list management resources documentation documentationdriven development writing automated tests documentation required imo testing code samples documentation ensures never get outdated documentation king kenneth reitz keep changelog dotfiles awesome dotfiles dotfiles articles setting mac dev machine zero hero dotfiles editors ide sublime text essential plugins resources vimawesome bram moolenaar vim author seven habits effective text editing presentation vim contains good lessons investing time learning productive text editors pays vscode one popular text editors writing visual studio code smashing magazine engineering management checkout list management resources exercises best way learn learn danistefanovicbuildyourownx build insert technology elevator programming game incident response alerting outages firefighting incident response heroku blameless postmortems culture philosophy alerting great example postmortem gitlab outage engineers action caused irremediable loss hours data internet internet work web works interviewing note interviewee interviewer check list resources interviewers go engineeringmanagement repository system design interview company technical interview megarepo study materials secs technical interviews win coding interview spent months applying jobs coding bootcamp heres learned top algorithms interview questions questions ask interviewer interactive python coding interview challenges tech interview handbook see also exercises section document learning memorizing learn learn rewired brain become fluent math subtitled building blocks understanding memorization repetition one surefire way improve coding reading code tips learning programming increase intelligence ways maximize cognitive potential forgive clickbait title actually good article ask good questions julia evans stop learning frameworks learning learn powerful mental tools help master tough subjects books dont work andy matuschak medium books surprisingly bad conveying knowledge readers mostly dont realize learning sciences call model transmissionism notion knowledge directly transmitted teacher student like transcribing text one page onto another retesting material youve learned expanding intervals cheaply reliably commit huge volumes information longterm memory strategies tips tricks anki advices work tool actually add images brains wired visually helps retention dont add things dont understand dont add cards memorizing entire lists write wrong answers ill write paper act writing meditative really enjoy keep asking work work way force understand root topic cornell method reading topic write questions margins quiz pretend teach use mnemonics phrases like pemdas lists hardtoremember topics delete cards dont make sense dont want remember anymore effective learning twenty rules formulating knowledge build upon basics stick minimum information principle material learn must formulated simple way cloze deletion easy effective kaleidas mission create finally produced one called script x took three years graphic deletion good cloze deletion avoid sets avoid enumerations combat interference even simplest items completely intractable similar items use examples context cues vivid illustrations refer emotions personal life personalize provide examples personalization might effective way building upon memories personal life gold mine facts events refer long build collection use personalization richly build upon well established memories provide sources sources help manage learning process updating knowledge judging reliability importance prioritize effective learning prioritizing remember anything really want remember backed science quiz summarize share someone else connect learned experiences previously richard feynmans learning strategy step continually ask step learn something learn explain child step instead arbitrarily memorizing things look explanation makes obvious people overestimate year underestimate decade bill gates frankly though think people learn lot think sell short without trying one bit advice important view knowledge sort semantic tree make sure understand fundamental principles ie trunk big branches get detailsleaves nothing hang elon musk experience something dont get need steven wright lowlevel back basics joel spolsky explains learning low level programming important think biggest mistakes people make even highest architectural levels come weak broken understanding simple things lowest levels network great confusion uris uri string characters identifies resource syntax schemeauthoritypathqueryfragment scheme path mandatory url urn uris url string characters identifies resource located computer network syntax depends scheme eg mailtobillgmicrosoftcom urn string characters uniquely identifies resource syntax urnnamespace identifiernamespace specific string eg urnisbn problem solving dealing hard problems project management see project management section engineeringmanagement list resources programming languages would recommend learning javascript maybe another interpreted language python ruby etc interpreted languages useful quick oneoff automation scripts fastest write interviews javascript ubiquitous compiled language java c c recent language see industry going writing go swift rust elixir language firstclass support functional programming haskell scala clojure bit reading brief incomplete mostly wrong history programming languages types resources help create programming languages effective programs years clojure rich hickey author clojure reflects programming experience explains rationale behind clojures key design decisions learn programming languages even wont use thorsten ball new perspectives ideas patterns linger stay even end another language powerful enough keep learning new languages one best things happen youre trying solve problem change perspective two kinds languages ones people complain ones nobody uses bjarne stroustrup c creator python python feel free checkout professional python education repository javascript javascript pervasive language almost required learning mbeaudrumodernjscheatsheet cheatsheet javascript knowledge frequently encounter modern projects fp vs oop jargon functional programming world goodbye object oriented programming functional programming haskell good reasons learn fp functional programming fundamentals short introduction fp advantages oo vs fp robert c martin clean code blog pretty interesting take differences oop fp expert oop oo state objects bags functions bags data functional programs like oo programs composed functions operate data fp imposes discipline upon assignment oo imposes discipline function pointers principles software design still apply regardless programming style fact youve decided use language doesnt assignment operator mean ignore single responsibility principle overengineering modern software overengineering mistakes good example overengineering juicero press april complex system works invariably found evolved simple system worked complex system designed scratch never works cannot patched make work start beginning working simple system john gall general systemantics essay systems work especially fail quote sometime referred galls law software engineering happens programming add time programmers rob pike go google language design service software engineering reading papers love papers computer science community read discuss good source inspiration solving design problems morning paper one cs research paper explained every morning releasing deploying release frequently deploy software zach holman bluegreendeployment martin fowler move fast break nothing zach holman flipping flickr one first articles feature flags production readiness checklist gruntwork checklist done deploying microservices production security penetration testing tools cheat sheet first minutes server primer securing ubuntu practical guide securing macos web developer security checklist reckon youve seen stupid security things everything shell awesome shell bash hackers wiki dylanarapspurebashbible collection pure bash alternatives external processes master command line one page must read system architecture high scalability great blog system architecture weekly review article packed numerous insights interesting technology reviews checkout alltimes favorites rules thumb build blazing fast web server applications deep lessons google ebay building ecosystems microservices service oriented architecture scaling uber engineering codebase grow twelvefactor app scalable web architecture distributed systems introduction architecting systems scale distributed systems reading list services engineering reading list system design cheatsheet log every software engineer know realtime datas unifying abstraction one classical articles everyone read learn design large scale systems prep system design interview github repo turning database outsideout apache samza building microservices sam newman quite complete discussion microservices designing dataintensive applications scalability already mentioned book scalability rules theres also presentation stability already mentioned book release theres also presentation author resiliency walking dead survival guide resilient applications defensive programming resilient systems real world tm full stack fest architectural patterns resilient distributed systems resilience engineering notes comprehensive list resources resilience engineering site reliability engineering sre books site reliability engineering written members googles sre team comprehensive analysis entire software lifecycle build deploy monitor maintain large scale systems articles graduating bootcamp interested becoming site reliability engineer great collection resources learn sre operating large distributed system reliable way practices learned good summary processes implement technical debt technicaldebt martin fowler testing bother writing tests dave cheney good intro topic even dont someone test software majority testing performed development teams manual testing majority testing manual testing tests critical component ensure always ship master branch tests lock behaviour tests give confidence change someone elses code testing strategies microservices architecture martin fowler awesome resources explaining test service properly quick puzzle test problem solving great way learn confirmation bias youre mostly writing positive test cases test pyramid say endtoend tests endtoend testing considered harmful move fast dont break things presentation eradicating nondeterminism tests martin fowler get paid code works tests software testing antipatterns kostis kapelonis write tests many mostly integration contrarian take unit testing testing beginners learning test hard shouldnt demotivate though tools devdocs api documentation repository multiple api docs see also dash macos devchecklist collaborative space sharing checklists help ensure software quality version control git git cheat sheet gittips git inside work ethics productivity worklife balance nonlinear problem utilization jason cohen constantly running utilization actually counterproductive evidencebased advice successful jobs selfhelp advices researchbased ones listed article complete guide deep work ability perform deep work becoming increasingly rare exactly time becoming increasingly valuable economy choose deep work strategy build deep work routine discipline focus wildly important discipline act lead measures discipline create cadence accountability ability deep work finite craftsman approach tool selection stop using social media get boss board deep work every productivity thought ive ever concisely possible context intentionality key difference home every place planet earth rules exceptions web development grabfrontendguide study guide introduction modern front end stack maintainable css frontend developer handbook cody lindley directory design frontend resources writing undervalued software engineering skills writing well hn discussion writing couple pages design docs amazonstyle pager whatever might take days work save weeks wasted implementation time realise system design flawed doesnt address real user needs writing performance numbers everyone know latency numbers every programmer know rob pikes rules programming concepts glossary ddd tdd bdd cap theorem oop yagni dry kiss solid grasp make run make right make fast,tabl content profession program contribut list mustread book mustread articl gener materi list resourc cours topic algorithm data structur api design attitud habit mindset autom bias career growth charact set code code qualiti comput scienc configur databas data format data scienc debug design visual ux ui design oo model architectur pattern antipattern etc design simplic dev environ tool divers inclus document dotfil editor ide engin manag exercis incid respons alert outag firefight internet interview learn memor lowlevel network problem solv project manag program languag python javascript fp vs oop overengin read releas deploy secur shell system architectur scalabl stabil resili site reliabl engin sre technic debt test tool version control git work ethic product worklif balanc web develop write write perform concept profession program give six hour chop tree spend first four sharpen axe abraham lincoln collect fullstack resourc programm goal page make profici develop youll find resourc ive found truli inspir becom timeless classic page meant comprehens tri keep light overwhelm select articl opinion contribut list feel free open pr contribut ad everyth state tri keep list concis mustread book ive found book incred inspir pragmat programm journeyman master handson inspir use book ive read program code complet practic handbook softwar construct nice addit pragmat programm give necessari framework talk code releas book goe beyond code give best practic build productionreadi softwar give year worth realworld experi scalabl rule principl scale web site linux program interfac linux unix system program handbook outsid teach almost everyth need know linux book give insight softwar evolv valu simpl eleg interfac structur interpret comput program free one influenti textbook comput scienc written use mit sicp influenti cs educ byte recommend sicp profession programm realli interest profess free book avail includ profession softwar develop pretti complet good companion page free chapter mostli focus softwar develop process design test code write etc much tech list free program book mustread articl practic advic new softwar engin senior engin lesson learn softwar develop one articl give year hardearn lesson one short articl must read thing learnt hard way spec first code test make better api futur think futur trash document love letter futur self sometim better let applic crash noth understand stay away cargo cult right tool job push agenda learn basic function program alway use timezon date alway use utf creat librari learn monitor explicit better implicit compani look specialist keep generalist longer best secur way deal user data captur time stop time stop your respons use code dont tell done pay attent peopl react bewar microaggress keep list thing dont know sign your good programm sign your bad programm absolut truth unlearn junior develop earli career learn x support team year code everi compani problem everi compani technic debt overli opinion topic lack realworld experi pretti arrog mani confer talk cover proof concept rather realworld scenario deal legaci complet normal architectur import nitpick focu autom document appropri technic debt healthi senior engin must develop mani skill besid program still junior area build good softwar good highlevel summari fundament engin practic root caus bad softwar less specif engin choic develop project manag thing platon good engin depend need practic problem encount softwar treat static product live manifest develop team collect understand softwar project rare fail small fail get big bewar bureaucrat goal masquerad problem statement end goal make citizen live better need explicitli acknowledg thing make live wors build softwar avoid failur strateg fail fast possibl get inform need build someth good gener materi list resourc impost handbook author dont cs degre neither that wrote book mrmigeveryprogrammershouldknow collect mostli technic thing everi softwar develop know famou law softwar develop cours googl tech dev guid topic algorithm data structur read clr watch download cours ocw newer cours well algorithm design manual tri algorithm project euler let honest algorithm pretti dri topic quora question list funnier learn altern includ grok algorithm essenti algorithm api design use link key repres relationship api martin nalli googl use link instead foreign key express relationship api reduc amount inform client need know use api reduc way client server coupl attitud habit mindset master program kent beck trait profici programm tao program set parabl program take ownership effect way get want find time becom better develop ten minut day alex allain wrote book less hour write minut everi day autom autom like iron man ultron bias bias dont appli hire instanc fundament attribut bia also appli critic somebodi code written long time ago total differ context cognit bia cheat sheet hire career growth conjoin triangl seniorlevel develop look defin senior engin ten principl growth engin dan heller dont call programm patrick mckenzi engin manag career advic wish career marathon sprint success come repetit new thing work realli great rich peopl would job manag peopl thing genuin listen other recognis staff peopl finit emot capac dont network peopl age never sacrific person ethic work reason recognis failur learn career advic wish id given young dont focu much longterm plan find good thinker coldcal one admir assign high valu product whole lifespan dont overoptimis thing arent top prioriti read lot read thing peopl around arent read reflect serious problem prioritis solv read histori good develop promot unhappi rob wall manag might guid use career help solv world press problem charact set absolut minimum everi softwar develop absolut posit must know unicod charact set excus code code qualiti write code easi delet easi extend ten command egoless program clean code handbook agil softwar craftsmanship robert c martin describ numer use best practic bit long there also clean code cheatsheet softwar craftsmanship tire write crap accept stupid old lie clean thing later believ claim quick mean dirti allow anyon forc us behav unprofession comput scienc everi comput scienc major know teach comput scienc opinion set best cs resourc configur downsid json config file martin tournoij cant add comment excess quotat syntax nois use dc declar configur control logic often good idea databas plain english introduct cap theorem nosql pattern nosql databas survey decis guidanc safe oper high volum postgresql postgresql work great db well zero downtim databas migrat code exampl use rail work great program languag sql styleguid algorithm behind modern storag system acm queue let build simpl databas data format falsehood programm believ phone number googl libphonenumb rule autocomplet rough specif autocomplet field data scienc dirti dozen twelv common metric interpret pitfal onlin control experi debug rubber duck problem solv rubber duck five whi infinit how provid strong critic five whi method linux perform analysi millisecond design visual ux ui highli recommend read nondesign design book pretti short book give action design advic your work data edward tuft visual display quantit inform consid classic univers principl design give enough vocabulari concept describ design challeng word microsoft rest api guidelin book recommend hackernew articl usabl heurist everi design know visibl system statu match system real world everi system clear emerg exit dont forget peopl spend time interact app recognit rather recal recognit shallow form retriev memori eg familiar person recal deeper retriev perfect achiev noth add noth left take away antoin de saintexuperi help user recogn diagnos recov error design oo model architectur pattern antipattern etc here list good book design pattern element reusabl objectori softwar dub gang four almost requir read develop lot bit overkil python everyth object dynam type main idea composit better inherit definit good philosophi pattern enterpris applic architectur learn databas use real world applic mike bayer sqlalchemi heavili influenc book domaindriven design tackl complex heart softwar eric evan clean architectur robert c martin uncl bob propos architectur leverag singl respons principl fullest great way start new codebas also checkout clean architectur cheatsheet one absolut refer architectur martin fowler checkout softwar architectur guid articl design pattern tip develop python design pattern sleek fashion code pretti simpl introduct common design pattern facad adapt decor complet list design pattern implement python github also book sourcemak design pattern seem good web resourc oreilli make mistak python educ programm develop thought year industri there particularli good section design complex see end end argument layer component googl api design guid gener guid design network api domaindriven design wikipedia spectrum abstract cheng lou bugo notat dan abramov maintain list antipattern anoth repo highli recommend read inherit vs composit concret exampl python anoth slightli longer one one last one python composit instead inherit complex strategi interest perspect complex flexibl realli good exampl eg googl app suit vs microsoft offic use eras draft tabl sledg hammer construct site frank lloyd wright design simplic simpl made easi rich hickey incred inspir talk redefin simplic eas complex show solut look easi may actual harm design dev environ tool awesom dev env tool glanc eye system httpie cli curllik tool human jq commandlin json processor tmux termin multiplex htop interact process viewer linux divers inclus check list manag resourc document documentationdriven develop write autom test document requir imo test code sampl document ensur never get outdat document king kenneth reitz keep changelog dotfil awesom dotfil dotfil articl set mac dev machin zero hero dotfil editor ide sublim text essenti plugin resourc vimawesom bram moolenaar vim author seven habit effect text edit present vim contain good lesson invest time learn product text editor pay vscode one popular text editor write visual studio code smash magazin engin manag checkout list manag resourc exercis best way learn learn danistefanovicbuildyourownx build insert technolog elev program game incid respons alert outag firefight incid respons heroku blameless postmortem cultur philosophi alert great exampl postmortem gitlab outag engin action caus irremedi loss hour data internet internet work web work interview note interviewe interview check list resourc interview go engineeringmanag repositori system design interview compani technic interview megarepo studi materi sec technic interview win code interview spent month appli job code bootcamp here learn top algorithm interview question question ask interview interact python code interview challeng tech interview handbook see also exercis section document learn memor learn learn rewir brain becom fluent math subtitl build block understand memor repetit one surefir way improv code read code tip learn program increas intellig way maxim cognit potenti forgiv clickbait titl actual good articl ask good question julia evan stop learn framework learn learn power mental tool help master tough subject book dont work andi matuschak medium book surprisingli bad convey knowledg reader mostli dont realiz learn scienc call model transmission notion knowledg directli transmit teacher student like transcrib text one page onto anoth retest materi youv learn expand interv cheapli reliabl commit huge volum inform longterm memori strategi tip trick anki advic work tool actual add imag brain wire visual help retent dont add thing dont understand dont add card memor entir list write wrong answer ill write paper act write medit realli enjoy keep ask work work way forc understand root topic cornel method read topic write question margin quiz pretend teach use mnemon phrase like pemda list hardtorememb topic delet card dont make sens dont want rememb anymor effect learn twenti rule formul knowledg build upon basic stick minimum inform principl materi learn must formul simpl way cloze delet easi effect kaleida mission creat final produc one call script x took three year graphic delet good cloze delet avoid set avoid enumer combat interfer even simplest item complet intract similar item use exampl context cue vivid illustr refer emot person life person provid exampl person might effect way build upon memori person life gold mine fact event refer long build collect use person richli build upon well establish memori provid sourc sourc help manag learn process updat knowledg judg reliabl import priorit effect learn priorit rememb anyth realli want rememb back scienc quiz summar share someon els connect learn experi previous richard feynman learn strategi step continu ask step learn someth learn explain child step instead arbitrarili memor thing look explan make obviou peopl overestim year underestim decad bill gate frankli though think peopl learn lot think sell short without tri one bit advic import view knowledg sort semant tree make sure understand fundament principl ie trunk big branch get detailsleav noth hang elon musk experi someth dont get need steven wright lowlevel back basic joel spolski explain learn low level program import think biggest mistak peopl make even highest architectur level come weak broken understand simpl thing lowest level network great confus uri uri string charact identifi resourc syntax schemeauthoritypathqueryfrag scheme path mandatori url urn uri url string charact identifi resourc locat comput network syntax depend scheme eg mailtobillgmicrosoftcom urn string charact uniqu identifi resourc syntax urnnamespac identifiernamespac specif string eg urnisbn problem solv deal hard problem project manag see project manag section engineeringmanag list resourc program languag would recommend learn javascript mayb anoth interpret languag python rubi etc interpret languag use quick oneoff autom script fastest write interview javascript ubiquit compil languag java c c recent languag see industri go write go swift rust elixir languag firstclass support function program haskel scala clojur bit read brief incomplet mostli wrong histori program languag type resourc help creat program languag effect program year clojur rich hickey author clojur reflect program experi explain rational behind clojur key design decis learn program languag even wont use thorsten ball new perspect idea pattern linger stay even end anoth languag power enough keep learn new languag one best thing happen your tri solv problem chang perspect two kind languag one peopl complain one nobodi use bjarn stroustrup c creator python python feel free checkout profession python educ repositori javascript javascript pervas languag almost requir learn mbeaudrumodernjscheatsheet cheatsheet javascript knowledg frequent encount modern project fp vs oop jargon function program world goodby object orient program function program haskel good reason learn fp function program fundament short introduct fp advantag oo vs fp robert c martin clean code blog pretti interest take differ oop fp expert oop oo state object bag function bag data function program like oo program compos function oper data fp impos disciplin upon assign oo impos disciplin function pointer principl softwar design still appli regardless program style fact youv decid use languag doesnt assign oper mean ignor singl respons principl overengin modern softwar overengin mistak good exampl overengin juicero press april complex system work invari found evolv simpl system work complex system design scratch never work cannot patch make work start begin work simpl system john gall gener systemant essay system work especi fail quot sometim refer gall law softwar engin happen program add time programm rob pike go googl languag design servic softwar engin read paper love paper comput scienc commun read discuss good sourc inspir solv design problem morn paper one cs research paper explain everi morn releas deploy releas frequent deploy softwar zach holman bluegreendeploy martin fowler move fast break noth zach holman flip flickr one first articl featur flag product readi checklist gruntwork checklist done deploy microservic product secur penetr test tool cheat sheet first minut server primer secur ubuntu practic guid secur maco web develop secur checklist reckon youv seen stupid secur thing everyth shell awesom shell bash hacker wiki dylanarapspurebashb collect pure bash altern extern process master command line one page must read system architectur high scalabl great blog system architectur weekli review articl pack numer insight interest technolog review checkout alltim favorit rule thumb build blaze fast web server applic deep lesson googl ebay build ecosystem microservic servic orient architectur scale uber engin codebas grow twelvefactor app scalabl web architectur distribut system introduct architect system scale distribut system read list servic engin read list system design cheatsheet log everi softwar engin know realtim data unifi abstract one classic articl everyon read learn design larg scale system prep system design interview github repo turn databas outsideout apach samza build microservic sam newman quit complet discuss microservic design dataintens applic scalabl alreadi mention book scalabl rule there also present stabil alreadi mention book releas there also present author resili walk dead surviv guid resili applic defens program resili system real world tm full stack fest architectur pattern resili distribut system resili engin note comprehens list resourc resili engin site reliabl engin sre book site reliabl engin written member googl sre team comprehens analysi entir softwar lifecycl build deploy monitor maintain larg scale system articl graduat bootcamp interest becom site reliabl engin great collect resourc learn sre oper larg distribut system reliabl way practic learn good summari process implement technic debt technicaldebt martin fowler test bother write test dave cheney good intro topic even dont someon test softwar major test perform develop team manual test major test manual test test critic compon ensur alway ship master branch test lock behaviour test give confid chang someon els code test strategi microservic architectur martin fowler awesom resourc explain test servic properli quick puzzl test problem solv great way learn confirm bia your mostli write posit test case test pyramid say endtoend test endtoend test consid harm move fast dont break thing present erad nondetermin test martin fowler get paid code work test softwar test antipattern kosti kapeloni write test mani mostli integr contrarian take unit test test beginn learn test hard shouldnt demotiv though tool devdoc api document repositori multipl api doc see also dash maco devchecklist collabor space share checklist help ensur softwar qualiti version control git git cheat sheet gittip git insid work ethic product worklif balanc nonlinear problem util jason cohen constantli run util actual counterproduct evidencebas advic success job selfhelp advic researchbas one list articl complet guid deep work abil perform deep work becom increasingli rare exactli time becom increasingli valuabl economi choos deep work strategi build deep work routin disciplin focu wildli import disciplin act lead measur disciplin creat cadenc account abil deep work finit craftsman approach tool select stop use social media get boss board deep work everi product thought ive ever concis possibl context intention key differ home everi place planet earth rule except web develop grabfrontendguid studi guid introduct modern front end stack maintain css frontend develop handbook codi lindley directori design frontend resourc write undervalu softwar engin skill write well hn discuss write coupl page design doc amazonstyl pager whatev might take day work save week wast implement time realis system design flaw doesnt address real user need write perform number everyon know latenc number everi programm know rob pike rule program concept glossari ddd tdd bdd cap theorem oop yagni dri kiss solid grasp make run make right make fast,table content professional programming contributing list mustread book mustread article general material list resource course topic algorithm data structure api design attitude habit mindset automation bias career growth character set coding code quality computer science configuration database data format data science debugging design visual ux ui design oo modeling architecture pattern antipatterns etc design simplicity dev environment tool diversity inclusion documentation dotfiles editor ide engineering management exercise incident response alerting outage firefighting internet interviewing learning memorizing lowlevel network problem solving project management programming language python javascript fp v oop overengineering reading releasing deploying security shell system architecture scalability stability resiliency site reliability engineering sre technical debt testing tool version control git work ethic productivity worklife balance web development writing writing performance concept professional programming give six hour chop tree spend first four sharpening axe abraham lincoln collection fullstack resource programmer goal page make proficient developer youll find resource ive found truly inspiring become timeless classic page meant comprehensive trying keep light overwhelming selection article opinionated contributing list feel free open pr contribute adding everything stated trying keep list concise mustread book ive found book incredibly inspiring pragmatic programmer journeyman master handson inspiring useful book ive read programming code complete practical handbook software construction nice addition pragmatic programmer give necessary framework talk code release book go beyond code give best practice building productionready software give year worth realworld experience scalability rule principle scaling web site linux programming interface linux unix system programming handbook outside teaching almost everything need know linux book give insight software evolves value simple elegant interface structure interpretation computer program free one influential textbook computer science written used mit sicp influential c education byte recommended sicp professional programmer really interested profession free book available including professional software development pretty complete good companion page free chapter mostly focused software development process design testing code writing etc much tech list free programming book mustread article practical advice new software engineer senior engineer lesson learned software development one article give year hardearned lesson one short article must read thing learnt hard way spec first code test make better apis future thinking future trashing documentation love letter future self sometimes better let application crash nothing understand stay away cargo cult right tool job push agenda learn basic functional programming always use timezones date always use utf create library learn monitor explicit better implicit company look specialist keep generalist longer best secure way deal user data capture time stop time stop youre responsible use code dont tell done pay attention people react beware microaggressions keep list thing dont know sign youre good programmer sign youre bad programmer absolute truth unlearned junior developer early career learn x supportive team year coding every company problem every company technical debt overly opinionated topic lack realworld experience pretty arrogant many conference talk cover proof concept rather realworld scenario dealing legacy completely normal architecture important nitpicking focus automation documentation appropriate technical debt healthy senior engineer must develop many skill besides programming still junior area build good software good highlevel summary fundamental engineering practice root cause bad software le specific engineering choice development project managed thing platonically good engineering depends need practical problem encounter software treated static product living manifestation development team collective understanding software project rarely fail small fail get big beware bureaucratic goal masquerading problem statement end goal make citizen life better need explicitly acknowledge thing making life worse building software avoiding failure strategically failing fast possible get information need build something good general material list resource imposter handbook author dont c degree neither thats wrote book mrmigeveryprogrammershouldknow collection mostly technical thing every software developer know famous law software development course google tech dev guide topic algorithm data structure read clrs watch download course ocw newer course well algorithm design manual try algorithm project euler let honest algorithm pretty dry topic quora question list funnier learning alternative including grokking algorithm essential algorithm api design use link key represent relationship apis martin nally google using link instead foreign key express relationship apis reduces amount information client need know use api reduces way client server coupled attitude habit mindset mastering programming kent beck trait proficient programmer tao programming set parable programming taking ownership effective way get want finding time become better developer ten minute day alex allain wrote book le hour writing minute every day automation automation like iron man ultron bias bias dont apply hiring instance fundamental attribution bias also applies criticizing somebody code written long time ago totally different context cognitive bias cheat sheet hiring career growth conjoined triangle seniorlevel development look define senior engineer ten principle growth engineer dan heller dont call programmer patrick mckenzie engineering manager career advice wish career marathon sprint success come repetition new thing work really great rich people would job management people thing genuinely listen others recognise staff people finite emotional capacity dont network people age never sacrifice personal ethic work reason recognise failure learning career advice wish id given young dont focus much longterm plan find good thinker coldcall one admire assign high value productivity whole lifespan dont overoptimise thing arent top priority read lot read thing people around arent reading reflect seriously problem prioritise solving read history good developer promoted unhappiness rob walling management might guide using career help solve world pressing problem character set absolute minimum every software developer absolutely positively must know unicode character set excuse coding code quality write code easy delete easy extend ten commandment egoless programming clean code handbook agile software craftsmanship robert c martin describes numerous useful best practice bit long there also clean code cheatsheet software craftsmanship tired writing crap accept stupid old lie cleaning thing later believe claim quick mean dirty allow anyone force u behave unprofessionally computer science every computer science major know teach computer science opinionated set best c resource configuration downside json config file martin tournoij cant add comment excessive quotation syntax noise using dc declarative configuration control logic often good idea database plain english introduction cap theorem nosql pattern nosql database survey decision guidance safe operation high volume postgresql postgresql work great db well zero downtime database migration code example using rail work great programming language sql styleguide algorithm behind modern storage system acm queue let build simple database data format falsehood programmer believe phone number google libphonenumber rule autocomplete rough specification autocomplete field data science dirty dozen twelve common metric interpretation pitfall online controlled experiment debugging rubber duck problem solving rubber ducking five why infinite hows provides strong criticism five why method linux performance analysis millisecond design visual ux ui highly recommend reading nondesigners design book pretty short book give actionable design advice youre working data edward tuftes visual display quantitative information considered classic universal principle design give enough vocabulary concept describe design challenge word microsofts rest api guideline book recommendation hackernews article usability heuristic every designer know visibility system status match system real world every system clear emergency exit dont forget people spend time interacting apps recognition rather recall recognition shallow form retrieval memory eg familiar person recall deeper retrieval perfection achieved nothing add nothing left take away antoine de saintexupery help user recognize diagnose recover error design oo modeling architecture pattern antipatterns etc here list good book design pattern element reusable objectoriented software dubbed gang four almost required reading developer lot bit overkill python everything object dynamic typing main idea composition better inheritance definitely good philosophy pattern enterprise application architecture learn database used real world application mike bayer sqlalchemy heavily influenced book domaindriven design tackling complexity heart software eric evans clean architecture robert c martin uncle bob proposes architecture leverage single responsibility principle fullest great way start new codebase also checkout clean architecture cheatsheet one absolute reference architecture martin fowler checkout software architecture guide article design pattern tip developer python design pattern sleek fashionable code pretty simple introduction common design pattern facade adapter decorator complete list design pattern implementation python github also book sourcemakings design pattern seems good web resource oreillys make mistake python education programmer developer thought year industry there particularly good section design complexity see end end argument layering componentization google api design guide general guide design networked api domaindriven design wikipedia spectrum abstraction cheng lou bugo notation dan abramov maintain list antipatterns another repo highly recommended read inheritance v composition concrete example python another slightly longer one one last one python composition instead inheritance complexity strategy interesting perspective complexity flexibility really good example eg google apps suite v microsoft office use eraser drafting table sledge hammer construction site frank lloyd wright design simplicity simple made easy rich hickey incredibly inspiring talk redefining simplicity ease complexity showing solution look easy may actually harm design dev environment tool awesome dev env tool glance eye system httpie cli curllike tool human jq commandline json processor tmux terminal multiplexer htop interactive process viewer linux diversity inclusion check list management resource documentation documentationdriven development writing automated test documentation required imo testing code sample documentation ensures never get outdated documentation king kenneth reitz keep changelog dotfiles awesome dotfiles dotfiles article setting mac dev machine zero hero dotfiles editor ide sublime text essential plugins resource vimawesome bram moolenaar vim author seven habit effective text editing presentation vim contains good lesson investing time learning productive text editor pay vscode one popular text editor writing visual studio code smashing magazine engineering management checkout list management resource exercise best way learn learn danistefanovicbuildyourownx build insert technology elevator programming game incident response alerting outage firefighting incident response heroku blameless postmortem culture philosophy alerting great example postmortem gitlab outage engineer action caused irremediable loss hour data internet internet work web work interviewing note interviewee interviewer check list resource interviewer go engineeringmanagement repository system design interview company technical interview megarepo study material sec technical interview win coding interview spent month applying job coding bootcamp here learned top algorithm interview question question ask interviewer interactive python coding interview challenge tech interview handbook see also exercise section document learning memorizing learn learn rewired brain become fluent math subtitled building block understanding memorization repetition one surefire way improve coding reading code tip learning programming increase intelligence way maximize cognitive potential forgive clickbait title actually good article ask good question julia evans stop learning framework learning learn powerful mental tool help master tough subject book dont work andy matuschak medium book surprisingly bad conveying knowledge reader mostly dont realize learning science call model transmissionism notion knowledge directly transmitted teacher student like transcribing text one page onto another retesting material youve learned expanding interval cheaply reliably commit huge volume information longterm memory strategy tip trick anki advice work tool actually add image brain wired visually help retention dont add thing dont understand dont add card memorizing entire list write wrong answer ill write paper act writing meditative really enjoy keep asking work work way force understand root topic cornell method reading topic write question margin quiz pretend teach use mnemonic phrase like pemdas list hardtoremember topic delete card dont make sense dont want remember anymore effective learning twenty rule formulating knowledge build upon basic stick minimum information principle material learn must formulated simple way cloze deletion easy effective kaleidas mission create finally produced one called script x took three year graphic deletion good cloze deletion avoid set avoid enumeration combat interference even simplest item completely intractable similar item use example context cue vivid illustration refer emotion personal life personalize provide example personalization might effective way building upon memory personal life gold mine fact event refer long build collection use personalization richly build upon well established memory provide source source help manage learning process updating knowledge judging reliability importance prioritize effective learning prioritizing remember anything really want remember backed science quiz summarize share someone else connect learned experience previously richard feynman learning strategy step continually ask step learn something learn explain child step instead arbitrarily memorizing thing look explanation make obvious people overestimate year underestimate decade bill gate frankly though think people learn lot think sell short without trying one bit advice important view knowledge sort semantic tree make sure understand fundamental principle ie trunk big branch get detailsleaves nothing hang elon musk experience something dont get need steven wright lowlevel back basic joel spolsky explains learning low level programming important think biggest mistake people make even highest architectural level come weak broken understanding simple thing lowest level network great confusion uris uri string character identifies resource syntax schemeauthoritypathqueryfragment scheme path mandatory url urn uris url string character identifies resource located computer network syntax depends scheme eg mailtobillgmicrosoftcom urn string character uniquely identifies resource syntax urnnamespace identifiernamespace specific string eg urnisbn problem solving dealing hard problem project management see project management section engineeringmanagement list resource programming language would recommend learning javascript maybe another interpreted language python ruby etc interpreted language useful quick oneoff automation script fastest write interview javascript ubiquitous compiled language java c c recent language see industry going writing go swift rust elixir language firstclass support functional programming haskell scala clojure bit reading brief incomplete mostly wrong history programming language type resource help create programming language effective program year clojure rich hickey author clojure reflects programming experience explains rationale behind clojures key design decision learn programming language even wont use thorsten ball new perspective idea pattern linger stay even end another language powerful enough keep learning new language one best thing happen youre trying solve problem change perspective two kind language one people complain one nobody us bjarne stroustrup c creator python python feel free checkout professional python education repository javascript javascript pervasive language almost required learning mbeaudrumodernjscheatsheet cheatsheet javascript knowledge frequently encounter modern project fp v oop jargon functional programming world goodbye object oriented programming functional programming haskell good reason learn fp functional programming fundamental short introduction fp advantage oo v fp robert c martin clean code blog pretty interesting take difference oop fp expert oop oo state object bag function bag data functional program like oo program composed function operate data fp imposes discipline upon assignment oo imposes discipline function pointer principle software design still apply regardless programming style fact youve decided use language doesnt assignment operator mean ignore single responsibility principle overengineering modern software overengineering mistake good example overengineering juicero press april complex system work invariably found evolved simple system worked complex system designed scratch never work cannot patched make work start beginning working simple system john gall general systemantics essay system work especially fail quote sometime referred gall law software engineering happens programming add time programmer rob pike go google language design service software engineering reading paper love paper computer science community read discus good source inspiration solving design problem morning paper one c research paper explained every morning releasing deploying release frequently deploy software zach holman bluegreendeployment martin fowler move fast break nothing zach holman flipping flickr one first article feature flag production readiness checklist gruntwork checklist done deploying microservices production security penetration testing tool cheat sheet first minute server primer securing ubuntu practical guide securing macos web developer security checklist reckon youve seen stupid security thing everything shell awesome shell bash hacker wiki dylanarapspurebashbible collection pure bash alternative external process master command line one page must read system architecture high scalability great blog system architecture weekly review article packed numerous insight interesting technology review checkout alltimes favorite rule thumb build blazing fast web server application deep lesson google ebay building ecosystem microservices service oriented architecture scaling uber engineering codebase grow twelvefactor app scalable web architecture distributed system introduction architecting system scale distributed system reading list service engineering reading list system design cheatsheet log every software engineer know realtime data unifying abstraction one classical article everyone read learn design large scale system prep system design interview github repo turning database outsideout apache samza building microservices sam newman quite complete discussion microservices designing dataintensive application scalability already mentioned book scalability rule there also presentation stability already mentioned book release there also presentation author resiliency walking dead survival guide resilient application defensive programming resilient system real world tm full stack fest architectural pattern resilient distributed system resilience engineering note comprehensive list resource resilience engineering site reliability engineering sre book site reliability engineering written member google sre team comprehensive analysis entire software lifecycle build deploy monitor maintain large scale system article graduating bootcamp interested becoming site reliability engineer great collection resource learn sre operating large distributed system reliable way practice learned good summary process implement technical debt technicaldebt martin fowler testing bother writing test dave cheney good intro topic even dont someone test software majority testing performed development team manual testing majority testing manual testing test critical component ensure always ship master branch test lock behaviour test give confidence change someone el code testing strategy microservices architecture martin fowler awesome resource explaining test service properly quick puzzle test problem solving great way learn confirmation bias youre mostly writing positive test case test pyramid say endtoend test endtoend testing considered harmful move fast dont break thing presentation eradicating nondeterminism test martin fowler get paid code work test software testing antipatterns kostis kapelonis write test many mostly integration contrarian take unit testing testing beginner learning test hard shouldnt demotivate though tool devdocs api documentation repository multiple api doc see also dash macos devchecklist collaborative space sharing checklist help ensure software quality version control git git cheat sheet gittips git inside work ethic productivity worklife balance nonlinear problem utilization jason cohen constantly running utilization actually counterproductive evidencebased advice successful job selfhelp advice researchbased one listed article complete guide deep work ability perform deep work becoming increasingly rare exactly time becoming increasingly valuable economy choose deep work strategy build deep work routine discipline focus wildly important discipline act lead measure discipline create cadence accountability ability deep work finite craftsman approach tool selection stop using social medium get bos board deep work every productivity thought ive ever concisely possible context intentionality key difference home every place planet earth rule exception web development grabfrontendguide study guide introduction modern front end stack maintainable cs frontend developer handbook cody lindley directory design frontend resource writing undervalued software engineering skill writing well hn discussion writing couple page design doc amazonstyle pager whatever might take day work save week wasted implementation time realise system design flawed doesnt address real user need writing performance number everyone know latency number every programmer know rob pike rule programming concept glossary ddd tdd bdd cap theorem oop yagni dry kiss solid grasp make run make right make fast
77,Shell,"GitHub - tj/git-extras: GIT utilities -- repo summary, repl, changelog population, author commit percentages and more","Git Extras

Little git extras.
Screencasts
Just getting started? Check out these screencasts:

introduction -- covering git-ignore, git-setup, git-changelog, git-release, git-effort and more

Installation
See Installation page.
Commands
Go to Commands page for basic usage and examples.
GIT utilities -- repo summary, repl, changelog population, author commit percentages and more
Contributing
Interested in contributing? Awesome!
Please read Contributing before you make a PR, thanks!
",git extras little git extras screencasts getting started check screencasts introduction covering gitignore gitsetup gitchangelog gitrelease giteffort installation see installation page commands go commands page basic usage examples git utilities repo summary repl changelog population author commit percentages contributing interested contributing awesome please read contributing make pr thanks,git extra littl git extra screencast get start check screencast introduct cover gitignor gitsetup gitchangelog gitreleas giteffort instal see instal page command go command page basic usag exampl git util repo summari repl changelog popul author commit percentag contribut interest contribut awesom pleas read contribut make pr thank,git extra little git extra screencasts getting started check screencasts introduction covering gitignore gitsetup gitchangelog gitrelease giteffort installation see installation page command go command page basic usage example git utility repo summary repl changelog population author commit percentage contributing interested contributing awesome please read contributing make pr thanks
78,Shell,GitHub - source-foundry/Hack: A typeface designed for source code,"Hack






Don't like the development noise from the repository but want to keep up with changes? Check out our gitter Hack channel.  Have a quick question that doesn't require an issue report?  Drop by our gitter Help channel and ask away.
A typeface designed for source code
Hack is designed to be a workhorse typeface for source code. It has deep roots in the free, open source typeface community and expands upon the contributions of the Bitstream Vera & DejaVu projects.  The large x-height + wide aperture + low contrast design make it legible at commonly used source code text sizes with a sweet spot that runs in the 8 - 14 range.  The full set of changes to the upstream source are available in the changelog.
The project is in active development, and we welcome your input and contributions.  You may view our design objectives and instructions on how to contribute in CONTRIBUTING.md.
Frequently asked questions are answered in our FAQ.
Contents

Features
Quick installation
Package manager installation
Web font usage
Additional tools for font customization
Resources
Contributing
Build tools
Acknowledgments
License

Specimen

Overview of features

Typeface Name: Hack
Category: Monospaced
Character set support: ASCII, Latin-1, Latin Extended A, Greek, Cyrillic
Powerline Support: Yes, included by default
Included Styles: Regular, Bold, Italic, Bold Italic

Quick installation
NOTE ON FONT UPDATES
If you are updating your version of Hack, be sure to remove the previously installed version and clear your font cache first to avoid conflicts that can lead to platform-specific rendering errors.  Many platforms/distros offer package managers that automate this process. We release a Windows installer to automate the install/update process on the Windows platform. See below for additional details.
Linux

Download the latest version of Hack.
Extract the files from the archive (.zip).
Copy the font files to either your system font folder (often /usr/share/fonts/) or user font folder (often ~/.local/share/fonts/ or /usr/local/share/fonts).
Copy the font configuration file in config/fontconfig/ to either the system font configuration folder (often /etc/fonts/conf.d/) or the font user folder (often ~/.config/fontconfig/conf.d)
Clear and regenerate your font cache and indexes with the following command:

$ fc-cache -f -v

You can confirm that the fonts are installed with the following command:
$ fc-list | grep ""Hack""

Some Linux users may find that font rendering is improved on their distro with these instructions.
macOS

Download the latest version of Hack.
Extract the files from the archive (.zip) and click to open them.
Follow the instructions from your operating system.
Enjoy!

Windows

The Hack Windows Installer simplifies installation on the Windows platform.  The tool guides you through the installation process and addresses some common rendering issues that occur with font installs/updates on the Windows platform.  This tool is the recommended installation approach for Windows users.
Chrome/ChromeOS
To use with Secure Shell,
edit the following fields in Options:

font-family: ""Hack""
user-css: https://cdn.jsdelivr.net/npm/hack-font@3/build/web/hack.css

Package managers
We highly recommend the convenience of a community developed package manager or other auto-updating utility if this is available on your platform. While the package manager releases may be a bit delayed relative to the repository releases, the packages distributed through these package managers were designed to tune and automate font installs and updates on your system.
We are aware of Hack support in the following package managers (with associated package names):

Arch Linux: ttf-hack
Chocolatey (Windows): hackfont
Debian: fonts-hack-ttf
Fedora / CentOS: dnf-plugins-core :: heliocastro/hack-fonts :: hack-fonts
Gentoo Linux: media-fonts/hack
Homebrew Cask (OS X): caskroom/fonts/font-hack
Open BSD: fonts/hack-fonts
OpenSUSE: hack-fonts
Ubuntu: fonts-hack-ttf
Visual Studio Package Manager: hack.font

For installation issues with Hack packages, please contact the package maintainer directly.
Web font usage
Hack is available in the woff and woff2 web font formats. Bold and italic styles are included by default and work out-of-the-box via the <strong> and <em> tags.
Hack is available through the jsDelivr and cdnjs CDN services:


The following snippets provide examples of Hack web font use through the jsDelivr CDN.  Adjust the URL paths to those provided by cdnjs (click the link above to find the appropriate URL) to switch to the cdnjs CDN.
1. Add Hack to HTML
Include one of the following in the <head> section of your HTML file:
Subset web fonts
<link rel=""stylesheet"" href=""//cdn.jsdelivr.net/npm/hack-font@3/build/web/hack-subset.css"">
Full character set web fonts
<link rel=""stylesheet"" href=""//cdn.jsdelivr.net/npm/hack-font@3/build/web/hack.css"">
2. Add Hack to CSS
pre, code { font-family: Hack, monospace; }
See the WEBFONT_USAGE.md documentation for additional details, including instructions on how to download, host, and serve the web fonts on your web server.
Additional tools for Hack font customization
Customize your build with alternate glyph styles
The alt-hack library includes a (growing) collection of alternate glyph styles that can be used to customize your Hack fonts.  Don't like the default zero style?  Swap out the UFO design source with a slashed zero or dotted zero and build new fonts that work better for you.
We welcome contributions of new alternate glyph styles in the alt-hack repository.  Design something new that works well with rest of the typeface and submit a pull request to the alt-hack repository so that others can use it in their custom builds.
Detailed build instructions are available on the alt-hack repository README.md.  Font renaming instructions to support side-by-side installs with upstream Hack are available below.
Line spacing adjustments
font-line is a tool that modifies the default line spacing used in the Hack design (20% UPM).
The following gist installs font-line and modifies line spacing for all desktop font files contained in the same directory:

linespace.sh (download .zip)

Install modified and unmodified versions of Hack on the same system
If you modify the upstream Hack source or the released font binaries and would like to install your modified fonts on the same system with the Hack fonts as released here, you can use the fontname.py Python script to define a new font name in the binary files.  For example, you can install Hack on your platform along with a 15% UPM line spacing adjusted version as Hack Fifteen.  Modify default glyphs with those in our alt-hack repository or design your own and define your creation with any name that you'd like.  Following installation, your renamed fonts should show under the name that you define with the script so that you can switch between any of them as you need.
Usage details and examples are provided on the fontname.py repository README.
Resources

Full specimen
Changelog
Project website
Contributors

Contributing
We welcome contributions to Hack!  Please review our CONTRIBUTING.md document for details.
Built With
Hack is built with the following free, open source projects:

Font Bakery - post-compilation modifications
fontmake - UFO to ttf compilation
fontTools - OpenType table read/write
font-v - font version string editor
ink - stream editor for text file templating
OpenFV - open specification for semantic typeface versioning
sfnt2woff_zopfli - ttf to woff web font compilation
ttfautohint - ttf instruction sets
uni - Unicode code point search
ufodiff - UFO source diffs
ufoLib - UFO source file reads/writes/testing
ufolint - UFO source file linting for CI testing
woff2 - ttf to woff2 web font compilation

Acknowledgments
We would like to acknowledge and thank the jsDelivr and cdnjs teams for their support of the Hack project through their free web font CDN services.  We greatly appreciate the tremendous support of open source software development by the Semaphore CI team.  Their free CI testing service and rapid, excellent technical support have been tremendous assets for our project. Lastly, a huge thanks go out to all of those who do the unrecognized work to get Hack out there to users so that it is easy to access, install, upgrade, and use.  There are redistribution package managers, review committee members, testers, and others across platforms/distros/applications who perform this thankless work and often go unrecognized.  Your efforts are much appreciated.
License
Hack work is ¬© 2018 Source Foundry Authors. MIT License
Bitstream Vera Sans Mono ¬© 2003 Bitstream, Inc. (with Reserved Font Names Bitstream and Vera). Bitstream Vera License.
The font binaries are released under a license that permits unlimited print, desktop, web, and software embedding use for commercial and non-commercial applications.
See LICENSE.md for the full texts of the licenses.
",hack dont like development noise repository want keep changes check gitter hack channel quick question doesnt require issue report drop gitter help channel ask away typeface designed source code hack designed workhorse typeface source code deep roots free open source typeface community expands upon contributions bitstream vera dejavu projects large xheight wide aperture low contrast design make legible commonly used source code text sizes sweet spot runs range full set changes upstream source available changelog project active development welcome input contributions may view design objectives instructions contribute contributingmd frequently asked questions answered faq contents features quick installation package manager installation web font usage additional tools font customization resources contributing build tools acknowledgments license specimen overview features typeface name hack category monospaced character set support ascii latin latin extended greek cyrillic powerline support yes included default included styles regular bold italic bold italic quick installation note font updates updating version hack sure remove previously installed version clear font cache first avoid conflicts lead platformspecific rendering errors many platformsdistros offer package managers automate process release windows installer automate installupdate process windows platform see additional details linux download latest version hack extract files archive zip copy font files either system font folder often usrsharefonts user font folder often localsharefonts usrlocalsharefonts copy font configuration file configfontconfig either system font configuration folder often etcfontsconfd font user folder often configfontconfigconfd clear regenerate font cache indexes following command fccache f v confirm fonts installed following command fclist grep hack linux users may find font rendering improved distro instructions macos download latest version hack extract files archive zip click open follow instructions operating system enjoy windows hack windows installer simplifies installation windows platform tool guides installation process addresses common rendering issues occur font installsupdates windows platform tool recommended installation approach windows users chromechromeos use secure shell edit following fields options fontfamily hack usercss httpscdnjsdelivrnetnpmhackfontbuildwebhackcss package managers highly recommend convenience community developed package manager autoupdating utility available platform package manager releases may bit delayed relative repository releases packages distributed package managers designed tune automate font installs updates system aware hack support following package managers associated package names arch linux ttfhack chocolatey windows hackfont debian fontshackttf fedora centos dnfpluginscore heliocastrohackfonts hackfonts gentoo linux mediafontshack homebrew cask os x caskroomfontsfonthack open bsd fontshackfonts opensuse hackfonts ubuntu fontshackttf visual studio package manager hackfont installation issues hack packages please contact package maintainer directly web font usage hack available woff woff web font formats bold italic styles included default work outofthebox via strong em tags hack available jsdelivr cdnjs cdn services following snippets provide examples hack web font use jsdelivr cdn adjust url paths provided cdnjs click link find appropriate url switch cdnjs cdn add hack html include one following head section html file subset web fonts link relstylesheet hrefcdnjsdelivrnetnpmhackfontbuildwebhacksubsetcss full character set web fonts link relstylesheet hrefcdnjsdelivrnetnpmhackfontbuildwebhackcss add hack css pre code fontfamily hack monospace see webfontusagemd documentation additional details including instructions download host serve web fonts web server additional tools hack font customization customize build alternate glyph styles althack library includes growing collection alternate glyph styles used customize hack fonts dont like default zero style swap ufo design source slashed zero dotted zero build new fonts work better welcome contributions new alternate glyph styles althack repository design something new works well rest typeface submit pull request althack repository others use custom builds detailed build instructions available althack repository readmemd font renaming instructions support sidebyside installs upstream hack available line spacing adjustments fontline tool modifies default line spacing used hack design upm following gist installs fontline modifies line spacing desktop font files contained directory linespacesh download zip install modified unmodified versions hack system modify upstream hack source released font binaries would like install modified fonts system hack fonts released use fontnamepy python script define new font name binary files example install hack platform along upm line spacing adjusted version hack fifteen modify default glyphs althack repository design define creation name youd like following installation renamed fonts show name define script switch need usage details examples provided fontnamepy repository readme resources full specimen changelog project website contributors contributing welcome contributions hack please review contributingmd document details built hack built following free open source projects font bakery postcompilation modifications fontmake ufo ttf compilation fonttools opentype table readwrite fontv font version string editor ink stream editor text file templating openfv open specification semantic typeface versioning sfntwoffzopfli ttf woff web font compilation ttfautohint ttf instruction sets uni unicode code point search ufodiff ufo source diffs ufolib ufo source file readswritestesting ufolint ufo source file linting ci testing woff ttf woff web font compilation acknowledgments would like acknowledge thank jsdelivr cdnjs teams support hack project free web font cdn services greatly appreciate tremendous support open source software development semaphore ci team free ci testing service rapid excellent technical support tremendous assets project lastly huge thanks go unrecognized work get hack users easy access install upgrade use redistribution package managers review committee members testers others across platformsdistrosapplications perform thankless work often go unrecognized efforts much appreciated license hack work source foundry authors mit license bitstream vera sans mono bitstream inc reserved font names bitstream vera bitstream vera license font binaries released license permits unlimited print desktop web software embedding use commercial noncommercial applications see licensemd full texts licenses,hack dont like develop nois repositori want keep chang check gitter hack channel quick question doesnt requir issu report drop gitter help channel ask away typefac design sourc code hack design workhors typefac sourc code deep root free open sourc typefac commun expand upon contribut bitstream vera dejavu project larg xheight wide apertur low contrast design make legibl commonli use sourc code text size sweet spot run rang full set chang upstream sourc avail changelog project activ develop welcom input contribut may view design object instruct contribut contributingmd frequent ask question answer faq content featur quick instal packag manag instal web font usag addit tool font custom resourc contribut build tool acknowledg licens specimen overview featur typefac name hack categori monospac charact set support ascii latin latin extend greek cyril powerlin support ye includ default includ style regular bold ital bold ital quick instal note font updat updat version hack sure remov previous instal version clear font cach first avoid conflict lead platformspecif render error mani platformsdistro offer packag manag autom process releas window instal autom installupd process window platform see addit detail linux download latest version hack extract file archiv zip copi font file either system font folder often usrsharefont user font folder often localsharefont usrlocalsharefont copi font configur file configfontconfig either system font configur folder often etcfontsconfd font user folder often configfontconfigconfd clear regener font cach index follow command fccach f v confirm font instal follow command fclist grep hack linux user may find font render improv distro instruct maco download latest version hack extract file archiv zip click open follow instruct oper system enjoy window hack window instal simplifi instal window platform tool guid instal process address common render issu occur font installsupd window platform tool recommend instal approach window user chromechromeo use secur shell edit follow field option fontfamili hack usercss httpscdnjsdelivrnetnpmhackfontbuildwebhackcss packag manag highli recommend conveni commun develop packag manag autoupd util avail platform packag manag releas may bit delay rel repositori releas packag distribut packag manag design tune autom font instal updat system awar hack support follow packag manag associ packag name arch linux ttfhack chocolatey window hackfont debian fontshackttf fedora cento dnfpluginscor heliocastrohackfont hackfont gentoo linux mediafontshack homebrew cask os x caskroomfontsfonthack open bsd fontshackfont opensus hackfont ubuntu fontshackttf visual studio packag manag hackfont instal issu hack packag pleas contact packag maintain directli web font usag hack avail woff woff web font format bold ital style includ default work outofthebox via strong em tag hack avail jsdelivr cdnj cdn servic follow snippet provid exampl hack web font use jsdelivr cdn adjust url path provid cdnj click link find appropri url switch cdnj cdn add hack html includ one follow head section html file subset web font link relstylesheet hrefcdnjsdelivrnetnpmhackfontbuildwebhacksubsetcss full charact set web font link relstylesheet hrefcdnjsdelivrnetnpmhackfontbuildwebhackcss add hack css pre code fontfamili hack monospac see webfontusagemd document addit detail includ instruct download host serv web font web server addit tool hack font custom custom build altern glyph style althack librari includ grow collect altern glyph style use custom hack font dont like default zero style swap ufo design sourc slash zero dot zero build new font work better welcom contribut new altern glyph style althack repositori design someth new work well rest typefac submit pull request althack repositori other use custom build detail build instruct avail althack repositori readmemd font renam instruct support sidebysid instal upstream hack avail line space adjust fontlin tool modifi default line space use hack design upm follow gist instal fontlin modifi line space desktop font file contain directori linespacesh download zip instal modifi unmodifi version hack system modifi upstream hack sourc releas font binari would like instal modifi font system hack font releas use fontnamepi python script defin new font name binari file exampl instal hack platform along upm line space adjust version hack fifteen modifi default glyph althack repositori design defin creation name youd like follow instal renam font show name defin script switch need usag detail exampl provid fontnamepi repositori readm resourc full specimen changelog project websit contributor contribut welcom contribut hack pleas review contributingmd document detail built hack built follow free open sourc project font bakeri postcompil modif fontmak ufo ttf compil fonttool opentyp tabl readwrit fontv font version string editor ink stream editor text file templat openfv open specif semant typefac version sfntwoffzopfli ttf woff web font compil ttfautohint ttf instruct set uni unicod code point search ufodiff ufo sourc diff ufolib ufo sourc file readswritestest ufolint ufo sourc file lint ci test woff ttf woff web font compil acknowledg would like acknowledg thank jsdelivr cdnj team support hack project free web font cdn servic greatli appreci tremend support open sourc softwar develop semaphor ci team free ci test servic rapid excel technic support tremend asset project lastli huge thank go unrecogn work get hack user easi access instal upgrad use redistribut packag manag review committe member tester other across platformsdistrosappl perform thankless work often go unrecogn effort much appreci licens hack work sourc foundri author mit licens bitstream vera san mono bitstream inc reserv font name bitstream vera bitstream vera licens font binari releas licens permit unlimit print desktop web softwar embed use commerci noncommerci applic see licensemd full text licens,hack dont like development noise repository want keep change check gitter hack channel quick question doesnt require issue report drop gitter help channel ask away typeface designed source code hack designed workhorse typeface source code deep root free open source typeface community expands upon contribution bitstream vera dejavu project large xheight wide aperture low contrast design make legible commonly used source code text size sweet spot run range full set change upstream source available changelog project active development welcome input contribution may view design objective instruction contribute contributingmd frequently asked question answered faq content feature quick installation package manager installation web font usage additional tool font customization resource contributing build tool acknowledgment license specimen overview feature typeface name hack category monospaced character set support ascii latin latin extended greek cyrillic powerline support yes included default included style regular bold italic bold italic quick installation note font update updating version hack sure remove previously installed version clear font cache first avoid conflict lead platformspecific rendering error many platformsdistros offer package manager automate process release window installer automate installupdate process window platform see additional detail linux download latest version hack extract file archive zip copy font file either system font folder often usrsharefonts user font folder often localsharefonts usrlocalsharefonts copy font configuration file configfontconfig either system font configuration folder often etcfontsconfd font user folder often configfontconfigconfd clear regenerate font cache index following command fccache f v confirm font installed following command fclist grep hack linux user may find font rendering improved distro instruction macos download latest version hack extract file archive zip click open follow instruction operating system enjoy window hack window installer simplifies installation window platform tool guide installation process address common rendering issue occur font installsupdates window platform tool recommended installation approach window user chromechromeos use secure shell edit following field option fontfamily hack usercss httpscdnjsdelivrnetnpmhackfontbuildwebhackcss package manager highly recommend convenience community developed package manager autoupdating utility available platform package manager release may bit delayed relative repository release package distributed package manager designed tune automate font installs update system aware hack support following package manager associated package name arch linux ttfhack chocolatey window hackfont debian fontshackttf fedora centos dnfpluginscore heliocastrohackfonts hackfonts gentoo linux mediafontshack homebrew cask o x caskroomfontsfonthack open bsd fontshackfonts opensuse hackfonts ubuntu fontshackttf visual studio package manager hackfont installation issue hack package please contact package maintainer directly web font usage hack available woff woff web font format bold italic style included default work outofthebox via strong em tag hack available jsdelivr cdnjs cdn service following snippet provide example hack web font use jsdelivr cdn adjust url path provided cdnjs click link find appropriate url switch cdnjs cdn add hack html include one following head section html file subset web font link relstylesheet hrefcdnjsdelivrnetnpmhackfontbuildwebhacksubsetcss full character set web font link relstylesheet hrefcdnjsdelivrnetnpmhackfontbuildwebhackcss add hack cs pre code fontfamily hack monospace see webfontusagemd documentation additional detail including instruction download host serve web font web server additional tool hack font customization customize build alternate glyph style althack library includes growing collection alternate glyph style used customize hack font dont like default zero style swap ufo design source slashed zero dotted zero build new font work better welcome contribution new alternate glyph style althack repository design something new work well rest typeface submit pull request althack repository others use custom build detailed build instruction available althack repository readmemd font renaming instruction support sidebyside installs upstream hack available line spacing adjustment fontline tool modifies default line spacing used hack design upm following gist installs fontline modifies line spacing desktop font file contained directory linespacesh download zip install modified unmodified version hack system modify upstream hack source released font binary would like install modified font system hack font released use fontnamepy python script define new font name binary file example install hack platform along upm line spacing adjusted version hack fifteen modify default glyph althack repository design define creation name youd like following installation renamed font show name define script switch need usage detail example provided fontnamepy repository readme resource full specimen changelog project website contributor contributing welcome contribution hack please review contributingmd document detail built hack built following free open source project font bakery postcompilation modification fontmake ufo ttf compilation fonttools opentype table readwrite fontv font version string editor ink stream editor text file templating openfv open specification semantic typeface versioning sfntwoffzopfli ttf woff web font compilation ttfautohint ttf instruction set uni unicode code point search ufodiff ufo source diffs ufolib ufo source file readswritestesting ufolint ufo source file linting ci testing woff ttf woff web font compilation acknowledgment would like acknowledge thank jsdelivr cdnjs team support hack project free web font cdn service greatly appreciate tremendous support open source software development semaphore ci team free ci testing service rapid excellent technical support tremendous asset project lastly huge thanks go unrecognized work get hack user easy access install upgrade use redistribution package manager review committee member tester others across platformsdistrosapplications perform thankless work often go unrecognized effort much appreciated license hack work source foundry author mit license bitstream vera sans mono bitstream inc reserved font name bitstream vera bitstream vera license font binary released license permit unlimited print desktop web software embedding use commercial noncommercial application see licensemd full text license
79,Shell,GitHub - dotnet/core: Home repository for .NET Core,".NET Core Home
The dotnet/core repository is a good starting point for .NET Core.
The latest major release is .NET Core 3.1. The latest patch updates are listed in .NET Core release notes.
Download the latest .NET Core SDK

.NET Core 3.1 SDK

.NET Core Releases and Daily Builds

.NET Core released builds
.NET Core daily builds

Learn about .NET Core

Learn about .NET Core
.NET Core Roadmap
Learn about the .NET platform
.NET Core release notes
.NET Core Announcements
.NET Core blog

Getting help

File a .NET Core issue
File an ASP.NET Core issue
File an issue for other components
Ask on Stack Overflow
Contact Microsoft Support
VS Developer Community Portal for ""full"" .NET Framework feedback (or via Report a Problem tool)

How to Engage, Contribute and Provide Feedback
The .NET Core team encourages contributions, both issues and PRs. The first step is finding the .NET Core repository that you want to contribute to.
Community
This project uses the .NET Foundation Code of Conduct to define expected conduct in our community.
Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting a project maintainer at conduct@dotnetfoundation.org.
.NET Foundation
The .NET Core platform is part of the .NET Foundation.
Licenses
.NET Core repos typically use either the MIT or
Apache 2 licenses for code.
Some projects license documentation and other forms of content under
Creative Commons Attribution 4.0.
See specific repos to understand the license used.
",net core home dotnetcore repository good starting point net core latest major release net core latest patch updates listed net core release notes download latest net core sdk net core sdk net core releases daily builds net core released builds net core daily builds learn net core learn net core net core roadmap learn net platform net core release notes net core announcements net core blog getting help file net core issue file aspnet core issue file issue components ask stack overflow contact microsoft support vs developer community portal full net framework feedback via report problem tool engage contribute provide feedback net core team encourages contributions issues prs first step finding net core repository want contribute community project uses net foundation code conduct define expected conduct community instances abusive harassing otherwise unacceptable behavior may reported contacting project maintainer conductdotnetfoundationorg net foundation net core platform part net foundation licenses net core repos typically use either mit apache licenses code projects license documentation forms content creative commons attribution see specific repos understand license used,net core home dotnetcor repositori good start point net core latest major releas net core latest patch updat list net core releas note download latest net core sdk net core sdk net core releas daili build net core releas build net core daili build learn net core learn net core net core roadmap learn net platform net core releas note net core announc net core blog get help file net core issu file aspnet core issu file issu compon ask stack overflow contact microsoft support vs develop commun portal full net framework feedback via report problem tool engag contribut provid feedback net core team encourag contribut issu pr first step find net core repositori want contribut commun project use net foundat code conduct defin expect conduct commun instanc abus harass otherwis unaccept behavior may report contact project maintain conductdotnetfoundationorg net foundat net core platform part net foundat licens net core repo typic use either mit apach licens code project licens document form content creativ common attribut see specif repo understand licens use,net core home dotnetcore repository good starting point net core latest major release net core latest patch update listed net core release note download latest net core sdk net core sdk net core release daily build net core released build net core daily build learn net core learn net core net core roadmap learn net platform net core release note net core announcement net core blog getting help file net core issue file aspnet core issue file issue component ask stack overflow contact microsoft support v developer community portal full net framework feedback via report problem tool engage contribute provide feedback net core team encourages contribution issue pr first step finding net core repository want contribute community project us net foundation code conduct define expected conduct community instance abusive harassing otherwise unacceptable behavior may reported contacting project maintainer conductdotnetfoundationorg net foundation net core platform part net foundation license net core repos typically use either mit apache license code project license documentation form content creative common attribution see specific repos understand license used
